; ModuleID = '/home/carl/AnghaBench/postgres/src/backend/utils/misc/extr_guc.c_write_auto_conf_file.c'
source_filename = "/home/carl/AnghaBench/postgres/src/backend/utils/misc/extr_guc.c_write_auto_conf_file.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_8__ = type { i8*, i32, %struct.TYPE_8__* }
%struct.TYPE_7__ = type { i64, i32 }

@.str = private unnamed_addr constant [35 x i8] c"# Do not edit this file manually!\0A\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"# It will be overwritten by the ALTER SYSTEM command.\0A\00", align 1
@errno = common dso_local global i64 0, align 8
@ENOSPC = common dso_local global i64 0, align 8
@ERROR = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [33 x i8] c"could not write to file \22%s\22: %m\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c" = '\00", align 1
@ERRCODE_OUT_OF_MEMORY = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"'\0A\00", align 1
@.str.6 = private unnamed_addr constant [30 x i8] c"could not fsync file \22%s\22: %m\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i32, i8*, %struct.TYPE_8__*)* @write_auto_conf_file to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @write_auto_conf_file(i32 %0, i8* %1, %struct.TYPE_8__* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca %struct.TYPE_8__*, align 8
  %7 = alloca %struct.TYPE_7__, align 8
  %8 = alloca %struct.TYPE_8__*, align 8
  %9 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store %struct.TYPE_8__* %2, %struct.TYPE_8__** %6, align 8
  %10 = call i32 @initStringInfo(%struct.TYPE_7__* %7)
  %11 = call i32 @appendStringInfoString(%struct.TYPE_7__* %7, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0))
  %12 = call i32 @appendStringInfoString(%struct.TYPE_7__* %7, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0))
  store i64 0, i64* @errno, align 8
  %13 = load i32, i32* %4, align 4
  %14 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %7, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %7, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = call i64 @write(i32 %13, i32 %15, i64 %17)
  %19 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %7, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp ne i64 %18, %20
  br i1 %21, label %22, label %33

22:                                               ; preds = %3
  %23 = load i64, i64* @errno, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = load i64, i64* @ENOSPC, align 8
  store i64 %26, i64* @errno, align 8
  br label %27

27:                                               ; preds = %25, %22
  %28 = load i32, i32* @ERROR, align 4
  %29 = call i32 (...) @errcode_for_file_access()
  %30 = load i8*, i8** %5, align 8
  %31 = call i32 (i8*, ...) @errmsg(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %30)
  %32 = call i32 @ereport(i32 %28, i32 %31)
  br label %33

33:                                               ; preds = %27, %3
  %34 = load %struct.TYPE_8__*, %struct.TYPE_8__** %6, align 8
  store %struct.TYPE_8__* %34, %struct.TYPE_8__** %8, align 8
  br label %35

35:                                               ; preds = %84, %33
  %36 = load %struct.TYPE_8__*, %struct.TYPE_8__** %8, align 8
  %37 = icmp ne %struct.TYPE_8__* %36, null
  br i1 %37, label %38, label %88

38:                                               ; preds = %35
  %39 = call i32 @resetStringInfo(%struct.TYPE_7__* %7)
  %40 = load %struct.TYPE_8__*, %struct.TYPE_8__** %8, align 8
  %41 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %40, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = call i32 @appendStringInfoString(%struct.TYPE_7__* %7, i8* %42)
  %44 = call i32 @appendStringInfoString(%struct.TYPE_7__* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0))
  %45 = load %struct.TYPE_8__*, %struct.TYPE_8__** %8, align 8
  %46 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %45, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = call i8* @escape_single_quotes_ascii(i32 %47)
  store i8* %48, i8** %9, align 8
  %49 = load i8*, i8** %9, align 8
  %50 = icmp ne i8* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %38
  %52 = load i32, i32* @ERROR, align 4
  %53 = load i32, i32* @ERRCODE_OUT_OF_MEMORY, align 4
  %54 = call i32 @errcode(i32 %53)
  %55 = call i32 (i8*, ...) @errmsg(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %56 = call i32 @ereport(i32 %52, i32 %55)
  br label %57

57:                                               ; preds = %51, %38
  %58 = load i8*, i8** %9, align 8
  %59 = call i32 @appendStringInfoString(%struct.TYPE_7__* %7, i8* %58)
  %60 = load i8*, i8** %9, align 8
  %61 = call i32 @free(i8* %60)
  %62 = call i32 @appendStringInfoString(%struct.TYPE_7__* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0))
  store i64 0, i64* @errno, align 8
  %63 = load i32, i32* %4, align 4
  %64 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %7, i32 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %7, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = call i64 @write(i32 %63, i32 %65, i64 %67)
  %69 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %7, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = icmp ne i64 %68, %70
  br i1 %71, label %72, label %83

72:                                               ; preds = %57
  %73 = load i64, i64* @errno, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %72
  %76 = load i64, i64* @ENOSPC, align 8
  store i64 %76, i64* @errno, align 8
  br label %77

77:                                               ; preds = %75, %72
  %78 = load i32, i32* @ERROR, align 4
  %79 = call i32 (...) @errcode_for_file_access()
  %80 = load i8*, i8** %5, align 8
  %81 = call i32 (i8*, ...) @errmsg(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %80)
  %82 = call i32 @ereport(i32 %78, i32 %81)
  br label %83

83:                                               ; preds = %77, %57
  br label %84

84:                                               ; preds = %83
  %85 = load %struct.TYPE_8__*, %struct.TYPE_8__** %8, align 8
  %86 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %85, i32 0, i32 2
  %87 = load %struct.TYPE_8__*, %struct.TYPE_8__** %86, align 8
  store %struct.TYPE_8__* %87, %struct.TYPE_8__** %8, align 8
  br label %35

88:                                               ; preds = %35
  %89 = load i32, i32* %4, align 4
  %90 = call i64 @pg_fsync(i32 %89)
  %91 = icmp ne i64 %90, 0
  br i1 %91, label %92, label %98

92:                                               ; preds = %88
  %93 = load i32, i32* @ERROR, align 4
  %94 = call i32 (...) @errcode_for_file_access()
  %95 = load i8*, i8** %5, align 8
  %96 = call i32 (i8*, ...) @errmsg(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0), i8* %95)
  %97 = call i32 @ereport(i32 %93, i32 %96)
  br label %98

98:                                               ; preds = %92, %88
  %99 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %7, i32 0, i32 1
  %100 = load i32, i32* %99, align 8
  %101 = call i32 @pfree(i32 %100)
  ret void
}

declare dso_local i32 @initStringInfo(%struct.TYPE_7__*) #1

declare dso_local i32 @appendStringInfoString(%struct.TYPE_7__*, i8*) #1

declare dso_local i64 @write(i32, i32, i64) #1

declare dso_local i32 @ereport(i32, i32) #1

declare dso_local i32 @errcode_for_file_access(...) #1

declare dso_local i32 @errmsg(i8*, ...) #1

declare dso_local i32 @resetStringInfo(%struct.TYPE_7__*) #1

declare dso_local i8* @escape_single_quotes_ascii(i32) #1

declare dso_local i32 @errcode(i32) #1

declare dso_local i32 @free(i8*) #1

declare dso_local i64 @pg_fsync(i32) #1

declare dso_local i32 @pfree(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
