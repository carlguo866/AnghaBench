; ModuleID = '/home/carl/AnghaBench/redis/src/extr_module.c_moduleRegisterCoreAPI.c'
source_filename = "/home/carl/AnghaBench/redis/src/extr_module.c_moduleRegisterCoreAPI.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i8*, i8* }

@moduleAPIDictType = common dso_local global i32 0, align 4
@server = common dso_local global %struct.TYPE_2__ zeroinitializer, align 8
@Alloc = common dso_local global i32 0, align 4
@Calloc = common dso_local global i32 0, align 4
@Realloc = common dso_local global i32 0, align 4
@Free = common dso_local global i32 0, align 4
@Strdup = common dso_local global i32 0, align 4
@CreateCommand = common dso_local global i32 0, align 4
@SetModuleAttribs = common dso_local global i32 0, align 4
@IsModuleNameBusy = common dso_local global i32 0, align 4
@WrongArity = common dso_local global i32 0, align 4
@ReplyWithLongLong = common dso_local global i32 0, align 4
@ReplyWithError = common dso_local global i32 0, align 4
@ReplyWithSimpleString = common dso_local global i32 0, align 4
@ReplyWithArray = common dso_local global i32 0, align 4
@ReplyWithNullArray = common dso_local global i32 0, align 4
@ReplyWithEmptyArray = common dso_local global i32 0, align 4
@ReplySetArrayLength = common dso_local global i32 0, align 4
@ReplyWithString = common dso_local global i32 0, align 4
@ReplyWithEmptyString = common dso_local global i32 0, align 4
@ReplyWithVerbatimString = common dso_local global i32 0, align 4
@ReplyWithStringBuffer = common dso_local global i32 0, align 4
@ReplyWithCString = common dso_local global i32 0, align 4
@ReplyWithNull = common dso_local global i32 0, align 4
@ReplyWithCallReply = common dso_local global i32 0, align 4
@ReplyWithDouble = common dso_local global i32 0, align 4
@GetSelectedDb = common dso_local global i32 0, align 4
@SelectDb = common dso_local global i32 0, align 4
@OpenKey = common dso_local global i32 0, align 4
@CloseKey = common dso_local global i32 0, align 4
@KeyType = common dso_local global i32 0, align 4
@ValueLength = common dso_local global i32 0, align 4
@ListPush = common dso_local global i32 0, align 4
@ListPop = common dso_local global i32 0, align 4
@StringToLongLong = common dso_local global i32 0, align 4
@StringToDouble = common dso_local global i32 0, align 4
@Call = common dso_local global i32 0, align 4
@CallReplyProto = common dso_local global i32 0, align 4
@FreeCallReply = common dso_local global i32 0, align 4
@CallReplyInteger = common dso_local global i32 0, align 4
@CallReplyType = common dso_local global i32 0, align 4
@CallReplyLength = common dso_local global i32 0, align 4
@CallReplyArrayElement = common dso_local global i32 0, align 4
@CallReplyStringPtr = common dso_local global i32 0, align 4
@CreateStringFromCallReply = common dso_local global i32 0, align 4
@CreateString = common dso_local global i32 0, align 4
@CreateStringFromLongLong = common dso_local global i32 0, align 4
@CreateStringFromString = common dso_local global i32 0, align 4
@CreateStringPrintf = common dso_local global i32 0, align 4
@FreeString = common dso_local global i32 0, align 4
@StringPtrLen = common dso_local global i32 0, align 4
@AutoMemory = common dso_local global i32 0, align 4
@Replicate = common dso_local global i32 0, align 4
@ReplicateVerbatim = common dso_local global i32 0, align 4
@DeleteKey = common dso_local global i32 0, align 4
@UnlinkKey = common dso_local global i32 0, align 4
@StringSet = common dso_local global i32 0, align 4
@StringDMA = common dso_local global i32 0, align 4
@StringTruncate = common dso_local global i32 0, align 4
@SetExpire = common dso_local global i32 0, align 4
@GetExpire = common dso_local global i32 0, align 4
@ResetDataset = common dso_local global i32 0, align 4
@DbSize = common dso_local global i32 0, align 4
@RandomKey = common dso_local global i32 0, align 4
@ZsetAdd = common dso_local global i32 0, align 4
@ZsetIncrby = common dso_local global i32 0, align 4
@ZsetScore = common dso_local global i32 0, align 4
@ZsetRem = common dso_local global i32 0, align 4
@ZsetRangeStop = common dso_local global i32 0, align 4
@ZsetFirstInScoreRange = common dso_local global i32 0, align 4
@ZsetLastInScoreRange = common dso_local global i32 0, align 4
@ZsetFirstInLexRange = common dso_local global i32 0, align 4
@ZsetLastInLexRange = common dso_local global i32 0, align 4
@ZsetRangeCurrentElement = common dso_local global i32 0, align 4
@ZsetRangeNext = common dso_local global i32 0, align 4
@ZsetRangePrev = common dso_local global i32 0, align 4
@ZsetRangeEndReached = common dso_local global i32 0, align 4
@HashSet = common dso_local global i32 0, align 4
@HashGet = common dso_local global i32 0, align 4
@IsKeysPositionRequest = common dso_local global i32 0, align 4
@KeyAtPos = common dso_local global i32 0, align 4
@GetClientId = common dso_local global i32 0, align 4
@GetContextFlags = common dso_local global i32 0, align 4
@PoolAlloc = common dso_local global i32 0, align 4
@CreateDataType = common dso_local global i32 0, align 4
@ModuleTypeSetValue = common dso_local global i32 0, align 4
@ModuleTypeGetType = common dso_local global i32 0, align 4
@ModuleTypeGetValue = common dso_local global i32 0, align 4
@IsIOError = common dso_local global i32 0, align 4
@SetModuleOptions = common dso_local global i32 0, align 4
@SignalModifiedKey = common dso_local global i32 0, align 4
@SaveUnsigned = common dso_local global i32 0, align 4
@LoadUnsigned = common dso_local global i32 0, align 4
@SaveSigned = common dso_local global i32 0, align 4
@LoadSigned = common dso_local global i32 0, align 4
@SaveString = common dso_local global i32 0, align 4
@SaveStringBuffer = common dso_local global i32 0, align 4
@LoadString = common dso_local global i32 0, align 4
@LoadStringBuffer = common dso_local global i32 0, align 4
@SaveDouble = common dso_local global i32 0, align 4
@LoadDouble = common dso_local global i32 0, align 4
@SaveFloat = common dso_local global i32 0, align 4
@LoadFloat = common dso_local global i32 0, align 4
@SaveLongDouble = common dso_local global i32 0, align 4
@LoadLongDouble = common dso_local global i32 0, align 4
@EmitAOF = common dso_local global i32 0, align 4
@Log = common dso_local global i32 0, align 4
@LogIOError = common dso_local global i32 0, align 4
@_Assert = common dso_local global i32 0, align 4
@LatencyAddSample = common dso_local global i32 0, align 4
@StringAppendBuffer = common dso_local global i32 0, align 4
@RetainString = common dso_local global i32 0, align 4
@StringCompare = common dso_local global i32 0, align 4
@GetContextFromIO = common dso_local global i32 0, align 4
@GetKeyNameFromIO = common dso_local global i32 0, align 4
@GetKeyNameFromModuleKey = common dso_local global i32 0, align 4
@BlockClient = common dso_local global i32 0, align 4
@UnblockClient = common dso_local global i32 0, align 4
@IsBlockedReplyRequest = common dso_local global i32 0, align 4
@IsBlockedTimeoutRequest = common dso_local global i32 0, align 4
@GetBlockedClientPrivateData = common dso_local global i32 0, align 4
@AbortBlock = common dso_local global i32 0, align 4
@Milliseconds = common dso_local global i32 0, align 4
@GetThreadSafeContext = common dso_local global i32 0, align 4
@FreeThreadSafeContext = common dso_local global i32 0, align 4
@ThreadSafeContextLock = common dso_local global i32 0, align 4
@ThreadSafeContextUnlock = common dso_local global i32 0, align 4
@DigestAddStringBuffer = common dso_local global i32 0, align 4
@DigestAddLongLong = common dso_local global i32 0, align 4
@DigestEndSequence = common dso_local global i32 0, align 4
@NotifyKeyspaceEvent = common dso_local global i32 0, align 4
@GetNotifyKeyspaceEvents = common dso_local global i32 0, align 4
@SubscribeToKeyspaceEvents = common dso_local global i32 0, align 4
@RegisterClusterMessageReceiver = common dso_local global i32 0, align 4
@SendClusterMessage = common dso_local global i32 0, align 4
@GetClusterNodeInfo = common dso_local global i32 0, align 4
@GetClusterNodesList = common dso_local global i32 0, align 4
@FreeClusterNodesList = common dso_local global i32 0, align 4
@CreateTimer = common dso_local global i32 0, align 4
@StopTimer = common dso_local global i32 0, align 4
@GetTimerInfo = common dso_local global i32 0, align 4
@GetMyClusterID = common dso_local global i32 0, align 4
@GetClusterSize = common dso_local global i32 0, align 4
@GetRandomBytes = common dso_local global i32 0, align 4
@GetRandomHexChars = common dso_local global i32 0, align 4
@BlockedClientDisconnected = common dso_local global i32 0, align 4
@SetDisconnectCallback = common dso_local global i32 0, align 4
@GetBlockedClientHandle = common dso_local global i32 0, align 4
@SetClusterFlags = common dso_local global i32 0, align 4
@CreateDict = common dso_local global i32 0, align 4
@FreeDict = common dso_local global i32 0, align 4
@DictSize = common dso_local global i32 0, align 4
@DictSetC = common dso_local global i32 0, align 4
@DictReplaceC = common dso_local global i32 0, align 4
@DictSet = common dso_local global i32 0, align 4
@DictReplace = common dso_local global i32 0, align 4
@DictGetC = common dso_local global i32 0, align 4
@DictGet = common dso_local global i32 0, align 4
@DictDelC = common dso_local global i32 0, align 4
@DictDel = common dso_local global i32 0, align 4
@DictIteratorStartC = common dso_local global i32 0, align 4
@DictIteratorStart = common dso_local global i32 0, align 4
@DictIteratorStop = common dso_local global i32 0, align 4
@DictIteratorReseekC = common dso_local global i32 0, align 4
@DictIteratorReseek = common dso_local global i32 0, align 4
@DictNextC = common dso_local global i32 0, align 4
@DictPrevC = common dso_local global i32 0, align 4
@DictNext = common dso_local global i32 0, align 4
@DictPrev = common dso_local global i32 0, align 4
@DictCompareC = common dso_local global i32 0, align 4
@DictCompare = common dso_local global i32 0, align 4
@ExportSharedAPI = common dso_local global i32 0, align 4
@GetSharedAPI = common dso_local global i32 0, align 4
@RegisterCommandFilter = common dso_local global i32 0, align 4
@UnregisterCommandFilter = common dso_local global i32 0, align 4
@CommandFilterArgsCount = common dso_local global i32 0, align 4
@CommandFilterArgGet = common dso_local global i32 0, align 4
@CommandFilterArgInsert = common dso_local global i32 0, align 4
@CommandFilterArgReplace = common dso_local global i32 0, align 4
@CommandFilterArgDelete = common dso_local global i32 0, align 4
@Fork = common dso_local global i32 0, align 4
@ExitFromChild = common dso_local global i32 0, align 4
@KillForkChild = common dso_local global i32 0, align 4
@RegisterInfoFunc = common dso_local global i32 0, align 4
@InfoAddSection = common dso_local global i32 0, align 4
@InfoBeginDictField = common dso_local global i32 0, align 4
@InfoEndDictField = common dso_local global i32 0, align 4
@InfoAddFieldString = common dso_local global i32 0, align 4
@InfoAddFieldCString = common dso_local global i32 0, align 4
@InfoAddFieldDouble = common dso_local global i32 0, align 4
@InfoAddFieldLongLong = common dso_local global i32 0, align 4
@InfoAddFieldULongLong = common dso_local global i32 0, align 4
@GetClientInfoById = common dso_local global i32 0, align 4
@PublishMessage = common dso_local global i32 0, align 4
@SubscribeToServerEvent = common dso_local global i32 0, align 4
@SetLRUOrLFU = common dso_local global i32 0, align 4
@GetLRUOrLFU = common dso_local global i32 0, align 4
@BlockClientOnKeys = common dso_local global i32 0, align 4
@SignalKeyAsReady = common dso_local global i32 0, align 4
@GetBlockedClientReadyKey = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @moduleRegisterCoreAPI() #0 {
  %1 = call i8* @dictCreate(i32* @moduleAPIDictType, i32* null)
  store i8* %1, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @server, i32 0, i32 1), align 8
  %2 = call i8* @dictCreate(i32* @moduleAPIDictType, i32* null)
  store i8* %2, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @server, i32 0, i32 0), align 8
  %3 = load i32, i32* @Alloc, align 4
  %4 = call i32 @REGISTER_API(i32 %3)
  %5 = load i32, i32* @Calloc, align 4
  %6 = call i32 @REGISTER_API(i32 %5)
  %7 = load i32, i32* @Realloc, align 4
  %8 = call i32 @REGISTER_API(i32 %7)
  %9 = load i32, i32* @Free, align 4
  %10 = call i32 @REGISTER_API(i32 %9)
  %11 = load i32, i32* @Strdup, align 4
  %12 = call i32 @REGISTER_API(i32 %11)
  %13 = load i32, i32* @CreateCommand, align 4
  %14 = call i32 @REGISTER_API(i32 %13)
  %15 = load i32, i32* @SetModuleAttribs, align 4
  %16 = call i32 @REGISTER_API(i32 %15)
  %17 = load i32, i32* @IsModuleNameBusy, align 4
  %18 = call i32 @REGISTER_API(i32 %17)
  %19 = load i32, i32* @WrongArity, align 4
  %20 = call i32 @REGISTER_API(i32 %19)
  %21 = load i32, i32* @ReplyWithLongLong, align 4
  %22 = call i32 @REGISTER_API(i32 %21)
  %23 = load i32, i32* @ReplyWithError, align 4
  %24 = call i32 @REGISTER_API(i32 %23)
  %25 = load i32, i32* @ReplyWithSimpleString, align 4
  %26 = call i32 @REGISTER_API(i32 %25)
  %27 = load i32, i32* @ReplyWithArray, align 4
  %28 = call i32 @REGISTER_API(i32 %27)
  %29 = load i32, i32* @ReplyWithNullArray, align 4
  %30 = call i32 @REGISTER_API(i32 %29)
  %31 = load i32, i32* @ReplyWithEmptyArray, align 4
  %32 = call i32 @REGISTER_API(i32 %31)
  %33 = load i32, i32* @ReplySetArrayLength, align 4
  %34 = call i32 @REGISTER_API(i32 %33)
  %35 = load i32, i32* @ReplyWithString, align 4
  %36 = call i32 @REGISTER_API(i32 %35)
  %37 = load i32, i32* @ReplyWithEmptyString, align 4
  %38 = call i32 @REGISTER_API(i32 %37)
  %39 = load i32, i32* @ReplyWithVerbatimString, align 4
  %40 = call i32 @REGISTER_API(i32 %39)
  %41 = load i32, i32* @ReplyWithStringBuffer, align 4
  %42 = call i32 @REGISTER_API(i32 %41)
  %43 = load i32, i32* @ReplyWithCString, align 4
  %44 = call i32 @REGISTER_API(i32 %43)
  %45 = load i32, i32* @ReplyWithNull, align 4
  %46 = call i32 @REGISTER_API(i32 %45)
  %47 = load i32, i32* @ReplyWithCallReply, align 4
  %48 = call i32 @REGISTER_API(i32 %47)
  %49 = load i32, i32* @ReplyWithDouble, align 4
  %50 = call i32 @REGISTER_API(i32 %49)
  %51 = load i32, i32* @GetSelectedDb, align 4
  %52 = call i32 @REGISTER_API(i32 %51)
  %53 = load i32, i32* @SelectDb, align 4
  %54 = call i32 @REGISTER_API(i32 %53)
  %55 = load i32, i32* @OpenKey, align 4
  %56 = call i32 @REGISTER_API(i32 %55)
  %57 = load i32, i32* @CloseKey, align 4
  %58 = call i32 @REGISTER_API(i32 %57)
  %59 = load i32, i32* @KeyType, align 4
  %60 = call i32 @REGISTER_API(i32 %59)
  %61 = load i32, i32* @ValueLength, align 4
  %62 = call i32 @REGISTER_API(i32 %61)
  %63 = load i32, i32* @ListPush, align 4
  %64 = call i32 @REGISTER_API(i32 %63)
  %65 = load i32, i32* @ListPop, align 4
  %66 = call i32 @REGISTER_API(i32 %65)
  %67 = load i32, i32* @StringToLongLong, align 4
  %68 = call i32 @REGISTER_API(i32 %67)
  %69 = load i32, i32* @StringToDouble, align 4
  %70 = call i32 @REGISTER_API(i32 %69)
  %71 = load i32, i32* @Call, align 4
  %72 = call i32 @REGISTER_API(i32 %71)
  %73 = load i32, i32* @CallReplyProto, align 4
  %74 = call i32 @REGISTER_API(i32 %73)
  %75 = load i32, i32* @FreeCallReply, align 4
  %76 = call i32 @REGISTER_API(i32 %75)
  %77 = load i32, i32* @CallReplyInteger, align 4
  %78 = call i32 @REGISTER_API(i32 %77)
  %79 = load i32, i32* @CallReplyType, align 4
  %80 = call i32 @REGISTER_API(i32 %79)
  %81 = load i32, i32* @CallReplyLength, align 4
  %82 = call i32 @REGISTER_API(i32 %81)
  %83 = load i32, i32* @CallReplyArrayElement, align 4
  %84 = call i32 @REGISTER_API(i32 %83)
  %85 = load i32, i32* @CallReplyStringPtr, align 4
  %86 = call i32 @REGISTER_API(i32 %85)
  %87 = load i32, i32* @CreateStringFromCallReply, align 4
  %88 = call i32 @REGISTER_API(i32 %87)
  %89 = load i32, i32* @CreateString, align 4
  %90 = call i32 @REGISTER_API(i32 %89)
  %91 = load i32, i32* @CreateStringFromLongLong, align 4
  %92 = call i32 @REGISTER_API(i32 %91)
  %93 = load i32, i32* @CreateStringFromString, align 4
  %94 = call i32 @REGISTER_API(i32 %93)
  %95 = load i32, i32* @CreateStringPrintf, align 4
  %96 = call i32 @REGISTER_API(i32 %95)
  %97 = load i32, i32* @FreeString, align 4
  %98 = call i32 @REGISTER_API(i32 %97)
  %99 = load i32, i32* @StringPtrLen, align 4
  %100 = call i32 @REGISTER_API(i32 %99)
  %101 = load i32, i32* @AutoMemory, align 4
  %102 = call i32 @REGISTER_API(i32 %101)
  %103 = load i32, i32* @Replicate, align 4
  %104 = call i32 @REGISTER_API(i32 %103)
  %105 = load i32, i32* @ReplicateVerbatim, align 4
  %106 = call i32 @REGISTER_API(i32 %105)
  %107 = load i32, i32* @DeleteKey, align 4
  %108 = call i32 @REGISTER_API(i32 %107)
  %109 = load i32, i32* @UnlinkKey, align 4
  %110 = call i32 @REGISTER_API(i32 %109)
  %111 = load i32, i32* @StringSet, align 4
  %112 = call i32 @REGISTER_API(i32 %111)
  %113 = load i32, i32* @StringDMA, align 4
  %114 = call i32 @REGISTER_API(i32 %113)
  %115 = load i32, i32* @StringTruncate, align 4
  %116 = call i32 @REGISTER_API(i32 %115)
  %117 = load i32, i32* @SetExpire, align 4
  %118 = call i32 @REGISTER_API(i32 %117)
  %119 = load i32, i32* @GetExpire, align 4
  %120 = call i32 @REGISTER_API(i32 %119)
  %121 = load i32, i32* @ResetDataset, align 4
  %122 = call i32 @REGISTER_API(i32 %121)
  %123 = load i32, i32* @DbSize, align 4
  %124 = call i32 @REGISTER_API(i32 %123)
  %125 = load i32, i32* @RandomKey, align 4
  %126 = call i32 @REGISTER_API(i32 %125)
  %127 = load i32, i32* @ZsetAdd, align 4
  %128 = call i32 @REGISTER_API(i32 %127)
  %129 = load i32, i32* @ZsetIncrby, align 4
  %130 = call i32 @REGISTER_API(i32 %129)
  %131 = load i32, i32* @ZsetScore, align 4
  %132 = call i32 @REGISTER_API(i32 %131)
  %133 = load i32, i32* @ZsetRem, align 4
  %134 = call i32 @REGISTER_API(i32 %133)
  %135 = load i32, i32* @ZsetRangeStop, align 4
  %136 = call i32 @REGISTER_API(i32 %135)
  %137 = load i32, i32* @ZsetFirstInScoreRange, align 4
  %138 = call i32 @REGISTER_API(i32 %137)
  %139 = load i32, i32* @ZsetLastInScoreRange, align 4
  %140 = call i32 @REGISTER_API(i32 %139)
  %141 = load i32, i32* @ZsetFirstInLexRange, align 4
  %142 = call i32 @REGISTER_API(i32 %141)
  %143 = load i32, i32* @ZsetLastInLexRange, align 4
  %144 = call i32 @REGISTER_API(i32 %143)
  %145 = load i32, i32* @ZsetRangeCurrentElement, align 4
  %146 = call i32 @REGISTER_API(i32 %145)
  %147 = load i32, i32* @ZsetRangeNext, align 4
  %148 = call i32 @REGISTER_API(i32 %147)
  %149 = load i32, i32* @ZsetRangePrev, align 4
  %150 = call i32 @REGISTER_API(i32 %149)
  %151 = load i32, i32* @ZsetRangeEndReached, align 4
  %152 = call i32 @REGISTER_API(i32 %151)
  %153 = load i32, i32* @HashSet, align 4
  %154 = call i32 @REGISTER_API(i32 %153)
  %155 = load i32, i32* @HashGet, align 4
  %156 = call i32 @REGISTER_API(i32 %155)
  %157 = load i32, i32* @IsKeysPositionRequest, align 4
  %158 = call i32 @REGISTER_API(i32 %157)
  %159 = load i32, i32* @KeyAtPos, align 4
  %160 = call i32 @REGISTER_API(i32 %159)
  %161 = load i32, i32* @GetClientId, align 4
  %162 = call i32 @REGISTER_API(i32 %161)
  %163 = load i32, i32* @GetContextFlags, align 4
  %164 = call i32 @REGISTER_API(i32 %163)
  %165 = load i32, i32* @PoolAlloc, align 4
  %166 = call i32 @REGISTER_API(i32 %165)
  %167 = load i32, i32* @CreateDataType, align 4
  %168 = call i32 @REGISTER_API(i32 %167)
  %169 = load i32, i32* @ModuleTypeSetValue, align 4
  %170 = call i32 @REGISTER_API(i32 %169)
  %171 = load i32, i32* @ModuleTypeGetType, align 4
  %172 = call i32 @REGISTER_API(i32 %171)
  %173 = load i32, i32* @ModuleTypeGetValue, align 4
  %174 = call i32 @REGISTER_API(i32 %173)
  %175 = load i32, i32* @IsIOError, align 4
  %176 = call i32 @REGISTER_API(i32 %175)
  %177 = load i32, i32* @SetModuleOptions, align 4
  %178 = call i32 @REGISTER_API(i32 %177)
  %179 = load i32, i32* @SignalModifiedKey, align 4
  %180 = call i32 @REGISTER_API(i32 %179)
  %181 = load i32, i32* @SaveUnsigned, align 4
  %182 = call i32 @REGISTER_API(i32 %181)
  %183 = load i32, i32* @LoadUnsigned, align 4
  %184 = call i32 @REGISTER_API(i32 %183)
  %185 = load i32, i32* @SaveSigned, align 4
  %186 = call i32 @REGISTER_API(i32 %185)
  %187 = load i32, i32* @LoadSigned, align 4
  %188 = call i32 @REGISTER_API(i32 %187)
  %189 = load i32, i32* @SaveString, align 4
  %190 = call i32 @REGISTER_API(i32 %189)
  %191 = load i32, i32* @SaveStringBuffer, align 4
  %192 = call i32 @REGISTER_API(i32 %191)
  %193 = load i32, i32* @LoadString, align 4
  %194 = call i32 @REGISTER_API(i32 %193)
  %195 = load i32, i32* @LoadStringBuffer, align 4
  %196 = call i32 @REGISTER_API(i32 %195)
  %197 = load i32, i32* @SaveDouble, align 4
  %198 = call i32 @REGISTER_API(i32 %197)
  %199 = load i32, i32* @LoadDouble, align 4
  %200 = call i32 @REGISTER_API(i32 %199)
  %201 = load i32, i32* @SaveFloat, align 4
  %202 = call i32 @REGISTER_API(i32 %201)
  %203 = load i32, i32* @LoadFloat, align 4
  %204 = call i32 @REGISTER_API(i32 %203)
  %205 = load i32, i32* @SaveLongDouble, align 4
  %206 = call i32 @REGISTER_API(i32 %205)
  %207 = load i32, i32* @LoadLongDouble, align 4
  %208 = call i32 @REGISTER_API(i32 %207)
  %209 = load i32, i32* @EmitAOF, align 4
  %210 = call i32 @REGISTER_API(i32 %209)
  %211 = load i32, i32* @Log, align 4
  %212 = call i32 @REGISTER_API(i32 %211)
  %213 = load i32, i32* @LogIOError, align 4
  %214 = call i32 @REGISTER_API(i32 %213)
  %215 = load i32, i32* @_Assert, align 4
  %216 = call i32 @REGISTER_API(i32 %215)
  %217 = load i32, i32* @LatencyAddSample, align 4
  %218 = call i32 @REGISTER_API(i32 %217)
  %219 = load i32, i32* @StringAppendBuffer, align 4
  %220 = call i32 @REGISTER_API(i32 %219)
  %221 = load i32, i32* @RetainString, align 4
  %222 = call i32 @REGISTER_API(i32 %221)
  %223 = load i32, i32* @StringCompare, align 4
  %224 = call i32 @REGISTER_API(i32 %223)
  %225 = load i32, i32* @GetContextFromIO, align 4
  %226 = call i32 @REGISTER_API(i32 %225)
  %227 = load i32, i32* @GetKeyNameFromIO, align 4
  %228 = call i32 @REGISTER_API(i32 %227)
  %229 = load i32, i32* @GetKeyNameFromModuleKey, align 4
  %230 = call i32 @REGISTER_API(i32 %229)
  %231 = load i32, i32* @BlockClient, align 4
  %232 = call i32 @REGISTER_API(i32 %231)
  %233 = load i32, i32* @UnblockClient, align 4
  %234 = call i32 @REGISTER_API(i32 %233)
  %235 = load i32, i32* @IsBlockedReplyRequest, align 4
  %236 = call i32 @REGISTER_API(i32 %235)
  %237 = load i32, i32* @IsBlockedTimeoutRequest, align 4
  %238 = call i32 @REGISTER_API(i32 %237)
  %239 = load i32, i32* @GetBlockedClientPrivateData, align 4
  %240 = call i32 @REGISTER_API(i32 %239)
  %241 = load i32, i32* @AbortBlock, align 4
  %242 = call i32 @REGISTER_API(i32 %241)
  %243 = load i32, i32* @Milliseconds, align 4
  %244 = call i32 @REGISTER_API(i32 %243)
  %245 = load i32, i32* @GetThreadSafeContext, align 4
  %246 = call i32 @REGISTER_API(i32 %245)
  %247 = load i32, i32* @FreeThreadSafeContext, align 4
  %248 = call i32 @REGISTER_API(i32 %247)
  %249 = load i32, i32* @ThreadSafeContextLock, align 4
  %250 = call i32 @REGISTER_API(i32 %249)
  %251 = load i32, i32* @ThreadSafeContextUnlock, align 4
  %252 = call i32 @REGISTER_API(i32 %251)
  %253 = load i32, i32* @DigestAddStringBuffer, align 4
  %254 = call i32 @REGISTER_API(i32 %253)
  %255 = load i32, i32* @DigestAddLongLong, align 4
  %256 = call i32 @REGISTER_API(i32 %255)
  %257 = load i32, i32* @DigestEndSequence, align 4
  %258 = call i32 @REGISTER_API(i32 %257)
  %259 = load i32, i32* @NotifyKeyspaceEvent, align 4
  %260 = call i32 @REGISTER_API(i32 %259)
  %261 = load i32, i32* @GetNotifyKeyspaceEvents, align 4
  %262 = call i32 @REGISTER_API(i32 %261)
  %263 = load i32, i32* @SubscribeToKeyspaceEvents, align 4
  %264 = call i32 @REGISTER_API(i32 %263)
  %265 = load i32, i32* @RegisterClusterMessageReceiver, align 4
  %266 = call i32 @REGISTER_API(i32 %265)
  %267 = load i32, i32* @SendClusterMessage, align 4
  %268 = call i32 @REGISTER_API(i32 %267)
  %269 = load i32, i32* @GetClusterNodeInfo, align 4
  %270 = call i32 @REGISTER_API(i32 %269)
  %271 = load i32, i32* @GetClusterNodesList, align 4
  %272 = call i32 @REGISTER_API(i32 %271)
  %273 = load i32, i32* @FreeClusterNodesList, align 4
  %274 = call i32 @REGISTER_API(i32 %273)
  %275 = load i32, i32* @CreateTimer, align 4
  %276 = call i32 @REGISTER_API(i32 %275)
  %277 = load i32, i32* @StopTimer, align 4
  %278 = call i32 @REGISTER_API(i32 %277)
  %279 = load i32, i32* @GetTimerInfo, align 4
  %280 = call i32 @REGISTER_API(i32 %279)
  %281 = load i32, i32* @GetMyClusterID, align 4
  %282 = call i32 @REGISTER_API(i32 %281)
  %283 = load i32, i32* @GetClusterSize, align 4
  %284 = call i32 @REGISTER_API(i32 %283)
  %285 = load i32, i32* @GetRandomBytes, align 4
  %286 = call i32 @REGISTER_API(i32 %285)
  %287 = load i32, i32* @GetRandomHexChars, align 4
  %288 = call i32 @REGISTER_API(i32 %287)
  %289 = load i32, i32* @BlockedClientDisconnected, align 4
  %290 = call i32 @REGISTER_API(i32 %289)
  %291 = load i32, i32* @SetDisconnectCallback, align 4
  %292 = call i32 @REGISTER_API(i32 %291)
  %293 = load i32, i32* @GetBlockedClientHandle, align 4
  %294 = call i32 @REGISTER_API(i32 %293)
  %295 = load i32, i32* @SetClusterFlags, align 4
  %296 = call i32 @REGISTER_API(i32 %295)
  %297 = load i32, i32* @CreateDict, align 4
  %298 = call i32 @REGISTER_API(i32 %297)
  %299 = load i32, i32* @FreeDict, align 4
  %300 = call i32 @REGISTER_API(i32 %299)
  %301 = load i32, i32* @DictSize, align 4
  %302 = call i32 @REGISTER_API(i32 %301)
  %303 = load i32, i32* @DictSetC, align 4
  %304 = call i32 @REGISTER_API(i32 %303)
  %305 = load i32, i32* @DictReplaceC, align 4
  %306 = call i32 @REGISTER_API(i32 %305)
  %307 = load i32, i32* @DictSet, align 4
  %308 = call i32 @REGISTER_API(i32 %307)
  %309 = load i32, i32* @DictReplace, align 4
  %310 = call i32 @REGISTER_API(i32 %309)
  %311 = load i32, i32* @DictGetC, align 4
  %312 = call i32 @REGISTER_API(i32 %311)
  %313 = load i32, i32* @DictGet, align 4
  %314 = call i32 @REGISTER_API(i32 %313)
  %315 = load i32, i32* @DictDelC, align 4
  %316 = call i32 @REGISTER_API(i32 %315)
  %317 = load i32, i32* @DictDel, align 4
  %318 = call i32 @REGISTER_API(i32 %317)
  %319 = load i32, i32* @DictIteratorStartC, align 4
  %320 = call i32 @REGISTER_API(i32 %319)
  %321 = load i32, i32* @DictIteratorStart, align 4
  %322 = call i32 @REGISTER_API(i32 %321)
  %323 = load i32, i32* @DictIteratorStop, align 4
  %324 = call i32 @REGISTER_API(i32 %323)
  %325 = load i32, i32* @DictIteratorReseekC, align 4
  %326 = call i32 @REGISTER_API(i32 %325)
  %327 = load i32, i32* @DictIteratorReseek, align 4
  %328 = call i32 @REGISTER_API(i32 %327)
  %329 = load i32, i32* @DictNextC, align 4
  %330 = call i32 @REGISTER_API(i32 %329)
  %331 = load i32, i32* @DictPrevC, align 4
  %332 = call i32 @REGISTER_API(i32 %331)
  %333 = load i32, i32* @DictNext, align 4
  %334 = call i32 @REGISTER_API(i32 %333)
  %335 = load i32, i32* @DictPrev, align 4
  %336 = call i32 @REGISTER_API(i32 %335)
  %337 = load i32, i32* @DictCompareC, align 4
  %338 = call i32 @REGISTER_API(i32 %337)
  %339 = load i32, i32* @DictCompare, align 4
  %340 = call i32 @REGISTER_API(i32 %339)
  %341 = load i32, i32* @ExportSharedAPI, align 4
  %342 = call i32 @REGISTER_API(i32 %341)
  %343 = load i32, i32* @GetSharedAPI, align 4
  %344 = call i32 @REGISTER_API(i32 %343)
  %345 = load i32, i32* @RegisterCommandFilter, align 4
  %346 = call i32 @REGISTER_API(i32 %345)
  %347 = load i32, i32* @UnregisterCommandFilter, align 4
  %348 = call i32 @REGISTER_API(i32 %347)
  %349 = load i32, i32* @CommandFilterArgsCount, align 4
  %350 = call i32 @REGISTER_API(i32 %349)
  %351 = load i32, i32* @CommandFilterArgGet, align 4
  %352 = call i32 @REGISTER_API(i32 %351)
  %353 = load i32, i32* @CommandFilterArgInsert, align 4
  %354 = call i32 @REGISTER_API(i32 %353)
  %355 = load i32, i32* @CommandFilterArgReplace, align 4
  %356 = call i32 @REGISTER_API(i32 %355)
  %357 = load i32, i32* @CommandFilterArgDelete, align 4
  %358 = call i32 @REGISTER_API(i32 %357)
  %359 = load i32, i32* @Fork, align 4
  %360 = call i32 @REGISTER_API(i32 %359)
  %361 = load i32, i32* @ExitFromChild, align 4
  %362 = call i32 @REGISTER_API(i32 %361)
  %363 = load i32, i32* @KillForkChild, align 4
  %364 = call i32 @REGISTER_API(i32 %363)
  %365 = load i32, i32* @RegisterInfoFunc, align 4
  %366 = call i32 @REGISTER_API(i32 %365)
  %367 = load i32, i32* @InfoAddSection, align 4
  %368 = call i32 @REGISTER_API(i32 %367)
  %369 = load i32, i32* @InfoBeginDictField, align 4
  %370 = call i32 @REGISTER_API(i32 %369)
  %371 = load i32, i32* @InfoEndDictField, align 4
  %372 = call i32 @REGISTER_API(i32 %371)
  %373 = load i32, i32* @InfoAddFieldString, align 4
  %374 = call i32 @REGISTER_API(i32 %373)
  %375 = load i32, i32* @InfoAddFieldCString, align 4
  %376 = call i32 @REGISTER_API(i32 %375)
  %377 = load i32, i32* @InfoAddFieldDouble, align 4
  %378 = call i32 @REGISTER_API(i32 %377)
  %379 = load i32, i32* @InfoAddFieldLongLong, align 4
  %380 = call i32 @REGISTER_API(i32 %379)
  %381 = load i32, i32* @InfoAddFieldULongLong, align 4
  %382 = call i32 @REGISTER_API(i32 %381)
  %383 = load i32, i32* @GetClientInfoById, align 4
  %384 = call i32 @REGISTER_API(i32 %383)
  %385 = load i32, i32* @PublishMessage, align 4
  %386 = call i32 @REGISTER_API(i32 %385)
  %387 = load i32, i32* @SubscribeToServerEvent, align 4
  %388 = call i32 @REGISTER_API(i32 %387)
  %389 = load i32, i32* @SetLRUOrLFU, align 4
  %390 = call i32 @REGISTER_API(i32 %389)
  %391 = load i32, i32* @GetLRUOrLFU, align 4
  %392 = call i32 @REGISTER_API(i32 %391)
  %393 = load i32, i32* @BlockClientOnKeys, align 4
  %394 = call i32 @REGISTER_API(i32 %393)
  %395 = load i32, i32* @SignalKeyAsReady, align 4
  %396 = call i32 @REGISTER_API(i32 %395)
  %397 = load i32, i32* @GetBlockedClientReadyKey, align 4
  %398 = call i32 @REGISTER_API(i32 %397)
  ret void
}

declare dso_local i8* @dictCreate(i32*, i32*) #1

declare dso_local i32 @REGISTER_API(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
