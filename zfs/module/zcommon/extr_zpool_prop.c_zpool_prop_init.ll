; ModuleID = '/home/carl/AnghaBench/zfs/module/zcommon/extr_zpool_prop.c_zpool_prop_init.c'
source_filename = "/home/carl/AnghaBench/zfs/module/zcommon/extr_zpool_prop.c_zpool_prop_init.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_3__ = type { i8*, i32 }

@zpool_prop_init.boolean_table = internal global [3 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 0 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i32 1 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"on\00", align 1
@zpool_prop_init.failuremode_table = internal global [4 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 128 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0), i32 130 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i32 129 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str.2 = private unnamed_addr constant [5 x i8] c"wait\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"continue\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"panic\00", align 1
@ZPOOL_PROP_ALTROOT = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [8 x i8] c"altroot\00", align 1
@PROP_DEFAULT = common dso_local global i32 0, align 4
@ZFS_TYPE_POOL = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [7 x i8] c"<path>\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"ALTROOT\00", align 1
@ZPOOL_PROP_BOOTFS = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [7 x i8] c"bootfs\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"<filesystem>\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"BOOTFS\00", align 1
@ZPOOL_PROP_CACHEFILE = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [10 x i8] c"cachefile\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"<file> | none\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"CACHEFILE\00", align 1
@ZPOOL_PROP_COMMENT = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [8 x i8] c"comment\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"<comment-string>\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"COMMENT\00", align 1
@ZPOOL_PROP_SIZE = common dso_local global i32 0, align 4
@.str.17 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@PROP_READONLY = common dso_local global i32 0, align 4
@.str.18 = private unnamed_addr constant [7 x i8] c"<size>\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"SIZE\00", align 1
@ZPOOL_PROP_FREE = common dso_local global i32 0, align 4
@.str.20 = private unnamed_addr constant [5 x i8] c"free\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"FREE\00", align 1
@ZPOOL_PROP_FREEING = common dso_local global i32 0, align 4
@.str.22 = private unnamed_addr constant [8 x i8] c"freeing\00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"FREEING\00", align 1
@ZPOOL_PROP_CHECKPOINT = common dso_local global i32 0, align 4
@.str.24 = private unnamed_addr constant [11 x i8] c"checkpoint\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"CKPOINT\00", align 1
@ZPOOL_PROP_LEAKED = common dso_local global i32 0, align 4
@.str.26 = private unnamed_addr constant [7 x i8] c"leaked\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"LEAKED\00", align 1
@ZPOOL_PROP_ALLOCATED = common dso_local global i32 0, align 4
@.str.28 = private unnamed_addr constant [10 x i8] c"allocated\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"ALLOC\00", align 1
@ZPOOL_PROP_EXPANDSZ = common dso_local global i32 0, align 4
@.str.30 = private unnamed_addr constant [11 x i8] c"expandsize\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"EXPANDSZ\00", align 1
@ZPOOL_PROP_FRAGMENTATION = common dso_local global i32 0, align 4
@.str.32 = private unnamed_addr constant [14 x i8] c"fragmentation\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"<percent>\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"FRAG\00", align 1
@ZPOOL_PROP_CAPACITY = common dso_local global i32 0, align 4
@.str.35 = private unnamed_addr constant [9 x i8] c"capacity\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"CAP\00", align 1
@ZPOOL_PROP_GUID = common dso_local global i32 0, align 4
@.str.37 = private unnamed_addr constant [5 x i8] c"guid\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"<guid>\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"GUID\00", align 1
@ZPOOL_PROP_LOAD_GUID = common dso_local global i32 0, align 4
@.str.40 = private unnamed_addr constant [10 x i8] c"load_guid\00", align 1
@.str.41 = private unnamed_addr constant [12 x i8] c"<load_guid>\00", align 1
@.str.42 = private unnamed_addr constant [10 x i8] c"LOAD_GUID\00", align 1
@ZPOOL_PROP_HEALTH = common dso_local global i32 0, align 4
@.str.43 = private unnamed_addr constant [7 x i8] c"health\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"<state>\00", align 1
@.str.45 = private unnamed_addr constant [7 x i8] c"HEALTH\00", align 1
@ZPOOL_PROP_DEDUPRATIO = common dso_local global i32 0, align 4
@.str.46 = private unnamed_addr constant [11 x i8] c"dedupratio\00", align 1
@.str.47 = private unnamed_addr constant [29 x i8] c"<1.00x or higher if deduped>\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"DEDUP\00", align 1
@ZPOOL_PROP_VERSION = common dso_local global i32 0, align 4
@.str.49 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@SPA_VERSION = common dso_local global i32 0, align 4
@.str.50 = private unnamed_addr constant [10 x i8] c"<version>\00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"VERSION\00", align 1
@ZPOOL_PROP_ASHIFT = common dso_local global i32 0, align 4
@.str.52 = private unnamed_addr constant [7 x i8] c"ashift\00", align 1
@.str.53 = private unnamed_addr constant [29 x i8] c"<ashift, 9-16, or 0=default>\00", align 1
@.str.54 = private unnamed_addr constant [7 x i8] c"ASHIFT\00", align 1
@ZPOOL_PROP_DELEGATION = common dso_local global i32 0, align 4
@.str.55 = private unnamed_addr constant [11 x i8] c"delegation\00", align 1
@.str.56 = private unnamed_addr constant [9 x i8] c"on | off\00", align 1
@.str.57 = private unnamed_addr constant [11 x i8] c"DELEGATION\00", align 1
@ZPOOL_PROP_AUTOREPLACE = common dso_local global i32 0, align 4
@.str.58 = private unnamed_addr constant [12 x i8] c"autoreplace\00", align 1
@.str.59 = private unnamed_addr constant [8 x i8] c"REPLACE\00", align 1
@ZPOOL_PROP_LISTSNAPS = common dso_local global i32 0, align 4
@.str.60 = private unnamed_addr constant [14 x i8] c"listsnapshots\00", align 1
@.str.61 = private unnamed_addr constant [10 x i8] c"LISTSNAPS\00", align 1
@ZPOOL_PROP_AUTOEXPAND = common dso_local global i32 0, align 4
@.str.62 = private unnamed_addr constant [11 x i8] c"autoexpand\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"EXPAND\00", align 1
@ZPOOL_PROP_READONLY = common dso_local global i32 0, align 4
@.str.64 = private unnamed_addr constant [9 x i8] c"readonly\00", align 1
@.str.65 = private unnamed_addr constant [7 x i8] c"RDONLY\00", align 1
@ZPOOL_PROP_MULTIHOST = common dso_local global i32 0, align 4
@.str.66 = private unnamed_addr constant [10 x i8] c"multihost\00", align 1
@.str.67 = private unnamed_addr constant [10 x i8] c"MULTIHOST\00", align 1
@ZPOOL_PROP_FAILUREMODE = common dso_local global i32 0, align 4
@.str.68 = private unnamed_addr constant [9 x i8] c"failmode\00", align 1
@.str.69 = private unnamed_addr constant [24 x i8] c"wait | continue | panic\00", align 1
@.str.70 = private unnamed_addr constant [9 x i8] c"FAILMODE\00", align 1
@ZPOOL_PROP_AUTOTRIM = common dso_local global i32 0, align 4
@.str.71 = private unnamed_addr constant [9 x i8] c"autotrim\00", align 1
@SPA_AUTOTRIM_OFF = common dso_local global i32 0, align 4
@.str.72 = private unnamed_addr constant [9 x i8] c"AUTOTRIM\00", align 1
@ZPOOL_PROP_NAME = common dso_local global i32 0, align 4
@.str.73 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@PROP_TYPE_STRING = common dso_local global i32 0, align 4
@.str.74 = private unnamed_addr constant [5 x i8] c"NAME\00", align 1
@ZPOOL_PROP_MAXBLOCKSIZE = common dso_local global i32 0, align 4
@.str.75 = private unnamed_addr constant [13 x i8] c"maxblocksize\00", align 1
@PROP_TYPE_NUMBER = common dso_local global i32 0, align 4
@.str.76 = private unnamed_addr constant [13 x i8] c"MAXBLOCKSIZE\00", align 1
@ZPOOL_PROP_TNAME = common dso_local global i32 0, align 4
@.str.77 = private unnamed_addr constant [6 x i8] c"tname\00", align 1
@PROP_ONETIME = common dso_local global i32 0, align 4
@.str.78 = private unnamed_addr constant [6 x i8] c"TNAME\00", align 1
@ZPOOL_PROP_MAXDNODESIZE = common dso_local global i32 0, align 4
@.str.79 = private unnamed_addr constant [13 x i8] c"maxdnodesize\00", align 1
@.str.80 = private unnamed_addr constant [13 x i8] c"MAXDNODESIZE\00", align 1
@ZPOOL_PROP_DEDUPDITTO = common dso_local global i32 0, align 4
@.str.81 = private unnamed_addr constant [11 x i8] c"dedupditto\00", align 1
@.str.82 = private unnamed_addr constant [11 x i8] c"DEDUPDITTO\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @zpool_prop_init() #0 {
  %1 = load i32, i32* @ZPOOL_PROP_ALTROOT, align 4
  %2 = load i32, i32* @PROP_DEFAULT, align 4
  %3 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %4 = call i32 @zprop_register_string(i32 %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i32* null, i32 %2, i32 %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0))
  %5 = load i32, i32* @ZPOOL_PROP_BOOTFS, align 4
  %6 = load i32, i32* @PROP_DEFAULT, align 4
  %7 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %8 = call i32 @zprop_register_string(i32 %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i32* null, i32 %6, i32 %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0))
  %9 = load i32, i32* @ZPOOL_PROP_CACHEFILE, align 4
  %10 = load i32, i32* @PROP_DEFAULT, align 4
  %11 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %12 = call i32 @zprop_register_string(i32 %9, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i32* null, i32 %10, i32 %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0))
  %13 = load i32, i32* @ZPOOL_PROP_COMMENT, align 4
  %14 = load i32, i32* @PROP_DEFAULT, align 4
  %15 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %16 = call i32 @zprop_register_string(i32 %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i32* null, i32 %14, i32 %15, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0))
  %17 = load i32, i32* @ZPOOL_PROP_SIZE, align 4
  %18 = load i32, i32* @PROP_READONLY, align 4
  %19 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %20 = call i32 @zprop_register_number(i32 %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i32 0, i32 %18, i32 %19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0))
  %21 = load i32, i32* @ZPOOL_PROP_FREE, align 4
  %22 = load i32, i32* @PROP_READONLY, align 4
  %23 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %24 = call i32 @zprop_register_number(i32 %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0), i32 0, i32 %22, i32 %23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0))
  %25 = load i32, i32* @ZPOOL_PROP_FREEING, align 4
  %26 = load i32, i32* @PROP_READONLY, align 4
  %27 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %28 = call i32 @zprop_register_number(i32 %25, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i64 0, i64 0), i32 0, i32 %26, i32 %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0))
  %29 = load i32, i32* @ZPOOL_PROP_CHECKPOINT, align 4
  %30 = load i32, i32* @PROP_READONLY, align 4
  %31 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %32 = call i32 @zprop_register_number(i32 %29, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0), i32 0, i32 %30, i32 %31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0))
  %33 = load i32, i32* @ZPOOL_PROP_LEAKED, align 4
  %34 = load i32, i32* @PROP_READONLY, align 4
  %35 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %36 = call i32 @zprop_register_number(i32 %33, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i32 0, i32 %34, i32 %35, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i64 0, i64 0))
  %37 = load i32, i32* @ZPOOL_PROP_ALLOCATED, align 4
  %38 = load i32, i32* @PROP_READONLY, align 4
  %39 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %40 = call i32 @zprop_register_number(i32 %37, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i64 0, i64 0), i32 0, i32 %38, i32 %39, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0))
  %41 = load i32, i32* @ZPOOL_PROP_EXPANDSZ, align 4
  %42 = load i32, i32* @PROP_READONLY, align 4
  %43 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %44 = call i32 @zprop_register_number(i32 %41, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i32 0, i32 %42, i32 %43, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i64 0, i64 0))
  %45 = load i32, i32* @ZPOOL_PROP_FRAGMENTATION, align 4
  %46 = load i32, i32* @PROP_READONLY, align 4
  %47 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %48 = call i32 @zprop_register_number(i32 %45, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.32, i64 0, i64 0), i32 0, i32 %46, i32 %47, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i64 0, i64 0))
  %49 = load i32, i32* @ZPOOL_PROP_CAPACITY, align 4
  %50 = load i32, i32* @PROP_READONLY, align 4
  %51 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %52 = call i32 @zprop_register_number(i32 %49, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i64 0, i64 0), i32 0, i32 %50, i32 %51, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0))
  %53 = load i32, i32* @ZPOOL_PROP_GUID, align 4
  %54 = load i32, i32* @PROP_READONLY, align 4
  %55 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %56 = call i32 @zprop_register_number(i32 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i64 0, i64 0), i32 0, i32 %54, i32 %55, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0))
  %57 = load i32, i32* @ZPOOL_PROP_LOAD_GUID, align 4
  %58 = load i32, i32* @PROP_READONLY, align 4
  %59 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %60 = call i32 @zprop_register_number(i32 %57, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0), i32 0, i32 %58, i32 %59, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i64 0, i64 0))
  %61 = load i32, i32* @ZPOOL_PROP_HEALTH, align 4
  %62 = load i32, i32* @PROP_READONLY, align 4
  %63 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %64 = call i32 @zprop_register_number(i32 %61, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i64 0, i64 0), i32 0, i32 %62, i32 %63, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0))
  %65 = load i32, i32* @ZPOOL_PROP_DEDUPRATIO, align 4
  %66 = load i32, i32* @PROP_READONLY, align 4
  %67 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %68 = call i32 @zprop_register_number(i32 %65, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i64 0, i64 0), i32 0, i32 %66, i32 %67, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i64 0, i64 0))
  %69 = load i32, i32* @ZPOOL_PROP_VERSION, align 4
  %70 = load i32, i32* @SPA_VERSION, align 4
  %71 = load i32, i32* @PROP_DEFAULT, align 4
  %72 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %73 = call i32 @zprop_register_number(i32 %69, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i64 0, i64 0), i32 %70, i32 %71, i32 %72, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i64 0, i64 0))
  %74 = load i32, i32* @ZPOOL_PROP_ASHIFT, align 4
  %75 = load i32, i32* @PROP_DEFAULT, align 4
  %76 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %77 = call i32 @zprop_register_number(i32 %74, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i64 0, i64 0), i32 0, i32 %75, i32 %76, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54, i64 0, i64 0))
  %78 = load i32, i32* @ZPOOL_PROP_DELEGATION, align 4
  %79 = load i32, i32* @PROP_DEFAULT, align 4
  %80 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %81 = call i32 @zprop_register_index(i32 %78, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i64 0, i64 0), i32 1, i32 %79, i32 %80, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.57, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zpool_prop_init.boolean_table, i64 0, i64 0))
  %82 = load i32, i32* @ZPOOL_PROP_AUTOREPLACE, align 4
  %83 = load i32, i32* @PROP_DEFAULT, align 4
  %84 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %85 = call i32 @zprop_register_index(i32 %82, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.58, i64 0, i64 0), i32 0, i32 %83, i32 %84, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zpool_prop_init.boolean_table, i64 0, i64 0))
  %86 = load i32, i32* @ZPOOL_PROP_LISTSNAPS, align 4
  %87 = load i32, i32* @PROP_DEFAULT, align 4
  %88 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %89 = call i32 @zprop_register_index(i32 %86, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i64 0, i64 0), i32 0, i32 %87, i32 %88, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.61, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zpool_prop_init.boolean_table, i64 0, i64 0))
  %90 = load i32, i32* @ZPOOL_PROP_AUTOEXPAND, align 4
  %91 = load i32, i32* @PROP_DEFAULT, align 4
  %92 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %93 = call i32 @zprop_register_index(i32 %90, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.62, i64 0, i64 0), i32 0, i32 %91, i32 %92, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zpool_prop_init.boolean_table, i64 0, i64 0))
  %94 = load i32, i32* @ZPOOL_PROP_READONLY, align 4
  %95 = load i32, i32* @PROP_DEFAULT, align 4
  %96 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %97 = call i32 @zprop_register_index(i32 %94, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.64, i64 0, i64 0), i32 0, i32 %95, i32 %96, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.65, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zpool_prop_init.boolean_table, i64 0, i64 0))
  %98 = load i32, i32* @ZPOOL_PROP_MULTIHOST, align 4
  %99 = load i32, i32* @PROP_DEFAULT, align 4
  %100 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %101 = call i32 @zprop_register_index(i32 %98, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.66, i64 0, i64 0), i32 0, i32 %99, i32 %100, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zpool_prop_init.boolean_table, i64 0, i64 0))
  %102 = load i32, i32* @ZPOOL_PROP_FAILUREMODE, align 4
  %103 = load i32, i32* @PROP_DEFAULT, align 4
  %104 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %105 = call i32 @zprop_register_index(i32 %102, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.68, i64 0, i64 0), i32 128, i32 %103, i32 %104, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.70, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([4 x %struct.TYPE_3__], [4 x %struct.TYPE_3__]* @zpool_prop_init.failuremode_table, i64 0, i64 0))
  %106 = load i32, i32* @ZPOOL_PROP_AUTOTRIM, align 4
  %107 = load i32, i32* @SPA_AUTOTRIM_OFF, align 4
  %108 = load i32, i32* @PROP_DEFAULT, align 4
  %109 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %110 = call i32 @zprop_register_index(i32 %106, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71, i64 0, i64 0), i32 %107, i32 %108, i32 %109, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.72, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zpool_prop_init.boolean_table, i64 0, i64 0))
  %111 = load i32, i32* @ZPOOL_PROP_NAME, align 4
  %112 = load i32, i32* @PROP_TYPE_STRING, align 4
  %113 = load i32, i32* @PROP_READONLY, align 4
  %114 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %115 = call i32 @zprop_register_hidden(i32 %111, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.73, i64 0, i64 0), i32 %112, i32 %113, i32 %114, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.74, i64 0, i64 0))
  %116 = load i32, i32* @ZPOOL_PROP_MAXBLOCKSIZE, align 4
  %117 = load i32, i32* @PROP_TYPE_NUMBER, align 4
  %118 = load i32, i32* @PROP_READONLY, align 4
  %119 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %120 = call i32 @zprop_register_hidden(i32 %116, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.75, i64 0, i64 0), i32 %117, i32 %118, i32 %119, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.76, i64 0, i64 0))
  %121 = load i32, i32* @ZPOOL_PROP_TNAME, align 4
  %122 = load i32, i32* @PROP_TYPE_STRING, align 4
  %123 = load i32, i32* @PROP_ONETIME, align 4
  %124 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %125 = call i32 @zprop_register_hidden(i32 %121, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.77, i64 0, i64 0), i32 %122, i32 %123, i32 %124, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i64 0, i64 0))
  %126 = load i32, i32* @ZPOOL_PROP_MAXDNODESIZE, align 4
  %127 = load i32, i32* @PROP_TYPE_NUMBER, align 4
  %128 = load i32, i32* @PROP_READONLY, align 4
  %129 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %130 = call i32 @zprop_register_hidden(i32 %126, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.79, i64 0, i64 0), i32 %127, i32 %128, i32 %129, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.80, i64 0, i64 0))
  %131 = load i32, i32* @ZPOOL_PROP_DEDUPDITTO, align 4
  %132 = load i32, i32* @PROP_TYPE_NUMBER, align 4
  %133 = load i32, i32* @PROP_DEFAULT, align 4
  %134 = load i32, i32* @ZFS_TYPE_POOL, align 4
  %135 = call i32 @zprop_register_hidden(i32 %131, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.81, i64 0, i64 0), i32 %132, i32 %133, i32 %134, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.82, i64 0, i64 0))
  ret void
}

declare dso_local i32 @zprop_register_string(i32, i8*, i32*, i32, i32, i8*, i8*) #1

declare dso_local i32 @zprop_register_number(i32, i8*, i32, i32, i32, i8*, i8*) #1

declare dso_local i32 @zprop_register_index(i32, i8*, i32, i32, i32, i8*, i8*, %struct.TYPE_3__*) #1

declare dso_local i32 @zprop_register_hidden(i32, i8*, i32, i32, i32, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
