; ModuleID = '/home/carl/AnghaBench/zfs/module/icp/algs/aes/extr_aes_impl_generic.c_aes_generic_decrypt.c'
source_filename = "/home/carl/AnghaBench/zfs/module/icp/algs/aes/extr_aes_impl_generic.c_aes_generic_decrypt.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@Td0 = common dso_local global i32* null, align 8
@Td1 = common dso_local global i32* null, align 8
@Td2 = common dso_local global i32* null, align 8
@Td3 = common dso_local global i32* null, align 8
@Td4 = common dso_local global i32* null, align 8
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i32*, i32, i32*, i32*)* @aes_generic_decrypt to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @aes_generic_decrypt(i32* %0, i32 %1, i32* %2, i32* %3) #0 {
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store i32* %0, i32** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %18 = load i32*, i32** %7, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 0
  %20 = load i32, i32* %19, align 4
  %21 = load i32*, i32** %5, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 0
  %23 = load i32, i32* %22, align 4
  %24 = xor i32 %20, %23
  store i32 %24, i32* %9, align 4
  %25 = load i32*, i32** %7, align 8
  %26 = getelementptr inbounds i32, i32* %25, i64 1
  %27 = load i32, i32* %26, align 4
  %28 = load i32*, i32** %5, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 1
  %30 = load i32, i32* %29, align 4
  %31 = xor i32 %27, %30
  store i32 %31, i32* %10, align 4
  %32 = load i32*, i32** %7, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 2
  %34 = load i32, i32* %33, align 4
  %35 = load i32*, i32** %5, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 2
  %37 = load i32, i32* %36, align 4
  %38 = xor i32 %34, %37
  store i32 %38, i32* %11, align 4
  %39 = load i32*, i32** %7, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 3
  %41 = load i32, i32* %40, align 4
  %42 = load i32*, i32** %5, align 8
  %43 = getelementptr inbounds i32, i32* %42, i64 3
  %44 = load i32, i32* %43, align 4
  %45 = xor i32 %41, %44
  store i32 %45, i32* %12, align 4
  %46 = load i32, i32* %6, align 4
  %47 = ashr i32 %46, 1
  store i32 %47, i32* %17, align 4
  br label %48

48:                                               ; preds = %187, %4
  %49 = load i32*, i32** @Td0, align 8
  %50 = load i32, i32* %9, align 4
  %51 = ashr i32 %50, 24
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i32, i32* %49, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = load i32*, i32** @Td1, align 8
  %56 = load i32, i32* %12, align 4
  %57 = ashr i32 %56, 16
  %58 = and i32 %57, 255
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, i32* %55, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = xor i32 %54, %61
  %63 = load i32*, i32** @Td2, align 8
  %64 = load i32, i32* %11, align 4
  %65 = ashr i32 %64, 8
  %66 = and i32 %65, 255
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %63, i64 %67
  %69 = load i32, i32* %68, align 4
  %70 = xor i32 %62, %69
  %71 = load i32*, i32** @Td3, align 8
  %72 = load i32, i32* %10, align 4
  %73 = and i32 %72, 255
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i32, i32* %71, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = xor i32 %70, %76
  %78 = load i32*, i32** %5, align 8
  %79 = getelementptr inbounds i32, i32* %78, i64 4
  %80 = load i32, i32* %79, align 4
  %81 = xor i32 %77, %80
  store i32 %81, i32* %13, align 4
  %82 = load i32*, i32** @Td0, align 8
  %83 = load i32, i32* %10, align 4
  %84 = ashr i32 %83, 24
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i32, i32* %82, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = load i32*, i32** @Td1, align 8
  %89 = load i32, i32* %9, align 4
  %90 = ashr i32 %89, 16
  %91 = and i32 %90, 255
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i32, i32* %88, i64 %92
  %94 = load i32, i32* %93, align 4
  %95 = xor i32 %87, %94
  %96 = load i32*, i32** @Td2, align 8
  %97 = load i32, i32* %12, align 4
  %98 = ashr i32 %97, 8
  %99 = and i32 %98, 255
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i32, i32* %96, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = xor i32 %95, %102
  %104 = load i32*, i32** @Td3, align 8
  %105 = load i32, i32* %11, align 4
  %106 = and i32 %105, 255
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i32, i32* %104, i64 %107
  %109 = load i32, i32* %108, align 4
  %110 = xor i32 %103, %109
  %111 = load i32*, i32** %5, align 8
  %112 = getelementptr inbounds i32, i32* %111, i64 5
  %113 = load i32, i32* %112, align 4
  %114 = xor i32 %110, %113
  store i32 %114, i32* %14, align 4
  %115 = load i32*, i32** @Td0, align 8
  %116 = load i32, i32* %11, align 4
  %117 = ashr i32 %116, 24
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i32, i32* %115, i64 %118
  %120 = load i32, i32* %119, align 4
  %121 = load i32*, i32** @Td1, align 8
  %122 = load i32, i32* %10, align 4
  %123 = ashr i32 %122, 16
  %124 = and i32 %123, 255
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds i32, i32* %121, i64 %125
  %127 = load i32, i32* %126, align 4
  %128 = xor i32 %120, %127
  %129 = load i32*, i32** @Td2, align 8
  %130 = load i32, i32* %9, align 4
  %131 = ashr i32 %130, 8
  %132 = and i32 %131, 255
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i32, i32* %129, i64 %133
  %135 = load i32, i32* %134, align 4
  %136 = xor i32 %128, %135
  %137 = load i32*, i32** @Td3, align 8
  %138 = load i32, i32* %12, align 4
  %139 = and i32 %138, 255
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i32, i32* %137, i64 %140
  %142 = load i32, i32* %141, align 4
  %143 = xor i32 %136, %142
  %144 = load i32*, i32** %5, align 8
  %145 = getelementptr inbounds i32, i32* %144, i64 6
  %146 = load i32, i32* %145, align 4
  %147 = xor i32 %143, %146
  store i32 %147, i32* %15, align 4
  %148 = load i32*, i32** @Td0, align 8
  %149 = load i32, i32* %12, align 4
  %150 = ashr i32 %149, 24
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i32, i32* %148, i64 %151
  %153 = load i32, i32* %152, align 4
  %154 = load i32*, i32** @Td1, align 8
  %155 = load i32, i32* %11, align 4
  %156 = ashr i32 %155, 16
  %157 = and i32 %156, 255
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i32, i32* %154, i64 %158
  %160 = load i32, i32* %159, align 4
  %161 = xor i32 %153, %160
  %162 = load i32*, i32** @Td2, align 8
  %163 = load i32, i32* %10, align 4
  %164 = ashr i32 %163, 8
  %165 = and i32 %164, 255
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i32, i32* %162, i64 %166
  %168 = load i32, i32* %167, align 4
  %169 = xor i32 %161, %168
  %170 = load i32*, i32** @Td3, align 8
  %171 = load i32, i32* %9, align 4
  %172 = and i32 %171, 255
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i32, i32* %170, i64 %173
  %175 = load i32, i32* %174, align 4
  %176 = xor i32 %169, %175
  %177 = load i32*, i32** %5, align 8
  %178 = getelementptr inbounds i32, i32* %177, i64 7
  %179 = load i32, i32* %178, align 4
  %180 = xor i32 %176, %179
  store i32 %180, i32* %16, align 4
  %181 = load i32*, i32** %5, align 8
  %182 = getelementptr inbounds i32, i32* %181, i64 8
  store i32* %182, i32** %5, align 8
  %183 = load i32, i32* %17, align 4
  %184 = add nsw i32 %183, -1
  store i32 %184, i32* %17, align 4
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %48
  br label %320

187:                                              ; preds = %48
  %188 = load i32*, i32** @Td0, align 8
  %189 = load i32, i32* %13, align 4
  %190 = ashr i32 %189, 24
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i32, i32* %188, i64 %191
  %193 = load i32, i32* %192, align 4
  %194 = load i32*, i32** @Td1, align 8
  %195 = load i32, i32* %16, align 4
  %196 = ashr i32 %195, 16
  %197 = and i32 %196, 255
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds i32, i32* %194, i64 %198
  %200 = load i32, i32* %199, align 4
  %201 = xor i32 %193, %200
  %202 = load i32*, i32** @Td2, align 8
  %203 = load i32, i32* %15, align 4
  %204 = ashr i32 %203, 8
  %205 = and i32 %204, 255
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds i32, i32* %202, i64 %206
  %208 = load i32, i32* %207, align 4
  %209 = xor i32 %201, %208
  %210 = load i32*, i32** @Td3, align 8
  %211 = load i32, i32* %14, align 4
  %212 = and i32 %211, 255
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds i32, i32* %210, i64 %213
  %215 = load i32, i32* %214, align 4
  %216 = xor i32 %209, %215
  %217 = load i32*, i32** %5, align 8
  %218 = getelementptr inbounds i32, i32* %217, i64 0
  %219 = load i32, i32* %218, align 4
  %220 = xor i32 %216, %219
  store i32 %220, i32* %9, align 4
  %221 = load i32*, i32** @Td0, align 8
  %222 = load i32, i32* %14, align 4
  %223 = ashr i32 %222, 24
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i32, i32* %221, i64 %224
  %226 = load i32, i32* %225, align 4
  %227 = load i32*, i32** @Td1, align 8
  %228 = load i32, i32* %13, align 4
  %229 = ashr i32 %228, 16
  %230 = and i32 %229, 255
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i32, i32* %227, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = xor i32 %226, %233
  %235 = load i32*, i32** @Td2, align 8
  %236 = load i32, i32* %16, align 4
  %237 = ashr i32 %236, 8
  %238 = and i32 %237, 255
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds i32, i32* %235, i64 %239
  %241 = load i32, i32* %240, align 4
  %242 = xor i32 %234, %241
  %243 = load i32*, i32** @Td3, align 8
  %244 = load i32, i32* %15, align 4
  %245 = and i32 %244, 255
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i32, i32* %243, i64 %246
  %248 = load i32, i32* %247, align 4
  %249 = xor i32 %242, %248
  %250 = load i32*, i32** %5, align 8
  %251 = getelementptr inbounds i32, i32* %250, i64 1
  %252 = load i32, i32* %251, align 4
  %253 = xor i32 %249, %252
  store i32 %253, i32* %10, align 4
  %254 = load i32*, i32** @Td0, align 8
  %255 = load i32, i32* %15, align 4
  %256 = ashr i32 %255, 24
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds i32, i32* %254, i64 %257
  %259 = load i32, i32* %258, align 4
  %260 = load i32*, i32** @Td1, align 8
  %261 = load i32, i32* %14, align 4
  %262 = ashr i32 %261, 16
  %263 = and i32 %262, 255
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds i32, i32* %260, i64 %264
  %266 = load i32, i32* %265, align 4
  %267 = xor i32 %259, %266
  %268 = load i32*, i32** @Td2, align 8
  %269 = load i32, i32* %13, align 4
  %270 = ashr i32 %269, 8
  %271 = and i32 %270, 255
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds i32, i32* %268, i64 %272
  %274 = load i32, i32* %273, align 4
  %275 = xor i32 %267, %274
  %276 = load i32*, i32** @Td3, align 8
  %277 = load i32, i32* %16, align 4
  %278 = and i32 %277, 255
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds i32, i32* %276, i64 %279
  %281 = load i32, i32* %280, align 4
  %282 = xor i32 %275, %281
  %283 = load i32*, i32** %5, align 8
  %284 = getelementptr inbounds i32, i32* %283, i64 2
  %285 = load i32, i32* %284, align 4
  %286 = xor i32 %282, %285
  store i32 %286, i32* %11, align 4
  %287 = load i32*, i32** @Td0, align 8
  %288 = load i32, i32* %16, align 4
  %289 = ashr i32 %288, 24
  %290 = sext i32 %289 to i64
  %291 = getelementptr inbounds i32, i32* %287, i64 %290
  %292 = load i32, i32* %291, align 4
  %293 = load i32*, i32** @Td1, align 8
  %294 = load i32, i32* %15, align 4
  %295 = ashr i32 %294, 16
  %296 = and i32 %295, 255
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds i32, i32* %293, i64 %297
  %299 = load i32, i32* %298, align 4
  %300 = xor i32 %292, %299
  %301 = load i32*, i32** @Td2, align 8
  %302 = load i32, i32* %14, align 4
  %303 = ashr i32 %302, 8
  %304 = and i32 %303, 255
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds i32, i32* %301, i64 %305
  %307 = load i32, i32* %306, align 4
  %308 = xor i32 %300, %307
  %309 = load i32*, i32** @Td3, align 8
  %310 = load i32, i32* %13, align 4
  %311 = and i32 %310, 255
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds i32, i32* %309, i64 %312
  %314 = load i32, i32* %313, align 4
  %315 = xor i32 %308, %314
  %316 = load i32*, i32** %5, align 8
  %317 = getelementptr inbounds i32, i32* %316, i64 3
  %318 = load i32, i32* %317, align 4
  %319 = xor i32 %315, %318
  store i32 %319, i32* %12, align 4
  br label %48

320:                                              ; preds = %186
  %321 = load i32*, i32** @Td4, align 8
  %322 = load i32, i32* %13, align 4
  %323 = ashr i32 %322, 24
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds i32, i32* %321, i64 %324
  %326 = load i32, i32* %325, align 4
  %327 = and i32 %326, -16777216
  %328 = load i32*, i32** @Td4, align 8
  %329 = load i32, i32* %16, align 4
  %330 = ashr i32 %329, 16
  %331 = and i32 %330, 255
  %332 = sext i32 %331 to i64
  %333 = getelementptr inbounds i32, i32* %328, i64 %332
  %334 = load i32, i32* %333, align 4
  %335 = and i32 %334, 16711680
  %336 = xor i32 %327, %335
  %337 = load i32*, i32** @Td4, align 8
  %338 = load i32, i32* %15, align 4
  %339 = ashr i32 %338, 8
  %340 = and i32 %339, 255
  %341 = sext i32 %340 to i64
  %342 = getelementptr inbounds i32, i32* %337, i64 %341
  %343 = load i32, i32* %342, align 4
  %344 = and i32 %343, 65280
  %345 = xor i32 %336, %344
  %346 = load i32*, i32** @Td4, align 8
  %347 = load i32, i32* %14, align 4
  %348 = and i32 %347, 255
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds i32, i32* %346, i64 %349
  %351 = load i32, i32* %350, align 4
  %352 = and i32 %351, 255
  %353 = xor i32 %345, %352
  %354 = load i32*, i32** %5, align 8
  %355 = getelementptr inbounds i32, i32* %354, i64 0
  %356 = load i32, i32* %355, align 4
  %357 = xor i32 %353, %356
  store i32 %357, i32* %9, align 4
  %358 = load i32, i32* %9, align 4
  %359 = load i32*, i32** %8, align 8
  %360 = getelementptr inbounds i32, i32* %359, i64 0
  store i32 %358, i32* %360, align 4
  %361 = load i32*, i32** @Td4, align 8
  %362 = load i32, i32* %14, align 4
  %363 = ashr i32 %362, 24
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds i32, i32* %361, i64 %364
  %366 = load i32, i32* %365, align 4
  %367 = and i32 %366, -16777216
  %368 = load i32*, i32** @Td4, align 8
  %369 = load i32, i32* %13, align 4
  %370 = ashr i32 %369, 16
  %371 = and i32 %370, 255
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds i32, i32* %368, i64 %372
  %374 = load i32, i32* %373, align 4
  %375 = and i32 %374, 16711680
  %376 = xor i32 %367, %375
  %377 = load i32*, i32** @Td4, align 8
  %378 = load i32, i32* %16, align 4
  %379 = ashr i32 %378, 8
  %380 = and i32 %379, 255
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds i32, i32* %377, i64 %381
  %383 = load i32, i32* %382, align 4
  %384 = and i32 %383, 65280
  %385 = xor i32 %376, %384
  %386 = load i32*, i32** @Td4, align 8
  %387 = load i32, i32* %15, align 4
  %388 = and i32 %387, 255
  %389 = sext i32 %388 to i64
  %390 = getelementptr inbounds i32, i32* %386, i64 %389
  %391 = load i32, i32* %390, align 4
  %392 = and i32 %391, 255
  %393 = xor i32 %385, %392
  %394 = load i32*, i32** %5, align 8
  %395 = getelementptr inbounds i32, i32* %394, i64 1
  %396 = load i32, i32* %395, align 4
  %397 = xor i32 %393, %396
  store i32 %397, i32* %10, align 4
  %398 = load i32, i32* %10, align 4
  %399 = load i32*, i32** %8, align 8
  %400 = getelementptr inbounds i32, i32* %399, i64 1
  store i32 %398, i32* %400, align 4
  %401 = load i32*, i32** @Td4, align 8
  %402 = load i32, i32* %15, align 4
  %403 = ashr i32 %402, 24
  %404 = sext i32 %403 to i64
  %405 = getelementptr inbounds i32, i32* %401, i64 %404
  %406 = load i32, i32* %405, align 4
  %407 = and i32 %406, -16777216
  %408 = load i32*, i32** @Td4, align 8
  %409 = load i32, i32* %14, align 4
  %410 = ashr i32 %409, 16
  %411 = and i32 %410, 255
  %412 = sext i32 %411 to i64
  %413 = getelementptr inbounds i32, i32* %408, i64 %412
  %414 = load i32, i32* %413, align 4
  %415 = and i32 %414, 16711680
  %416 = xor i32 %407, %415
  %417 = load i32*, i32** @Td4, align 8
  %418 = load i32, i32* %13, align 4
  %419 = ashr i32 %418, 8
  %420 = and i32 %419, 255
  %421 = sext i32 %420 to i64
  %422 = getelementptr inbounds i32, i32* %417, i64 %421
  %423 = load i32, i32* %422, align 4
  %424 = and i32 %423, 65280
  %425 = xor i32 %416, %424
  %426 = load i32*, i32** @Td4, align 8
  %427 = load i32, i32* %16, align 4
  %428 = and i32 %427, 255
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds i32, i32* %426, i64 %429
  %431 = load i32, i32* %430, align 4
  %432 = and i32 %431, 255
  %433 = xor i32 %425, %432
  %434 = load i32*, i32** %5, align 8
  %435 = getelementptr inbounds i32, i32* %434, i64 2
  %436 = load i32, i32* %435, align 4
  %437 = xor i32 %433, %436
  store i32 %437, i32* %11, align 4
  %438 = load i32, i32* %11, align 4
  %439 = load i32*, i32** %8, align 8
  %440 = getelementptr inbounds i32, i32* %439, i64 2
  store i32 %438, i32* %440, align 4
  %441 = load i32*, i32** @Td4, align 8
  %442 = load i32, i32* %16, align 4
  %443 = ashr i32 %442, 24
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds i32, i32* %441, i64 %444
  %446 = load i32, i32* %445, align 4
  %447 = and i32 %446, -16777216
  %448 = load i32*, i32** @Td4, align 8
  %449 = load i32, i32* %15, align 4
  %450 = ashr i32 %449, 16
  %451 = and i32 %450, 255
  %452 = sext i32 %451 to i64
  %453 = getelementptr inbounds i32, i32* %448, i64 %452
  %454 = load i32, i32* %453, align 4
  %455 = and i32 %454, 16711680
  %456 = xor i32 %447, %455
  %457 = load i32*, i32** @Td4, align 8
  %458 = load i32, i32* %14, align 4
  %459 = ashr i32 %458, 8
  %460 = and i32 %459, 255
  %461 = sext i32 %460 to i64
  %462 = getelementptr inbounds i32, i32* %457, i64 %461
  %463 = load i32, i32* %462, align 4
  %464 = and i32 %463, 65280
  %465 = xor i32 %456, %464
  %466 = load i32*, i32** @Td4, align 8
  %467 = load i32, i32* %13, align 4
  %468 = and i32 %467, 255
  %469 = sext i32 %468 to i64
  %470 = getelementptr inbounds i32, i32* %466, i64 %469
  %471 = load i32, i32* %470, align 4
  %472 = and i32 %471, 255
  %473 = xor i32 %465, %472
  %474 = load i32*, i32** %5, align 8
  %475 = getelementptr inbounds i32, i32* %474, i64 3
  %476 = load i32, i32* %475, align 4
  %477 = xor i32 %473, %476
  store i32 %477, i32* %12, align 4
  %478 = load i32, i32* %12, align 4
  %479 = load i32*, i32** %8, align 8
  %480 = getelementptr inbounds i32, i32* %479, i64 3
  store i32 %478, i32* %480, align 4
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
