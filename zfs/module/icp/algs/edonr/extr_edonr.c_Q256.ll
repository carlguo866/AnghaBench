; ModuleID = '/home/carl/AnghaBench/zfs/module/icp/algs/edonr/extr_edonr.c_Q256.c'
source_filename = "/home/carl/AnghaBench/zfs/module/icp/algs/edonr/extr_edonr.c_Q256.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@EdonR256_BLOCK_BITSIZE = common dso_local global i64 0, align 8
@llvm.used = appending global [1 x i8*] [i8* bitcast (i64 (i64, i32*, i32*)* @Q256 to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @Q256(i64 %0, i32* %1, i32* noalias %2) #0 {
  %4 = alloca i64, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  store i64 %0, i64* %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %41 = load i64, i64* %4, align 8
  store i64 %41, i64* %7, align 8
  br label %42

42:                                               ; preds = %503, %3
  %43 = load i64, i64* %7, align 8
  %44 = load i64, i64* @EdonR256_BLOCK_BITSIZE, align 8
  %45 = icmp uge i64 %43, %44
  br i1 %45, label %46, label %509

46:                                               ; preds = %42
  store i32 -1431655766, i32* %40, align 4
  %47 = load i32*, i32** %5, align 8
  %48 = getelementptr inbounds i32, i32* %47, i64 15
  %49 = load i32, i32* %48, align 4
  %50 = load i32*, i32** %5, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 14
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %5, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 13
  %55 = load i32, i32* %54, align 4
  %56 = load i32*, i32** %5, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 12
  %58 = load i32, i32* %57, align 4
  %59 = load i32*, i32** %5, align 8
  %60 = getelementptr inbounds i32, i32* %59, i64 11
  %61 = load i32, i32* %60, align 4
  %62 = load i32*, i32** %5, align 8
  %63 = getelementptr inbounds i32, i32* %62, i64 10
  %64 = load i32, i32* %63, align 4
  %65 = load i32*, i32** %5, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 9
  %67 = load i32, i32* %66, align 4
  %68 = load i32*, i32** %5, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 8
  %70 = load i32, i32* %69, align 4
  %71 = call i32 @LS1_256(i32 -1431655766, i32 %49, i32 %52, i32 %55, i32 %58, i32 %61, i32 %64, i32 %67, i32 %70)
  %72 = load i32*, i32** %5, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 0
  %74 = load i32, i32* %73, align 4
  %75 = load i32*, i32** %5, align 8
  %76 = getelementptr inbounds i32, i32* %75, i64 1
  %77 = load i32, i32* %76, align 4
  %78 = load i32*, i32** %5, align 8
  %79 = getelementptr inbounds i32, i32* %78, i64 2
  %80 = load i32, i32* %79, align 4
  %81 = load i32*, i32** %5, align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 3
  %83 = load i32, i32* %82, align 4
  %84 = load i32*, i32** %5, align 8
  %85 = getelementptr inbounds i32, i32* %84, i64 4
  %86 = load i32, i32* %85, align 4
  %87 = load i32*, i32** %5, align 8
  %88 = getelementptr inbounds i32, i32* %87, i64 5
  %89 = load i32, i32* %88, align 4
  %90 = load i32*, i32** %5, align 8
  %91 = getelementptr inbounds i32, i32* %90, i64 6
  %92 = load i32, i32* %91, align 4
  %93 = load i32*, i32** %5, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 7
  %95 = load i32, i32* %94, align 4
  %96 = call i32 @LS2_256(i32 -1431655766, i32 %74, i32 %77, i32 %80, i32 %83, i32 %86, i32 %89, i32 %92, i32 %95)
  %97 = load i32, i32* %24, align 4
  %98 = load i32, i32* %25, align 4
  %99 = load i32, i32* %26, align 4
  %100 = load i32, i32* %27, align 4
  %101 = load i32, i32* %28, align 4
  %102 = load i32, i32* %29, align 4
  %103 = load i32, i32* %30, align 4
  %104 = load i32, i32* %31, align 4
  %105 = call i32 @quasi_exform256(i32 %97, i32 %98, i32 %99, i32 %100, i32 %101, i32 %102, i32 %103, i32 %104)
  %106 = load i32, i32* %24, align 4
  %107 = load i32, i32* %25, align 4
  %108 = load i32, i32* %26, align 4
  %109 = load i32, i32* %27, align 4
  %110 = load i32, i32* %28, align 4
  %111 = load i32, i32* %29, align 4
  %112 = load i32, i32* %30, align 4
  %113 = load i32, i32* %31, align 4
  %114 = call i32 @LS1_256(i32 -1431655766, i32 %106, i32 %107, i32 %108, i32 %109, i32 %110, i32 %111, i32 %112, i32 %113)
  %115 = load i32*, i32** %5, align 8
  %116 = getelementptr inbounds i32, i32* %115, i64 8
  %117 = load i32, i32* %116, align 4
  %118 = load i32*, i32** %5, align 8
  %119 = getelementptr inbounds i32, i32* %118, i64 9
  %120 = load i32, i32* %119, align 4
  %121 = load i32*, i32** %5, align 8
  %122 = getelementptr inbounds i32, i32* %121, i64 10
  %123 = load i32, i32* %122, align 4
  %124 = load i32*, i32** %5, align 8
  %125 = getelementptr inbounds i32, i32* %124, i64 11
  %126 = load i32, i32* %125, align 4
  %127 = load i32*, i32** %5, align 8
  %128 = getelementptr inbounds i32, i32* %127, i64 12
  %129 = load i32, i32* %128, align 4
  %130 = load i32*, i32** %5, align 8
  %131 = getelementptr inbounds i32, i32* %130, i64 13
  %132 = load i32, i32* %131, align 4
  %133 = load i32*, i32** %5, align 8
  %134 = getelementptr inbounds i32, i32* %133, i64 14
  %135 = load i32, i32* %134, align 4
  %136 = load i32*, i32** %5, align 8
  %137 = getelementptr inbounds i32, i32* %136, i64 15
  %138 = load i32, i32* %137, align 4
  %139 = call i32 @LS2_256(i32 -1431655766, i32 %117, i32 %120, i32 %123, i32 %126, i32 %129, i32 %132, i32 %135, i32 %138)
  %140 = load i32, i32* %32, align 4
  %141 = load i32, i32* %33, align 4
  %142 = load i32, i32* %34, align 4
  %143 = load i32, i32* %35, align 4
  %144 = load i32, i32* %36, align 4
  %145 = load i32, i32* %37, align 4
  %146 = load i32, i32* %38, align 4
  %147 = load i32, i32* %39, align 4
  %148 = call i32 @quasi_exform256(i32 %140, i32 %141, i32 %142, i32 %143, i32 %144, i32 %145, i32 %146, i32 %147)
  %149 = load i32*, i32** %6, align 8
  %150 = getelementptr inbounds i32, i32* %149, i64 8
  %151 = load i32, i32* %150, align 4
  %152 = load i32*, i32** %6, align 8
  %153 = getelementptr inbounds i32, i32* %152, i64 9
  %154 = load i32, i32* %153, align 4
  %155 = load i32*, i32** %6, align 8
  %156 = getelementptr inbounds i32, i32* %155, i64 10
  %157 = load i32, i32* %156, align 4
  %158 = load i32*, i32** %6, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 11
  %160 = load i32, i32* %159, align 4
  %161 = load i32*, i32** %6, align 8
  %162 = getelementptr inbounds i32, i32* %161, i64 12
  %163 = load i32, i32* %162, align 4
  %164 = load i32*, i32** %6, align 8
  %165 = getelementptr inbounds i32, i32* %164, i64 13
  %166 = load i32, i32* %165, align 4
  %167 = load i32*, i32** %6, align 8
  %168 = getelementptr inbounds i32, i32* %167, i64 14
  %169 = load i32, i32* %168, align 4
  %170 = load i32*, i32** %6, align 8
  %171 = getelementptr inbounds i32, i32* %170, i64 15
  %172 = load i32, i32* %171, align 4
  %173 = call i32 @LS1_256(i32 -1431655766, i32 %151, i32 %154, i32 %157, i32 %160, i32 %163, i32 %166, i32 %169, i32 %172)
  %174 = load i32, i32* %24, align 4
  %175 = load i32, i32* %25, align 4
  %176 = load i32, i32* %26, align 4
  %177 = load i32, i32* %27, align 4
  %178 = load i32, i32* %28, align 4
  %179 = load i32, i32* %29, align 4
  %180 = load i32, i32* %30, align 4
  %181 = load i32, i32* %31, align 4
  %182 = call i32 @LS2_256(i32 -1431655766, i32 %174, i32 %175, i32 %176, i32 %177, i32 %178, i32 %179, i32 %180, i32 %181)
  %183 = load i32, i32* %24, align 4
  %184 = load i32, i32* %25, align 4
  %185 = load i32, i32* %26, align 4
  %186 = load i32, i32* %27, align 4
  %187 = load i32, i32* %28, align 4
  %188 = load i32, i32* %29, align 4
  %189 = load i32, i32* %30, align 4
  %190 = load i32, i32* %31, align 4
  %191 = call i32 @quasi_exform256(i32 %183, i32 %184, i32 %185, i32 %186, i32 %187, i32 %188, i32 %189, i32 %190)
  %192 = load i32, i32* %24, align 4
  %193 = load i32, i32* %25, align 4
  %194 = load i32, i32* %26, align 4
  %195 = load i32, i32* %27, align 4
  %196 = load i32, i32* %28, align 4
  %197 = load i32, i32* %29, align 4
  %198 = load i32, i32* %30, align 4
  %199 = load i32, i32* %31, align 4
  %200 = call i32 @LS1_256(i32 -1431655766, i32 %192, i32 %193, i32 %194, i32 %195, i32 %196, i32 %197, i32 %198, i32 %199)
  %201 = load i32, i32* %32, align 4
  %202 = load i32, i32* %33, align 4
  %203 = load i32, i32* %34, align 4
  %204 = load i32, i32* %35, align 4
  %205 = load i32, i32* %36, align 4
  %206 = load i32, i32* %37, align 4
  %207 = load i32, i32* %38, align 4
  %208 = load i32, i32* %39, align 4
  %209 = call i32 @LS2_256(i32 -1431655766, i32 %201, i32 %202, i32 %203, i32 %204, i32 %205, i32 %206, i32 %207, i32 %208)
  %210 = load i32, i32* %32, align 4
  %211 = load i32, i32* %33, align 4
  %212 = load i32, i32* %34, align 4
  %213 = load i32, i32* %35, align 4
  %214 = load i32, i32* %36, align 4
  %215 = load i32, i32* %37, align 4
  %216 = load i32, i32* %38, align 4
  %217 = load i32, i32* %39, align 4
  %218 = call i32 @quasi_exform256(i32 %210, i32 %211, i32 %212, i32 %213, i32 %214, i32 %215, i32 %216, i32 %217)
  %219 = load i32, i32* %24, align 4
  %220 = load i32, i32* %25, align 4
  %221 = load i32, i32* %26, align 4
  %222 = load i32, i32* %27, align 4
  %223 = load i32, i32* %28, align 4
  %224 = load i32, i32* %29, align 4
  %225 = load i32, i32* %30, align 4
  %226 = load i32, i32* %31, align 4
  %227 = call i32 @LS1_256(i32 -1431655766, i32 %219, i32 %220, i32 %221, i32 %222, i32 %223, i32 %224, i32 %225, i32 %226)
  %228 = load i32*, i32** %6, align 8
  %229 = getelementptr inbounds i32, i32* %228, i64 0
  %230 = load i32, i32* %229, align 4
  %231 = load i32*, i32** %6, align 8
  %232 = getelementptr inbounds i32, i32* %231, i64 1
  %233 = load i32, i32* %232, align 4
  %234 = load i32*, i32** %6, align 8
  %235 = getelementptr inbounds i32, i32* %234, i64 2
  %236 = load i32, i32* %235, align 4
  %237 = load i32*, i32** %6, align 8
  %238 = getelementptr inbounds i32, i32* %237, i64 3
  %239 = load i32, i32* %238, align 4
  %240 = load i32*, i32** %6, align 8
  %241 = getelementptr inbounds i32, i32* %240, i64 4
  %242 = load i32, i32* %241, align 4
  %243 = load i32*, i32** %6, align 8
  %244 = getelementptr inbounds i32, i32* %243, i64 5
  %245 = load i32, i32* %244, align 4
  %246 = load i32*, i32** %6, align 8
  %247 = getelementptr inbounds i32, i32* %246, i64 6
  %248 = load i32, i32* %247, align 4
  %249 = load i32*, i32** %6, align 8
  %250 = getelementptr inbounds i32, i32* %249, i64 7
  %251 = load i32, i32* %250, align 4
  %252 = call i32 @LS2_256(i32 -1431655766, i32 %230, i32 %233, i32 %236, i32 %239, i32 %242, i32 %245, i32 %248, i32 %251)
  %253 = load i32, i32* %24, align 4
  %254 = load i32, i32* %25, align 4
  %255 = load i32, i32* %26, align 4
  %256 = load i32, i32* %27, align 4
  %257 = load i32, i32* %28, align 4
  %258 = load i32, i32* %29, align 4
  %259 = load i32, i32* %30, align 4
  %260 = load i32, i32* %31, align 4
  %261 = call i32 @quasi_exform256(i32 %253, i32 %254, i32 %255, i32 %256, i32 %257, i32 %258, i32 %259, i32 %260)
  %262 = load i32, i32* %32, align 4
  %263 = load i32, i32* %33, align 4
  %264 = load i32, i32* %34, align 4
  %265 = load i32, i32* %35, align 4
  %266 = load i32, i32* %36, align 4
  %267 = load i32, i32* %37, align 4
  %268 = load i32, i32* %38, align 4
  %269 = load i32, i32* %39, align 4
  %270 = call i32 @LS1_256(i32 -1431655766, i32 %262, i32 %263, i32 %264, i32 %265, i32 %266, i32 %267, i32 %268, i32 %269)
  %271 = load i32, i32* %24, align 4
  %272 = load i32, i32* %25, align 4
  %273 = load i32, i32* %26, align 4
  %274 = load i32, i32* %27, align 4
  %275 = load i32, i32* %28, align 4
  %276 = load i32, i32* %29, align 4
  %277 = load i32, i32* %30, align 4
  %278 = load i32, i32* %31, align 4
  %279 = call i32 @LS2_256(i32 -1431655766, i32 %271, i32 %272, i32 %273, i32 %274, i32 %275, i32 %276, i32 %277, i32 %278)
  %280 = load i32, i32* %32, align 4
  %281 = load i32, i32* %33, align 4
  %282 = load i32, i32* %34, align 4
  %283 = load i32, i32* %35, align 4
  %284 = load i32, i32* %36, align 4
  %285 = load i32, i32* %37, align 4
  %286 = load i32, i32* %38, align 4
  %287 = load i32, i32* %39, align 4
  %288 = call i32 @quasi_exform256(i32 %280, i32 %281, i32 %282, i32 %283, i32 %284, i32 %285, i32 %286, i32 %287)
  %289 = load i32*, i32** %5, align 8
  %290 = getelementptr inbounds i32, i32* %289, i64 7
  %291 = load i32, i32* %290, align 4
  %292 = load i32*, i32** %5, align 8
  %293 = getelementptr inbounds i32, i32* %292, i64 6
  %294 = load i32, i32* %293, align 4
  %295 = load i32*, i32** %5, align 8
  %296 = getelementptr inbounds i32, i32* %295, i64 5
  %297 = load i32, i32* %296, align 4
  %298 = load i32*, i32** %5, align 8
  %299 = getelementptr inbounds i32, i32* %298, i64 4
  %300 = load i32, i32* %299, align 4
  %301 = load i32*, i32** %5, align 8
  %302 = getelementptr inbounds i32, i32* %301, i64 3
  %303 = load i32, i32* %302, align 4
  %304 = load i32*, i32** %5, align 8
  %305 = getelementptr inbounds i32, i32* %304, i64 2
  %306 = load i32, i32* %305, align 4
  %307 = load i32*, i32** %5, align 8
  %308 = getelementptr inbounds i32, i32* %307, i64 1
  %309 = load i32, i32* %308, align 4
  %310 = load i32*, i32** %5, align 8
  %311 = getelementptr inbounds i32, i32* %310, i64 0
  %312 = load i32, i32* %311, align 4
  %313 = call i32 @LS1_256(i32 -1431655766, i32 %291, i32 %294, i32 %297, i32 %300, i32 %303, i32 %306, i32 %309, i32 %312)
  %314 = load i32, i32* %24, align 4
  %315 = load i32, i32* %25, align 4
  %316 = load i32, i32* %26, align 4
  %317 = load i32, i32* %27, align 4
  %318 = load i32, i32* %28, align 4
  %319 = load i32, i32* %29, align 4
  %320 = load i32, i32* %30, align 4
  %321 = load i32, i32* %31, align 4
  %322 = call i32 @LS2_256(i32 -1431655766, i32 %314, i32 %315, i32 %316, i32 %317, i32 %318, i32 %319, i32 %320, i32 %321)
  %323 = load i32, i32* %24, align 4
  %324 = load i32, i32* %25, align 4
  %325 = load i32, i32* %26, align 4
  %326 = load i32, i32* %27, align 4
  %327 = load i32, i32* %28, align 4
  %328 = load i32, i32* %29, align 4
  %329 = load i32, i32* %30, align 4
  %330 = load i32, i32* %31, align 4
  %331 = call i32 @quasi_exform256(i32 %323, i32 %324, i32 %325, i32 %326, i32 %327, i32 %328, i32 %329, i32 %330)
  %332 = load i32, i32* %24, align 4
  %333 = load i32, i32* %25, align 4
  %334 = load i32, i32* %26, align 4
  %335 = load i32, i32* %27, align 4
  %336 = load i32, i32* %28, align 4
  %337 = load i32, i32* %29, align 4
  %338 = load i32, i32* %30, align 4
  %339 = load i32, i32* %31, align 4
  %340 = call i32 @LS1_256(i32 -1431655766, i32 %332, i32 %333, i32 %334, i32 %335, i32 %336, i32 %337, i32 %338, i32 %339)
  %341 = load i32, i32* %32, align 4
  %342 = load i32, i32* %33, align 4
  %343 = load i32, i32* %34, align 4
  %344 = load i32, i32* %35, align 4
  %345 = load i32, i32* %36, align 4
  %346 = load i32, i32* %37, align 4
  %347 = load i32, i32* %38, align 4
  %348 = load i32, i32* %39, align 4
  %349 = call i32 @LS2_256(i32 -1431655766, i32 %341, i32 %342, i32 %343, i32 %344, i32 %345, i32 %346, i32 %347, i32 %348)
  %350 = load i32, i32* %32, align 4
  %351 = load i32, i32* %33, align 4
  %352 = load i32, i32* %34, align 4
  %353 = load i32, i32* %35, align 4
  %354 = load i32, i32* %36, align 4
  %355 = load i32, i32* %37, align 4
  %356 = load i32, i32* %38, align 4
  %357 = load i32, i32* %39, align 4
  %358 = call i32 @quasi_exform256(i32 %350, i32 %351, i32 %352, i32 %353, i32 %354, i32 %355, i32 %356, i32 %357)
  %359 = load i32*, i32** %5, align 8
  %360 = getelementptr inbounds i32, i32* %359, i64 8
  %361 = load i32, i32* %360, align 4
  %362 = load i32, i32* %24, align 4
  %363 = xor i32 %361, %362
  %364 = load i32*, i32** %6, align 8
  %365 = getelementptr inbounds i32, i32* %364, i64 0
  %366 = load i32, i32* %365, align 4
  %367 = xor i32 %366, %363
  store i32 %367, i32* %365, align 4
  %368 = load i32*, i32** %5, align 8
  %369 = getelementptr inbounds i32, i32* %368, i64 9
  %370 = load i32, i32* %369, align 4
  %371 = load i32, i32* %25, align 4
  %372 = xor i32 %370, %371
  %373 = load i32*, i32** %6, align 8
  %374 = getelementptr inbounds i32, i32* %373, i64 1
  %375 = load i32, i32* %374, align 4
  %376 = xor i32 %375, %372
  store i32 %376, i32* %374, align 4
  %377 = load i32*, i32** %5, align 8
  %378 = getelementptr inbounds i32, i32* %377, i64 10
  %379 = load i32, i32* %378, align 4
  %380 = load i32, i32* %26, align 4
  %381 = xor i32 %379, %380
  %382 = load i32*, i32** %6, align 8
  %383 = getelementptr inbounds i32, i32* %382, i64 2
  %384 = load i32, i32* %383, align 4
  %385 = xor i32 %384, %381
  store i32 %385, i32* %383, align 4
  %386 = load i32*, i32** %5, align 8
  %387 = getelementptr inbounds i32, i32* %386, i64 11
  %388 = load i32, i32* %387, align 4
  %389 = load i32, i32* %27, align 4
  %390 = xor i32 %388, %389
  %391 = load i32*, i32** %6, align 8
  %392 = getelementptr inbounds i32, i32* %391, i64 3
  %393 = load i32, i32* %392, align 4
  %394 = xor i32 %393, %390
  store i32 %394, i32* %392, align 4
  %395 = load i32*, i32** %5, align 8
  %396 = getelementptr inbounds i32, i32* %395, i64 12
  %397 = load i32, i32* %396, align 4
  %398 = load i32, i32* %28, align 4
  %399 = xor i32 %397, %398
  %400 = load i32*, i32** %6, align 8
  %401 = getelementptr inbounds i32, i32* %400, i64 4
  %402 = load i32, i32* %401, align 4
  %403 = xor i32 %402, %399
  store i32 %403, i32* %401, align 4
  %404 = load i32*, i32** %5, align 8
  %405 = getelementptr inbounds i32, i32* %404, i64 13
  %406 = load i32, i32* %405, align 4
  %407 = load i32, i32* %29, align 4
  %408 = xor i32 %406, %407
  %409 = load i32*, i32** %6, align 8
  %410 = getelementptr inbounds i32, i32* %409, i64 5
  %411 = load i32, i32* %410, align 4
  %412 = xor i32 %411, %408
  store i32 %412, i32* %410, align 4
  %413 = load i32*, i32** %5, align 8
  %414 = getelementptr inbounds i32, i32* %413, i64 14
  %415 = load i32, i32* %414, align 4
  %416 = load i32, i32* %30, align 4
  %417 = xor i32 %415, %416
  %418 = load i32*, i32** %6, align 8
  %419 = getelementptr inbounds i32, i32* %418, i64 6
  %420 = load i32, i32* %419, align 4
  %421 = xor i32 %420, %417
  store i32 %421, i32* %419, align 4
  %422 = load i32*, i32** %5, align 8
  %423 = getelementptr inbounds i32, i32* %422, i64 15
  %424 = load i32, i32* %423, align 4
  %425 = load i32, i32* %31, align 4
  %426 = xor i32 %424, %425
  %427 = load i32*, i32** %6, align 8
  %428 = getelementptr inbounds i32, i32* %427, i64 7
  %429 = load i32, i32* %428, align 4
  %430 = xor i32 %429, %426
  store i32 %430, i32* %428, align 4
  %431 = load i32*, i32** %5, align 8
  %432 = getelementptr inbounds i32, i32* %431, i64 0
  %433 = load i32, i32* %432, align 4
  %434 = load i32, i32* %32, align 4
  %435 = xor i32 %433, %434
  %436 = load i32*, i32** %6, align 8
  %437 = getelementptr inbounds i32, i32* %436, i64 8
  %438 = load i32, i32* %437, align 4
  %439 = xor i32 %438, %435
  store i32 %439, i32* %437, align 4
  %440 = load i32*, i32** %5, align 8
  %441 = getelementptr inbounds i32, i32* %440, i64 1
  %442 = load i32, i32* %441, align 4
  %443 = load i32, i32* %33, align 4
  %444 = xor i32 %442, %443
  %445 = load i32*, i32** %6, align 8
  %446 = getelementptr inbounds i32, i32* %445, i64 9
  %447 = load i32, i32* %446, align 4
  %448 = xor i32 %447, %444
  store i32 %448, i32* %446, align 4
  %449 = load i32*, i32** %5, align 8
  %450 = getelementptr inbounds i32, i32* %449, i64 2
  %451 = load i32, i32* %450, align 4
  %452 = load i32, i32* %34, align 4
  %453 = xor i32 %451, %452
  %454 = load i32*, i32** %6, align 8
  %455 = getelementptr inbounds i32, i32* %454, i64 10
  %456 = load i32, i32* %455, align 4
  %457 = xor i32 %456, %453
  store i32 %457, i32* %455, align 4
  %458 = load i32*, i32** %5, align 8
  %459 = getelementptr inbounds i32, i32* %458, i64 3
  %460 = load i32, i32* %459, align 4
  %461 = load i32, i32* %35, align 4
  %462 = xor i32 %460, %461
  %463 = load i32*, i32** %6, align 8
  %464 = getelementptr inbounds i32, i32* %463, i64 11
  %465 = load i32, i32* %464, align 4
  %466 = xor i32 %465, %462
  store i32 %466, i32* %464, align 4
  %467 = load i32*, i32** %5, align 8
  %468 = getelementptr inbounds i32, i32* %467, i64 4
  %469 = load i32, i32* %468, align 4
  %470 = load i32, i32* %36, align 4
  %471 = xor i32 %469, %470
  %472 = load i32*, i32** %6, align 8
  %473 = getelementptr inbounds i32, i32* %472, i64 12
  %474 = load i32, i32* %473, align 4
  %475 = xor i32 %474, %471
  store i32 %475, i32* %473, align 4
  %476 = load i32*, i32** %5, align 8
  %477 = getelementptr inbounds i32, i32* %476, i64 5
  %478 = load i32, i32* %477, align 4
  %479 = load i32, i32* %37, align 4
  %480 = xor i32 %478, %479
  %481 = load i32*, i32** %6, align 8
  %482 = getelementptr inbounds i32, i32* %481, i64 13
  %483 = load i32, i32* %482, align 4
  %484 = xor i32 %483, %480
  store i32 %484, i32* %482, align 4
  %485 = load i32*, i32** %5, align 8
  %486 = getelementptr inbounds i32, i32* %485, i64 6
  %487 = load i32, i32* %486, align 4
  %488 = load i32, i32* %38, align 4
  %489 = xor i32 %487, %488
  %490 = load i32*, i32** %6, align 8
  %491 = getelementptr inbounds i32, i32* %490, i64 14
  %492 = load i32, i32* %491, align 4
  %493 = xor i32 %492, %489
  store i32 %493, i32* %491, align 4
  %494 = load i32*, i32** %5, align 8
  %495 = getelementptr inbounds i32, i32* %494, i64 7
  %496 = load i32, i32* %495, align 4
  %497 = load i32, i32* %39, align 4
  %498 = xor i32 %496, %497
  %499 = load i32*, i32** %6, align 8
  %500 = getelementptr inbounds i32, i32* %499, i64 15
  %501 = load i32, i32* %500, align 4
  %502 = xor i32 %501, %498
  store i32 %502, i32* %500, align 4
  br label %503

503:                                              ; preds = %46
  %504 = load i64, i64* @EdonR256_BLOCK_BITSIZE, align 8
  %505 = load i64, i64* %7, align 8
  %506 = sub i64 %505, %504
  store i64 %506, i64* %7, align 8
  %507 = load i32*, i32** %5, align 8
  %508 = getelementptr inbounds i32, i32* %507, i64 16
  store i32* %508, i32** %5, align 8
  br label %42

509:                                              ; preds = %42
  %510 = load i64, i64* %4, align 8
  %511 = load i64, i64* %7, align 8
  %512 = sub i64 %510, %511
  ret i64 %512
}

declare dso_local i32 @LS1_256(i32, i32, i32, i32, i32, i32, i32, i32, i32) #1

declare dso_local i32 @LS2_256(i32, i32, i32, i32, i32, i32, i32, i32, i32) #1

declare dso_local i32 @quasi_exform256(i32, i32, i32, i32, i32, i32, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
