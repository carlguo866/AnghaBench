; ModuleID = '/home/carl/AnghaBench/reactos/sdk/tools/fatten/fatfs/option/extr_ccsbcs.c_ff_wtoupper.c'
source_filename = "/home/carl/AnghaBench/reactos/sdk/tools/fatten/fatfs/option/extr_ccsbcs.c_ff_wtoupper.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@ff_wtoupper.lower = internal constant [494 x i32] [i32 224, i32 225, i32 226, i32 227, i32 228, i32 229, i32 230, i32 231, i32 232, i32 233, i32 234, i32 235, i32 236, i32 237, i32 238, i32 239, i32 240, i32 241, i32 242, i32 243, i32 244, i32 245, i32 246, i32 248, i32 249, i32 250, i32 251, i32 252, i32 253, i32 254, i32 255, i32 257, i32 259, i32 261, i32 263, i32 265, i32 267, i32 269, i32 271, i32 273, i32 275, i32 277, i32 279, i32 281, i32 283, i32 285, i32 287, i32 289, i32 291, i32 293, i32 295, i32 297, i32 299, i32 301, i32 303, i32 305, i32 307, i32 309, i32 311, i32 314, i32 316, i32 318, i32 320, i32 322, i32 324, i32 326, i32 328, i32 331, i32 333, i32 335, i32 337, i32 339, i32 341, i32 343, i32 345, i32 347, i32 349, i32 351, i32 353, i32 355, i32 357, i32 359, i32 361, i32 363, i32 365, i32 367, i32 369, i32 371, i32 373, i32 375, i32 378, i32 380, i32 382, i32 387, i32 389, i32 392, i32 396, i32 402, i32 409, i32 417, i32 419, i32 424, i32 429, i32 432, i32 436, i32 438, i32 441, i32 445, i32 454, i32 457, i32 460, i32 462, i32 464, i32 466, i32 468, i32 470, i32 472, i32 474, i32 476, i32 477, i32 479, i32 481, i32 483, i32 485, i32 487, i32 489, i32 491, i32 493, i32 495, i32 499, i32 501, i32 507, i32 509, i32 511, i32 513, i32 515, i32 517, i32 519, i32 521, i32 523, i32 525, i32 527, i32 529, i32 531, i32 533, i32 535, i32 945, i32 946, i32 947, i32 948, i32 949, i32 950, i32 951, i32 952, i32 953, i32 954, i32 955, i32 956, i32 957, i32 958, i32 959, i32 960, i32 961, i32 963, i32 964, i32 965, i32 966, i32 967, i32 968, i32 969, i32 970, i32 971, i32 972, i32 973, i32 974, i32 995, i32 997, i32 999, i32 1001, i32 1003, i32 1072, i32 1073, i32 1074, i32 1075, i32 1076, i32 1077, i32 1078, i32 1079, i32 1080, i32 1081, i32 1082, i32 1083, i32 1084, i32 1085, i32 1086, i32 1087, i32 1088, i32 1089, i32 1090, i32 1091, i32 1092, i32 1093, i32 1094, i32 1095, i32 1096, i32 1097, i32 1098, i32 1099, i32 1100, i32 1101, i32 1102, i32 1103, i32 1106, i32 1107, i32 1108, i32 1109, i32 1110, i32 1111, i32 1112, i32 1113, i32 1114, i32 1115, i32 1116, i32 1118, i32 1119, i32 1121, i32 1123, i32 1125, i32 1127, i32 1129, i32 1131, i32 1133, i32 1135, i32 1137, i32 1139, i32 1141, i32 1143, i32 1145, i32 1147, i32 1149, i32 1151, i32 1153, i32 1169, i32 1171, i32 1173, i32 1175, i32 1177, i32 1179, i32 1181, i32 1183, i32 1185, i32 1187, i32 1189, i32 1191, i32 1193, i32 1195, i32 1197, i32 1199, i32 1201, i32 1203, i32 1205, i32 1207, i32 1209, i32 1211, i32 1213, i32 1215, i32 1218, i32 1220, i32 1224, i32 1233, i32 1235, i32 1237, i32 1239, i32 1241, i32 1243, i32 1245, i32 1247, i32 1249, i32 1251, i32 1253, i32 1255, i32 1257, i32 1259, i32 1261, i32 1263, i32 1265, i32 1267, i32 1269, i32 1273, i32 1377, i32 1378, i32 1379, i32 1380, i32 1381, i32 1382, i32 1383, i32 1384, i32 1385, i32 1386, i32 1387, i32 1388, i32 1389, i32 1390, i32 1391, i32 1392, i32 1393, i32 1394, i32 1395, i32 1396, i32 1397, i32 1398, i32 1399, i32 1400, i32 1401, i32 1402, i32 1403, i32 1404, i32 1405, i32 1406, i32 1407, i32 1408, i32 1409, i32 1410, i32 1411, i32 1412, i32 1413, i32 1414, i32 7681, i32 7683, i32 7685, i32 7687, i32 7689, i32 7691, i32 7693, i32 7695, i32 7697, i32 7699, i32 7701, i32 7703, i32 7705, i32 7707, i32 7709, i32 7711, i32 7713, i32 7715, i32 7717, i32 7719, i32 7721, i32 7723, i32 7725, i32 7727, i32 7729, i32 7731, i32 7733, i32 7735, i32 7737, i32 7739, i32 7741, i32 7743, i32 7745, i32 7747, i32 7749, i32 7751, i32 7753, i32 7755, i32 7757, i32 7759, i32 7761, i32 7763, i32 7765, i32 7767, i32 7769, i32 7771, i32 7773, i32 7775, i32 7777, i32 7779, i32 7781, i32 7783, i32 7785, i32 7787, i32 7789, i32 7791, i32 7793, i32 7795, i32 7797, i32 7799, i32 7801, i32 7803, i32 7805, i32 7807, i32 7809, i32 7811, i32 7813, i32 7815, i32 7817, i32 7819, i32 7821, i32 7823, i32 7825, i32 7827, i32 7829, i32 7831, i32 7833, i32 7835, i32 7837, i32 7839, i32 7841, i32 7843, i32 7845, i32 7847, i32 7849, i32 7851, i32 7853, i32 7855, i32 7857, i32 7859, i32 7861, i32 7863, i32 7865, i32 7867, i32 7869, i32 7871, i32 7873, i32 7875, i32 7877, i32 7879, i32 7881, i32 7883, i32 7885, i32 7887, i32 7889, i32 7891, i32 7893, i32 7895, i32 7897, i32 7899, i32 7901, i32 7903, i32 7905, i32 7907, i32 7909, i32 7911, i32 7913, i32 7915, i32 7917, i32 7919, i32 7921, i32 7923, i32 7925, i32 7927, i32 7929, i32 8560, i32 8561, i32 8562, i32 8563, i32 8564, i32 8565, i32 8566, i32 8567, i32 8568, i32 8569, i32 8570, i32 8571, i32 8572, i32 8573, i32 8574, i32 8575, i32 65345, i32 65346, i32 65347, i32 65348, i32 65349, i32 65350, i32 65351, i32 65352, i32 65353, i32 65354, i32 65355, i32 65356, i32 65357, i32 65358, i32 65359, i32 65360, i32 65361, i32 65362, i32 65363, i32 65364, i32 65365, i32 65366, i32 65367, i32 65368, i32 65369, i32 65370], align 16
@ff_wtoupper.upper = internal constant [494 x i32] [i32 192, i32 193, i32 194, i32 195, i32 196, i32 197, i32 198, i32 199, i32 200, i32 201, i32 202, i32 203, i32 204, i32 205, i32 206, i32 207, i32 208, i32 209, i32 210, i32 211, i32 212, i32 213, i32 214, i32 216, i32 217, i32 218, i32 219, i32 220, i32 221, i32 222, i32 376, i32 256, i32 258, i32 260, i32 262, i32 264, i32 266, i32 268, i32 270, i32 272, i32 274, i32 276, i32 278, i32 280, i32 282, i32 284, i32 286, i32 288, i32 290, i32 292, i32 294, i32 296, i32 298, i32 300, i32 302, i32 304, i32 306, i32 308, i32 310, i32 313, i32 315, i32 317, i32 319, i32 321, i32 323, i32 325, i32 327, i32 330, i32 332, i32 334, i32 336, i32 338, i32 340, i32 342, i32 344, i32 346, i32 348, i32 350, i32 352, i32 354, i32 356, i32 358, i32 360, i32 362, i32 364, i32 366, i32 368, i32 370, i32 372, i32 374, i32 377, i32 379, i32 381, i32 386, i32 388, i32 391, i32 395, i32 401, i32 408, i32 416, i32 418, i32 423, i32 428, i32 431, i32 435, i32 437, i32 440, i32 444, i32 452, i32 455, i32 458, i32 461, i32 463, i32 465, i32 467, i32 469, i32 471, i32 473, i32 475, i32 398, i32 478, i32 480, i32 482, i32 484, i32 486, i32 488, i32 490, i32 492, i32 494, i32 497, i32 500, i32 506, i32 508, i32 510, i32 512, i32 514, i32 516, i32 518, i32 520, i32 522, i32 524, i32 526, i32 528, i32 530, i32 532, i32 534, i32 913, i32 914, i32 915, i32 916, i32 917, i32 918, i32 919, i32 920, i32 921, i32 922, i32 923, i32 924, i32 925, i32 926, i32 927, i32 928, i32 929, i32 931, i32 932, i32 933, i32 934, i32 935, i32 936, i32 937, i32 938, i32 939, i32 908, i32 910, i32 911, i32 994, i32 996, i32 998, i32 1000, i32 1002, i32 1040, i32 1041, i32 1042, i32 1043, i32 1044, i32 1045, i32 1046, i32 1047, i32 1048, i32 1049, i32 1050, i32 1051, i32 1052, i32 1053, i32 1054, i32 1055, i32 1056, i32 1057, i32 1058, i32 1059, i32 1060, i32 1061, i32 1062, i32 1063, i32 1064, i32 1065, i32 1066, i32 1067, i32 1068, i32 1069, i32 1070, i32 1071, i32 1026, i32 1027, i32 1028, i32 1029, i32 1030, i32 1031, i32 1032, i32 1033, i32 1034, i32 1035, i32 1036, i32 1038, i32 1039, i32 1120, i32 1122, i32 1124, i32 1126, i32 1128, i32 1130, i32 1132, i32 1134, i32 1136, i32 1138, i32 1140, i32 1142, i32 1144, i32 1146, i32 1148, i32 1150, i32 1152, i32 1168, i32 1170, i32 1172, i32 1174, i32 1176, i32 1178, i32 1180, i32 1182, i32 1184, i32 1186, i32 1188, i32 1190, i32 1192, i32 1194, i32 1196, i32 1198, i32 1200, i32 1202, i32 1204, i32 1206, i32 1208, i32 1210, i32 1212, i32 1214, i32 1217, i32 1219, i32 1479, i32 1232, i32 1234, i32 1236, i32 1238, i32 1240, i32 1242, i32 1244, i32 1246, i32 1248, i32 1250, i32 1252, i32 1254, i32 1256, i32 1258, i32 1260, i32 1262, i32 1264, i32 1266, i32 1268, i32 1272, i32 1329, i32 1330, i32 1331, i32 1332, i32 1333, i32 1334, i32 1335, i32 1336, i32 1337, i32 1338, i32 1339, i32 1340, i32 1341, i32 1342, i32 1343, i32 1344, i32 1345, i32 1346, i32 1347, i32 1348, i32 1349, i32 1350, i32 1351, i32 1352, i32 1353, i32 1354, i32 1355, i32 1356, i32 1357, i32 1358, i32 1359, i32 1360, i32 1361, i32 1362, i32 1363, i32 1364, i32 1365, i32 1366, i32 7680, i32 7682, i32 7684, i32 7686, i32 7688, i32 7690, i32 7692, i32 7694, i32 7696, i32 7698, i32 7700, i32 7702, i32 7704, i32 7706, i32 7708, i32 7710, i32 7712, i32 7714, i32 7716, i32 7718, i32 7720, i32 7722, i32 7724, i32 7726, i32 7728, i32 7730, i32 7732, i32 7734, i32 7736, i32 7738, i32 7740, i32 7742, i32 7744, i32 7746, i32 7748, i32 7750, i32 7752, i32 7754, i32 7756, i32 7758, i32 7760, i32 7762, i32 7764, i32 7766, i32 7768, i32 7770, i32 7772, i32 7774, i32 7776, i32 7778, i32 7780, i32 7782, i32 7784, i32 7786, i32 7788, i32 7790, i32 7792, i32 7794, i32 7796, i32 7798, i32 7800, i32 7802, i32 7804, i32 7806, i32 7808, i32 7810, i32 7812, i32 7814, i32 7816, i32 7818, i32 7820, i32 7822, i32 7824, i32 7826, i32 7828, i32 7830, i32 7832, i32 7834, i32 7836, i32 7838, i32 7840, i32 7842, i32 7844, i32 7846, i32 7848, i32 7850, i32 7852, i32 7854, i32 7856, i32 7858, i32 7860, i32 7862, i32 7864, i32 7866, i32 7868, i32 7870, i32 7872, i32 7874, i32 7876, i32 7878, i32 7880, i32 7882, i32 7884, i32 7886, i32 7888, i32 7890, i32 7892, i32 7894, i32 7896, i32 7898, i32 7900, i32 7902, i32 7904, i32 7906, i32 7908, i32 7910, i32 7912, i32 7914, i32 7916, i32 7918, i32 7920, i32 7922, i32 7924, i32 7926, i32 7928, i32 8544, i32 8545, i32 8546, i32 8547, i32 8548, i32 8549, i32 8550, i32 8551, i32 8552, i32 8553, i32 8554, i32 8555, i32 8556, i32 8557, i32 8558, i32 8559, i32 65313, i32 65314, i32 65315, i32 65316, i32 65317, i32 65318, i32 65319, i32 65320, i32 65321, i32 65322, i32 65323, i32 65324, i32 65325, i32 65326, i32 65327, i32 65328, i32 65329, i32 65330, i32 65331, i32 65332, i32 65333, i32 65334, i32 65335, i32 65336, i32 65337, i32 65338], align 16

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @ff_wtoupper(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %7 = load i32, i32* %2, align 4
  %8 = icmp slt i32 %7, 128
  br i1 %8, label %9, label %19

9:                                                ; preds = %1
  %10 = load i32, i32* %2, align 4
  %11 = icmp sge i32 %10, 97
  br i1 %11, label %12, label %18

12:                                               ; preds = %9
  %13 = load i32, i32* %2, align 4
  %14 = icmp sle i32 %13, 122
  br i1 %14, label %15, label %18

15:                                               ; preds = %12
  %16 = load i32, i32* %2, align 4
  %17 = sub nsw i32 %16, 32
  store i32 %17, i32* %2, align 4
  br label %18

18:                                               ; preds = %15, %12, %9
  br label %59

19:                                               ; preds = %1
  store i32 12, i32* %4, align 4
  store i32 0, i32* %6, align 4
  store i32 494, i32* %5, align 4
  br label %20

20:                                               ; preds = %46, %19
  %21 = load i32, i32* %6, align 4
  %22 = load i32, i32* %5, align 4
  %23 = load i32, i32* %6, align 4
  %24 = sub nsw i32 %22, %23
  %25 = sdiv i32 %24, 2
  %26 = add nsw i32 %21, %25
  store i32 %26, i32* %3, align 4
  %27 = load i32, i32* %2, align 4
  %28 = load i32, i32* %3, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [494 x i32], [494 x i32]* @ff_wtoupper.lower, i64 0, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %27, %31
  br i1 %32, label %33, label %34

33:                                               ; preds = %20
  br label %50

34:                                               ; preds = %20
  %35 = load i32, i32* %2, align 4
  %36 = load i32, i32* %3, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [494 x i32], [494 x i32]* @ff_wtoupper.lower, i64 0, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = icmp sgt i32 %35, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %34
  %42 = load i32, i32* %3, align 4
  store i32 %42, i32* %6, align 4
  br label %45

43:                                               ; preds = %34
  %44 = load i32, i32* %3, align 4
  store i32 %44, i32* %5, align 4
  br label %45

45:                                               ; preds = %43, %41
  br label %46

46:                                               ; preds = %45
  %47 = load i32, i32* %4, align 4
  %48 = add nsw i32 %47, -1
  store i32 %48, i32* %4, align 4
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %20, label %50

50:                                               ; preds = %46, %33
  %51 = load i32, i32* %4, align 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %50
  %54 = load i32, i32* %3, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [494 x i32], [494 x i32]* @ff_wtoupper.upper, i64 0, i64 %55
  %57 = load i32, i32* %56, align 4
  store i32 %57, i32* %2, align 4
  br label %58

58:                                               ; preds = %53, %50
  br label %59

59:                                               ; preds = %58, %18
  %60 = load i32, i32* %2, align 4
  ret i32 %60
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
