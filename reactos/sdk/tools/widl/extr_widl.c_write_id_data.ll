; ModuleID = '/home/carl/AnghaBench/reactos/sdk/tools/widl/extr_widl.c_write_id_data.c'
source_filename = "/home/carl/AnghaBench/reactos/sdk/tools/widl/extr_widl.c_write_id_data.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@do_idfile = common dso_local global i32 0, align 4
@idfile_name = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [2 x i8] c"w\00", align 1
@idfile = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [30 x i8] c"Could not open %s for output\0A\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"/*** Autogenerated by WIDL %s \00", align 1
@PACKAGE_VERSION = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [29 x i8] c"from %s - Do not edit ***/\0A\0A\00", align 1
@input_idl_name = common dso_local global i8* null, align 8
@.str.4 = private unnamed_addr constant [20 x i8] c"#ifdef __REACTOS__\0A\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"#define WIN32_NO_STATUS\0A\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"#define WIN32_LEAN_AND_MEAN\0A\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"#endif\0A\0A\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"#include <rpc.h>\0A\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"#include <rpcndr.h>\0A\0A\00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"#ifdef _MIDL_USE_GUIDDEF_\0A\0A\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"#ifndef INITGUID\0A\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"#define INITGUID\0A\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"#include <guiddef.h>\0A\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"#undef INITGUID\0A\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"#else\0A\00", align 1
@.str.16 = private unnamed_addr constant [71 x i8] c"#define MIDL_DEFINE_GUID(type,name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8) \\\0A\00", align 1
@.str.17 = private unnamed_addr constant [56 x i8] c"    DEFINE_GUID(name,l,w1,w2,b1,b2,b3,b4,b5,b6,b7,b8)\0A\0A\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"#elif defined(__cplusplus)\0A\0A\00", align 1
@.str.19 = private unnamed_addr constant [88 x i8] c"    EXTERN_C const type DECLSPEC_SELECTANY name = {l,w1,w2,{b1,b2,b3,b4,b5,b6,b7,b8}}\0A\0A\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"#else\0A\0A\00", align 1
@.str.21 = private unnamed_addr constant [79 x i8] c"    const type DECLSPEC_SELECTANY name = {l,w1,w2,{b1,b2,b3,b4,b5,b6,b7,b8}}\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.23 = private unnamed_addr constant [25 x i8] c"#undef MIDL_DEFINE_GUID\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @write_id_data(i32* %0) #0 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32, i32* @do_idfile, align 4
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  br label %79

6:                                                ; preds = %1
  %7 = load i32, i32* @idfile_name, align 4
  %8 = call i32 @fopen(i32 %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  store i32 %8, i32* @idfile, align 4
  %9 = load i32, i32* @idfile, align 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %6
  %12 = load i32, i32* @idfile_name, align 4
  %13 = call i32 @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i32 %12)
  br label %79

14:                                               ; preds = %6
  %15 = load i32, i32* @idfile, align 4
  %16 = load i8*, i8** @PACKAGE_VERSION, align 8
  %17 = call i32 (i32, i8*, ...) @fprintf(i32 %15, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i8* %16)
  %18 = load i32, i32* @idfile, align 4
  %19 = load i8*, i8** @input_idl_name, align 8
  %20 = call i32 (i32, i8*, ...) @fprintf(i32 %18, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i8* %19)
  %21 = load i32, i32* @idfile, align 4
  %22 = call i32 (i32, i8*, ...) @fprintf(i32 %21, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0))
  %23 = load i32, i32* @idfile, align 4
  %24 = call i32 (i32, i8*, ...) @fprintf(i32 %23, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0))
  %25 = load i32, i32* @idfile, align 4
  %26 = call i32 (i32, i8*, ...) @fprintf(i32 %25, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0))
  %27 = load i32, i32* @idfile, align 4
  %28 = call i32 (i32, i8*, ...) @fprintf(i32 %27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0))
  %29 = load i32, i32* @idfile, align 4
  %30 = call i32 (i32, i8*, ...) @fprintf(i32 %29, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0))
  %31 = load i32, i32* @idfile, align 4
  %32 = call i32 (i32, i8*, ...) @fprintf(i32 %31, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0))
  %33 = load i32, i32* @idfile, align 4
  %34 = call i32 (i32, i8*, ...) @fprintf(i32 %33, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0))
  %35 = load i32, i32* @idfile, align 4
  %36 = call i32 (i32, i8*, ...) @fprintf(i32 %35, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0))
  %37 = load i32, i32* @idfile, align 4
  %38 = call i32 (i32, i8*, ...) @fprintf(i32 %37, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0))
  %39 = load i32, i32* @idfile, align 4
  %40 = call i32 (i32, i8*, ...) @fprintf(i32 %39, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0))
  %41 = load i32, i32* @idfile, align 4
  %42 = call i32 (i32, i8*, ...) @fprintf(i32 %41, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0))
  %43 = load i32, i32* @idfile, align 4
  %44 = call i32 (i32, i8*, ...) @fprintf(i32 %43, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0))
  %45 = load i32, i32* @idfile, align 4
  %46 = call i32 (i32, i8*, ...) @fprintf(i32 %45, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0))
  %47 = load i32, i32* @idfile, align 4
  %48 = call i32 (i32, i8*, ...) @fprintf(i32 %47, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0))
  %49 = load i32, i32* @idfile, align 4
  %50 = call i32 (i32, i8*, ...) @fprintf(i32 %49, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.16, i64 0, i64 0))
  %51 = load i32, i32* @idfile, align 4
  %52 = call i32 (i32, i8*, ...) @fprintf(i32 %51, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.17, i64 0, i64 0))
  %53 = load i32, i32* @idfile, align 4
  %54 = call i32 (i32, i8*, ...) @fprintf(i32 %53, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i64 0, i64 0))
  %55 = load i32, i32* @idfile, align 4
  %56 = call i32 (i32, i8*, ...) @fprintf(i32 %55, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.16, i64 0, i64 0))
  %57 = load i32, i32* @idfile, align 4
  %58 = call i32 (i32, i8*, ...) @fprintf(i32 %57, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.19, i64 0, i64 0))
  %59 = load i32, i32* @idfile, align 4
  %60 = call i32 (i32, i8*, ...) @fprintf(i32 %59, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0))
  %61 = load i32, i32* @idfile, align 4
  %62 = call i32 (i32, i8*, ...) @fprintf(i32 %61, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.16, i64 0, i64 0))
  %63 = load i32, i32* @idfile, align 4
  %64 = call i32 (i32, i8*, ...) @fprintf(i32 %63, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.21, i64 0, i64 0))
  %65 = load i32, i32* @idfile, align 4
  %66 = call i32 (i32, i8*, ...) @fprintf(i32 %65, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0))
  %67 = load i32, i32* @idfile, align 4
  %68 = call i32 @start_cplusplus_guard(i32 %67)
  %69 = load i32*, i32** %2, align 8
  %70 = call i32 @write_id_data_stmts(i32* %69)
  %71 = load i32, i32* @idfile, align 4
  %72 = call i32 (i32, i8*, ...) @fprintf(i32 %71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0))
  %73 = load i32, i32* @idfile, align 4
  %74 = call i32 @end_cplusplus_guard(i32 %73)
  %75 = load i32, i32* @idfile, align 4
  %76 = call i32 (i32, i8*, ...) @fprintf(i32 %75, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.23, i64 0, i64 0))
  %77 = load i32, i32* @idfile, align 4
  %78 = call i32 @fclose(i32 %77)
  br label %79

79:                                               ; preds = %14, %11, %5
  ret void
}

declare dso_local i32 @fopen(i32, i8*) #1

declare dso_local i32 @error(i8*, i32) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i32 @start_cplusplus_guard(i32) #1

declare dso_local i32 @write_id_data_stmts(i32*) #1

declare dso_local i32 @end_cplusplus_guard(i32) #1

declare dso_local i32 @fclose(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
