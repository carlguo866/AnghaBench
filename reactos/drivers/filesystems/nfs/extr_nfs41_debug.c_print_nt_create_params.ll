; ModuleID = '/home/carl/AnghaBench/reactos/drivers/filesystems/nfs/extr_nfs41_debug.c_print_nt_create_params.c'
source_filename = "/home/carl/AnghaBench/reactos/drivers/filesystems/nfs/extr_nfs41_debug.c_print_nt_create_params.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_3__ = type { i32, i64, i32, i32, i32 }

@.str = private unnamed_addr constant [63 x i8] c"File attributes %x: %s %s %s %s %s %s %s %s %s %s %s %s %s %s\0A\00", align 1
@FILE_ATTRIBUTE_TEMPORARY = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [10 x i8] c"TEMPFILE \00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@FILE_ATTRIBUTE_READONLY = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [10 x i8] c"READONLY \00", align 1
@FILE_ATTRIBUTE_HIDDEN = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [8 x i8] c"HIDDEN \00", align 1
@FILE_ATTRIBUTE_SYSTEM = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [8 x i8] c"SYSTEM \00", align 1
@FILE_ATTRIBUTE_ARCHIVE = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [9 x i8] c"ARCHIVE \00", align 1
@FILE_ATTRIBUTE_DIRECTORY = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [5 x i8] c"DIR \00", align 1
@FILE_ATTRIBUTE_DEVICE = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [8 x i8] c"DEVICE \00", align 1
@FILE_ATTRIBUTE_NORMAL = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [8 x i8] c"NORMAL \00", align 1
@FILE_ATTRIBUTE_SPARSE_FILE = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [13 x i8] c"SPARSE_FILE \00", align 1
@FILE_ATTRIBUTE_REPARSE_POINT = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [15 x i8] c"REPARSE_POINT \00", align 1
@FILE_ATTRIBUTE_COMPRESSED = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [12 x i8] c"COMPRESSED \00", align 1
@FILE_ATTRIBUTE_NOT_CONTENT_INDEXED = common dso_local global i32 0, align 4
@.str.13 = private unnamed_addr constant [13 x i8] c"NOT INDEXED \00", align 1
@FILE_ATTRIBUTE_ENCRYPTED = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [11 x i8] c"ENCRYPTED \00", align 1
@FILE_ATTRIBUTE_VIRTUAL = common dso_local global i32 0, align 4
@.str.15 = private unnamed_addr constant [8 x i8] c"VIRTUAL\00", align 1
@FILE_SUPERSEDE = common dso_local global i64 0, align 8
@.str.16 = private unnamed_addr constant [37 x i8] c"Create Dispositions: FILE_SUPERSEDE\0A\00", align 1
@FILE_CREATE = common dso_local global i64 0, align 8
@.str.17 = private unnamed_addr constant [34 x i8] c"Create Dispositions: FILE_CREATE\0A\00", align 1
@FILE_OPEN = common dso_local global i64 0, align 8
@.str.18 = private unnamed_addr constant [32 x i8] c"Create Dispositions: FILE_OPEN\0A\00", align 1
@FILE_OPEN_IF = common dso_local global i64 0, align 8
@.str.19 = private unnamed_addr constant [35 x i8] c"Create Dispositions: FILE_OPEN_IF\0A\00", align 1
@FILE_OVERWRITE = common dso_local global i64 0, align 8
@.str.20 = private unnamed_addr constant [37 x i8] c"Create Dispositions: FILE_OVERWRITE\0A\00", align 1
@FILE_OVERWRITE_IF = common dso_local global i64 0, align 8
@.str.21 = private unnamed_addr constant [40 x i8] c"Create Dispositions: FILE_OVERWRITE_IF\0A\00", align 1
@.str.22 = private unnamed_addr constant [73 x i8] c"Create Attributes: 0x%x %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s\0A\00", align 1
@FILE_DIRECTORY_FILE = common dso_local global i32 0, align 4
@.str.23 = private unnamed_addr constant [8 x i8] c"DIRFILE\00", align 1
@FILE_NON_DIRECTORY_FILE = common dso_local global i32 0, align 4
@.str.24 = private unnamed_addr constant [5 x i8] c"FILE\00", align 1
@FILE_DELETE_ON_CLOSE = common dso_local global i32 0, align 4
@.str.25 = private unnamed_addr constant [16 x i8] c"DELETE_ON_CLOSE\00", align 1
@FILE_WRITE_THROUGH = common dso_local global i32 0, align 4
@.str.26 = private unnamed_addr constant [14 x i8] c"WRITE_THROUGH\00", align 1
@FILE_SEQUENTIAL_ONLY = common dso_local global i32 0, align 4
@.str.27 = private unnamed_addr constant [11 x i8] c"SEQUENTIAL\00", align 1
@FILE_RANDOM_ACCESS = common dso_local global i32 0, align 4
@.str.28 = private unnamed_addr constant [7 x i8] c"RANDOM\00", align 1
@FILE_NO_INTERMEDIATE_BUFFERING = common dso_local global i32 0, align 4
@.str.29 = private unnamed_addr constant [13 x i8] c"NO_BUFFERING\00", align 1
@FILE_SYNCHRONOUS_IO_ALERT = common dso_local global i32 0, align 4
@.str.30 = private unnamed_addr constant [11 x i8] c"SYNC_ALERT\00", align 1
@FILE_SYNCHRONOUS_IO_NONALERT = common dso_local global i32 0, align 4
@.str.31 = private unnamed_addr constant [13 x i8] c"SYNC_NOALERT\00", align 1
@FILE_CREATE_TREE_CONNECTION = common dso_local global i32 0, align 4
@.str.32 = private unnamed_addr constant [17 x i8] c"CREATE_TREE_CONN\00", align 1
@FILE_COMPLETE_IF_OPLOCKED = common dso_local global i32 0, align 4
@.str.33 = private unnamed_addr constant [9 x i8] c"OPLOCKED\00", align 1
@FILE_NO_EA_KNOWLEDGE = common dso_local global i32 0, align 4
@.str.34 = private unnamed_addr constant [6 x i8] c"NO_EA\00", align 1
@FILE_OPEN_REPARSE_POINT = common dso_local global i32 0, align 4
@.str.35 = private unnamed_addr constant [13 x i8] c"OPEN_REPARSE\00", align 1
@FILE_OPEN_BY_FILE_ID = common dso_local global i32 0, align 4
@.str.36 = private unnamed_addr constant [6 x i8] c"BY_ID\00", align 1
@FILE_OPEN_FOR_BACKUP_INTENT = common dso_local global i32 0, align 4
@.str.37 = private unnamed_addr constant [9 x i8] c"4_BACKUP\00", align 1
@FILE_RESERVE_OPFILTER = common dso_local global i32 0, align 4
@.str.38 = private unnamed_addr constant [9 x i8] c"OPFILTER\00", align 1
@.str.39 = private unnamed_addr constant [24 x i8] c"Share Access: %s %s %s\0A\00", align 1
@FILE_SHARE_READ = common dso_local global i32 0, align 4
@.str.40 = private unnamed_addr constant [5 x i8] c"READ\00", align 1
@FILE_SHARE_WRITE = common dso_local global i32 0, align 4
@.str.41 = private unnamed_addr constant [6 x i8] c"WRITE\00", align 1
@FILE_SHARE_DELETE = common dso_local global i32 0, align 4
@.str.42 = private unnamed_addr constant [7 x i8] c"DELETE\00", align 1
@.str.43 = private unnamed_addr constant [55 x i8] c"Desired Access: 0x%x %s %s %s %s %s %s %s %s %s %s %s\0A\00", align 1
@FILE_READ_DATA = common dso_local global i32 0, align 4
@STANDARD_RIGHTS_READ = common dso_local global i32 0, align 4
@.str.44 = private unnamed_addr constant [9 x i8] c"READ_ACL\00", align 1
@FILE_READ_ATTRIBUTES = common dso_local global i32 0, align 4
@.str.45 = private unnamed_addr constant [8 x i8] c"GETATTR\00", align 1
@FILE_READ_EA = common dso_local global i32 0, align 4
@.str.46 = private unnamed_addr constant [8 x i8] c"READ_EA\00", align 1
@FILE_WRITE_DATA = common dso_local global i32 0, align 4
@FILE_WRITE_ATTRIBUTES = common dso_local global i32 0, align 4
@.str.47 = private unnamed_addr constant [8 x i8] c"SETATTR\00", align 1
@FILE_WRITE_EA = common dso_local global i32 0, align 4
@.str.48 = private unnamed_addr constant [9 x i8] c"WRITE_EA\00", align 1
@FILE_APPEND_DATA = common dso_local global i32 0, align 4
@.str.49 = private unnamed_addr constant [7 x i8] c"APPEND\00", align 1
@FILE_EXECUTE = common dso_local global i32 0, align 4
@.str.50 = private unnamed_addr constant [5 x i8] c"EXEC\00", align 1
@FILE_LIST_DIRECTORY = common dso_local global i32 0, align 4
@.str.51 = private unnamed_addr constant [6 x i8] c"LSDIR\00", align 1
@FILE_TRAVERSE = common dso_local global i32 0, align 4
@.str.52 = private unnamed_addr constant [9 x i8] c"TRAVERSE\00", align 1
@DELETE = common dso_local global i32 0, align 4
@READ_CONTROL = common dso_local global i32 0, align 4
@.str.53 = private unnamed_addr constant [13 x i8] c"READ_CONTROL\00", align 1
@WRITE_DAC = common dso_local global i32 0, align 4
@.str.54 = private unnamed_addr constant [10 x i8] c"WRITE_DAC\00", align 1
@WRITE_OWNER = common dso_local global i32 0, align 4
@.str.55 = private unnamed_addr constant [12 x i8] c"WRITE_OWNER\00", align 1
@SYNCHRONIZE = common dso_local global i32 0, align 4
@.str.56 = private unnamed_addr constant [12 x i8] c"SYNCHRONIZE\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @print_nt_create_params(i32 %0, %struct.TYPE_3__* byval(%struct.TYPE_3__) align 8 %1) #0 {
  %3 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %4 = load i32, i32* %3, align 4
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  br label %415

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %113

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = load i32, i32* @FILE_ATTRIBUTE_TEMPORARY, align 4
  %17 = and i32 %15, %16
  %18 = icmp ne i32 %17, 0
  %19 = zext i1 %18 to i64
  %20 = select i1 %18, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %21 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = load i32, i32* @FILE_ATTRIBUTE_READONLY, align 4
  %24 = and i32 %22, %23
  %25 = icmp ne i32 %24, 0
  %26 = zext i1 %25 to i64
  %27 = select i1 %25, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %28 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = load i32, i32* @FILE_ATTRIBUTE_HIDDEN, align 4
  %31 = and i32 %29, %30
  %32 = icmp ne i32 %31, 0
  %33 = zext i1 %32 to i64
  %34 = select i1 %32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %35 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = load i32, i32* @FILE_ATTRIBUTE_SYSTEM, align 4
  %38 = and i32 %36, %37
  %39 = icmp ne i32 %38, 0
  %40 = zext i1 %39 to i64
  %41 = select i1 %39, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %42 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 0
  %43 = load i32, i32* %42, align 8
  %44 = load i32, i32* @FILE_ATTRIBUTE_ARCHIVE, align 4
  %45 = and i32 %43, %44
  %46 = icmp ne i32 %45, 0
  %47 = zext i1 %46 to i64
  %48 = select i1 %46, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %49 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = load i32, i32* @FILE_ATTRIBUTE_DIRECTORY, align 4
  %52 = and i32 %50, %51
  %53 = icmp ne i32 %52, 0
  %54 = zext i1 %53 to i64
  %55 = select i1 %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %56 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = load i32, i32* @FILE_ATTRIBUTE_DEVICE, align 4
  %59 = and i32 %57, %58
  %60 = icmp ne i32 %59, 0
  %61 = zext i1 %60 to i64
  %62 = select i1 %60, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %63 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = load i32, i32* @FILE_ATTRIBUTE_NORMAL, align 4
  %66 = and i32 %64, %65
  %67 = icmp ne i32 %66, 0
  %68 = zext i1 %67 to i64
  %69 = select i1 %67, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %70 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = load i32, i32* @FILE_ATTRIBUTE_SPARSE_FILE, align 4
  %73 = and i32 %71, %72
  %74 = icmp ne i32 %73, 0
  %75 = zext i1 %74 to i64
  %76 = select i1 %74, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %77 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = load i32, i32* @FILE_ATTRIBUTE_REPARSE_POINT, align 4
  %80 = and i32 %78, %79
  %81 = icmp ne i32 %80, 0
  %82 = zext i1 %81 to i64
  %83 = select i1 %81, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %84 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = load i32, i32* @FILE_ATTRIBUTE_COMPRESSED, align 4
  %87 = and i32 %85, %86
  %88 = icmp ne i32 %87, 0
  %89 = zext i1 %88 to i64
  %90 = select i1 %88, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %91 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = load i32, i32* @FILE_ATTRIBUTE_NOT_CONTENT_INDEXED, align 4
  %94 = and i32 %92, %93
  %95 = icmp ne i32 %94, 0
  %96 = zext i1 %95 to i64
  %97 = select i1 %95, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %98 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 0
  %99 = load i32, i32* %98, align 8
  %100 = load i32, i32* @FILE_ATTRIBUTE_ENCRYPTED, align 4
  %101 = and i32 %99, %100
  %102 = icmp ne i32 %101, 0
  %103 = zext i1 %102 to i64
  %104 = select i1 %102, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %105 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 0
  %106 = load i32, i32* %105, align 8
  %107 = load i32, i32* @FILE_ATTRIBUTE_VIRTUAL, align 4
  %108 = and i32 %106, %107
  %109 = icmp ne i32 %108, 0
  %110 = zext i1 %109 to i64
  %111 = select i1 %109, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %112 = call i32 (i8*, ...) @DbgP(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str, i64 0, i64 0), i32 %13, i8* %20, i8* %27, i8* %34, i8* %41, i8* %48, i8* %55, i8* %62, i8* %69, i8* %76, i8* %83, i8* %90, i8* %97, i8* %104, i8* %111)
  br label %113

113:                                              ; preds = %11, %7
  %114 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = load i64, i64* @FILE_SUPERSEDE, align 8
  %117 = icmp eq i64 %115, %116
  br i1 %117, label %118, label %120

118:                                              ; preds = %113
  %119 = call i32 (i8*, ...) @DbgP(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i64 0, i64 0))
  br label %120

120:                                              ; preds = %118, %113
  %121 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = load i64, i64* @FILE_CREATE, align 8
  %124 = icmp eq i64 %122, %123
  br i1 %124, label %125, label %127

125:                                              ; preds = %120
  %126 = call i32 (i8*, ...) @DbgP(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0))
  br label %127

127:                                              ; preds = %125, %120
  %128 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 1
  %129 = load i64, i64* %128, align 8
  %130 = load i64, i64* @FILE_OPEN, align 8
  %131 = icmp eq i64 %129, %130
  br i1 %131, label %132, label %134

132:                                              ; preds = %127
  %133 = call i32 (i8*, ...) @DbgP(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0))
  br label %134

134:                                              ; preds = %132, %127
  %135 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 1
  %136 = load i64, i64* %135, align 8
  %137 = load i64, i64* @FILE_OPEN_IF, align 8
  %138 = icmp eq i64 %136, %137
  br i1 %138, label %139, label %141

139:                                              ; preds = %134
  %140 = call i32 (i8*, ...) @DbgP(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i64 0, i64 0))
  br label %141

141:                                              ; preds = %139, %134
  %142 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 1
  %143 = load i64, i64* %142, align 8
  %144 = load i64, i64* @FILE_OVERWRITE, align 8
  %145 = icmp eq i64 %143, %144
  br i1 %145, label %146, label %148

146:                                              ; preds = %141
  %147 = call i32 (i8*, ...) @DbgP(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.20, i64 0, i64 0))
  br label %148

148:                                              ; preds = %146, %141
  %149 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 1
  %150 = load i64, i64* %149, align 8
  %151 = load i64, i64* @FILE_OVERWRITE_IF, align 8
  %152 = icmp eq i64 %150, %151
  br i1 %152, label %153, label %155

153:                                              ; preds = %148
  %154 = call i32 (i8*, ...) @DbgP(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.21, i64 0, i64 0))
  br label %155

155:                                              ; preds = %153, %148
  %156 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 2
  %157 = load i32, i32* %156, align 8
  %158 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 2
  %159 = load i32, i32* %158, align 8
  %160 = load i32, i32* @FILE_DIRECTORY_FILE, align 4
  %161 = and i32 %159, %160
  %162 = icmp ne i32 %161, 0
  %163 = zext i1 %162 to i64
  %164 = select i1 %162, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %165 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 2
  %166 = load i32, i32* %165, align 8
  %167 = load i32, i32* @FILE_NON_DIRECTORY_FILE, align 4
  %168 = and i32 %166, %167
  %169 = icmp ne i32 %168, 0
  %170 = zext i1 %169 to i64
  %171 = select i1 %169, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %172 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 2
  %173 = load i32, i32* %172, align 8
  %174 = load i32, i32* @FILE_DELETE_ON_CLOSE, align 4
  %175 = and i32 %173, %174
  %176 = icmp ne i32 %175, 0
  %177 = zext i1 %176 to i64
  %178 = select i1 %176, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %179 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 2
  %180 = load i32, i32* %179, align 8
  %181 = load i32, i32* @FILE_WRITE_THROUGH, align 4
  %182 = and i32 %180, %181
  %183 = icmp ne i32 %182, 0
  %184 = zext i1 %183 to i64
  %185 = select i1 %183, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %186 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 2
  %187 = load i32, i32* %186, align 8
  %188 = load i32, i32* @FILE_SEQUENTIAL_ONLY, align 4
  %189 = and i32 %187, %188
  %190 = icmp ne i32 %189, 0
  %191 = zext i1 %190 to i64
  %192 = select i1 %190, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %193 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 2
  %194 = load i32, i32* %193, align 8
  %195 = load i32, i32* @FILE_RANDOM_ACCESS, align 4
  %196 = and i32 %194, %195
  %197 = icmp ne i32 %196, 0
  %198 = zext i1 %197 to i64
  %199 = select i1 %197, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %200 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 2
  %201 = load i32, i32* %200, align 8
  %202 = load i32, i32* @FILE_NO_INTERMEDIATE_BUFFERING, align 4
  %203 = and i32 %201, %202
  %204 = icmp ne i32 %203, 0
  %205 = zext i1 %204 to i64
  %206 = select i1 %204, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %207 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 2
  %208 = load i32, i32* %207, align 8
  %209 = load i32, i32* @FILE_SYNCHRONOUS_IO_ALERT, align 4
  %210 = and i32 %208, %209
  %211 = icmp ne i32 %210, 0
  %212 = zext i1 %211 to i64
  %213 = select i1 %211, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %214 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 2
  %215 = load i32, i32* %214, align 8
  %216 = load i32, i32* @FILE_SYNCHRONOUS_IO_NONALERT, align 4
  %217 = and i32 %215, %216
  %218 = icmp ne i32 %217, 0
  %219 = zext i1 %218 to i64
  %220 = select i1 %218, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %221 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 2
  %222 = load i32, i32* %221, align 8
  %223 = load i32, i32* @FILE_CREATE_TREE_CONNECTION, align 4
  %224 = and i32 %222, %223
  %225 = icmp ne i32 %224, 0
  %226 = zext i1 %225 to i64
  %227 = select i1 %225, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %228 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 2
  %229 = load i32, i32* %228, align 8
  %230 = load i32, i32* @FILE_COMPLETE_IF_OPLOCKED, align 4
  %231 = and i32 %229, %230
  %232 = icmp ne i32 %231, 0
  %233 = zext i1 %232 to i64
  %234 = select i1 %232, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %235 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 2
  %236 = load i32, i32* %235, align 8
  %237 = load i32, i32* @FILE_NO_EA_KNOWLEDGE, align 4
  %238 = and i32 %236, %237
  %239 = icmp ne i32 %238, 0
  %240 = zext i1 %239 to i64
  %241 = select i1 %239, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %242 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 2
  %243 = load i32, i32* %242, align 8
  %244 = load i32, i32* @FILE_OPEN_REPARSE_POINT, align 4
  %245 = and i32 %243, %244
  %246 = icmp ne i32 %245, 0
  %247 = zext i1 %246 to i64
  %248 = select i1 %246, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %249 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 2
  %250 = load i32, i32* %249, align 8
  %251 = load i32, i32* @FILE_OPEN_BY_FILE_ID, align 4
  %252 = and i32 %250, %251
  %253 = icmp ne i32 %252, 0
  %254 = zext i1 %253 to i64
  %255 = select i1 %253, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %256 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 2
  %257 = load i32, i32* %256, align 8
  %258 = load i32, i32* @FILE_OPEN_FOR_BACKUP_INTENT, align 4
  %259 = and i32 %257, %258
  %260 = icmp ne i32 %259, 0
  %261 = zext i1 %260 to i64
  %262 = select i1 %260, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %263 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 2
  %264 = load i32, i32* %263, align 8
  %265 = load i32, i32* @FILE_RESERVE_OPFILTER, align 4
  %266 = and i32 %264, %265
  %267 = icmp ne i32 %266, 0
  %268 = zext i1 %267 to i64
  %269 = select i1 %267, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %270 = call i32 (i8*, ...) @DbgP(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.22, i64 0, i64 0), i32 %157, i8* %164, i8* %171, i8* %178, i8* %185, i8* %192, i8* %199, i8* %206, i8* %213, i8* %220, i8* %227, i8* %234, i8* %241, i8* %248, i8* %255, i8* %262, i8* %269)
  %271 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 3
  %272 = load i32, i32* %271, align 4
  %273 = load i32, i32* @FILE_SHARE_READ, align 4
  %274 = and i32 %272, %273
  %275 = icmp ne i32 %274, 0
  %276 = zext i1 %275 to i64
  %277 = select i1 %275, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %278 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 3
  %279 = load i32, i32* %278, align 4
  %280 = load i32, i32* @FILE_SHARE_WRITE, align 4
  %281 = and i32 %279, %280
  %282 = icmp ne i32 %281, 0
  %283 = zext i1 %282 to i64
  %284 = select i1 %282, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %285 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 3
  %286 = load i32, i32* %285, align 4
  %287 = load i32, i32* @FILE_SHARE_DELETE, align 4
  %288 = and i32 %286, %287
  %289 = icmp ne i32 %288, 0
  %290 = zext i1 %289 to i64
  %291 = select i1 %289, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %292 = call i32 (i8*, ...) @DbgP(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.39, i64 0, i64 0), i8* %277, i8* %284, i8* %291)
  %293 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %294 = load i32, i32* %293, align 8
  %295 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %296 = load i32, i32* %295, align 8
  %297 = load i32, i32* @FILE_READ_DATA, align 4
  %298 = and i32 %296, %297
  %299 = icmp ne i32 %298, 0
  %300 = zext i1 %299 to i64
  %301 = select i1 %299, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %302 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %303 = load i32, i32* %302, align 8
  %304 = load i32, i32* @STANDARD_RIGHTS_READ, align 4
  %305 = and i32 %303, %304
  %306 = icmp ne i32 %305, 0
  %307 = zext i1 %306 to i64
  %308 = select i1 %306, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %309 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %310 = load i32, i32* %309, align 8
  %311 = load i32, i32* @FILE_READ_ATTRIBUTES, align 4
  %312 = and i32 %310, %311
  %313 = icmp ne i32 %312, 0
  %314 = zext i1 %313 to i64
  %315 = select i1 %313, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %316 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %317 = load i32, i32* %316, align 8
  %318 = load i32, i32* @FILE_READ_EA, align 4
  %319 = and i32 %317, %318
  %320 = icmp ne i32 %319, 0
  %321 = zext i1 %320 to i64
  %322 = select i1 %320, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %323 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %324 = load i32, i32* %323, align 8
  %325 = load i32, i32* @FILE_WRITE_DATA, align 4
  %326 = and i32 %324, %325
  %327 = icmp ne i32 %326, 0
  %328 = zext i1 %327 to i64
  %329 = select i1 %327, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %330 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %331 = load i32, i32* %330, align 8
  %332 = load i32, i32* @FILE_WRITE_ATTRIBUTES, align 4
  %333 = and i32 %331, %332
  %334 = icmp ne i32 %333, 0
  %335 = zext i1 %334 to i64
  %336 = select i1 %334, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %337 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %338 = load i32, i32* %337, align 8
  %339 = load i32, i32* @FILE_WRITE_EA, align 4
  %340 = and i32 %338, %339
  %341 = icmp ne i32 %340, 0
  %342 = zext i1 %341 to i64
  %343 = select i1 %341, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %344 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %345 = load i32, i32* %344, align 8
  %346 = load i32, i32* @FILE_APPEND_DATA, align 4
  %347 = and i32 %345, %346
  %348 = icmp ne i32 %347, 0
  %349 = zext i1 %348 to i64
  %350 = select i1 %348, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %351 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %352 = load i32, i32* %351, align 8
  %353 = load i32, i32* @FILE_EXECUTE, align 4
  %354 = and i32 %352, %353
  %355 = icmp ne i32 %354, 0
  %356 = zext i1 %355 to i64
  %357 = select i1 %355, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %358 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %359 = load i32, i32* %358, align 8
  %360 = load i32, i32* @FILE_LIST_DIRECTORY, align 4
  %361 = and i32 %359, %360
  %362 = icmp ne i32 %361, 0
  %363 = zext i1 %362 to i64
  %364 = select i1 %362, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %365 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %366 = load i32, i32* %365, align 8
  %367 = load i32, i32* @FILE_TRAVERSE, align 4
  %368 = and i32 %366, %367
  %369 = icmp ne i32 %368, 0
  %370 = zext i1 %369 to i64
  %371 = select i1 %369, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %372 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %373 = load i32, i32* %372, align 8
  %374 = load i32, i32* @FILE_LIST_DIRECTORY, align 4
  %375 = and i32 %373, %374
  %376 = icmp ne i32 %375, 0
  %377 = zext i1 %376 to i64
  %378 = select i1 %376, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %379 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %380 = load i32, i32* %379, align 8
  %381 = load i32, i32* @DELETE, align 4
  %382 = and i32 %380, %381
  %383 = icmp ne i32 %382, 0
  %384 = zext i1 %383 to i64
  %385 = select i1 %383, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %386 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %387 = load i32, i32* %386, align 8
  %388 = load i32, i32* @READ_CONTROL, align 4
  %389 = and i32 %387, %388
  %390 = icmp ne i32 %389, 0
  %391 = zext i1 %390 to i64
  %392 = select i1 %390, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %393 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %394 = load i32, i32* %393, align 8
  %395 = load i32, i32* @WRITE_DAC, align 4
  %396 = and i32 %394, %395
  %397 = icmp ne i32 %396, 0
  %398 = zext i1 %397 to i64
  %399 = select i1 %397, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %400 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %401 = load i32, i32* %400, align 8
  %402 = load i32, i32* @WRITE_OWNER, align 4
  %403 = and i32 %401, %402
  %404 = icmp ne i32 %403, 0
  %405 = zext i1 %404 to i64
  %406 = select i1 %404, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %407 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %1, i32 0, i32 4
  %408 = load i32, i32* %407, align 8
  %409 = load i32, i32* @SYNCHRONIZE, align 4
  %410 = and i32 %408, %409
  %411 = icmp ne i32 %410, 0
  %412 = zext i1 %411 to i64
  %413 = select i1 %411, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %414 = call i32 (i8*, ...) @DbgP(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.43, i64 0, i64 0), i32 %294, i8* %301, i8* %308, i8* %315, i8* %322, i8* %329, i8* %336, i8* %343, i8* %350, i8* %357, i8* %364, i8* %371, i8* %378, i8* %385, i8* %392, i8* %399, i8* %406, i8* %413)
  br label %415

415:                                              ; preds = %155, %6
  ret void
}

declare dso_local i32 @DbgP(i8*, ...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
