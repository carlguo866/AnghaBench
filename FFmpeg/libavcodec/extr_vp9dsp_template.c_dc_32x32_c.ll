; ModuleID = '/home/carl/AnghaBench/FFmpeg/libavcodec/extr_vp9dsp_template.c_dc_32x32_c.c'
source_filename = "/home/carl/AnghaBench/FFmpeg/libavcodec/extr_vp9dsp_template.c_dc_32x32_c.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i32*, i32, i32*, i32*)* @dc_32x32_c to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @dc_32x32_c(i32* %0, i32 %1, i32* %2, i32* %3) #0 {
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32* %0, i32** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %14 = load i32*, i32** %5, align 8
  store i32* %14, i32** %9, align 8
  %15 = load i32*, i32** %7, align 8
  store i32* %15, i32** %10, align 8
  %16 = load i32*, i32** %8, align 8
  store i32* %16, i32** %11, align 8
  %17 = load i32*, i32** %10, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 0
  %19 = load i32, i32* %18, align 4
  %20 = load i32*, i32** %10, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = add nsw i32 %19, %22
  %24 = load i32*, i32** %10, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 2
  %26 = load i32, i32* %25, align 4
  %27 = add nsw i32 %23, %26
  %28 = load i32*, i32** %10, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 3
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %27, %30
  %32 = load i32*, i32** %10, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 4
  %34 = load i32, i32* %33, align 4
  %35 = add nsw i32 %31, %34
  %36 = load i32*, i32** %10, align 8
  %37 = getelementptr inbounds i32, i32* %36, i64 5
  %38 = load i32, i32* %37, align 4
  %39 = add nsw i32 %35, %38
  %40 = load i32*, i32** %10, align 8
  %41 = getelementptr inbounds i32, i32* %40, i64 6
  %42 = load i32, i32* %41, align 4
  %43 = add nsw i32 %39, %42
  %44 = load i32*, i32** %10, align 8
  %45 = getelementptr inbounds i32, i32* %44, i64 7
  %46 = load i32, i32* %45, align 4
  %47 = add nsw i32 %43, %46
  %48 = load i32*, i32** %10, align 8
  %49 = getelementptr inbounds i32, i32* %48, i64 8
  %50 = load i32, i32* %49, align 4
  %51 = add nsw i32 %47, %50
  %52 = load i32*, i32** %10, align 8
  %53 = getelementptr inbounds i32, i32* %52, i64 9
  %54 = load i32, i32* %53, align 4
  %55 = add nsw i32 %51, %54
  %56 = load i32*, i32** %10, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 10
  %58 = load i32, i32* %57, align 4
  %59 = add nsw i32 %55, %58
  %60 = load i32*, i32** %10, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 11
  %62 = load i32, i32* %61, align 4
  %63 = add nsw i32 %59, %62
  %64 = load i32*, i32** %10, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 12
  %66 = load i32, i32* %65, align 4
  %67 = add nsw i32 %63, %66
  %68 = load i32*, i32** %10, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 13
  %70 = load i32, i32* %69, align 4
  %71 = add nsw i32 %67, %70
  %72 = load i32*, i32** %10, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 14
  %74 = load i32, i32* %73, align 4
  %75 = add nsw i32 %71, %74
  %76 = load i32*, i32** %10, align 8
  %77 = getelementptr inbounds i32, i32* %76, i64 15
  %78 = load i32, i32* %77, align 4
  %79 = add nsw i32 %75, %78
  %80 = load i32*, i32** %10, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 16
  %82 = load i32, i32* %81, align 4
  %83 = add nsw i32 %79, %82
  %84 = load i32*, i32** %10, align 8
  %85 = getelementptr inbounds i32, i32* %84, i64 17
  %86 = load i32, i32* %85, align 4
  %87 = add nsw i32 %83, %86
  %88 = load i32*, i32** %10, align 8
  %89 = getelementptr inbounds i32, i32* %88, i64 18
  %90 = load i32, i32* %89, align 4
  %91 = add nsw i32 %87, %90
  %92 = load i32*, i32** %10, align 8
  %93 = getelementptr inbounds i32, i32* %92, i64 19
  %94 = load i32, i32* %93, align 4
  %95 = add nsw i32 %91, %94
  %96 = load i32*, i32** %10, align 8
  %97 = getelementptr inbounds i32, i32* %96, i64 20
  %98 = load i32, i32* %97, align 4
  %99 = add nsw i32 %95, %98
  %100 = load i32*, i32** %10, align 8
  %101 = getelementptr inbounds i32, i32* %100, i64 21
  %102 = load i32, i32* %101, align 4
  %103 = add nsw i32 %99, %102
  %104 = load i32*, i32** %10, align 8
  %105 = getelementptr inbounds i32, i32* %104, i64 22
  %106 = load i32, i32* %105, align 4
  %107 = add nsw i32 %103, %106
  %108 = load i32*, i32** %10, align 8
  %109 = getelementptr inbounds i32, i32* %108, i64 23
  %110 = load i32, i32* %109, align 4
  %111 = add nsw i32 %107, %110
  %112 = load i32*, i32** %10, align 8
  %113 = getelementptr inbounds i32, i32* %112, i64 24
  %114 = load i32, i32* %113, align 4
  %115 = add nsw i32 %111, %114
  %116 = load i32*, i32** %10, align 8
  %117 = getelementptr inbounds i32, i32* %116, i64 25
  %118 = load i32, i32* %117, align 4
  %119 = add nsw i32 %115, %118
  %120 = load i32*, i32** %10, align 8
  %121 = getelementptr inbounds i32, i32* %120, i64 26
  %122 = load i32, i32* %121, align 4
  %123 = add nsw i32 %119, %122
  %124 = load i32*, i32** %10, align 8
  %125 = getelementptr inbounds i32, i32* %124, i64 27
  %126 = load i32, i32* %125, align 4
  %127 = add nsw i32 %123, %126
  %128 = load i32*, i32** %10, align 8
  %129 = getelementptr inbounds i32, i32* %128, i64 28
  %130 = load i32, i32* %129, align 4
  %131 = add nsw i32 %127, %130
  %132 = load i32*, i32** %10, align 8
  %133 = getelementptr inbounds i32, i32* %132, i64 29
  %134 = load i32, i32* %133, align 4
  %135 = add nsw i32 %131, %134
  %136 = load i32*, i32** %10, align 8
  %137 = getelementptr inbounds i32, i32* %136, i64 30
  %138 = load i32, i32* %137, align 4
  %139 = add nsw i32 %135, %138
  %140 = load i32*, i32** %10, align 8
  %141 = getelementptr inbounds i32, i32* %140, i64 31
  %142 = load i32, i32* %141, align 4
  %143 = add nsw i32 %139, %142
  %144 = load i32*, i32** %11, align 8
  %145 = getelementptr inbounds i32, i32* %144, i64 0
  %146 = load i32, i32* %145, align 4
  %147 = add nsw i32 %143, %146
  %148 = load i32*, i32** %11, align 8
  %149 = getelementptr inbounds i32, i32* %148, i64 1
  %150 = load i32, i32* %149, align 4
  %151 = add nsw i32 %147, %150
  %152 = load i32*, i32** %11, align 8
  %153 = getelementptr inbounds i32, i32* %152, i64 2
  %154 = load i32, i32* %153, align 4
  %155 = add nsw i32 %151, %154
  %156 = load i32*, i32** %11, align 8
  %157 = getelementptr inbounds i32, i32* %156, i64 3
  %158 = load i32, i32* %157, align 4
  %159 = add nsw i32 %155, %158
  %160 = load i32*, i32** %11, align 8
  %161 = getelementptr inbounds i32, i32* %160, i64 4
  %162 = load i32, i32* %161, align 4
  %163 = add nsw i32 %159, %162
  %164 = load i32*, i32** %11, align 8
  %165 = getelementptr inbounds i32, i32* %164, i64 5
  %166 = load i32, i32* %165, align 4
  %167 = add nsw i32 %163, %166
  %168 = load i32*, i32** %11, align 8
  %169 = getelementptr inbounds i32, i32* %168, i64 6
  %170 = load i32, i32* %169, align 4
  %171 = add nsw i32 %167, %170
  %172 = load i32*, i32** %11, align 8
  %173 = getelementptr inbounds i32, i32* %172, i64 7
  %174 = load i32, i32* %173, align 4
  %175 = add nsw i32 %171, %174
  %176 = load i32*, i32** %11, align 8
  %177 = getelementptr inbounds i32, i32* %176, i64 8
  %178 = load i32, i32* %177, align 4
  %179 = add nsw i32 %175, %178
  %180 = load i32*, i32** %11, align 8
  %181 = getelementptr inbounds i32, i32* %180, i64 9
  %182 = load i32, i32* %181, align 4
  %183 = add nsw i32 %179, %182
  %184 = load i32*, i32** %11, align 8
  %185 = getelementptr inbounds i32, i32* %184, i64 10
  %186 = load i32, i32* %185, align 4
  %187 = add nsw i32 %183, %186
  %188 = load i32*, i32** %11, align 8
  %189 = getelementptr inbounds i32, i32* %188, i64 11
  %190 = load i32, i32* %189, align 4
  %191 = add nsw i32 %187, %190
  %192 = load i32*, i32** %11, align 8
  %193 = getelementptr inbounds i32, i32* %192, i64 12
  %194 = load i32, i32* %193, align 4
  %195 = add nsw i32 %191, %194
  %196 = load i32*, i32** %11, align 8
  %197 = getelementptr inbounds i32, i32* %196, i64 13
  %198 = load i32, i32* %197, align 4
  %199 = add nsw i32 %195, %198
  %200 = load i32*, i32** %11, align 8
  %201 = getelementptr inbounds i32, i32* %200, i64 14
  %202 = load i32, i32* %201, align 4
  %203 = add nsw i32 %199, %202
  %204 = load i32*, i32** %11, align 8
  %205 = getelementptr inbounds i32, i32* %204, i64 15
  %206 = load i32, i32* %205, align 4
  %207 = add nsw i32 %203, %206
  %208 = load i32*, i32** %11, align 8
  %209 = getelementptr inbounds i32, i32* %208, i64 16
  %210 = load i32, i32* %209, align 4
  %211 = add nsw i32 %207, %210
  %212 = load i32*, i32** %11, align 8
  %213 = getelementptr inbounds i32, i32* %212, i64 17
  %214 = load i32, i32* %213, align 4
  %215 = add nsw i32 %211, %214
  %216 = load i32*, i32** %11, align 8
  %217 = getelementptr inbounds i32, i32* %216, i64 18
  %218 = load i32, i32* %217, align 4
  %219 = add nsw i32 %215, %218
  %220 = load i32*, i32** %11, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 19
  %222 = load i32, i32* %221, align 4
  %223 = add nsw i32 %219, %222
  %224 = load i32*, i32** %11, align 8
  %225 = getelementptr inbounds i32, i32* %224, i64 20
  %226 = load i32, i32* %225, align 4
  %227 = add nsw i32 %223, %226
  %228 = load i32*, i32** %11, align 8
  %229 = getelementptr inbounds i32, i32* %228, i64 21
  %230 = load i32, i32* %229, align 4
  %231 = add nsw i32 %227, %230
  %232 = load i32*, i32** %11, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 22
  %234 = load i32, i32* %233, align 4
  %235 = add nsw i32 %231, %234
  %236 = load i32*, i32** %11, align 8
  %237 = getelementptr inbounds i32, i32* %236, i64 23
  %238 = load i32, i32* %237, align 4
  %239 = add nsw i32 %235, %238
  %240 = load i32*, i32** %11, align 8
  %241 = getelementptr inbounds i32, i32* %240, i64 24
  %242 = load i32, i32* %241, align 4
  %243 = add nsw i32 %239, %242
  %244 = load i32*, i32** %11, align 8
  %245 = getelementptr inbounds i32, i32* %244, i64 25
  %246 = load i32, i32* %245, align 4
  %247 = add nsw i32 %243, %246
  %248 = load i32*, i32** %11, align 8
  %249 = getelementptr inbounds i32, i32* %248, i64 26
  %250 = load i32, i32* %249, align 4
  %251 = add nsw i32 %247, %250
  %252 = load i32*, i32** %11, align 8
  %253 = getelementptr inbounds i32, i32* %252, i64 27
  %254 = load i32, i32* %253, align 4
  %255 = add nsw i32 %251, %254
  %256 = load i32*, i32** %11, align 8
  %257 = getelementptr inbounds i32, i32* %256, i64 28
  %258 = load i32, i32* %257, align 4
  %259 = add nsw i32 %255, %258
  %260 = load i32*, i32** %11, align 8
  %261 = getelementptr inbounds i32, i32* %260, i64 29
  %262 = load i32, i32* %261, align 4
  %263 = add nsw i32 %259, %262
  %264 = load i32*, i32** %11, align 8
  %265 = getelementptr inbounds i32, i32* %264, i64 30
  %266 = load i32, i32* %265, align 4
  %267 = add nsw i32 %263, %266
  %268 = load i32*, i32** %11, align 8
  %269 = getelementptr inbounds i32, i32* %268, i64 31
  %270 = load i32, i32* %269, align 4
  %271 = add nsw i32 %267, %270
  %272 = add nsw i32 %271, 32
  %273 = ashr i32 %272, 6
  %274 = call i32 @PIXEL_SPLAT_X4(i32 %273)
  store i32 %274, i32* %12, align 4
  %275 = load i32, i32* %6, align 4
  %276 = sext i32 %275 to i64
  %277 = udiv i64 %276, 4
  %278 = trunc i64 %277 to i32
  store i32 %278, i32* %6, align 4
  store i32 0, i32* %13, align 4
  br label %279

279:                                              ; preds = %319, %4
  %280 = load i32, i32* %13, align 4
  %281 = icmp slt i32 %280, 32
  br i1 %281, label %282, label %322

282:                                              ; preds = %279
  %283 = load i32*, i32** %9, align 8
  %284 = getelementptr inbounds i32, i32* %283, i64 0
  %285 = load i32, i32* %12, align 4
  %286 = call i32 @AV_WN4PA(i32* %284, i32 %285)
  %287 = load i32*, i32** %9, align 8
  %288 = getelementptr inbounds i32, i32* %287, i64 4
  %289 = load i32, i32* %12, align 4
  %290 = call i32 @AV_WN4PA(i32* %288, i32 %289)
  %291 = load i32*, i32** %9, align 8
  %292 = getelementptr inbounds i32, i32* %291, i64 8
  %293 = load i32, i32* %12, align 4
  %294 = call i32 @AV_WN4PA(i32* %292, i32 %293)
  %295 = load i32*, i32** %9, align 8
  %296 = getelementptr inbounds i32, i32* %295, i64 12
  %297 = load i32, i32* %12, align 4
  %298 = call i32 @AV_WN4PA(i32* %296, i32 %297)
  %299 = load i32*, i32** %9, align 8
  %300 = getelementptr inbounds i32, i32* %299, i64 16
  %301 = load i32, i32* %12, align 4
  %302 = call i32 @AV_WN4PA(i32* %300, i32 %301)
  %303 = load i32*, i32** %9, align 8
  %304 = getelementptr inbounds i32, i32* %303, i64 20
  %305 = load i32, i32* %12, align 4
  %306 = call i32 @AV_WN4PA(i32* %304, i32 %305)
  %307 = load i32*, i32** %9, align 8
  %308 = getelementptr inbounds i32, i32* %307, i64 24
  %309 = load i32, i32* %12, align 4
  %310 = call i32 @AV_WN4PA(i32* %308, i32 %309)
  %311 = load i32*, i32** %9, align 8
  %312 = getelementptr inbounds i32, i32* %311, i64 28
  %313 = load i32, i32* %12, align 4
  %314 = call i32 @AV_WN4PA(i32* %312, i32 %313)
  %315 = load i32, i32* %6, align 4
  %316 = load i32*, i32** %9, align 8
  %317 = sext i32 %315 to i64
  %318 = getelementptr inbounds i32, i32* %316, i64 %317
  store i32* %318, i32** %9, align 8
  br label %319

319:                                              ; preds = %282
  %320 = load i32, i32* %13, align 4
  %321 = add nsw i32 %320, 1
  store i32 %321, i32* %13, align 4
  br label %279

322:                                              ; preds = %279
  ret void
}

declare dso_local i32 @PIXEL_SPLAT_X4(i32) #1

declare dso_local i32 @AV_WN4PA(i32*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
