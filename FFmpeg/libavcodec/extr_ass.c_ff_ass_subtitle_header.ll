; ModuleID = '/home/carl/AnghaBench/FFmpeg/libavcodec/extr_ass.c_ff_ass_subtitle_header.c'
source_filename = "/home/carl/AnghaBench/FFmpeg/libavcodec/extr_ass.c_ff_ass_subtitle_header.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_3__ = type { i32, i32, i32 }

@.str = private unnamed_addr constant [535 x i8] c"[Script Info]\0D\0A; Script generated by FFmpeg/Lavc%s\0D\0AScriptType: v4.00+\0D\0APlayResX: %d\0D\0APlayResY: %d\0D\0A\0D\0A[V4+ Styles]\0D\0AFormat: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding\0D\0AStyle: Default,%s,%d,&H%x,&H%x,&H%x,&H%x,%d,%d,%d,0,100,100,0,0,%d,1,0,%d,10,10,10,0\0D\0A\0D\0A[Events]\0D\0AFormat: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text\0D\0A\00", align 1
@AV_CODEC_FLAG_BITEXACT = common dso_local global i32 0, align 4
@LIBAVCODEC_VERSION = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@ASS_DEFAULT_PLAYRESX = common dso_local global i32 0, align 4
@ASS_DEFAULT_PLAYRESY = common dso_local global i32 0, align 4
@ENOMEM = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @ff_ass_subtitle_header(%struct.TYPE_3__* %0, i8* %1, i32 %2, i32 %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %8, i32 %9) #0 {
  %11 = alloca i32, align 4
  %12 = alloca %struct.TYPE_3__*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store %struct.TYPE_3__* %0, %struct.TYPE_3__** %12, align 8
  store i8* %1, i8** %13, align 8
  store i32 %2, i32* %14, align 4
  store i32 %3, i32* %15, align 4
  store i32 %4, i32* %16, align 4
  store i32 %5, i32* %17, align 4
  store i32 %6, i32* %18, align 4
  store i32 %7, i32* %19, align 4
  store i32 %8, i32* %20, align 4
  store i32 %9, i32* %21, align 4
  %22 = load %struct.TYPE_3__*, %struct.TYPE_3__** %12, align 8
  %23 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = load i32, i32* @AV_CODEC_FLAG_BITEXACT, align 4
  %26 = and i32 %24, %25
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %10
  %29 = load i32, i32* @LIBAVCODEC_VERSION, align 4
  %30 = call i8* @AV_STRINGIFY(i32 %29)
  br label %32

31:                                               ; preds = %10
  br label %32

32:                                               ; preds = %31, %28
  %33 = phi i8* [ %30, %28 ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), %31 ]
  %34 = load i32, i32* @ASS_DEFAULT_PLAYRESX, align 4
  %35 = load i32, i32* @ASS_DEFAULT_PLAYRESY, align 4
  %36 = load i8*, i8** %13, align 8
  %37 = load i32, i32* %14, align 4
  %38 = load i32, i32* %15, align 4
  %39 = load i32, i32* %15, align 4
  %40 = load i32, i32* %16, align 4
  %41 = load i32, i32* %16, align 4
  %42 = load i32, i32* %17, align 4
  %43 = sub nsw i32 0, %42
  %44 = load i32, i32* %18, align 4
  %45 = sub nsw i32 0, %44
  %46 = load i32, i32* %19, align 4
  %47 = sub nsw i32 0, %46
  %48 = load i32, i32* %20, align 4
  %49 = load i32, i32* %21, align 4
  %50 = call i32 @av_asprintf(i8* getelementptr inbounds ([535 x i8], [535 x i8]* @.str, i64 0, i64 0), i8* %33, i32 %34, i32 %35, i8* %36, i32 %37, i32 %38, i32 %39, i32 %40, i32 %41, i32 %43, i32 %45, i32 %47, i32 %48, i32 %49)
  %51 = load %struct.TYPE_3__*, %struct.TYPE_3__** %12, align 8
  %52 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %51, i32 0, i32 1
  store i32 %50, i32* %52, align 4
  %53 = load %struct.TYPE_3__*, %struct.TYPE_3__** %12, align 8
  %54 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %32
  %58 = load i32, i32* @ENOMEM, align 4
  %59 = call i32 @AVERROR(i32 %58)
  store i32 %59, i32* %11, align 4
  br label %67

60:                                               ; preds = %32
  %61 = load %struct.TYPE_3__*, %struct.TYPE_3__** %12, align 8
  %62 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %61, i32 0, i32 1
  %63 = load i32, i32* %62, align 4
  %64 = call i32 @strlen(i32 %63)
  %65 = load %struct.TYPE_3__*, %struct.TYPE_3__** %12, align 8
  %66 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %65, i32 0, i32 2
  store i32 %64, i32* %66, align 4
  store i32 0, i32* %11, align 4
  br label %67

67:                                               ; preds = %60, %57
  %68 = load i32, i32* %11, align 4
  ret i32 %68
}

declare dso_local i32 @av_asprintf(i8*, i8*, i32, i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) #1

declare dso_local i8* @AV_STRINGIFY(i32) #1

declare dso_local i32 @AVERROR(i32) #1

declare dso_local i32 @strlen(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
