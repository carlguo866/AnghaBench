; ModuleID = '/home/carl/AnghaBench/FFmpeg/libavcodec/mips/extr_h264dsp_msa.c_ff_weight_h264_pixels16_8_msa.c'
source_filename = "/home/carl/AnghaBench/FFmpeg/libavcodec/mips/extr_h264dsp_msa.c_ff_weight_h264_pixels16_8_msa.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_10__ = type { i32 }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ff_weight_h264_pixels16_8_msa(i32* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) #0 {
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.TYPE_10__, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i32, align 4
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i32, align 4
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  %61 = alloca i32, align 4
  %62 = alloca i32, align 4
  %63 = alloca i32, align 4
  %64 = alloca i32, align 4
  %65 = alloca i32, align 4
  store i32* %0, i32** %7, align 8
  store i32 %1, i32* %8, align 4
  store i32 %2, i32* %9, align 4
  store i32 %3, i32* %10, align 4
  store i32 %4, i32* %11, align 4
  store i32 %5, i32* %12, align 4
  %66 = bitcast %struct.TYPE_10__* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %66, i8 0, i64 4, i1 false)
  %67 = load i32, i32* %12, align 4
  %68 = load i32, i32* %10, align 4
  %69 = shl i32 %67, %68
  store i32 %69, i32* %13, align 4
  %70 = load i32, i32* %11, align 4
  %71 = call i32 @__msa_fill_h(i32 %70)
  store i32 %71, i32* %63, align 4
  %72 = load i32, i32* %13, align 4
  %73 = call i32 @__msa_fill_h(i32 %72)
  store i32 %73, i32* %65, align 4
  %74 = load i32, i32* %10, align 4
  %75 = call i32 @__msa_fill_h(i32 %74)
  store i32 %75, i32* %64, align 4
  %76 = load i32*, i32** %7, align 8
  %77 = load i32, i32* %8, align 4
  %78 = load i32, i32* %15, align 4
  %79 = load i32, i32* %16, align 4
  %80 = load i32, i32* %17, align 4
  %81 = load i32, i32* %18, align 4
  %82 = load i32, i32* %19, align 4
  %83 = load i32, i32* %20, align 4
  %84 = load i32, i32* %21, align 4
  %85 = load i32, i32* %22, align 4
  %86 = call i32 @LD_UB8(i32* %76, i32 %77, i32 %78, i32 %79, i32 %80, i32 %81, i32 %82, i32 %83, i32 %84, i32 %85)
  %87 = load i32, i32* %15, align 4
  %88 = load i32, i32* %16, align 4
  %89 = load i32, i32* %17, align 4
  %90 = load i32, i32* %18, align 4
  %91 = load i32, i32* %35, align 4
  %92 = load i32, i32* %36, align 4
  %93 = load i32, i32* %37, align 4
  %94 = load i32, i32* %38, align 4
  %95 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = call i32 @ILVR_B4_SH(i32 %96, i32 %87, i32 %98, i32 %88, i32 %100, i32 %89, i32 %102, i32 %90, i32 %91, i32 %92, i32 %93, i32 %94)
  %104 = load i32, i32* %15, align 4
  %105 = load i32, i32* %16, align 4
  %106 = load i32, i32* %17, align 4
  %107 = load i32, i32* %18, align 4
  %108 = load i32, i32* %31, align 4
  %109 = load i32, i32* %32, align 4
  %110 = load i32, i32* %33, align 4
  %111 = load i32, i32* %34, align 4
  %112 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = call i32 @ILVL_B4_SH(i32 %113, i32 %104, i32 %115, i32 %105, i32 %117, i32 %106, i32 %119, i32 %107, i32 %108, i32 %109, i32 %110, i32 %111)
  %121 = load i32, i32* %19, align 4
  %122 = load i32, i32* %20, align 4
  %123 = load i32, i32* %21, align 4
  %124 = load i32, i32* %22, align 4
  %125 = load i32, i32* %43, align 4
  %126 = load i32, i32* %44, align 4
  %127 = load i32, i32* %45, align 4
  %128 = load i32, i32* %46, align 4
  %129 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = call i32 @ILVR_B4_SH(i32 %130, i32 %121, i32 %132, i32 %122, i32 %134, i32 %123, i32 %136, i32 %124, i32 %125, i32 %126, i32 %127, i32 %128)
  %138 = load i32, i32* %19, align 4
  %139 = load i32, i32* %20, align 4
  %140 = load i32, i32* %21, align 4
  %141 = load i32, i32* %22, align 4
  %142 = load i32, i32* %39, align 4
  %143 = load i32, i32* %40, align 4
  %144 = load i32, i32* %41, align 4
  %145 = load i32, i32* %42, align 4
  %146 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %149 = load i32, i32* %148, align 4
  %150 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = call i32 @ILVL_B4_SH(i32 %147, i32 %138, i32 %149, i32 %139, i32 %151, i32 %140, i32 %153, i32 %141, i32 %142, i32 %143, i32 %144, i32 %145)
  %155 = load i32, i32* %63, align 4
  %156 = load i32, i32* %35, align 4
  %157 = load i32, i32* %63, align 4
  %158 = load i32, i32* %31, align 4
  %159 = load i32, i32* %63, align 4
  %160 = load i32, i32* %36, align 4
  %161 = load i32, i32* %63, align 4
  %162 = load i32, i32* %32, align 4
  %163 = load i32, i32* %47, align 4
  %164 = load i32, i32* %48, align 4
  %165 = load i32, i32* %49, align 4
  %166 = load i32, i32* %50, align 4
  %167 = call i32 @MUL4(i32 %155, i32 %156, i32 %157, i32 %158, i32 %159, i32 %160, i32 %161, i32 %162, i32 %163, i32 %164, i32 %165, i32 %166)
  %168 = load i32, i32* %63, align 4
  %169 = load i32, i32* %37, align 4
  %170 = load i32, i32* %63, align 4
  %171 = load i32, i32* %33, align 4
  %172 = load i32, i32* %63, align 4
  %173 = load i32, i32* %38, align 4
  %174 = load i32, i32* %63, align 4
  %175 = load i32, i32* %34, align 4
  %176 = load i32, i32* %51, align 4
  %177 = load i32, i32* %52, align 4
  %178 = load i32, i32* %53, align 4
  %179 = load i32, i32* %54, align 4
  %180 = call i32 @MUL4(i32 %168, i32 %169, i32 %170, i32 %171, i32 %172, i32 %173, i32 %174, i32 %175, i32 %176, i32 %177, i32 %178, i32 %179)
  %181 = load i32, i32* %63, align 4
  %182 = load i32, i32* %43, align 4
  %183 = load i32, i32* %63, align 4
  %184 = load i32, i32* %39, align 4
  %185 = load i32, i32* %63, align 4
  %186 = load i32, i32* %44, align 4
  %187 = load i32, i32* %63, align 4
  %188 = load i32, i32* %40, align 4
  %189 = load i32, i32* %55, align 4
  %190 = load i32, i32* %56, align 4
  %191 = load i32, i32* %57, align 4
  %192 = load i32, i32* %58, align 4
  %193 = call i32 @MUL4(i32 %181, i32 %182, i32 %183, i32 %184, i32 %185, i32 %186, i32 %187, i32 %188, i32 %189, i32 %190, i32 %191, i32 %192)
  %194 = load i32, i32* %63, align 4
  %195 = load i32, i32* %45, align 4
  %196 = load i32, i32* %63, align 4
  %197 = load i32, i32* %41, align 4
  %198 = load i32, i32* %63, align 4
  %199 = load i32, i32* %46, align 4
  %200 = load i32, i32* %63, align 4
  %201 = load i32, i32* %42, align 4
  %202 = load i32, i32* %59, align 4
  %203 = load i32, i32* %60, align 4
  %204 = load i32, i32* %61, align 4
  %205 = load i32, i32* %62, align 4
  %206 = call i32 @MUL4(i32 %194, i32 %195, i32 %196, i32 %197, i32 %198, i32 %199, i32 %200, i32 %201, i32 %202, i32 %203, i32 %204, i32 %205)
  %207 = load i32, i32* %47, align 4
  %208 = load i32, i32* %65, align 4
  %209 = load i32, i32* %48, align 4
  %210 = load i32, i32* %65, align 4
  %211 = load i32, i32* %49, align 4
  %212 = load i32, i32* %65, align 4
  %213 = load i32, i32* %50, align 4
  %214 = load i32, i32* %65, align 4
  %215 = load i32, i32* %47, align 4
  %216 = load i32, i32* %48, align 4
  %217 = load i32, i32* %49, align 4
  %218 = load i32, i32* %50, align 4
  %219 = call i32 @ADDS_SH4_SH(i32 %207, i32 %208, i32 %209, i32 %210, i32 %211, i32 %212, i32 %213, i32 %214, i32 %215, i32 %216, i32 %217, i32 %218)
  %220 = load i32, i32* %51, align 4
  %221 = load i32, i32* %65, align 4
  %222 = load i32, i32* %52, align 4
  %223 = load i32, i32* %65, align 4
  %224 = load i32, i32* %53, align 4
  %225 = load i32, i32* %65, align 4
  %226 = load i32, i32* %54, align 4
  %227 = load i32, i32* %65, align 4
  %228 = load i32, i32* %51, align 4
  %229 = load i32, i32* %52, align 4
  %230 = load i32, i32* %53, align 4
  %231 = load i32, i32* %54, align 4
  %232 = call i32 @ADDS_SH4_SH(i32 %220, i32 %221, i32 %222, i32 %223, i32 %224, i32 %225, i32 %226, i32 %227, i32 %228, i32 %229, i32 %230, i32 %231)
  %233 = load i32, i32* %55, align 4
  %234 = load i32, i32* %65, align 4
  %235 = load i32, i32* %56, align 4
  %236 = load i32, i32* %65, align 4
  %237 = load i32, i32* %57, align 4
  %238 = load i32, i32* %65, align 4
  %239 = load i32, i32* %58, align 4
  %240 = load i32, i32* %65, align 4
  %241 = load i32, i32* %55, align 4
  %242 = load i32, i32* %56, align 4
  %243 = load i32, i32* %57, align 4
  %244 = load i32, i32* %58, align 4
  %245 = call i32 @ADDS_SH4_SH(i32 %233, i32 %234, i32 %235, i32 %236, i32 %237, i32 %238, i32 %239, i32 %240, i32 %241, i32 %242, i32 %243, i32 %244)
  %246 = load i32, i32* %59, align 4
  %247 = load i32, i32* %65, align 4
  %248 = load i32, i32* %60, align 4
  %249 = load i32, i32* %65, align 4
  %250 = load i32, i32* %61, align 4
  %251 = load i32, i32* %65, align 4
  %252 = load i32, i32* %62, align 4
  %253 = load i32, i32* %65, align 4
  %254 = load i32, i32* %59, align 4
  %255 = load i32, i32* %60, align 4
  %256 = load i32, i32* %61, align 4
  %257 = load i32, i32* %62, align 4
  %258 = call i32 @ADDS_SH4_SH(i32 %246, i32 %247, i32 %248, i32 %249, i32 %250, i32 %251, i32 %252, i32 %253, i32 %254, i32 %255, i32 %256, i32 %257)
  %259 = load i32, i32* %47, align 4
  %260 = load i32, i32* %48, align 4
  %261 = load i32, i32* %49, align 4
  %262 = load i32, i32* %50, align 4
  %263 = load i32, i32* %51, align 4
  %264 = load i32, i32* %52, align 4
  %265 = load i32, i32* %53, align 4
  %266 = load i32, i32* %54, align 4
  %267 = call i32 @MAXI_SH8_SH(i32 %259, i32 %260, i32 %261, i32 %262, i32 %263, i32 %264, i32 %265, i32 %266, i32 0)
  %268 = load i32, i32* %55, align 4
  %269 = load i32, i32* %56, align 4
  %270 = load i32, i32* %57, align 4
  %271 = load i32, i32* %58, align 4
  %272 = load i32, i32* %59, align 4
  %273 = load i32, i32* %60, align 4
  %274 = load i32, i32* %61, align 4
  %275 = load i32, i32* %62, align 4
  %276 = call i32 @MAXI_SH8_SH(i32 %268, i32 %269, i32 %270, i32 %271, i32 %272, i32 %273, i32 %274, i32 %275, i32 0)
  %277 = load i32, i32* %47, align 4
  %278 = load i32, i32* %48, align 4
  %279 = load i32, i32* %49, align 4
  %280 = load i32, i32* %50, align 4
  %281 = load i32, i32* %51, align 4
  %282 = load i32, i32* %52, align 4
  %283 = load i32, i32* %53, align 4
  %284 = load i32, i32* %54, align 4
  %285 = load i32, i32* %64, align 4
  %286 = call i32 @SRLR_H8_SH(i32 %277, i32 %278, i32 %279, i32 %280, i32 %281, i32 %282, i32 %283, i32 %284, i32 %285)
  %287 = load i32, i32* %55, align 4
  %288 = load i32, i32* %56, align 4
  %289 = load i32, i32* %57, align 4
  %290 = load i32, i32* %58, align 4
  %291 = load i32, i32* %59, align 4
  %292 = load i32, i32* %60, align 4
  %293 = load i32, i32* %61, align 4
  %294 = load i32, i32* %62, align 4
  %295 = load i32, i32* %64, align 4
  %296 = call i32 @SRLR_H8_SH(i32 %287, i32 %288, i32 %289, i32 %290, i32 %291, i32 %292, i32 %293, i32 %294, i32 %295)
  %297 = load i32, i32* %47, align 4
  %298 = load i32, i32* %48, align 4
  %299 = load i32, i32* %49, align 4
  %300 = load i32, i32* %50, align 4
  %301 = load i32, i32* %51, align 4
  %302 = load i32, i32* %52, align 4
  %303 = load i32, i32* %53, align 4
  %304 = load i32, i32* %54, align 4
  %305 = call i32 @SAT_UH8_SH(i32 %297, i32 %298, i32 %299, i32 %300, i32 %301, i32 %302, i32 %303, i32 %304, i32 7)
  %306 = load i32, i32* %55, align 4
  %307 = load i32, i32* %56, align 4
  %308 = load i32, i32* %57, align 4
  %309 = load i32, i32* %58, align 4
  %310 = load i32, i32* %59, align 4
  %311 = load i32, i32* %60, align 4
  %312 = load i32, i32* %61, align 4
  %313 = load i32, i32* %62, align 4
  %314 = call i32 @SAT_UH8_SH(i32 %306, i32 %307, i32 %308, i32 %309, i32 %310, i32 %311, i32 %312, i32 %313, i32 7)
  %315 = load i32, i32* %48, align 4
  %316 = load i32, i32* %47, align 4
  %317 = load i32, i32* %50, align 4
  %318 = load i32, i32* %49, align 4
  %319 = load i32, i32* %52, align 4
  %320 = load i32, i32* %51, align 4
  %321 = load i32, i32* %54, align 4
  %322 = load i32, i32* %53, align 4
  %323 = load i32, i32* %23, align 4
  %324 = load i32, i32* %24, align 4
  %325 = load i32, i32* %25, align 4
  %326 = load i32, i32* %26, align 4
  %327 = call i32 @PCKEV_B4_UB(i32 %315, i32 %316, i32 %317, i32 %318, i32 %319, i32 %320, i32 %321, i32 %322, i32 %323, i32 %324, i32 %325, i32 %326)
  %328 = load i32, i32* %56, align 4
  %329 = load i32, i32* %55, align 4
  %330 = load i32, i32* %58, align 4
  %331 = load i32, i32* %57, align 4
  %332 = load i32, i32* %60, align 4
  %333 = load i32, i32* %59, align 4
  %334 = load i32, i32* %62, align 4
  %335 = load i32, i32* %61, align 4
  %336 = load i32, i32* %27, align 4
  %337 = load i32, i32* %28, align 4
  %338 = load i32, i32* %29, align 4
  %339 = load i32, i32* %30, align 4
  %340 = call i32 @PCKEV_B4_UB(i32 %328, i32 %329, i32 %330, i32 %331, i32 %332, i32 %333, i32 %334, i32 %335, i32 %336, i32 %337, i32 %338, i32 %339)
  %341 = load i32, i32* %23, align 4
  %342 = load i32, i32* %24, align 4
  %343 = load i32, i32* %25, align 4
  %344 = load i32, i32* %26, align 4
  %345 = load i32, i32* %27, align 4
  %346 = load i32, i32* %28, align 4
  %347 = load i32, i32* %29, align 4
  %348 = load i32, i32* %30, align 4
  %349 = load i32*, i32** %7, align 8
  %350 = load i32, i32* %8, align 4
  %351 = call i32 @ST_UB8(i32 %341, i32 %342, i32 %343, i32 %344, i32 %345, i32 %346, i32 %347, i32 %348, i32* %349, i32 %350)
  %352 = load i32, i32* %8, align 4
  %353 = mul nsw i32 8, %352
  %354 = load i32*, i32** %7, align 8
  %355 = sext i32 %353 to i64
  %356 = getelementptr inbounds i32, i32* %354, i64 %355
  store i32* %356, i32** %7, align 8
  %357 = load i32, i32* %9, align 4
  %358 = icmp eq i32 16, %357
  br i1 %358, label %359, label %636

359:                                              ; preds = %6
  %360 = load i32*, i32** %7, align 8
  %361 = load i32, i32* %8, align 4
  %362 = load i32, i32* %15, align 4
  %363 = load i32, i32* %16, align 4
  %364 = load i32, i32* %17, align 4
  %365 = load i32, i32* %18, align 4
  %366 = load i32, i32* %19, align 4
  %367 = load i32, i32* %20, align 4
  %368 = load i32, i32* %21, align 4
  %369 = load i32, i32* %22, align 4
  %370 = call i32 @LD_UB8(i32* %360, i32 %361, i32 %362, i32 %363, i32 %364, i32 %365, i32 %366, i32 %367, i32 %368, i32 %369)
  %371 = load i32, i32* %15, align 4
  %372 = load i32, i32* %16, align 4
  %373 = load i32, i32* %17, align 4
  %374 = load i32, i32* %18, align 4
  %375 = load i32, i32* %35, align 4
  %376 = load i32, i32* %36, align 4
  %377 = load i32, i32* %37, align 4
  %378 = load i32, i32* %38, align 4
  %379 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %380 = load i32, i32* %379, align 4
  %381 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %382 = load i32, i32* %381, align 4
  %383 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %384 = load i32, i32* %383, align 4
  %385 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %386 = load i32, i32* %385, align 4
  %387 = call i32 @ILVR_B4_SH(i32 %380, i32 %371, i32 %382, i32 %372, i32 %384, i32 %373, i32 %386, i32 %374, i32 %375, i32 %376, i32 %377, i32 %378)
  %388 = load i32, i32* %15, align 4
  %389 = load i32, i32* %16, align 4
  %390 = load i32, i32* %17, align 4
  %391 = load i32, i32* %18, align 4
  %392 = load i32, i32* %31, align 4
  %393 = load i32, i32* %32, align 4
  %394 = load i32, i32* %33, align 4
  %395 = load i32, i32* %34, align 4
  %396 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %397 = load i32, i32* %396, align 4
  %398 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %399 = load i32, i32* %398, align 4
  %400 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %401 = load i32, i32* %400, align 4
  %402 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %403 = load i32, i32* %402, align 4
  %404 = call i32 @ILVL_B4_SH(i32 %397, i32 %388, i32 %399, i32 %389, i32 %401, i32 %390, i32 %403, i32 %391, i32 %392, i32 %393, i32 %394, i32 %395)
  %405 = load i32, i32* %19, align 4
  %406 = load i32, i32* %20, align 4
  %407 = load i32, i32* %21, align 4
  %408 = load i32, i32* %22, align 4
  %409 = load i32, i32* %43, align 4
  %410 = load i32, i32* %44, align 4
  %411 = load i32, i32* %45, align 4
  %412 = load i32, i32* %46, align 4
  %413 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %414 = load i32, i32* %413, align 4
  %415 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %416 = load i32, i32* %415, align 4
  %417 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %418 = load i32, i32* %417, align 4
  %419 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %420 = load i32, i32* %419, align 4
  %421 = call i32 @ILVR_B4_SH(i32 %414, i32 %405, i32 %416, i32 %406, i32 %418, i32 %407, i32 %420, i32 %408, i32 %409, i32 %410, i32 %411, i32 %412)
  %422 = load i32, i32* %19, align 4
  %423 = load i32, i32* %20, align 4
  %424 = load i32, i32* %21, align 4
  %425 = load i32, i32* %22, align 4
  %426 = load i32, i32* %39, align 4
  %427 = load i32, i32* %40, align 4
  %428 = load i32, i32* %41, align 4
  %429 = load i32, i32* %42, align 4
  %430 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %431 = load i32, i32* %430, align 4
  %432 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %433 = load i32, i32* %432, align 4
  %434 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %435 = load i32, i32* %434, align 4
  %436 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 0
  %437 = load i32, i32* %436, align 4
  %438 = call i32 @ILVL_B4_SH(i32 %431, i32 %422, i32 %433, i32 %423, i32 %435, i32 %424, i32 %437, i32 %425, i32 %426, i32 %427, i32 %428, i32 %429)
  %439 = load i32, i32* %63, align 4
  %440 = load i32, i32* %35, align 4
  %441 = load i32, i32* %63, align 4
  %442 = load i32, i32* %31, align 4
  %443 = load i32, i32* %63, align 4
  %444 = load i32, i32* %36, align 4
  %445 = load i32, i32* %63, align 4
  %446 = load i32, i32* %32, align 4
  %447 = load i32, i32* %47, align 4
  %448 = load i32, i32* %48, align 4
  %449 = load i32, i32* %49, align 4
  %450 = load i32, i32* %50, align 4
  %451 = call i32 @MUL4(i32 %439, i32 %440, i32 %441, i32 %442, i32 %443, i32 %444, i32 %445, i32 %446, i32 %447, i32 %448, i32 %449, i32 %450)
  %452 = load i32, i32* %63, align 4
  %453 = load i32, i32* %37, align 4
  %454 = load i32, i32* %63, align 4
  %455 = load i32, i32* %33, align 4
  %456 = load i32, i32* %63, align 4
  %457 = load i32, i32* %38, align 4
  %458 = load i32, i32* %63, align 4
  %459 = load i32, i32* %34, align 4
  %460 = load i32, i32* %51, align 4
  %461 = load i32, i32* %52, align 4
  %462 = load i32, i32* %53, align 4
  %463 = load i32, i32* %54, align 4
  %464 = call i32 @MUL4(i32 %452, i32 %453, i32 %454, i32 %455, i32 %456, i32 %457, i32 %458, i32 %459, i32 %460, i32 %461, i32 %462, i32 %463)
  %465 = load i32, i32* %63, align 4
  %466 = load i32, i32* %43, align 4
  %467 = load i32, i32* %63, align 4
  %468 = load i32, i32* %39, align 4
  %469 = load i32, i32* %63, align 4
  %470 = load i32, i32* %44, align 4
  %471 = load i32, i32* %63, align 4
  %472 = load i32, i32* %40, align 4
  %473 = load i32, i32* %55, align 4
  %474 = load i32, i32* %56, align 4
  %475 = load i32, i32* %57, align 4
  %476 = load i32, i32* %58, align 4
  %477 = call i32 @MUL4(i32 %465, i32 %466, i32 %467, i32 %468, i32 %469, i32 %470, i32 %471, i32 %472, i32 %473, i32 %474, i32 %475, i32 %476)
  %478 = load i32, i32* %63, align 4
  %479 = load i32, i32* %45, align 4
  %480 = load i32, i32* %63, align 4
  %481 = load i32, i32* %41, align 4
  %482 = load i32, i32* %63, align 4
  %483 = load i32, i32* %46, align 4
  %484 = load i32, i32* %63, align 4
  %485 = load i32, i32* %42, align 4
  %486 = load i32, i32* %59, align 4
  %487 = load i32, i32* %60, align 4
  %488 = load i32, i32* %61, align 4
  %489 = load i32, i32* %62, align 4
  %490 = call i32 @MUL4(i32 %478, i32 %479, i32 %480, i32 %481, i32 %482, i32 %483, i32 %484, i32 %485, i32 %486, i32 %487, i32 %488, i32 %489)
  %491 = load i32, i32* %47, align 4
  %492 = load i32, i32* %65, align 4
  %493 = load i32, i32* %48, align 4
  %494 = load i32, i32* %65, align 4
  %495 = load i32, i32* %49, align 4
  %496 = load i32, i32* %65, align 4
  %497 = load i32, i32* %50, align 4
  %498 = load i32, i32* %65, align 4
  %499 = load i32, i32* %47, align 4
  %500 = load i32, i32* %48, align 4
  %501 = load i32, i32* %49, align 4
  %502 = load i32, i32* %50, align 4
  %503 = call i32 @ADDS_SH4_SH(i32 %491, i32 %492, i32 %493, i32 %494, i32 %495, i32 %496, i32 %497, i32 %498, i32 %499, i32 %500, i32 %501, i32 %502)
  %504 = load i32, i32* %51, align 4
  %505 = load i32, i32* %65, align 4
  %506 = load i32, i32* %52, align 4
  %507 = load i32, i32* %65, align 4
  %508 = load i32, i32* %53, align 4
  %509 = load i32, i32* %65, align 4
  %510 = load i32, i32* %54, align 4
  %511 = load i32, i32* %65, align 4
  %512 = load i32, i32* %51, align 4
  %513 = load i32, i32* %52, align 4
  %514 = load i32, i32* %53, align 4
  %515 = load i32, i32* %54, align 4
  %516 = call i32 @ADDS_SH4_SH(i32 %504, i32 %505, i32 %506, i32 %507, i32 %508, i32 %509, i32 %510, i32 %511, i32 %512, i32 %513, i32 %514, i32 %515)
  %517 = load i32, i32* %55, align 4
  %518 = load i32, i32* %65, align 4
  %519 = load i32, i32* %56, align 4
  %520 = load i32, i32* %65, align 4
  %521 = load i32, i32* %57, align 4
  %522 = load i32, i32* %65, align 4
  %523 = load i32, i32* %58, align 4
  %524 = load i32, i32* %65, align 4
  %525 = load i32, i32* %55, align 4
  %526 = load i32, i32* %56, align 4
  %527 = load i32, i32* %57, align 4
  %528 = load i32, i32* %58, align 4
  %529 = call i32 @ADDS_SH4_SH(i32 %517, i32 %518, i32 %519, i32 %520, i32 %521, i32 %522, i32 %523, i32 %524, i32 %525, i32 %526, i32 %527, i32 %528)
  %530 = load i32, i32* %59, align 4
  %531 = load i32, i32* %65, align 4
  %532 = load i32, i32* %60, align 4
  %533 = load i32, i32* %65, align 4
  %534 = load i32, i32* %61, align 4
  %535 = load i32, i32* %65, align 4
  %536 = load i32, i32* %62, align 4
  %537 = load i32, i32* %65, align 4
  %538 = load i32, i32* %59, align 4
  %539 = load i32, i32* %60, align 4
  %540 = load i32, i32* %61, align 4
  %541 = load i32, i32* %62, align 4
  %542 = call i32 @ADDS_SH4_SH(i32 %530, i32 %531, i32 %532, i32 %533, i32 %534, i32 %535, i32 %536, i32 %537, i32 %538, i32 %539, i32 %540, i32 %541)
  %543 = load i32, i32* %47, align 4
  %544 = load i32, i32* %48, align 4
  %545 = load i32, i32* %49, align 4
  %546 = load i32, i32* %50, align 4
  %547 = load i32, i32* %51, align 4
  %548 = load i32, i32* %52, align 4
  %549 = load i32, i32* %53, align 4
  %550 = load i32, i32* %54, align 4
  %551 = call i32 @MAXI_SH8_SH(i32 %543, i32 %544, i32 %545, i32 %546, i32 %547, i32 %548, i32 %549, i32 %550, i32 0)
  %552 = load i32, i32* %55, align 4
  %553 = load i32, i32* %56, align 4
  %554 = load i32, i32* %57, align 4
  %555 = load i32, i32* %58, align 4
  %556 = load i32, i32* %59, align 4
  %557 = load i32, i32* %60, align 4
  %558 = load i32, i32* %61, align 4
  %559 = load i32, i32* %62, align 4
  %560 = call i32 @MAXI_SH8_SH(i32 %552, i32 %553, i32 %554, i32 %555, i32 %556, i32 %557, i32 %558, i32 %559, i32 0)
  %561 = load i32, i32* %47, align 4
  %562 = load i32, i32* %48, align 4
  %563 = load i32, i32* %49, align 4
  %564 = load i32, i32* %50, align 4
  %565 = load i32, i32* %51, align 4
  %566 = load i32, i32* %52, align 4
  %567 = load i32, i32* %53, align 4
  %568 = load i32, i32* %54, align 4
  %569 = load i32, i32* %64, align 4
  %570 = call i32 @SRLR_H8_SH(i32 %561, i32 %562, i32 %563, i32 %564, i32 %565, i32 %566, i32 %567, i32 %568, i32 %569)
  %571 = load i32, i32* %55, align 4
  %572 = load i32, i32* %56, align 4
  %573 = load i32, i32* %57, align 4
  %574 = load i32, i32* %58, align 4
  %575 = load i32, i32* %59, align 4
  %576 = load i32, i32* %60, align 4
  %577 = load i32, i32* %61, align 4
  %578 = load i32, i32* %62, align 4
  %579 = load i32, i32* %64, align 4
  %580 = call i32 @SRLR_H8_SH(i32 %571, i32 %572, i32 %573, i32 %574, i32 %575, i32 %576, i32 %577, i32 %578, i32 %579)
  %581 = load i32, i32* %47, align 4
  %582 = load i32, i32* %48, align 4
  %583 = load i32, i32* %49, align 4
  %584 = load i32, i32* %50, align 4
  %585 = load i32, i32* %51, align 4
  %586 = load i32, i32* %52, align 4
  %587 = load i32, i32* %53, align 4
  %588 = load i32, i32* %54, align 4
  %589 = call i32 @SAT_UH8_SH(i32 %581, i32 %582, i32 %583, i32 %584, i32 %585, i32 %586, i32 %587, i32 %588, i32 7)
  %590 = load i32, i32* %55, align 4
  %591 = load i32, i32* %56, align 4
  %592 = load i32, i32* %57, align 4
  %593 = load i32, i32* %58, align 4
  %594 = load i32, i32* %59, align 4
  %595 = load i32, i32* %60, align 4
  %596 = load i32, i32* %61, align 4
  %597 = load i32, i32* %62, align 4
  %598 = call i32 @SAT_UH8_SH(i32 %590, i32 %591, i32 %592, i32 %593, i32 %594, i32 %595, i32 %596, i32 %597, i32 7)
  %599 = load i32, i32* %48, align 4
  %600 = load i32, i32* %47, align 4
  %601 = load i32, i32* %50, align 4
  %602 = load i32, i32* %49, align 4
  %603 = load i32, i32* %52, align 4
  %604 = load i32, i32* %51, align 4
  %605 = load i32, i32* %54, align 4
  %606 = load i32, i32* %53, align 4
  %607 = load i32, i32* %23, align 4
  %608 = load i32, i32* %24, align 4
  %609 = load i32, i32* %25, align 4
  %610 = load i32, i32* %26, align 4
  %611 = call i32 @PCKEV_B4_UB(i32 %599, i32 %600, i32 %601, i32 %602, i32 %603, i32 %604, i32 %605, i32 %606, i32 %607, i32 %608, i32 %609, i32 %610)
  %612 = load i32, i32* %56, align 4
  %613 = load i32, i32* %55, align 4
  %614 = load i32, i32* %58, align 4
  %615 = load i32, i32* %57, align 4
  %616 = load i32, i32* %60, align 4
  %617 = load i32, i32* %59, align 4
  %618 = load i32, i32* %62, align 4
  %619 = load i32, i32* %61, align 4
  %620 = load i32, i32* %27, align 4
  %621 = load i32, i32* %28, align 4
  %622 = load i32, i32* %29, align 4
  %623 = load i32, i32* %30, align 4
  %624 = call i32 @PCKEV_B4_UB(i32 %612, i32 %613, i32 %614, i32 %615, i32 %616, i32 %617, i32 %618, i32 %619, i32 %620, i32 %621, i32 %622, i32 %623)
  %625 = load i32, i32* %23, align 4
  %626 = load i32, i32* %24, align 4
  %627 = load i32, i32* %25, align 4
  %628 = load i32, i32* %26, align 4
  %629 = load i32, i32* %27, align 4
  %630 = load i32, i32* %28, align 4
  %631 = load i32, i32* %29, align 4
  %632 = load i32, i32* %30, align 4
  %633 = load i32*, i32** %7, align 8
  %634 = load i32, i32* %8, align 4
  %635 = call i32 @ST_UB8(i32 %625, i32 %626, i32 %627, i32 %628, i32 %629, i32 %630, i32 %631, i32 %632, i32* %633, i32 %634)
  br label %636

636:                                              ; preds = %359, %6
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dso_local i32 @__msa_fill_h(i32) #2

declare dso_local i32 @LD_UB8(i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32) #2

declare dso_local i32 @ILVR_B4_SH(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) #2

declare dso_local i32 @ILVL_B4_SH(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) #2

declare dso_local i32 @MUL4(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) #2

declare dso_local i32 @ADDS_SH4_SH(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) #2

declare dso_local i32 @MAXI_SH8_SH(i32, i32, i32, i32, i32, i32, i32, i32, i32) #2

declare dso_local i32 @SRLR_H8_SH(i32, i32, i32, i32, i32, i32, i32, i32, i32) #2

declare dso_local i32 @SAT_UH8_SH(i32, i32, i32, i32, i32, i32, i32, i32, i32) #2

declare dso_local i32 @PCKEV_B4_UB(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) #2

declare dso_local i32 @ST_UB8(i32, i32, i32, i32, i32, i32, i32, i32, i32*, i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
