; ModuleID = '/home/carl/AnghaBench/FFmpeg/libavutil/extr_xtea.c_xtea_crypt_ecb.c'
source_filename = "/home/carl/AnghaBench/FFmpeg/libavutil/extr_xtea.c_xtea_crypt_ecb.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_3__ = type { i32* }

@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.TYPE_3__*, i32*, i32*, i32, i32*)* @xtea_crypt_ecb to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @xtea_crypt_ecb(%struct.TYPE_3__* %0, i32* %1, i32* %2, i32 %3, i32* %4) #0 {
  %6 = alloca %struct.TYPE_3__*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %struct.TYPE_3__* %0, %struct.TYPE_3__** %6, align 8
  store i32* %1, i32** %7, align 8
  store i32* %2, i32** %8, align 8
  store i32 %3, i32* %9, align 4
  store i32* %4, i32** %10, align 8
  %17 = load %struct.TYPE_3__*, %struct.TYPE_3__** %6, align 8
  %18 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %17, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds i32, i32* %19, i64 0
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %13, align 4
  %22 = load %struct.TYPE_3__*, %struct.TYPE_3__** %6, align 8
  %23 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %22, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 1
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %14, align 4
  %27 = load %struct.TYPE_3__*, %struct.TYPE_3__** %6, align 8
  %28 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %27, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 2
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %15, align 4
  %32 = load %struct.TYPE_3__*, %struct.TYPE_3__** %6, align 8
  %33 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %32, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 3
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %16, align 4
  %37 = load i32*, i32** %8, align 8
  %38 = call i32 @AV_RB32(i32* %37)
  store i32 %38, i32* %11, align 4
  %39 = load i32*, i32** %8, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 4
  %41 = call i32 @AV_RB32(i32* %40)
  store i32 %41, i32* %12, align 4
  %42 = load i32, i32* %9, align 4
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %44, label %829

44:                                               ; preds = %5
  %45 = load i32, i32* %11, align 4
  %46 = shl i32 %45, 4
  %47 = load i32, i32* %11, align 4
  %48 = ashr i32 %47, 5
  %49 = xor i32 %46, %48
  %50 = load i32, i32* %11, align 4
  %51 = add nsw i32 %49, %50
  %52 = load i32, i32* %15, align 4
  %53 = add i32 -957401312, %52
  %54 = xor i32 %51, %53
  %55 = load i32, i32* %12, align 4
  %56 = sub i32 %55, %54
  store i32 %56, i32* %12, align 4
  %57 = load i32, i32* %12, align 4
  %58 = shl i32 %57, 4
  %59 = load i32, i32* %12, align 4
  %60 = ashr i32 %59, 5
  %61 = xor i32 %58, %60
  %62 = load i32, i32* %12, align 4
  %63 = add nsw i32 %61, %62
  %64 = load i32, i32* %16, align 4
  %65 = add i32 683130215, %64
  %66 = xor i32 %63, %65
  %67 = load i32, i32* %11, align 4
  %68 = sub i32 %67, %66
  store i32 %68, i32* %11, align 4
  %69 = load i32, i32* %11, align 4
  %70 = shl i32 %69, 4
  %71 = load i32, i32* %11, align 4
  %72 = ashr i32 %71, 5
  %73 = xor i32 %70, %72
  %74 = load i32, i32* %11, align 4
  %75 = add nsw i32 %73, %74
  %76 = load i32, i32* %16, align 4
  %77 = add i32 683130215, %76
  %78 = xor i32 %75, %77
  %79 = load i32, i32* %12, align 4
  %80 = sub i32 %79, %78
  store i32 %80, i32* %12, align 4
  %81 = load i32, i32* %12, align 4
  %82 = shl i32 %81, 4
  %83 = load i32, i32* %12, align 4
  %84 = ashr i32 %83, 5
  %85 = xor i32 %82, %84
  %86 = load i32, i32* %12, align 4
  %87 = add nsw i32 %85, %86
  %88 = load i32, i32* %15, align 4
  %89 = add i32 -1971305554, %88
  %90 = xor i32 %87, %89
  %91 = load i32, i32* %11, align 4
  %92 = sub i32 %91, %90
  store i32 %92, i32* %11, align 4
  %93 = load i32, i32* %11, align 4
  %94 = shl i32 %93, 4
  %95 = load i32, i32* %11, align 4
  %96 = ashr i32 %95, 5
  %97 = xor i32 %94, %96
  %98 = load i32, i32* %11, align 4
  %99 = add nsw i32 %97, %98
  %100 = load i32, i32* %13, align 4
  %101 = add i32 -1971305554, %100
  %102 = xor i32 %99, %101
  %103 = load i32, i32* %12, align 4
  %104 = sub i32 %103, %102
  store i32 %104, i32* %12, align 4
  %105 = load i32, i32* %12, align 4
  %106 = shl i32 %105, 4
  %107 = load i32, i32* %12, align 4
  %108 = ashr i32 %107, 5
  %109 = xor i32 %106, %108
  %110 = load i32, i32* %12, align 4
  %111 = add nsw i32 %109, %110
  %112 = load i32, i32* %14, align 4
  %113 = add i32 -330774027, %112
  %114 = xor i32 %111, %113
  %115 = load i32, i32* %11, align 4
  %116 = sub i32 %115, %114
  store i32 %116, i32* %11, align 4
  %117 = load i32, i32* %11, align 4
  %118 = shl i32 %117, 4
  %119 = load i32, i32* %11, align 4
  %120 = ashr i32 %119, 5
  %121 = xor i32 %118, %120
  %122 = load i32, i32* %11, align 4
  %123 = add nsw i32 %121, %122
  %124 = load i32, i32* %14, align 4
  %125 = add i32 -330774027, %124
  %126 = xor i32 %123, %125
  %127 = load i32, i32* %12, align 4
  %128 = sub i32 %127, %126
  store i32 %128, i32* %12, align 4
  %129 = load i32, i32* %12, align 4
  %130 = shl i32 %129, 4
  %131 = load i32, i32* %12, align 4
  %132 = ashr i32 %131, 5
  %133 = xor i32 %130, %132
  %134 = load i32, i32* %12, align 4
  %135 = add nsw i32 %133, %134
  %136 = load i32, i32* %13, align 4
  %137 = add i32 1309757500, %136
  %138 = xor i32 %135, %137
  %139 = load i32, i32* %11, align 4
  %140 = sub i32 %139, %138
  store i32 %140, i32* %11, align 4
  %141 = load i32, i32* %11, align 4
  %142 = shl i32 %141, 4
  %143 = load i32, i32* %11, align 4
  %144 = ashr i32 %143, 5
  %145 = xor i32 %142, %144
  %146 = load i32, i32* %11, align 4
  %147 = add nsw i32 %145, %146
  %148 = load i32, i32* %15, align 4
  %149 = add i32 1309757500, %148
  %150 = xor i32 %147, %149
  %151 = load i32, i32* %12, align 4
  %152 = sub i32 %151, %150
  store i32 %152, i32* %12, align 4
  %153 = load i32, i32* %12, align 4
  %154 = shl i32 %153, 4
  %155 = load i32, i32* %12, align 4
  %156 = ashr i32 %155, 5
  %157 = xor i32 %154, %156
  %158 = load i32, i32* %12, align 4
  %159 = add nsw i32 %157, %158
  %160 = load i32, i32* %16, align 4
  %161 = add i32 -1344678269, %160
  %162 = xor i32 %159, %161
  %163 = load i32, i32* %11, align 4
  %164 = sub i32 %163, %162
  store i32 %164, i32* %11, align 4
  %165 = load i32, i32* %11, align 4
  %166 = shl i32 %165, 4
  %167 = load i32, i32* %11, align 4
  %168 = ashr i32 %167, 5
  %169 = xor i32 %166, %168
  %170 = load i32, i32* %11, align 4
  %171 = add nsw i32 %169, %170
  %172 = load i32, i32* %15, align 4
  %173 = add i32 -1344678269, %172
  %174 = xor i32 %171, %173
  %175 = load i32, i32* %12, align 4
  %176 = sub i32 %175, %174
  store i32 %176, i32* %12, align 4
  %177 = load i32, i32* %12, align 4
  %178 = shl i32 %177, 4
  %179 = load i32, i32* %12, align 4
  %180 = ashr i32 %179, 5
  %181 = xor i32 %178, %180
  %182 = load i32, i32* %12, align 4
  %183 = add nsw i32 %181, %182
  %184 = load i32, i32* %15, align 4
  %185 = add i32 295853258, %184
  %186 = xor i32 %183, %185
  %187 = load i32, i32* %11, align 4
  %188 = sub i32 %187, %186
  store i32 %188, i32* %11, align 4
  %189 = load i32, i32* %11, align 4
  %190 = shl i32 %189, 4
  %191 = load i32, i32* %11, align 4
  %192 = ashr i32 %191, 5
  %193 = xor i32 %190, %192
  %194 = load i32, i32* %11, align 4
  %195 = add nsw i32 %193, %194
  %196 = load i32, i32* %16, align 4
  %197 = add i32 295853258, %196
  %198 = xor i32 %195, %197
  %199 = load i32, i32* %12, align 4
  %200 = sub i32 %199, %198
  store i32 %200, i32* %12, align 4
  %201 = load i32, i32* %12, align 4
  %202 = shl i32 %201, 4
  %203 = load i32, i32* %12, align 4
  %204 = ashr i32 %203, 5
  %205 = xor i32 %202, %204
  %206 = load i32, i32* %12, align 4
  %207 = add nsw i32 %205, %206
  %208 = load i32, i32* %14, align 4
  %209 = add i32 1936384785, %208
  %210 = xor i32 %207, %209
  %211 = load i32, i32* %11, align 4
  %212 = sub i32 %211, %210
  store i32 %212, i32* %11, align 4
  %213 = load i32, i32* %11, align 4
  %214 = shl i32 %213, 4
  %215 = load i32, i32* %11, align 4
  %216 = ashr i32 %215, 5
  %217 = xor i32 %214, %216
  %218 = load i32, i32* %11, align 4
  %219 = add nsw i32 %217, %218
  %220 = load i32, i32* %13, align 4
  %221 = add i32 1936384785, %220
  %222 = xor i32 %219, %221
  %223 = load i32, i32* %12, align 4
  %224 = sub i32 %223, %222
  store i32 %224, i32* %12, align 4
  %225 = load i32, i32* %12, align 4
  %226 = shl i32 %225, 4
  %227 = load i32, i32* %12, align 4
  %228 = ashr i32 %227, 5
  %229 = xor i32 %226, %228
  %230 = load i32, i32* %12, align 4
  %231 = add nsw i32 %229, %230
  %232 = load i32, i32* %13, align 4
  %233 = add i32 -718050984, %232
  %234 = xor i32 %231, %233
  %235 = load i32, i32* %11, align 4
  %236 = sub i32 %235, %234
  store i32 %236, i32* %11, align 4
  %237 = load i32, i32* %11, align 4
  %238 = shl i32 %237, 4
  %239 = load i32, i32* %11, align 4
  %240 = ashr i32 %239, 5
  %241 = xor i32 %238, %240
  %242 = load i32, i32* %11, align 4
  %243 = add nsw i32 %241, %242
  %244 = load i32, i32* %14, align 4
  %245 = add i32 -718050984, %244
  %246 = xor i32 %243, %245
  %247 = load i32, i32* %12, align 4
  %248 = sub i32 %247, %246
  store i32 %248, i32* %12, align 4
  %249 = load i32, i32* %12, align 4
  %250 = shl i32 %249, 4
  %251 = load i32, i32* %12, align 4
  %252 = ashr i32 %251, 5
  %253 = xor i32 %250, %252
  %254 = load i32, i32* %12, align 4
  %255 = add nsw i32 %253, %254
  %256 = load i32, i32* %16, align 4
  %257 = add i32 922480543, %256
  %258 = xor i32 %255, %257
  %259 = load i32, i32* %11, align 4
  %260 = sub i32 %259, %258
  store i32 %260, i32* %11, align 4
  %261 = load i32, i32* %11, align 4
  %262 = shl i32 %261, 4
  %263 = load i32, i32* %11, align 4
  %264 = ashr i32 %263, 5
  %265 = xor i32 %262, %264
  %266 = load i32, i32* %11, align 4
  %267 = add nsw i32 %265, %266
  %268 = load i32, i32* %14, align 4
  %269 = add i32 922480543, %268
  %270 = xor i32 %267, %269
  %271 = load i32, i32* %12, align 4
  %272 = sub i32 %271, %270
  store i32 %272, i32* %12, align 4
  %273 = load i32, i32* %12, align 4
  %274 = shl i32 %273, 4
  %275 = load i32, i32* %12, align 4
  %276 = ashr i32 %275, 5
  %277 = xor i32 %274, %276
  %278 = load i32, i32* %12, align 4
  %279 = add nsw i32 %277, %278
  %280 = load i32, i32* %15, align 4
  %281 = add i32 -1731955226, %280
  %282 = xor i32 %279, %281
  %283 = load i32, i32* %11, align 4
  %284 = sub i32 %283, %282
  store i32 %284, i32* %11, align 4
  %285 = load i32, i32* %11, align 4
  %286 = shl i32 %285, 4
  %287 = load i32, i32* %11, align 4
  %288 = ashr i32 %287, 5
  %289 = xor i32 %286, %288
  %290 = load i32, i32* %11, align 4
  %291 = add nsw i32 %289, %290
  %292 = load i32, i32* %15, align 4
  %293 = add i32 -1731955226, %292
  %294 = xor i32 %291, %293
  %295 = load i32, i32* %12, align 4
  %296 = sub i32 %295, %294
  store i32 %296, i32* %12, align 4
  %297 = load i32, i32* %12, align 4
  %298 = shl i32 %297, 4
  %299 = load i32, i32* %12, align 4
  %300 = ashr i32 %299, 5
  %301 = xor i32 %298, %300
  %302 = load i32, i32* %12, align 4
  %303 = add nsw i32 %301, %302
  %304 = load i32, i32* %14, align 4
  %305 = add i32 -91423699, %304
  %306 = xor i32 %303, %305
  %307 = load i32, i32* %11, align 4
  %308 = sub i32 %307, %306
  store i32 %308, i32* %11, align 4
  %309 = load i32, i32* %11, align 4
  %310 = shl i32 %309, 4
  %311 = load i32, i32* %11, align 4
  %312 = ashr i32 %311, 5
  %313 = xor i32 %310, %312
  %314 = load i32, i32* %11, align 4
  %315 = add nsw i32 %313, %314
  %316 = load i32, i32* %16, align 4
  %317 = add i32 -91423699, %316
  %318 = xor i32 %315, %317
  %319 = load i32, i32* %12, align 4
  %320 = sub i32 %319, %318
  store i32 %320, i32* %12, align 4
  %321 = load i32, i32* %12, align 4
  %322 = shl i32 %321, 4
  %323 = load i32, i32* %12, align 4
  %324 = ashr i32 %323, 5
  %325 = xor i32 %322, %324
  %326 = load i32, i32* %12, align 4
  %327 = add nsw i32 %325, %326
  %328 = load i32, i32* %13, align 4
  %329 = add i32 1549107828, %328
  %330 = xor i32 %327, %329
  %331 = load i32, i32* %11, align 4
  %332 = sub i32 %331, %330
  store i32 %332, i32* %11, align 4
  %333 = load i32, i32* %11, align 4
  %334 = shl i32 %333, 4
  %335 = load i32, i32* %11, align 4
  %336 = ashr i32 %335, 5
  %337 = xor i32 %334, %336
  %338 = load i32, i32* %11, align 4
  %339 = add nsw i32 %337, %338
  %340 = load i32, i32* %13, align 4
  %341 = add i32 1549107828, %340
  %342 = xor i32 %339, %341
  %343 = load i32, i32* %12, align 4
  %344 = sub i32 %343, %342
  store i32 %344, i32* %12, align 4
  %345 = load i32, i32* %12, align 4
  %346 = shl i32 %345, 4
  %347 = load i32, i32* %12, align 4
  %348 = ashr i32 %347, 5
  %349 = xor i32 %346, %348
  %350 = load i32, i32* %12, align 4
  %351 = add nsw i32 %349, %350
  %352 = load i32, i32* %16, align 4
  %353 = add i32 -1105327941, %352
  %354 = xor i32 %351, %353
  %355 = load i32, i32* %11, align 4
  %356 = sub i32 %355, %354
  store i32 %356, i32* %11, align 4
  %357 = load i32, i32* %11, align 4
  %358 = shl i32 %357, 4
  %359 = load i32, i32* %11, align 4
  %360 = ashr i32 %359, 5
  %361 = xor i32 %358, %360
  %362 = load i32, i32* %11, align 4
  %363 = add nsw i32 %361, %362
  %364 = load i32, i32* %14, align 4
  %365 = add i32 -1105327941, %364
  %366 = xor i32 %363, %365
  %367 = load i32, i32* %12, align 4
  %368 = sub i32 %367, %366
  store i32 %368, i32* %12, align 4
  %369 = load i32, i32* %12, align 4
  %370 = shl i32 %369, 4
  %371 = load i32, i32* %12, align 4
  %372 = ashr i32 %371, 5
  %373 = xor i32 %370, %372
  %374 = load i32, i32* %12, align 4
  %375 = add nsw i32 %373, %374
  %376 = load i32, i32* %15, align 4
  %377 = add i32 535203586, %376
  %378 = xor i32 %375, %377
  %379 = load i32, i32* %11, align 4
  %380 = sub i32 %379, %378
  store i32 %380, i32* %11, align 4
  %381 = load i32, i32* %11, align 4
  %382 = shl i32 %381, 4
  %383 = load i32, i32* %11, align 4
  %384 = ashr i32 %383, 5
  %385 = xor i32 %382, %384
  %386 = load i32, i32* %11, align 4
  %387 = add nsw i32 %385, %386
  %388 = load i32, i32* %14, align 4
  %389 = add i32 535203586, %388
  %390 = xor i32 %387, %389
  %391 = load i32, i32* %12, align 4
  %392 = sub i32 %391, %390
  store i32 %392, i32* %12, align 4
  %393 = load i32, i32* %12, align 4
  %394 = shl i32 %393, 4
  %395 = load i32, i32* %12, align 4
  %396 = ashr i32 %395, 5
  %397 = xor i32 %394, %396
  %398 = load i32, i32* %12, align 4
  %399 = add nsw i32 %397, %398
  %400 = load i32, i32* %14, align 4
  %401 = add i32 -2119232183, %400
  %402 = xor i32 %399, %401
  %403 = load i32, i32* %11, align 4
  %404 = sub i32 %403, %402
  store i32 %404, i32* %11, align 4
  %405 = load i32, i32* %11, align 4
  %406 = shl i32 %405, 4
  %407 = load i32, i32* %11, align 4
  %408 = ashr i32 %407, 5
  %409 = xor i32 %406, %408
  %410 = load i32, i32* %11, align 4
  %411 = add nsw i32 %409, %410
  %412 = load i32, i32* %15, align 4
  %413 = add i32 -2119232183, %412
  %414 = xor i32 %411, %413
  %415 = load i32, i32* %12, align 4
  %416 = sub i32 %415, %414
  store i32 %416, i32* %12, align 4
  %417 = load i32, i32* %12, align 4
  %418 = shl i32 %417, 4
  %419 = load i32, i32* %12, align 4
  %420 = ashr i32 %419, 5
  %421 = xor i32 %418, %420
  %422 = load i32, i32* %12, align 4
  %423 = add nsw i32 %421, %422
  %424 = load i32, i32* %13, align 4
  %425 = add i32 -478700656, %424
  %426 = xor i32 %423, %425
  %427 = load i32, i32* %11, align 4
  %428 = sub i32 %427, %426
  store i32 %428, i32* %11, align 4
  %429 = load i32, i32* %11, align 4
  %430 = shl i32 %429, 4
  %431 = load i32, i32* %11, align 4
  %432 = ashr i32 %431, 5
  %433 = xor i32 %430, %432
  %434 = load i32, i32* %11, align 4
  %435 = add nsw i32 %433, %434
  %436 = load i32, i32* %16, align 4
  %437 = add i32 -478700656, %436
  %438 = xor i32 %435, %437
  %439 = load i32, i32* %12, align 4
  %440 = sub i32 %439, %438
  store i32 %440, i32* %12, align 4
  %441 = load i32, i32* %12, align 4
  %442 = shl i32 %441, 4
  %443 = load i32, i32* %12, align 4
  %444 = ashr i32 %443, 5
  %445 = xor i32 %442, %444
  %446 = load i32, i32* %12, align 4
  %447 = add nsw i32 %445, %446
  %448 = load i32, i32* %16, align 4
  %449 = add i32 1161830871, %448
  %450 = xor i32 %447, %449
  %451 = load i32, i32* %11, align 4
  %452 = sub i32 %451, %450
  store i32 %452, i32* %11, align 4
  %453 = load i32, i32* %11, align 4
  %454 = shl i32 %453, 4
  %455 = load i32, i32* %11, align 4
  %456 = ashr i32 %455, 5
  %457 = xor i32 %454, %456
  %458 = load i32, i32* %11, align 4
  %459 = add nsw i32 %457, %458
  %460 = load i32, i32* %13, align 4
  %461 = add i32 1161830871, %460
  %462 = xor i32 %459, %461
  %463 = load i32, i32* %12, align 4
  %464 = sub i32 %463, %462
  store i32 %464, i32* %12, align 4
  %465 = load i32, i32* %12, align 4
  %466 = shl i32 %465, 4
  %467 = load i32, i32* %12, align 4
  %468 = ashr i32 %467, 5
  %469 = xor i32 %466, %468
  %470 = load i32, i32* %12, align 4
  %471 = add nsw i32 %469, %470
  %472 = load i32, i32* %15, align 4
  %473 = add i32 -1492604898, %472
  %474 = xor i32 %471, %473
  %475 = load i32, i32* %11, align 4
  %476 = sub i32 %475, %474
  store i32 %476, i32* %11, align 4
  %477 = load i32, i32* %11, align 4
  %478 = shl i32 %477, 4
  %479 = load i32, i32* %11, align 4
  %480 = ashr i32 %479, 5
  %481 = xor i32 %478, %480
  %482 = load i32, i32* %11, align 4
  %483 = add nsw i32 %481, %482
  %484 = load i32, i32* %14, align 4
  %485 = add i32 -1492604898, %484
  %486 = xor i32 %483, %485
  %487 = load i32, i32* %12, align 4
  %488 = sub i32 %487, %486
  store i32 %488, i32* %12, align 4
  %489 = load i32, i32* %12, align 4
  %490 = shl i32 %489, 4
  %491 = load i32, i32* %12, align 4
  %492 = ashr i32 %491, 5
  %493 = xor i32 %490, %492
  %494 = load i32, i32* %12, align 4
  %495 = add nsw i32 %493, %494
  %496 = load i32, i32* %14, align 4
  %497 = add i32 147926629, %496
  %498 = xor i32 %495, %497
  %499 = load i32, i32* %11, align 4
  %500 = sub i32 %499, %498
  store i32 %500, i32* %11, align 4
  %501 = load i32, i32* %11, align 4
  %502 = shl i32 %501, 4
  %503 = load i32, i32* %11, align 4
  %504 = ashr i32 %503, 5
  %505 = xor i32 %502, %504
  %506 = load i32, i32* %11, align 4
  %507 = add nsw i32 %505, %506
  %508 = load i32, i32* %14, align 4
  %509 = add i32 147926629, %508
  %510 = xor i32 %507, %509
  %511 = load i32, i32* %12, align 4
  %512 = sub i32 %511, %510
  store i32 %512, i32* %12, align 4
  %513 = load i32, i32* %12, align 4
  %514 = shl i32 %513, 4
  %515 = load i32, i32* %12, align 4
  %516 = ashr i32 %515, 5
  %517 = xor i32 %514, %516
  %518 = load i32, i32* %12, align 4
  %519 = add nsw i32 %517, %518
  %520 = load i32, i32* %13, align 4
  %521 = add i32 1788458156, %520
  %522 = xor i32 %519, %521
  %523 = load i32, i32* %11, align 4
  %524 = sub i32 %523, %522
  store i32 %524, i32* %11, align 4
  %525 = load i32, i32* %11, align 4
  %526 = shl i32 %525, 4
  %527 = load i32, i32* %11, align 4
  %528 = ashr i32 %527, 5
  %529 = xor i32 %526, %528
  %530 = load i32, i32* %11, align 4
  %531 = add nsw i32 %529, %530
  %532 = load i32, i32* %15, align 4
  %533 = add i32 1788458156, %532
  %534 = xor i32 %531, %533
  %535 = load i32, i32* %12, align 4
  %536 = sub i32 %535, %534
  store i32 %536, i32* %12, align 4
  %537 = load i32, i32* %12, align 4
  %538 = shl i32 %537, 4
  %539 = load i32, i32* %12, align 4
  %540 = ashr i32 %539, 5
  %541 = xor i32 %538, %540
  %542 = load i32, i32* %12, align 4
  %543 = add nsw i32 %541, %542
  %544 = load i32, i32* %16, align 4
  %545 = add i32 -865977613, %544
  %546 = xor i32 %543, %545
  %547 = load i32, i32* %11, align 4
  %548 = sub i32 %547, %546
  store i32 %548, i32* %11, align 4
  %549 = load i32, i32* %11, align 4
  %550 = shl i32 %549, 4
  %551 = load i32, i32* %11, align 4
  %552 = ashr i32 %551, 5
  %553 = xor i32 %550, %552
  %554 = load i32, i32* %11, align 4
  %555 = add nsw i32 %553, %554
  %556 = load i32, i32* %16, align 4
  %557 = add i32 -865977613, %556
  %558 = xor i32 %555, %557
  %559 = load i32, i32* %12, align 4
  %560 = sub i32 %559, %558
  store i32 %560, i32* %12, align 4
  %561 = load i32, i32* %12, align 4
  %562 = shl i32 %561, 4
  %563 = load i32, i32* %12, align 4
  %564 = ashr i32 %563, 5
  %565 = xor i32 %562, %564
  %566 = load i32, i32* %12, align 4
  %567 = add nsw i32 %565, %566
  %568 = load i32, i32* %15, align 4
  %569 = add i32 774553914, %568
  %570 = xor i32 %567, %569
  %571 = load i32, i32* %11, align 4
  %572 = sub i32 %571, %570
  store i32 %572, i32* %11, align 4
  %573 = load i32, i32* %11, align 4
  %574 = shl i32 %573, 4
  %575 = load i32, i32* %11, align 4
  %576 = ashr i32 %575, 5
  %577 = xor i32 %574, %576
  %578 = load i32, i32* %11, align 4
  %579 = add nsw i32 %577, %578
  %580 = load i32, i32* %13, align 4
  %581 = add i32 774553914, %580
  %582 = xor i32 %579, %581
  %583 = load i32, i32* %12, align 4
  %584 = sub i32 %583, %582
  store i32 %584, i32* %12, align 4
  %585 = load i32, i32* %12, align 4
  %586 = shl i32 %585, 4
  %587 = load i32, i32* %12, align 4
  %588 = ashr i32 %587, 5
  %589 = xor i32 %586, %588
  %590 = load i32, i32* %12, align 4
  %591 = add nsw i32 %589, %590
  %592 = load i32, i32* %14, align 4
  %593 = add i32 -1879881855, %592
  %594 = xor i32 %591, %593
  %595 = load i32, i32* %11, align 4
  %596 = sub i32 %595, %594
  store i32 %596, i32* %11, align 4
  %597 = load i32, i32* %11, align 4
  %598 = shl i32 %597, 4
  %599 = load i32, i32* %11, align 4
  %600 = ashr i32 %599, 5
  %601 = xor i32 %598, %600
  %602 = load i32, i32* %11, align 4
  %603 = add nsw i32 %601, %602
  %604 = load i32, i32* %13, align 4
  %605 = add i32 -1879881855, %604
  %606 = xor i32 %603, %605
  %607 = load i32, i32* %12, align 4
  %608 = sub i32 %607, %606
  store i32 %608, i32* %12, align 4
  %609 = load i32, i32* %12, align 4
  %610 = shl i32 %609, 4
  %611 = load i32, i32* %12, align 4
  %612 = ashr i32 %611, 5
  %613 = xor i32 %610, %612
  %614 = load i32, i32* %12, align 4
  %615 = add nsw i32 %613, %614
  %616 = load i32, i32* %13, align 4
  %617 = add i32 -239350328, %616
  %618 = xor i32 %615, %617
  %619 = load i32, i32* %11, align 4
  %620 = sub i32 %619, %618
  store i32 %620, i32* %11, align 4
  %621 = load i32, i32* %11, align 4
  %622 = shl i32 %621, 4
  %623 = load i32, i32* %11, align 4
  %624 = ashr i32 %623, 5
  %625 = xor i32 %622, %624
  %626 = load i32, i32* %11, align 4
  %627 = add nsw i32 %625, %626
  %628 = load i32, i32* %14, align 4
  %629 = add i32 -239350328, %628
  %630 = xor i32 %627, %629
  %631 = load i32, i32* %12, align 4
  %632 = sub i32 %631, %630
  store i32 %632, i32* %12, align 4
  %633 = load i32, i32* %12, align 4
  %634 = shl i32 %633, 4
  %635 = load i32, i32* %12, align 4
  %636 = ashr i32 %635, 5
  %637 = xor i32 %634, %636
  %638 = load i32, i32* %12, align 4
  %639 = add nsw i32 %637, %638
  %640 = load i32, i32* %16, align 4
  %641 = add i32 1401181199, %640
  %642 = xor i32 %639, %641
  %643 = load i32, i32* %11, align 4
  %644 = sub i32 %643, %642
  store i32 %644, i32* %11, align 4
  %645 = load i32, i32* %11, align 4
  %646 = shl i32 %645, 4
  %647 = load i32, i32* %11, align 4
  %648 = ashr i32 %647, 5
  %649 = xor i32 %646, %648
  %650 = load i32, i32* %11, align 4
  %651 = add nsw i32 %649, %650
  %652 = load i32, i32* %15, align 4
  %653 = add i32 1401181199, %652
  %654 = xor i32 %651, %653
  %655 = load i32, i32* %12, align 4
  %656 = sub i32 %655, %654
  store i32 %656, i32* %12, align 4
  %657 = load i32, i32* %12, align 4
  %658 = shl i32 %657, 4
  %659 = load i32, i32* %12, align 4
  %660 = ashr i32 %659, 5
  %661 = xor i32 %658, %660
  %662 = load i32, i32* %12, align 4
  %663 = add nsw i32 %661, %662
  %664 = load i32, i32* %15, align 4
  %665 = add i32 -1253254570, %664
  %666 = xor i32 %663, %665
  %667 = load i32, i32* %11, align 4
  %668 = sub i32 %667, %666
  store i32 %668, i32* %11, align 4
  %669 = load i32, i32* %11, align 4
  %670 = shl i32 %669, 4
  %671 = load i32, i32* %11, align 4
  %672 = ashr i32 %671, 5
  %673 = xor i32 %670, %672
  %674 = load i32, i32* %11, align 4
  %675 = add nsw i32 %673, %674
  %676 = load i32, i32* %16, align 4
  %677 = add i32 -1253254570, %676
  %678 = xor i32 %675, %677
  %679 = load i32, i32* %12, align 4
  %680 = sub i32 %679, %678
  store i32 %680, i32* %12, align 4
  %681 = load i32, i32* %12, align 4
  %682 = shl i32 %681, 4
  %683 = load i32, i32* %12, align 4
  %684 = ashr i32 %683, 5
  %685 = xor i32 %682, %684
  %686 = load i32, i32* %12, align 4
  %687 = add nsw i32 %685, %686
  %688 = load i32, i32* %14, align 4
  %689 = add i32 387276957, %688
  %690 = xor i32 %687, %689
  %691 = load i32, i32* %11, align 4
  %692 = sub i32 %691, %690
  store i32 %692, i32* %11, align 4
  %693 = load i32, i32* %11, align 4
  %694 = shl i32 %693, 4
  %695 = load i32, i32* %11, align 4
  %696 = ashr i32 %695, 5
  %697 = xor i32 %694, %696
  %698 = load i32, i32* %11, align 4
  %699 = add nsw i32 %697, %698
  %700 = load i32, i32* %13, align 4
  %701 = add i32 387276957, %700
  %702 = xor i32 %699, %701
  %703 = load i32, i32* %12, align 4
  %704 = sub i32 %703, %702
  store i32 %704, i32* %12, align 4
  %705 = load i32, i32* %12, align 4
  %706 = shl i32 %705, 4
  %707 = load i32, i32* %12, align 4
  %708 = ashr i32 %707, 5
  %709 = xor i32 %706, %708
  %710 = load i32, i32* %12, align 4
  %711 = add nsw i32 %709, %710
  %712 = load i32, i32* %13, align 4
  %713 = add i32 2027808484, %712
  %714 = xor i32 %711, %713
  %715 = load i32, i32* %11, align 4
  %716 = sub i32 %715, %714
  store i32 %716, i32* %11, align 4
  %717 = load i32, i32* %11, align 4
  %718 = shl i32 %717, 4
  %719 = load i32, i32* %11, align 4
  %720 = ashr i32 %719, 5
  %721 = xor i32 %718, %720
  %722 = load i32, i32* %11, align 4
  %723 = add nsw i32 %721, %722
  %724 = load i32, i32* %13, align 4
  %725 = add i32 2027808484, %724
  %726 = xor i32 %723, %725
  %727 = load i32, i32* %12, align 4
  %728 = sub i32 %727, %726
  store i32 %728, i32* %12, align 4
  %729 = load i32, i32* %12, align 4
  %730 = shl i32 %729, 4
  %731 = load i32, i32* %12, align 4
  %732 = ashr i32 %731, 5
  %733 = xor i32 %730, %732
  %734 = load i32, i32* %12, align 4
  %735 = add nsw i32 %733, %734
  %736 = load i32, i32* %16, align 4
  %737 = add i32 -626627285, %736
  %738 = xor i32 %735, %737
  %739 = load i32, i32* %11, align 4
  %740 = sub i32 %739, %738
  store i32 %740, i32* %11, align 4
  %741 = load i32, i32* %11, align 4
  %742 = shl i32 %741, 4
  %743 = load i32, i32* %11, align 4
  %744 = ashr i32 %743, 5
  %745 = xor i32 %742, %744
  %746 = load i32, i32* %11, align 4
  %747 = add nsw i32 %745, %746
  %748 = load i32, i32* %14, align 4
  %749 = add i32 -626627285, %748
  %750 = xor i32 %747, %749
  %751 = load i32, i32* %12, align 4
  %752 = sub i32 %751, %750
  store i32 %752, i32* %12, align 4
  %753 = load i32, i32* %12, align 4
  %754 = shl i32 %753, 4
  %755 = load i32, i32* %12, align 4
  %756 = ashr i32 %755, 5
  %757 = xor i32 %754, %756
  %758 = load i32, i32* %12, align 4
  %759 = add nsw i32 %757, %758
  %760 = load i32, i32* %15, align 4
  %761 = add i32 1013904242, %760
  %762 = xor i32 %759, %761
  %763 = load i32, i32* %11, align 4
  %764 = sub i32 %763, %762
  store i32 %764, i32* %11, align 4
  %765 = load i32, i32* %11, align 4
  %766 = shl i32 %765, 4
  %767 = load i32, i32* %11, align 4
  %768 = ashr i32 %767, 5
  %769 = xor i32 %766, %768
  %770 = load i32, i32* %11, align 4
  %771 = add nsw i32 %769, %770
  %772 = load i32, i32* %15, align 4
  %773 = add i32 1013904242, %772
  %774 = xor i32 %771, %773
  %775 = load i32, i32* %12, align 4
  %776 = sub i32 %775, %774
  store i32 %776, i32* %12, align 4
  %777 = load i32, i32* %12, align 4
  %778 = shl i32 %777, 4
  %779 = load i32, i32* %12, align 4
  %780 = ashr i32 %779, 5
  %781 = xor i32 %778, %780
  %782 = load i32, i32* %12, align 4
  %783 = add nsw i32 %781, %782
  %784 = load i32, i32* %14, align 4
  %785 = add i32 -1640531527, %784
  %786 = xor i32 %783, %785
  %787 = load i32, i32* %11, align 4
  %788 = sub i32 %787, %786
  store i32 %788, i32* %11, align 4
  %789 = load i32, i32* %11, align 4
  %790 = shl i32 %789, 4
  %791 = load i32, i32* %11, align 4
  %792 = ashr i32 %791, 5
  %793 = xor i32 %790, %792
  %794 = load i32, i32* %11, align 4
  %795 = add nsw i32 %793, %794
  %796 = load i32, i32* %16, align 4
  %797 = add i32 -1640531527, %796
  %798 = xor i32 %795, %797
  %799 = load i32, i32* %12, align 4
  %800 = sub i32 %799, %798
  store i32 %800, i32* %12, align 4
  %801 = load i32, i32* %12, align 4
  %802 = shl i32 %801, 4
  %803 = load i32, i32* %12, align 4
  %804 = ashr i32 %803, 5
  %805 = xor i32 %802, %804
  %806 = load i32, i32* %12, align 4
  %807 = add nsw i32 %805, %806
  %808 = load i32, i32* %13, align 4
  %809 = add i32 0, %808
  %810 = xor i32 %807, %809
  %811 = load i32, i32* %11, align 4
  %812 = sub i32 %811, %810
  store i32 %812, i32* %11, align 4
  %813 = load i32*, i32** %10, align 8
  %814 = icmp ne i32* %813, null
  br i1 %814, label %815, label %828

815:                                              ; preds = %44
  %816 = load i32*, i32** %10, align 8
  %817 = call i32 @AV_RB32(i32* %816)
  %818 = load i32, i32* %11, align 4
  %819 = xor i32 %818, %817
  store i32 %819, i32* %11, align 4
  %820 = load i32*, i32** %10, align 8
  %821 = getelementptr inbounds i32, i32* %820, i64 4
  %822 = call i32 @AV_RB32(i32* %821)
  %823 = load i32, i32* %12, align 4
  %824 = xor i32 %823, %822
  store i32 %824, i32* %12, align 4
  %825 = load i32*, i32** %10, align 8
  %826 = load i32*, i32** %8, align 8
  %827 = call i32 @memcpy(i32* %825, i32* %826, i32 8)
  br label %828

828:                                              ; preds = %815, %44
  br label %1598

829:                                              ; preds = %5
  %830 = load i32, i32* %12, align 4
  %831 = shl i32 %830, 4
  %832 = load i32, i32* %12, align 4
  %833 = ashr i32 %832, 5
  %834 = xor i32 %831, %833
  %835 = load i32, i32* %12, align 4
  %836 = add nsw i32 %834, %835
  %837 = load i32, i32* %13, align 4
  %838 = add i32 0, %837
  %839 = xor i32 %836, %838
  %840 = load i32, i32* %11, align 4
  %841 = add i32 %840, %839
  store i32 %841, i32* %11, align 4
  %842 = load i32, i32* %11, align 4
  %843 = shl i32 %842, 4
  %844 = load i32, i32* %11, align 4
  %845 = ashr i32 %844, 5
  %846 = xor i32 %843, %845
  %847 = load i32, i32* %11, align 4
  %848 = add nsw i32 %846, %847
  %849 = load i32, i32* %16, align 4
  %850 = add i32 -1640531527, %849
  %851 = xor i32 %848, %850
  %852 = load i32, i32* %12, align 4
  %853 = add i32 %852, %851
  store i32 %853, i32* %12, align 4
  %854 = load i32, i32* %12, align 4
  %855 = shl i32 %854, 4
  %856 = load i32, i32* %12, align 4
  %857 = ashr i32 %856, 5
  %858 = xor i32 %855, %857
  %859 = load i32, i32* %12, align 4
  %860 = add nsw i32 %858, %859
  %861 = load i32, i32* %14, align 4
  %862 = add i32 -1640531527, %861
  %863 = xor i32 %860, %862
  %864 = load i32, i32* %11, align 4
  %865 = add i32 %864, %863
  store i32 %865, i32* %11, align 4
  %866 = load i32, i32* %11, align 4
  %867 = shl i32 %866, 4
  %868 = load i32, i32* %11, align 4
  %869 = ashr i32 %868, 5
  %870 = xor i32 %867, %869
  %871 = load i32, i32* %11, align 4
  %872 = add nsw i32 %870, %871
  %873 = load i32, i32* %15, align 4
  %874 = add i32 1013904242, %873
  %875 = xor i32 %872, %874
  %876 = load i32, i32* %12, align 4
  %877 = add i32 %876, %875
  store i32 %877, i32* %12, align 4
  %878 = load i32, i32* %12, align 4
  %879 = shl i32 %878, 4
  %880 = load i32, i32* %12, align 4
  %881 = ashr i32 %880, 5
  %882 = xor i32 %879, %881
  %883 = load i32, i32* %12, align 4
  %884 = add nsw i32 %882, %883
  %885 = load i32, i32* %15, align 4
  %886 = add i32 1013904242, %885
  %887 = xor i32 %884, %886
  %888 = load i32, i32* %11, align 4
  %889 = add i32 %888, %887
  store i32 %889, i32* %11, align 4
  %890 = load i32, i32* %11, align 4
  %891 = shl i32 %890, 4
  %892 = load i32, i32* %11, align 4
  %893 = ashr i32 %892, 5
  %894 = xor i32 %891, %893
  %895 = load i32, i32* %11, align 4
  %896 = add nsw i32 %894, %895
  %897 = load i32, i32* %14, align 4
  %898 = add i32 -626627285, %897
  %899 = xor i32 %896, %898
  %900 = load i32, i32* %12, align 4
  %901 = add i32 %900, %899
  store i32 %901, i32* %12, align 4
  %902 = load i32, i32* %12, align 4
  %903 = shl i32 %902, 4
  %904 = load i32, i32* %12, align 4
  %905 = ashr i32 %904, 5
  %906 = xor i32 %903, %905
  %907 = load i32, i32* %12, align 4
  %908 = add nsw i32 %906, %907
  %909 = load i32, i32* %16, align 4
  %910 = add i32 -626627285, %909
  %911 = xor i32 %908, %910
  %912 = load i32, i32* %11, align 4
  %913 = add i32 %912, %911
  store i32 %913, i32* %11, align 4
  %914 = load i32, i32* %11, align 4
  %915 = shl i32 %914, 4
  %916 = load i32, i32* %11, align 4
  %917 = ashr i32 %916, 5
  %918 = xor i32 %915, %917
  %919 = load i32, i32* %11, align 4
  %920 = add nsw i32 %918, %919
  %921 = load i32, i32* %13, align 4
  %922 = add i32 2027808484, %921
  %923 = xor i32 %920, %922
  %924 = load i32, i32* %12, align 4
  %925 = add i32 %924, %923
  store i32 %925, i32* %12, align 4
  %926 = load i32, i32* %12, align 4
  %927 = shl i32 %926, 4
  %928 = load i32, i32* %12, align 4
  %929 = ashr i32 %928, 5
  %930 = xor i32 %927, %929
  %931 = load i32, i32* %12, align 4
  %932 = add nsw i32 %930, %931
  %933 = load i32, i32* %13, align 4
  %934 = add i32 2027808484, %933
  %935 = xor i32 %932, %934
  %936 = load i32, i32* %11, align 4
  %937 = add i32 %936, %935
  store i32 %937, i32* %11, align 4
  %938 = load i32, i32* %11, align 4
  %939 = shl i32 %938, 4
  %940 = load i32, i32* %11, align 4
  %941 = ashr i32 %940, 5
  %942 = xor i32 %939, %941
  %943 = load i32, i32* %11, align 4
  %944 = add nsw i32 %942, %943
  %945 = load i32, i32* %13, align 4
  %946 = add i32 387276957, %945
  %947 = xor i32 %944, %946
  %948 = load i32, i32* %12, align 4
  %949 = add i32 %948, %947
  store i32 %949, i32* %12, align 4
  %950 = load i32, i32* %12, align 4
  %951 = shl i32 %950, 4
  %952 = load i32, i32* %12, align 4
  %953 = ashr i32 %952, 5
  %954 = xor i32 %951, %953
  %955 = load i32, i32* %12, align 4
  %956 = add nsw i32 %954, %955
  %957 = load i32, i32* %14, align 4
  %958 = add i32 387276957, %957
  %959 = xor i32 %956, %958
  %960 = load i32, i32* %11, align 4
  %961 = add i32 %960, %959
  store i32 %961, i32* %11, align 4
  %962 = load i32, i32* %11, align 4
  %963 = shl i32 %962, 4
  %964 = load i32, i32* %11, align 4
  %965 = ashr i32 %964, 5
  %966 = xor i32 %963, %965
  %967 = load i32, i32* %11, align 4
  %968 = add nsw i32 %966, %967
  %969 = load i32, i32* %16, align 4
  %970 = add i32 -1253254570, %969
  %971 = xor i32 %968, %970
  %972 = load i32, i32* %12, align 4
  %973 = add i32 %972, %971
  store i32 %973, i32* %12, align 4
  %974 = load i32, i32* %12, align 4
  %975 = shl i32 %974, 4
  %976 = load i32, i32* %12, align 4
  %977 = ashr i32 %976, 5
  %978 = xor i32 %975, %977
  %979 = load i32, i32* %12, align 4
  %980 = add nsw i32 %978, %979
  %981 = load i32, i32* %15, align 4
  %982 = add i32 -1253254570, %981
  %983 = xor i32 %980, %982
  %984 = load i32, i32* %11, align 4
  %985 = add i32 %984, %983
  store i32 %985, i32* %11, align 4
  %986 = load i32, i32* %11, align 4
  %987 = shl i32 %986, 4
  %988 = load i32, i32* %11, align 4
  %989 = ashr i32 %988, 5
  %990 = xor i32 %987, %989
  %991 = load i32, i32* %11, align 4
  %992 = add nsw i32 %990, %991
  %993 = load i32, i32* %15, align 4
  %994 = add i32 1401181199, %993
  %995 = xor i32 %992, %994
  %996 = load i32, i32* %12, align 4
  %997 = add i32 %996, %995
  store i32 %997, i32* %12, align 4
  %998 = load i32, i32* %12, align 4
  %999 = shl i32 %998, 4
  %1000 = load i32, i32* %12, align 4
  %1001 = ashr i32 %1000, 5
  %1002 = xor i32 %999, %1001
  %1003 = load i32, i32* %12, align 4
  %1004 = add nsw i32 %1002, %1003
  %1005 = load i32, i32* %16, align 4
  %1006 = add i32 1401181199, %1005
  %1007 = xor i32 %1004, %1006
  %1008 = load i32, i32* %11, align 4
  %1009 = add i32 %1008, %1007
  store i32 %1009, i32* %11, align 4
  %1010 = load i32, i32* %11, align 4
  %1011 = shl i32 %1010, 4
  %1012 = load i32, i32* %11, align 4
  %1013 = ashr i32 %1012, 5
  %1014 = xor i32 %1011, %1013
  %1015 = load i32, i32* %11, align 4
  %1016 = add nsw i32 %1014, %1015
  %1017 = load i32, i32* %14, align 4
  %1018 = add i32 -239350328, %1017
  %1019 = xor i32 %1016, %1018
  %1020 = load i32, i32* %12, align 4
  %1021 = add i32 %1020, %1019
  store i32 %1021, i32* %12, align 4
  %1022 = load i32, i32* %12, align 4
  %1023 = shl i32 %1022, 4
  %1024 = load i32, i32* %12, align 4
  %1025 = ashr i32 %1024, 5
  %1026 = xor i32 %1023, %1025
  %1027 = load i32, i32* %12, align 4
  %1028 = add nsw i32 %1026, %1027
  %1029 = load i32, i32* %13, align 4
  %1030 = add i32 -239350328, %1029
  %1031 = xor i32 %1028, %1030
  %1032 = load i32, i32* %11, align 4
  %1033 = add i32 %1032, %1031
  store i32 %1033, i32* %11, align 4
  %1034 = load i32, i32* %11, align 4
  %1035 = shl i32 %1034, 4
  %1036 = load i32, i32* %11, align 4
  %1037 = ashr i32 %1036, 5
  %1038 = xor i32 %1035, %1037
  %1039 = load i32, i32* %11, align 4
  %1040 = add nsw i32 %1038, %1039
  %1041 = load i32, i32* %13, align 4
  %1042 = add i32 -1879881855, %1041
  %1043 = xor i32 %1040, %1042
  %1044 = load i32, i32* %12, align 4
  %1045 = add i32 %1044, %1043
  store i32 %1045, i32* %12, align 4
  %1046 = load i32, i32* %12, align 4
  %1047 = shl i32 %1046, 4
  %1048 = load i32, i32* %12, align 4
  %1049 = ashr i32 %1048, 5
  %1050 = xor i32 %1047, %1049
  %1051 = load i32, i32* %12, align 4
  %1052 = add nsw i32 %1050, %1051
  %1053 = load i32, i32* %14, align 4
  %1054 = add i32 -1879881855, %1053
  %1055 = xor i32 %1052, %1054
  %1056 = load i32, i32* %11, align 4
  %1057 = add i32 %1056, %1055
  store i32 %1057, i32* %11, align 4
  %1058 = load i32, i32* %11, align 4
  %1059 = shl i32 %1058, 4
  %1060 = load i32, i32* %11, align 4
  %1061 = ashr i32 %1060, 5
  %1062 = xor i32 %1059, %1061
  %1063 = load i32, i32* %11, align 4
  %1064 = add nsw i32 %1062, %1063
  %1065 = load i32, i32* %13, align 4
  %1066 = add i32 774553914, %1065
  %1067 = xor i32 %1064, %1066
  %1068 = load i32, i32* %12, align 4
  %1069 = add i32 %1068, %1067
  store i32 %1069, i32* %12, align 4
  %1070 = load i32, i32* %12, align 4
  %1071 = shl i32 %1070, 4
  %1072 = load i32, i32* %12, align 4
  %1073 = ashr i32 %1072, 5
  %1074 = xor i32 %1071, %1073
  %1075 = load i32, i32* %12, align 4
  %1076 = add nsw i32 %1074, %1075
  %1077 = load i32, i32* %15, align 4
  %1078 = add i32 774553914, %1077
  %1079 = xor i32 %1076, %1078
  %1080 = load i32, i32* %11, align 4
  %1081 = add i32 %1080, %1079
  store i32 %1081, i32* %11, align 4
  %1082 = load i32, i32* %11, align 4
  %1083 = shl i32 %1082, 4
  %1084 = load i32, i32* %11, align 4
  %1085 = ashr i32 %1084, 5
  %1086 = xor i32 %1083, %1085
  %1087 = load i32, i32* %11, align 4
  %1088 = add nsw i32 %1086, %1087
  %1089 = load i32, i32* %16, align 4
  %1090 = add i32 -865977613, %1089
  %1091 = xor i32 %1088, %1090
  %1092 = load i32, i32* %12, align 4
  %1093 = add i32 %1092, %1091
  store i32 %1093, i32* %12, align 4
  %1094 = load i32, i32* %12, align 4
  %1095 = shl i32 %1094, 4
  %1096 = load i32, i32* %12, align 4
  %1097 = ashr i32 %1096, 5
  %1098 = xor i32 %1095, %1097
  %1099 = load i32, i32* %12, align 4
  %1100 = add nsw i32 %1098, %1099
  %1101 = load i32, i32* %16, align 4
  %1102 = add i32 -865977613, %1101
  %1103 = xor i32 %1100, %1102
  %1104 = load i32, i32* %11, align 4
  %1105 = add i32 %1104, %1103
  store i32 %1105, i32* %11, align 4
  %1106 = load i32, i32* %11, align 4
  %1107 = shl i32 %1106, 4
  %1108 = load i32, i32* %11, align 4
  %1109 = ashr i32 %1108, 5
  %1110 = xor i32 %1107, %1109
  %1111 = load i32, i32* %11, align 4
  %1112 = add nsw i32 %1110, %1111
  %1113 = load i32, i32* %15, align 4
  %1114 = add i32 1788458156, %1113
  %1115 = xor i32 %1112, %1114
  %1116 = load i32, i32* %12, align 4
  %1117 = add i32 %1116, %1115
  store i32 %1117, i32* %12, align 4
  %1118 = load i32, i32* %12, align 4
  %1119 = shl i32 %1118, 4
  %1120 = load i32, i32* %12, align 4
  %1121 = ashr i32 %1120, 5
  %1122 = xor i32 %1119, %1121
  %1123 = load i32, i32* %12, align 4
  %1124 = add nsw i32 %1122, %1123
  %1125 = load i32, i32* %13, align 4
  %1126 = add i32 1788458156, %1125
  %1127 = xor i32 %1124, %1126
  %1128 = load i32, i32* %11, align 4
  %1129 = add i32 %1128, %1127
  store i32 %1129, i32* %11, align 4
  %1130 = load i32, i32* %11, align 4
  %1131 = shl i32 %1130, 4
  %1132 = load i32, i32* %11, align 4
  %1133 = ashr i32 %1132, 5
  %1134 = xor i32 %1131, %1133
  %1135 = load i32, i32* %11, align 4
  %1136 = add nsw i32 %1134, %1135
  %1137 = load i32, i32* %14, align 4
  %1138 = add i32 147926629, %1137
  %1139 = xor i32 %1136, %1138
  %1140 = load i32, i32* %12, align 4
  %1141 = add i32 %1140, %1139
  store i32 %1141, i32* %12, align 4
  %1142 = load i32, i32* %12, align 4
  %1143 = shl i32 %1142, 4
  %1144 = load i32, i32* %12, align 4
  %1145 = ashr i32 %1144, 5
  %1146 = xor i32 %1143, %1145
  %1147 = load i32, i32* %12, align 4
  %1148 = add nsw i32 %1146, %1147
  %1149 = load i32, i32* %14, align 4
  %1150 = add i32 147926629, %1149
  %1151 = xor i32 %1148, %1150
  %1152 = load i32, i32* %11, align 4
  %1153 = add i32 %1152, %1151
  store i32 %1153, i32* %11, align 4
  %1154 = load i32, i32* %11, align 4
  %1155 = shl i32 %1154, 4
  %1156 = load i32, i32* %11, align 4
  %1157 = ashr i32 %1156, 5
  %1158 = xor i32 %1155, %1157
  %1159 = load i32, i32* %11, align 4
  %1160 = add nsw i32 %1158, %1159
  %1161 = load i32, i32* %14, align 4
  %1162 = add i32 -1492604898, %1161
  %1163 = xor i32 %1160, %1162
  %1164 = load i32, i32* %12, align 4
  %1165 = add i32 %1164, %1163
  store i32 %1165, i32* %12, align 4
  %1166 = load i32, i32* %12, align 4
  %1167 = shl i32 %1166, 4
  %1168 = load i32, i32* %12, align 4
  %1169 = ashr i32 %1168, 5
  %1170 = xor i32 %1167, %1169
  %1171 = load i32, i32* %12, align 4
  %1172 = add nsw i32 %1170, %1171
  %1173 = load i32, i32* %15, align 4
  %1174 = add i32 -1492604898, %1173
  %1175 = xor i32 %1172, %1174
  %1176 = load i32, i32* %11, align 4
  %1177 = add i32 %1176, %1175
  store i32 %1177, i32* %11, align 4
  %1178 = load i32, i32* %11, align 4
  %1179 = shl i32 %1178, 4
  %1180 = load i32, i32* %11, align 4
  %1181 = ashr i32 %1180, 5
  %1182 = xor i32 %1179, %1181
  %1183 = load i32, i32* %11, align 4
  %1184 = add nsw i32 %1182, %1183
  %1185 = load i32, i32* %13, align 4
  %1186 = add i32 1161830871, %1185
  %1187 = xor i32 %1184, %1186
  %1188 = load i32, i32* %12, align 4
  %1189 = add i32 %1188, %1187
  store i32 %1189, i32* %12, align 4
  %1190 = load i32, i32* %12, align 4
  %1191 = shl i32 %1190, 4
  %1192 = load i32, i32* %12, align 4
  %1193 = ashr i32 %1192, 5
  %1194 = xor i32 %1191, %1193
  %1195 = load i32, i32* %12, align 4
  %1196 = add nsw i32 %1194, %1195
  %1197 = load i32, i32* %16, align 4
  %1198 = add i32 1161830871, %1197
  %1199 = xor i32 %1196, %1198
  %1200 = load i32, i32* %11, align 4
  %1201 = add i32 %1200, %1199
  store i32 %1201, i32* %11, align 4
  %1202 = load i32, i32* %11, align 4
  %1203 = shl i32 %1202, 4
  %1204 = load i32, i32* %11, align 4
  %1205 = ashr i32 %1204, 5
  %1206 = xor i32 %1203, %1205
  %1207 = load i32, i32* %11, align 4
  %1208 = add nsw i32 %1206, %1207
  %1209 = load i32, i32* %16, align 4
  %1210 = add i32 -478700656, %1209
  %1211 = xor i32 %1208, %1210
  %1212 = load i32, i32* %12, align 4
  %1213 = add i32 %1212, %1211
  store i32 %1213, i32* %12, align 4
  %1214 = load i32, i32* %12, align 4
  %1215 = shl i32 %1214, 4
  %1216 = load i32, i32* %12, align 4
  %1217 = ashr i32 %1216, 5
  %1218 = xor i32 %1215, %1217
  %1219 = load i32, i32* %12, align 4
  %1220 = add nsw i32 %1218, %1219
  %1221 = load i32, i32* %13, align 4
  %1222 = add i32 -478700656, %1221
  %1223 = xor i32 %1220, %1222
  %1224 = load i32, i32* %11, align 4
  %1225 = add i32 %1224, %1223
  store i32 %1225, i32* %11, align 4
  %1226 = load i32, i32* %11, align 4
  %1227 = shl i32 %1226, 4
  %1228 = load i32, i32* %11, align 4
  %1229 = ashr i32 %1228, 5
  %1230 = xor i32 %1227, %1229
  %1231 = load i32, i32* %11, align 4
  %1232 = add nsw i32 %1230, %1231
  %1233 = load i32, i32* %15, align 4
  %1234 = add i32 -2119232183, %1233
  %1235 = xor i32 %1232, %1234
  %1236 = load i32, i32* %12, align 4
  %1237 = add i32 %1236, %1235
  store i32 %1237, i32* %12, align 4
  %1238 = load i32, i32* %12, align 4
  %1239 = shl i32 %1238, 4
  %1240 = load i32, i32* %12, align 4
  %1241 = ashr i32 %1240, 5
  %1242 = xor i32 %1239, %1241
  %1243 = load i32, i32* %12, align 4
  %1244 = add nsw i32 %1242, %1243
  %1245 = load i32, i32* %14, align 4
  %1246 = add i32 -2119232183, %1245
  %1247 = xor i32 %1244, %1246
  %1248 = load i32, i32* %11, align 4
  %1249 = add i32 %1248, %1247
  store i32 %1249, i32* %11, align 4
  %1250 = load i32, i32* %11, align 4
  %1251 = shl i32 %1250, 4
  %1252 = load i32, i32* %11, align 4
  %1253 = ashr i32 %1252, 5
  %1254 = xor i32 %1251, %1253
  %1255 = load i32, i32* %11, align 4
  %1256 = add nsw i32 %1254, %1255
  %1257 = load i32, i32* %14, align 4
  %1258 = add i32 535203586, %1257
  %1259 = xor i32 %1256, %1258
  %1260 = load i32, i32* %12, align 4
  %1261 = add i32 %1260, %1259
  store i32 %1261, i32* %12, align 4
  %1262 = load i32, i32* %12, align 4
  %1263 = shl i32 %1262, 4
  %1264 = load i32, i32* %12, align 4
  %1265 = ashr i32 %1264, 5
  %1266 = xor i32 %1263, %1265
  %1267 = load i32, i32* %12, align 4
  %1268 = add nsw i32 %1266, %1267
  %1269 = load i32, i32* %15, align 4
  %1270 = add i32 535203586, %1269
  %1271 = xor i32 %1268, %1270
  %1272 = load i32, i32* %11, align 4
  %1273 = add i32 %1272, %1271
  store i32 %1273, i32* %11, align 4
  %1274 = load i32, i32* %11, align 4
  %1275 = shl i32 %1274, 4
  %1276 = load i32, i32* %11, align 4
  %1277 = ashr i32 %1276, 5
  %1278 = xor i32 %1275, %1277
  %1279 = load i32, i32* %11, align 4
  %1280 = add nsw i32 %1278, %1279
  %1281 = load i32, i32* %14, align 4
  %1282 = add i32 -1105327941, %1281
  %1283 = xor i32 %1280, %1282
  %1284 = load i32, i32* %12, align 4
  %1285 = add i32 %1284, %1283
  store i32 %1285, i32* %12, align 4
  %1286 = load i32, i32* %12, align 4
  %1287 = shl i32 %1286, 4
  %1288 = load i32, i32* %12, align 4
  %1289 = ashr i32 %1288, 5
  %1290 = xor i32 %1287, %1289
  %1291 = load i32, i32* %12, align 4
  %1292 = add nsw i32 %1290, %1291
  %1293 = load i32, i32* %16, align 4
  %1294 = add i32 -1105327941, %1293
  %1295 = xor i32 %1292, %1294
  %1296 = load i32, i32* %11, align 4
  %1297 = add i32 %1296, %1295
  store i32 %1297, i32* %11, align 4
  %1298 = load i32, i32* %11, align 4
  %1299 = shl i32 %1298, 4
  %1300 = load i32, i32* %11, align 4
  %1301 = ashr i32 %1300, 5
  %1302 = xor i32 %1299, %1301
  %1303 = load i32, i32* %11, align 4
  %1304 = add nsw i32 %1302, %1303
  %1305 = load i32, i32* %13, align 4
  %1306 = add i32 1549107828, %1305
  %1307 = xor i32 %1304, %1306
  %1308 = load i32, i32* %12, align 4
  %1309 = add i32 %1308, %1307
  store i32 %1309, i32* %12, align 4
  %1310 = load i32, i32* %12, align 4
  %1311 = shl i32 %1310, 4
  %1312 = load i32, i32* %12, align 4
  %1313 = ashr i32 %1312, 5
  %1314 = xor i32 %1311, %1313
  %1315 = load i32, i32* %12, align 4
  %1316 = add nsw i32 %1314, %1315
  %1317 = load i32, i32* %13, align 4
  %1318 = add i32 1549107828, %1317
  %1319 = xor i32 %1316, %1318
  %1320 = load i32, i32* %11, align 4
  %1321 = add i32 %1320, %1319
  store i32 %1321, i32* %11, align 4
  %1322 = load i32, i32* %11, align 4
  %1323 = shl i32 %1322, 4
  %1324 = load i32, i32* %11, align 4
  %1325 = ashr i32 %1324, 5
  %1326 = xor i32 %1323, %1325
  %1327 = load i32, i32* %11, align 4
  %1328 = add nsw i32 %1326, %1327
  %1329 = load i32, i32* %16, align 4
  %1330 = add i32 -91423699, %1329
  %1331 = xor i32 %1328, %1330
  %1332 = load i32, i32* %12, align 4
  %1333 = add i32 %1332, %1331
  store i32 %1333, i32* %12, align 4
  %1334 = load i32, i32* %12, align 4
  %1335 = shl i32 %1334, 4
  %1336 = load i32, i32* %12, align 4
  %1337 = ashr i32 %1336, 5
  %1338 = xor i32 %1335, %1337
  %1339 = load i32, i32* %12, align 4
  %1340 = add nsw i32 %1338, %1339
  %1341 = load i32, i32* %14, align 4
  %1342 = add i32 -91423699, %1341
  %1343 = xor i32 %1340, %1342
  %1344 = load i32, i32* %11, align 4
  %1345 = add i32 %1344, %1343
  store i32 %1345, i32* %11, align 4
  %1346 = load i32, i32* %11, align 4
  %1347 = shl i32 %1346, 4
  %1348 = load i32, i32* %11, align 4
  %1349 = ashr i32 %1348, 5
  %1350 = xor i32 %1347, %1349
  %1351 = load i32, i32* %11, align 4
  %1352 = add nsw i32 %1350, %1351
  %1353 = load i32, i32* %15, align 4
  %1354 = add i32 -1731955226, %1353
  %1355 = xor i32 %1352, %1354
  %1356 = load i32, i32* %12, align 4
  %1357 = add i32 %1356, %1355
  store i32 %1357, i32* %12, align 4
  %1358 = load i32, i32* %12, align 4
  %1359 = shl i32 %1358, 4
  %1360 = load i32, i32* %12, align 4
  %1361 = ashr i32 %1360, 5
  %1362 = xor i32 %1359, %1361
  %1363 = load i32, i32* %12, align 4
  %1364 = add nsw i32 %1362, %1363
  %1365 = load i32, i32* %15, align 4
  %1366 = add i32 -1731955226, %1365
  %1367 = xor i32 %1364, %1366
  %1368 = load i32, i32* %11, align 4
  %1369 = add i32 %1368, %1367
  store i32 %1369, i32* %11, align 4
  %1370 = load i32, i32* %11, align 4
  %1371 = shl i32 %1370, 4
  %1372 = load i32, i32* %11, align 4
  %1373 = ashr i32 %1372, 5
  %1374 = xor i32 %1371, %1373
  %1375 = load i32, i32* %11, align 4
  %1376 = add nsw i32 %1374, %1375
  %1377 = load i32, i32* %14, align 4
  %1378 = add i32 922480543, %1377
  %1379 = xor i32 %1376, %1378
  %1380 = load i32, i32* %12, align 4
  %1381 = add i32 %1380, %1379
  store i32 %1381, i32* %12, align 4
  %1382 = load i32, i32* %12, align 4
  %1383 = shl i32 %1382, 4
  %1384 = load i32, i32* %12, align 4
  %1385 = ashr i32 %1384, 5
  %1386 = xor i32 %1383, %1385
  %1387 = load i32, i32* %12, align 4
  %1388 = add nsw i32 %1386, %1387
  %1389 = load i32, i32* %16, align 4
  %1390 = add i32 922480543, %1389
  %1391 = xor i32 %1388, %1390
  %1392 = load i32, i32* %11, align 4
  %1393 = add i32 %1392, %1391
  store i32 %1393, i32* %11, align 4
  %1394 = load i32, i32* %11, align 4
  %1395 = shl i32 %1394, 4
  %1396 = load i32, i32* %11, align 4
  %1397 = ashr i32 %1396, 5
  %1398 = xor i32 %1395, %1397
  %1399 = load i32, i32* %11, align 4
  %1400 = add nsw i32 %1398, %1399
  %1401 = load i32, i32* %14, align 4
  %1402 = add i32 -718050984, %1401
  %1403 = xor i32 %1400, %1402
  %1404 = load i32, i32* %12, align 4
  %1405 = add i32 %1404, %1403
  store i32 %1405, i32* %12, align 4
  %1406 = load i32, i32* %12, align 4
  %1407 = shl i32 %1406, 4
  %1408 = load i32, i32* %12, align 4
  %1409 = ashr i32 %1408, 5
  %1410 = xor i32 %1407, %1409
  %1411 = load i32, i32* %12, align 4
  %1412 = add nsw i32 %1410, %1411
  %1413 = load i32, i32* %13, align 4
  %1414 = add i32 -718050984, %1413
  %1415 = xor i32 %1412, %1414
  %1416 = load i32, i32* %11, align 4
  %1417 = add i32 %1416, %1415
  store i32 %1417, i32* %11, align 4
  %1418 = load i32, i32* %11, align 4
  %1419 = shl i32 %1418, 4
  %1420 = load i32, i32* %11, align 4
  %1421 = ashr i32 %1420, 5
  %1422 = xor i32 %1419, %1421
  %1423 = load i32, i32* %11, align 4
  %1424 = add nsw i32 %1422, %1423
  %1425 = load i32, i32* %13, align 4
  %1426 = add i32 1936384785, %1425
  %1427 = xor i32 %1424, %1426
  %1428 = load i32, i32* %12, align 4
  %1429 = add i32 %1428, %1427
  store i32 %1429, i32* %12, align 4
  %1430 = load i32, i32* %12, align 4
  %1431 = shl i32 %1430, 4
  %1432 = load i32, i32* %12, align 4
  %1433 = ashr i32 %1432, 5
  %1434 = xor i32 %1431, %1433
  %1435 = load i32, i32* %12, align 4
  %1436 = add nsw i32 %1434, %1435
  %1437 = load i32, i32* %14, align 4
  %1438 = add i32 1936384785, %1437
  %1439 = xor i32 %1436, %1438
  %1440 = load i32, i32* %11, align 4
  %1441 = add i32 %1440, %1439
  store i32 %1441, i32* %11, align 4
  %1442 = load i32, i32* %11, align 4
  %1443 = shl i32 %1442, 4
  %1444 = load i32, i32* %11, align 4
  %1445 = ashr i32 %1444, 5
  %1446 = xor i32 %1443, %1445
  %1447 = load i32, i32* %11, align 4
  %1448 = add nsw i32 %1446, %1447
  %1449 = load i32, i32* %16, align 4
  %1450 = add i32 295853258, %1449
  %1451 = xor i32 %1448, %1450
  %1452 = load i32, i32* %12, align 4
  %1453 = add i32 %1452, %1451
  store i32 %1453, i32* %12, align 4
  %1454 = load i32, i32* %12, align 4
  %1455 = shl i32 %1454, 4
  %1456 = load i32, i32* %12, align 4
  %1457 = ashr i32 %1456, 5
  %1458 = xor i32 %1455, %1457
  %1459 = load i32, i32* %12, align 4
  %1460 = add nsw i32 %1458, %1459
  %1461 = load i32, i32* %15, align 4
  %1462 = add i32 295853258, %1461
  %1463 = xor i32 %1460, %1462
  %1464 = load i32, i32* %11, align 4
  %1465 = add i32 %1464, %1463
  store i32 %1465, i32* %11, align 4
  %1466 = load i32, i32* %11, align 4
  %1467 = shl i32 %1466, 4
  %1468 = load i32, i32* %11, align 4
  %1469 = ashr i32 %1468, 5
  %1470 = xor i32 %1467, %1469
  %1471 = load i32, i32* %11, align 4
  %1472 = add nsw i32 %1470, %1471
  %1473 = load i32, i32* %15, align 4
  %1474 = add i32 -1344678269, %1473
  %1475 = xor i32 %1472, %1474
  %1476 = load i32, i32* %12, align 4
  %1477 = add i32 %1476, %1475
  store i32 %1477, i32* %12, align 4
  %1478 = load i32, i32* %12, align 4
  %1479 = shl i32 %1478, 4
  %1480 = load i32, i32* %12, align 4
  %1481 = ashr i32 %1480, 5
  %1482 = xor i32 %1479, %1481
  %1483 = load i32, i32* %12, align 4
  %1484 = add nsw i32 %1482, %1483
  %1485 = load i32, i32* %16, align 4
  %1486 = add i32 -1344678269, %1485
  %1487 = xor i32 %1484, %1486
  %1488 = load i32, i32* %11, align 4
  %1489 = add i32 %1488, %1487
  store i32 %1489, i32* %11, align 4
  %1490 = load i32, i32* %11, align 4
  %1491 = shl i32 %1490, 4
  %1492 = load i32, i32* %11, align 4
  %1493 = ashr i32 %1492, 5
  %1494 = xor i32 %1491, %1493
  %1495 = load i32, i32* %11, align 4
  %1496 = add nsw i32 %1494, %1495
  %1497 = load i32, i32* %15, align 4
  %1498 = add i32 1309757500, %1497
  %1499 = xor i32 %1496, %1498
  %1500 = load i32, i32* %12, align 4
  %1501 = add i32 %1500, %1499
  store i32 %1501, i32* %12, align 4
  %1502 = load i32, i32* %12, align 4
  %1503 = shl i32 %1502, 4
  %1504 = load i32, i32* %12, align 4
  %1505 = ashr i32 %1504, 5
  %1506 = xor i32 %1503, %1505
  %1507 = load i32, i32* %12, align 4
  %1508 = add nsw i32 %1506, %1507
  %1509 = load i32, i32* %13, align 4
  %1510 = add i32 1309757500, %1509
  %1511 = xor i32 %1508, %1510
  %1512 = load i32, i32* %11, align 4
  %1513 = add i32 %1512, %1511
  store i32 %1513, i32* %11, align 4
  %1514 = load i32, i32* %11, align 4
  %1515 = shl i32 %1514, 4
  %1516 = load i32, i32* %11, align 4
  %1517 = ashr i32 %1516, 5
  %1518 = xor i32 %1515, %1517
  %1519 = load i32, i32* %11, align 4
  %1520 = add nsw i32 %1518, %1519
  %1521 = load i32, i32* %14, align 4
  %1522 = add i32 -330774027, %1521
  %1523 = xor i32 %1520, %1522
  %1524 = load i32, i32* %12, align 4
  %1525 = add i32 %1524, %1523
  store i32 %1525, i32* %12, align 4
  %1526 = load i32, i32* %12, align 4
  %1527 = shl i32 %1526, 4
  %1528 = load i32, i32* %12, align 4
  %1529 = ashr i32 %1528, 5
  %1530 = xor i32 %1527, %1529
  %1531 = load i32, i32* %12, align 4
  %1532 = add nsw i32 %1530, %1531
  %1533 = load i32, i32* %14, align 4
  %1534 = add i32 -330774027, %1533
  %1535 = xor i32 %1532, %1534
  %1536 = load i32, i32* %11, align 4
  %1537 = add i32 %1536, %1535
  store i32 %1537, i32* %11, align 4
  %1538 = load i32, i32* %11, align 4
  %1539 = shl i32 %1538, 4
  %1540 = load i32, i32* %11, align 4
  %1541 = ashr i32 %1540, 5
  %1542 = xor i32 %1539, %1541
  %1543 = load i32, i32* %11, align 4
  %1544 = add nsw i32 %1542, %1543
  %1545 = load i32, i32* %13, align 4
  %1546 = add i32 -1971305554, %1545
  %1547 = xor i32 %1544, %1546
  %1548 = load i32, i32* %12, align 4
  %1549 = add i32 %1548, %1547
  store i32 %1549, i32* %12, align 4
  %1550 = load i32, i32* %12, align 4
  %1551 = shl i32 %1550, 4
  %1552 = load i32, i32* %12, align 4
  %1553 = ashr i32 %1552, 5
  %1554 = xor i32 %1551, %1553
  %1555 = load i32, i32* %12, align 4
  %1556 = add nsw i32 %1554, %1555
  %1557 = load i32, i32* %15, align 4
  %1558 = add i32 -1971305554, %1557
  %1559 = xor i32 %1556, %1558
  %1560 = load i32, i32* %11, align 4
  %1561 = add i32 %1560, %1559
  store i32 %1561, i32* %11, align 4
  %1562 = load i32, i32* %11, align 4
  %1563 = shl i32 %1562, 4
  %1564 = load i32, i32* %11, align 4
  %1565 = ashr i32 %1564, 5
  %1566 = xor i32 %1563, %1565
  %1567 = load i32, i32* %11, align 4
  %1568 = add nsw i32 %1566, %1567
  %1569 = load i32, i32* %16, align 4
  %1570 = add i32 683130215, %1569
  %1571 = xor i32 %1568, %1570
  %1572 = load i32, i32* %12, align 4
  %1573 = add i32 %1572, %1571
  store i32 %1573, i32* %12, align 4
  %1574 = load i32, i32* %12, align 4
  %1575 = shl i32 %1574, 4
  %1576 = load i32, i32* %12, align 4
  %1577 = ashr i32 %1576, 5
  %1578 = xor i32 %1575, %1577
  %1579 = load i32, i32* %12, align 4
  %1580 = add nsw i32 %1578, %1579
  %1581 = load i32, i32* %16, align 4
  %1582 = add i32 683130215, %1581
  %1583 = xor i32 %1580, %1582
  %1584 = load i32, i32* %11, align 4
  %1585 = add i32 %1584, %1583
  store i32 %1585, i32* %11, align 4
  %1586 = load i32, i32* %11, align 4
  %1587 = shl i32 %1586, 4
  %1588 = load i32, i32* %11, align 4
  %1589 = ashr i32 %1588, 5
  %1590 = xor i32 %1587, %1589
  %1591 = load i32, i32* %11, align 4
  %1592 = add nsw i32 %1590, %1591
  %1593 = load i32, i32* %15, align 4
  %1594 = add i32 -957401312, %1593
  %1595 = xor i32 %1592, %1594
  %1596 = load i32, i32* %12, align 4
  %1597 = add i32 %1596, %1595
  store i32 %1597, i32* %12, align 4
  br label %1598

1598:                                             ; preds = %829, %828
  %1599 = load i32*, i32** %7, align 8
  %1600 = load i32, i32* %11, align 4
  %1601 = call i32 @AV_WB32(i32* %1599, i32 %1600)
  %1602 = load i32*, i32** %7, align 8
  %1603 = getelementptr inbounds i32, i32* %1602, i64 4
  %1604 = load i32, i32* %12, align 4
  %1605 = call i32 @AV_WB32(i32* %1603, i32 %1604)
  ret void
}

declare dso_local i32 @AV_RB32(i32*) #1

declare dso_local i32 @memcpy(i32*, i32*, i32) #1

declare dso_local i32 @AV_WB32(i32*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
