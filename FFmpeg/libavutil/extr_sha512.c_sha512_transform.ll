; ModuleID = '/home/carl/AnghaBench/FFmpeg/libavutil/extr_sha512.c_sha512_transform.c'
source_filename = "/home/carl/AnghaBench/FFmpeg/libavutil/extr_sha512.c_sha512_transform.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@K512 = common dso_local global i64* null, align 8
@R512_0 = common dso_local global i32 0, align 4
@R512_16 = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i64*, i32*)* @sha512_transform to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sha512_transform(i64* %0, i32* %1) #0 {
  %3 = alloca i64*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca [80 x i64], align 16
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  store i64* %0, i64** %3, align 8
  store i32* %1, i32** %4, align 8
  %16 = load i64*, i64** %3, align 8
  %17 = getelementptr inbounds i64, i64* %16, i64 0
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %5, align 8
  %19 = load i64*, i64** %3, align 8
  %20 = getelementptr inbounds i64, i64* %19, i64 1
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %6, align 8
  %22 = load i64*, i64** %3, align 8
  %23 = getelementptr inbounds i64, i64* %22, i64 2
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %7, align 8
  %25 = load i64*, i64** %3, align 8
  %26 = getelementptr inbounds i64, i64* %25, i64 3
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %8, align 8
  %28 = load i64*, i64** %3, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 4
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %9, align 8
  %31 = load i64*, i64** %3, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 5
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %10, align 8
  %34 = load i64*, i64** %3, align 8
  %35 = getelementptr inbounds i64, i64* %34, i64 6
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %11, align 8
  %37 = load i64*, i64** %3, align 8
  %38 = getelementptr inbounds i64, i64* %37, i64 7
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %12, align 8
  store i32 0, i32* %15, align 4
  %40 = load i64, i64* %5, align 8
  %41 = load i64, i64* %6, align 8
  %42 = load i64, i64* %7, align 8
  %43 = load i64, i64* %8, align 8
  %44 = load i64, i64* %9, align 8
  %45 = load i64, i64* %10, align 8
  %46 = load i64, i64* %11, align 8
  %47 = load i64, i64* %12, align 8
  %48 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_0_TO_15 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %40, i64 %41, i64 %42, i64 %43, i64 %44, i64 %45, i64 %46, i64 %47)
  %49 = load i64, i64* %12, align 8
  %50 = load i64, i64* %5, align 8
  %51 = load i64, i64* %6, align 8
  %52 = load i64, i64* %7, align 8
  %53 = load i64, i64* %8, align 8
  %54 = load i64, i64* %9, align 8
  %55 = load i64, i64* %10, align 8
  %56 = load i64, i64* %11, align 8
  %57 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_0_TO_15 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %49, i64 %50, i64 %51, i64 %52, i64 %53, i64 %54, i64 %55, i64 %56)
  %58 = load i64, i64* %11, align 8
  %59 = load i64, i64* %12, align 8
  %60 = load i64, i64* %5, align 8
  %61 = load i64, i64* %6, align 8
  %62 = load i64, i64* %7, align 8
  %63 = load i64, i64* %8, align 8
  %64 = load i64, i64* %9, align 8
  %65 = load i64, i64* %10, align 8
  %66 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_0_TO_15 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %58, i64 %59, i64 %60, i64 %61, i64 %62, i64 %63, i64 %64, i64 %65)
  %67 = load i64, i64* %10, align 8
  %68 = load i64, i64* %11, align 8
  %69 = load i64, i64* %12, align 8
  %70 = load i64, i64* %5, align 8
  %71 = load i64, i64* %6, align 8
  %72 = load i64, i64* %7, align 8
  %73 = load i64, i64* %8, align 8
  %74 = load i64, i64* %9, align 8
  %75 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_0_TO_15 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %67, i64 %68, i64 %69, i64 %70, i64 %71, i64 %72, i64 %73, i64 %74)
  %76 = load i64, i64* %9, align 8
  %77 = load i64, i64* %10, align 8
  %78 = load i64, i64* %11, align 8
  %79 = load i64, i64* %12, align 8
  %80 = load i64, i64* %5, align 8
  %81 = load i64, i64* %6, align 8
  %82 = load i64, i64* %7, align 8
  %83 = load i64, i64* %8, align 8
  %84 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_0_TO_15 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %76, i64 %77, i64 %78, i64 %79, i64 %80, i64 %81, i64 %82, i64 %83)
  %85 = load i64, i64* %8, align 8
  %86 = load i64, i64* %9, align 8
  %87 = load i64, i64* %10, align 8
  %88 = load i64, i64* %11, align 8
  %89 = load i64, i64* %12, align 8
  %90 = load i64, i64* %5, align 8
  %91 = load i64, i64* %6, align 8
  %92 = load i64, i64* %7, align 8
  %93 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_0_TO_15 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %85, i64 %86, i64 %87, i64 %88, i64 %89, i64 %90, i64 %91, i64 %92)
  %94 = load i64, i64* %7, align 8
  %95 = load i64, i64* %8, align 8
  %96 = load i64, i64* %9, align 8
  %97 = load i64, i64* %10, align 8
  %98 = load i64, i64* %11, align 8
  %99 = load i64, i64* %12, align 8
  %100 = load i64, i64* %5, align 8
  %101 = load i64, i64* %6, align 8
  %102 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_0_TO_15 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %94, i64 %95, i64 %96, i64 %97, i64 %98, i64 %99, i64 %100, i64 %101)
  %103 = load i64, i64* %6, align 8
  %104 = load i64, i64* %7, align 8
  %105 = load i64, i64* %8, align 8
  %106 = load i64, i64* %9, align 8
  %107 = load i64, i64* %10, align 8
  %108 = load i64, i64* %11, align 8
  %109 = load i64, i64* %12, align 8
  %110 = load i64, i64* %5, align 8
  %111 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_0_TO_15 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %103, i64 %104, i64 %105, i64 %106, i64 %107, i64 %108, i64 %109, i64 %110)
  %112 = load i64, i64* %5, align 8
  %113 = load i64, i64* %6, align 8
  %114 = load i64, i64* %7, align 8
  %115 = load i64, i64* %8, align 8
  %116 = load i64, i64* %9, align 8
  %117 = load i64, i64* %10, align 8
  %118 = load i64, i64* %11, align 8
  %119 = load i64, i64* %12, align 8
  %120 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_0_TO_15 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %112, i64 %113, i64 %114, i64 %115, i64 %116, i64 %117, i64 %118, i64 %119)
  %121 = load i64, i64* %12, align 8
  %122 = load i64, i64* %5, align 8
  %123 = load i64, i64* %6, align 8
  %124 = load i64, i64* %7, align 8
  %125 = load i64, i64* %8, align 8
  %126 = load i64, i64* %9, align 8
  %127 = load i64, i64* %10, align 8
  %128 = load i64, i64* %11, align 8
  %129 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_0_TO_15 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %121, i64 %122, i64 %123, i64 %124, i64 %125, i64 %126, i64 %127, i64 %128)
  %130 = load i64, i64* %11, align 8
  %131 = load i64, i64* %12, align 8
  %132 = load i64, i64* %5, align 8
  %133 = load i64, i64* %6, align 8
  %134 = load i64, i64* %7, align 8
  %135 = load i64, i64* %8, align 8
  %136 = load i64, i64* %9, align 8
  %137 = load i64, i64* %10, align 8
  %138 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_0_TO_15 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %130, i64 %131, i64 %132, i64 %133, i64 %134, i64 %135, i64 %136, i64 %137)
  %139 = load i64, i64* %10, align 8
  %140 = load i64, i64* %11, align 8
  %141 = load i64, i64* %12, align 8
  %142 = load i64, i64* %5, align 8
  %143 = load i64, i64* %6, align 8
  %144 = load i64, i64* %7, align 8
  %145 = load i64, i64* %8, align 8
  %146 = load i64, i64* %9, align 8
  %147 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_0_TO_15 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %139, i64 %140, i64 %141, i64 %142, i64 %143, i64 %144, i64 %145, i64 %146)
  %148 = load i64, i64* %9, align 8
  %149 = load i64, i64* %10, align 8
  %150 = load i64, i64* %11, align 8
  %151 = load i64, i64* %12, align 8
  %152 = load i64, i64* %5, align 8
  %153 = load i64, i64* %6, align 8
  %154 = load i64, i64* %7, align 8
  %155 = load i64, i64* %8, align 8
  %156 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_0_TO_15 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %148, i64 %149, i64 %150, i64 %151, i64 %152, i64 %153, i64 %154, i64 %155)
  %157 = load i64, i64* %8, align 8
  %158 = load i64, i64* %9, align 8
  %159 = load i64, i64* %10, align 8
  %160 = load i64, i64* %11, align 8
  %161 = load i64, i64* %12, align 8
  %162 = load i64, i64* %5, align 8
  %163 = load i64, i64* %6, align 8
  %164 = load i64, i64* %7, align 8
  %165 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_0_TO_15 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %157, i64 %158, i64 %159, i64 %160, i64 %161, i64 %162, i64 %163, i64 %164)
  %166 = load i64, i64* %7, align 8
  %167 = load i64, i64* %8, align 8
  %168 = load i64, i64* %9, align 8
  %169 = load i64, i64* %10, align 8
  %170 = load i64, i64* %11, align 8
  %171 = load i64, i64* %12, align 8
  %172 = load i64, i64* %5, align 8
  %173 = load i64, i64* %6, align 8
  %174 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_0_TO_15 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %166, i64 %167, i64 %168, i64 %169, i64 %170, i64 %171, i64 %172, i64 %173)
  %175 = load i64, i64* %6, align 8
  %176 = load i64, i64* %7, align 8
  %177 = load i64, i64* %8, align 8
  %178 = load i64, i64* %9, align 8
  %179 = load i64, i64* %10, align 8
  %180 = load i64, i64* %11, align 8
  %181 = load i64, i64* %12, align 8
  %182 = load i64, i64* %5, align 8
  %183 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_0_TO_15 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %175, i64 %176, i64 %177, i64 %178, i64 %179, i64 %180, i64 %181, i64 %182)
  %184 = load i64, i64* %5, align 8
  %185 = load i64, i64* %6, align 8
  %186 = load i64, i64* %7, align 8
  %187 = load i64, i64* %8, align 8
  %188 = load i64, i64* %9, align 8
  %189 = load i64, i64* %10, align 8
  %190 = load i64, i64* %11, align 8
  %191 = load i64, i64* %12, align 8
  %192 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %184, i64 %185, i64 %186, i64 %187, i64 %188, i64 %189, i64 %190, i64 %191)
  %193 = load i64, i64* %12, align 8
  %194 = load i64, i64* %5, align 8
  %195 = load i64, i64* %6, align 8
  %196 = load i64, i64* %7, align 8
  %197 = load i64, i64* %8, align 8
  %198 = load i64, i64* %9, align 8
  %199 = load i64, i64* %10, align 8
  %200 = load i64, i64* %11, align 8
  %201 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %193, i64 %194, i64 %195, i64 %196, i64 %197, i64 %198, i64 %199, i64 %200)
  %202 = load i64, i64* %11, align 8
  %203 = load i64, i64* %12, align 8
  %204 = load i64, i64* %5, align 8
  %205 = load i64, i64* %6, align 8
  %206 = load i64, i64* %7, align 8
  %207 = load i64, i64* %8, align 8
  %208 = load i64, i64* %9, align 8
  %209 = load i64, i64* %10, align 8
  %210 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %202, i64 %203, i64 %204, i64 %205, i64 %206, i64 %207, i64 %208, i64 %209)
  %211 = load i64, i64* %10, align 8
  %212 = load i64, i64* %11, align 8
  %213 = load i64, i64* %12, align 8
  %214 = load i64, i64* %5, align 8
  %215 = load i64, i64* %6, align 8
  %216 = load i64, i64* %7, align 8
  %217 = load i64, i64* %8, align 8
  %218 = load i64, i64* %9, align 8
  %219 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %211, i64 %212, i64 %213, i64 %214, i64 %215, i64 %216, i64 %217, i64 %218)
  %220 = load i64, i64* %9, align 8
  %221 = load i64, i64* %10, align 8
  %222 = load i64, i64* %11, align 8
  %223 = load i64, i64* %12, align 8
  %224 = load i64, i64* %5, align 8
  %225 = load i64, i64* %6, align 8
  %226 = load i64, i64* %7, align 8
  %227 = load i64, i64* %8, align 8
  %228 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %220, i64 %221, i64 %222, i64 %223, i64 %224, i64 %225, i64 %226, i64 %227)
  %229 = load i64, i64* %8, align 8
  %230 = load i64, i64* %9, align 8
  %231 = load i64, i64* %10, align 8
  %232 = load i64, i64* %11, align 8
  %233 = load i64, i64* %12, align 8
  %234 = load i64, i64* %5, align 8
  %235 = load i64, i64* %6, align 8
  %236 = load i64, i64* %7, align 8
  %237 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %229, i64 %230, i64 %231, i64 %232, i64 %233, i64 %234, i64 %235, i64 %236)
  %238 = load i64, i64* %7, align 8
  %239 = load i64, i64* %8, align 8
  %240 = load i64, i64* %9, align 8
  %241 = load i64, i64* %10, align 8
  %242 = load i64, i64* %11, align 8
  %243 = load i64, i64* %12, align 8
  %244 = load i64, i64* %5, align 8
  %245 = load i64, i64* %6, align 8
  %246 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %238, i64 %239, i64 %240, i64 %241, i64 %242, i64 %243, i64 %244, i64 %245)
  %247 = load i64, i64* %6, align 8
  %248 = load i64, i64* %7, align 8
  %249 = load i64, i64* %8, align 8
  %250 = load i64, i64* %9, align 8
  %251 = load i64, i64* %10, align 8
  %252 = load i64, i64* %11, align 8
  %253 = load i64, i64* %12, align 8
  %254 = load i64, i64* %5, align 8
  %255 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %247, i64 %248, i64 %249, i64 %250, i64 %251, i64 %252, i64 %253, i64 %254)
  %256 = load i64, i64* %5, align 8
  %257 = load i64, i64* %6, align 8
  %258 = load i64, i64* %7, align 8
  %259 = load i64, i64* %8, align 8
  %260 = load i64, i64* %9, align 8
  %261 = load i64, i64* %10, align 8
  %262 = load i64, i64* %11, align 8
  %263 = load i64, i64* %12, align 8
  %264 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %256, i64 %257, i64 %258, i64 %259, i64 %260, i64 %261, i64 %262, i64 %263)
  %265 = load i64, i64* %12, align 8
  %266 = load i64, i64* %5, align 8
  %267 = load i64, i64* %6, align 8
  %268 = load i64, i64* %7, align 8
  %269 = load i64, i64* %8, align 8
  %270 = load i64, i64* %9, align 8
  %271 = load i64, i64* %10, align 8
  %272 = load i64, i64* %11, align 8
  %273 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %265, i64 %266, i64 %267, i64 %268, i64 %269, i64 %270, i64 %271, i64 %272)
  %274 = load i64, i64* %11, align 8
  %275 = load i64, i64* %12, align 8
  %276 = load i64, i64* %5, align 8
  %277 = load i64, i64* %6, align 8
  %278 = load i64, i64* %7, align 8
  %279 = load i64, i64* %8, align 8
  %280 = load i64, i64* %9, align 8
  %281 = load i64, i64* %10, align 8
  %282 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %274, i64 %275, i64 %276, i64 %277, i64 %278, i64 %279, i64 %280, i64 %281)
  %283 = load i64, i64* %10, align 8
  %284 = load i64, i64* %11, align 8
  %285 = load i64, i64* %12, align 8
  %286 = load i64, i64* %5, align 8
  %287 = load i64, i64* %6, align 8
  %288 = load i64, i64* %7, align 8
  %289 = load i64, i64* %8, align 8
  %290 = load i64, i64* %9, align 8
  %291 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %283, i64 %284, i64 %285, i64 %286, i64 %287, i64 %288, i64 %289, i64 %290)
  %292 = load i64, i64* %9, align 8
  %293 = load i64, i64* %10, align 8
  %294 = load i64, i64* %11, align 8
  %295 = load i64, i64* %12, align 8
  %296 = load i64, i64* %5, align 8
  %297 = load i64, i64* %6, align 8
  %298 = load i64, i64* %7, align 8
  %299 = load i64, i64* %8, align 8
  %300 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %292, i64 %293, i64 %294, i64 %295, i64 %296, i64 %297, i64 %298, i64 %299)
  %301 = load i64, i64* %8, align 8
  %302 = load i64, i64* %9, align 8
  %303 = load i64, i64* %10, align 8
  %304 = load i64, i64* %11, align 8
  %305 = load i64, i64* %12, align 8
  %306 = load i64, i64* %5, align 8
  %307 = load i64, i64* %6, align 8
  %308 = load i64, i64* %7, align 8
  %309 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %301, i64 %302, i64 %303, i64 %304, i64 %305, i64 %306, i64 %307, i64 %308)
  %310 = load i64, i64* %7, align 8
  %311 = load i64, i64* %8, align 8
  %312 = load i64, i64* %9, align 8
  %313 = load i64, i64* %10, align 8
  %314 = load i64, i64* %11, align 8
  %315 = load i64, i64* %12, align 8
  %316 = load i64, i64* %5, align 8
  %317 = load i64, i64* %6, align 8
  %318 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %310, i64 %311, i64 %312, i64 %313, i64 %314, i64 %315, i64 %316, i64 %317)
  %319 = load i64, i64* %6, align 8
  %320 = load i64, i64* %7, align 8
  %321 = load i64, i64* %8, align 8
  %322 = load i64, i64* %9, align 8
  %323 = load i64, i64* %10, align 8
  %324 = load i64, i64* %11, align 8
  %325 = load i64, i64* %12, align 8
  %326 = load i64, i64* %5, align 8
  %327 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %319, i64 %320, i64 %321, i64 %322, i64 %323, i64 %324, i64 %325, i64 %326)
  %328 = load i64, i64* %5, align 8
  %329 = load i64, i64* %6, align 8
  %330 = load i64, i64* %7, align 8
  %331 = load i64, i64* %8, align 8
  %332 = load i64, i64* %9, align 8
  %333 = load i64, i64* %10, align 8
  %334 = load i64, i64* %11, align 8
  %335 = load i64, i64* %12, align 8
  %336 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %328, i64 %329, i64 %330, i64 %331, i64 %332, i64 %333, i64 %334, i64 %335)
  %337 = load i64, i64* %12, align 8
  %338 = load i64, i64* %5, align 8
  %339 = load i64, i64* %6, align 8
  %340 = load i64, i64* %7, align 8
  %341 = load i64, i64* %8, align 8
  %342 = load i64, i64* %9, align 8
  %343 = load i64, i64* %10, align 8
  %344 = load i64, i64* %11, align 8
  %345 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %337, i64 %338, i64 %339, i64 %340, i64 %341, i64 %342, i64 %343, i64 %344)
  %346 = load i64, i64* %11, align 8
  %347 = load i64, i64* %12, align 8
  %348 = load i64, i64* %5, align 8
  %349 = load i64, i64* %6, align 8
  %350 = load i64, i64* %7, align 8
  %351 = load i64, i64* %8, align 8
  %352 = load i64, i64* %9, align 8
  %353 = load i64, i64* %10, align 8
  %354 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %346, i64 %347, i64 %348, i64 %349, i64 %350, i64 %351, i64 %352, i64 %353)
  %355 = load i64, i64* %10, align 8
  %356 = load i64, i64* %11, align 8
  %357 = load i64, i64* %12, align 8
  %358 = load i64, i64* %5, align 8
  %359 = load i64, i64* %6, align 8
  %360 = load i64, i64* %7, align 8
  %361 = load i64, i64* %8, align 8
  %362 = load i64, i64* %9, align 8
  %363 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %355, i64 %356, i64 %357, i64 %358, i64 %359, i64 %360, i64 %361, i64 %362)
  %364 = load i64, i64* %9, align 8
  %365 = load i64, i64* %10, align 8
  %366 = load i64, i64* %11, align 8
  %367 = load i64, i64* %12, align 8
  %368 = load i64, i64* %5, align 8
  %369 = load i64, i64* %6, align 8
  %370 = load i64, i64* %7, align 8
  %371 = load i64, i64* %8, align 8
  %372 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %364, i64 %365, i64 %366, i64 %367, i64 %368, i64 %369, i64 %370, i64 %371)
  %373 = load i64, i64* %8, align 8
  %374 = load i64, i64* %9, align 8
  %375 = load i64, i64* %10, align 8
  %376 = load i64, i64* %11, align 8
  %377 = load i64, i64* %12, align 8
  %378 = load i64, i64* %5, align 8
  %379 = load i64, i64* %6, align 8
  %380 = load i64, i64* %7, align 8
  %381 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %373, i64 %374, i64 %375, i64 %376, i64 %377, i64 %378, i64 %379, i64 %380)
  %382 = load i64, i64* %7, align 8
  %383 = load i64, i64* %8, align 8
  %384 = load i64, i64* %9, align 8
  %385 = load i64, i64* %10, align 8
  %386 = load i64, i64* %11, align 8
  %387 = load i64, i64* %12, align 8
  %388 = load i64, i64* %5, align 8
  %389 = load i64, i64* %6, align 8
  %390 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %382, i64 %383, i64 %384, i64 %385, i64 %386, i64 %387, i64 %388, i64 %389)
  %391 = load i64, i64* %6, align 8
  %392 = load i64, i64* %7, align 8
  %393 = load i64, i64* %8, align 8
  %394 = load i64, i64* %9, align 8
  %395 = load i64, i64* %10, align 8
  %396 = load i64, i64* %11, align 8
  %397 = load i64, i64* %12, align 8
  %398 = load i64, i64* %5, align 8
  %399 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %391, i64 %392, i64 %393, i64 %394, i64 %395, i64 %396, i64 %397, i64 %398)
  %400 = load i64, i64* %5, align 8
  %401 = load i64, i64* %6, align 8
  %402 = load i64, i64* %7, align 8
  %403 = load i64, i64* %8, align 8
  %404 = load i64, i64* %9, align 8
  %405 = load i64, i64* %10, align 8
  %406 = load i64, i64* %11, align 8
  %407 = load i64, i64* %12, align 8
  %408 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %400, i64 %401, i64 %402, i64 %403, i64 %404, i64 %405, i64 %406, i64 %407)
  %409 = load i64, i64* %12, align 8
  %410 = load i64, i64* %5, align 8
  %411 = load i64, i64* %6, align 8
  %412 = load i64, i64* %7, align 8
  %413 = load i64, i64* %8, align 8
  %414 = load i64, i64* %9, align 8
  %415 = load i64, i64* %10, align 8
  %416 = load i64, i64* %11, align 8
  %417 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %409, i64 %410, i64 %411, i64 %412, i64 %413, i64 %414, i64 %415, i64 %416)
  %418 = load i64, i64* %11, align 8
  %419 = load i64, i64* %12, align 8
  %420 = load i64, i64* %5, align 8
  %421 = load i64, i64* %6, align 8
  %422 = load i64, i64* %7, align 8
  %423 = load i64, i64* %8, align 8
  %424 = load i64, i64* %9, align 8
  %425 = load i64, i64* %10, align 8
  %426 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %418, i64 %419, i64 %420, i64 %421, i64 %422, i64 %423, i64 %424, i64 %425)
  %427 = load i64, i64* %10, align 8
  %428 = load i64, i64* %11, align 8
  %429 = load i64, i64* %12, align 8
  %430 = load i64, i64* %5, align 8
  %431 = load i64, i64* %6, align 8
  %432 = load i64, i64* %7, align 8
  %433 = load i64, i64* %8, align 8
  %434 = load i64, i64* %9, align 8
  %435 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %427, i64 %428, i64 %429, i64 %430, i64 %431, i64 %432, i64 %433, i64 %434)
  %436 = load i64, i64* %9, align 8
  %437 = load i64, i64* %10, align 8
  %438 = load i64, i64* %11, align 8
  %439 = load i64, i64* %12, align 8
  %440 = load i64, i64* %5, align 8
  %441 = load i64, i64* %6, align 8
  %442 = load i64, i64* %7, align 8
  %443 = load i64, i64* %8, align 8
  %444 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %436, i64 %437, i64 %438, i64 %439, i64 %440, i64 %441, i64 %442, i64 %443)
  %445 = load i64, i64* %8, align 8
  %446 = load i64, i64* %9, align 8
  %447 = load i64, i64* %10, align 8
  %448 = load i64, i64* %11, align 8
  %449 = load i64, i64* %12, align 8
  %450 = load i64, i64* %5, align 8
  %451 = load i64, i64* %6, align 8
  %452 = load i64, i64* %7, align 8
  %453 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %445, i64 %446, i64 %447, i64 %448, i64 %449, i64 %450, i64 %451, i64 %452)
  %454 = load i64, i64* %7, align 8
  %455 = load i64, i64* %8, align 8
  %456 = load i64, i64* %9, align 8
  %457 = load i64, i64* %10, align 8
  %458 = load i64, i64* %11, align 8
  %459 = load i64, i64* %12, align 8
  %460 = load i64, i64* %5, align 8
  %461 = load i64, i64* %6, align 8
  %462 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %454, i64 %455, i64 %456, i64 %457, i64 %458, i64 %459, i64 %460, i64 %461)
  %463 = load i64, i64* %6, align 8
  %464 = load i64, i64* %7, align 8
  %465 = load i64, i64* %8, align 8
  %466 = load i64, i64* %9, align 8
  %467 = load i64, i64* %10, align 8
  %468 = load i64, i64* %11, align 8
  %469 = load i64, i64* %12, align 8
  %470 = load i64, i64* %5, align 8
  %471 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %463, i64 %464, i64 %465, i64 %466, i64 %467, i64 %468, i64 %469, i64 %470)
  %472 = load i64, i64* %5, align 8
  %473 = load i64, i64* %6, align 8
  %474 = load i64, i64* %7, align 8
  %475 = load i64, i64* %8, align 8
  %476 = load i64, i64* %9, align 8
  %477 = load i64, i64* %10, align 8
  %478 = load i64, i64* %11, align 8
  %479 = load i64, i64* %12, align 8
  %480 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %472, i64 %473, i64 %474, i64 %475, i64 %476, i64 %477, i64 %478, i64 %479)
  %481 = load i64, i64* %12, align 8
  %482 = load i64, i64* %5, align 8
  %483 = load i64, i64* %6, align 8
  %484 = load i64, i64* %7, align 8
  %485 = load i64, i64* %8, align 8
  %486 = load i64, i64* %9, align 8
  %487 = load i64, i64* %10, align 8
  %488 = load i64, i64* %11, align 8
  %489 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %481, i64 %482, i64 %483, i64 %484, i64 %485, i64 %486, i64 %487, i64 %488)
  %490 = load i64, i64* %11, align 8
  %491 = load i64, i64* %12, align 8
  %492 = load i64, i64* %5, align 8
  %493 = load i64, i64* %6, align 8
  %494 = load i64, i64* %7, align 8
  %495 = load i64, i64* %8, align 8
  %496 = load i64, i64* %9, align 8
  %497 = load i64, i64* %10, align 8
  %498 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %490, i64 %491, i64 %492, i64 %493, i64 %494, i64 %495, i64 %496, i64 %497)
  %499 = load i64, i64* %10, align 8
  %500 = load i64, i64* %11, align 8
  %501 = load i64, i64* %12, align 8
  %502 = load i64, i64* %5, align 8
  %503 = load i64, i64* %6, align 8
  %504 = load i64, i64* %7, align 8
  %505 = load i64, i64* %8, align 8
  %506 = load i64, i64* %9, align 8
  %507 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %499, i64 %500, i64 %501, i64 %502, i64 %503, i64 %504, i64 %505, i64 %506)
  %508 = load i64, i64* %9, align 8
  %509 = load i64, i64* %10, align 8
  %510 = load i64, i64* %11, align 8
  %511 = load i64, i64* %12, align 8
  %512 = load i64, i64* %5, align 8
  %513 = load i64, i64* %6, align 8
  %514 = load i64, i64* %7, align 8
  %515 = load i64, i64* %8, align 8
  %516 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %508, i64 %509, i64 %510, i64 %511, i64 %512, i64 %513, i64 %514, i64 %515)
  %517 = load i64, i64* %8, align 8
  %518 = load i64, i64* %9, align 8
  %519 = load i64, i64* %10, align 8
  %520 = load i64, i64* %11, align 8
  %521 = load i64, i64* %12, align 8
  %522 = load i64, i64* %5, align 8
  %523 = load i64, i64* %6, align 8
  %524 = load i64, i64* %7, align 8
  %525 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %517, i64 %518, i64 %519, i64 %520, i64 %521, i64 %522, i64 %523, i64 %524)
  %526 = load i64, i64* %7, align 8
  %527 = load i64, i64* %8, align 8
  %528 = load i64, i64* %9, align 8
  %529 = load i64, i64* %10, align 8
  %530 = load i64, i64* %11, align 8
  %531 = load i64, i64* %12, align 8
  %532 = load i64, i64* %5, align 8
  %533 = load i64, i64* %6, align 8
  %534 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %526, i64 %527, i64 %528, i64 %529, i64 %530, i64 %531, i64 %532, i64 %533)
  %535 = load i64, i64* %6, align 8
  %536 = load i64, i64* %7, align 8
  %537 = load i64, i64* %8, align 8
  %538 = load i64, i64* %9, align 8
  %539 = load i64, i64* %10, align 8
  %540 = load i64, i64* %11, align 8
  %541 = load i64, i64* %12, align 8
  %542 = load i64, i64* %5, align 8
  %543 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %535, i64 %536, i64 %537, i64 %538, i64 %539, i64 %540, i64 %541, i64 %542)
  %544 = load i64, i64* %5, align 8
  %545 = load i64, i64* %6, align 8
  %546 = load i64, i64* %7, align 8
  %547 = load i64, i64* %8, align 8
  %548 = load i64, i64* %9, align 8
  %549 = load i64, i64* %10, align 8
  %550 = load i64, i64* %11, align 8
  %551 = load i64, i64* %12, align 8
  %552 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %544, i64 %545, i64 %546, i64 %547, i64 %548, i64 %549, i64 %550, i64 %551)
  %553 = load i64, i64* %12, align 8
  %554 = load i64, i64* %5, align 8
  %555 = load i64, i64* %6, align 8
  %556 = load i64, i64* %7, align 8
  %557 = load i64, i64* %8, align 8
  %558 = load i64, i64* %9, align 8
  %559 = load i64, i64* %10, align 8
  %560 = load i64, i64* %11, align 8
  %561 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %553, i64 %554, i64 %555, i64 %556, i64 %557, i64 %558, i64 %559, i64 %560)
  %562 = load i64, i64* %11, align 8
  %563 = load i64, i64* %12, align 8
  %564 = load i64, i64* %5, align 8
  %565 = load i64, i64* %6, align 8
  %566 = load i64, i64* %7, align 8
  %567 = load i64, i64* %8, align 8
  %568 = load i64, i64* %9, align 8
  %569 = load i64, i64* %10, align 8
  %570 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %562, i64 %563, i64 %564, i64 %565, i64 %566, i64 %567, i64 %568, i64 %569)
  %571 = load i64, i64* %10, align 8
  %572 = load i64, i64* %11, align 8
  %573 = load i64, i64* %12, align 8
  %574 = load i64, i64* %5, align 8
  %575 = load i64, i64* %6, align 8
  %576 = load i64, i64* %7, align 8
  %577 = load i64, i64* %8, align 8
  %578 = load i64, i64* %9, align 8
  %579 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %571, i64 %572, i64 %573, i64 %574, i64 %575, i64 %576, i64 %577, i64 %578)
  %580 = load i64, i64* %9, align 8
  %581 = load i64, i64* %10, align 8
  %582 = load i64, i64* %11, align 8
  %583 = load i64, i64* %12, align 8
  %584 = load i64, i64* %5, align 8
  %585 = load i64, i64* %6, align 8
  %586 = load i64, i64* %7, align 8
  %587 = load i64, i64* %8, align 8
  %588 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %580, i64 %581, i64 %582, i64 %583, i64 %584, i64 %585, i64 %586, i64 %587)
  %589 = load i64, i64* %8, align 8
  %590 = load i64, i64* %9, align 8
  %591 = load i64, i64* %10, align 8
  %592 = load i64, i64* %11, align 8
  %593 = load i64, i64* %12, align 8
  %594 = load i64, i64* %5, align 8
  %595 = load i64, i64* %6, align 8
  %596 = load i64, i64* %7, align 8
  %597 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %589, i64 %590, i64 %591, i64 %592, i64 %593, i64 %594, i64 %595, i64 %596)
  %598 = load i64, i64* %7, align 8
  %599 = load i64, i64* %8, align 8
  %600 = load i64, i64* %9, align 8
  %601 = load i64, i64* %10, align 8
  %602 = load i64, i64* %11, align 8
  %603 = load i64, i64* %12, align 8
  %604 = load i64, i64* %5, align 8
  %605 = load i64, i64* %6, align 8
  %606 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %598, i64 %599, i64 %600, i64 %601, i64 %602, i64 %603, i64 %604, i64 %605)
  %607 = load i64, i64* %6, align 8
  %608 = load i64, i64* %7, align 8
  %609 = load i64, i64* %8, align 8
  %610 = load i64, i64* %9, align 8
  %611 = load i64, i64* %10, align 8
  %612 = load i64, i64* %11, align 8
  %613 = load i64, i64* %12, align 8
  %614 = load i64, i64* %5, align 8
  %615 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %607, i64 %608, i64 %609, i64 %610, i64 %611, i64 %612, i64 %613, i64 %614)
  %616 = load i64, i64* %5, align 8
  %617 = load i64, i64* %6, align 8
  %618 = load i64, i64* %7, align 8
  %619 = load i64, i64* %8, align 8
  %620 = load i64, i64* %9, align 8
  %621 = load i64, i64* %10, align 8
  %622 = load i64, i64* %11, align 8
  %623 = load i64, i64* %12, align 8
  %624 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %616, i64 %617, i64 %618, i64 %619, i64 %620, i64 %621, i64 %622, i64 %623)
  %625 = load i64, i64* %12, align 8
  %626 = load i64, i64* %5, align 8
  %627 = load i64, i64* %6, align 8
  %628 = load i64, i64* %7, align 8
  %629 = load i64, i64* %8, align 8
  %630 = load i64, i64* %9, align 8
  %631 = load i64, i64* %10, align 8
  %632 = load i64, i64* %11, align 8
  %633 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %625, i64 %626, i64 %627, i64 %628, i64 %629, i64 %630, i64 %631, i64 %632)
  %634 = load i64, i64* %11, align 8
  %635 = load i64, i64* %12, align 8
  %636 = load i64, i64* %5, align 8
  %637 = load i64, i64* %6, align 8
  %638 = load i64, i64* %7, align 8
  %639 = load i64, i64* %8, align 8
  %640 = load i64, i64* %9, align 8
  %641 = load i64, i64* %10, align 8
  %642 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %634, i64 %635, i64 %636, i64 %637, i64 %638, i64 %639, i64 %640, i64 %641)
  %643 = load i64, i64* %10, align 8
  %644 = load i64, i64* %11, align 8
  %645 = load i64, i64* %12, align 8
  %646 = load i64, i64* %5, align 8
  %647 = load i64, i64* %6, align 8
  %648 = load i64, i64* %7, align 8
  %649 = load i64, i64* %8, align 8
  %650 = load i64, i64* %9, align 8
  %651 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %643, i64 %644, i64 %645, i64 %646, i64 %647, i64 %648, i64 %649, i64 %650)
  %652 = load i64, i64* %9, align 8
  %653 = load i64, i64* %10, align 8
  %654 = load i64, i64* %11, align 8
  %655 = load i64, i64* %12, align 8
  %656 = load i64, i64* %5, align 8
  %657 = load i64, i64* %6, align 8
  %658 = load i64, i64* %7, align 8
  %659 = load i64, i64* %8, align 8
  %660 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %652, i64 %653, i64 %654, i64 %655, i64 %656, i64 %657, i64 %658, i64 %659)
  %661 = load i64, i64* %8, align 8
  %662 = load i64, i64* %9, align 8
  %663 = load i64, i64* %10, align 8
  %664 = load i64, i64* %11, align 8
  %665 = load i64, i64* %12, align 8
  %666 = load i64, i64* %5, align 8
  %667 = load i64, i64* %6, align 8
  %668 = load i64, i64* %7, align 8
  %669 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %661, i64 %662, i64 %663, i64 %664, i64 %665, i64 %666, i64 %667, i64 %668)
  %670 = load i64, i64* %7, align 8
  %671 = load i64, i64* %8, align 8
  %672 = load i64, i64* %9, align 8
  %673 = load i64, i64* %10, align 8
  %674 = load i64, i64* %11, align 8
  %675 = load i64, i64* %12, align 8
  %676 = load i64, i64* %5, align 8
  %677 = load i64, i64* %6, align 8
  %678 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %670, i64 %671, i64 %672, i64 %673, i64 %674, i64 %675, i64 %676, i64 %677)
  %679 = load i64, i64* %6, align 8
  %680 = load i64, i64* %7, align 8
  %681 = load i64, i64* %8, align 8
  %682 = load i64, i64* %9, align 8
  %683 = load i64, i64* %10, align 8
  %684 = load i64, i64* %11, align 8
  %685 = load i64, i64* %12, align 8
  %686 = load i64, i64* %5, align 8
  %687 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %679, i64 %680, i64 %681, i64 %682, i64 %683, i64 %684, i64 %685, i64 %686)
  %688 = load i64, i64* %5, align 8
  %689 = load i64, i64* %6, align 8
  %690 = load i64, i64* %7, align 8
  %691 = load i64, i64* %8, align 8
  %692 = load i64, i64* %9, align 8
  %693 = load i64, i64* %10, align 8
  %694 = load i64, i64* %11, align 8
  %695 = load i64, i64* %12, align 8
  %696 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %688, i64 %689, i64 %690, i64 %691, i64 %692, i64 %693, i64 %694, i64 %695)
  %697 = load i64, i64* %12, align 8
  %698 = load i64, i64* %5, align 8
  %699 = load i64, i64* %6, align 8
  %700 = load i64, i64* %7, align 8
  %701 = load i64, i64* %8, align 8
  %702 = load i64, i64* %9, align 8
  %703 = load i64, i64* %10, align 8
  %704 = load i64, i64* %11, align 8
  %705 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %697, i64 %698, i64 %699, i64 %700, i64 %701, i64 %702, i64 %703, i64 %704)
  %706 = load i64, i64* %11, align 8
  %707 = load i64, i64* %12, align 8
  %708 = load i64, i64* %5, align 8
  %709 = load i64, i64* %6, align 8
  %710 = load i64, i64* %7, align 8
  %711 = load i64, i64* %8, align 8
  %712 = load i64, i64* %9, align 8
  %713 = load i64, i64* %10, align 8
  %714 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %706, i64 %707, i64 %708, i64 %709, i64 %710, i64 %711, i64 %712, i64 %713)
  %715 = load i64, i64* %10, align 8
  %716 = load i64, i64* %11, align 8
  %717 = load i64, i64* %12, align 8
  %718 = load i64, i64* %5, align 8
  %719 = load i64, i64* %6, align 8
  %720 = load i64, i64* %7, align 8
  %721 = load i64, i64* %8, align 8
  %722 = load i64, i64* %9, align 8
  %723 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %715, i64 %716, i64 %717, i64 %718, i64 %719, i64 %720, i64 %721, i64 %722)
  %724 = load i64, i64* %9, align 8
  %725 = load i64, i64* %10, align 8
  %726 = load i64, i64* %11, align 8
  %727 = load i64, i64* %12, align 8
  %728 = load i64, i64* %5, align 8
  %729 = load i64, i64* %6, align 8
  %730 = load i64, i64* %7, align 8
  %731 = load i64, i64* %8, align 8
  %732 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %724, i64 %725, i64 %726, i64 %727, i64 %728, i64 %729, i64 %730, i64 %731)
  %733 = load i64, i64* %8, align 8
  %734 = load i64, i64* %9, align 8
  %735 = load i64, i64* %10, align 8
  %736 = load i64, i64* %11, align 8
  %737 = load i64, i64* %12, align 8
  %738 = load i64, i64* %5, align 8
  %739 = load i64, i64* %6, align 8
  %740 = load i64, i64* %7, align 8
  %741 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %733, i64 %734, i64 %735, i64 %736, i64 %737, i64 %738, i64 %739, i64 %740)
  %742 = load i64, i64* %7, align 8
  %743 = load i64, i64* %8, align 8
  %744 = load i64, i64* %9, align 8
  %745 = load i64, i64* %10, align 8
  %746 = load i64, i64* %11, align 8
  %747 = load i64, i64* %12, align 8
  %748 = load i64, i64* %5, align 8
  %749 = load i64, i64* %6, align 8
  %750 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %742, i64 %743, i64 %744, i64 %745, i64 %746, i64 %747, i64 %748, i64 %749)
  %751 = load i64, i64* %6, align 8
  %752 = load i64, i64* %7, align 8
  %753 = load i64, i64* %8, align 8
  %754 = load i64, i64* %9, align 8
  %755 = load i64, i64* %10, align 8
  %756 = load i64, i64* %11, align 8
  %757 = load i64, i64* %12, align 8
  %758 = load i64, i64* %5, align 8
  %759 = call i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...) bitcast (i32 (...)* @ROUND512_16_TO_80 to i32 (i64, i64, i64, i64, i64, i64, i64, i64, ...)*)(i64 %751, i64 %752, i64 %753, i64 %754, i64 %755, i64 %756, i64 %757, i64 %758)
  %760 = load i64, i64* %5, align 8
  %761 = load i64*, i64** %3, align 8
  %762 = getelementptr inbounds i64, i64* %761, i64 0
  %763 = load i64, i64* %762, align 8
  %764 = add nsw i64 %763, %760
  store i64 %764, i64* %762, align 8
  %765 = load i64, i64* %6, align 8
  %766 = load i64*, i64** %3, align 8
  %767 = getelementptr inbounds i64, i64* %766, i64 1
  %768 = load i64, i64* %767, align 8
  %769 = add nsw i64 %768, %765
  store i64 %769, i64* %767, align 8
  %770 = load i64, i64* %7, align 8
  %771 = load i64*, i64** %3, align 8
  %772 = getelementptr inbounds i64, i64* %771, i64 2
  %773 = load i64, i64* %772, align 8
  %774 = add nsw i64 %773, %770
  store i64 %774, i64* %772, align 8
  %775 = load i64, i64* %8, align 8
  %776 = load i64*, i64** %3, align 8
  %777 = getelementptr inbounds i64, i64* %776, i64 3
  %778 = load i64, i64* %777, align 8
  %779 = add nsw i64 %778, %775
  store i64 %779, i64* %777, align 8
  %780 = load i64, i64* %9, align 8
  %781 = load i64*, i64** %3, align 8
  %782 = getelementptr inbounds i64, i64* %781, i64 4
  %783 = load i64, i64* %782, align 8
  %784 = add nsw i64 %783, %780
  store i64 %784, i64* %782, align 8
  %785 = load i64, i64* %10, align 8
  %786 = load i64*, i64** %3, align 8
  %787 = getelementptr inbounds i64, i64* %786, i64 5
  %788 = load i64, i64* %787, align 8
  %789 = add nsw i64 %788, %785
  store i64 %789, i64* %787, align 8
  %790 = load i64, i64* %11, align 8
  %791 = load i64*, i64** %3, align 8
  %792 = getelementptr inbounds i64, i64* %791, i64 6
  %793 = load i64, i64* %792, align 8
  %794 = add nsw i64 %793, %790
  store i64 %794, i64* %792, align 8
  %795 = load i64, i64* %12, align 8
  %796 = load i64*, i64** %3, align 8
  %797 = getelementptr inbounds i64, i64* %796, i64 7
  %798 = load i64, i64* %797, align 8
  %799 = add nsw i64 %798, %795
  store i64 %799, i64* %797, align 8
  ret void
}

declare dso_local i32 @ROUND512_0_TO_15(...) #1

declare dso_local i32 @ROUND512_16_TO_80(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
