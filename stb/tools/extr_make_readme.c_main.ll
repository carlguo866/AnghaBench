; ModuleID = '/home/carl/AnghaBench/stb/tools/extr_make_readme.c_main.c'
source_filename = "/home/carl/AnghaBench/stb/tools/extr_make_readme.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [17 x i8] c"README.header.md\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"README.footer.md\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"README.list\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"../README.md\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.5 = private unnamed_addr constant [80 x i8] c"<!---   THIS FILE IS AUTOMATICALLY GENERATED, DO NOT CHANGE IT BY HAND   --->\0A\0A\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"|\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"../%s\00", align 1
@.str.8 = private unnamed_addr constant [46 x i8] c"Couldn't find '-' before version number in %s\00", align 1
@.str.9 = private unnamed_addr constant [45 x i8] c"Couldn't find '-' after version number in %s\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"**[\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"](%s)**\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c" | %s\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"&nbsp;\00", align 1
@.str.17 = private unnamed_addr constant [6 x i8] c" | %d\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"Total libraries: %d  \0A\00", align 1
@.str.20 = private unnamed_addr constant [28 x i8] c"Total lines of C code: %d\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8**, align 8
  %14 = alloca i32*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8**, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8**, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca [256 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %10, align 4
  %24 = call i8* @stb_file(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32* %7)
  store i8* %24, i8** %11, align 8
  %25 = call i8* @stb_file(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i32* %8)
  store i8* %25, i8** %12, align 8
  %26 = call i8** @stb_stringfile(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* %9)
  store i8** %26, i8*** %13, align 8
  %27 = call i32* @fopen(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0))
  store i32* %27, i32** %14, align 8
  %28 = load i32*, i32** %14, align 8
  %29 = call i32 (i32*, i8*, ...) @fprintf(i32* %28, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.5, i64 0, i64 0))
  %30 = load i8*, i8** %11, align 8
  %31 = load i32, i32* %7, align 4
  %32 = load i32*, i32** %14, align 8
  %33 = call i32 @fwrite(i8* %30, i32 1, i32 %31, i32* %32)
  store i32 0, i32* %6, align 4
  br label %34

34:                                               ; preds = %156, %2
  %35 = load i32, i32* %6, align 4
  %36 = load i32, i32* %9, align 4
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %38, label %159

38:                                               ; preds = %34
  %39 = load i8**, i8*** %13, align 8
  %40 = load i32, i32* %6, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i8*, i8** %39, i64 %41
  %43 = load i8*, i8** %42, align 8
  %44 = call i8** @stb_tokens_stripwhite(i8* %43, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0), i32* %15)
  store i8** %44, i8*** %17, align 8
  %45 = load i8**, i8*** %17, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i64 0
  %47 = load i8*, i8** %46, align 8
  %48 = call i8* @stb_sprintf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i8* %47)
  %49 = call i8** @stb_stringfile(i8* %48, i32* %18)
  store i8** %49, i8*** %19, align 8
  %50 = load i8**, i8*** %19, align 8
  %51 = getelementptr inbounds i8*, i8** %50, i64 0
  %52 = load i8*, i8** %51, align 8
  %53 = call i8* @strchr(i8* %52, i8 signext 45)
  store i8* %53, i8** %20, align 8
  %54 = load i8*, i8** %20, align 8
  %55 = icmp ne i8* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %38
  %57 = load i8**, i8*** %17, align 8
  %58 = getelementptr inbounds i8*, i8** %57, i64 0
  %59 = load i8*, i8** %58, align 8
  %60 = call i32 @stb_fatal(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.8, i64 0, i64 0), i8* %59)
  br label %61

61:                                               ; preds = %56, %38
  %62 = load i8*, i8** %20, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 2
  %64 = call i8* @strchr(i8* %63, i8 signext 45)
  store i8* %64, i8** %21, align 8
  %65 = load i8*, i8** %21, align 8
  %66 = icmp ne i8* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %61
  %68 = load i8**, i8*** %17, align 8
  %69 = getelementptr inbounds i8*, i8** %68, i64 0
  %70 = load i8*, i8** %69, align 8
  %71 = call i32 @stb_fatal(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9, i64 0, i64 0), i8* %70)
  br label %72

72:                                               ; preds = %67, %61
  %73 = load i8*, i8** %21, align 8
  store i8 0, i8* %73, align 1
  %74 = load i8*, i8** %20, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 1
  store i8* %75, i8** %20, align 8
  %76 = load i8*, i8** %20, align 8
  %77 = call i8* @stb_trimwhite(i8* %76)
  store i8* %77, i8** %20, align 8
  %78 = load i8*, i8** %20, align 8
  %79 = load i8, i8* %78, align 1
  %80 = sext i8 %79 to i32
  %81 = icmp eq i32 %80, 118
  br i1 %81, label %82, label %85

82:                                               ; preds = %72
  %83 = load i8*, i8** %20, align 8
  %84 = getelementptr inbounds i8, i8* %83, i32 1
  store i8* %84, i8** %20, align 8
  br label %85

85:                                               ; preds = %82, %72
  %86 = load i8**, i8*** %17, align 8
  %87 = getelementptr inbounds i8*, i8** %86, i64 0
  %88 = load i8*, i8** %87, align 8
  store i8* %88, i8** %22, align 8
  %89 = load i8*, i8** %22, align 8
  %90 = call i8* @stb_trimwhite(i8* %89)
  %91 = load i32*, i32** %14, align 8
  %92 = call i32 (i32*, i8*, ...) @fprintf(i32* %91, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0))
  %93 = load i8*, i8** %22, align 8
  %94 = call i32 @strlen(i8* %93)
  %95 = icmp slt i32 %94, 21
  br i1 %95, label %96, label %102

96:                                               ; preds = %85
  %97 = load i32*, i32** %14, align 8
  %98 = load i8**, i8*** %17, align 8
  %99 = getelementptr inbounds i8*, i8** %98, i64 0
  %100 = load i8*, i8** %99, align 8
  %101 = call i32 (i32*, i8*, ...) @fprintf(i32* %97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8* %100)
  br label %112

102:                                              ; preds = %85
  %103 = getelementptr inbounds [256 x i8], [256 x i8]* %23, i64 0, i64 0
  %104 = load i8*, i8** %22, align 8
  %105 = call i32 @strncpy(i8* %103, i8* %104, i32 18)
  %106 = getelementptr inbounds [256 x i8], [256 x i8]* %23, i64 0, i64 18
  store i8 0, i8* %106, align 2
  %107 = getelementptr inbounds [256 x i8], [256 x i8]* %23, i64 0, i64 0
  %108 = call i32 @strcat(i8* %107, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0))
  %109 = load i32*, i32** %14, align 8
  %110 = getelementptr inbounds [256 x i8], [256 x i8]* %23, i64 0, i64 0
  %111 = call i32 (i32*, i8*, ...) @fprintf(i32* %109, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8* %110)
  br label %112

112:                                              ; preds = %102, %96
  %113 = load i32*, i32** %14, align 8
  %114 = load i8**, i8*** %17, align 8
  %115 = getelementptr inbounds i8*, i8** %114, i64 0
  %116 = load i8*, i8** %115, align 8
  %117 = call i32 (i32*, i8*, ...) @fprintf(i32* %113, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i8* %116)
  %118 = load i32*, i32** %14, align 8
  %119 = load i8*, i8** %20, align 8
  %120 = call i32 (i32*, i8*, ...) @fprintf(i32* %118, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i8* %119)
  %121 = load i8**, i8*** %17, align 8
  %122 = getelementptr inbounds i8*, i8** %121, i64 1
  %123 = load i8*, i8** %122, align 8
  %124 = call i8* @stb_trimwhite(i8* %123)
  store i8* %124, i8** %20, align 8
  %125 = load i8*, i8** %20, align 8
  %126 = call i8* @stb_dupreplace(i8* %125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0))
  store i8* %126, i8** %21, align 8
  %127 = load i32*, i32** %14, align 8
  %128 = load i8*, i8** %21, align 8
  %129 = call i32 (i32*, i8*, ...) @fprintf(i32* %127, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i8* %128)
  %130 = load i8*, i8** %21, align 8
  %131 = call i32 @free(i8* %130)
  %132 = load i32*, i32** %14, align 8
  %133 = load i32, i32* %18, align 4
  %134 = call i32 (i32*, i8*, ...) @fprintf(i32* %132, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i32 %133)
  %135 = load i32, i32* %18, align 4
  %136 = load i32, i32* %10, align 4
  %137 = add nsw i32 %136, %135
  store i32 %137, i32* %10, align 4
  store i32 2, i32* %16, align 4
  br label %138

138:                                              ; preds = %150, %112
  %139 = load i32, i32* %16, align 4
  %140 = load i32, i32* %15, align 4
  %141 = icmp slt i32 %139, %140
  br i1 %141, label %142, label %153

142:                                              ; preds = %138
  %143 = load i32*, i32** %14, align 8
  %144 = load i8**, i8*** %17, align 8
  %145 = load i32, i32* %16, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8*, i8** %144, i64 %146
  %148 = load i8*, i8** %147, align 8
  %149 = call i32 (i32*, i8*, ...) @fprintf(i32* %143, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i8* %148)
  br label %150

150:                                              ; preds = %142
  %151 = load i32, i32* %16, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %16, align 4
  br label %138

153:                                              ; preds = %138
  %154 = load i32*, i32** %14, align 8
  %155 = call i32 (i32*, i8*, ...) @fprintf(i32* %154, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0))
  br label %156

156:                                              ; preds = %153
  %157 = load i32, i32* %6, align 4
  %158 = add nsw i32 %157, 1
  store i32 %158, i32* %6, align 4
  br label %34

159:                                              ; preds = %34
  %160 = load i32*, i32** %14, align 8
  %161 = call i32 (i32*, i8*, ...) @fprintf(i32* %160, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0))
  %162 = load i32*, i32** %14, align 8
  %163 = load i32, i32* %9, align 4
  %164 = call i32 (i32*, i8*, ...) @fprintf(i32* %162, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i32 %163)
  %165 = load i32*, i32** %14, align 8
  %166 = load i32, i32* %10, align 4
  %167 = call i32 (i32*, i8*, ...) @fprintf(i32* %165, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.20, i64 0, i64 0), i32 %166)
  %168 = load i8*, i8** %12, align 8
  %169 = load i32, i32* %8, align 4
  %170 = load i32*, i32** %14, align 8
  %171 = call i32 @fwrite(i8* %168, i32 1, i32 %169, i32* %170)
  %172 = load i32*, i32** %14, align 8
  %173 = call i32 @fclose(i32* %172)
  ret i32 0
}

declare dso_local i8* @stb_file(i8*, i32*) #1

declare dso_local i8** @stb_stringfile(i8*, i32*) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @fprintf(i32*, i8*, ...) #1

declare dso_local i32 @fwrite(i8*, i32, i32, i32*) #1

declare dso_local i8** @stb_tokens_stripwhite(i8*, i8*, i32*) #1

declare dso_local i8* @stb_sprintf(i8*, i8*) #1

declare dso_local i8* @strchr(i8*, i8 signext) #1

declare dso_local i32 @stb_fatal(i8*, i8*) #1

declare dso_local i8* @stb_trimwhite(i8*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @strncpy(i8*, i8*, i32) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i8* @stb_dupreplace(i8*, i8*, i8*) #1

declare dso_local i32 @free(i8*) #1

declare dso_local i32 @fclose(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
