; ModuleID = '/home/carl/AnghaBench/h2o/deps/picotls/deps/cifra/src/extr_curve25519.donna.c_fexpand.c'
source_filename = "/home/carl/AnghaBench/h2o/deps/picotls/deps/cifra/src/extr_curve25519.donna.c_fexpand.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i32*, i32*)* @fexpand to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @fexpand(i32* %0, i32* %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds i32, i32* %5, i64 0
  %7 = load i32, i32* %6, align 4
  %8 = load i32*, i32** %4, align 8
  %9 = getelementptr inbounds i32, i32* %8, i64 1
  %10 = load i32, i32* %9, align 4
  %11 = shl i32 %10, 8
  %12 = or i32 %7, %11
  %13 = load i32*, i32** %4, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 2
  %15 = load i32, i32* %14, align 4
  %16 = shl i32 %15, 16
  %17 = or i32 %12, %16
  %18 = load i32*, i32** %4, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 3
  %20 = load i32, i32* %19, align 4
  %21 = shl i32 %20, 24
  %22 = or i32 %17, %21
  %23 = ashr i32 %22, 0
  %24 = and i32 %23, 67108863
  %25 = load i32*, i32** %3, align 8
  %26 = getelementptr inbounds i32, i32* %25, i64 0
  store i32 %24, i32* %26, align 4
  %27 = load i32*, i32** %4, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 3
  %29 = load i32, i32* %28, align 4
  %30 = load i32*, i32** %4, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 4
  %32 = load i32, i32* %31, align 4
  %33 = shl i32 %32, 8
  %34 = or i32 %29, %33
  %35 = load i32*, i32** %4, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 5
  %37 = load i32, i32* %36, align 4
  %38 = shl i32 %37, 16
  %39 = or i32 %34, %38
  %40 = load i32*, i32** %4, align 8
  %41 = getelementptr inbounds i32, i32* %40, i64 6
  %42 = load i32, i32* %41, align 4
  %43 = shl i32 %42, 24
  %44 = or i32 %39, %43
  %45 = ashr i32 %44, 2
  %46 = and i32 %45, 33554431
  %47 = load i32*, i32** %3, align 8
  %48 = getelementptr inbounds i32, i32* %47, i64 1
  store i32 %46, i32* %48, align 4
  %49 = load i32*, i32** %4, align 8
  %50 = getelementptr inbounds i32, i32* %49, i64 6
  %51 = load i32, i32* %50, align 4
  %52 = load i32*, i32** %4, align 8
  %53 = getelementptr inbounds i32, i32* %52, i64 7
  %54 = load i32, i32* %53, align 4
  %55 = shl i32 %54, 8
  %56 = or i32 %51, %55
  %57 = load i32*, i32** %4, align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 8
  %59 = load i32, i32* %58, align 4
  %60 = shl i32 %59, 16
  %61 = or i32 %56, %60
  %62 = load i32*, i32** %4, align 8
  %63 = getelementptr inbounds i32, i32* %62, i64 9
  %64 = load i32, i32* %63, align 4
  %65 = shl i32 %64, 24
  %66 = or i32 %61, %65
  %67 = ashr i32 %66, 3
  %68 = and i32 %67, 67108863
  %69 = load i32*, i32** %3, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 2
  store i32 %68, i32* %70, align 4
  %71 = load i32*, i32** %4, align 8
  %72 = getelementptr inbounds i32, i32* %71, i64 9
  %73 = load i32, i32* %72, align 4
  %74 = load i32*, i32** %4, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 10
  %76 = load i32, i32* %75, align 4
  %77 = shl i32 %76, 8
  %78 = or i32 %73, %77
  %79 = load i32*, i32** %4, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 11
  %81 = load i32, i32* %80, align 4
  %82 = shl i32 %81, 16
  %83 = or i32 %78, %82
  %84 = load i32*, i32** %4, align 8
  %85 = getelementptr inbounds i32, i32* %84, i64 12
  %86 = load i32, i32* %85, align 4
  %87 = shl i32 %86, 24
  %88 = or i32 %83, %87
  %89 = ashr i32 %88, 5
  %90 = and i32 %89, 33554431
  %91 = load i32*, i32** %3, align 8
  %92 = getelementptr inbounds i32, i32* %91, i64 3
  store i32 %90, i32* %92, align 4
  %93 = load i32*, i32** %4, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 12
  %95 = load i32, i32* %94, align 4
  %96 = load i32*, i32** %4, align 8
  %97 = getelementptr inbounds i32, i32* %96, i64 13
  %98 = load i32, i32* %97, align 4
  %99 = shl i32 %98, 8
  %100 = or i32 %95, %99
  %101 = load i32*, i32** %4, align 8
  %102 = getelementptr inbounds i32, i32* %101, i64 14
  %103 = load i32, i32* %102, align 4
  %104 = shl i32 %103, 16
  %105 = or i32 %100, %104
  %106 = load i32*, i32** %4, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 15
  %108 = load i32, i32* %107, align 4
  %109 = shl i32 %108, 24
  %110 = or i32 %105, %109
  %111 = ashr i32 %110, 6
  %112 = and i32 %111, 67108863
  %113 = load i32*, i32** %3, align 8
  %114 = getelementptr inbounds i32, i32* %113, i64 4
  store i32 %112, i32* %114, align 4
  %115 = load i32*, i32** %4, align 8
  %116 = getelementptr inbounds i32, i32* %115, i64 16
  %117 = load i32, i32* %116, align 4
  %118 = load i32*, i32** %4, align 8
  %119 = getelementptr inbounds i32, i32* %118, i64 17
  %120 = load i32, i32* %119, align 4
  %121 = shl i32 %120, 8
  %122 = or i32 %117, %121
  %123 = load i32*, i32** %4, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 18
  %125 = load i32, i32* %124, align 4
  %126 = shl i32 %125, 16
  %127 = or i32 %122, %126
  %128 = load i32*, i32** %4, align 8
  %129 = getelementptr inbounds i32, i32* %128, i64 19
  %130 = load i32, i32* %129, align 4
  %131 = shl i32 %130, 24
  %132 = or i32 %127, %131
  %133 = ashr i32 %132, 0
  %134 = and i32 %133, 33554431
  %135 = load i32*, i32** %3, align 8
  %136 = getelementptr inbounds i32, i32* %135, i64 5
  store i32 %134, i32* %136, align 4
  %137 = load i32*, i32** %4, align 8
  %138 = getelementptr inbounds i32, i32* %137, i64 19
  %139 = load i32, i32* %138, align 4
  %140 = load i32*, i32** %4, align 8
  %141 = getelementptr inbounds i32, i32* %140, i64 20
  %142 = load i32, i32* %141, align 4
  %143 = shl i32 %142, 8
  %144 = or i32 %139, %143
  %145 = load i32*, i32** %4, align 8
  %146 = getelementptr inbounds i32, i32* %145, i64 21
  %147 = load i32, i32* %146, align 4
  %148 = shl i32 %147, 16
  %149 = or i32 %144, %148
  %150 = load i32*, i32** %4, align 8
  %151 = getelementptr inbounds i32, i32* %150, i64 22
  %152 = load i32, i32* %151, align 4
  %153 = shl i32 %152, 24
  %154 = or i32 %149, %153
  %155 = ashr i32 %154, 1
  %156 = and i32 %155, 67108863
  %157 = load i32*, i32** %3, align 8
  %158 = getelementptr inbounds i32, i32* %157, i64 6
  store i32 %156, i32* %158, align 4
  %159 = load i32*, i32** %4, align 8
  %160 = getelementptr inbounds i32, i32* %159, i64 22
  %161 = load i32, i32* %160, align 4
  %162 = load i32*, i32** %4, align 8
  %163 = getelementptr inbounds i32, i32* %162, i64 23
  %164 = load i32, i32* %163, align 4
  %165 = shl i32 %164, 8
  %166 = or i32 %161, %165
  %167 = load i32*, i32** %4, align 8
  %168 = getelementptr inbounds i32, i32* %167, i64 24
  %169 = load i32, i32* %168, align 4
  %170 = shl i32 %169, 16
  %171 = or i32 %166, %170
  %172 = load i32*, i32** %4, align 8
  %173 = getelementptr inbounds i32, i32* %172, i64 25
  %174 = load i32, i32* %173, align 4
  %175 = shl i32 %174, 24
  %176 = or i32 %171, %175
  %177 = ashr i32 %176, 3
  %178 = and i32 %177, 33554431
  %179 = load i32*, i32** %3, align 8
  %180 = getelementptr inbounds i32, i32* %179, i64 7
  store i32 %178, i32* %180, align 4
  %181 = load i32*, i32** %4, align 8
  %182 = getelementptr inbounds i32, i32* %181, i64 25
  %183 = load i32, i32* %182, align 4
  %184 = load i32*, i32** %4, align 8
  %185 = getelementptr inbounds i32, i32* %184, i64 26
  %186 = load i32, i32* %185, align 4
  %187 = shl i32 %186, 8
  %188 = or i32 %183, %187
  %189 = load i32*, i32** %4, align 8
  %190 = getelementptr inbounds i32, i32* %189, i64 27
  %191 = load i32, i32* %190, align 4
  %192 = shl i32 %191, 16
  %193 = or i32 %188, %192
  %194 = load i32*, i32** %4, align 8
  %195 = getelementptr inbounds i32, i32* %194, i64 28
  %196 = load i32, i32* %195, align 4
  %197 = shl i32 %196, 24
  %198 = or i32 %193, %197
  %199 = ashr i32 %198, 4
  %200 = and i32 %199, 67108863
  %201 = load i32*, i32** %3, align 8
  %202 = getelementptr inbounds i32, i32* %201, i64 8
  store i32 %200, i32* %202, align 4
  %203 = load i32*, i32** %4, align 8
  %204 = getelementptr inbounds i32, i32* %203, i64 28
  %205 = load i32, i32* %204, align 4
  %206 = load i32*, i32** %4, align 8
  %207 = getelementptr inbounds i32, i32* %206, i64 29
  %208 = load i32, i32* %207, align 4
  %209 = shl i32 %208, 8
  %210 = or i32 %205, %209
  %211 = load i32*, i32** %4, align 8
  %212 = getelementptr inbounds i32, i32* %211, i64 30
  %213 = load i32, i32* %212, align 4
  %214 = shl i32 %213, 16
  %215 = or i32 %210, %214
  %216 = load i32*, i32** %4, align 8
  %217 = getelementptr inbounds i32, i32* %216, i64 31
  %218 = load i32, i32* %217, align 4
  %219 = shl i32 %218, 24
  %220 = or i32 %215, %219
  %221 = ashr i32 %220, 6
  %222 = and i32 %221, 33554431
  %223 = load i32*, i32** %3, align 8
  %224 = getelementptr inbounds i32, i32* %223, i64 9
  store i32 %222, i32* %224, align 4
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
