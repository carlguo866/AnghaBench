; ModuleID = '/home/carl/AnghaBench/mongoose/test/extr_unit_test.c_tests_run.c'
source_filename = "/home/carl/AnghaBench/mongoose/test/extr_unit_test.c_tests_run.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@test_mbuf = common dso_local global i32 0, align 4
@test_parse_uri = common dso_local global i32 0, align 4
@test_assemble_uri = common dso_local global i32 0, align 4
@test_parse_address = common dso_local global i32 0, align 4
@test_mg_normalize_uri_path = common dso_local global i32 0, align 4
@test_mg_uri_to_local_path = common dso_local global i32 0, align 4
@test_mg_url_encode = common dso_local global i32 0, align 4
@test_check_ip_acl = common dso_local global i32 0, align 4
@test_connect_opts = common dso_local global i32 0, align 4
@test_connect_opts_error_string = common dso_local global i32 0, align 4
@test_to64 = common dso_local global i32 0, align 4
@test_alloc_vprintf = common dso_local global i32 0, align 4
@test_socketpair = common dso_local global i32 0, align 4
@test_timer = common dso_local global i32 0, align 4
@test_simple = common dso_local global i32 0, align 4
@test_mgr = common dso_local global i32 0, align 4
@test_parse_http_message = common dso_local global i32 0, align 4
@test_get_http_var = common dso_local global i32 0, align 4
@test_http_serve_file = common dso_local global i32 0, align 4
@test_http_serve_file_streaming = common dso_local global i32 0, align 4
@test_http = common dso_local global i32 0, align 4
@test_http_pipeline = common dso_local global i32 0, align 4
@test_http_send_redirect = common dso_local global i32 0, align 4
@test_http_digest_auth = common dso_local global i32 0, align 4
@test_http_errors = common dso_local global i32 0, align 4
@test_http_index = common dso_local global i32 0, align 4
@test_http_parse_header = common dso_local global i32 0, align 4
@test_ssi = common dso_local global i32 0, align 4
@test_cgi = common dso_local global i32 0, align 4
@test_http_rewrites = common dso_local global i32 0, align 4
@test_http_dav = common dso_local global i32 0, align 4
@test_http_range = common dso_local global i32 0, align 4
@test_http_multipart = common dso_local global i32 0, align 4
@test_parse_date_string = common dso_local global i32 0, align 4
@test_websocket = common dso_local global i32 0, align 4
@test_websocket_endpoint = common dso_local global i32 0, align 4
@test_connect_ws = common dso_local global i32 0, align 4
@test_websocket_big = common dso_local global i32 0, align 4
@test_http_chunk = common dso_local global i32 0, align 4
@test_http_chunk2 = common dso_local global i32 0, align 4
@test_http_not_modified = common dso_local global i32 0, align 4
@test_http_extra_headers = common dso_local global i32 0, align 4
@test_http_endpoints = common dso_local global i32 0, align 4
@test_mqtt_handshake = common dso_local global i32 0, align 4
@test_mqtt_publish = common dso_local global i32 0, align 4
@test_mqtt_subscribe = common dso_local global i32 0, align 4
@test_mqtt_unsubscribe = common dso_local global i32 0, align 4
@test_mqtt_connack = common dso_local global i32 0, align 4
@test_mqtt_suback = common dso_local global i32 0, align 4
@test_mqtt_simple_acks = common dso_local global i32 0, align 4
@test_mqtt_nullary = common dso_local global i32 0, align 4
@test_mqtt_parse_mqtt = common dso_local global i32 0, align 4
@test_mqtt_parse_mqtt_qos1 = common dso_local global i32 0, align 4
@test_mqtt_match_topic_expression = common dso_local global i32 0, align 4
@test_mqtt_client_keep_alive = common dso_local global i32 0, align 4
@test_dns_encode = common dso_local global i32 0, align 4
@test_dns_uncompress = common dso_local global i32 0, align 4
@test_dns_decode = common dso_local global i32 0, align 4
@test_dns_decode_truncated = common dso_local global i32 0, align 4
@test_dns_reply_encode = common dso_local global i32 0, align 4
@test_dns_resolve = common dso_local global i32 0, align 4
@test_dns_resolve_timeout = common dso_local global i32 0, align 4
@test_dns_resolve_hosts = common dso_local global i32 0, align 4
@test_buffer_limit = common dso_local global i32 0, align 4
@test_connection_errors = common dso_local global i32 0, align 4
@test_connect_fail = common dso_local global i32 0, align 4
@test_resolve = common dso_local global i32 0, align 4
@test_base64 = common dso_local global i32 0, align 4
@test_sock_addr_to_str = common dso_local global i32 0, align 4
@test_hexdump = common dso_local global i32 0, align 4
@test_hexdump_file = common dso_local global i32 0, align 4
@test_basic_auth_helpers = common dso_local global i32 0, align 4
@test_http_auth = common dso_local global i32 0, align 4
@test_udp = common dso_local global i32 0, align 4
@test_strcmp = common dso_local global i32 0, align 4
@test_coap = common dso_local global i32 0, align 4
@test_dns_server = common dso_local global i32 0, align 4
@test_http_multipart2 = common dso_local global i32 0, align 4
@test_http_multipart_pipeline = common dso_local global i32 0, align 4
@test_http_multipart_upload = common dso_local global i32 0, align 4
@test_modern_crypto = common dso_local global i32 0, align 4
@test_mqtt_broker = common dso_local global i32 0, align 4
@test_sntp = common dso_local global i32 0, align 4
@test_socks = common dso_local global i32 0, align 4
@test_ssl = common dso_local global i32 0, align 4
@test_thread = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @tests_run(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i32, i32* @test_mbuf, align 4
  %4 = call i32 @RUN_TEST(i32 %3)
  %5 = load i32, i32* @test_parse_uri, align 4
  %6 = call i32 @RUN_TEST(i32 %5)
  %7 = load i32, i32* @test_assemble_uri, align 4
  %8 = call i32 @RUN_TEST(i32 %7)
  %9 = load i32, i32* @test_parse_address, align 4
  %10 = call i32 @RUN_TEST(i32 %9)
  %11 = load i32, i32* @test_mg_normalize_uri_path, align 4
  %12 = call i32 @RUN_TEST(i32 %11)
  %13 = load i32, i32* @test_mg_uri_to_local_path, align 4
  %14 = call i32 @RUN_TEST(i32 %13)
  %15 = load i32, i32* @test_mg_url_encode, align 4
  %16 = call i32 @RUN_TEST(i32 %15)
  %17 = load i32, i32* @test_check_ip_acl, align 4
  %18 = call i32 @RUN_TEST(i32 %17)
  %19 = load i32, i32* @test_connect_opts, align 4
  %20 = call i32 @RUN_TEST(i32 %19)
  %21 = load i32, i32* @test_connect_opts_error_string, align 4
  %22 = call i32 @RUN_TEST(i32 %21)
  %23 = load i32, i32* @test_to64, align 4
  %24 = call i32 @RUN_TEST(i32 %23)
  %25 = load i32, i32* @test_alloc_vprintf, align 4
  %26 = call i32 @RUN_TEST(i32 %25)
  %27 = load i32, i32* @test_socketpair, align 4
  %28 = call i32 @RUN_TEST(i32 %27)
  %29 = load i32, i32* @test_timer, align 4
  %30 = call i32 @RUN_TEST(i32 %29)
  %31 = load i32, i32* @test_simple, align 4
  %32 = call i32 @RUN_TEST(i32 %31)
  %33 = load i32, i32* @test_mgr, align 4
  %34 = call i32 @RUN_TEST(i32 %33)
  %35 = load i32, i32* @test_parse_http_message, align 4
  %36 = call i32 @RUN_TEST(i32 %35)
  %37 = load i32, i32* @test_get_http_var, align 4
  %38 = call i32 @RUN_TEST(i32 %37)
  %39 = load i32, i32* @test_http_serve_file, align 4
  %40 = call i32 @RUN_TEST(i32 %39)
  %41 = load i32, i32* @test_http_serve_file_streaming, align 4
  %42 = call i32 @RUN_TEST(i32 %41)
  %43 = load i32, i32* @test_http, align 4
  %44 = call i32 @RUN_TEST(i32 %43)
  %45 = load i32, i32* @test_http_pipeline, align 4
  %46 = call i32 @RUN_TEST(i32 %45)
  %47 = load i32, i32* @test_http_send_redirect, align 4
  %48 = call i32 @RUN_TEST(i32 %47)
  %49 = load i32, i32* @test_http_digest_auth, align 4
  %50 = call i32 @RUN_TEST(i32 %49)
  %51 = load i32, i32* @test_http_errors, align 4
  %52 = call i32 @RUN_TEST(i32 %51)
  %53 = load i32, i32* @test_http_index, align 4
  %54 = call i32 @RUN_TEST(i32 %53)
  %55 = load i32, i32* @test_http_parse_header, align 4
  %56 = call i32 @RUN_TEST(i32 %55)
  %57 = load i32, i32* @test_ssi, align 4
  %58 = call i32 @RUN_TEST(i32 %57)
  %59 = load i32, i32* @test_cgi, align 4
  %60 = call i32 @RUN_TEST(i32 %59)
  %61 = load i32, i32* @test_http_rewrites, align 4
  %62 = call i32 @RUN_TEST(i32 %61)
  %63 = load i32, i32* @test_http_dav, align 4
  %64 = call i32 @RUN_TEST(i32 %63)
  %65 = load i32, i32* @test_http_range, align 4
  %66 = call i32 @RUN_TEST(i32 %65)
  %67 = load i32, i32* @test_http_multipart, align 4
  %68 = call i32 @RUN_TEST(i32 %67)
  %69 = load i32, i32* @test_parse_date_string, align 4
  %70 = call i32 @RUN_TEST(i32 %69)
  %71 = load i32, i32* @test_websocket, align 4
  %72 = call i32 @RUN_TEST(i32 %71)
  %73 = load i32, i32* @test_websocket_endpoint, align 4
  %74 = call i32 @RUN_TEST(i32 %73)
  %75 = load i32, i32* @test_connect_ws, align 4
  %76 = call i32 @RUN_TEST(i32 %75)
  %77 = load i32, i32* @test_websocket_big, align 4
  %78 = call i32 @RUN_TEST(i32 %77)
  %79 = load i32, i32* @test_http_chunk, align 4
  %80 = call i32 @RUN_TEST(i32 %79)
  %81 = load i32, i32* @test_http_chunk2, align 4
  %82 = call i32 @RUN_TEST(i32 %81)
  %83 = load i32, i32* @test_http_not_modified, align 4
  %84 = call i32 @RUN_TEST(i32 %83)
  %85 = load i32, i32* @test_http_extra_headers, align 4
  %86 = call i32 @RUN_TEST(i32 %85)
  %87 = load i32, i32* @test_http_endpoints, align 4
  %88 = call i32 @RUN_TEST(i32 %87)
  %89 = load i32, i32* @test_mqtt_handshake, align 4
  %90 = call i32 @RUN_TEST(i32 %89)
  %91 = load i32, i32* @test_mqtt_publish, align 4
  %92 = call i32 @RUN_TEST(i32 %91)
  %93 = load i32, i32* @test_mqtt_subscribe, align 4
  %94 = call i32 @RUN_TEST(i32 %93)
  %95 = load i32, i32* @test_mqtt_unsubscribe, align 4
  %96 = call i32 @RUN_TEST(i32 %95)
  %97 = load i32, i32* @test_mqtt_connack, align 4
  %98 = call i32 @RUN_TEST(i32 %97)
  %99 = load i32, i32* @test_mqtt_suback, align 4
  %100 = call i32 @RUN_TEST(i32 %99)
  %101 = load i32, i32* @test_mqtt_simple_acks, align 4
  %102 = call i32 @RUN_TEST(i32 %101)
  %103 = load i32, i32* @test_mqtt_nullary, align 4
  %104 = call i32 @RUN_TEST(i32 %103)
  %105 = load i32, i32* @test_mqtt_parse_mqtt, align 4
  %106 = call i32 @RUN_TEST(i32 %105)
  %107 = load i32, i32* @test_mqtt_parse_mqtt_qos1, align 4
  %108 = call i32 @RUN_TEST(i32 %107)
  %109 = load i32, i32* @test_mqtt_match_topic_expression, align 4
  %110 = call i32 @RUN_TEST(i32 %109)
  %111 = load i32, i32* @test_mqtt_client_keep_alive, align 4
  %112 = call i32 @RUN_TEST(i32 %111)
  %113 = load i32, i32* @test_dns_encode, align 4
  %114 = call i32 @RUN_TEST(i32 %113)
  %115 = load i32, i32* @test_dns_uncompress, align 4
  %116 = call i32 @RUN_TEST(i32 %115)
  %117 = load i32, i32* @test_dns_decode, align 4
  %118 = call i32 @RUN_TEST(i32 %117)
  %119 = load i32, i32* @test_dns_decode_truncated, align 4
  %120 = call i32 @RUN_TEST(i32 %119)
  %121 = load i32, i32* @test_dns_reply_encode, align 4
  %122 = call i32 @RUN_TEST(i32 %121)
  %123 = load i32, i32* @test_dns_resolve, align 4
  %124 = call i32 @RUN_TEST(i32 %123)
  %125 = load i32, i32* @test_dns_resolve_timeout, align 4
  %126 = call i32 @RUN_TEST(i32 %125)
  %127 = load i32, i32* @test_dns_resolve_hosts, align 4
  %128 = call i32 @RUN_TEST(i32 %127)
  %129 = load i32, i32* @test_buffer_limit, align 4
  %130 = call i32 @RUN_TEST(i32 %129)
  %131 = load i32, i32* @test_connection_errors, align 4
  %132 = call i32 @RUN_TEST(i32 %131)
  %133 = load i32, i32* @test_connect_fail, align 4
  %134 = call i32 @RUN_TEST(i32 %133)
  %135 = load i32, i32* @test_resolve, align 4
  %136 = call i32 @RUN_TEST(i32 %135)
  %137 = load i32, i32* @test_base64, align 4
  %138 = call i32 @RUN_TEST(i32 %137)
  %139 = load i32, i32* @test_sock_addr_to_str, align 4
  %140 = call i32 @RUN_TEST(i32 %139)
  %141 = load i32, i32* @test_hexdump, align 4
  %142 = call i32 @RUN_TEST(i32 %141)
  %143 = load i32, i32* @test_hexdump_file, align 4
  %144 = call i32 @RUN_TEST(i32 %143)
  %145 = load i32, i32* @test_basic_auth_helpers, align 4
  %146 = call i32 @RUN_TEST(i32 %145)
  %147 = load i32, i32* @test_http_auth, align 4
  %148 = call i32 @RUN_TEST(i32 %147)
  %149 = load i32, i32* @test_udp, align 4
  %150 = call i32 @RUN_TEST(i32 %149)
  %151 = load i32, i32* @test_strcmp, align 4
  %152 = call i32 @RUN_TEST(i32 %151)
  ret i8* null
}

declare dso_local i32 @RUN_TEST(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
