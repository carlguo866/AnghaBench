; ModuleID = '/home/carl/AnghaBench/exploitdb/shellcodes/generator/extr_13491.c_patchcode.c'
source_filename = "/home/carl/AnghaBench/exploitdb/shellcodes/generator/extr_13491.c_patchcode.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SETHI_O1 = common dso_local global i64 0, align 8
@rx_enc_con_back = common dso_local global i32* null, align 8
@OR_O1 = common dso_local global i64 0, align 8
@AF_INET = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @patchcode(i64 %0, i16 zeroext %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i16, align 2
  store i64 %0, i64* %3, align 8
  store i16 %1, i16* %4, align 2
  %5 = load i64, i64* @SETHI_O1, align 8
  %6 = load i64, i64* %3, align 8
  %7 = ashr i64 %6, 10
  %8 = and i64 %7, 4194303
  %9 = add nsw i64 %5, %8
  %10 = load i32*, i32** @rx_enc_con_back, align 8
  %11 = getelementptr inbounds i32, i32* %10, i64 408
  %12 = bitcast i32* %11 to i64*
  store i64 %9, i64* %12, align 8
  %13 = load i64, i64* @OR_O1, align 8
  %14 = load i64, i64* %3, align 8
  %15 = and i64 %14, 767
  %16 = add nsw i64 %13, %15
  %17 = load i32*, i32** @rx_enc_con_back, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 412
  %19 = bitcast i32* %18 to i64*
  store i64 %16, i64* %19, align 8
  %20 = load i64, i64* @SETHI_O1, align 8
  %21 = load i32, i32* @AF_INET, align 4
  %22 = shl i32 %21, 16
  %23 = load i16, i16* %4, align 2
  %24 = zext i16 %23 to i32
  %25 = add nsw i32 %22, %24
  %26 = shl i32 %25, 2
  %27 = sext i32 %26 to i64
  %28 = add nsw i64 %20, %27
  %29 = load i32*, i32** @rx_enc_con_back, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 396
  %31 = bitcast i32* %30 to i64*
  store i64 %28, i64* %31, align 8
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
