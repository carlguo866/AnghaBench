; ModuleID = '/home/carl/AnghaBench/exploitdb/shellcodes/generator/extr_13286.c_ip_str_to_dw.c'
source_filename = "/home/carl/AnghaBench/exploitdb/shellcodes/generator/extr_13286.c_ip_str_to_dw.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@MAX_IP_STR_LEN = common dso_local global i64 0, align 8
@MIN_IP_STR_LEN = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [12 x i8] c"%d.%d.%d.%d\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @ip_str_to_dw(i32* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32*, align 8
  %4 = alloca [4 x i32], align 16
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = icmp ne i32* %6, null
  br i1 %7, label %8, label %18

8:                                                ; preds = %1
  %9 = load i64, i64* @MAX_IP_STR_LEN, align 8
  %10 = load i32*, i32** %3, align 8
  %11 = call i64 @strlen(i32* %10)
  %12 = icmp slt i64 %9, %11
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = load i32*, i32** %3, align 8
  %15 = call i64 @strlen(i32* %14)
  %16 = load i64, i64* @MIN_IP_STR_LEN, align 8
  %17 = icmp slt i64 %15, %16
  br i1 %17, label %18, label %19

18:                                               ; preds = %13, %8, %1
  store i32 -1, i32* %2, align 4
  br label %82

19:                                               ; preds = %13
  %20 = load i32*, i32** %3, align 8
  %21 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 0
  %22 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 1
  %23 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 2
  %24 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 3
  %25 = call i32 @sscanf(i32* %20, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32* %21, i32* %22, i32* %23, i32* %24)
  %26 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 3
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, 255
  br i1 %28, label %29, label %30

29:                                               ; preds = %19
  br label %34

30:                                               ; preds = %19
  %31 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 3
  %32 = load i32, i32* %31, align 4
  %33 = shl i32 %32, 24
  store i32 %33, i32* %31, align 4
  br label %34

34:                                               ; preds = %30, %29
  %35 = phi i32 [ -1, %29 ], [ %33, %30 ]
  %36 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 3
  store i32 %35, i32* %36, align 4
  %37 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 2
  %38 = load i32, i32* %37, align 8
  %39 = icmp sgt i32 %38, 255
  br i1 %39, label %40, label %41

40:                                               ; preds = %34
  br label %45

41:                                               ; preds = %34
  %42 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 2
  %43 = load i32, i32* %42, align 8
  %44 = shl i32 %43, 16
  store i32 %44, i32* %42, align 8
  br label %45

45:                                               ; preds = %41, %40
  %46 = phi i32 [ -1, %40 ], [ %44, %41 ]
  %47 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 2
  store i32 %46, i32* %47, align 8
  %48 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp sgt i32 %49, 255
  br i1 %50, label %51, label %52

51:                                               ; preds = %45
  br label %56

52:                                               ; preds = %45
  %53 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 1
  %54 = load i32, i32* %53, align 4
  %55 = shl i32 %54, 8
  store i32 %55, i32* %53, align 4
  br label %56

56:                                               ; preds = %52, %51
  %57 = phi i32 [ -1, %51 ], [ %55, %52 ]
  %58 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 1
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 0
  %60 = load i32, i32* %59, align 16
  %61 = icmp sgt i32 %60, 255
  br i1 %61, label %62, label %63

62:                                               ; preds = %56
  br label %67

63:                                               ; preds = %56
  %64 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 0
  %65 = load i32, i32* %64, align 16
  %66 = shl i32 %65, 0
  store i32 %66, i32* %64, align 16
  br label %67

67:                                               ; preds = %63, %62
  %68 = phi i32 [ -1, %62 ], [ %66, %63 ]
  %69 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 0
  store i32 %68, i32* %69, align 16
  %70 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 0
  %71 = load i32, i32* %70, align 16
  %72 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 1
  %73 = load i32, i32* %72, align 4
  %74 = add nsw i32 %71, %73
  %75 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 2
  %76 = load i32, i32* %75, align 8
  %77 = add nsw i32 %74, %76
  %78 = getelementptr inbounds [4 x i32], [4 x i32]* %4, i64 0, i64 3
  %79 = load i32, i32* %78, align 4
  %80 = add nsw i32 %77, %79
  store i32 %80, i32* %5, align 4
  %81 = load i32, i32* %5, align 4
  store i32 %81, i32* %2, align 4
  br label %82

82:                                               ; preds = %67, %18
  %83 = load i32, i32* %2, align 4
  ret i32 %83
}

declare dso_local i64 @strlen(i32*) #1

declare dso_local i32 @sscanf(i32*, i8*, i32*, i32*, i32*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
