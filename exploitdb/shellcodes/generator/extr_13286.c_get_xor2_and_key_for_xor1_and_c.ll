; ModuleID = '/home/carl/AnghaBench/exploitdb/shellcodes/generator/extr_13286.c_get_xor2_and_key_for_xor1_and_c.c'
source_filename = "/home/carl/AnghaBench/exploitdb/shellcodes/generator/extr_13286.c_get_xor2_and_key_for_xor1_and_c.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.xor2_key = type { i8, i64, %struct.xor2_key*, %struct.xor2_key* }

@ALNUM_CHARSET = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.xor2_key* @get_xor2_and_key_for_xor1_and_c(i64 %0, i64 %1) #0 {
  %3 = alloca %struct.xor2_key*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.xor2_key*, align 8
  %7 = alloca %struct.xor2_key*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  store i64 %0, i64* %4, align 8
  store i64 %1, i64* %5, align 8
  %15 = load i8*, i8** @ALNUM_CHARSET, align 8
  store i8* %15, i8** %8, align 8
  store i64 0, i64* %9, align 8
  store i64 1, i64* %10, align 8
  store i64 0, i64* %11, align 8
  store i64 0, i64* %12, align 8
  store i64 0, i64* %13, align 8
  store i64 0, i64* %14, align 8
  %16 = call i8* @malloc(i32 4)
  %17 = bitcast i8* %16 to %struct.xor2_key*
  store %struct.xor2_key* %17, %struct.xor2_key** %6, align 8
  store %struct.xor2_key* %17, %struct.xor2_key** %7, align 8
  %18 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %19 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %18, i32 0, i32 3
  store %struct.xor2_key* null, %struct.xor2_key** %19, align 8
  %20 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %21 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %20, i32 0, i32 2
  store %struct.xor2_key* null, %struct.xor2_key** %21, align 8
  %22 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %23 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %22, i32 0, i32 0
  store i8 0, i8* %23, align 8
  %24 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %25 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %24, i32 0, i32 1
  store i64 0, i64* %25, align 8
  store i64 0, i64* %9, align 8
  br label %26

26:                                               ; preds = %87, %2
  %27 = load i8*, i8** %8, align 8
  %28 = load i64, i64* %9, align 8
  %29 = getelementptr inbounds i8, i8* %27, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = icmp ne i8 %30, 0
  br i1 %31, label %32, label %90

32:                                               ; preds = %26
  store i64 0, i64* %14, align 8
  br label %33

33:                                               ; preds = %83, %32
  %34 = load i8*, i8** %8, align 8
  %35 = load i64, i64* %14, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = icmp ne i8 %37, 0
  br i1 %38, label %39, label %86

39:                                               ; preds = %33
  %40 = load i8*, i8** %8, align 8
  %41 = load i64, i64* %14, align 8
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i64
  store i64 %44, i64* %13, align 8
  %45 = load i64, i64* %4, align 8
  %46 = load i8*, i8** %8, align 8
  %47 = load i64, i64* %9, align 8
  %48 = getelementptr inbounds i8, i8* %46, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = sext i8 %49 to i64
  %51 = mul i64 %45, %50
  %52 = load i64, i64* %13, align 8
  %53 = xor i64 %51, %52
  %54 = load i64, i64* %5, align 8
  %55 = icmp eq i64 %53, %54
  br i1 %55, label %56, label %82

56:                                               ; preds = %39
  %57 = load i64, i64* %13, align 8
  %58 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %59 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %58, i32 0, i32 1
  store i64 %57, i64* %59, align 8
  %60 = load i8*, i8** %8, align 8
  %61 = load i64, i64* %9, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %65 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %64, i32 0, i32 0
  store i8 %63, i8* %65, align 8
  %66 = call i8* @malloc(i32 32)
  %67 = bitcast i8* %66 to %struct.xor2_key*
  %68 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %69 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %68, i32 0, i32 2
  store %struct.xor2_key* %67, %struct.xor2_key** %69, align 8
  %70 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %71 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %72 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %71, i32 0, i32 2
  %73 = load %struct.xor2_key*, %struct.xor2_key** %72, align 8
  %74 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %73, i32 0, i32 3
  store %struct.xor2_key* %70, %struct.xor2_key** %74, align 8
  %75 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %76 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %75, i32 0, i32 2
  %77 = load %struct.xor2_key*, %struct.xor2_key** %76, align 8
  store %struct.xor2_key* %77, %struct.xor2_key** %6, align 8
  %78 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %79 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %78, i32 0, i32 0
  store i8 0, i8* %79, align 8
  %80 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %81 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %80, i32 0, i32 1
  store i64 0, i64* %81, align 8
  br label %82

82:                                               ; preds = %56, %39
  br label %83

83:                                               ; preds = %82
  %84 = load i64, i64* %14, align 8
  %85 = add i64 %84, 1
  store i64 %85, i64* %14, align 8
  br label %33

86:                                               ; preds = %33
  br label %87

87:                                               ; preds = %86
  %88 = load i64, i64* %9, align 8
  %89 = add i64 %88, 1
  store i64 %89, i64* %9, align 8
  br label %26

90:                                               ; preds = %26
  %91 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %92 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %91, i32 0, i32 0
  %93 = load i8, i8* %92, align 8
  %94 = icmp ne i8 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %90
  %96 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %97 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %96, i32 0, i32 2
  store %struct.xor2_key* null, %struct.xor2_key** %97, align 8
  br label %98

98:                                               ; preds = %95, %90
  %99 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %100 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %99, i32 0, i32 3
  %101 = load %struct.xor2_key*, %struct.xor2_key** %100, align 8
  %102 = icmp ne %struct.xor2_key* %101, null
  br i1 %102, label %103, label %107

103:                                              ; preds = %98
  %104 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %105 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %104, i32 0, i32 3
  %106 = load %struct.xor2_key*, %struct.xor2_key** %105, align 8
  store %struct.xor2_key* %106, %struct.xor2_key** %6, align 8
  br label %108

107:                                              ; preds = %98
  store %struct.xor2_key* null, %struct.xor2_key** %3, align 8
  br label %116

108:                                              ; preds = %103
  %109 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %110 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %109, i32 0, i32 2
  %111 = load %struct.xor2_key*, %struct.xor2_key** %110, align 8
  %112 = call i32 @free(%struct.xor2_key* %111)
  %113 = load %struct.xor2_key*, %struct.xor2_key** %6, align 8
  %114 = getelementptr inbounds %struct.xor2_key, %struct.xor2_key* %113, i32 0, i32 2
  store %struct.xor2_key* null, %struct.xor2_key** %114, align 8
  %115 = load %struct.xor2_key*, %struct.xor2_key** %7, align 8
  store %struct.xor2_key* %115, %struct.xor2_key** %3, align 8
  br label %116

116:                                              ; preds = %108, %107
  %117 = load %struct.xor2_key*, %struct.xor2_key** %3, align 8
  ret %struct.xor2_key* %117
}

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @free(%struct.xor2_key*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
