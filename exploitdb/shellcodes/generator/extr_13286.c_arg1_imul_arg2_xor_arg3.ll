; ModuleID = '/home/carl/AnghaBench/exploitdb/shellcodes/generator/extr_13286.c_arg1_imul_arg2_xor_arg3.c'
source_filename = "/home/carl/AnghaBench/exploitdb/shellcodes/generator/extr_13286.c_arg1_imul_arg2_xor_arg3.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @arg1_imul_arg2_xor_arg3(i64* %0, i64* %1, i32 %2, i32 %3, i32 %4, i32 %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca i64*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i64* %0, i64** %8, align 8
  store i64* %1, i64** %9, align 8
  store i32 %2, i32* %10, align 4
  store i32 %3, i32* %11, align 4
  store i32 %4, i32* %12, align 4
  store i32 %5, i32* %13, align 4
  store i32 0, i32* %14, align 4
  store i32 0, i32* %16, align 4
  store i32 0, i32* %15, align 4
  br label %17

17:                                               ; preds = %108, %6
  %18 = load i32, i32* %15, align 4
  %19 = load i32, i32* %10, align 4
  %20 = icmp slt i32 %18, %19
  br i1 %20, label %21, label %111

21:                                               ; preds = %17
  br label %22

22:                                               ; preds = %106, %21
  %23 = load i64*, i64** %8, align 8
  %24 = load i32, i32* %14, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i64, i64* %23, i64 %25
  %27 = load i64, i64* %26, align 8
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %29, label %107

29:                                               ; preds = %22
  %30 = load i64*, i64** %8, align 8
  %31 = load i32, i32* %14, align 4
  %32 = load i32, i32* %11, align 4
  %33 = add nsw i32 %31, %32
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i64, i64* %30, i64 %34
  %36 = load i64, i64* %35, align 8
  %37 = load i64*, i64** %8, align 8
  %38 = load i32, i32* %14, align 4
  %39 = load i32, i32* %12, align 4
  %40 = add nsw i32 %38, %39
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i64, i64* %37, i64 %41
  %43 = load i64, i64* %42, align 8
  %44 = mul nsw i64 %36, %43
  %45 = load i64*, i64** %8, align 8
  %46 = load i32, i32* %14, align 4
  %47 = load i32, i32* %13, align 4
  %48 = add nsw i32 %46, %47
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i64, i64* %45, i64 %49
  %51 = load i64, i64* %50, align 8
  %52 = xor i64 %44, %51
  %53 = load i64*, i64** %9, align 8
  %54 = load i32, i32* %15, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i64, i64* %53, i64 %55
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %52, %57
  br i1 %58, label %59, label %64

59:                                               ; preds = %29
  %60 = load i32, i32* %14, align 4
  %61 = add nsw i32 %60, 2
  store i32 %61, i32* %14, align 4
  %62 = load i32, i32* %16, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %16, align 4
  br label %107

64:                                               ; preds = %29
  %65 = load i64*, i64** %8, align 8
  %66 = load i32, i32* %14, align 4
  %67 = load i32, i32* %11, align 4
  %68 = add nsw i32 %66, %67
  %69 = add nsw i32 %68, 1
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i64, i64* %65, i64 %70
  %72 = load i64, i64* %71, align 8
  %73 = load i64*, i64** %8, align 8
  %74 = load i32, i32* %14, align 4
  %75 = load i32, i32* %12, align 4
  %76 = add nsw i32 %74, %75
  %77 = add nsw i32 %76, 1
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i64, i64* %73, i64 %78
  %80 = load i64, i64* %79, align 8
  %81 = mul nsw i64 %72, %80
  %82 = load i64*, i64** %8, align 8
  %83 = load i32, i32* %14, align 4
  %84 = load i32, i32* %13, align 4
  %85 = add nsw i32 %83, %84
  %86 = add nsw i32 %85, 1
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i64, i64* %82, i64 %87
  %89 = load i64, i64* %88, align 8
  %90 = xor i64 %81, %89
  %91 = load i64*, i64** %9, align 8
  %92 = load i32, i32* %15, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i64, i64* %91, i64 %93
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %90, %95
  br i1 %96, label %97, label %102

97:                                               ; preds = %64
  %98 = load i32, i32* %14, align 4
  %99 = add nsw i32 %98, 3
  store i32 %99, i32* %14, align 4
  %100 = load i32, i32* %16, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %16, align 4
  br label %107

102:                                              ; preds = %64
  store i32 0, i32* %16, align 4
  store i32 0, i32* %15, align 4
  %103 = load i32, i32* %14, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %14, align 4
  br label %105

105:                                              ; preds = %102
  br label %106

106:                                              ; preds = %105
  br label %22

107:                                              ; preds = %97, %59, %22
  br label %108

108:                                              ; preds = %107
  %109 = load i32, i32* %15, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %15, align 4
  br label %17

111:                                              ; preds = %17
  %112 = load i32, i32* %16, align 4
  %113 = load i32, i32* %10, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %115, label %116

115:                                              ; preds = %111
  store i32 1, i32* %7, align 4
  br label %117

116:                                              ; preds = %111
  store i32 0, i32* %7, align 4
  br label %117

117:                                              ; preds = %116, %115
  %118 = load i32, i32* %7, align 4
  ret i32 %118
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
