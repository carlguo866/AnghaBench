; ModuleID = '/home/carl/AnghaBench/exploitdb/shellcodes/bsd/extr_13256.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/shellcodes/bsd/extr_13256.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [27 x i8] c"IP: %lx shellcode len: %d\0A\00", align 1
@shellcode = common dso_local global i32* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca void ()*, align 8
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %7 = load i8**, i8*** %4, align 8
  %8 = getelementptr inbounds i8*, i8** %7, i64 0
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = call i32 @exit(i32 0) #3
  unreachable

13:                                               ; preds = %2
  %14 = load i8**, i8*** %4, align 8
  %15 = getelementptr inbounds i8*, i8** %14, i64 1
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 @inet_addr(i8* %16)
  store i32 %17, i32* %6, align 4
  %18 = load i32, i32* %6, align 4
  %19 = load i32*, i32** @shellcode, align 8
  %20 = call i32 @strlen(i32* %19)
  %21 = call i32 @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i32 %18, i32 %20)
  %22 = load i32, i32* %6, align 4
  %23 = and i32 %22, 255
  %24 = load i32*, i32** @shellcode, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 28
  store i32 %23, i32* %25, align 4
  %26 = load i32, i32* %6, align 4
  %27 = lshr i32 %26, 8
  %28 = and i32 %27, 255
  %29 = load i32*, i32** @shellcode, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 29
  store i32 %28, i32* %30, align 4
  %31 = load i32, i32* %6, align 4
  %32 = lshr i32 %31, 16
  %33 = and i32 %32, 255
  %34 = load i32*, i32** @shellcode, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 30
  store i32 %33, i32* %35, align 4
  %36 = load i32, i32* %6, align 4
  %37 = lshr i32 %36, 24
  %38 = and i32 %37, 255
  %39 = load i32*, i32** @shellcode, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 31
  store i32 %38, i32* %40, align 4
  %41 = load i32*, i32** @shellcode, align 8
  %42 = bitcast i32* %41 to i8*
  %43 = bitcast i8* %42 to void ()*
  store void ()* %43, void ()** %5, align 8
  %44 = load void ()*, void ()** %5, align 8
  call void %44()
  ret i32 0
}

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #1

declare dso_local i32 @inet_addr(i8*) #2

declare dso_local i32 @printf(i8*, i32, i32) #2

declare dso_local i32 @strlen(i32*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
