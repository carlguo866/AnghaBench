; ModuleID = '/home/carl/AnghaBench/exploitdb/shellcodes/linux_x86-64/extr_43554.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/shellcodes/linux_x86-64/extr_43554.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@egg = common dso_local global i64 0, align 8
@bindshell = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [22 x i8] c"Egghunter Length: %d\0A\00", align 1
@egghunter = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [22 x i8] c"Shellcode Length: %d\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i32 (...)*, align 8
  store i32 0, i32* %1, align 4
  %4 = call i64 @malloc(i32 1000000)
  %5 = inttoptr i64 %4 to i8*
  store i8* %5, i8** %2, align 8
  %6 = load i8*, i8** %2, align 8
  %7 = call i32 @memset(i8* %6, i8 signext 0, i32 512)
  %8 = load i8*, i8** %2, align 8
  %9 = load i64, i64* @egg, align 8
  %10 = call i32 @strncpy(i8* %8, i64 %9, i32 4)
  %11 = load i8*, i8** %2, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 4
  %13 = load i64, i64* @egg, align 8
  %14 = call i32 @strncpy(i8* %12, i64 %13, i32 4)
  %15 = load i8*, i8** %2, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = load i64, i64* @bindshell, align 8
  %18 = call i32 @strncpy(i8* %16, i64 %17, i32 212)
  %19 = load i64, i64* @egghunter, align 8
  %20 = call i32 @strlen(i64 %19)
  %21 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i32 %20)
  %22 = load i64, i64* @bindshell, align 8
  %23 = call i32 @strlen(i64 %22)
  %24 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i32 %23)
  %25 = load i64, i64* @egghunter, align 8
  %26 = inttoptr i64 %25 to i32 (...)*
  store i32 (...)* %26, i32 (...)** %3, align 8
  %27 = load i32 (...)*, i32 (...)** %3, align 8
  %28 = call i32 (...) %27()
  ret i32 0
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i32 @strncpy(i8*, i64, i32) #1

declare dso_local i32 @printf(i8*, i32) #1

declare dso_local i32 @strlen(i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
