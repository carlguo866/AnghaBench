; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows_x86-64/local/extr_41020.c_PsGetCurrentProcess.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows_x86-64/local/extr_41020.c_PsGetCurrentProcess.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i32 }
%struct.TYPE_3__ = type { i32 }

@gConfig = common dso_local global %struct.TYPE_4__ zeroinitializer, align 4
@TRUE = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @PsGetCurrentProcess() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.TYPE_3__, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = call i32 (...) @PsInitialSystemProcess()
  store i32 %5, i32* %1, align 4
  %6 = load i32, i32* %1, align 4
  %7 = load i32, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @gConfig, i32 0, i32 0), align 4
  %8 = add nsw i32 %6, %7
  %9 = sext i32 %8 to i64
  %10 = add i64 %9, 4
  %11 = trunc i64 %10 to i32
  %12 = bitcast %struct.TYPE_3__* %2 to i32*
  %13 = call i32 @ReadFromAddress(i32 %11, i32* %12, i32 4)
  store i32 0, i32* %3, align 4
  br label %14

14:                                               ; preds = %53, %0
  %15 = load i64, i64* @TRUE, align 8
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %54

17:                                               ; preds = %14
  store i32 0, i32* %4, align 4
  %18 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %2, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = load i32, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @gConfig, i32 0, i32 0), align 4
  %21 = sub nsw i32 %19, %20
  %22 = sext i32 %21 to i64
  %23 = sub i64 %22, 4
  %24 = trunc i64 %23 to i32
  store i32 %24, i32* %1, align 4
  %25 = load i32, i32* %1, align 4
  %26 = load i32, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @gConfig, i32 0, i32 0), align 4
  %27 = add nsw i32 %25, %26
  %28 = call i32 @ReadFromAddress(i32 %27, i32* %4, i32 4)
  %29 = call i32 (...) @GetCurrentProcessId()
  %30 = load i32, i32* %4, align 4
  %31 = icmp eq i32 %29, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %17
  %33 = load i32, i32* %1, align 4
  store i32 %33, i32* %3, align 4
  br label %54

34:                                               ; preds = %17
  %35 = load i32, i32* %1, align 4
  %36 = load i32, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @gConfig, i32 0, i32 0), align 4
  %37 = add nsw i32 %35, %36
  %38 = sext i32 %37 to i64
  %39 = add i64 %38, 4
  %40 = trunc i64 %39 to i32
  %41 = bitcast %struct.TYPE_3__* %2 to i32*
  %42 = call i32 @ReadFromAddress(i32 %40, i32* %41, i32 4)
  %43 = load i32, i32* %1, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %2, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @gConfig, i32 0, i32 0), align 4
  %48 = sub nsw i32 %46, %47
  %49 = sext i32 %48 to i64
  %50 = sub i64 %49, 4
  %51 = icmp eq i64 %44, %50
  br i1 %51, label %52, label %53

52:                                               ; preds = %34
  br label %54

53:                                               ; preds = %34
  br label %14

54:                                               ; preds = %52, %32, %14
  %55 = load i32, i32* %3, align 4
  ret i32 %55
}

declare dso_local i32 @PsInitialSystemProcess(...) #1

declare dso_local i32 @ReadFromAddress(i32, i32*, i32) #1

declare dso_local i32 @GetCurrentProcessId(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
