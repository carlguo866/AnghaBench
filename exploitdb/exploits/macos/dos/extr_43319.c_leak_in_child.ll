; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/macos/dos/extr_43319.c_leak_in_child.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/macos/dos/extr_43319.c_leak_in_child.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @leak_in_child() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  %4 = alloca i32, align 4
  %5 = call { i32, i32 } asm sideeffect "mov $$0x02000002, %rax\0A\09syscall\0A\09", "={ax},={dx},~{cc},~{memory},~{rcx},~{r11},~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !2
  %6 = extractvalue { i32, i32 } %5, 0
  %7 = extractvalue { i32, i32 } %5, 1
  store i32 %6, i32* %1, align 4
  store i32 %7, i32* %2, align 4
  %8 = load i32, i32* %2, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %13

10:                                               ; preds = %0
  %11 = call i32 (...) @do_leak()
  %12 = call i32 @read(i32 0, i8* %3, i32 1)
  call void asm sideeffect "mov $$0x02000001, %rax\0A\09mov $$0, %rdi\0A\09syscall\0A\09", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !3
  br label %13

13:                                               ; preds = %10, %0
  ret void
}

declare dso_local i32 @do_leak(...) #1

declare dso_local i32 @read(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
!2 = !{i32 249, i32 274, i32 292}
!3 = !{i32 468, i32 492, i32 517, i32 537}
