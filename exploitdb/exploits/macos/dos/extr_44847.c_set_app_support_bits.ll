; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/macos/dos/extr_44847.c_set_app_support_bits.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/macos/dos/extr_44847.c_set_app_support_bits.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@KERN_SUCCESS = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [25 x i8] c"IOConnectCall error: %x\0A\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"worked?\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_app_support_bits(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca [16 x i32], align 16
  %5 = alloca i32, align 4
  %6 = alloca [4096 x i8], align 16
  %7 = alloca i64, align 8
  %8 = alloca [16 x i32], align 16
  %9 = alloca i32, align 4
  %10 = alloca [4096 x i8], align 16
  %11 = alloca i64, align 8
  store i32 %0, i32* %2, align 4
  store i32 0, i32* %5, align 4
  store i64 0, i64* %7, align 8
  store i32 0, i32* %9, align 4
  store i64 0, i64* %11, align 8
  store i64 1, i64* %7, align 8
  store i64 1, i64* %11, align 8
  %12 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i64 0, i64 0
  store i8 -1, i8* %12, align 16
  %13 = load i32, i32* %2, align 4
  %14 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 0
  %15 = load i32, i32* %5, align 4
  %16 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i64 0, i64 0
  %17 = load i64, i64* %7, align 8
  %18 = getelementptr inbounds [16 x i32], [16 x i32]* %8, i64 0, i64 0
  %19 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %20 = call i64 @IOConnectCallMethod(i32 %13, i32 263, i32* %14, i32 %15, i8* %16, i64 %17, i32* %18, i32* %9, i8* %19, i64* %11)
  store i64 %20, i64* %3, align 8
  %21 = load i64, i64* %3, align 8
  %22 = load i64, i64* @KERN_SUCCESS, align 8
  %23 = icmp ne i64 %21, %22
  br i1 %23, label %24, label %27

24:                                               ; preds = %1
  %25 = load i64, i64* %3, align 8
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i64 %25)
  br label %29

27:                                               ; preds = %1
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0))
  br label %29

29:                                               ; preds = %27, %24
  ret i32 0
}

declare dso_local i64 @IOConnectCallMethod(i32, i32, i32*, i32, i8*, i64, i32*, i32*, i8*, i64*) #1

declare dso_local i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
