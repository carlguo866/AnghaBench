; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/macos/dos/extr_45647.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/macos/dos/extr_45647.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [17 x i8] c"IntelAccelerator\00", align 1
@gl_context = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [16 x i8] c"gl_context: %x\0A\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"shared: %x\0A\00", align 1
@KERN_SUCCESS = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [30 x i8] c"IOConnectAddClient error: %x\0A\00", align 1
@.str.4 = private unnamed_addr constant [31 x i8] c"added client to the shared UC\0A\00", align 1
@go = common dso_local global i32 0, align 4
@N_THREADS = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca [2 x i32], align 4
  %9 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %10 = call i32 @get_user_client(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 1)
  store i32 %10, i32* @gl_context, align 4
  %11 = load i32, i32* @gl_context, align 4
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i32 %11)
  %13 = call i32 @get_user_client(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 6)
  store i32 %13, i32* %6, align 4
  %14 = load i32, i32* %6, align 4
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32 %14)
  %16 = load i32, i32* @gl_context, align 4
  %17 = load i32, i32* %6, align 4
  %18 = call i64 @IOConnectAddClient(i32 %16, i32 %17)
  store i64 %18, i64* %7, align 8
  %19 = load i64, i64* %7, align 8
  %20 = load i64, i64* @KERN_SUCCESS, align 8
  %21 = icmp ne i64 %19, %20
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = load i64, i64* %7, align 8
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i64 %23)
  store i32 0, i32* %3, align 4
  br label %43

25:                                               ; preds = %2
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0))
  store i32 0, i32* %9, align 4
  br label %27

27:                                               ; preds = %36, %25
  %28 = load i32, i32* %9, align 4
  %29 = icmp slt i32 %28, 2
  br i1 %29, label %30, label %39

30:                                               ; preds = %27
  %31 = load i32, i32* %9, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i64 0, i64 %32
  %34 = load i32, i32* @go, align 4
  %35 = call i32 @pthread_create(i32* %33, i32* null, i32 %34, i32* null)
  br label %36

36:                                               ; preds = %30
  %37 = load i32, i32* %9, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %9, align 4
  br label %27

39:                                               ; preds = %27
  %40 = getelementptr inbounds [2 x i32], [2 x i32]* %8, i64 0, i64 0
  %41 = load i32, i32* %40, align 4
  %42 = call i32 @pthread_join(i32 %41, i32* null)
  store i32 0, i32* %3, align 4
  br label %43

43:                                               ; preds = %39, %22
  %44 = load i32, i32* %3, align 4
  ret i32 %44
}

declare dso_local i32 @get_user_client(i8*, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @IOConnectAddClient(i32, i32) #1

declare !callback !2 dso_local i32 @pthread_create(i32*, i32*, i32, i32*) #1

declare dso_local i32 @pthread_join(i32, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
!2 = !{!3}
!3 = !{i64 2, i64 3, i1 false}
