; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/macos/local/extr_44234.c_allocate_map_address.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/macos/local/extr_44234.c_allocate_map_address.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@VM_FLAGS_ANYWHERE = common dso_local global i32 0, align 4
@VM_FLAGS_FIXED = common dso_local global i32 0, align 4
@KERN_SUCCESS = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [59 x i8] c"Could not allocate virtual memory: mach_vm_allocate %d: %s\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (i8**, i64)* @allocate_map_address to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @allocate_map_address(i8** %0, i64 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  store i8** %0, i8*** %4, align 8
  store i64 %1, i64* %5, align 8
  %10 = load i8**, i8*** %4, align 8
  %11 = load i8*, i8** %10, align 8
  %12 = ptrtoint i8* %11 to i64
  store i64 %12, i64* %6, align 8
  %13 = load i64, i64* %6, align 8
  %14 = icmp eq i64 %13, 0
  %15 = zext i1 %14 to i32
  store i32 %15, i32* %7, align 4
  %16 = load i32, i32* %7, align 4
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = load i32, i32* @VM_FLAGS_ANYWHERE, align 4
  br label %22

20:                                               ; preds = %2
  %21 = load i32, i32* @VM_FLAGS_FIXED, align 4
  br label %22

22:                                               ; preds = %20, %18
  %23 = phi i32 [ %19, %18 ], [ %21, %20 ]
  store i32 %23, i32* %8, align 4
  %24 = call i32 (...) @mach_task_self()
  %25 = load i64, i64* %5, align 8
  %26 = load i32, i32* %8, align 4
  %27 = call i64 @mach_vm_allocate(i32 %24, i64* %6, i64 %25, i32 %26)
  store i64 %27, i64* %9, align 8
  %28 = load i64, i64* %9, align 8
  %29 = load i64, i64* @KERN_SUCCESS, align 8
  %30 = icmp ne i64 %28, %29
  br i1 %30, label %31, label %36

31:                                               ; preds = %22
  %32 = load i64, i64* %9, align 8
  %33 = load i64, i64* %9, align 8
  %34 = call i32 @mach_error_string(i64 %33)
  %35 = call i32 @ERROR(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i64 %32, i32 %34)
  store i32 0, i32* %3, align 4
  br label %44

36:                                               ; preds = %22
  %37 = load i32, i32* %7, align 4
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %36
  %40 = load i64, i64* %6, align 8
  %41 = inttoptr i64 %40 to i8*
  %42 = load i8**, i8*** %4, align 8
  store i8* %41, i8** %42, align 8
  br label %43

43:                                               ; preds = %39, %36
  store i32 1, i32* %3, align 4
  br label %44

44:                                               ; preds = %43, %31
  %45 = load i32, i32* %3, align 4
  ret i32 %45
}

declare dso_local i64 @mach_vm_allocate(i32, i64*, i64, i32) #1

declare dso_local i32 @mach_task_self(...) #1

declare dso_local i32 @ERROR(i8*, i64, i32) #1

declare dso_local i32 @mach_error_string(i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
