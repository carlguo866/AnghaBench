; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/macos/local/extr_40956.c_leak_n_refs.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/macos/local/extr_40956.c_leak_n_refs.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@spinners = common dso_local global i32* null, align 8
@stdout = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [28 x i8] c"\0Doverflowing [%c] (%3.3f%%)\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"\0Doverflowed                           \0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @leak_n_refs(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca float, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %8

8:                                                ; preds = %42, %2
  %9 = load i32, i32* %6, align 4
  %10 = load i32, i32* %4, align 4
  %11 = icmp slt i32 %9, %10
  br i1 %11, label %12, label %45

12:                                               ; preds = %8
  %13 = load i32, i32* %3, align 4
  %14 = call i32 @leak_one_ref(i32 %13)
  %15 = load i32, i32* %6, align 4
  %16 = srem i32 %15, 262144
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %41

18:                                               ; preds = %12
  %19 = load i32, i32* %6, align 4
  %20 = sitofp i32 %19 to float
  %21 = load i32, i32* %4, align 4
  %22 = sitofp i32 %21 to float
  %23 = fdiv float %20, %22
  store float %23, float* %7, align 4
  %24 = load i32, i32* %5, align 4
  %25 = add nsw i32 %24, 1
  %26 = load i32*, i32** @spinners, align 8
  %27 = call i32 @strlen(i32* %26)
  %28 = srem i32 %25, %27
  store i32 %28, i32* %5, align 4
  %29 = load i32, i32* @stdout, align 4
  %30 = load i32*, i32** @spinners, align 8
  %31 = load i32, i32* %5, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i32, i32* %30, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = load float, float* %7, align 4
  %36 = fmul float %35, 1.000000e+02
  %37 = fpext float %36 to double
  %38 = call i32 (i32, i8*, ...) @fprintf(i32 %29, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 %34, double %37)
  %39 = load i32, i32* @stdout, align 4
  %40 = call i32 @fflush(i32 %39)
  br label %41

41:                                               ; preds = %18, %12
  br label %42

42:                                               ; preds = %41
  %43 = load i32, i32* %6, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %6, align 4
  br label %8

45:                                               ; preds = %8
  %46 = load i32, i32* @stdout, align 4
  %47 = call i32 (i32, i8*, ...) @fprintf(i32 %46, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0))
  %48 = load i32, i32* @stdout, align 4
  %49 = call i32 @fflush(i32 %48)
  ret void
}

declare dso_local i32 @leak_one_ref(i32) #1

declare dso_local i32 @strlen(i32*) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i32 @fflush(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
