; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_33877.c_novanet_get_domain.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_33877.c_novanet_get_domain.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@NOVANET_HDR_SZ = common dso_local global i32 0, align 4
@NOVANET_PKT_SZ = common dso_local global i32 0, align 4
@NOVANET_TCP_PORT = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [36 x i8] c"novanet_get_domain: sockami failed\0A\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [22 x i8] c"* connected to %s:%d\0A\00", align 1
@.str.2 = private unnamed_addr constant [35 x i8] c"** sending getdomain_buf packet...\00", align 1
@getdomain_buf = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [51 x i8] c"novanet_get_domain: sock_send returned %d (!= %d)\0A\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"done\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"** reading first reply...\00", align 1
@.str.6 = private unnamed_addr constant [51 x i8] c"novanet_get_domain: sock_recv returned %d (!= %d)\0A\00", align 1
@NOVANET_DOMAIN_SZ = common dso_local global i8* null, align 8
@.str.7 = private unnamed_addr constant [32 x i8] c"** remote domain address: %.*s\0A\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"** sending ack packet...\00", align 1
@ack_buf = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [27 x i8] c"** reading second reply...\00", align 1
@.str.10 = private unnamed_addr constant [52 x i8] c"novanet_get_domain: remaining length invalid (<%d)\0A\00", align 1
@.str.11 = private unnamed_addr constant [33 x i8] c"** reading %d-remaining bytes...\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"** sending hup packet...\00", align 1
@hup_buf = common dso_local global i32 0, align 4
@.str.13 = private unnamed_addr constant [52 x i8] c"novanet_own_process: sock_send returned %d (!= %d)\0A\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"done\0A\0A\00", align 1
@USLEEP_TIME = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i8*, i8*)* @novanet_get_domain to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @novanet_get_domain(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %12 = load i32, i32* @NOVANET_HDR_SZ, align 4
  %13 = zext i32 %12 to i64
  %14 = call i8* @llvm.stacksave()
  store i8* %14, i8** %5, align 8
  %15 = alloca i8, i64 %13, align 16
  store i64 %13, i64* %6, align 8
  %16 = load i32, i32* @NOVANET_PKT_SZ, align 4
  %17 = zext i32 %16 to i64
  %18 = alloca i8, i64 %17, align 16
  store i64 %17, i64* %7, align 8
  %19 = load i8*, i8** %3, align 8
  %20 = load i32, i32* @NOVANET_TCP_PORT, align 4
  %21 = call i32 @sockami(i8* %19, i32 %20)
  store i32 %21, i32* %9, align 4
  %22 = load i32, i32* %9, align 4
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %24, label %29

24:                                               ; preds = %2
  %25 = load i32, i32* @stderr, align 4
  %26 = call i32 (i32, i8*, ...) @fprintf(i32 %25, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0))
  %27 = load i32, i32* @EXIT_FAILURE, align 4
  %28 = call i32 @exit(i32 %27) #4
  unreachable

29:                                               ; preds = %2
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* @NOVANET_TCP_PORT, align 4
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8* %30, i32 %31)
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0))
  %34 = load i32, i32* %9, align 4
  %35 = load i32, i32* @getdomain_buf, align 4
  %36 = call i32 @sock_send(i32 %34, i32 %35, i32 3)
  store i32 %36, i32* %10, align 4
  %37 = load i32, i32* @NOVANET_PKT_SZ, align 4
  %38 = icmp ne i32 %36, %37
  br i1 %38, label %39, label %46

39:                                               ; preds = %29
  %40 = load i32, i32* @stderr, align 4
  %41 = load i32, i32* %10, align 4
  %42 = load i32, i32* @NOVANET_PKT_SZ, align 4
  %43 = call i32 (i32, i8*, ...) @fprintf(i32 %40, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3, i64 0, i64 0), i32 %41, i32 %42)
  %44 = load i32, i32* @EXIT_FAILURE, align 4
  %45 = call i32 @exit(i32 %44) #4
  unreachable

46:                                               ; preds = %29
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0))
  %49 = load i32, i32* %9, align 4
  %50 = trunc i64 %17 to i32
  %51 = call i32 @sock_recv(i32 %49, i8* %18, i32 %50)
  store i32 %51, i32* %10, align 4
  %52 = load i32, i32* @NOVANET_PKT_SZ, align 4
  %53 = icmp ne i32 %51, %52
  br i1 %53, label %54, label %61

54:                                               ; preds = %46
  %55 = load i32, i32* @stderr, align 4
  %56 = load i32, i32* %10, align 4
  %57 = load i32, i32* @NOVANET_PKT_SZ, align 4
  %58 = call i32 (i32, i8*, ...) @fprintf(i32 %55, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6, i64 0, i64 0), i32 %56, i32 %57)
  %59 = load i32, i32* @EXIT_FAILURE, align 4
  %60 = call i32 @exit(i32 %59) #4
  unreachable

61:                                               ; preds = %46
  %62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %63 = load i8*, i8** %4, align 8
  %64 = getelementptr inbounds i8, i8* %18, i64 84
  %65 = load i8*, i8** @NOVANET_DOMAIN_SZ, align 8
  %66 = call i32 @memcpy(i8* %63, i8* %64, i8* %65)
  %67 = load i8*, i8** @NOVANET_DOMAIN_SZ, align 8
  %68 = load i8*, i8** %4, align 8
  %69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i8* %67, i8* %68)
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0))
  %71 = load i32, i32* %9, align 4
  %72 = load i32, i32* @ack_buf, align 4
  %73 = call i32 @sock_send(i32 %71, i32 %72, i32 3)
  store i32 %73, i32* %10, align 4
  %74 = load i32, i32* @NOVANET_HDR_SZ, align 4
  %75 = add nsw i32 %74, 4
  %76 = icmp ne i32 %73, %75
  br i1 %76, label %77, label %85

77:                                               ; preds = %61
  %78 = load i32, i32* @stderr, align 4
  %79 = load i32, i32* %10, align 4
  %80 = load i32, i32* @NOVANET_HDR_SZ, align 4
  %81 = add nsw i32 %80, 4
  %82 = call i32 (i32, i8*, ...) @fprintf(i32 %78, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3, i64 0, i64 0), i32 %79, i32 %81)
  %83 = load i32, i32* @EXIT_FAILURE, align 4
  %84 = call i32 @exit(i32 %83) #4
  unreachable

85:                                               ; preds = %61
  %86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %87 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0))
  %88 = load i32, i32* %9, align 4
  %89 = trunc i64 %13 to i32
  %90 = call i32 @sock_recv(i32 %88, i8* %15, i32 %89)
  store i32 %90, i32* %10, align 4
  %91 = load i32, i32* @NOVANET_HDR_SZ, align 4
  %92 = icmp ne i32 %90, %91
  br i1 %92, label %93, label %100

93:                                               ; preds = %85
  %94 = load i32, i32* @stderr, align 4
  %95 = load i32, i32* %10, align 4
  %96 = load i32, i32* @NOVANET_HDR_SZ, align 4
  %97 = call i32 (i32, i8*, ...) @fprintf(i32 %94, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6, i64 0, i64 0), i32 %95, i32 %96)
  %98 = load i32, i32* @EXIT_FAILURE, align 4
  %99 = call i32 @exit(i32 %98) #4
  unreachable

100:                                              ; preds = %85
  %101 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %102 = getelementptr inbounds i8, i8* %15, i64 12
  %103 = bitcast i8* %102 to i32*
  %104 = load i32, i32* %103, align 4
  store i32 %104, i32* %11, align 4
  %105 = load i32, i32* %11, align 4
  %106 = load i32, i32* @NOVANET_HDR_SZ, align 4
  %107 = icmp slt i32 %105, %106
  br i1 %107, label %108, label %114

108:                                              ; preds = %100
  %109 = load i32, i32* @stderr, align 4
  %110 = load i32, i32* @NOVANET_HDR_SZ, align 4
  %111 = call i32 (i32, i8*, ...) @fprintf(i32 %109, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.10, i64 0, i64 0), i32 %110)
  %112 = load i32, i32* @EXIT_FAILURE, align 4
  %113 = call i32 @exit(i32 %112) #4
  unreachable

114:                                              ; preds = %100
  %115 = load i32, i32* @NOVANET_HDR_SZ, align 4
  %116 = load i32, i32* %11, align 4
  %117 = sub nsw i32 %116, %115
  store i32 %117, i32* %11, align 4
  %118 = load i32, i32* %11, align 4
  %119 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0), i32 %118)
  %120 = load i32, i32* %11, align 4
  %121 = sext i32 %120 to i64
  %122 = mul i64 %121, 1
  %123 = trunc i64 %122 to i32
  %124 = call i8* @malloc(i32 %123)
  store i8* %124, i8** %8, align 8
  %125 = load i32, i32* %9, align 4
  %126 = load i8*, i8** %8, align 8
  %127 = load i32, i32* %11, align 4
  %128 = call i32 @sock_recv(i32 %125, i8* %126, i32 %127)
  store i32 %128, i32* %10, align 4
  %129 = load i32, i32* %11, align 4
  %130 = icmp ne i32 %128, %129
  br i1 %130, label %131, label %138

131:                                              ; preds = %114
  %132 = load i32, i32* @stderr, align 4
  %133 = load i32, i32* %10, align 4
  %134 = load i32, i32* %11, align 4
  %135 = call i32 (i32, i8*, ...) @fprintf(i32 %132, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.6, i64 0, i64 0), i32 %133, i32 %134)
  %136 = load i32, i32* @EXIT_FAILURE, align 4
  %137 = call i32 @exit(i32 %136) #4
  unreachable

138:                                              ; preds = %114
  %139 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %140 = load i8*, i8** %8, align 8
  %141 = call i32 @free(i8* %140)
  %142 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0))
  %143 = load i32, i32* %9, align 4
  %144 = load i32, i32* @hup_buf, align 4
  %145 = call i32 @sock_send(i32 %143, i32 %144, i32 3)
  store i32 %145, i32* %10, align 4
  %146 = load i32, i32* @NOVANET_HDR_SZ, align 4
  %147 = icmp ne i32 %145, %146
  br i1 %147, label %148, label %155

148:                                              ; preds = %138
  %149 = load i32, i32* @stderr, align 4
  %150 = load i32, i32* %10, align 4
  %151 = load i32, i32* @NOVANET_HDR_SZ, align 4
  %152 = call i32 (i32, i8*, ...) @fprintf(i32 %149, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0), i32 %150, i32 %151)
  %153 = load i32, i32* @EXIT_FAILURE, align 4
  %154 = call i32 @exit(i32 %153) #4
  unreachable

155:                                              ; preds = %138
  %156 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0))
  %157 = load i32, i32* @USLEEP_TIME, align 4
  %158 = call i32 @usleep(i32 %157)
  %159 = load i32, i32* %9, align 4
  %160 = call i32 @close(i32 %159)
  %161 = load i8*, i8** %5, align 8
  call void @llvm.stackrestore(i8* %161)
  ret void
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @sockami(i8*, i32) #2

declare dso_local i32 @fprintf(i32, i8*, ...) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i32 @sock_send(i32, i32, i32) #2

declare dso_local i32 @sock_recv(i32, i8*, i32) #2

declare dso_local i32 @memcpy(i8*, i8*, i8*) #2

declare dso_local i8* @malloc(i32) #2

declare dso_local i32 @free(i8*) #2

declare dso_local i32 @usleep(i32) #2

declare dso_local i32 @close(i32) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
