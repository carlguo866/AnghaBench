; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_300.c_write_sock.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_300.c_write_sock.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timeval = type { i64, i8* }

@sock = common dso_local global i64 0, align 8
@timeout = common dso_local global i8* null, align 8
@ERR_WRITESOCK = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @write_sock(i8* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.timeval, align 8
  %8 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %9 = load i32, i32* %5, align 4
  %10 = icmp sle i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %2
  %12 = load i32, i32* %5, align 4
  store i32 %12, i32* %3, align 4
  br label %45

13:                                               ; preds = %2
  %14 = call i32 @FD_ZERO(i32* %6)
  %15 = load i64, i64* @sock, align 8
  %16 = call i32 @FD_SET(i64 %15, i32* %6)
  %17 = call i32 @bzero(%struct.timeval* %7, i32 16)
  %18 = load i8*, i8** @timeout, align 8
  %19 = getelementptr inbounds %struct.timeval, %struct.timeval* %7, i32 0, i32 1
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds %struct.timeval, %struct.timeval* %7, i32 0, i32 0
  store i64 0, i64* %20, align 8
  br label %21

21:                                               ; preds = %26, %13
  %22 = load i64, i64* @sock, align 8
  %23 = add nsw i64 %22, 1
  %24 = call i64 @select(i64 %23, i32* null, i32* %6, i32* null, %struct.timeval* %7)
  %25 = icmp sle i64 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %21
  %27 = call i32 @FD_ZERO(i32* %6)
  %28 = load i64, i64* @sock, align 8
  %29 = call i32 @FD_SET(i64 %28, i32* %6)
  %30 = load i8*, i8** @timeout, align 8
  %31 = getelementptr inbounds %struct.timeval, %struct.timeval* %7, i32 0, i32 1
  store i8* %30, i8** %31, align 8
  %32 = getelementptr inbounds %struct.timeval, %struct.timeval* %7, i32 0, i32 0
  store i64 0, i64* %32, align 8
  br label %21

33:                                               ; preds = %21
  %34 = load i64, i64* @sock, align 8
  %35 = load i8*, i8** %4, align 8
  %36 = load i32, i32* %5, align 4
  %37 = call i32 @write(i64 %34, i8* %35, i32 %36)
  store i32 %37, i32* %8, align 4
  %38 = load i32, i32* %5, align 4
  %39 = icmp ne i32 %37, %38
  br i1 %39, label %40, label %43

40:                                               ; preds = %33
  %41 = load i32, i32* @ERR_WRITESOCK, align 4
  %42 = call i32 @QUIT(i32 %41)
  br label %43

43:                                               ; preds = %40, %33
  %44 = load i32, i32* %8, align 4
  store i32 %44, i32* %3, align 4
  br label %45

45:                                               ; preds = %43, %11
  %46 = load i32, i32* %3, align 4
  ret i32 %46
}

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i64, i32*) #1

declare dso_local i32 @bzero(%struct.timeval*, i32) #1

declare dso_local i64 @select(i64, i32*, i32*, i32*, %struct.timeval*) #1

declare dso_local i32 @write(i64, i8*, i32) #1

declare dso_local i32 @QUIT(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
