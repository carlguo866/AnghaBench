; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_6130.c_usage.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_6130.c_usage.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [1533 x i8] c"Usage: %s <ip-querier> <ip-resolver> <ip-authoritative> <port-resolver> <subhost> <domain> <any-ip> <attempts> <repl-per-attempt>\0A  <ip-querier>       Source IP used when sending queries for random hostnames\0A                     (typically your IP)\0A  <ip-resolver>      Target DNS resolver to attack\0A  <ip-authoritative> One of the authoritative DNS servers for <domain>\0A  <port-resolver>    Source port used by the resolver when forwarding queries\0A  <subhost>          Poison the cache with the A record <subhost>.<domain>\0A  <domain>           Domain name, see <subhost>.\0A  <any-ip>           IP of your choice to be associated to <subhost>.<domain>\0A  <attempts>         Number of poisoning attemps, more attempts increase the\0A                     chance of successful poisoning, but also the attack time\0A  <repl-per-attempt> Number of spoofed replies to send per attempt, more replies\0A                     increase the chance of successful poisoning but, but also\0A                     the rate of packet loss\0AExample:\0A  $ %s q.q.q.q r.r.r.r a.a.a.a 1234 pwned example.com. 1.1.1.1 8192 16\0AThis should cause a pwned.example.com A record resolving to 1.1.1.1 to appear\0Ain r.r.r.r's cache. The chance of successfully poisoning the resolver with\0Athis example (8192 attempts and 16 replies/attempt) is 86%%\0A(1-(1-16/65536)**8192). This example also requires a bandwidth of about\0A2.6 Mbit/s (16 replies/attempt * ~200 bytes/reply * 100 attempts/sec *\0A8 bits/byte) and takes about 80 secs to complete (8192 attempts /\0A100 attempts/sec).\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @usage(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i32, i32* @stderr, align 4
  %4 = load i8*, i8** %2, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = call i32 @fprintf(i32 %3, i8* getelementptr inbounds ([1533 x i8], [1533 x i8]* @.str, i64 0, i64 0), i8* %4, i8* %5)
  ret void
}

declare dso_local i32 @fprintf(i32, i8*, i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
