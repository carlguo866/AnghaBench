; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_300.c_zgets.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_300.c_zgets.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@zgets.buf = internal global [32768 x i8] zeroinitializer, align 16

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @zgets() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i32, align 4
  store i8* getelementptr inbounds ([32768 x i8], [32768 x i8]* @zgets.buf, i64 0, i64 0), i8** %1, align 8
  br label %3

3:                                                ; preds = %0, %18
  %4 = call i32 (...) @zgetch()
  store i32 %4, i32* %2, align 4
  %5 = load i32, i32* %2, align 4
  %6 = icmp eq i32 %5, 10
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  br label %19

8:                                                ; preds = %3
  %9 = load i32, i32* %2, align 4
  %10 = trunc i32 %9 to i8
  %11 = load i8*, i8** %1, align 8
  %12 = getelementptr inbounds i8, i8* %11, i32 1
  store i8* %12, i8** %1, align 8
  store i8 %10, i8* %11, align 1
  %13 = load i8*, i8** %1, align 8
  %14 = icmp ugt i8* %13, getelementptr inbounds (i8, i8* getelementptr inbounds ([32768 x i8], [32768 x i8]* @zgets.buf, i64 0, i64 0), i64 32768)
  br i1 %14, label %15, label %18

15:                                               ; preds = %8
  %16 = load i8*, i8** %1, align 8
  %17 = getelementptr inbounds i8, i8* %16, i32 -1
  store i8* %17, i8** %1, align 8
  br label %19

18:                                               ; preds = %8
  br label %3

19:                                               ; preds = %15, %7
  %20 = load i8*, i8** %1, align 8
  store i8 0, i8* %20, align 1
  ret i8* getelementptr inbounds ([32768 x i8], [32768 x i8]* @zgets.buf, i64 0, i64 0)
}

declare dso_local i32 @zgetch(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
