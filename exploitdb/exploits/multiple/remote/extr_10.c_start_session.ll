; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_10.c_start_session.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_10.c_start_session.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i32, i32, i8* }
%struct.TYPE_3__ = type { i32*, i32, i32, i32, i32, i32, i32, i32 }

@__const.start_session.session_data1 = private unnamed_addr constant [15 x i8] c"\00\FF\00\00\00\00 \02\00\01\00\00\00\00\00", align 1
@__const.start_session.session_data2 = private unnamed_addr constant [29 x i8] c"\00\00\00\00\\\\ipc$%nobody\00\00\00\00\00\00\00IPC$\00", align 16
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [34 x i8] c"+ Recieved a non session message\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @start_session(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [1000 x i8], align 16
  %5 = alloca [4096 x i8], align 16
  %6 = alloca [15 x i8], align 1
  %7 = alloca [29 x i8], align 16
  %8 = alloca %struct.TYPE_4__*, align 8
  %9 = alloca %struct.TYPE_3__*, align 8
  store i32 %0, i32* %3, align 4
  %10 = bitcast [15 x i8]* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %10, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @__const.start_session.session_data1, i32 0, i32 0), i64 15, i1 false)
  %11 = bitcast [29 x i8]* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %11, i8* align 16 getelementptr inbounds ([29 x i8], [29 x i8]* @__const.start_session.session_data2, i32 0, i32 0), i64 29, i1 false)
  %12 = getelementptr inbounds [1000 x i8], [1000 x i8]* %4, i64 0, i64 0
  %13 = call i32 @memset(i8* %12, i32 0, i32 1000)
  %14 = getelementptr inbounds [1000 x i8], [1000 x i8]* %4, i64 0, i64 0
  %15 = bitcast i8* %14 to %struct.TYPE_4__*
  store %struct.TYPE_4__* %15, %struct.TYPE_4__** %8, align 8
  %16 = getelementptr inbounds [1000 x i8], [1000 x i8]* %4, i64 0, i64 0
  %17 = getelementptr inbounds i8, i8* %16, i64 16
  %18 = bitcast i8* %17 to %struct.TYPE_3__*
  store %struct.TYPE_3__* %18, %struct.TYPE_3__** %9, align 8
  %19 = load %struct.TYPE_4__*, %struct.TYPE_4__** %8, align 8
  %20 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %19, i32 0, i32 0
  store i32 0, i32* %20, align 8
  %21 = load %struct.TYPE_4__*, %struct.TYPE_4__** %8, align 8
  %22 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %21, i32 0, i32 1
  store i32 0, i32* %22, align 4
  %23 = call i8* @htons(i32 46)
  %24 = load %struct.TYPE_4__*, %struct.TYPE_4__** %8, align 8
  %25 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %24, i32 0, i32 2
  store i8* %23, i8** %25, align 8
  %26 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %27 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %26, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 0
  store i32 255, i32* %29, align 4
  %30 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %31 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %30, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 1
  store i32 83, i32* %33, align 4
  %34 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %35 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = getelementptr inbounds i32, i32* %36, i64 2
  store i32 77, i32* %37, align 4
  %38 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %39 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %38, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = getelementptr inbounds i32, i32* %40, i64 3
  store i32 66, i32* %41, align 4
  %42 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %43 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %42, i32 0, i32 1
  store i32 115, i32* %43, align 8
  %44 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %45 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %44, i32 0, i32 2
  store i32 8, i32* %45, align 4
  %46 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %47 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %46, i32 0, i32 3
  store i32 1, i32* %47, align 8
  %48 = call i32 (...) @getpid()
  %49 = and i32 %48, 65535
  %50 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %51 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %50, i32 0, i32 4
  store i32 %49, i32* %51, align 4
  %52 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %53 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %52, i32 0, i32 5
  store i32 100, i32* %53, align 8
  %54 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %55 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %54, i32 0, i32 6
  store i32 1, i32* %55, align 4
  %56 = getelementptr inbounds [1000 x i8], [1000 x i8]* %4, i64 0, i64 0
  %57 = getelementptr inbounds i8, i8* %56, i64 16
  %58 = getelementptr inbounds i8, i8* %57, i64 40
  %59 = getelementptr inbounds [15 x i8], [15 x i8]* %6, i64 0, i64 0
  %60 = call i32 @memcpy(i8* %58, i8* %59, i32 14)
  %61 = load i32, i32* %3, align 4
  %62 = call i32 @write_timer(i32 %61, i32 3)
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %71

64:                                               ; preds = %1
  %65 = load i32, i32* %3, align 4
  %66 = getelementptr inbounds [1000 x i8], [1000 x i8]* %4, i64 0, i64 0
  %67 = call i64 @send(i32 %65, i8* %66, i32 50, i32 0)
  %68 = icmp slt i64 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %64
  store i32 -1, i32* %2, align 4
  br label %178

70:                                               ; preds = %64
  br label %71

71:                                               ; preds = %70, %1
  %72 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i64 0, i64 0
  %73 = call i32 @memset(i8* %72, i32 0, i32 4096)
  %74 = load i32, i32* %3, align 4
  %75 = call i32 @read_timer(i32 %74, i32 3)
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %84

77:                                               ; preds = %71
  %78 = load i32, i32* %3, align 4
  %79 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i64 0, i64 0
  %80 = call i64 @read(i32 %78, i8* %79, i32 4095)
  %81 = icmp slt i64 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %77
  store i32 -1, i32* %2, align 4
  br label %178

83:                                               ; preds = %77
  br label %84

84:                                               ; preds = %83, %71
  %85 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i64 0, i64 0
  %86 = bitcast i8* %85 to %struct.TYPE_4__*
  store %struct.TYPE_4__* %86, %struct.TYPE_4__** %8, align 8
  %87 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i64 0, i64 0
  %88 = getelementptr inbounds i8, i8* %87, i64 16
  %89 = bitcast i8* %88 to %struct.TYPE_3__*
  store %struct.TYPE_3__* %89, %struct.TYPE_3__** %9, align 8
  %90 = load %struct.TYPE_4__*, %struct.TYPE_4__** %8, align 8
  %91 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %90, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %84
  %95 = load i32, i32* @stderr, align 4
  %96 = call i32 @fprintf(i32 %95, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0))
  br label %97

97:                                               ; preds = %94, %84
  %98 = getelementptr inbounds [1000 x i8], [1000 x i8]* %4, i64 0, i64 0
  %99 = bitcast i8* %98 to %struct.TYPE_4__*
  store %struct.TYPE_4__* %99, %struct.TYPE_4__** %8, align 8
  %100 = getelementptr inbounds [1000 x i8], [1000 x i8]* %4, i64 0, i64 0
  %101 = getelementptr inbounds i8, i8* %100, i64 16
  %102 = bitcast i8* %101 to %struct.TYPE_3__*
  store %struct.TYPE_3__* %102, %struct.TYPE_3__** %9, align 8
  %103 = getelementptr inbounds [1000 x i8], [1000 x i8]* %4, i64 0, i64 0
  %104 = call i32 @memset(i8* %103, i32 0, i32 1000)
  %105 = load %struct.TYPE_4__*, %struct.TYPE_4__** %8, align 8
  %106 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %105, i32 0, i32 0
  store i32 0, i32* %106, align 8
  %107 = load %struct.TYPE_4__*, %struct.TYPE_4__** %8, align 8
  %108 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %107, i32 0, i32 1
  store i32 0, i32* %108, align 4
  %109 = call i8* @htons(i32 60)
  %110 = load %struct.TYPE_4__*, %struct.TYPE_4__** %8, align 8
  %111 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %110, i32 0, i32 2
  store i8* %109, i8** %111, align 8
  %112 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %113 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %112, i32 0, i32 0
  %114 = load i32*, i32** %113, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 0
  store i32 255, i32* %115, align 4
  %116 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %117 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %116, i32 0, i32 0
  %118 = load i32*, i32** %117, align 8
  %119 = getelementptr inbounds i32, i32* %118, i64 1
  store i32 83, i32* %119, align 4
  %120 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %121 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %120, i32 0, i32 0
  %122 = load i32*, i32** %121, align 8
  %123 = getelementptr inbounds i32, i32* %122, i64 2
  store i32 77, i32* %123, align 4
  %124 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %125 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %124, i32 0, i32 0
  %126 = load i32*, i32** %125, align 8
  %127 = getelementptr inbounds i32, i32* %126, i64 3
  store i32 66, i32* %127, align 4
  %128 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %129 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %128, i32 0, i32 1
  store i32 112, i32* %129, align 8
  %130 = call i32 (...) @getpid()
  %131 = and i32 %130, 65535
  %132 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %133 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %132, i32 0, i32 4
  store i32 %131, i32* %133, align 4
  %134 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %135 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %134, i32 0, i32 7
  store i32 0, i32* %135, align 8
  %136 = load %struct.TYPE_3__*, %struct.TYPE_3__** %9, align 8
  %137 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %136, i32 0, i32 5
  store i32 100, i32* %137, align 8
  %138 = getelementptr inbounds [1000 x i8], [1000 x i8]* %4, i64 0, i64 0
  %139 = getelementptr inbounds i8, i8* %138, i64 16
  %140 = getelementptr inbounds i8, i8* %139, i64 40
  %141 = getelementptr inbounds [29 x i8], [29 x i8]* %7, i64 0, i64 0
  %142 = call i32 @memcpy(i8* %140, i8* %141, i32 28)
  %143 = load i32, i32* %3, align 4
  %144 = call i32 @write_timer(i32 %143, i32 3)
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %146, label %153

146:                                              ; preds = %97
  %147 = load i32, i32* %3, align 4
  %148 = getelementptr inbounds [1000 x i8], [1000 x i8]* %4, i64 0, i64 0
  %149 = call i64 @send(i32 %147, i8* %148, i32 64, i32 0)
  %150 = icmp slt i64 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %146
  store i32 -1, i32* %2, align 4
  br label %178

152:                                              ; preds = %146
  br label %153

153:                                              ; preds = %152, %97
  %154 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i64 0, i64 0
  %155 = call i32 @memset(i8* %154, i32 0, i32 4096)
  %156 = load i32, i32* %3, align 4
  %157 = call i32 @read_timer(i32 %156, i32 3)
  %158 = icmp eq i32 %157, 1
  br i1 %158, label %159, label %166

159:                                              ; preds = %153
  %160 = load i32, i32* %3, align 4
  %161 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i64 0, i64 0
  %162 = call i64 @read(i32 %160, i8* %161, i32 4095)
  %163 = icmp slt i64 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %159
  store i32 -1, i32* %2, align 4
  br label %178

165:                                              ; preds = %159
  br label %166

166:                                              ; preds = %165, %153
  %167 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i64 0, i64 0
  %168 = bitcast i8* %167 to %struct.TYPE_4__*
  store %struct.TYPE_4__* %168, %struct.TYPE_4__** %8, align 8
  %169 = getelementptr inbounds [4096 x i8], [4096 x i8]* %5, i64 0, i64 0
  %170 = getelementptr inbounds i8, i8* %169, i64 16
  %171 = bitcast i8* %170 to %struct.TYPE_3__*
  store %struct.TYPE_3__* %171, %struct.TYPE_3__** %9, align 8
  %172 = load %struct.TYPE_4__*, %struct.TYPE_4__** %8, align 8
  %173 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %172, i32 0, i32 0
  %174 = load i32, i32* %173, align 8
  %175 = icmp ne i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %166
  store i32 -1, i32* %2, align 4
  br label %178

177:                                              ; preds = %166
  store i32 0, i32* %2, align 4
  br label %178

178:                                              ; preds = %177, %176, %164, %151, %82, %69
  %179 = load i32, i32* %2, align 4
  ret i32 %179
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i8* @htons(i32) #2

declare dso_local i32 @getpid(...) #2

declare dso_local i32 @memcpy(i8*, i8*, i32) #2

declare dso_local i32 @write_timer(i32, i32) #2

declare dso_local i64 @send(i32, i8*, i32, i32) #2

declare dso_local i32 @read_timer(i32, i32) #2

declare dso_local i64 @read(i32, i8*, i32) #2

declare dso_local i32 @fprintf(i32, i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
