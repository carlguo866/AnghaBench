; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_805.c_spy_attr_options.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_805.c_spy_attr_options.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_6__ = type { i32* }
%struct.TYPE_5__ = type { i8* }
%struct.timeval = type { i64, i32 }
%struct.sockaddr_in = type { %struct.TYPE_4__, i32, i32, i32 }
%struct.TYPE_4__ = type { i32 }
%struct.sockaddr = type { i32 }

@REQUESTSIZE = common dso_local global i32 0, align 4
@TIMEOUT = common dso_local global i32 0, align 4
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@IPPROTO_TCP = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@SOL_SOCKET = common dso_local global i32 0, align 4
@SO_REUSEADDR = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [11 x i8] c"setsockopt\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [32 x i8] c"[-] Can not Connect to server!\0A\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"send\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"select read socket\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"Cannot receive response\00", align 1
@MSG_DONTWAIT = common dso_local global i32 0, align 4
@stdin = common dso_local global i32 0, align 4
@MISSED = common dso_local global %struct.TYPE_6__* null, align 8
@.str.6 = private unnamed_addr constant [15 x i8] c"Options %s =%c\00", align 1
@TRASH = common dso_local global %struct.TYPE_5__* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @spy_attr_options(i8* %0, i16 zeroext %1, i8* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i16, align 2
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca %struct.timeval, align 8
  %14 = alloca %struct.sockaddr_in, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca [6900 x i8], align 16
  %19 = alloca [100 x i8], align 16
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i16 %1, i16* %5, align 2
  store i8* %2, i8** %6, align 8
  store i32 0, i32* %9, align 4
  %22 = load i32, i32* @REQUESTSIZE, align 4
  %23 = zext i32 %22 to i64
  %24 = call i8* @llvm.stacksave()
  store i8* %24, i8** %10, align 8
  %25 = alloca i8, i64 %23, align 16
  store i64 %23, i64* %11, align 8
  store i32 0, i32* %16, align 4
  store i32 0, i32* %17, align 4
  %26 = getelementptr inbounds [6900 x i8], [6900 x i8]* %18, i64 0, i64 0
  %27 = call i32 @bzero(i8* %26, i32 6900)
  %28 = getelementptr inbounds [100 x i8], [100 x i8]* %19, i64 0, i64 0
  %29 = call i32 @bzero(i8* %28, i32 100)
  %30 = load i8*, i8** %4, align 8
  %31 = load i16, i16* %5, align 2
  %32 = load i8*, i8** %6, align 8
  %33 = call i32 @make_spy_header(i8* %30, i16 zeroext %31, i8* %25, i8* %32)
  %34 = load i32, i32* @TIMEOUT, align 4
  %35 = getelementptr inbounds %struct.timeval, %struct.timeval* %13, i32 0, i32 1
  store i32 %34, i32* %35, align 8
  %36 = getelementptr inbounds %struct.timeval, %struct.timeval* %13, i32 0, i32 0
  store i64 0, i64* %36, align 8
  %37 = load i32, i32* @AF_INET, align 4
  %38 = load i32, i32* @SOCK_STREAM, align 4
  %39 = load i32, i32* @IPPROTO_TCP, align 4
  %40 = call i32 @socket(i32 %37, i32 %38, i32 %39)
  store i32 %40, i32* %7, align 4
  %41 = load i32, i32* %7, align 4
  %42 = icmp slt i32 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %3
  %44 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0))
  %45 = call i32 @exit(i32 1) #4
  unreachable

46:                                               ; preds = %3
  %47 = load i32, i32* %7, align 4
  %48 = load i32, i32* @SOL_SOCKET, align 4
  %49 = load i32, i32* @SO_REUSEADDR, align 4
  %50 = bitcast i32* %9 to i8*
  %51 = call i64 @setsockopt(i32 %47, i32 %48, i32 %49, i8* %50, i32 4)
  %52 = icmp ne i64 %51, 0
  br i1 %52, label %53, label %58

53:                                               ; preds = %46
  %54 = call i32 @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0))
  %55 = load i32, i32* %7, align 4
  %56 = call i32 @close(i32 %55)
  %57 = call i32 @exit(i32 1) #4
  unreachable

58:                                               ; preds = %46
  %59 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 3
  %60 = call i32 @memset(i32* %59, i8 signext 0, i32 8)
  %61 = load i32, i32* @AF_INET, align 4
  %62 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 2
  store i32 %61, i32* %62, align 4
  %63 = load i16, i16* %5, align 2
  %64 = call i32 @htons(i16 zeroext %63)
  %65 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 1
  store i32 %64, i32* %65, align 4
  %66 = load i8*, i8** %4, align 8
  %67 = call i32 @get_host_ip(i8* %66)
  %68 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 0
  %69 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %68, i32 0, i32 0
  store i32 %67, i32* %69, align 4
  %70 = load i32, i32* %7, align 4
  %71 = bitcast %struct.sockaddr_in* %14 to %struct.sockaddr*
  %72 = call i64 @connect(i32 %70, %struct.sockaddr* %71, i32 16)
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %58
  %75 = load i32, i32* @stderr, align 4
  %76 = call i32 @fprintf(i32 %75, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0))
  %77 = call i32 @exit(i32 1) #4
  unreachable

78:                                               ; preds = %58
  %79 = load i32, i32* %7, align 4
  %80 = call i32 @strlen(i8* %25)
  %81 = call i64 @send(i32 %79, i8* %25, i32 %80, i32 0)
  %82 = icmp slt i64 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %78
  %84 = call i32 @perror(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0))
  %85 = call i32 @exit(i32 -1) #4
  unreachable

86:                                               ; preds = %78
  %87 = load i32, i32* %7, align 4
  %88 = call i32 @FD_CLR(i32 %87, i32* %12)
  %89 = call i32 @FD_ZERO(i32* %12)
  %90 = load i32, i32* %7, align 4
  %91 = call i32 @FD_SET(i32 %90, i32* %12)
  %92 = load i32, i32* %7, align 4
  %93 = add nsw i32 %92, 1
  %94 = call i32 @select(i32 %93, i32* %12, i32* null, i32* null, %struct.timeval* %13)
  store i32 %94, i32* %8, align 4
  %95 = icmp slt i32 %94, 0
  br i1 %95, label %96, label %101

96:                                               ; preds = %86
  %97 = call i32 @perror(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0))
  %98 = load i32, i32* %7, align 4
  %99 = call i32 @close(i32 %98)
  %100 = call i32 @exit(i32 1) #4
  unreachable

101:                                              ; preds = %86
  %102 = load i32, i32* %7, align 4
  %103 = call i64 @FD_ISSET(i32 %102, i32* %12)
  %104 = icmp ne i64 %103, 0
  br i1 %104, label %105, label %266

105:                                              ; preds = %101
  %106 = load i32, i32* %7, align 4
  %107 = getelementptr inbounds [6900 x i8], [6900 x i8]* %18, i64 0, i64 0
  %108 = call i32 @recv(i32 %106, i8* %107, i32 100, i32 0)
  store i32 %108, i32* %16, align 4
  %109 = load i32, i32* %16, align 4
  %110 = icmp slt i32 %109, 0
  br i1 %110, label %111, label %114

111:                                              ; preds = %105
  %112 = call i32 @perror(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0))
  %113 = call i32 @exit(i32 1) #4
  unreachable

114:                                              ; preds = %105
  %115 = load i32, i32* %16, align 4
  store i32 %115, i32* %17, align 4
  br label %116

116:                                              ; preds = %137, %114
  %117 = load i32, i32* %16, align 4
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %119, label %138

119:                                              ; preds = %116
  %120 = load i32, i32* %7, align 4
  %121 = getelementptr inbounds [6900 x i8], [6900 x i8]* %18, i64 0, i64 0
  %122 = load i32, i32* %17, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* %121, i64 %123
  %125 = load i32, i32* @MSG_DONTWAIT, align 4
  %126 = call i32 @recv(i32 %120, i8* %124, i32 100, i32 %125)
  store i32 %126, i32* %16, align 4
  %127 = load i32, i32* %16, align 4
  %128 = icmp sgt i32 %127, 0
  br i1 %128, label %129, label %133

129:                                              ; preds = %119
  %130 = load i32, i32* %16, align 4
  %131 = load i32, i32* %17, align 4
  %132 = add nsw i32 %131, %130
  store i32 %132, i32* %17, align 4
  br label %133

133:                                              ; preds = %129, %119
  %134 = load i32, i32* %16, align 4
  %135 = icmp sle i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  br label %138

137:                                              ; preds = %133
  br label %116

138:                                              ; preds = %136, %116
  %139 = getelementptr inbounds [6900 x i8], [6900 x i8]* %18, i64 0, i64 0
  %140 = call i32 @strlen(i8* %139)
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds [6900 x i8], [6900 x i8]* %18, i64 0, i64 %141
  store i8 0, i8* %142, align 1
  %143 = load i32, i32* %7, align 4
  %144 = call i32 @close(i32 %143)
  %145 = load i32, i32* @stdin, align 4
  %146 = call i32 @fflush(i32 %145)
  store i32 0, i32* %16, align 4
  br label %147

147:                                              ; preds = %262, %138
  %148 = load %struct.TYPE_6__*, %struct.TYPE_6__** @MISSED, align 8
  %149 = load i32, i32* %16, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %148, i64 %150
  %152 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %151, i32 0, i32 0
  %153 = load i32*, i32** %152, align 8
  %154 = icmp ne i32* %153, null
  br i1 %154, label %155, label %265

155:                                              ; preds = %147
  %156 = getelementptr inbounds [100 x i8], [100 x i8]* %19, i64 0, i64 0
  %157 = load %struct.TYPE_6__*, %struct.TYPE_6__** @MISSED, align 8
  %158 = load i32, i32* %16, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %157, i64 %159
  %161 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %160, i32 0, i32 0
  %162 = load i32*, i32** %161, align 8
  %163 = call i32 (i8*, i8*, ...) @sprintf(i8* %156, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i32* %162, i32 32)
  %164 = getelementptr inbounds [6900 x i8], [6900 x i8]* %18, i64 0, i64 0
  %165 = getelementptr inbounds [100 x i8], [100 x i8]* %19, i64 0, i64 0
  %166 = call i8* @strstr(i8* %164, i8* %165)
  store i8* %166, i8** %20, align 8
  %167 = icmp ne i8* %166, null
  br i1 %167, label %168, label %261

168:                                              ; preds = %155
  %169 = load %struct.TYPE_5__*, %struct.TYPE_5__** @TRASH, align 8
  %170 = load i32, i32* %16, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %169, i64 %171
  %173 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %172, i32 0, i32 0
  %174 = load i8*, i8** %173, align 8
  store i8* %174, i8** %21, align 8
  br label %175

175:                                              ; preds = %193, %168
  %176 = load i8*, i8** %20, align 8
  %177 = load i8, i8* %176, align 1
  %178 = sext i8 %177 to i32
  %179 = add nsw i32 %178, 1
  %180 = trunc i32 %179 to i8
  %181 = call i32 @iscntrl(i8 signext %180)
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %183, label %191

183:                                              ; preds = %175
  %184 = load i8*, i8** %20, align 8
  %185 = load i8, i8* %184, align 1
  %186 = sext i8 %185 to i32
  %187 = add nsw i32 %186, 1
  %188 = trunc i32 %187 to i8
  %189 = call i64 @isalnum(i8 signext %188)
  %190 = icmp ne i64 %189, 0
  br label %191

191:                                              ; preds = %183, %175
  %192 = phi i1 [ true, %175 ], [ %190, %183 ]
  br i1 %192, label %193, label %205

193:                                              ; preds = %191
  %194 = load i8*, i8** %20, align 8
  %195 = getelementptr inbounds [100 x i8], [100 x i8]* %19, i64 0, i64 0
  %196 = call i32 @strlen(i8* %195)
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds i8, i8* %194, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = load i8*, i8** %21, align 8
  store i8 %199, i8* %200, align 1
  %201 = load i8*, i8** %21, align 8
  %202 = getelementptr inbounds i8, i8* %201, i32 1
  store i8* %202, i8** %21, align 8
  %203 = load i8*, i8** %20, align 8
  %204 = getelementptr inbounds i8, i8* %203, i32 1
  store i8* %204, i8** %20, align 8
  br label %175

205:                                              ; preds = %191
  store i32 0, i32* %15, align 4
  br label %206

206:                                              ; preds = %255, %205
  %207 = load %struct.TYPE_5__*, %struct.TYPE_5__** @TRASH, align 8
  %208 = load i32, i32* %16, align 4
  %209 = sext i32 %208 to i64
  %210 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %207, i64 %209
  %211 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %210, i32 0, i32 0
  %212 = load i8*, i8** %211, align 8
  %213 = load i32, i32* %15, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i8, i8* %212, i64 %214
  %216 = load i8, i8* %215, align 1
  %217 = icmp ne i8 %216, 0
  br i1 %217, label %218, label %258

218:                                              ; preds = %206
  %219 = load %struct.TYPE_5__*, %struct.TYPE_5__** @TRASH, align 8
  %220 = load i32, i32* %16, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %219, i64 %221
  %223 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %222, i32 0, i32 0
  %224 = load i8*, i8** %223, align 8
  %225 = load i32, i32* %15, align 4
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds i8, i8* %224, i64 %226
  %228 = load i8, i8* %227, align 1
  %229 = sext i8 %228 to i32
  %230 = icmp eq i32 %229, 44
  br i1 %230, label %244, label %231

231:                                              ; preds = %218
  %232 = load %struct.TYPE_5__*, %struct.TYPE_5__** @TRASH, align 8
  %233 = load i32, i32* %16, align 4
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %232, i64 %234
  %236 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %235, i32 0, i32 0
  %237 = load i8*, i8** %236, align 8
  %238 = load i32, i32* %15, align 4
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds i8, i8* %237, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = sext i8 %241 to i32
  %243 = icmp eq i32 %242, 10
  br i1 %243, label %244, label %254

244:                                              ; preds = %231, %218
  %245 = load %struct.TYPE_5__*, %struct.TYPE_5__** @TRASH, align 8
  %246 = load i32, i32* %16, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %245, i64 %247
  %249 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %248, i32 0, i32 0
  %250 = load i8*, i8** %249, align 8
  %251 = load i32, i32* %15, align 4
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds i8, i8* %250, i64 %252
  store i8 0, i8* %253, align 1
  br label %254

254:                                              ; preds = %244, %231
  br label %255

255:                                              ; preds = %254
  %256 = load i32, i32* %15, align 4
  %257 = add nsw i32 %256, 1
  store i32 %257, i32* %15, align 4
  br label %206

258:                                              ; preds = %206
  %259 = getelementptr inbounds [100 x i8], [100 x i8]* %19, i64 0, i64 0
  %260 = call i32 @bzero(i8* %259, i32 100)
  br label %261

261:                                              ; preds = %258, %155
  br label %262

262:                                              ; preds = %261
  %263 = load i32, i32* %16, align 4
  %264 = add nsw i32 %263, 1
  store i32 %264, i32* %16, align 4
  br label %147

265:                                              ; preds = %147
  br label %266

266:                                              ; preds = %265, %101
  %267 = load i8*, i8** %10, align 8
  call void @llvm.stackrestore(i8* %267)
  ret void
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @bzero(i8*, i32) #2

declare dso_local i32 @make_spy_header(i8*, i16 zeroext, i8*, i8*) #2

declare dso_local i32 @socket(i32, i32, i32) #2

declare dso_local i32 @perror(i8*) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i64 @setsockopt(i32, i32, i32, i8*, i32) #2

declare dso_local i32 @close(i32) #2

declare dso_local i32 @memset(i32*, i8 signext, i32) #2

declare dso_local i32 @htons(i16 zeroext) #2

declare dso_local i32 @get_host_ip(i8*) #2

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #2

declare dso_local i32 @fprintf(i32, i8*) #2

declare dso_local i64 @send(i32, i8*, i32, i32) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @FD_CLR(i32, i32*) #2

declare dso_local i32 @FD_ZERO(i32*) #2

declare dso_local i32 @FD_SET(i32, i32*) #2

declare dso_local i32 @select(i32, i32*, i32*, i32*, %struct.timeval*) #2

declare dso_local i64 @FD_ISSET(i32, i32*) #2

declare dso_local i32 @recv(i32, i8*, i32, i32) #2

declare dso_local i32 @fflush(i32) #2

declare dso_local i32 @sprintf(i8*, i8*, ...) #2

declare dso_local i8* @strstr(i8*, i8*) #2

declare dso_local i32 @iscntrl(i8 signext) #2

declare dso_local i64 @isalnum(i8 signext) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
