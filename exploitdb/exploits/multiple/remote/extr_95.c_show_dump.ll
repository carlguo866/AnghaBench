; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_95.c_show_dump.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_95.c_show_dump.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1
@stdout = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @show_dump(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca [80 x i8], align 16
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8** %5, align 8
  %13 = load i32, i32* %4, align 4
  %14 = lshr i32 %13, 4
  store i32 %14, i32* %9, align 4
  %15 = load i32, i32* %4, align 4
  %16 = load i32, i32* %9, align 4
  %17 = shl i32 %16, 4
  %18 = sub i32 %15, %17
  store i32 %18, i32* %12, align 4
  %19 = load i8*, i8** %3, align 8
  store i8* %19, i8** %8, align 8
  store i32 0, i32* %10, align 4
  br label %20

20:                                               ; preds = %94, %2
  %21 = load i32, i32* %10, align 4
  %22 = load i32, i32* %9, align 4
  %23 = icmp ult i32 %21, %22
  br i1 %23, label %24, label %97

24:                                               ; preds = %20
  %25 = getelementptr inbounds [80 x i8], [80 x i8]* %6, i64 0, i64 0
  store i8* %25, i8** %7, align 8
  store i32 0, i32* %11, align 4
  br label %26

26:                                               ; preds = %55, %24
  %27 = load i32, i32* %11, align 4
  %28 = icmp slt i32 %27, 16
  br i1 %28, label %29, label %58

29:                                               ; preds = %26
  %30 = load i8*, i8** %5, align 8
  %31 = load i8*, i8** %8, align 8
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = ashr i32 %33, 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %30, i64 %35
  %37 = load i8, i8* %36, align 1
  %38 = load i8*, i8** %7, align 8
  %39 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %39, i8** %7, align 8
  store i8 %37, i8* %38, align 1
  %40 = load i8*, i8** %5, align 8
  %41 = load i8*, i8** %8, align 8
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = and i32 %43, 15
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %40, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = load i8*, i8** %7, align 8
  %49 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %49, i8** %7, align 8
  store i8 %47, i8* %48, align 1
  %50 = load i8*, i8** %7, align 8
  %51 = getelementptr inbounds i8, i8* %50, i32 1
  store i8* %51, i8** %7, align 8
  store i8 32, i8* %50, align 1
  %52 = load i8*, i8** %8, align 8
  %53 = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %53, i8** %8, align 8
  %54 = load i8, i8* %52, align 1
  br label %55

55:                                               ; preds = %29
  %56 = load i32, i32* %11, align 4
  %57 = add nsw i32 %56, 1
  store i32 %57, i32* %11, align 4
  br label %26

58:                                               ; preds = %26
  %59 = load i8*, i8** %7, align 8
  %60 = getelementptr inbounds i8, i8* %59, i32 1
  store i8* %60, i8** %7, align 8
  store i8 32, i8* %59, align 1
  %61 = load i8*, i8** %7, align 8
  %62 = getelementptr inbounds i8, i8* %61, i32 1
  store i8* %62, i8** %7, align 8
  store i8 32, i8* %61, align 1
  %63 = load i8*, i8** %8, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 -16
  store i8* %64, i8** %8, align 8
  store i32 0, i32* %11, align 4
  br label %65

65:                                               ; preds = %84, %58
  %66 = load i32, i32* %11, align 4
  %67 = icmp slt i32 %66, 16
  br i1 %67, label %68, label %87

68:                                               ; preds = %65
  %69 = load i8*, i8** %8, align 8
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = icmp sgt i32 %71, 32
  br i1 %72, label %73, label %77

73:                                               ; preds = %68
  %74 = load i8*, i8** %8, align 8
  %75 = load i8, i8* %74, align 1
  %76 = load i8*, i8** %7, align 8
  store i8 %75, i8* %76, align 1
  br label %79

77:                                               ; preds = %68
  %78 = load i8*, i8** %7, align 8
  store i8 46, i8* %78, align 1
  br label %79

79:                                               ; preds = %77, %73
  %80 = load i8*, i8** %8, align 8
  %81 = getelementptr inbounds i8, i8* %80, i32 1
  store i8* %81, i8** %8, align 8
  %82 = load i8*, i8** %7, align 8
  %83 = getelementptr inbounds i8, i8* %82, i32 1
  store i8* %83, i8** %7, align 8
  br label %84

84:                                               ; preds = %79
  %85 = load i32, i32* %11, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %11, align 4
  br label %65

87:                                               ; preds = %65
  %88 = load i8*, i8** %7, align 8
  %89 = getelementptr inbounds i8, i8* %88, i32 1
  store i8* %89, i8** %7, align 8
  store i8 10, i8* %88, align 1
  %90 = load i8*, i8** %7, align 8
  store i8 0, i8* %90, align 1
  %91 = getelementptr inbounds [80 x i8], [80 x i8]* %6, i64 0, i64 0
  %92 = load i32, i32* @stdout, align 4
  %93 = call i32 @fputs(i8* %91, i32 %92)
  br label %94

94:                                               ; preds = %87
  %95 = load i32, i32* %10, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %10, align 4
  br label %20

97:                                               ; preds = %20
  %98 = load i32, i32* %12, align 4
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %185

100:                                              ; preds = %97
  %101 = getelementptr inbounds [80 x i8], [80 x i8]* %6, i64 0, i64 0
  store i8* %101, i8** %7, align 8
  store i32 0, i32* %11, align 4
  br label %102

102:                                              ; preds = %132, %100
  %103 = load i32, i32* %11, align 4
  %104 = load i32, i32* %12, align 4
  %105 = icmp slt i32 %103, %104
  br i1 %105, label %106, label %135

106:                                              ; preds = %102
  %107 = load i8*, i8** %5, align 8
  %108 = load i8*, i8** %8, align 8
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = ashr i32 %110, 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i8, i8* %107, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = load i8*, i8** %7, align 8
  %116 = getelementptr inbounds i8, i8* %115, i32 1
  store i8* %116, i8** %7, align 8
  store i8 %114, i8* %115, align 1
  %117 = load i8*, i8** %5, align 8
  %118 = load i8*, i8** %8, align 8
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = and i32 %120, 15
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i8, i8* %117, i64 %122
  %124 = load i8, i8* %123, align 1
  %125 = load i8*, i8** %7, align 8
  %126 = getelementptr inbounds i8, i8* %125, i32 1
  store i8* %126, i8** %7, align 8
  store i8 %124, i8* %125, align 1
  %127 = load i8*, i8** %7, align 8
  %128 = getelementptr inbounds i8, i8* %127, i32 1
  store i8* %128, i8** %7, align 8
  store i8 32, i8* %127, align 1
  %129 = load i8*, i8** %8, align 8
  %130 = getelementptr inbounds i8, i8* %129, i32 1
  store i8* %130, i8** %8, align 8
  %131 = load i8, i8* %129, align 1
  br label %132

132:                                              ; preds = %106
  %133 = load i32, i32* %11, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %11, align 4
  br label %102

135:                                              ; preds = %102
  %136 = load i8*, i8** %7, align 8
  %137 = getelementptr inbounds [80 x i8], [80 x i8]* %6, i64 0, i64 0
  %138 = ptrtoint i8* %136 to i64
  %139 = ptrtoint i8* %137 to i64
  %140 = sub i64 %138, %139
  %141 = sub nsw i64 50, %140
  %142 = trunc i64 %141 to i32
  store i32 %142, i32* %11, align 4
  %143 = load i8*, i8** %7, align 8
  %144 = load i32, i32* %11, align 4
  %145 = call i32 @memset(i8* %143, i32 32, i32 %144)
  %146 = load i32, i32* %11, align 4
  %147 = load i8*, i8** %7, align 8
  %148 = sext i32 %146 to i64
  %149 = getelementptr inbounds i8, i8* %147, i64 %148
  store i8* %149, i8** %7, align 8
  %150 = load i32, i32* %12, align 4
  %151 = load i8*, i8** %8, align 8
  %152 = sext i32 %150 to i64
  %153 = sub i64 0, %152
  %154 = getelementptr inbounds i8, i8* %151, i64 %153
  store i8* %154, i8** %8, align 8
  store i32 0, i32* %11, align 4
  br label %155

155:                                              ; preds = %175, %135
  %156 = load i32, i32* %11, align 4
  %157 = load i32, i32* %12, align 4
  %158 = icmp slt i32 %156, %157
  br i1 %158, label %159, label %178

159:                                              ; preds = %155
  %160 = load i8*, i8** %8, align 8
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i32
  %163 = icmp sgt i32 %162, 32
  br i1 %163, label %164, label %168

164:                                              ; preds = %159
  %165 = load i8*, i8** %8, align 8
  %166 = load i8, i8* %165, align 1
  %167 = load i8*, i8** %7, align 8
  store i8 %166, i8* %167, align 1
  br label %170

168:                                              ; preds = %159
  %169 = load i8*, i8** %7, align 8
  store i8 46, i8* %169, align 1
  br label %170

170:                                              ; preds = %168, %164
  %171 = load i8*, i8** %8, align 8
  %172 = getelementptr inbounds i8, i8* %171, i32 1
  store i8* %172, i8** %8, align 8
  %173 = load i8*, i8** %7, align 8
  %174 = getelementptr inbounds i8, i8* %173, i32 1
  store i8* %174, i8** %7, align 8
  br label %175

175:                                              ; preds = %170
  %176 = load i32, i32* %11, align 4
  %177 = add nsw i32 %176, 1
  store i32 %177, i32* %11, align 4
  br label %155

178:                                              ; preds = %155
  %179 = load i8*, i8** %7, align 8
  %180 = getelementptr inbounds i8, i8* %179, i32 1
  store i8* %180, i8** %7, align 8
  store i8 10, i8* %179, align 1
  %181 = load i8*, i8** %7, align 8
  store i8 0, i8* %181, align 1
  %182 = getelementptr inbounds [80 x i8], [80 x i8]* %6, i64 0, i64 0
  %183 = load i32, i32* @stdout, align 4
  %184 = call i32 @fputs(i8* %182, i32 %183)
  br label %185

185:                                              ; preds = %178, %97
  ret void
}

declare dso_local i32 @fputs(i8*, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
