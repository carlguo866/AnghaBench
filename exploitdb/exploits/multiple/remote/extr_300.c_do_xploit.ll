; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_300.c_do_xploit.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_300.c_do_xploit.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SIGPIPE = common dso_local global i32 0, align 4
@hdl_crashed = common dso_local global i32 0, align 4
@detectos = common dso_local global i64 0, align 8
@isbsd = common dso_local global i64 0, align 8
@LINUX_ADDR = common dso_local global i32 0, align 4
@LINUX_SIZE = common dso_local global i32 0, align 4
@ERR_FAILURE = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_xploit() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %2 = load i32, i32* @SIGPIPE, align 4
  %3 = load i32, i32* @hdl_crashed, align 4
  %4 = call i32 @signal(i32 %2, i32 %3)
  %5 = load i64, i64* @detectos, align 8
  %6 = icmp ne i64 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %0
  %8 = call i32 (...) @detect_remote_os()
  store i32 %8, i32* %1, align 4
  br label %9

9:                                                ; preds = %7, %0
  %10 = load i64, i64* @isbsd, align 8
  %11 = icmp ne i64 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = call i32 (...) @bsd_exploitation()
  br label %23

14:                                               ; preds = %9
  %15 = load i32, i32* @LINUX_ADDR, align 4
  %16 = load i32, i32* @LINUX_SIZE, align 4
  %17 = call i32 @linux_exploitation(i32 %15, i32 %16)
  %18 = load i32, i32* %1, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %14
  %21 = call i32 (...) @bsd_exploitation()
  br label %22

22:                                               ; preds = %20, %14
  br label %23

23:                                               ; preds = %22, %12
  %24 = load i8*, i8** @ERR_FAILURE, align 8
  %25 = call i32 @printf(i8* %24)
  ret void
}

declare dso_local i32 @signal(i32, i32) #1

declare dso_local i32 @detect_remote_os(...) #1

declare dso_local i32 @bsd_exploitation(...) #1

declare dso_local i32 @linux_exploitation(i32, i32) #1

declare dso_local i32 @printf(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
