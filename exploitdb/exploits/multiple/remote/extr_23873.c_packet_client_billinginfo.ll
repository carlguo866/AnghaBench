; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_23873.c_packet_client_billinginfo.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_23873.c_packet_client_billinginfo.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@PK_PRIVATE = common dso_local global i32 0, align 4
@key = common dso_local global i32 0, align 4
@CRYPT_OK = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [24 x i8] c"rsa_exptmod failed: %s\0A\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"rsa_depad failed: %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"Billing Info:\0A\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"  Account Name: %s\0A\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"  Password: %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"  Cardholder's Name: %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"  CreditCard Number: %s\0A\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"  Expiration Date: %s/\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"  Billing cycle: %s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @packet_client_billinginfo(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca [1024 x i8], align 16
  %6 = alloca [1024 x i8], align 16
  %7 = alloca [4096 x i8], align 16
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %12, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 2
  store i8* %14, i8** %3, align 8
  %15 = load i32, i32* %4, align 4
  %16 = sub nsw i32 %15, 2
  store i32 %16, i32* %4, align 4
  br label %17

17:                                               ; preds = %57, %2
  %18 = load i32, i32* %4, align 4
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %76

20:                                               ; preds = %17
  %21 = load i8*, i8** %3, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = shl i32 %24, 8
  %26 = load i8*, i8** %3, align 8
  %27 = getelementptr inbounds i8, i8* %26, i64 1
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = or i32 %25, %29
  store i32 %30, i32* %11, align 4
  %31 = load i8*, i8** %3, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 2
  store i8* %32, i8** %3, align 8
  %33 = load i32, i32* %4, align 4
  %34 = sub nsw i32 %33, 2
  store i32 %34, i32* %4, align 4
  store i64 1024, i64* %8, align 8
  %35 = load i8*, i8** %3, align 8
  %36 = load i32, i32* %11, align 4
  %37 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  %38 = load i32, i32* @PK_PRIVATE, align 4
  %39 = call i32 @rsa_exptmod(i8* %35, i32 %36, i8* %37, i64* %8, i32 %38, i32* @key)
  store i32 %39, i32* %10, align 4
  %40 = load i32, i32* @CRYPT_OK, align 4
  %41 = icmp ne i32 %39, %40
  br i1 %41, label %42, label %46

42:                                               ; preds = %20
  %43 = load i32, i32* %10, align 4
  %44 = call i8* @error_to_string(i32 %43)
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* %44)
  br label %93

46:                                               ; preds = %20
  store i64 1024, i64* %9, align 8
  %47 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  %48 = load i64, i64* %8, align 8
  %49 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %50 = call i32 @rsa_depad(i8* %47, i64 %48, i8* %49, i64* %9)
  store i32 %50, i32* %10, align 4
  %51 = load i32, i32* @CRYPT_OK, align 4
  %52 = icmp ne i32 %50, %51
  br i1 %52, label %53, label %57

53:                                               ; preds = %46
  %54 = load i32, i32* %10, align 4
  %55 = call i8* @error_to_string(i32 %54)
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8* %55)
  br label %93

57:                                               ; preds = %46
  %58 = load i32, i32* %12, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i64 0, i64 %59
  %61 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %62 = load i64, i64* %9, align 8
  %63 = call i32 @memcpy(i8* %60, i8* %61, i64 %62)
  %64 = load i64, i64* %9, align 8
  %65 = load i32, i32* %12, align 4
  %66 = sext i32 %65 to i64
  %67 = add i64 %66, %64
  %68 = trunc i64 %67 to i32
  store i32 %68, i32* %12, align 4
  %69 = load i32, i32* %11, align 4
  %70 = load i8*, i8** %3, align 8
  %71 = sext i32 %69 to i64
  %72 = getelementptr inbounds i8, i8* %70, i64 %71
  store i8* %72, i8** %3, align 8
  %73 = load i32, i32* %11, align 4
  %74 = load i32, i32* %4, align 4
  %75 = sub nsw i32 %74, %73
  store i32 %75, i32* %4, align 4
  br label %17

76:                                               ; preds = %17
  %77 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i64 0, i64 0
  store i8* %77, i8** %3, align 8
  %78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0))
  %79 = call i8* @dump_str(i8** %3)
  %80 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0), i8* %79)
  %81 = call i8* @dump_str(i8** %3)
  %82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8* %81)
  %83 = call i8* @dump_str(i8** %3)
  %84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i8* %83)
  %85 = call i8* @dump_str(i8** %3)
  %86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i8* %85)
  %87 = call i8* @dump_str(i8** %3)
  %88 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %87)
  %89 = call i8* @dump_str(i8** %3)
  %90 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8* %89)
  %91 = call i8* @dump_str(i8** %3)
  %92 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i8* %91)
  br label %93

93:                                               ; preds = %76, %53, %42
  ret void
}

declare dso_local i32 @rsa_exptmod(i8*, i32, i8*, i64*, i32, i32*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i8* @error_to_string(i32) #1

declare dso_local i32 @rsa_depad(i8*, i64, i8*, i64*) #1

declare dso_local i32 @memcpy(i8*, i8*, i64) #1

declare dso_local i8* @dump_str(i8**) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
