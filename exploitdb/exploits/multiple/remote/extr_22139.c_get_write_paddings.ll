; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_22139.c_get_write_paddings.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_22139.c_get_write_paddings.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @get_write_paddings(i64 %0, i32* %1, i32* %2, i32* %3, i32* %4, i32 %5) #0 {
  %7 = alloca i64, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i64 %0, i64* %7, align 8
  store i32* %1, i32** %8, align 8
  store i32* %2, i32** %9, align 8
  store i32* %3, i32** %10, align 8
  store i32* %4, i32** %11, align 8
  store i32 %5, i32* %12, align 4
  %16 = load i64, i64* %7, align 8
  %17 = call i32 @SB1(i64 %16)
  store i32 %17, i32* %13, align 4
  %18 = load i32, i32* %12, align 4
  store i32 %18, i32* %14, align 4
  %19 = load i32, i32* %13, align 4
  %20 = add nsw i32 %19, 256
  store i32 %20, i32* %13, align 4
  %21 = load i32, i32* %14, align 4
  %22 = srem i32 %21, 256
  store i32 %22, i32* %14, align 4
  %23 = load i32, i32* %13, align 4
  %24 = load i32, i32* %14, align 4
  %25 = sub nsw i32 %23, %24
  %26 = srem i32 %25, 256
  store i32 %26, i32* %15, align 4
  %27 = load i32, i32* %15, align 4
  %28 = icmp slt i32 %27, 10
  br i1 %28, label %29, label %32

29:                                               ; preds = %6
  %30 = load i32, i32* %15, align 4
  %31 = add nsw i32 %30, 256
  store i32 %31, i32* %15, align 4
  br label %32

32:                                               ; preds = %29, %6
  %33 = load i32, i32* %15, align 4
  %34 = load i32*, i32** %8, align 8
  store i32 %33, i32* %34, align 4
  %35 = load i64, i64* %7, align 8
  %36 = call i32 @SB2(i64 %35)
  store i32 %36, i32* %13, align 4
  %37 = load i32, i32* %15, align 4
  %38 = load i32, i32* %14, align 4
  %39 = add nsw i32 %38, %37
  store i32 %39, i32* %14, align 4
  %40 = load i32, i32* %13, align 4
  %41 = add nsw i32 %40, 256
  store i32 %41, i32* %13, align 4
  %42 = load i32, i32* %14, align 4
  %43 = srem i32 %42, 256
  store i32 %43, i32* %14, align 4
  %44 = load i32, i32* %13, align 4
  %45 = load i32, i32* %14, align 4
  %46 = sub nsw i32 %44, %45
  %47 = srem i32 %46, 256
  store i32 %47, i32* %15, align 4
  %48 = load i32, i32* %15, align 4
  %49 = icmp slt i32 %48, 10
  br i1 %49, label %50, label %53

50:                                               ; preds = %32
  %51 = load i32, i32* %15, align 4
  %52 = add nsw i32 %51, 256
  store i32 %52, i32* %15, align 4
  br label %53

53:                                               ; preds = %50, %32
  %54 = load i32, i32* %15, align 4
  %55 = load i32*, i32** %9, align 8
  store i32 %54, i32* %55, align 4
  %56 = load i64, i64* %7, align 8
  %57 = call i32 @SB3(i64 %56)
  store i32 %57, i32* %13, align 4
  %58 = load i32, i32* %15, align 4
  %59 = load i32, i32* %14, align 4
  %60 = add nsw i32 %59, %58
  store i32 %60, i32* %14, align 4
  %61 = load i32, i32* %13, align 4
  %62 = add nsw i32 %61, 256
  store i32 %62, i32* %13, align 4
  %63 = load i32, i32* %14, align 4
  %64 = srem i32 %63, 256
  store i32 %64, i32* %14, align 4
  %65 = load i32, i32* %13, align 4
  %66 = load i32, i32* %14, align 4
  %67 = sub nsw i32 %65, %66
  %68 = srem i32 %67, 256
  store i32 %68, i32* %15, align 4
  %69 = load i32, i32* %15, align 4
  %70 = icmp slt i32 %69, 10
  br i1 %70, label %71, label %74

71:                                               ; preds = %53
  %72 = load i32, i32* %15, align 4
  %73 = add nsw i32 %72, 256
  store i32 %73, i32* %15, align 4
  br label %74

74:                                               ; preds = %71, %53
  %75 = load i32, i32* %15, align 4
  %76 = load i32*, i32** %10, align 8
  store i32 %75, i32* %76, align 4
  %77 = load i64, i64* %7, align 8
  %78 = call i32 @SB4(i64 %77)
  store i32 %78, i32* %13, align 4
  %79 = load i32, i32* %15, align 4
  %80 = load i32, i32* %14, align 4
  %81 = add nsw i32 %80, %79
  store i32 %81, i32* %14, align 4
  %82 = load i32, i32* %13, align 4
  %83 = add nsw i32 %82, 256
  store i32 %83, i32* %13, align 4
  %84 = load i32, i32* %14, align 4
  %85 = srem i32 %84, 256
  store i32 %85, i32* %14, align 4
  %86 = load i32, i32* %13, align 4
  %87 = load i32, i32* %14, align 4
  %88 = sub nsw i32 %86, %87
  %89 = srem i32 %88, 256
  store i32 %89, i32* %15, align 4
  %90 = load i32, i32* %15, align 4
  %91 = icmp slt i32 %90, 10
  br i1 %91, label %92, label %95

92:                                               ; preds = %74
  %93 = load i32, i32* %15, align 4
  %94 = add nsw i32 %93, 256
  store i32 %94, i32* %15, align 4
  br label %95

95:                                               ; preds = %92, %74
  %96 = load i32, i32* %15, align 4
  %97 = load i32*, i32** %11, align 8
  store i32 %96, i32* %97, align 4
  ret void
}

declare dso_local i32 @SB1(i64) #1

declare dso_local i32 @SB2(i64) #1

declare dso_local i32 @SB3(i64) #1

declare dso_local i32 @SB4(i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
