; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_805.c_make_http_content.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_805.c_make_http_content.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i8* }
%struct.TYPE_3__ = type { i8* }

@TESTPASS_DECODED = common dso_local global i8* null, align 8
@shbuffer = common dso_local global i8* null, align 8
@TESTUSER = common dso_local global i8* null, align 8
@LOGSUBJECT = common dso_local global i8* null, align 8
@content = common dso_local global i8* null, align 8
@UPLOADME = common dso_local global i32 0, align 4
@NOTUPLOADME = common dso_local global i32 0, align 4
@id = common dso_local global i32 0, align 4
@fedorabuf = common dso_local global i8* null, align 8
@debianbuffer = common dso_local global i8* null, align 8
@windozebuf = common dso_local global i8* null, align 8
@windozetext = common dso_local global i8* null, align 8
@bigbuffer = common dso_local global i8* null, align 8
@boundary = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@MSGCONTENT = common dso_local global i32 0, align 4
@debug = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [57 x i8] c"\0D\0AContent-Disposition: form-data; name=\22cmd\22\0D\0A\0D\0ASubmit\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [56 x i8] c"%s\0D\0AContent-Disposition: form-data; name=\22wpwd\22\0D\0A\0D\0A%s\0D\0A\00", align 1
@wpassbufenc = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [55 x i8] c"%s\0D\0AContent-Disposition: form-data; name=\22unm\22\0D\0A\0D\0A%s\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [56 x i8] c"%s\0D\0AContent-Disposition: form-data; name=\22upwd\22\0D\0A\0D\0A%s\0D\0A\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"%s\0D\0AContent-Disposition: form-data; name=\22exp\22\0D\0A\0D\0A%s\0D\0A\00", align 1
@.str.6 = private unnamed_addr constant [54 x i8] c"%s\0D\0AContent-Disposition: form-data; name=\22%s\22\0D\0A\0D\0A%s\0D\0A\00", align 1
@MISSED = common dso_local global %struct.TYPE_4__* null, align 8
@TRASH = common dso_local global %struct.TYPE_3__* null, align 8
@.str.7 = private unnamed_addr constant [59 x i8] c"%s\0D\0AContent-Disposition: form-data; name=\22Subject\22\0D\0A\0D\0A%s\0D\0A\00", align 1
@.str.8 = private unnamed_addr constant [56 x i8] c"%s\0D\0AContent-Disposition: form-data; name=\22Text\22\0D\0A\0D\0A%s\0D\0A\00", align 1
@.str.9 = private unnamed_addr constant [67 x i8] c"%s\0D\0AContent-Disposition: form-data; name=\22attfile\22;filename=\22%s\22\0D\0A\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"%s\0D\0A\00", align 1
@content_length = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @make_http_content(i32 %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca [50 x i8], align 16
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %16 = load i8*, i8** @TESTPASS_DECODED, align 8
  store i8* %16, i8** %5, align 8
  store i8* null, i8** %7, align 8
  %17 = load i8*, i8** %4, align 8
  store i8* %17, i8** %8, align 8
  %18 = load i8*, i8** @shbuffer, align 8
  store i8* %18, i8** %9, align 8
  %19 = load i8*, i8** @TESTUSER, align 8
  store i8* %19, i8** %10, align 8
  %20 = load i8*, i8** @LOGSUBJECT, align 8
  store i8* %20, i8** %11, align 8
  %21 = load i8*, i8** @content, align 8
  store i8* %21, i8** %12, align 8
  store i32 0, i32* %13, align 4
  store i32 0, i32* %14, align 4
  %22 = load i32, i32* %3, align 4
  %23 = load i32, i32* @UPLOADME, align 4
  %24 = icmp eq i32 %22, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %2
  store i32 1, i32* %13, align 4
  br label %32

26:                                               ; preds = %2
  %27 = load i32, i32* %3, align 4
  %28 = load i32, i32* @NOTUPLOADME, align 4
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  store i32 0, i32* %13, align 4
  br label %31

31:                                               ; preds = %30, %26
  br label %32

32:                                               ; preds = %31, %25
  %33 = load i32, i32* @id, align 4
  %34 = icmp eq i32 %33, 4
  br i1 %34, label %35, label %37

35:                                               ; preds = %32
  %36 = load i8*, i8** @fedorabuf, align 8
  store i8* %36, i8** %9, align 8
  br label %37

37:                                               ; preds = %35, %32
  %38 = load i32, i32* @id, align 4
  %39 = icmp eq i32 %38, 5
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = load i32, i32* @id, align 4
  %42 = icmp eq i32 %41, 2
  br i1 %42, label %43, label %45

43:                                               ; preds = %40, %37
  %44 = load i8*, i8** @debianbuffer, align 8
  store i8* %44, i8** %9, align 8
  br label %45

45:                                               ; preds = %43, %40
  %46 = load i32, i32* @id, align 4
  %47 = icmp eq i32 %46, 6
  br i1 %47, label %48, label %51

48:                                               ; preds = %45
  %49 = load i8*, i8** @windozebuf, align 8
  store i8* %49, i8** %9, align 8
  %50 = load i8*, i8** @windozetext, align 8
  store i8* %50, i8** %7, align 8
  br label %51

51:                                               ; preds = %48, %45
  %52 = load i32, i32* @id, align 4
  %53 = icmp ne i32 %52, 6
  br i1 %53, label %54, label %56

54:                                               ; preds = %51
  %55 = load i8*, i8** @bigbuffer, align 8
  store i8* %55, i8** %7, align 8
  br label %56

56:                                               ; preds = %54, %51
  %57 = load i8*, i8** @boundary, align 8
  %58 = call i8* (...) @make_random_boundary()
  %59 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %57, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* %58)
  %60 = load i32, i32* @MSGCONTENT, align 4
  %61 = load i32, i32* @debug, align 4
  %62 = call i32 @PRINTINFO(i32 %60, i32 %61)
  %63 = load i8*, i8** %5, align 8
  %64 = getelementptr inbounds [50 x i8], [50 x i8]* %6, i64 0, i64 0
  %65 = call i32 @base64_encode(i8* %63, i8* %64)
  %66 = load i8*, i8** @content, align 8
  %67 = load i8*, i8** @boundary, align 8
  %68 = call i32 @strcpy(i8* %66, i8* %67)
  %69 = load i8*, i8** @content, align 8
  %70 = call i32 @strcat(i8* %69, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0))
  %71 = load i8*, i8** @content, align 8
  %72 = load i8*, i8** @content, align 8
  %73 = call i32 @strlen(i8* %72)
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %71, i64 %74
  %76 = load i8*, i8** @boundary, align 8
  %77 = load i8*, i8** @wpassbufenc, align 8
  %78 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %75, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.2, i64 0, i64 0), i8* %76, i8* %77)
  %79 = load i8*, i8** @content, align 8
  %80 = load i8*, i8** @content, align 8
  %81 = call i32 @strlen(i8* %80)
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %79, i64 %82
  %84 = load i8*, i8** @boundary, align 8
  %85 = load i8*, i8** %10, align 8
  %86 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %83, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i8* %84, i8* %85)
  %87 = load i8*, i8** @content, align 8
  %88 = load i8*, i8** @content, align 8
  %89 = call i32 @strlen(i8* %88)
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i8, i8* %87, i64 %90
  %92 = load i8*, i8** @boundary, align 8
  %93 = getelementptr inbounds [50 x i8], [50 x i8]* %6, i64 0, i64 0
  %94 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %91, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.4, i64 0, i64 0), i8* %92, i8* %93)
  %95 = load i8*, i8** @content, align 8
  %96 = load i8*, i8** @content, align 8
  %97 = call i32 @strlen(i8* %96)
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i8, i8* %95, i64 %98
  %100 = load i8*, i8** @boundary, align 8
  %101 = load i8*, i8** %8, align 8
  %102 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %99, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i8* %100, i8* %101)
  %103 = call i32 (...) @is_there_attribute()
  store i32 %103, i32* %14, align 4
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %105, label %134

105:                                              ; preds = %56
  store i32 0, i32* %15, align 4
  br label %106

106:                                              ; preds = %130, %105
  %107 = load i32, i32* %15, align 4
  %108 = load i32, i32* %14, align 4
  %109 = icmp slt i32 %107, %108
  br i1 %109, label %110, label %133

110:                                              ; preds = %106
  %111 = load i8*, i8** @content, align 8
  %112 = load i8*, i8** @content, align 8
  %113 = call i32 @strlen(i8* %112)
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i8, i8* %111, i64 %114
  %116 = load i8*, i8** @boundary, align 8
  %117 = load %struct.TYPE_4__*, %struct.TYPE_4__** @MISSED, align 8
  %118 = load i32, i32* %15, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %117, i64 %119
  %121 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %120, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  %123 = load %struct.TYPE_3__*, %struct.TYPE_3__** @TRASH, align 8
  %124 = load i32, i32* %15, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %123, i64 %125
  %127 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %126, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %115, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.6, i64 0, i64 0), i8* %116, i8* %122, i8* %128)
  br label %130

130:                                              ; preds = %110
  %131 = load i32, i32* %15, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %15, align 4
  br label %106

133:                                              ; preds = %106
  br label %134

134:                                              ; preds = %133, %56
  %135 = load i8*, i8** @content, align 8
  %136 = load i8*, i8** @content, align 8
  %137 = call i32 @strlen(i8* %136)
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i8, i8* %135, i64 %138
  %140 = load i8*, i8** @boundary, align 8
  %141 = load i8*, i8** %11, align 8
  %142 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %139, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i8* %140, i8* %141)
  %143 = load i8*, i8** @content, align 8
  %144 = load i8*, i8** @content, align 8
  %145 = call i32 @strlen(i8* %144)
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8, i8* %143, i64 %146
  %148 = load i8*, i8** @boundary, align 8
  %149 = load i8*, i8** %7, align 8
  %150 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %147, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.8, i64 0, i64 0), i8* %148, i8* %149)
  %151 = load i32, i32* %13, align 4
  %152 = icmp ne i32 %151, 0
  br i1 %152, label %153, label %162

153:                                              ; preds = %134
  %154 = load i8*, i8** @content, align 8
  %155 = load i8*, i8** @content, align 8
  %156 = call i32 @strlen(i8* %155)
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i8, i8* %154, i64 %157
  %159 = load i8*, i8** @boundary, align 8
  %160 = load i8*, i8** %9, align 8
  %161 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %158, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.9, i64 0, i64 0), i8* %159, i8* %160)
  br label %162

162:                                              ; preds = %153, %134
  %163 = load i8*, i8** @content, align 8
  %164 = load i8*, i8** @content, align 8
  %165 = call i32 @strlen(i8* %164)
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i8, i8* %163, i64 %166
  %168 = load i8*, i8** @boundary, align 8
  %169 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %167, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i8* %168)
  %170 = load i8*, i8** @content, align 8
  %171 = call i32 @strlen(i8* %170)
  %172 = sext i32 %171 to i64
  store i64 %172, i64* @content_length, align 8
  %173 = load i8*, i8** @content, align 8
  %174 = load i64, i64* @content_length, align 8
  %175 = getelementptr inbounds i8, i8* %173, i64 %174
  store i8 0, i8* %175, align 1
  %176 = load i8*, i8** %12, align 8
  ret i8* %176
}

declare dso_local i32 @sprintf(i8*, i8*, i8*, ...) #1

declare dso_local i8* @make_random_boundary(...) #1

declare dso_local i32 @PRINTINFO(i32, i32) #1

declare dso_local i32 @base64_encode(i8*, i8*) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @is_there_attribute(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
