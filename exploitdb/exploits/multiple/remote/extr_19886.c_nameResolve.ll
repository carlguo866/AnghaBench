; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_19886.c_nameResolve.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_19886.c_nameResolve.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.in_addr = type { i32 }
%struct.hostent = type { i32, i32 }

@.str = private unnamed_addr constant [28 x i8] c"Name Resolution Error:`%s`\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @nameResolve(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.in_addr, align 4
  %4 = alloca %struct.hostent*, align 8
  store i8* %0, i8** %2, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = call i32 @inet_addr(i8* %5)
  %7 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %3, i32 0, i32 0
  store i32 %6, i32* %7, align 4
  %8 = icmp eq i32 %6, -1
  br i1 %8, label %9, label %27

9:                                                ; preds = %1
  %10 = load i8*, i8** %2, align 8
  %11 = call %struct.hostent* @gethostbyname(i8* %10)
  store %struct.hostent* %11, %struct.hostent** %4, align 8
  %12 = icmp ne %struct.hostent* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = load i8*, i8** %2, align 8
  %15 = call i32 @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i8* %14)
  %16 = call i32 @exit(i32 0) #3
  unreachable

17:                                               ; preds = %9
  %18 = load %struct.hostent*, %struct.hostent** %4, align 8
  %19 = getelementptr inbounds %struct.hostent, %struct.hostent* %18, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %3, i32 0, i32 0
  %22 = bitcast i32* %21 to i8*
  %23 = load %struct.hostent*, %struct.hostent** %4, align 8
  %24 = getelementptr inbounds %struct.hostent, %struct.hostent* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = call i32 @bcopy(i32 %20, i8* %22, i32 %25)
  br label %27

27:                                               ; preds = %17, %1
  %28 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %3, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  ret i64 %30
}

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

declare dso_local i32 @printf(i8*, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @bcopy(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
