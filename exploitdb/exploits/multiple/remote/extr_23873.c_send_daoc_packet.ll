; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_23873.c_send_daoc_packet.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_23873.c_send_daoc_packet.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_6__ = type { i32, i64 }
%struct.daoc_packet = type { %struct.TYPE_5__, %struct.TYPE_4__ }
%struct.TYPE_5__ = type { i32, i8* }
%struct.TYPE_4__ = type { i8, i8, i8* }

@client_sock_state = common dso_local global %struct.TYPE_6__ zeroinitializer, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @send_daoc_packet(i32 %0, i8* %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.daoc_packet*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %11 = load i32, i32* %6, align 4
  %12 = add nsw i32 %11, 2
  store i32 %12, i32* %9, align 4
  %13 = load i32, i32* %9, align 4
  %14 = sext i32 %13 to i64
  %15 = add i64 %14, 4
  %16 = trunc i64 %15 to i32
  store i32 %16, i32* %10, align 4
  %17 = load i32, i32* %10, align 4
  %18 = call %struct.daoc_packet* @malloc(i32 %17)
  store %struct.daoc_packet* %18, %struct.daoc_packet** %7, align 8
  %19 = load %struct.daoc_packet*, %struct.daoc_packet** %7, align 8
  %20 = getelementptr inbounds %struct.daoc_packet, %struct.daoc_packet* %19, i32 0, i32 1
  %21 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %20, i32 0, i32 0
  store i8 27, i8* %21, align 8
  %22 = load %struct.daoc_packet*, %struct.daoc_packet** %7, align 8
  %23 = getelementptr inbounds %struct.daoc_packet, %struct.daoc_packet* %22, i32 0, i32 1
  %24 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %23, i32 0, i32 1
  store i8 27, i8* %24, align 1
  %25 = load i32, i32* %9, align 4
  %26 = call i8* @htons(i32 %25)
  %27 = load %struct.daoc_packet*, %struct.daoc_packet** %7, align 8
  %28 = getelementptr inbounds %struct.daoc_packet, %struct.daoc_packet* %27, i32 0, i32 1
  %29 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %28, i32 0, i32 2
  store i8* %26, i8** %29, align 8
  %30 = load i32, i32* %4, align 4
  %31 = call i8* @htons(i32 %30)
  %32 = load %struct.daoc_packet*, %struct.daoc_packet** %7, align 8
  %33 = getelementptr inbounds %struct.daoc_packet, %struct.daoc_packet* %32, i32 0, i32 0
  %34 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %33, i32 0, i32 1
  store i8* %31, i8** %34, align 8
  %35 = load %struct.daoc_packet*, %struct.daoc_packet** %7, align 8
  %36 = getelementptr inbounds %struct.daoc_packet, %struct.daoc_packet* %35, i32 0, i32 0
  %37 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %36, i32 0, i32 0
  %38 = load i8*, i8** %5, align 8
  %39 = load i32, i32* %6, align 4
  %40 = call i32 @memcpy(i32* %37, i8* %38, i32 %39)
  %41 = load i64, i64* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @client_sock_state, i32 0, i32 1), align 8
  %42 = icmp ne i64 %41, 0
  br i1 %42, label %43, label %49

43:                                               ; preds = %3
  %44 = load %struct.daoc_packet*, %struct.daoc_packet** %7, align 8
  %45 = getelementptr inbounds %struct.daoc_packet, %struct.daoc_packet* %44, i32 0, i32 0
  %46 = bitcast %struct.TYPE_5__* %45 to i8*
  %47 = load i32, i32* %9, align 4
  %48 = call i32 @symcrypt_in_place(i8* %46, i32 %47)
  br label %49

49:                                               ; preds = %43, %3
  %50 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @client_sock_state, i32 0, i32 0), align 8
  %51 = load %struct.daoc_packet*, %struct.daoc_packet** %7, align 8
  %52 = load i32, i32* %10, align 4
  %53 = call i32 @send(i32 %50, %struct.daoc_packet* %51, i32 %52, i32 0)
  store i32 %53, i32* %8, align 4
  %54 = load %struct.daoc_packet*, %struct.daoc_packet** %7, align 8
  %55 = call i32 @free(%struct.daoc_packet* %54)
  %56 = load i32, i32* %8, align 4
  ret i32 %56
}

declare dso_local %struct.daoc_packet* @malloc(i32) #1

declare dso_local i8* @htons(i32) #1

declare dso_local i32 @memcpy(i32*, i8*, i32) #1

declare dso_local i32 @symcrypt_in_place(i8*, i32) #1

declare dso_local i32 @send(i32, %struct.daoc_packet*, i32, i32) #1

declare dso_local i32 @free(%struct.daoc_packet*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
