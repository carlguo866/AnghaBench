; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_32998.c_usage.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/remote/extr_32998.c_usage.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"[\0A\00", align 1
@.str.1 = private unnamed_addr constant [50 x i8] c"[ --server|-s <ip/dns>    - the server to target\0A\00", align 1
@.str.2 = private unnamed_addr constant [48 x i8] c"[ --port|-p   <port>      - the port to target\0A\00", align 1
@.str.3 = private unnamed_addr constant [51 x i8] c"[ --file|-f   <filename>  - file to write data to\0A\00", align 1
@.str.4 = private unnamed_addr constant [63 x i8] c"[ --bind|-b   <ip>        - bind to ip for exploiting clients\0A\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"[ --precmd|-c <n>         - send precmd buffer (STARTTLS)\0A\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"[\09\09\09    0 = SMTP\0A\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"[\09\09\09    1 = POP3\0A\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"[\09\09\09    2 = IMAP\0A\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"[ --loop|-l\09\09  - loop the exploit attempts\0A\00", align 1
@.str.10 = private unnamed_addr constant [51 x i8] c"[ --type|-t   <n>         - select exploit to try\0A\00", align 1
@.str.11 = private unnamed_addr constant [45 x i8] c"[                           0 = null length\0A\00", align 1
@.str.12 = private unnamed_addr constant [22 x i8] c"[\09\09\09    1 = max leak\0A\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"[\09\09\09    n = heartbeat payload_length\0A\00", align 1
@.str.14 = private unnamed_addr constant [41 x i8] c"[ --udp|-u               - use dtls/udp\0A\00", align 1
@.str.15 = private unnamed_addr constant [51 x i8] c"[ --verbose|-v            - output leak to screen\0A\00", align 1
@.str.16 = private unnamed_addr constant [41 x i8] c"[ --help|-h               - this output\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @usage() #0 {
  %1 = call i32 @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  %2 = call i32 @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i64 0, i64 0))
  %3 = call i32 @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.2, i64 0, i64 0))
  %4 = call i32 @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3, i64 0, i64 0))
  %5 = call i32 @printf(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.4, i64 0, i64 0))
  %6 = call i32 @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0))
  %7 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0))
  %8 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %9 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0))
  %10 = call i32 @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0))
  %11 = call i32 @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0))
  %12 = call i32 @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11, i64 0, i64 0))
  %13 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i64 0, i64 0))
  %14 = call i32 @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0))
  %15 = call i32 @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.14, i64 0, i64 0))
  %16 = call i32 @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  %17 = call i32 @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.15, i64 0, i64 0))
  %18 = call i32 @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i64 0, i64 0))
  %19 = call i32 @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  %20 = call i32 @exit(i32 0) #3
  unreachable
}

declare dso_local i32 @printf(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
