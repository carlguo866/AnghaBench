; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_948.c_ValidateArgs.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_948.c_ValidateArgs.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@iToPort = common dso_local global i8* null, align 8
@DEFAULT_PORT = common dso_local global i8* null, align 8
@iFromPort = common dso_local global i8* null, align 8
@DEFAULT_IP = common dso_local global i8* null, align 8
@dwToIP = common dso_local global i8* null, align 8
@dwFromIP = common dso_local global i8* null, align 8
@DEFAULT_COUNT = common dso_local global i8* null, align 8
@dwCount = common dso_local global i8* null, align 8
@Attack = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ValidateArgs(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  store i8* null, i8** @iToPort, align 8
  %6 = load i8*, i8** @DEFAULT_PORT, align 8
  store i8* %6, i8** @iFromPort, align 8
  %7 = load i8*, i8** @DEFAULT_IP, align 8
  %8 = call i8* @inet_addr(i8* %7)
  store i8* %8, i8** @dwToIP, align 8
  %9 = load i8*, i8** @DEFAULT_IP, align 8
  %10 = call i8* @inet_addr(i8* %9)
  store i8* %10, i8** @dwFromIP, align 8
  %11 = load i8*, i8** @DEFAULT_COUNT, align 8
  store i8* %11, i8** @dwCount, align 8
  store i32 1, i32* @Attack, align 4
  store i32 1, i32* %5, align 4
  br label %12

12:                                               ; preds = %196, %2
  %13 = load i32, i32* %5, align 4
  %14 = load i32, i32* %3, align 4
  %15 = icmp slt i32 %13, %14
  br i1 %15, label %16, label %199

16:                                               ; preds = %12
  %17 = load i8**, i8*** %4, align 8
  %18 = load i32, i32* %5, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8*, i8** %17, i64 %19
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = icmp eq i32 %24, 45
  br i1 %25, label %36, label %26

26:                                               ; preds = %16
  %27 = load i8**, i8*** %4, align 8
  %28 = load i32, i32* %5, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8*, i8** %27, i64 %29
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = load i8, i8* %32, align 1
  %34 = sext i8 %33 to i32
  %35 = icmp eq i32 %34, 47
  br i1 %35, label %36, label %195

36:                                               ; preds = %26, %16
  %37 = load i8**, i8*** %4, align 8
  %38 = load i32, i32* %5, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8*, i8** %37, i64 %39
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds i8, i8* %41, i64 1
  %43 = load i8, i8* %42, align 1
  %44 = call i32 @tolower(i8 signext %43)
  switch i32 %44, label %189 [
    i32 102, label %45
    i32 116, label %94
    i32 110, label %143
    i32 97, label %160
  ]

45:                                               ; preds = %36
  %46 = load i8**, i8*** %4, align 8
  %47 = load i32, i32* %5, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8*, i8** %46, i64 %48
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 2
  %52 = load i8, i8* %51, align 1
  %53 = call i32 @tolower(i8 signext %52)
  switch i32 %53, label %88 [
    i32 112, label %54
    i32 105, label %71
  ]

54:                                               ; preds = %45
  %55 = load i8**, i8*** %4, align 8
  %56 = load i32, i32* %5, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8*, i8** %55, i64 %57
  %59 = load i8*, i8** %58, align 8
  %60 = call i32 @strlen(i8* %59)
  %61 = icmp sgt i32 %60, 4
  br i1 %61, label %62, label %70

62:                                               ; preds = %54
  %63 = load i8**, i8*** %4, align 8
  %64 = load i32, i32* %5, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8*, i8** %63, i64 %65
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr inbounds i8, i8* %67, i64 4
  %69 = call i8* @atoi(i8* %68)
  store i8* %69, i8** @iFromPort, align 8
  br label %70

70:                                               ; preds = %62, %54
  br label %93

71:                                               ; preds = %45
  %72 = load i8**, i8*** %4, align 8
  %73 = load i32, i32* %5, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8*, i8** %72, i64 %74
  %76 = load i8*, i8** %75, align 8
  %77 = call i32 @strlen(i8* %76)
  %78 = icmp sgt i32 %77, 4
  br i1 %78, label %79, label %87

79:                                               ; preds = %71
  %80 = load i8**, i8*** %4, align 8
  %81 = load i32, i32* %5, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8*, i8** %80, i64 %82
  %84 = load i8*, i8** %83, align 8
  %85 = getelementptr inbounds i8, i8* %84, i64 4
  %86 = call i8* @inet_addr(i8* %85)
  store i8* %86, i8** @dwFromIP, align 8
  br label %87

87:                                               ; preds = %79, %71
  br label %93

88:                                               ; preds = %45
  %89 = load i8**, i8*** %4, align 8
  %90 = getelementptr inbounds i8*, i8** %89, i64 0
  %91 = load i8*, i8** %90, align 8
  %92 = call i32 @usage(i8* %91)
  br label %93

93:                                               ; preds = %88, %87, %70
  br label %194

94:                                               ; preds = %36
  %95 = load i8**, i8*** %4, align 8
  %96 = load i32, i32* %5, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8*, i8** %95, i64 %97
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds i8, i8* %99, i64 2
  %101 = load i8, i8* %100, align 1
  %102 = call i32 @tolower(i8 signext %101)
  switch i32 %102, label %137 [
    i32 112, label %103
    i32 105, label %120
  ]

103:                                              ; preds = %94
  %104 = load i8**, i8*** %4, align 8
  %105 = load i32, i32* %5, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i8*, i8** %104, i64 %106
  %108 = load i8*, i8** %107, align 8
  %109 = call i32 @strlen(i8* %108)
  %110 = icmp sgt i32 %109, 4
  br i1 %110, label %111, label %119

111:                                              ; preds = %103
  %112 = load i8**, i8*** %4, align 8
  %113 = load i32, i32* %5, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i8*, i8** %112, i64 %114
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds i8, i8* %116, i64 4
  %118 = call i8* @atoi(i8* %117)
  store i8* %118, i8** @iToPort, align 8
  br label %119

119:                                              ; preds = %111, %103
  br label %142

120:                                              ; preds = %94
  %121 = load i8**, i8*** %4, align 8
  %122 = load i32, i32* %5, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i8*, i8** %121, i64 %123
  %125 = load i8*, i8** %124, align 8
  %126 = call i32 @strlen(i8* %125)
  %127 = icmp sgt i32 %126, 4
  br i1 %127, label %128, label %136

128:                                              ; preds = %120
  %129 = load i8**, i8*** %4, align 8
  %130 = load i32, i32* %5, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i8*, i8** %129, i64 %131
  %133 = load i8*, i8** %132, align 8
  %134 = getelementptr inbounds i8, i8* %133, i64 4
  %135 = call i8* @inet_addr(i8* %134)
  store i8* %135, i8** @dwToIP, align 8
  br label %136

136:                                              ; preds = %128, %120
  br label %142

137:                                              ; preds = %94
  %138 = load i8**, i8*** %4, align 8
  %139 = getelementptr inbounds i8*, i8** %138, i64 0
  %140 = load i8*, i8** %139, align 8
  %141 = call i32 @usage(i8* %140)
  br label %142

142:                                              ; preds = %137, %136, %119
  br label %194

143:                                              ; preds = %36
  %144 = load i8**, i8*** %4, align 8
  %145 = load i32, i32* %5, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8*, i8** %144, i64 %146
  %148 = load i8*, i8** %147, align 8
  %149 = call i32 @strlen(i8* %148)
  %150 = icmp sgt i32 %149, 3
  br i1 %150, label %151, label %159

151:                                              ; preds = %143
  %152 = load i8**, i8*** %4, align 8
  %153 = load i32, i32* %5, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds i8*, i8** %152, i64 %154
  %156 = load i8*, i8** %155, align 8
  %157 = getelementptr inbounds i8, i8* %156, i64 3
  %158 = call i8* @atol(i8* %157)
  store i8* %158, i8** @dwCount, align 8
  br label %159

159:                                              ; preds = %151, %143
  br label %194

160:                                              ; preds = %36
  %161 = load i8**, i8*** %4, align 8
  %162 = load i32, i32* %5, align 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds i8*, i8** %161, i64 %163
  %165 = load i8*, i8** %164, align 8
  %166 = call i32 @strlen(i8* %165)
  %167 = icmp sgt i32 %166, 3
  br i1 %167, label %168, label %177

168:                                              ; preds = %160
  %169 = load i8**, i8*** %4, align 8
  %170 = load i32, i32* %5, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds i8*, i8** %169, i64 %171
  %173 = load i8*, i8** %172, align 8
  %174 = getelementptr inbounds i8, i8* %173, i64 3
  %175 = call i8* @atol(i8* %174)
  %176 = ptrtoint i8* %175 to i32
  store i32 %176, i32* @Attack, align 4
  br label %177

177:                                              ; preds = %168, %160
  %178 = load i32, i32* @Attack, align 4
  %179 = icmp sgt i32 %178, 3
  br i1 %179, label %183, label %180

180:                                              ; preds = %177
  %181 = load i32, i32* @Attack, align 4
  %182 = icmp slt i32 %181, 1
  br i1 %182, label %183, label %188

183:                                              ; preds = %180, %177
  %184 = load i8**, i8*** %4, align 8
  %185 = getelementptr inbounds i8*, i8** %184, i64 0
  %186 = load i8*, i8** %185, align 8
  %187 = call i32 @usage(i8* %186)
  br label %188

188:                                              ; preds = %183, %180
  br label %194

189:                                              ; preds = %36
  %190 = load i8**, i8*** %4, align 8
  %191 = getelementptr inbounds i8*, i8** %190, i64 0
  %192 = load i8*, i8** %191, align 8
  %193 = call i32 @usage(i8* %192)
  br label %194

194:                                              ; preds = %189, %188, %159, %142, %93
  br label %195

195:                                              ; preds = %194, %26
  br label %196

196:                                              ; preds = %195
  %197 = load i32, i32* %5, align 4
  %198 = add nsw i32 %197, 1
  store i32 %198, i32* %5, align 4
  br label %12

199:                                              ; preds = %12
  ret void
}

declare dso_local i8* @inet_addr(i8*) #1

declare dso_local i32 @tolower(i8 signext) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i8* @atoi(i8*) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i8* @atol(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
