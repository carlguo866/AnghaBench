; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_32086.c_fake_players_socket.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_32086.c_fake_players_socket.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@fake_players_socket.socks = internal global [64 x i32] zeroinitializer, align 16
@fake_players_socket.socksp = internal global i32 0, align 4
@fake_players_socket.init = internal global i32 1, align 4
@MAXFAKESOCKS = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fake_players_socket(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %4 = load i32, i32* @fake_players_socket.init, align 4
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %1
  %7 = load i32, i32* %2, align 4
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %21

9:                                                ; preds = %6, %1
  store i32 0, i32* %3, align 4
  br label %10

10:                                               ; preds = %17, %9
  %11 = load i32, i32* %3, align 4
  %12 = icmp slt i32 %11, 64
  br i1 %12, label %13, label %20

13:                                               ; preds = %10
  %14 = load i32, i32* %3, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [64 x i32], [64 x i32]* @fake_players_socket.socks, i64 0, i64 %15
  store i32 -1, i32* %16, align 4
  br label %17

17:                                               ; preds = %13
  %18 = load i32, i32* %3, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %3, align 4
  br label %10

20:                                               ; preds = %10
  store i32 0, i32* @fake_players_socket.socksp, align 4
  store i32 0, i32* @fake_players_socket.init, align 4
  br label %44

21:                                               ; preds = %6
  %22 = load i32, i32* @fake_players_socket.socksp, align 4
  %23 = icmp sge i32 %22, 64
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  store i32 0, i32* @fake_players_socket.socksp, align 4
  br label %25

25:                                               ; preds = %24, %21
  %26 = load i32, i32* @fake_players_socket.socksp, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [64 x i32], [64 x i32]* @fake_players_socket.socks, i64 0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = icmp sge i32 %29, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %25
  %32 = load i32, i32* @fake_players_socket.socksp, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [64 x i32], [64 x i32]* @fake_players_socket.socks, i64 0, i64 %33
  %35 = load i32, i32* %34, align 4
  %36 = call i32 @close(i32 %35)
  br label %37

37:                                               ; preds = %31, %25
  %38 = load i32, i32* %2, align 4
  %39 = load i32, i32* @fake_players_socket.socksp, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds [64 x i32], [64 x i32]* @fake_players_socket.socks, i64 0, i64 %40
  store i32 %38, i32* %41, align 4
  %42 = load i32, i32* @fake_players_socket.socksp, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* @fake_players_socket.socksp, align 4
  br label %44

44:                                               ; preds = %37, %20
  ret void
}

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
