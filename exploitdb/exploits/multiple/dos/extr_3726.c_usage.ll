; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_3726.c_usage.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_3726.c_usage.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"               VVVVVVVVVVV                    VVVVVVVVVVV\0A\00", align 1
@.str.2 = private unnamed_addr constant [58 x i8] c"                VVVVV[ T34M B4B0 PROUDLY PRESENTS: ]VVVV\0A\00", align 1
@.str.3 = private unnamed_addr constant [58 x i8] c"                 VVVVVVVVVV                      VVVVVVV\0A\00", align 1
@.str.4 = private unnamed_addr constant [57 x i8] c"                  VVVVVVVVV   b4b0-ettercap.c   VVVVVVV\0A\00", align 1
@.str.5 = private unnamed_addr constant [63 x i8] c"       .    $&y    VVVVVVVVVV   ,p&   y&$  VVVVVVVVVV,a8888a,\0A\00", align 1
@.str.6 = private unnamed_addr constant [73 x i8] c"            $$'     VVVVVVVVVV,d$$$   $$' VVVVV .s$',8P\22'  `\22Y8,     . \0A\00", align 1
@.str.7 = private unnamed_addr constant [72 x i8] c"       yxxx.$$.xxxxxxxxxxxx ,d$\22`$$.x.$$.xxxxxxxx.,8P.xxxx.s`$$,.xxxg \0A\00", align 1
@.str.8 = private unnamed_addr constant [72 x i8] c"       $ P' $$,d$$Yba,    ,d$\22 d $$   $$,d$$Yba,  88      ,$.$$$    $ \0A\00", align 1
@.str.9 = private unnamed_addr constant [72 x i8] c"       $ '  $$P'  ,`$$a ,d$\22 ``\22 $$ , $$$P' ,`Y$a 88     ,s$,$$$  . $ \0A\00", align 1
@.str.10 = private unnamed_addr constant [72 x i8] c"       $    $$k   g Y$$ $$$$$$$$$$$$$ $$f   d d$$ `8b   ,$$'d$$' ,d $ \0A\00", align 1
@.str.11 = private unnamed_addr constant [76 x i8] c"       bxxx.$$$, '`,d$\22.xxxxxxxx.$$.x.$$b, ',a$$\22.x`8ba,,aad$$'.xxxxd.  . \0A\00", align 1
@.str.12 = private unnamed_addr constant [74 x i8] c"            s$Y\22Y$bd$P',yas.VVVV s$$z  $Y\22Y$$$P\22'     \22Y$$$$(headflux)$ \0A\00", align 1
@.str.13 = private unnamed_addr constant [50 x i8] c"                         VVVVVVVV      VVVVVVVV \0A\00", align 1
@.str.14 = private unnamed_addr constant [49 x i8] c"                          VVVVVVVV    VVVVVVVV \0A\00", align 1
@.str.15 = private unnamed_addr constant [48 x i8] c"  ettercap-ng v0.7.3       VVVVVVVV  VVVVVVVV \0A\00", align 1
@.str.16 = private unnamed_addr constant [47 x i8] c"  Denial of Service         VVVVVVVVVVVVVVVV \0A\00", align 1
@.str.17 = private unnamed_addr constant [46 x i8] c"    by EvilRabbi             VVVVVVVVVVVVVV \0A\00", align 1
@.str.18 = private unnamed_addr constant [45 x i8] c" <evilrabbi[@]gmail.com       VVVVVVVVVVVV \0A\00", align 1
@.str.19 = private unnamed_addr constant [44 x i8] c"                               VVVVVVVVVV \0A\00", align 1
@.str.20 = private unnamed_addr constant [43 x i8] c"                                VVVVVVVV \0A\00", align 1
@.str.21 = private unnamed_addr constant [42 x i8] c"./b4b0-ettercap  <victim ip>     VVVVVV \0A\00", align 1
@.str.22 = private unnamed_addr constant [41 x i8] c"                                  VVVV \0A\00", align 1
@.str.23 = private unnamed_addr constant [40 x i8] c"                                   VV \0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @usage() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  br label %2

2:                                                ; preds = %7, %0
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 100
  br i1 %4, label %5, label %10

5:                                                ; preds = %2
  %6 = call i32 @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %7

7:                                                ; preds = %5
  %8 = load i32, i32* %1, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %1, align 4
  br label %2

10:                                               ; preds = %2
  %11 = call i32 @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0))
  %12 = call i32 @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.2, i64 0, i64 0))
  %13 = call i32 @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0))
  %14 = call i32 @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4, i64 0, i64 0))
  %15 = call i32 @printf(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.5, i64 0, i64 0))
  %16 = call i32 @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.6, i64 0, i64 0))
  %17 = call i32 @printf(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.7, i64 0, i64 0))
  %18 = call i32 @printf(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.8, i64 0, i64 0))
  %19 = call i32 @printf(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.9, i64 0, i64 0))
  %20 = call i32 @printf(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.10, i64 0, i64 0))
  %21 = call i32 @printf(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.11, i64 0, i64 0))
  %22 = call i32 @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.12, i64 0, i64 0))
  %23 = call i32 @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.13, i64 0, i64 0))
  %24 = call i32 @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0))
  %25 = call i32 @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.15, i64 0, i64 0))
  %26 = call i32 @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.16, i64 0, i64 0))
  %27 = call i32 @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.17, i64 0, i64 0))
  %28 = call i32 @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.18, i64 0, i64 0))
  %29 = call i32 @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19, i64 0, i64 0))
  %30 = call i32 @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.20, i64 0, i64 0))
  %31 = call i32 @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.21, i64 0, i64 0))
  %32 = call i32 @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.22, i64 0, i64 0))
  %33 = call i32 @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0))
  ret void
}

declare dso_local i32 @printf(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
