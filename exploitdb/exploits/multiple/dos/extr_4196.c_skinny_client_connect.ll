; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_4196.c_skinny_client_connect.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_4196.c_skinny_client_connect.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.skinny_client = type { i32, i32, %struct.TYPE_4__, i32 }
%struct.TYPE_4__ = type { %struct.TYPE_3__, i32, i32 }
%struct.TYPE_3__ = type { i32 }
%struct.sockaddr = type { i32 }

@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@SKINNY_TCP_PORT = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [48 x i8] c"+++ UNABLE TO CONNECT TO REMOTE HOST 2000/TCP!\0A\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"+++ CONNECTION OK\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @skinny_client_connect(%struct.skinny_client* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.skinny_client*, align 8
  %4 = alloca i32, align 4
  store %struct.skinny_client* %0, %struct.skinny_client** %3, align 8
  %5 = load i32, i32* @AF_INET, align 4
  %6 = load i32, i32* @SOCK_STREAM, align 4
  %7 = call i32 @socket(i32 %5, i32 %6, i32 0)
  %8 = load %struct.skinny_client*, %struct.skinny_client** %3, align 8
  %9 = getelementptr inbounds %struct.skinny_client, %struct.skinny_client* %8, i32 0, i32 0
  store i32 %7, i32* %9, align 4
  %10 = load %struct.skinny_client*, %struct.skinny_client** %3, align 8
  %11 = getelementptr inbounds %struct.skinny_client, %struct.skinny_client* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  store i32 -1, i32* %2, align 4
  br label %48

15:                                               ; preds = %1
  %16 = load i32, i32* @AF_INET, align 4
  %17 = load %struct.skinny_client*, %struct.skinny_client** %3, align 8
  %18 = getelementptr inbounds %struct.skinny_client, %struct.skinny_client* %17, i32 0, i32 2
  %19 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %18, i32 0, i32 2
  store i32 %16, i32* %19, align 4
  %20 = load i32, i32* @SKINNY_TCP_PORT, align 4
  %21 = call i32 @htons(i32 %20)
  %22 = load %struct.skinny_client*, %struct.skinny_client** %3, align 8
  %23 = getelementptr inbounds %struct.skinny_client, %struct.skinny_client* %22, i32 0, i32 2
  %24 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %23, i32 0, i32 1
  store i32 %21, i32* %24, align 4
  %25 = load %struct.skinny_client*, %struct.skinny_client** %3, align 8
  %26 = getelementptr inbounds %struct.skinny_client, %struct.skinny_client* %25, i32 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = call i32 @inet_addr(i32 %27)
  %29 = load %struct.skinny_client*, %struct.skinny_client** %3, align 8
  %30 = getelementptr inbounds %struct.skinny_client, %struct.skinny_client* %29, i32 0, i32 2
  %31 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %30, i32 0, i32 0
  %32 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %31, i32 0, i32 0
  store i32 %28, i32* %32, align 4
  %33 = load %struct.skinny_client*, %struct.skinny_client** %3, align 8
  %34 = getelementptr inbounds %struct.skinny_client, %struct.skinny_client* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = load %struct.skinny_client*, %struct.skinny_client** %3, align 8
  %37 = getelementptr inbounds %struct.skinny_client, %struct.skinny_client* %36, i32 0, i32 2
  %38 = bitcast %struct.TYPE_4__* %37 to %struct.sockaddr*
  %39 = call i32 @connect(i32 %35, %struct.sockaddr* %38, i32 4)
  store i32 %39, i32* %4, align 4
  %40 = load i32, i32* %4, align 4
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %15
  %43 = call i32 @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0))
  store i32 -1, i32* %2, align 4
  br label %48

44:                                               ; preds = %15
  %45 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0))
  %46 = load %struct.skinny_client*, %struct.skinny_client** %3, align 8
  %47 = getelementptr inbounds %struct.skinny_client, %struct.skinny_client* %46, i32 0, i32 1
  store i32 1, i32* %47, align 4
  store i32 0, i32* %2, align 4
  br label %48

48:                                               ; preds = %44, %42, %14
  %49 = load i32, i32* %2, align 4
  ret i32 %49
}

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @inet_addr(i32) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @printf(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
