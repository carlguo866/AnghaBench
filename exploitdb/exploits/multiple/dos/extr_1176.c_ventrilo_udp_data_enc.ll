; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_1176.c_ventrilo_udp_data_enc.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_1176.c_ventrilo_udp_data_enc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@VENTRILO_RAND = common dso_local global i32 0, align 4
@ventrilo_udp_encdata_data = common dso_local global i64* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @ventrilo_udp_data_enc(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i16, align 2
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %9 = load i32, i32* @VENTRILO_RAND, align 4
  %10 = mul nsw i32 %9, 214013
  %11 = add nsw i32 %10, 2531011
  %12 = ashr i32 %11, 16
  %13 = and i32 %12, 32767
  %14 = trunc i32 %13 to i16
  store i16 %14, i16* %6, align 2
  %15 = load i16, i16* %6, align 2
  %16 = trunc i16 %15 to i8
  store i8 %16, i8* %7, align 1
  %17 = load i16, i16* %6, align 2
  %18 = zext i16 %17 to i32
  %19 = ashr i32 %18, 8
  %20 = trunc i32 %19 to i8
  store i8 %20, i8* %8, align 1
  %21 = load i8, i8* %8, align 1
  %22 = icmp ne i8 %21, 0
  br i1 %22, label %31, label %23

23:                                               ; preds = %2
  store i8 1, i8* %8, align 1
  %24 = load i8, i8* %8, align 1
  %25 = zext i8 %24 to i32
  %26 = shl i32 %25, 8
  %27 = load i16, i16* %6, align 2
  %28 = zext i16 %27 to i32
  %29 = or i32 %28, %26
  %30 = trunc i32 %29 to i16
  store i16 %30, i16* %6, align 2
  br label %31

31:                                               ; preds = %23, %2
  store i32 0, i32* %5, align 4
  br label %32

32:                                               ; preds = %60, %31
  %33 = load i32, i32* %5, align 4
  %34 = load i32, i32* %4, align 4
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %36, label %63

36:                                               ; preds = %32
  %37 = load i64*, i64** @ventrilo_udp_encdata_data, align 8
  %38 = load i8, i8* %8, align 1
  %39 = zext i8 %38 to i64
  %40 = getelementptr inbounds i64, i64* %37, i64 %39
  %41 = load i64, i64* %40, align 8
  %42 = load i32, i32* %5, align 4
  %43 = srem i32 %42, 72
  %44 = sext i32 %43 to i64
  %45 = add nsw i64 %41, %44
  %46 = load i8*, i8** %3, align 8
  %47 = load i32, i32* %5, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %46, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i64
  %52 = add nsw i64 %51, %45
  %53 = trunc i64 %52 to i8
  store i8 %53, i8* %49, align 1
  %54 = load i8, i8* %7, align 1
  %55 = zext i8 %54 to i32
  %56 = load i8, i8* %8, align 1
  %57 = zext i8 %56 to i32
  %58 = add nsw i32 %57, %55
  %59 = trunc i32 %58 to i8
  store i8 %59, i8* %8, align 1
  br label %60

60:                                               ; preds = %36
  %61 = load i32, i32* %5, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %5, align 4
  br label %32

63:                                               ; preds = %32
  %64 = load i16, i16* %6, align 2
  ret i16 %64
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
