; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_1176.c_ventrilo_udp_data_dec.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_1176.c_ventrilo_udp_data_dec.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@ventrilo_udp_encdata_data = common dso_local global i64* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ventrilo_udp_data_dec(i8* %0, i32 %1, i16 zeroext %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i16, align 2
  %7 = alloca i32, align 4
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i16 %2, i16* %6, align 2
  %10 = load i16, i16* %6, align 2
  %11 = trunc i16 %10 to i8
  store i8 %11, i8* %8, align 1
  %12 = load i8, i8* %8, align 1
  %13 = icmp ne i8 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %3
  br label %51

15:                                               ; preds = %3
  %16 = load i16, i16* %6, align 2
  %17 = zext i16 %16 to i32
  %18 = ashr i32 %17, 8
  %19 = trunc i32 %18 to i8
  store i8 %19, i8* %9, align 1
  store i32 0, i32* %7, align 4
  br label %20

20:                                               ; preds = %48, %15
  %21 = load i32, i32* %7, align 4
  %22 = load i32, i32* %5, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %24, label %51

24:                                               ; preds = %20
  %25 = load i64*, i64** @ventrilo_udp_encdata_data, align 8
  %26 = load i8, i8* %9, align 1
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds i64, i64* %25, i64 %27
  %29 = load i64, i64* %28, align 8
  %30 = load i32, i32* %7, align 4
  %31 = srem i32 %30, 72
  %32 = sext i32 %31 to i64
  %33 = add nsw i64 %29, %32
  %34 = load i8*, i8** %4, align 8
  %35 = load i32, i32* %7, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %34, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = sub nsw i64 %39, %33
  %41 = trunc i64 %40 to i8
  store i8 %41, i8* %37, align 1
  %42 = load i8, i8* %8, align 1
  %43 = zext i8 %42 to i32
  %44 = load i8, i8* %9, align 1
  %45 = zext i8 %44 to i32
  %46 = add nsw i32 %45, %43
  %47 = trunc i32 %46 to i8
  store i8 %47, i8* %9, align 1
  br label %48

48:                                               ; preds = %24
  %49 = load i32, i32* %7, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %7, align 4
  br label %20

51:                                               ; preds = %14, %20
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
