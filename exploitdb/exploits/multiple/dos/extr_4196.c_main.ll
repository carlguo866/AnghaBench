; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_4196.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_4196.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.skinny_client = type { i64* }

@.str = private unnamed_addr constant [3 x i8] c"-h\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"+++ You must run with the -h option\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.skinny_client*, align 8
  %8 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %9 = call %struct.skinny_client* @malloc(i32 8)
  store %struct.skinny_client* %9, %struct.skinny_client** %7, align 8
  %10 = load %struct.skinny_client*, %struct.skinny_client** %7, align 8
  %11 = call i32 @memset(%struct.skinny_client* %10, i32 0, i32 8)
  store i32 0, i32* %6, align 4
  br label %12

12:                                               ; preds = %36, %2
  %13 = load i32, i32* %6, align 4
  %14 = load i32, i32* %4, align 4
  %15 = icmp slt i32 %13, %14
  br i1 %15, label %16, label %39

16:                                               ; preds = %12
  %17 = load i8**, i8*** %5, align 8
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8*, i8** %17, i64 %19
  %21 = load i8*, i8** %20, align 8
  %22 = call i32 @strcmp(i8* %21, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %35, label %24

24:                                               ; preds = %16
  %25 = load %struct.skinny_client*, %struct.skinny_client** %7, align 8
  %26 = getelementptr inbounds %struct.skinny_client, %struct.skinny_client* %25, i32 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = load i8**, i8*** %5, align 8
  %29 = load i32, i32* %6, align 4
  %30 = add nsw i32 %29, 1
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8*, i8** %28, i64 %31
  %33 = load i8*, i8** %32, align 8
  %34 = call i32 @strcpy(i64* %27, i8* %33)
  br label %35

35:                                               ; preds = %24, %16
  br label %36

36:                                               ; preds = %35
  %37 = load i32, i32* %6, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %6, align 4
  br label %12

39:                                               ; preds = %12
  %40 = load %struct.skinny_client*, %struct.skinny_client** %7, align 8
  %41 = getelementptr inbounds %struct.skinny_client, %struct.skinny_client* %40, i32 0, i32 0
  %42 = load i64*, i64** %41, align 8
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = call i32 @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %52

47:                                               ; preds = %39
  %48 = load %struct.skinny_client*, %struct.skinny_client** %7, align 8
  %49 = call i32 @skinny_client_connect(%struct.skinny_client* %48)
  %50 = load %struct.skinny_client*, %struct.skinny_client** %7, align 8
  %51 = call i32 @skinny_client_register(%struct.skinny_client* %50)
  store i32 0, i32* %3, align 4
  br label %52

52:                                               ; preds = %47, %45
  %53 = load i32, i32* %3, align 4
  ret i32 %53
}

declare dso_local %struct.skinny_client* @malloc(i32) #1

declare dso_local i32 @memset(%struct.skinny_client*, i32, i32) #1

declare dso_local i32 @strcmp(i8*, i8*) #1

declare dso_local i32 @strcpy(i64*, i8*) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @skinny_client_connect(%struct.skinny_client*) #1

declare dso_local i32 @skinny_client_register(%struct.skinny_client*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
