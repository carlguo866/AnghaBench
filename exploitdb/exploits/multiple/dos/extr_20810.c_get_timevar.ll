; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_20810.c_get_timevar.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_20810.c_get_timevar.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@debug = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [29 x i8] c"evaluating %s, u: %c, p: %c\0A\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"factor is %u\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_timevar(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 1000, i32* %10, align 4
  %11 = load i8*, i8** %3, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  store i32 0, i32* %2, align 4
  br label %141

14:                                               ; preds = %1
  %15 = load i8*, i8** %3, align 8
  %16 = call i32 @strlen(i8* %15)
  store i32 %16, i32* %7, align 4
  %17 = load i32, i32* %7, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %14
  store i32 0, i32* %2, align 4
  br label %141

20:                                               ; preds = %14
  store i8 0, i8* %4, align 1
  store i8 0, i8* %5, align 1
  %21 = load i8*, i8** %3, align 8
  %22 = load i32, i32* %7, align 4
  %23 = sub i32 %22, 1
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %21, i64 %24
  %26 = load i8, i8* %25, align 1
  store i8 %26, i8* %5, align 1
  %27 = load i32, i32* %7, align 4
  %28 = icmp uge i32 %27, 2
  br i1 %28, label %29, label %46

29:                                               ; preds = %20
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %7, align 4
  %32 = sub i32 %31, 2
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %30, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = call i32 @isdigit(i32 %36) #3
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %46, label %39

39:                                               ; preds = %29
  %40 = load i8*, i8** %3, align 8
  %41 = load i32, i32* %7, align 4
  %42 = sub i32 %41, 2
  %43 = zext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %40, i64 %43
  %45 = load i8, i8* %44, align 1
  store i8 %45, i8* %4, align 1
  br label %46

46:                                               ; preds = %39, %29, %20
  %47 = load i8, i8* %4, align 1
  %48 = sext i8 %47 to i32
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = load i8, i8* %5, align 1
  %52 = sext i8 %51 to i32
  %53 = icmp eq i32 %52, 115
  br i1 %53, label %54, label %56

54:                                               ; preds = %50
  %55 = load i8, i8* %4, align 1
  store i8 %55, i8* %5, align 1
  br label %62

56:                                               ; preds = %50, %46
  %57 = load i8, i8* %4, align 1
  %58 = icmp ne i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = load i8, i8* %5, align 1
  store i8 %60, i8* %4, align 1
  br label %61

61:                                               ; preds = %59, %56
  br label %62

62:                                               ; preds = %61, %54
  %63 = load i32, i32* @debug, align 4
  %64 = icmp sgt i32 %63, 3
  br i1 %64, label %65, label %72

65:                                               ; preds = %62
  %66 = load i8*, i8** %3, align 8
  %67 = load i8, i8* %5, align 1
  %68 = sext i8 %67 to i32
  %69 = load i8, i8* %4, align 1
  %70 = sext i8 %69 to i32
  %71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* %66, i32 %68, i32 %70)
  br label %72

72:                                               ; preds = %65, %62
  %73 = load i8, i8* %5, align 1
  %74 = sext i8 %73 to i32
  %75 = icmp eq i32 %74, 117
  br i1 %75, label %76, label %77

76:                                               ; preds = %72
  store i32 1, i32* %10, align 4
  br label %89

77:                                               ; preds = %72
  %78 = load i8, i8* %5, align 1
  %79 = sext i8 %78 to i32
  %80 = icmp eq i32 %79, 109
  br i1 %80, label %81, label %82

81:                                               ; preds = %77
  store i32 1000, i32* %10, align 4
  br label %88

82:                                               ; preds = %77
  %83 = load i8, i8* %5, align 1
  %84 = sext i8 %83 to i32
  %85 = icmp eq i32 %84, 115
  br i1 %85, label %86, label %87

86:                                               ; preds = %82
  store i32 1000000, i32* %10, align 4
  br label %87

87:                                               ; preds = %86, %82
  br label %88

88:                                               ; preds = %87, %81
  br label %89

89:                                               ; preds = %88, %76
  %90 = load i32, i32* @debug, align 4
  %91 = icmp sgt i32 %90, 3
  br i1 %91, label %92, label %95

92:                                               ; preds = %89
  %93 = load i32, i32* %10, align 4
  %94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i32 %93)
  br label %95

95:                                               ; preds = %92, %89
  %96 = load i8*, i8** %3, align 8
  %97 = call i32 @strtoul(i8* %96, i8** %6, i32 0)
  store i32 %97, i32* %8, align 4
  %98 = load i8*, i8** %6, align 8
  %99 = icmp ne i8* %98, null
  br i1 %99, label %100, label %112

100:                                              ; preds = %95
  %101 = load i8*, i8** %6, align 8
  %102 = load i8, i8* %101, align 1
  %103 = sext i8 %102 to i32
  %104 = icmp ne i32 %103, 46
  br i1 %104, label %112, label %105

105:                                              ; preds = %100
  %106 = load i8*, i8** %6, align 8
  %107 = call i32 @strlen(i8* %106)
  %108 = icmp slt i32 %107, 2
  br i1 %108, label %112, label %109

109:                                              ; preds = %105
  %110 = load i32, i32* %10, align 4
  %111 = icmp eq i32 %110, 1
  br i1 %111, label %112, label %116

112:                                              ; preds = %109, %105, %100, %95
  %113 = load i32, i32* %8, align 4
  %114 = load i32, i32* %10, align 4
  %115 = mul nsw i32 %113, %114
  store i32 %115, i32* %2, align 4
  br label %141

116:                                              ; preds = %109
  %117 = load i32, i32* %10, align 4
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %119, label %121

119:                                              ; preds = %116
  %120 = load i32, i32* %8, align 4
  store i32 %120, i32* %2, align 4
  br label %141

121:                                              ; preds = %116
  %122 = load i8*, i8** %6, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 1
  %124 = call i32 @strtoul(i8* %123, i8** null, i32 0)
  store i32 %124, i32* %9, align 4
  br label %125

125:                                              ; preds = %129, %121
  %126 = load i32, i32* %9, align 4
  %127 = load i32, i32* %10, align 4
  %128 = icmp sge i32 %126, %127
  br i1 %128, label %129, label %132

129:                                              ; preds = %125
  %130 = load i32, i32* %9, align 4
  %131 = sdiv i32 %130, 10
  store i32 %131, i32* %9, align 4
  br label %125

132:                                              ; preds = %125
  %133 = load i32, i32* %8, align 4
  %134 = load i32, i32* %10, align 4
  %135 = mul nsw i32 %133, %134
  %136 = load i32, i32* %9, align 4
  %137 = load i32, i32* %10, align 4
  %138 = sdiv i32 %137, 10
  %139 = mul nsw i32 %136, %138
  %140 = add nsw i32 %135, %139
  store i32 %140, i32* %2, align 4
  br label %141

141:                                              ; preds = %132, %119, %112, %19, %13
  %142 = load i32, i32* %2, align 4
  ret i32 %142
}

declare dso_local i32 @strlen(i8*) #1

; Function Attrs: nounwind readonly
declare dso_local i32 @isdigit(i32) #2

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @strtoul(i8*, i8**, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
