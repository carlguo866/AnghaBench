; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_42054.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_42054.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@PF_LOCAL = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@EXIT_SUCCESS = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [2 x i32], align 4
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %5 = load i32, i32* @PF_LOCAL, align 4
  %6 = load i32, i32* @SOCK_STREAM, align 4
  %7 = getelementptr inbounds [2 x i32], [2 x i32]* %2, i64 0, i64 0
  %8 = call i32 @socketpair(i32 %5, i32 %6, i32 0, i32* %7)
  %9 = call i64 (...) @fork()
  store i64 %9, i64* %3, align 8
  %10 = load i64, i64* %3, align 8
  %11 = icmp ne i64 %10, 0
  br i1 %11, label %12, label %23

12:                                               ; preds = %0
  %13 = getelementptr inbounds [2 x i32], [2 x i32]* %2, i64 0, i64 1
  %14 = load i32, i32* %13, align 4
  %15 = call i32 @close(i32 %14)
  %16 = getelementptr inbounds [2 x i32], [2 x i32]* %2, i64 0, i64 0
  %17 = load i32, i32* %16, align 4
  %18 = call i32 @parent(i32 %17)
  %19 = load i64, i64* %3, align 8
  %20 = call i32 @waitpid(i64 %19, i32* %4, i32 0)
  %21 = load i32, i32* @EXIT_SUCCESS, align 4
  %22 = call i32 @exit(i32 %21) #3
  unreachable

23:                                               ; preds = %0
  %24 = getelementptr inbounds [2 x i32], [2 x i32]* %2, i64 0, i64 0
  %25 = load i32, i32* %24, align 4
  %26 = call i32 @close(i32 %25)
  %27 = getelementptr inbounds [2 x i32], [2 x i32]* %2, i64 0, i64 1
  %28 = load i32, i32* %27, align 4
  %29 = call i32 @child(i32 %28)
  %30 = load i32, i32* @EXIT_SUCCESS, align 4
  %31 = call i32 @exit(i32 %30) #3
  unreachable
}

declare dso_local i32 @socketpair(i32, i32, i32, i32*) #1

declare dso_local i64 @fork(...) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @parent(i32) #1

declare dso_local i32 @waitpid(i64, i32*, i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @child(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
