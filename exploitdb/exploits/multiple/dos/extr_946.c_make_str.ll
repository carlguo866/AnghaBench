; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_946.c_make_str.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/dos/extr_946.c_make_str.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@create = common dso_local global i8* null, align 8
@FUNC_NAME = common dso_local global i32 0, align 4
@str = common dso_local global i32 0, align 4
@begin = common dso_local global i8* null, align 8
@varible_REC = common dso_local global i8* null, align 8
@varible_var = common dso_local global i8* null, align 8
@select_1 = common dso_local global i8* null, align 8
@TABLE_NAME = common dso_local global i32 0, align 4
@select_2 = common dso_local global i8* null, align 8
@select_3 = common dso_local global i8* null, align 8
@finish = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @make_str() #0 {
  %1 = alloca [100 x i8], align 16
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 99, i32* %3, align 4
  %4 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %5 = load i32, i32* %3, align 4
  %6 = load i8*, i8** @create, align 8
  %7 = load i32, i32* @FUNC_NAME, align 4
  %8 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %4, i32 %5, i8* %6, i32 %7)
  %9 = load i32, i32* @str, align 4
  %10 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %11 = call i32 @strcpy(i32 %9, i8* %10)
  %12 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %13 = load i32, i32* %3, align 4
  %14 = load i8*, i8** @begin, align 8
  %15 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %12, i32 %13, i8* %14)
  %16 = load i32, i32* @str, align 4
  %17 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %18 = call i32 @strcat(i32 %16, i8* %17)
  %19 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %20 = load i32, i32* %3, align 4
  %21 = load i8*, i8** @varible_REC, align 8
  %22 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %19, i32 %20, i8* %21)
  %23 = load i32, i32* @str, align 4
  %24 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %25 = call i32 @strcat(i32 %23, i8* %24)
  store i32 0, i32* %2, align 4
  br label %26

26:                                               ; preds = %38, %0
  %27 = load i32, i32* %2, align 4
  %28 = icmp slt i32 %27, 1029
  br i1 %28, label %29, label %41

29:                                               ; preds = %26
  %30 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %31 = load i32, i32* %3, align 4
  %32 = load i8*, i8** @varible_var, align 8
  %33 = load i32, i32* %2, align 4
  %34 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %30, i32 %31, i8* %32, i32 %33)
  %35 = load i32, i32* @str, align 4
  %36 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %37 = call i32 @strcat(i32 %35, i8* %36)
  br label %38

38:                                               ; preds = %29
  %39 = load i32, i32* %2, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %2, align 4
  br label %26

41:                                               ; preds = %26
  %42 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %43 = load i32, i32* %3, align 4
  %44 = load i8*, i8** @begin, align 8
  %45 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %42, i32 %43, i8* %44)
  %46 = load i32, i32* @str, align 4
  %47 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %48 = call i32 @strcat(i32 %46, i8* %47)
  %49 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %50 = load i32, i32* %3, align 4
  %51 = load i8*, i8** @select_1, align 8
  %52 = load i32, i32* @TABLE_NAME, align 4
  %53 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %49, i32 %50, i8* %51, i32 %52)
  %54 = load i32, i32* @str, align 4
  %55 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %56 = call i32 @strcat(i32 %54, i8* %55)
  store i32 0, i32* %2, align 4
  br label %57

57:                                               ; preds = %69, %41
  %58 = load i32, i32* %2, align 4
  %59 = icmp slt i32 %58, 1028
  br i1 %59, label %60, label %72

60:                                               ; preds = %57
  %61 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %62 = load i32, i32* %3, align 4
  %63 = load i8*, i8** @select_2, align 8
  %64 = load i32, i32* %2, align 4
  %65 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %61, i32 %62, i8* %63, i32 %64)
  %66 = load i32, i32* @str, align 4
  %67 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %68 = call i32 @strcat(i32 %66, i8* %67)
  br label %69

69:                                               ; preds = %60
  %70 = load i32, i32* %2, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %2, align 4
  br label %57

72:                                               ; preds = %57
  %73 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %74 = load i32, i32* %3, align 4
  %75 = load i8*, i8** @select_3, align 8
  %76 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %73, i32 %74, i8* %75)
  %77 = load i32, i32* @str, align 4
  %78 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %79 = call i32 @strcat(i32 %77, i8* %78)
  %80 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %81 = load i32, i32* %3, align 4
  %82 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %83 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %80, i32 %81, i8* %82)
  %84 = load i32, i32* @str, align 4
  %85 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %86 = call i32 @strcat(i32 %84, i8* %85)
  %87 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %88 = load i32, i32* %3, align 4
  %89 = load i8*, i8** @finish, align 8
  %90 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %87, i32 %88, i8* %89)
  %91 = load i32, i32* @str, align 4
  %92 = getelementptr inbounds [100 x i8], [100 x i8]* %1, i64 0, i64 0
  %93 = call i32 @strcat(i32 %91, i8* %92)
  ret i32 0
}

declare dso_local i32 @snprintf(i8*, i32, i8*, ...) #1

declare dso_local i32 @strcpy(i32, i8*) #1

declare dso_local i32 @strcat(i32, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
