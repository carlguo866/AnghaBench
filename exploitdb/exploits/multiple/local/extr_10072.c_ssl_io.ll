; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/local/extr_10072.c_ssl_io.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/local/extr_10072.c_ssl_io.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ssl_io_t = type { i32 }

@.str = private unnamed_addr constant [14 x i8] c"rec_io:select\00", align 1
@SHUT_RD = common dso_local global i32 0, align 4
@SHUT_WR = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ssl_io(%struct.ssl_io_t* %0, %struct.ssl_io_t* %1) #0 {
  %3 = alloca %struct.ssl_io_t*, align 8
  %4 = alloca %struct.ssl_io_t*, align 8
  %5 = alloca [2 x %struct.ssl_io_t*], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [65536 x i8], align 16
  store %struct.ssl_io_t* %0, %struct.ssl_io_t** %3, align 8
  store %struct.ssl_io_t* %1, %struct.ssl_io_t** %4, align 8
  %13 = load %struct.ssl_io_t*, %struct.ssl_io_t** %3, align 8
  %14 = getelementptr inbounds [2 x %struct.ssl_io_t*], [2 x %struct.ssl_io_t*]* %5, i64 0, i64 0
  store %struct.ssl_io_t* %13, %struct.ssl_io_t** %14, align 16
  %15 = load %struct.ssl_io_t*, %struct.ssl_io_t** %4, align 8
  %16 = getelementptr inbounds [2 x %struct.ssl_io_t*], [2 x %struct.ssl_io_t*]* %5, i64 0, i64 1
  store %struct.ssl_io_t* %15, %struct.ssl_io_t** %16, align 8
  store i32 3, i32* %7, align 4
  store i32 0, i32* %6, align 4
  store i32 0, i32* %8, align 4
  br label %17

17:                                               ; preds = %38, %2
  %18 = load i32, i32* %8, align 4
  %19 = icmp slt i32 %18, 2
  br i1 %19, label %20, label %41

20:                                               ; preds = %17
  %21 = load i32, i32* %8, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [2 x %struct.ssl_io_t*], [2 x %struct.ssl_io_t*]* %5, i64 0, i64 %22
  %24 = load %struct.ssl_io_t*, %struct.ssl_io_t** %23, align 8
  %25 = getelementptr inbounds %struct.ssl_io_t, %struct.ssl_io_t* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = load i32, i32* %6, align 4
  %28 = icmp sge i32 %26, %27
  br i1 %28, label %29, label %37

29:                                               ; preds = %20
  %30 = load i32, i32* %8, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [2 x %struct.ssl_io_t*], [2 x %struct.ssl_io_t*]* %5, i64 0, i64 %31
  %33 = load %struct.ssl_io_t*, %struct.ssl_io_t** %32, align 8
  %34 = getelementptr inbounds %struct.ssl_io_t, %struct.ssl_io_t* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %6, align 4
  br label %37

37:                                               ; preds = %29, %20
  br label %38

38:                                               ; preds = %37
  %39 = load i32, i32* %8, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %8, align 4
  br label %17

41:                                               ; preds = %17
  br label %42

42:                                               ; preds = %140, %41
  %43 = load i32, i32* %7, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %45, label %141

45:                                               ; preds = %42
  %46 = call i32 @FD_ZERO(i32* %11)
  store i32 0, i32* %8, align 4
  br label %47

47:                                               ; preds = %65, %45
  %48 = load i32, i32* %8, align 4
  %49 = icmp slt i32 %48, 2
  br i1 %49, label %50, label %68

50:                                               ; preds = %47
  %51 = load i32, i32* %7, align 4
  %52 = load i32, i32* %8, align 4
  %53 = shl i32 1, %52
  %54 = and i32 %51, %53
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %64

56:                                               ; preds = %50
  %57 = load i32, i32* %8, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds [2 x %struct.ssl_io_t*], [2 x %struct.ssl_io_t*]* %5, i64 0, i64 %58
  %60 = load %struct.ssl_io_t*, %struct.ssl_io_t** %59, align 8
  %61 = getelementptr inbounds %struct.ssl_io_t, %struct.ssl_io_t* %60, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = call i32 @FD_SET(i32 %62, i32* %11)
  br label %64

64:                                               ; preds = %56, %50
  br label %65

65:                                               ; preds = %64
  %66 = load i32, i32* %8, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %8, align 4
  br label %47

68:                                               ; preds = %47
  %69 = load i32, i32* %6, align 4
  %70 = call i32 @select(i32 %69, i32* %11, i32* null, i32* null, i32* null)
  store i32 %70, i32* %9, align 4
  %71 = load i32, i32* %9, align 4
  %72 = icmp eq i32 %71, -1
  br i1 %72, label %73, label %75

73:                                               ; preds = %68
  %74 = call i32 @fail(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0))
  br label %75

75:                                               ; preds = %73, %68
  store i32 0, i32* %8, align 4
  br label %76

76:                                               ; preds = %137, %75
  %77 = load i32, i32* %8, align 4
  %78 = icmp slt i32 %77, 2
  br i1 %78, label %79, label %140

79:                                               ; preds = %76
  %80 = load i32, i32* %7, align 4
  %81 = load i32, i32* %8, align 4
  %82 = shl i32 1, %81
  %83 = and i32 %80, %82
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %136

85:                                               ; preds = %79
  %86 = load i32, i32* %8, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds [2 x %struct.ssl_io_t*], [2 x %struct.ssl_io_t*]* %5, i64 0, i64 %87
  %89 = load %struct.ssl_io_t*, %struct.ssl_io_t** %88, align 8
  %90 = getelementptr inbounds %struct.ssl_io_t, %struct.ssl_io_t* %89, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = call i64 @FD_ISSET(i32 %91, i32* %11)
  %93 = icmp ne i64 %92, 0
  br i1 %93, label %94, label %136

94:                                               ; preds = %85
  %95 = load i32, i32* %8, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds [2 x %struct.ssl_io_t*], [2 x %struct.ssl_io_t*]* %5, i64 0, i64 %96
  %98 = load %struct.ssl_io_t*, %struct.ssl_io_t** %97, align 8
  %99 = getelementptr inbounds [65536 x i8], [65536 x i8]* %12, i64 0, i64 0
  %100 = call i32 @rec_read(%struct.ssl_io_t* %98, i8* %99)
  store i32 %100, i32* %9, align 4
  %101 = load i32, i32* %9, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %126

103:                                              ; preds = %94
  %104 = load i32, i32* %8, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds [2 x %struct.ssl_io_t*], [2 x %struct.ssl_io_t*]* %5, i64 0, i64 %105
  %107 = load %struct.ssl_io_t*, %struct.ssl_io_t** %106, align 8
  %108 = getelementptr inbounds %struct.ssl_io_t, %struct.ssl_io_t* %107, i32 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = load i32, i32* @SHUT_RD, align 4
  %111 = call i32 @shutdown(i32 %109, i32 %110)
  %112 = load i32, i32* %8, align 4
  %113 = sub nsw i32 1, %112
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [2 x %struct.ssl_io_t*], [2 x %struct.ssl_io_t*]* %5, i64 0, i64 %114
  %116 = load %struct.ssl_io_t*, %struct.ssl_io_t** %115, align 8
  %117 = getelementptr inbounds %struct.ssl_io_t, %struct.ssl_io_t* %116, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = load i32, i32* @SHUT_WR, align 4
  %120 = call i32 @shutdown(i32 %118, i32 %119)
  %121 = load i32, i32* %8, align 4
  %122 = shl i32 1, %121
  %123 = xor i32 %122, -1
  %124 = load i32, i32* %7, align 4
  %125 = and i32 %124, %123
  store i32 %125, i32* %7, align 4
  br label %137

126:                                              ; preds = %94
  %127 = load i32, i32* %9, align 4
  store i32 %127, i32* %10, align 4
  %128 = load i32, i32* %8, align 4
  %129 = sub nsw i32 1, %128
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [2 x %struct.ssl_io_t*], [2 x %struct.ssl_io_t*]* %5, i64 0, i64 %130
  %132 = load %struct.ssl_io_t*, %struct.ssl_io_t** %131, align 8
  %133 = getelementptr inbounds [65536 x i8], [65536 x i8]* %12, i64 0, i64 0
  %134 = load i32, i32* %10, align 4
  %135 = call i32 @rec_write(%struct.ssl_io_t* %132, i8* %133, i32 %134)
  br label %136

136:                                              ; preds = %126, %85, %79
  br label %137

137:                                              ; preds = %136, %103
  %138 = load i32, i32* %8, align 4
  %139 = add nsw i32 %138, 1
  store i32 %139, i32* %8, align 4
  br label %76

140:                                              ; preds = %76
  br label %42

141:                                              ; preds = %42
  ret void
}

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i32 @select(i32, i32*, i32*, i32*, i32*) #1

declare dso_local i32 @fail(i8*) #1

declare dso_local i64 @FD_ISSET(i32, i32*) #1

declare dso_local i32 @rec_read(%struct.ssl_io_t*, i8*) #1

declare dso_local i32 @shutdown(i32, i32) #1

declare dso_local i32 @rec_write(%struct.ssl_io_t*, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
