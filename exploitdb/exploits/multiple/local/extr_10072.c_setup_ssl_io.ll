; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/local/extr_10072.c_setup_ssl_io.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/local/extr_10072.c_setup_ssl_io.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ssl_io_t = type { i32, i32, i32* }

@.str = private unnamed_addr constant [22 x i8] c"setup_ssl_ctx:SSL_new\00", align 1
@BIO_NOCLOSE = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [29 x i8] c"setup_ssl_ctx:BIO_new_socket\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @setup_ssl_io(%struct.ssl_io_t* %0, i32* %1, i32 %2, i32 %3) #0 {
  %5 = alloca %struct.ssl_io_t*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  store %struct.ssl_io_t* %0, %struct.ssl_io_t** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @SSL_new(i32* %11)
  store i32* %12, i32** %9, align 8
  %13 = load i32*, i32** %9, align 8
  %14 = icmp ne i32* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %4
  %16 = call i32 @fail(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0))
  br label %17

17:                                               ; preds = %15, %4
  %18 = load i32, i32* %7, align 4
  %19 = load i32, i32* @BIO_NOCLOSE, align 4
  %20 = call i32* @BIO_new_socket(i32 %18, i32 %19)
  store i32* %20, i32** %10, align 8
  %21 = load i32*, i32** %10, align 8
  %22 = icmp ne i32* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  %24 = call i32 @fail(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0))
  br label %25

25:                                               ; preds = %23, %17
  %26 = load i32*, i32** %9, align 8
  %27 = load i32*, i32** %10, align 8
  %28 = load i32*, i32** %10, align 8
  %29 = call i32 @SSL_set_bio(i32* %26, i32* %27, i32* %28)
  %30 = load i32*, i32** %9, align 8
  %31 = call i32 @SSL_set_connect_state(i32* %30)
  %32 = load i32*, i32** %9, align 8
  %33 = load %struct.ssl_io_t*, %struct.ssl_io_t** %5, align 8
  %34 = getelementptr inbounds %struct.ssl_io_t, %struct.ssl_io_t* %33, i32 0, i32 2
  store i32* %32, i32** %34, align 8
  %35 = load i32, i32* %7, align 4
  %36 = load %struct.ssl_io_t*, %struct.ssl_io_t** %5, align 8
  %37 = getelementptr inbounds %struct.ssl_io_t, %struct.ssl_io_t* %36, i32 0, i32 0
  store i32 %35, i32* %37, align 8
  %38 = load i32, i32* %8, align 4
  %39 = load %struct.ssl_io_t*, %struct.ssl_io_t** %5, align 8
  %40 = getelementptr inbounds %struct.ssl_io_t, %struct.ssl_io_t* %39, i32 0, i32 1
  store i32 %38, i32* %40, align 4
  ret void
}

declare dso_local i32* @SSL_new(i32*) #1

declare dso_local i32 @fail(i8*) #1

declare dso_local i32* @BIO_new_socket(i32, i32) #1

declare dso_local i32 @SSL_set_bio(i32*, i32*, i32*) #1

declare dso_local i32 @SSL_set_connect_state(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
