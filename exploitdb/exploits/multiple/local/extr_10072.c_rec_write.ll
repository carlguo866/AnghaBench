; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/local/extr_10072.c_rec_write.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/local/extr_10072.c_rec_write.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ssl_io_t = type { i32, i32, i32 }

@.str = private unnamed_addr constant [16 x i8] c"rec_write:write\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"rec_read:ssl3_write_bytes\00", align 1
@stderr = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @rec_write(%struct.ssl_io_t* %0, i8* %1, i64 %2) #0 {
  %4 = alloca %struct.ssl_io_t*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  store %struct.ssl_io_t* %0, %struct.ssl_io_t** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = load %struct.ssl_io_t*, %struct.ssl_io_t** %4, align 8
  %9 = getelementptr inbounds %struct.ssl_io_t, %struct.ssl_io_t* %8, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = and i32 %10, 2
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %27

13:                                               ; preds = %3
  %14 = load %struct.ssl_io_t*, %struct.ssl_io_t** %4, align 8
  %15 = getelementptr inbounds %struct.ssl_io_t, %struct.ssl_io_t* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = load i8*, i8** %5, align 8
  %18 = load i64, i64* %6, align 8
  %19 = call i32 @write(i32 %16, i8* %17, i64 %18)
  store i32 %19, i32* %7, align 4
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  %22 = load i64, i64* %6, align 8
  %23 = icmp ne i64 %21, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %13
  %25 = call i32 @fail(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0))
  br label %26

26:                                               ; preds = %24, %13
  br label %55

27:                                               ; preds = %3
  %28 = load %struct.ssl_io_t*, %struct.ssl_io_t** %4, align 8
  %29 = getelementptr inbounds %struct.ssl_io_t, %struct.ssl_io_t* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = load i8*, i8** %5, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 0
  %33 = load i8, i8* %32, align 1
  %34 = load i8*, i8** %5, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 5
  %36 = load i64, i64* %6, align 8
  %37 = sub i64 %36, 5
  %38 = call i32 @ssl3_write_bytes(i32 %30, i8 zeroext %33, i8* %35, i64 %37)
  store i32 %38, i32* %7, align 4
  %39 = load i32, i32* %7, align 4
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %27
  %42 = call i32 @fail(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0))
  br label %43

43:                                               ; preds = %41, %27
  %44 = load i8*, i8** %5, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 0
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = icmp eq i32 %47, 20
  br i1 %48, label %49, label %54

49:                                               ; preds = %43
  %50 = load %struct.ssl_io_t*, %struct.ssl_io_t** %4, align 8
  %51 = getelementptr inbounds %struct.ssl_io_t, %struct.ssl_io_t* %50, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = or i32 %52, 2
  store i32 %53, i32* %51, align 4
  br label %54

54:                                               ; preds = %49, %43
  br label %55

55:                                               ; preds = %54, %26
  ret void
}

declare dso_local i32 @write(i32, i8*, i64) #1

declare dso_local i32 @fail(i8*) #1

declare dso_local i32 @ssl3_write_bytes(i32, i8 zeroext, i8*, i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
