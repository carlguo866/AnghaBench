; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/local/extr_19821.c_hex_decode.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/local/extr_19821.c_hex_decode.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @hex_decode(i8* %0, i8* %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  %14 = load i8*, i8** %5, align 8
  %15 = load i8*, i8** %5, align 8
  %16 = call i32 @strlen(i8* %15)
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %14, i64 %17
  store i8* %18, i8** %9, align 8
  %19 = load i8*, i8** %6, align 8
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %19, i64 %21
  store i8* %22, i8** %11, align 8
  %23 = load i8*, i8** %5, align 8
  store i8* %23, i8** %8, align 8
  %24 = load i8*, i8** %6, align 8
  store i8* %24, i8** %10, align 8
  br label %25

25:                                               ; preds = %115, %3
  %26 = load i8*, i8** %8, align 8
  %27 = load i8*, i8** %9, align 8
  %28 = icmp ult i8* %26, %27
  br i1 %28, label %29, label %39

29:                                               ; preds = %25
  %30 = load i8*, i8** %10, align 8
  %31 = load i8*, i8** %11, align 8
  %32 = icmp ult i8* %30, %31
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = load i8*, i8** %8, align 8
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = call i64 @isxdigit(i32 %36)
  %38 = icmp ne i64 %37, 0
  br label %39

39:                                               ; preds = %33, %29, %25
  %40 = phi i1 [ false, %29 ], [ false, %25 ], [ %38, %33 ]
  br i1 %40, label %41, label %118

41:                                               ; preds = %39
  %42 = load i8*, i8** %8, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 0
  %44 = load i8, i8* %43, align 1
  %45 = call signext i8 @tolower(i8 signext %44)
  store i8 %45, i8* %12, align 1
  %46 = load i8*, i8** %8, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = call signext i8 @tolower(i8 signext %48)
  store i8 %49, i8* %13, align 1
  %50 = load i8, i8* %12, align 1
  %51 = sext i8 %50 to i32
  %52 = icmp sge i32 %51, 48
  br i1 %52, label %53, label %62

53:                                               ; preds = %41
  %54 = load i8, i8* %12, align 1
  %55 = sext i8 %54 to i32
  %56 = icmp sle i32 %55, 57
  br i1 %56, label %57, label %62

57:                                               ; preds = %53
  %58 = load i8, i8* %12, align 1
  %59 = sext i8 %58 to i32
  %60 = sub nsw i32 %59, 48
  %61 = trunc i32 %60 to i8
  store i8 %61, i8* %12, align 1
  br label %77

62:                                               ; preds = %53, %41
  %63 = load i8, i8* %12, align 1
  %64 = sext i8 %63 to i32
  %65 = icmp sge i32 %64, 97
  br i1 %65, label %66, label %75

66:                                               ; preds = %62
  %67 = load i8, i8* %12, align 1
  %68 = sext i8 %67 to i32
  %69 = icmp sle i32 %68, 102
  br i1 %69, label %70, label %75

70:                                               ; preds = %66
  %71 = load i8, i8* %12, align 1
  %72 = sext i8 %71 to i32
  %73 = sub nsw i32 %72, 87
  %74 = trunc i32 %73 to i8
  store i8 %74, i8* %12, align 1
  br label %76

75:                                               ; preds = %66, %62
  store i32 -1, i32* %4, align 4
  br label %125

76:                                               ; preds = %70
  br label %77

77:                                               ; preds = %76, %57
  %78 = load i8, i8* %13, align 1
  %79 = sext i8 %78 to i32
  %80 = icmp sge i32 %79, 48
  br i1 %80, label %81, label %90

81:                                               ; preds = %77
  %82 = load i8, i8* %13, align 1
  %83 = sext i8 %82 to i32
  %84 = icmp sle i32 %83, 57
  br i1 %84, label %85, label %90

85:                                               ; preds = %81
  %86 = load i8, i8* %13, align 1
  %87 = sext i8 %86 to i32
  %88 = sub nsw i32 %87, 48
  %89 = trunc i32 %88 to i8
  store i8 %89, i8* %13, align 1
  br label %105

90:                                               ; preds = %81, %77
  %91 = load i8, i8* %13, align 1
  %92 = sext i8 %91 to i32
  %93 = icmp sge i32 %92, 97
  br i1 %93, label %94, label %103

94:                                               ; preds = %90
  %95 = load i8, i8* %13, align 1
  %96 = sext i8 %95 to i32
  %97 = icmp sle i32 %96, 102
  br i1 %97, label %98, label %103

98:                                               ; preds = %94
  %99 = load i8, i8* %13, align 1
  %100 = sext i8 %99 to i32
  %101 = sub nsw i32 %100, 87
  %102 = trunc i32 %101 to i8
  store i8 %102, i8* %13, align 1
  br label %104

103:                                              ; preds = %94, %90
  store i32 -1, i32* %4, align 4
  br label %125

104:                                              ; preds = %98
  br label %105

105:                                              ; preds = %104, %85
  %106 = load i8, i8* %12, align 1
  %107 = sext i8 %106 to i32
  %108 = shl i32 %107, 4
  %109 = load i8, i8* %13, align 1
  %110 = sext i8 %109 to i32
  %111 = or i32 %108, %110
  %112 = trunc i32 %111 to i8
  %113 = load i8*, i8** %10, align 8
  %114 = getelementptr inbounds i8, i8* %113, i32 1
  store i8* %114, i8** %10, align 8
  store i8 %112, i8* %113, align 1
  br label %115

115:                                              ; preds = %105
  %116 = load i8*, i8** %8, align 8
  %117 = getelementptr inbounds i8, i8* %116, i64 2
  store i8* %117, i8** %8, align 8
  br label %25

118:                                              ; preds = %39
  %119 = load i8*, i8** %10, align 8
  %120 = load i8*, i8** %6, align 8
  %121 = ptrtoint i8* %119 to i64
  %122 = ptrtoint i8* %120 to i64
  %123 = sub i64 %121, %122
  %124 = trunc i64 %123 to i32
  store i32 %124, i32* %4, align 4
  br label %125

125:                                              ; preds = %118, %103, %75
  %126 = load i32, i32* %4, align 4
  ret i32 %126
}

declare dso_local i32 @strlen(i8*) #1

declare dso_local i64 @isxdigit(i32) #1

declare dso_local signext i8 @tolower(i8 signext) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
