; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/freebsd_x86-64/dos/extr_44211.c_resolve.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/freebsd_x86-64/dos/extr_44211.c_resolve.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.kld_sym_lookup = type { i32, i8*, i64 }

@KLDSYM_LOOKUP = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [7 x i8] c"kldsym\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"  [+] Resolved %s to %#lx\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @resolve(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.kld_sym_lookup, align 8
  store i8* %0, i8** %2, align 8
  %4 = getelementptr inbounds %struct.kld_sym_lookup, %struct.kld_sym_lookup* %3, i32 0, i32 0
  store i32 24, i32* %4, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = getelementptr inbounds %struct.kld_sym_lookup, %struct.kld_sym_lookup* %3, i32 0, i32 1
  store i8* %5, i8** %6, align 8
  %7 = load i32, i32* @KLDSYM_LOOKUP, align 4
  %8 = call i64 @kldsym(i32 0, i32 %7, %struct.kld_sym_lookup* %3)
  %9 = icmp slt i64 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %1
  %11 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0))
  %12 = call i32 @exit(i32 1) #3
  unreachable

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.kld_sym_lookup, %struct.kld_sym_lookup* %3, i32 0, i32 1
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %struct.kld_sym_lookup, %struct.kld_sym_lookup* %3, i32 0, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = call i32 @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* %15, i64 %17)
  %19 = getelementptr inbounds %struct.kld_sym_lookup, %struct.kld_sym_lookup* %3, i32 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = inttoptr i64 %20 to i8*
  ret i8* %21
}

declare dso_local i64 @kldsym(i32, i32, %struct.kld_sym_lookup*) #1

declare dso_local i32 @perror(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @printf(i8*, i8*, i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
