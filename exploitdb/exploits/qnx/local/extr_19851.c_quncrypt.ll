; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/qnx/local/extr_19851.c_quncrypt.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/qnx/local/extr_19851.c_quncrypt.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@quncrypt.newpw = internal global [14 x i8] zeroinitializer, align 1
@bits = common dso_local global i32* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @quncrypt(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [2 x i8], align 1
  %9 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %10 = load i8*, i8** %2, align 8
  %11 = getelementptr inbounds i8, i8* %10, i32 1
  store i8* %11, i8** %2, align 8
  %12 = load i8, i8* %10, align 1
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i64 0, i64 0
  store i8 %12, i8* %13, align 1
  %14 = load i8*, i8** %2, align 8
  %15 = getelementptr inbounds i8, i8* %14, i32 1
  store i8* %15, i8** %2, align 8
  %16 = load i8, i8* %14, align 1
  %17 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i64 0, i64 1
  store i8 %16, i8* %17, align 1
  store i32 0, i32* %3, align 4
  br label %18

18:                                               ; preds = %26, %1
  %19 = load i32, i32* %3, align 4
  %20 = icmp slt i32 %19, 72
  br i1 %20, label %21, label %29

21:                                               ; preds = %18
  %22 = load i32*, i32** @bits, align 8
  %23 = load i32, i32* %3, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i32, i32* %22, i64 %24
  store i32 0, i32* %25, align 4
  br label %26

26:                                               ; preds = %21
  %27 = load i32, i32* %3, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %3, align 4
  br label %18

29:                                               ; preds = %18
  store i32 0, i32* %3, align 4
  br label %30

30:                                               ; preds = %43, %29
  %31 = load i32, i32* %3, align 4
  %32 = icmp slt i32 %31, 12
  br i1 %32, label %33, label %46

33:                                               ; preds = %30
  %34 = load i8*, i8** %2, align 8
  %35 = load i32, i32* %3, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %34, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = call signext i8 @ascii2bin(i8 signext %38)
  %40 = load i32, i32* %3, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [14 x i8], [14 x i8]* @quncrypt.newpw, i64 0, i64 %41
  store i8 %39, i8* %42, align 1
  br label %43

43:                                               ; preds = %33
  %44 = load i32, i32* %3, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %3, align 4
  br label %30

46:                                               ; preds = %30
  store i8 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @quncrypt.newpw, i64 0, i64 13), align 1
  %47 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i64 0, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = sext i8 %48 to i32
  %50 = mul nsw i32 %49, 4
  %51 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i64 0, i64 0
  %52 = load i8, i8* %51, align 1
  %53 = sext i8 %52 to i32
  %54 = sub nsw i32 %50, %53
  %55 = srem i32 %54, 128
  store i32 %55, i32* %5, align 4
  store i32 0, i32* %3, align 4
  br label %56

56:                                               ; preds = %87, %46
  %57 = load i32, i32* %3, align 4
  %58 = icmp slt i32 %57, 12
  br i1 %58, label %59, label %90

59:                                               ; preds = %56
  store i32 0, i32* %4, align 4
  br label %60

60:                                               ; preds = %83, %59
  %61 = load i32, i32* %4, align 4
  %62 = icmp slt i32 %61, 6
  br i1 %62, label %63, label %86

63:                                               ; preds = %60
  %64 = load i32, i32* %3, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [14 x i8], [14 x i8]* @quncrypt.newpw, i64 0, i64 %65
  %67 = load i8, i8* %66, align 1
  %68 = sext i8 %67 to i32
  %69 = load i32, i32* %4, align 4
  %70 = shl i32 1, %69
  %71 = and i32 %68, %70
  store i32 %71, i32* %6, align 4
  %72 = load i32, i32* %6, align 4
  %73 = icmp ne i32 %72, 0
  %74 = zext i1 %73 to i64
  %75 = select i1 %73, i32 1, i32 0
  %76 = load i32*, i32** @bits, align 8
  %77 = load i32, i32* %3, align 4
  %78 = mul nsw i32 %77, 6
  %79 = load i32, i32* %4, align 4
  %80 = add nsw i32 %78, %79
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i32, i32* %76, i64 %81
  store i32 %75, i32* %82, align 4
  br label %83

83:                                               ; preds = %63
  %84 = load i32, i32* %4, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %4, align 4
  br label %60

86:                                               ; preds = %60
  br label %87

87:                                               ; preds = %86
  %88 = load i32, i32* %3, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %3, align 4
  br label %56

90:                                               ; preds = %56
  br label %91

91:                                               ; preds = %118, %90
  %92 = load i32, i32* %5, align 4
  %93 = add nsw i32 %92, -1
  store i32 %93, i32* %5, align 4
  %94 = icmp ne i32 %92, 0
  br i1 %94, label %95, label %119

95:                                               ; preds = %91
  %96 = load i32*, i32** @bits, align 8
  %97 = getelementptr inbounds i32, i32* %96, i64 0
  %98 = load i32, i32* %97, align 4
  %99 = load i32*, i32** @bits, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 66
  store i32 %98, i32* %100, align 4
  store i32 0, i32* %3, align 4
  br label %101

101:                                              ; preds = %115, %95
  %102 = load i32, i32* %3, align 4
  %103 = icmp sle i32 %102, 65
  br i1 %103, label %104, label %118

104:                                              ; preds = %101
  %105 = load i32*, i32** @bits, align 8
  %106 = load i32, i32* %3, align 4
  %107 = add nsw i32 %106, 1
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i32, i32* %105, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = load i32*, i32** @bits, align 8
  %112 = load i32, i32* %3, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, i32* %111, i64 %113
  store i32 %110, i32* %114, align 4
  br label %115

115:                                              ; preds = %104
  %116 = load i32, i32* %3, align 4
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %3, align 4
  br label %101

118:                                              ; preds = %101
  br label %91

119:                                              ; preds = %91
  store i32 0, i32* %3, align 4
  br label %120

120:                                              ; preds = %153, %119
  %121 = load i32, i32* %3, align 4
  %122 = icmp slt i32 %121, 8
  br i1 %122, label %123, label %156

123:                                              ; preds = %120
  %124 = load i32, i32* %3, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [14 x i8], [14 x i8]* @quncrypt.newpw, i64 0, i64 %125
  store i8 0, i8* %126, align 1
  store i32 0, i32* %4, align 4
  br label %127

127:                                              ; preds = %149, %123
  %128 = load i32, i32* %4, align 4
  %129 = icmp slt i32 %128, 7
  br i1 %129, label %130, label %152

130:                                              ; preds = %127
  %131 = load i32*, i32** @bits, align 8
  %132 = load i32, i32* %3, align 4
  %133 = load i32, i32* %4, align 4
  %134 = mul nsw i32 %133, 8
  %135 = add nsw i32 %132, %134
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i32, i32* %131, i64 %136
  %138 = load i32, i32* %137, align 4
  store i32 %138, i32* %6, align 4
  %139 = load i32, i32* %6, align 4
  %140 = load i32, i32* %4, align 4
  %141 = shl i32 %139, %140
  %142 = load i32, i32* %3, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds [14 x i8], [14 x i8]* @quncrypt.newpw, i64 0, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = sext i8 %145 to i32
  %147 = or i32 %146, %141
  %148 = trunc i32 %147 to i8
  store i8 %148, i8* %144, align 1
  br label %149

149:                                              ; preds = %130
  %150 = load i32, i32* %4, align 4
  %151 = add nsw i32 %150, 1
  store i32 %151, i32* %4, align 4
  br label %127

152:                                              ; preds = %127
  br label %153

153:                                              ; preds = %152
  %154 = load i32, i32* %3, align 4
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %3, align 4
  br label %120

156:                                              ; preds = %120
  store i8 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @quncrypt.newpw, i64 0, i64 8), align 1
  ret i8* getelementptr inbounds ([14 x i8], [14 x i8]* @quncrypt.newpw, i64 0, i64 0)
}

declare dso_local signext i8 @ascii2bin(i8 signext) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
