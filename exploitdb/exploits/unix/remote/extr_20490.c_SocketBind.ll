; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_20490.c_SocketBind.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_20490.c_SocketBind.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.TYPE_2__, i32, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.sockaddr = type { i32 }

@AF_INET = common dso_local global i32 0, align 4
@SOCK_DGRAM = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [23 x i8] c"can't get a udp socket\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [18 x i8] c"killing pid %u...\00", align 1
@SIGKILL = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [19 x i8] c"can't kill process\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"killed.\0A\00", align 1
@DNS_PORT = common dso_local global i32 0, align 4
@SOL_SOCKET = common dso_local global i32 0, align 4
@SO_REUSEADDR = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [23 x i8] c"can't bind dns port 53\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"listening on %s...\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @SocketBind(i32 %0, %struct.sockaddr_in* %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.sockaddr_in*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store %struct.sockaddr_in* %1, %struct.sockaddr_in** %6, align 8
  store i32 %2, i32* %7, align 4
  %11 = load i32, i32* @AF_INET, align 4
  %12 = load i32, i32* @SOCK_DGRAM, align 4
  %13 = call i32 @socket(i32 %11, i32 %12, i32 0)
  store i32 %13, i32* %8, align 4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %3
  %16 = call i32 @perror(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0))
  %17 = load i32, i32* %8, align 4
  store i32 %17, i32* %4, align 4
  br label %68

18:                                               ; preds = %3
  %19 = load i32, i32* %5, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %34

21:                                               ; preds = %18
  %22 = load i32, i32* @stderr, align 4
  %23 = load i32, i32* %5, align 4
  %24 = call i32 (i32, i8*, ...) @fprintf(i32 %22, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i32 %23)
  %25 = load i32, i32* %5, align 4
  %26 = load i32, i32* @SIGKILL, align 4
  %27 = call i64 @kill(i32 %25, i32 %26)
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %21
  %30 = call i32 @perror(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0))
  store i32 -1, i32* %4, align 4
  br label %68

31:                                               ; preds = %21
  %32 = load i32, i32* @stderr, align 4
  %33 = call i32 (i32, i8*, ...) @fprintf(i32 %32, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0))
  br label %34

34:                                               ; preds = %31, %18
  %35 = load i32, i32* @AF_INET, align 4
  %36 = load %struct.sockaddr_in*, %struct.sockaddr_in** %6, align 8
  %37 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %36, i32 0, i32 2
  store i32 %35, i32* %37, align 4
  %38 = load i32, i32* @DNS_PORT, align 4
  %39 = call i32 @htons(i32 %38)
  %40 = load %struct.sockaddr_in*, %struct.sockaddr_in** %6, align 8
  %41 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %40, i32 0, i32 1
  store i32 %39, i32* %41, align 4
  %42 = load i32, i32* %7, align 4
  %43 = load %struct.sockaddr_in*, %struct.sockaddr_in** %6, align 8
  %44 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %43, i32 0, i32 0
  %45 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %44, i32 0, i32 0
  store i32 %42, i32* %45, align 4
  store i32 1, i32* %9, align 4
  store i32 4, i32* %10, align 4
  %46 = load i32, i32* %8, align 4
  %47 = load i32, i32* @SOL_SOCKET, align 4
  %48 = load i32, i32* @SO_REUSEADDR, align 4
  %49 = bitcast i32* %9 to i8*
  %50 = load i32, i32* %10, align 4
  %51 = call i32 @setsockopt(i32 %46, i32 %47, i32 %48, i8* %49, i32 %50)
  %52 = load i32, i32* %8, align 4
  %53 = load %struct.sockaddr_in*, %struct.sockaddr_in** %6, align 8
  %54 = bitcast %struct.sockaddr_in* %53 to %struct.sockaddr*
  %55 = call i64 @bind(i32 %52, %struct.sockaddr* %54, i32 4)
  %56 = icmp slt i64 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %34
  %58 = call i32 @perror(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0))
  store i32 -1, i32* %4, align 4
  br label %68

59:                                               ; preds = %34
  %60 = load i32, i32* @stderr, align 4
  %61 = load %struct.sockaddr_in*, %struct.sockaddr_in** %6, align 8
  %62 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %61, i32 0, i32 0
  %63 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %62, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = call i8* @inet_ntoa(i32 %64)
  %66 = call i32 (i32, i8*, ...) @fprintf(i32 %60, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i8* %65)
  %67 = load i32, i32* %8, align 4
  store i32 %67, i32* %4, align 4
  br label %68

68:                                               ; preds = %59, %57, %29, %15
  %69 = load i32, i32* %4, align 4
  ret i32 %69
}

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i64 @kill(i32, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @setsockopt(i32, i32, i32, i8*, i32) #1

declare dso_local i64 @bind(i32, %struct.sockaddr*, i32) #1

declare dso_local i8* @inet_ntoa(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
