; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22356.c_nbt_session_request.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22356.c_nbt_session_request.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SMB_SESSIONREQ = common dso_local global i32 0, align 4
@tconx_servername = common dso_local global i8* null, align 8
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [40 x i8] c"write() failed, reason: '%s' (code %i)\0A\00", align 1
@errno = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @nbt_session_request(i32 %0, i8* %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [72 x i8], align 16
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %10 = getelementptr inbounds [72 x i8], [72 x i8]* %9, i64 0, i64 0
  %11 = load i32, i32* @SMB_SESSIONREQ, align 4
  %12 = call i32 @construct_nbt_session_header(i8* %10, i32 %11, i32 0, i32 68)
  %13 = load i8*, i8** %6, align 8
  store i8* %13, i8** @tconx_servername, align 8
  %14 = load i8*, i8** %6, align 8
  %15 = call i8* @netbios_encode_name(i8* %14, i32 32)
  store i8* %15, i8** %8, align 8
  %16 = load i8*, i8** %5, align 8
  %17 = call i8* @netbios_encode_name(i8* %16, i32 0)
  store i8* %17, i8** %7, align 8
  %18 = getelementptr inbounds [72 x i8], [72 x i8]* %9, i64 0, i64 0
  %19 = getelementptr inbounds i8, i8* %18, i64 4
  %20 = load i8*, i8** %8, align 8
  %21 = call i32 @memcpy(i8* %19, i8* %20, i32 34)
  %22 = getelementptr inbounds [72 x i8], [72 x i8]* %9, i64 0, i64 0
  %23 = getelementptr inbounds i8, i8* %22, i64 38
  %24 = load i8*, i8** %7, align 8
  %25 = call i32 @memcpy(i8* %23, i8* %24, i32 34)
  %26 = load i32, i32* %4, align 4
  %27 = getelementptr inbounds [72 x i8], [72 x i8]* %9, i64 0, i64 0
  %28 = call i32 @write(i32 %26, i8* %27, i32 72)
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %30, label %41

30:                                               ; preds = %3
  %31 = load i32, i32* %4, align 4
  %32 = call i32 @close(i32 %31)
  %33 = load i32, i32* @stderr, align 4
  %34 = load i32, i32* @errno, align 4
  %35 = call i8* @strerror(i32 %34)
  %36 = load i32, i32* @errno, align 4
  %37 = call i32 @fprintf(i32 %33, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* %35, i32 %36)
  %38 = load i32, i32* @errno, align 4
  %39 = sub nsw i32 0, %38
  %40 = call i32 @exit(i32 %39) #3
  unreachable

41:                                               ; preds = %3
  %42 = load i8*, i8** %7, align 8
  %43 = call i32 @free(i8* %42)
  %44 = load i8*, i8** %8, align 8
  %45 = call i32 @free(i8* %44)
  ret void
}

declare dso_local i32 @construct_nbt_session_header(i8*, i32, i32, i32) #1

declare dso_local i8* @netbios_encode_name(i8*, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @fprintf(i32, i8*, i8*, i32) #1

declare dso_local i8* @strerror(i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @free(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
