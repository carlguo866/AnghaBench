; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22356.c_construct_sesssetupx_header.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22356.c_construct_sesssetupx_header.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sesssetupx_request_header = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@sessionid = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @construct_sesssetupx_header(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.sesssetupx_request_header*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %9 = load i8*, i8** %2, align 8
  %10 = bitcast i8* %9 to %struct.sesssetupx_request_header*
  store %struct.sesssetupx_request_header* %10, %struct.sesssetupx_request_header** %3, align 8
  store i32 65535, i32* %4, align 4
  store i32 2, i32* %5, align 4
  store i32 31257, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i32 80, i32* %8, align 4
  %11 = load %struct.sesssetupx_request_header*, %struct.sesssetupx_request_header** %3, align 8
  %12 = call i32 @memset(%struct.sesssetupx_request_header* %11, i8 signext 0, i32 36)
  %13 = load %struct.sesssetupx_request_header*, %struct.sesssetupx_request_header** %3, align 8
  %14 = getelementptr inbounds %struct.sesssetupx_request_header, %struct.sesssetupx_request_header* %13, i32 0, i32 0
  store i32 13, i32* %14, align 4
  %15 = load %struct.sesssetupx_request_header*, %struct.sesssetupx_request_header** %3, align 8
  %16 = getelementptr inbounds %struct.sesssetupx_request_header, %struct.sesssetupx_request_header* %15, i32 0, i32 1
  store i32 255, i32* %16, align 4
  %17 = load %struct.sesssetupx_request_header*, %struct.sesssetupx_request_header** %3, align 8
  %18 = getelementptr inbounds %struct.sesssetupx_request_header, %struct.sesssetupx_request_header* %17, i32 0, i32 8
  %19 = call i32 @memcpy(i32* %18, i32* %4, i32 4)
  %20 = load %struct.sesssetupx_request_header*, %struct.sesssetupx_request_header** %3, align 8
  %21 = getelementptr inbounds %struct.sesssetupx_request_header, %struct.sesssetupx_request_header* %20, i32 0, i32 7
  %22 = call i32 @memcpy(i32* %21, i32* %6, i32 4)
  %23 = load %struct.sesssetupx_request_header*, %struct.sesssetupx_request_header** %3, align 8
  %24 = getelementptr inbounds %struct.sesssetupx_request_header, %struct.sesssetupx_request_header* %23, i32 0, i32 6
  %25 = call i32 @memcpy(i32* %24, i32* %5, i32 4)
  %26 = load %struct.sesssetupx_request_header*, %struct.sesssetupx_request_header** %3, align 8
  %27 = getelementptr inbounds %struct.sesssetupx_request_header, %struct.sesssetupx_request_header* %26, i32 0, i32 5
  %28 = call i32 @memcpy(i32* %27, i32* @sessionid, i32 4)
  %29 = load %struct.sesssetupx_request_header*, %struct.sesssetupx_request_header** %3, align 8
  %30 = getelementptr inbounds %struct.sesssetupx_request_header, %struct.sesssetupx_request_header* %29, i32 0, i32 4
  %31 = call i32 @memcpy(i32* %30, i32* %7, i32 4)
  %32 = load %struct.sesssetupx_request_header*, %struct.sesssetupx_request_header** %3, align 8
  %33 = getelementptr inbounds %struct.sesssetupx_request_header, %struct.sesssetupx_request_header* %32, i32 0, i32 3
  %34 = call i32 @memcpy(i32* %33, i32* %7, i32 4)
  %35 = load %struct.sesssetupx_request_header*, %struct.sesssetupx_request_header** %3, align 8
  %36 = getelementptr inbounds %struct.sesssetupx_request_header, %struct.sesssetupx_request_header* %35, i32 0, i32 2
  %37 = call i32 @memcpy(i32* %36, i32* %8, i32 4)
  ret void
}

declare dso_local i32 @memset(%struct.sesssetupx_request_header*, i8 signext, i32) #1

declare dso_local i32 @memcpy(i32*, i32*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
