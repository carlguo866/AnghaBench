; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_20340.c_base64_encode.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_20340.c_base64_encode.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [66 x i8] c"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @base64_encode(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  store i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i8** %3, align 8
  %7 = load i8*, i8** %2, align 8
  %8 = call i32 @strlen(i8* %7)
  %9 = mul nsw i32 %8, 2
  %10 = call i64 @malloc(i32 %9)
  %11 = inttoptr i64 %10 to i8*
  store i8* %11, i8** %6, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = load i8*, i8** %2, align 8
  %14 = call i32 @strlen(i8* %13)
  %15 = mul nsw i32 %14, 2
  %16 = call i32 @memset(i8* %12, i32 0, i32 %15)
  store i32 0, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %17

17:                                               ; preds = %166, %1
  %18 = load i32, i32* %4, align 4
  %19 = load i8*, i8** %2, align 8
  %20 = call i32 @strlen(i8* %19)
  %21 = load i8*, i8** %2, align 8
  %22 = call i32 @strlen(i8* %21)
  %23 = srem i32 %22, 3
  %24 = sub nsw i32 %20, %23
  %25 = icmp slt i32 %18, %24
  br i1 %25, label %26, label %171

26:                                               ; preds = %17
  %27 = load i8*, i8** %2, align 8
  %28 = load i32, i32* %4, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %27, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = ashr i32 %32, 2
  %34 = trunc i32 %33 to i8
  %35 = load i8*, i8** %6, align 8
  %36 = load i32, i32* %5, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %35, i64 %37
  store i8 %34, i8* %38, align 1
  %39 = load i8*, i8** %2, align 8
  %40 = load i32, i32* %4, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %39, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = sext i8 %43 to i32
  %45 = shl i32 %44, 6
  %46 = trunc i32 %45 to i8
  %47 = load i8*, i8** %6, align 8
  %48 = load i32, i32* %5, align 4
  %49 = add nsw i32 %48, 1
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %47, i64 %50
  store i8 %46, i8* %51, align 1
  %52 = load i8*, i8** %6, align 8
  %53 = load i32, i32* %5, align 4
  %54 = add nsw i32 %53, 1
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %52, i64 %55
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = ashr i32 %58, 2
  %60 = trunc i32 %59 to i8
  %61 = load i8*, i8** %6, align 8
  %62 = load i32, i32* %5, align 4
  %63 = add nsw i32 %62, 1
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8, i8* %61, i64 %64
  store i8 %60, i8* %65, align 1
  %66 = load i8*, i8** %6, align 8
  %67 = load i32, i32* %5, align 4
  %68 = add nsw i32 %67, 1
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %66, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = load i8*, i8** %2, align 8
  %74 = load i32, i32* %4, align 4
  %75 = add nsw i32 %74, 1
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %73, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = ashr i32 %79, 4
  %81 = or i32 %72, %80
  %82 = trunc i32 %81 to i8
  %83 = load i8*, i8** %6, align 8
  %84 = load i32, i32* %5, align 4
  %85 = add nsw i32 %84, 1
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %83, i64 %86
  store i8 %82, i8* %87, align 1
  %88 = load i8*, i8** %2, align 8
  %89 = load i32, i32* %4, align 4
  %90 = add nsw i32 %89, 1
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* %88, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = sext i8 %93 to i32
  %95 = shl i32 %94, 4
  %96 = trunc i32 %95 to i8
  %97 = load i8*, i8** %6, align 8
  %98 = load i32, i32* %5, align 4
  %99 = add nsw i32 %98, 2
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i8, i8* %97, i64 %100
  store i8 %96, i8* %101, align 1
  %102 = load i8*, i8** %6, align 8
  %103 = load i32, i32* %5, align 4
  %104 = add nsw i32 %103, 2
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, i8* %102, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = ashr i32 %108, 2
  %110 = trunc i32 %109 to i8
  %111 = load i8*, i8** %6, align 8
  %112 = load i32, i32* %5, align 4
  %113 = add nsw i32 %112, 2
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i8, i8* %111, i64 %114
  store i8 %110, i8* %115, align 1
  %116 = load i8*, i8** %6, align 8
  %117 = load i32, i32* %5, align 4
  %118 = add nsw i32 %117, 2
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i8, i8* %116, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = load i8*, i8** %2, align 8
  %124 = load i32, i32* %4, align 4
  %125 = add nsw i32 %124, 2
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %123, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = sext i8 %128 to i32
  %130 = ashr i32 %129, 6
  %131 = or i32 %122, %130
  %132 = trunc i32 %131 to i8
  %133 = load i8*, i8** %6, align 8
  %134 = load i32, i32* %5, align 4
  %135 = add nsw i32 %134, 2
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i8, i8* %133, i64 %136
  store i8 %132, i8* %137, align 1
  %138 = load i8*, i8** %2, align 8
  %139 = load i32, i32* %4, align 4
  %140 = add nsw i32 %139, 2
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds i8, i8* %138, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = sext i8 %143 to i32
  %145 = shl i32 %144, 2
  %146 = trunc i32 %145 to i8
  %147 = load i8*, i8** %6, align 8
  %148 = load i32, i32* %5, align 4
  %149 = add nsw i32 %148, 3
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i8, i8* %147, i64 %150
  store i8 %146, i8* %151, align 1
  %152 = load i8*, i8** %6, align 8
  %153 = load i32, i32* %5, align 4
  %154 = add nsw i32 %153, 3
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds i8, i8* %152, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = ashr i32 %158, 2
  %160 = trunc i32 %159 to i8
  %161 = load i8*, i8** %6, align 8
  %162 = load i32, i32* %5, align 4
  %163 = add nsw i32 %162, 3
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i8, i8* %161, i64 %164
  store i8 %160, i8* %165, align 1
  br label %166

166:                                              ; preds = %26
  %167 = load i32, i32* %4, align 4
  %168 = add nsw i32 %167, 3
  store i32 %168, i32* %4, align 4
  %169 = load i32, i32* %5, align 4
  %170 = add nsw i32 %169, 4
  store i32 %170, i32* %5, align 4
  br label %17

171:                                              ; preds = %17
  %172 = load i8*, i8** %2, align 8
  %173 = call i32 @strlen(i8* %172)
  %174 = srem i32 %173, 3
  %175 = icmp eq i32 %174, 1
  br i1 %175, label %176, label %226

176:                                              ; preds = %171
  %177 = load i8*, i8** %2, align 8
  %178 = load i32, i32* %4, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i8, i8* %177, i64 %179
  %181 = load i8, i8* %180, align 1
  %182 = sext i8 %181 to i32
  %183 = ashr i32 %182, 2
  %184 = trunc i32 %183 to i8
  %185 = load i8*, i8** %6, align 8
  %186 = load i32, i32* %5, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds i8, i8* %185, i64 %187
  store i8 %184, i8* %188, align 1
  %189 = load i8*, i8** %2, align 8
  %190 = load i32, i32* %4, align 4
  %191 = sext i32 %190 to i64
  %192 = getelementptr inbounds i8, i8* %189, i64 %191
  %193 = load i8, i8* %192, align 1
  %194 = sext i8 %193 to i32
  %195 = shl i32 %194, 6
  %196 = trunc i32 %195 to i8
  %197 = load i8*, i8** %6, align 8
  %198 = load i32, i32* %5, align 4
  %199 = add nsw i32 %198, 1
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i8, i8* %197, i64 %200
  store i8 %196, i8* %201, align 1
  %202 = load i8*, i8** %6, align 8
  %203 = load i32, i32* %5, align 4
  %204 = add nsw i32 %203, 1
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds i8, i8* %202, i64 %205
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i32
  %209 = ashr i32 %208, 2
  %210 = trunc i32 %209 to i8
  %211 = load i8*, i8** %6, align 8
  %212 = load i32, i32* %5, align 4
  %213 = add nsw i32 %212, 1
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i8, i8* %211, i64 %214
  store i8 %210, i8* %215, align 1
  %216 = load i8*, i8** %6, align 8
  %217 = load i32, i32* %5, align 4
  %218 = add nsw i32 %217, 2
  %219 = sext i32 %218 to i64
  %220 = getelementptr inbounds i8, i8* %216, i64 %219
  store i8 64, i8* %220, align 1
  %221 = load i8*, i8** %6, align 8
  %222 = load i32, i32* %5, align 4
  %223 = add nsw i32 %222, 3
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i8, i8* %221, i64 %224
  store i8 64, i8* %225, align 1
  br label %226

226:                                              ; preds = %176, %171
  %227 = load i8*, i8** %2, align 8
  %228 = call i32 @strlen(i8* %227)
  %229 = srem i32 %228, 3
  %230 = icmp eq i32 %229, 2
  br i1 %230, label %231, label %326

231:                                              ; preds = %226
  %232 = load i8*, i8** %2, align 8
  %233 = load i32, i32* %4, align 4
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds i8, i8* %232, i64 %234
  %236 = load i8, i8* %235, align 1
  %237 = sext i8 %236 to i32
  %238 = ashr i32 %237, 2
  %239 = trunc i32 %238 to i8
  %240 = load i8*, i8** %6, align 8
  %241 = load i32, i32* %5, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds i8, i8* %240, i64 %242
  store i8 %239, i8* %243, align 1
  %244 = load i8*, i8** %2, align 8
  %245 = load i32, i32* %4, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i8, i8* %244, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = sext i8 %248 to i32
  %250 = shl i32 %249, 6
  %251 = trunc i32 %250 to i8
  %252 = load i8*, i8** %6, align 8
  %253 = load i32, i32* %5, align 4
  %254 = add nsw i32 %253, 1
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds i8, i8* %252, i64 %255
  store i8 %251, i8* %256, align 1
  %257 = load i8*, i8** %6, align 8
  %258 = load i32, i32* %5, align 4
  %259 = add nsw i32 %258, 1
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds i8, i8* %257, i64 %260
  %262 = load i8, i8* %261, align 1
  %263 = zext i8 %262 to i32
  %264 = ashr i32 %263, 2
  %265 = trunc i32 %264 to i8
  %266 = load i8*, i8** %6, align 8
  %267 = load i32, i32* %5, align 4
  %268 = add nsw i32 %267, 1
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds i8, i8* %266, i64 %269
  store i8 %265, i8* %270, align 1
  %271 = load i8*, i8** %6, align 8
  %272 = load i32, i32* %5, align 4
  %273 = add nsw i32 %272, 1
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds i8, i8* %271, i64 %274
  %276 = load i8, i8* %275, align 1
  %277 = zext i8 %276 to i32
  %278 = load i8*, i8** %2, align 8
  %279 = load i32, i32* %4, align 4
  %280 = add nsw i32 %279, 1
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds i8, i8* %278, i64 %281
  %283 = load i8, i8* %282, align 1
  %284 = sext i8 %283 to i32
  %285 = ashr i32 %284, 4
  %286 = or i32 %277, %285
  %287 = trunc i32 %286 to i8
  %288 = load i8*, i8** %6, align 8
  %289 = load i32, i32* %5, align 4
  %290 = add nsw i32 %289, 1
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds i8, i8* %288, i64 %291
  store i8 %287, i8* %292, align 1
  %293 = load i8*, i8** %2, align 8
  %294 = load i32, i32* %4, align 4
  %295 = add nsw i32 %294, 1
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds i8, i8* %293, i64 %296
  %298 = load i8, i8* %297, align 1
  %299 = sext i8 %298 to i32
  %300 = shl i32 %299, 4
  %301 = trunc i32 %300 to i8
  %302 = load i8*, i8** %6, align 8
  %303 = load i32, i32* %5, align 4
  %304 = add nsw i32 %303, 2
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds i8, i8* %302, i64 %305
  store i8 %301, i8* %306, align 1
  %307 = load i8*, i8** %6, align 8
  %308 = load i32, i32* %5, align 4
  %309 = add nsw i32 %308, 2
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds i8, i8* %307, i64 %310
  %312 = load i8, i8* %311, align 1
  %313 = zext i8 %312 to i32
  %314 = ashr i32 %313, 2
  %315 = trunc i32 %314 to i8
  %316 = load i8*, i8** %6, align 8
  %317 = load i32, i32* %5, align 4
  %318 = add nsw i32 %317, 2
  %319 = sext i32 %318 to i64
  %320 = getelementptr inbounds i8, i8* %316, i64 %319
  store i8 %315, i8* %320, align 1
  %321 = load i8*, i8** %6, align 8
  %322 = load i32, i32* %5, align 4
  %323 = add nsw i32 %322, 3
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds i8, i8* %321, i64 %324
  store i8 64, i8* %325, align 1
  br label %326

326:                                              ; preds = %231, %226
  store i32 0, i32* %4, align 4
  br label %327

327:                                              ; preds = %349, %326
  %328 = load i8*, i8** %6, align 8
  %329 = load i32, i32* %4, align 4
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds i8, i8* %328, i64 %330
  %332 = load i8, i8* %331, align 1
  %333 = zext i8 %332 to i32
  %334 = icmp ne i32 %333, 0
  br i1 %334, label %335, label %352

335:                                              ; preds = %327
  %336 = load i8*, i8** %3, align 8
  %337 = load i8*, i8** %6, align 8
  %338 = load i32, i32* %4, align 4
  %339 = sext i32 %338 to i64
  %340 = getelementptr inbounds i8, i8* %337, i64 %339
  %341 = load i8, i8* %340, align 1
  %342 = zext i8 %341 to i64
  %343 = getelementptr inbounds i8, i8* %336, i64 %342
  %344 = load i8, i8* %343, align 1
  %345 = load i8*, i8** %6, align 8
  %346 = load i32, i32* %4, align 4
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds i8, i8* %345, i64 %347
  store i8 %344, i8* %348, align 1
  br label %349

349:                                              ; preds = %335
  %350 = load i32, i32* %4, align 4
  %351 = add nsw i32 %350, 1
  store i32 %351, i32* %4, align 4
  br label %327

352:                                              ; preds = %327
  %353 = load i8*, i8** %6, align 8
  %354 = load i32, i32* %4, align 4
  %355 = add nsw i32 %354, 1
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds i8, i8* %353, i64 %356
  store i8 0, i8* %357, align 1
  %358 = load i8*, i8** %6, align 8
  ret i8* %358
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
