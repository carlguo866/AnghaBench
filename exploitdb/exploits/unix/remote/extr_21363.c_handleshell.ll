; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_21363.c_handleshell.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_21363.c_handleshell.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [3 x i8] c"$ \00", align 1
@stdin = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [5 x i8] c"exit\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"! write error\0A\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"! read error\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @handleshell(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca [4096 x i8], align 16
  %4 = alloca [1024 x i8], align 16
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %6 = load i32, i32* @stderr, align 4
  %7 = call i32 @fprintf(i32 %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  br label %8

8:                                                ; preds = %1, %65
  %9 = call i32 @FD_ZERO(i32* %5)
  %10 = load i32, i32* @stdin, align 4
  %11 = call i32 @fileno(i32 %10)
  %12 = call i32 @FD_SET(i32 %11, i32* %5)
  %13 = load i32, i32* %2, align 4
  %14 = call i32 @FD_SET(i32 %13, i32* %5)
  %15 = load i32, i32* %2, align 4
  %16 = add nsw i32 %15, 1
  %17 = call i32 @select(i32 %16, i32* %5, i32* null, i32* null, i32* null)
  %18 = load i32, i32* @stdin, align 4
  %19 = call i32 @fileno(i32 %18)
  %20 = call i64 @FD_ISSET(i32 %19, i32* %5)
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %45

22:                                               ; preds = %8
  %23 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %24 = call i32 @memset(i8* %23, i8 signext 0, i32 1024)
  %25 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %26 = load i32, i32* @stdin, align 4
  %27 = call i32 @fgets(i8* %25, i32 1024, i32 %26)
  %28 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %29 = call i32* @strstr(i8* %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  %30 = icmp ne i32* %29, null
  br i1 %30, label %31, label %34

31:                                               ; preds = %22
  %32 = load i32, i32* %2, align 4
  %33 = call i32 @close(i32 %32)
  br label %66

34:                                               ; preds = %22
  %35 = load i32, i32* %2, align 4
  %36 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %37 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %38 = call i32 @strlen(i8* %37)
  %39 = call i64 @write(i32 %35, i8* %36, i32 %38)
  %40 = icmp slt i64 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %34
  %42 = load i32, i32* @stderr, align 4
  %43 = call i32 @fprintf(i32 %42, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0))
  br label %66

44:                                               ; preds = %34
  br label %45

45:                                               ; preds = %44, %8
  %46 = load i32, i32* %2, align 4
  %47 = call i64 @FD_ISSET(i32 %46, i32* %5)
  %48 = icmp ne i64 %47, 0
  br i1 %48, label %49, label %65

49:                                               ; preds = %45
  %50 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i64 0, i64 0
  %51 = call i32 @memset(i8* %50, i8 signext 0, i32 4096)
  %52 = load i32, i32* %2, align 4
  %53 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i64 0, i64 0
  %54 = call i64 @read(i32 %52, i8* %53, i32 4096)
  %55 = icmp slt i64 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %49
  %57 = load i32, i32* @stderr, align 4
  %58 = call i32 @fprintf(i32 %57, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  br label %66

59:                                               ; preds = %49
  %60 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i64 0, i64 0
  %61 = load i32, i32* @stderr, align 4
  %62 = call i32 @fputs(i8* %60, i32 %61)
  %63 = load i32, i32* @stderr, align 4
  %64 = call i32 @fprintf(i32 %63, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  br label %65

65:                                               ; preds = %59, %45
  br label %8

66:                                               ; preds = %56, %41, %31
  ret void
}

declare dso_local i32 @fprintf(i32, i8*) #1

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i32 @fileno(i32) #1

declare dso_local i32 @select(i32, i32*, i32*, i32*, i32*) #1

declare dso_local i64 @FD_ISSET(i32, i32*) #1

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i32 @fgets(i8*, i32, i32) #1

declare dso_local i32* @strstr(i8*, i8*) #1

declare dso_local i32 @close(i32) #1

declare dso_local i64 @write(i32, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i64 @read(i32, i8*, i32) #1

declare dso_local i32 @fputs(i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
