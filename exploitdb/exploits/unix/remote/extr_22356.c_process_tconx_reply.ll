; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22356.c_process_tconx_reply.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22356.c_process_tconx_reply.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.nbt_session_header = type { i32 }
%struct.smb_base_header = type { i32 }
%struct.tconx_reply_header = type { i32 }

@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [39 x i8] c"read() failed, reason: '%s' (code %i)\0A\00", align 1
@errno = common dso_local global i32 0, align 4
@tid = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [44 x i8] c"tree connect complete, got assigned tid %i\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @process_tconx_reply(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.nbt_session_header*, align 8
  %4 = alloca %struct.smb_base_header*, align 8
  %5 = alloca %struct.tconx_reply_header*, align 8
  %6 = alloca [1024 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %9 = load i32, i32* %2, align 4
  %10 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %11 = call i32 @read(i32 %9, i8* %10, i32 1024)
  store i32 %11, i32* %7, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %24

13:                                               ; preds = %1
  %14 = load i32, i32* %2, align 4
  %15 = call i32 @close(i32 %14)
  %16 = load i32, i32* @stderr, align 4
  %17 = load i32, i32* @errno, align 4
  %18 = call i8* @strerror(i32 %17)
  %19 = load i32, i32* @errno, align 4
  %20 = call i32 @fprintf(i32 %16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i8* %18, i32 %19)
  %21 = load i32, i32* @errno, align 4
  %22 = sub nsw i32 0, %21
  %23 = call i32 @exit(i32 %22) #3
  unreachable

24:                                               ; preds = %1
  %25 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %26 = bitcast i8* %25 to %struct.nbt_session_header*
  store %struct.nbt_session_header* %26, %struct.nbt_session_header** %3, align 8
  %27 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %28 = getelementptr inbounds i8, i8* %27, i64 4
  %29 = bitcast i8* %28 to %struct.smb_base_header*
  store %struct.smb_base_header* %29, %struct.smb_base_header** %4, align 8
  %30 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %31 = getelementptr inbounds i8, i8* %30, i64 4
  %32 = getelementptr inbounds i8, i8* %31, i64 4
  %33 = bitcast i8* %32 to %struct.tconx_reply_header*
  store %struct.tconx_reply_header* %33, %struct.tconx_reply_header** %5, align 8
  %34 = load %struct.smb_base_header*, %struct.smb_base_header** %4, align 8
  %35 = getelementptr inbounds %struct.smb_base_header, %struct.smb_base_header* %34, i32 0, i32 0
  %36 = call i32 @memcpy(i32* @tid, i32* %35, i32 4)
  %37 = load %struct.tconx_reply_header*, %struct.tconx_reply_header** %5, align 8
  %38 = getelementptr inbounds %struct.tconx_reply_header, %struct.tconx_reply_header* %37, i32 0, i32 0
  %39 = call i32 @memcpy(i32* %8, i32* %38, i32 4)
  %40 = load i32, i32* @tid, align 4
  %41 = call i32 @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), i32 %40)
  ret void
}

declare dso_local i32 @read(i32, i8*, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @fprintf(i32, i8*, i8*, i32) #1

declare dso_local i8* @strerror(i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @memcpy(i32*, i32*, i32) #1

declare dso_local i32 @printf(i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
