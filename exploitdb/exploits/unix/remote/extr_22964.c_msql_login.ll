; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22964.c_msql_login.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22964.c_msql_login.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [36 x i8] c"[-] couldn't connect to host %s:%u\0A\00", align 1
@SOL_SOCKET = common dso_local global i32 0, align 4
@SO_KEEPALIVE = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [31 x i8] c"[-] could not read socket: %s\0A\00", align 1
@errno = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [29 x i8] c"[-] bad handshake received.\0A\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"[-] client failed in handshake.\0A\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"[+] connected to %s -> %u\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @msql_login(i8* %0, i16 zeroext %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i16, align 2
  %5 = alloca [300 x i8], align 16
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i16 %1, i16* %4, align 2
  %10 = load i8*, i8** %3, align 8
  %11 = load i16, i16* %4, align 2
  %12 = call i32 @tcp_connect(i8* %10, i16 zeroext %11)
  store i32 %12, i32* %7, align 4
  %13 = load i32, i32* %7, align 4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %2
  %16 = load i8*, i8** %3, align 8
  %17 = load i16, i16* %4, align 2
  %18 = zext i16 %17 to i32
  %19 = call i32 (i8*, ...) @fatal(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i8* %16, i32 %18)
  br label %20

20:                                               ; preds = %15, %2
  %21 = load i32, i32* %7, align 4
  %22 = load i32, i32* @SOL_SOCKET, align 4
  %23 = load i32, i32* @SO_KEEPALIVE, align 4
  %24 = bitcast i32* %9 to i8*
  %25 = call i32 @setsockopt(i32 %21, i32 %22, i32 %23, i8* %24, i32 4)
  %26 = bitcast [300 x i8]* %5 to i8**
  %27 = call i32 @memset(i8** %26, i32 0, i32 300)
  %28 = load i32, i32* %7, align 4
  %29 = call i32 (i32, ...) @read(i32 %28, [300 x i8]* %5, i64 299)
  store i32 %29, i32* %8, align 4
  %30 = load i32, i32* %8, align 4
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %20
  %33 = load i32, i32* @errno, align 4
  %34 = call i32 @strerror(i32 %33)
  %35 = call i32 (i8*, ...) @fatal(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i32 %34)
  br label %36

36:                                               ; preds = %32, %20
  %37 = bitcast [300 x i8]* %5 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 4
  store i8* %38, i8** %6, align 8
  %39 = load i8*, i8** %6, align 8
  %40 = call i32 @atoi(i8* %39)
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = call i32 (i8*, ...) @fatal(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0))
  br label %44

44:                                               ; preds = %42, %36
  %45 = load i8*, i8** %6, align 8
  %46 = getelementptr inbounds i8, i8* %45, i32 1
  store i8* %46, i8** %6, align 8
  %47 = load i8*, i8** %6, align 8
  %48 = load i8, i8* %47, align 1
  %49 = sext i8 %48 to i32
  %50 = icmp ne i32 %49, 58
  br i1 %50, label %51, label %54

51:                                               ; preds = %44
  %52 = load i8*, i8** %6, align 8
  %53 = getelementptr inbounds i8, i8* %52, i32 1
  store i8* %53, i8** %6, align 8
  br label %54

54:                                               ; preds = %51, %44
  %55 = load i8*, i8** %6, align 8
  %56 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %56, i8** %6, align 8
  %57 = load i8*, i8** %6, align 8
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp sge i32 %59, 49
  br i1 %60, label %61, label %80

61:                                               ; preds = %54
  %62 = load i8*, i8** %6, align 8
  %63 = load i8, i8* %62, align 1
  %64 = sext i8 %63 to i32
  %65 = icmp sle i32 %64, 51
  br i1 %65, label %66, label %80

66:                                               ; preds = %61
  %67 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 0
  store i8 5, i8* %67, align 16
  %68 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 1
  store i8 0, i8* %68, align 1
  %69 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 2
  store i8 0, i8* %69, align 2
  %70 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 3
  store i8 0, i8* %70, align 1
  %71 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 4
  store i8 114, i8* %71, align 4
  %72 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 5
  store i8 111, i8* %72, align 1
  %73 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 6
  store i8 111, i8* %73, align 2
  %74 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 7
  store i8 116, i8* %74, align 1
  %75 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 8
  store i8 10, i8* %75, align 8
  %76 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 9
  store i8 0, i8* %76, align 1
  %77 = load i32, i32* %7, align 4
  %78 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 0
  %79 = call i32 @write(i32 %77, i8* %78, i32 9)
  br label %80

80:                                               ; preds = %66, %61, %54
  %81 = load i32, i32* %7, align 4
  %82 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 0
  %83 = call i32 (i32, ...) @read(i32 %81, i8* %82, i64 299)
  store i32 %83, i32* %8, align 4
  %84 = load i32, i32* %8, align 4
  %85 = icmp slt i32 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %80
  %87 = call i32 (i8*, ...) @fatal(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0))
  br label %88

88:                                               ; preds = %86, %80
  %89 = load i8*, i8** %3, align 8
  %90 = load i16, i16* %4, align 2
  %91 = call i32 @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i8* %89, i16 zeroext %90)
  %92 = load i32, i32* %7, align 4
  ret i32 %92
}

declare dso_local i32 @tcp_connect(i8*, i16 zeroext) #1

declare dso_local i32 @fatal(i8*, ...) #1

declare dso_local i32 @setsockopt(i32, i32, i32, i8*, i32) #1

declare dso_local i32 @memset(i8**, i32, i32) #1

declare dso_local i32 @read(i32, ...) #1

declare dso_local i32 @strerror(i32) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @printf(i8*, i8*, i16 zeroext) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
