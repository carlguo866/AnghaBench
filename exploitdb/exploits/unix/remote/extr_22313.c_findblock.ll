; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22313.c_findblock.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22313.c_findblock.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@OFF1 = common dso_local global i32 0, align 4
@PTR = common dso_local global i32 0, align 4
@lookup = common dso_local global i64* null, align 8
@OFF2 = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @findblock(i32 %0, i32 %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %12 = load i32, i32* %5, align 4
  store i32 %12, i32* %11, align 4
  %13 = load i32, i32* %7, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %61

15:                                               ; preds = %3
  %16 = load i32, i32* @OFF1, align 4
  %17 = load i32, i32* %5, align 4
  %18 = add nsw i32 %16, %17
  %19 = load i32, i32* @PTR, align 4
  %20 = sub nsw i32 %18, %19
  store i32 %20, i32* %10, align 4
  br label %21

21:                                               ; preds = %15, %56
  br label %22

22:                                               ; preds = %39, %21
  %23 = load i32, i32* %11, align 4
  %24 = call i32 @validaddr(i32 %23)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %22
  %27 = load i64*, i64** @lookup, align 8
  %28 = load i32, i32* %10, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i64, i64* %27, i64 %29
  %31 = load i64, i64* %30, align 8
  %32 = icmp ne i64 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %26, %22
  %34 = load i32, i32* %10, align 4
  %35 = load i32, i32* @OFF2, align 4
  %36 = icmp slt i32 %34, %35
  br label %37

37:                                               ; preds = %33, %26
  %38 = phi i1 [ false, %26 ], [ %36, %33 ]
  br i1 %38, label %39, label %44

39:                                               ; preds = %37
  %40 = load i32, i32* %10, align 4
  %41 = add nsw i32 %40, 4
  store i32 %41, i32* %10, align 4
  %42 = load i32, i32* %11, align 4
  %43 = add nsw i32 %42, 4
  store i32 %43, i32* %11, align 4
  br label %22

44:                                               ; preds = %37
  %45 = load i32, i32* %10, align 4
  %46 = load i32, i32* @OFF2, align 4
  %47 = icmp sge i32 %45, %46
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  store i32 0, i32* %4, align 4
  br label %105

49:                                               ; preds = %44
  %50 = load i32, i32* %10, align 4
  %51 = load i32, i32* %6, align 4
  %52 = call i64 @freeblock(i32 %50, i32 %51)
  %53 = icmp ne i64 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %49
  %55 = load i32, i32* %10, align 4
  store i32 %55, i32* %4, align 4
  br label %105

56:                                               ; preds = %49
  %57 = load i32, i32* %10, align 4
  %58 = add nsw i32 %57, 4
  store i32 %58, i32* %10, align 4
  %59 = load i32, i32* %11, align 4
  %60 = add nsw i32 %59, 4
  store i32 %60, i32* %11, align 4
  br label %21

61:                                               ; preds = %3
  %62 = load i32, i32* %5, align 4
  %63 = load i32, i32* @PTR, align 4
  %64 = sub nsw i32 %62, %63
  store i32 %64, i32* %10, align 4
  br label %65

65:                                               ; preds = %61, %100
  br label %66

66:                                               ; preds = %83, %65
  %67 = load i32, i32* %11, align 4
  %68 = call i32 @validaddr(i32 %67)
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %66
  %71 = load i64*, i64** @lookup, align 8
  %72 = load i32, i32* %10, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i64, i64* %71, i64 %73
  %75 = load i64, i64* %74, align 8
  %76 = icmp ne i64 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %70, %66
  %78 = load i32, i32* %10, align 4
  %79 = load i32, i32* @OFF1, align 4
  %80 = icmp sgt i32 %78, %79
  br label %81

81:                                               ; preds = %77, %70
  %82 = phi i1 [ false, %70 ], [ %80, %77 ]
  br i1 %82, label %83, label %88

83:                                               ; preds = %81
  %84 = load i32, i32* %10, align 4
  %85 = sub nsw i32 %84, 4
  store i32 %85, i32* %10, align 4
  %86 = load i32, i32* %11, align 4
  %87 = sub nsw i32 %86, 4
  store i32 %87, i32* %11, align 4
  br label %66

88:                                               ; preds = %81
  %89 = load i32, i32* %10, align 4
  %90 = load i32, i32* @OFF1, align 4
  %91 = icmp slt i32 %89, %90
  br i1 %91, label %92, label %93

92:                                               ; preds = %88
  store i32 0, i32* %4, align 4
  br label %105

93:                                               ; preds = %88
  %94 = load i32, i32* %10, align 4
  %95 = load i32, i32* %6, align 4
  %96 = call i64 @freeblock(i32 %94, i32 %95)
  %97 = icmp ne i64 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %93
  %99 = load i32, i32* %10, align 4
  store i32 %99, i32* %4, align 4
  br label %105

100:                                              ; preds = %93
  %101 = load i32, i32* %10, align 4
  %102 = sub nsw i32 %101, 4
  store i32 %102, i32* %10, align 4
  %103 = load i32, i32* %11, align 4
  %104 = sub nsw i32 %103, 4
  store i32 %104, i32* %11, align 4
  br label %65

105:                                              ; preds = %98, %92, %54, %48
  %106 = load i32, i32* %4, align 4
  ret i32 %106
}

declare dso_local i32 @validaddr(i32) #1

declare dso_local i64 @freeblock(i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
