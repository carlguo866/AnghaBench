; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22964.c_msql_selectdb.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22964.c_msql_selectdb.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [6 x i8] c"2:%s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @msql_selectdb(i32 %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca [300 x i8], align 16
  %6 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  store i32 117, i32* %6, align 4
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 255
  %9 = trunc i32 %8 to i8
  %10 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 0
  store i8 %9, i8* %10, align 16
  %11 = load i32, i32* %6, align 4
  %12 = and i32 %11, 65280
  %13 = trunc i32 %12 to i8
  %14 = zext i8 %13 to i32
  %15 = ashr i32 %14, 8
  %16 = trunc i32 %15 to i8
  %17 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 1
  store i8 %16, i8* %17, align 1
  %18 = load i32, i32* %6, align 4
  %19 = and i32 %18, 16711680
  %20 = trunc i32 %19 to i8
  %21 = zext i8 %20 to i32
  %22 = ashr i32 %21, 16
  %23 = trunc i32 %22 to i8
  %24 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 2
  store i8 %23, i8* %24, align 2
  %25 = load i32, i32* %6, align 4
  %26 = and i32 %25, -16777216
  %27 = trunc i32 %26 to i8
  %28 = zext i8 %27 to i32
  %29 = ashr i32 %28, 24
  %30 = trunc i32 %29 to i8
  %31 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 3
  store i8 %30, i8* %31, align 1
  %32 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 4
  %33 = load i8*, i8** %4, align 8
  %34 = call i32 @snprintf(i8* %32, i32 299, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* %33)
  %35 = load i32, i32* %3, align 4
  %36 = getelementptr inbounds [300 x i8], [300 x i8]* %5, i64 0, i64 0
  %37 = load i32, i32* %6, align 4
  %38 = call i32 @write(i32 %35, i8* %36, i32 %37)
  store i32 %38, i32* %6, align 4
  ret void
}

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*) #1

declare dso_local i32 @write(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
