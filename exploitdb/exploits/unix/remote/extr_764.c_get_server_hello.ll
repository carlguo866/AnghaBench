; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_764.c_get_server_hello.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_764.c_get_server_hello.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i32, i32, i32* }

@BUFSIZE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [18 x i8] c"Server error: %s\0A\00", align 1
@.str.1 = private unnamed_addr constant [47 x i8] c"get_server_hello: Packet too short (len = %d)\0A\00", align 1
@SSL2_MT_SERVER_HELLO = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [57 x i8] c"get_server_hello: Expected SSL2 MT SERVER HELLO, got %x\0A\00", align 1
@.str.3 = private unnamed_addr constant [43 x i8] c"get_server_hello: SESSION-ID-HIT is not 0\0A\00", align 1
@.str.4 = private unnamed_addr constant [67 x i8] c"get_server_hello: CERTIFICATE-TYPE is not SSL CT X509 CERTIFICATE\0A\00", align 1
@.str.5 = private unnamed_addr constant [49 x i8] c"get_server_hello: Unsupported server version %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [41 x i8] c"get_server_hello: Malformed packet size\0A\00", align 1
@.str.7 = private unnamed_addr constant [49 x i8] c"get server hello: Cannot parse x509 certificate\0A\00", align 1
@.str.8 = private unnamed_addr constant [62 x i8] c"get server hello: CIPHER-SPECS-LENGTH is not a multiple of 3\0A\00", align 1
@.str.9 = private unnamed_addr constant [62 x i8] c"get server hello: Remote server does not support 128 bit RC4\0A\00", align 1
@SSL2_MAX_CONNECTION_ID_LENGTH = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [52 x i8] c"get server hello: CONNECTION-ID-LENGTH is too long\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @get_server_hello(%struct.TYPE_4__* %0) #0 {
  %2 = alloca %struct.TYPE_4__*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store %struct.TYPE_4__* %0, %struct.TYPE_4__** %2, align 8
  %13 = load i32, i32* @BUFSIZE, align 4
  %14 = zext i32 %13 to i64
  %15 = call i8* @llvm.stacksave()
  store i8* %15, i8** %3, align 8
  %16 = alloca i8, i64 %14, align 16
  store i64 %14, i64* %4, align 8
  %17 = load %struct.TYPE_4__*, %struct.TYPE_4__** %2, align 8
  %18 = trunc i64 %14 to i32
  %19 = call i32 @read_ssl_packet(%struct.TYPE_4__* %17, i8* %16, i32 %18)
  store i32 %19, i32* %7, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %29, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds i8, i8* %16, i64 1
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 1
  %25 = call i32 @ntohs(i32 %24)
  %26 = call i8* @ssl_error(i32 %25)
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* %26)
  %28 = call i32 @exit(i32 1) #4
  unreachable

29:                                               ; preds = %1
  %30 = load i32, i32* %7, align 4
  %31 = icmp slt i32 %30, 11
  br i1 %31, label %32, label %36

32:                                               ; preds = %29
  %33 = load i32, i32* %7, align 4
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 %33)
  %35 = call i32 @exit(i32 1) #4
  unreachable

36:                                               ; preds = %29
  store i8* %16, i8** %5, align 8
  %37 = load i8*, i8** %5, align 8
  %38 = getelementptr inbounds i8, i8* %37, i32 1
  store i8* %38, i8** %5, align 8
  %39 = load i8, i8* %37, align 1
  %40 = zext i8 %39 to i32
  %41 = load i32, i32* @SSL2_MT_SERVER_HELLO, align 4
  %42 = icmp ne i32 %40, %41
  br i1 %42, label %43, label %50

43:                                               ; preds = %36
  %44 = load i8*, i8** %5, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 -1
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.2, i64 0, i64 0), i32 %47)
  %49 = call i32 @exit(i32 1) #4
  unreachable

50:                                               ; preds = %36
  %51 = load i8*, i8** %5, align 8
  %52 = getelementptr inbounds i8, i8* %51, i32 1
  store i8* %52, i8** %5, align 8
  %53 = load i8, i8* %51, align 1
  %54 = zext i8 %53 to i32
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0))
  %58 = call i32 @exit(i32 1) #4
  unreachable

59:                                               ; preds = %50
  %60 = load i8*, i8** %5, align 8
  %61 = getelementptr inbounds i8, i8* %60, i32 1
  store i8* %61, i8** %5, align 8
  %62 = load i8, i8* %60, align 1
  %63 = zext i8 %62 to i32
  %64 = icmp ne i32 %63, 1
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.4, i64 0, i64 0))
  %67 = call i32 @exit(i32 1) #4
  unreachable

68:                                               ; preds = %59
  %69 = load i8*, i8** %5, align 8
  %70 = load i32, i32* %8, align 4
  %71 = call i32 @n2s(i8* %69, i32 %70)
  %72 = load i32, i32* %8, align 4
  %73 = icmp ne i32 %72, 2
  br i1 %73, label %74, label %78

74:                                               ; preds = %68
  %75 = load i32, i32* %8, align 4
  %76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i64 0, i64 0), i32 %75)
  %77 = call i32 @exit(i32 1) #4
  unreachable

78:                                               ; preds = %68
  %79 = load i8*, i8** %5, align 8
  %80 = load i32, i32* %9, align 4
  %81 = call i32 @n2s(i8* %79, i32 %80)
  %82 = load i8*, i8** %5, align 8
  %83 = load i32, i32* %10, align 4
  %84 = call i32 @n2s(i8* %82, i32 %83)
  %85 = load i8*, i8** %5, align 8
  %86 = load i32, i32* %11, align 4
  %87 = call i32 @n2s(i8* %85, i32 %86)
  %88 = load i32, i32* %7, align 4
  %89 = load i32, i32* %9, align 4
  %90 = add nsw i32 11, %89
  %91 = load i32, i32* %10, align 4
  %92 = add nsw i32 %90, %91
  %93 = load i32, i32* %11, align 4
  %94 = add nsw i32 %92, %93
  %95 = icmp ne i32 %88, %94
  br i1 %95, label %96, label %99

96:                                               ; preds = %78
  %97 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0))
  %98 = call i32 @exit(i32 1) #4
  unreachable

99:                                               ; preds = %78
  %100 = load %struct.TYPE_4__*, %struct.TYPE_4__** %2, align 8
  %101 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %100, i32 0, i32 2
  store i32* null, i32** %101, align 8
  %102 = load i32, i32* %9, align 4
  %103 = sext i32 %102 to i64
  %104 = call i32* @d2i_X509(i32* null, i8** %5, i64 %103)
  %105 = load %struct.TYPE_4__*, %struct.TYPE_4__** %2, align 8
  %106 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %105, i32 0, i32 2
  store i32* %104, i32** %106, align 8
  %107 = load %struct.TYPE_4__*, %struct.TYPE_4__** %2, align 8
  %108 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %107, i32 0, i32 2
  %109 = load i32*, i32** %108, align 8
  %110 = icmp eq i32* %109, null
  br i1 %110, label %111, label %114

111:                                              ; preds = %99
  %112 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i64 0, i64 0))
  %113 = call i32 @exit(i32 1) #4
  unreachable

114:                                              ; preds = %99
  %115 = load i32, i32* %10, align 4
  %116 = srem i32 %115, 3
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %114
  %119 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.8, i64 0, i64 0))
  %120 = call i32 @exit(i32 1) #4
  unreachable

121:                                              ; preds = %114
  store i32 0, i32* %12, align 4
  %122 = load i8*, i8** %5, align 8
  %123 = load i32, i32* %10, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i8, i8* %122, i64 %124
  store i8* %125, i8** %6, align 8
  br label %126

126:                                              ; preds = %150, %121
  %127 = load i8*, i8** %5, align 8
  %128 = load i8*, i8** %6, align 8
  %129 = icmp ult i8* %127, %128
  br i1 %129, label %130, label %153

130:                                              ; preds = %126
  %131 = load i8*, i8** %5, align 8
  %132 = getelementptr inbounds i8, i8* %131, i64 0
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = icmp eq i32 %134, 1
  br i1 %135, label %136, label %149

136:                                              ; preds = %130
  %137 = load i8*, i8** %5, align 8
  %138 = getelementptr inbounds i8, i8* %137, i64 1
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %149

142:                                              ; preds = %136
  %143 = load i8*, i8** %5, align 8
  %144 = getelementptr inbounds i8, i8* %143, i64 2
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = icmp eq i32 %146, 128
  br i1 %147, label %148, label %149

148:                                              ; preds = %142
  store i32 1, i32* %12, align 4
  br label %149

149:                                              ; preds = %148, %142, %136, %130
  br label %150

150:                                              ; preds = %149
  %151 = load i8*, i8** %5, align 8
  %152 = getelementptr inbounds i8, i8* %151, i64 3
  store i8* %152, i8** %5, align 8
  br label %126

153:                                              ; preds = %126
  %154 = load i32, i32* %12, align 4
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %159, label %156

156:                                              ; preds = %153
  %157 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.9, i64 0, i64 0))
  %158 = call i32 @exit(i32 1) #4
  unreachable

159:                                              ; preds = %153
  %160 = load i32, i32* %11, align 4
  %161 = load i32, i32* @SSL2_MAX_CONNECTION_ID_LENGTH, align 4
  %162 = icmp sgt i32 %160, %161
  br i1 %162, label %163, label %166

163:                                              ; preds = %159
  %164 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.10, i64 0, i64 0))
  %165 = call i32 @exit(i32 1) #4
  unreachable

166:                                              ; preds = %159
  %167 = load i32, i32* %11, align 4
  %168 = load %struct.TYPE_4__*, %struct.TYPE_4__** %2, align 8
  %169 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %168, i32 0, i32 0
  store i32 %167, i32* %169, align 8
  %170 = load %struct.TYPE_4__*, %struct.TYPE_4__** %2, align 8
  %171 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = load i8*, i8** %5, align 8
  %174 = load i32, i32* %11, align 4
  %175 = call i32 @memcpy(i32 %172, i8* %173, i32 %174)
  %176 = load i8*, i8** %3, align 8
  call void @llvm.stackrestore(i8* %176)
  ret void
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @read_ssl_packet(%struct.TYPE_4__*, i8*, i32) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i8* @ssl_error(i32) #2

declare dso_local i32 @ntohs(i32) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @n2s(i8*, i32) #2

declare dso_local i32* @d2i_X509(i32*, i8**, i64) #2

declare dso_local i32 @memcpy(i32, i8*, i32) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
