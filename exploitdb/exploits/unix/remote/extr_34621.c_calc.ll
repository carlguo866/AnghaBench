; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_34621.c_calc.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_34621.c_calc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @calc(double %0, i32* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca double, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store double %0, double* %4, align 8
  store i32* %1, i32** %5, align 8
  %11 = load double, double* %4, align 8
  %12 = call i32 @UINT64(i32 1)
  %13 = shl i32 %12, 53
  %14 = sitofp i32 %13 to double
  %15 = fmul double %11, %14
  %16 = fptosi double %15 to i32
  store i32 %16, i32* %7, align 4
  %17 = load i32, i32* %7, align 4
  %18 = ashr i32 %17, 27
  store i32 %18, i32* %8, align 4
  %19 = load i32, i32* %7, align 4
  %20 = and i32 %19, 134217727
  store i32 %20, i32* %9, align 4
  %21 = load double, double* %4, align 8
  %22 = fcmp oge double %21, 1.000000e+00
  br i1 %22, label %26, label %23

23:                                               ; preds = %2
  %24 = load double, double* %4, align 8
  %25 = fcmp olt double %24, 0.000000e+00
  br i1 %25, label %26, label %27

26:                                               ; preds = %23, %2
  store i32 1, i32* %3, align 4
  br label %51

27:                                               ; preds = %23
  store i32 0, i32* %6, align 4
  br label %28

28:                                               ; preds = %47, %27
  %29 = load i32, i32* %6, align 4
  %30 = icmp slt i32 %29, 4194304
  br i1 %30, label %31, label %50

31:                                               ; preds = %28
  %32 = load i32, i32* %8, align 4
  %33 = shl i32 %32, 22
  %34 = load i32, i32* %6, align 4
  %35 = or i32 %33, %34
  %36 = call i32 @adv(i32 %35)
  %37 = load i32*, i32** %5, align 8
  store i32 %36, i32* %37, align 4
  %38 = load i32*, i32** %5, align 8
  %39 = load i32, i32* %38, align 4
  %40 = ashr i32 %39, 21
  %41 = and i32 %40, 134217727
  store i32 %41, i32* %10, align 4
  %42 = load i32, i32* %10, align 4
  %43 = load i32, i32* %9, align 4
  %44 = icmp eq i32 %42, %43
  br i1 %44, label %45, label %46

45:                                               ; preds = %31
  store i32 0, i32* %3, align 4
  br label %51

46:                                               ; preds = %31
  br label %47

47:                                               ; preds = %46
  %48 = load i32, i32* %6, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %6, align 4
  br label %28

50:                                               ; preds = %28
  store i32 2, i32* %3, align 4
  br label %51

51:                                               ; preds = %50, %45, %26
  %52 = load i32, i32* %3, align 4
  ret i32 %52
}

declare dso_local i32 @UINT64(i32) #1

declare dso_local i32 @adv(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
