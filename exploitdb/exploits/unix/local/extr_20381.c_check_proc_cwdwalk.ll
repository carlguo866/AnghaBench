; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_20381.c_check_proc_cwdwalk.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_20381.c_check_proc_cwdwalk.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [15 x i8] c"cwdwalk test:\0A\00", align 1
@.str.1 = private unnamed_addr constant [72 x i8] c"  Error: Couldn't get working directory while performing cwdwalk test.\0A\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"/proc/self\00", align 1
@.str.3 = private unnamed_addr constant [70 x i8] c"  Error: Couldn't chdir to /proc/self while performing cwdwalk test.\0A\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"cwd\00", align 1
@.str.5 = private unnamed_addr constant [73 x i8] c" Error: Couldn't chdir to /proc/self/cwd while performing cwdwalk test.\0A\00", align 1
@.str.6 = private unnamed_addr constant [58 x i8] c"  ManTrap? getwd() failed after chdir to /proc/self/cwd.\0A\00", align 1
@.str.7 = private unnamed_addr constant [60 x i8] c"  Normal: getwd() succeeded after chdir to /proc/self/cwd.\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @check_proc_cwdwalk() #0 {
  %1 = alloca [2048 x i8], align 16
  %2 = alloca [2048 x i8], align 16
  %3 = call i32 @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  %4 = getelementptr inbounds [2048 x i8], [2048 x i8]* %1, i64 0, i64 0
  %5 = call i32* @getwd(i8* %4)
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %0
  %8 = call i32 @printf(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0))
  br label %30

9:                                                ; preds = %0
  %10 = call i32 @chdir(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0))
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %9
  %13 = call i32 @printf(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0))
  br label %30

14:                                               ; preds = %9
  %15 = call i32 @chdir(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0))
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = call i32 @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.5, i64 0, i64 0))
  br label %30

19:                                               ; preds = %14
  %20 = getelementptr inbounds [2048 x i8], [2048 x i8]* %2, i64 0, i64 0
  %21 = call i32* @getwd(i8* %20)
  %22 = icmp eq i32* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = call i32 @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.6, i64 0, i64 0))
  br label %27

25:                                               ; preds = %19
  %26 = call i32 @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.7, i64 0, i64 0))
  br label %27

27:                                               ; preds = %25, %23
  %28 = getelementptr inbounds [2048 x i8], [2048 x i8]* %1, i64 0, i64 0
  %29 = call i32 @chdir(i8* %28)
  br label %30

30:                                               ; preds = %27, %17, %12, %7
  ret void
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i32* @getwd(i8*) #1

declare dso_local i32 @chdir(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
