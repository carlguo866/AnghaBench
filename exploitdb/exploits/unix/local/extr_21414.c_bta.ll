; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_21414.c_bta.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_21414.c_bta.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@NULLBASE = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [46 x i8] c". braille table string for byte: 0x%x is: %s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @bta(i32 %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca [9 x i32], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %9 = getelementptr inbounds [9 x i32], [9 x i32]* %5, i64 0, i64 0
  store i32 0, i32* %9, align 16
  %10 = getelementptr inbounds [9 x i32], [9 x i32]* %5, i64 0, i64 1
  store i32 1, i32* %10, align 4
  %11 = getelementptr inbounds [9 x i32], [9 x i32]* %5, i64 0, i64 2
  store i32 2, i32* %11, align 8
  %12 = getelementptr inbounds [9 x i32], [9 x i32]* %5, i64 0, i64 3
  store i32 4, i32* %12, align 4
  %13 = getelementptr inbounds [9 x i32], [9 x i32]* %5, i64 0, i64 4
  store i32 8, i32* %13, align 16
  %14 = getelementptr inbounds [9 x i32], [9 x i32]* %5, i64 0, i64 5
  store i32 16, i32* %14, align 4
  %15 = getelementptr inbounds [9 x i32], [9 x i32]* %5, i64 0, i64 6
  store i32 32, i32* %15, align 8
  %16 = getelementptr inbounds [9 x i32], [9 x i32]* %5, i64 0, i64 7
  store i32 64, i32* %16, align 4
  %17 = getelementptr inbounds [9 x i32], [9 x i32]* %5, i64 0, i64 8
  store i32 128, i32* %17, align 16
  %18 = load i32, i32* %3, align 4
  store i32 %18, i32* %8, align 4
  store i32 8, i32* %6, align 4
  br label %19

19:                                               ; preds = %41, %2
  %20 = load i32, i32* %6, align 4
  %21 = icmp sge i32 %20, 0
  br i1 %21, label %22, label %44

22:                                               ; preds = %19
  %23 = load i32, i32* %6, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [9 x i32], [9 x i32]* %5, i64 0, i64 %24
  %26 = load i32, i32* %25, align 4
  %27 = load i32, i32* %8, align 4
  %28 = icmp sle i32 %26, %27
  br i1 %28, label %29, label %40

29:                                               ; preds = %22
  %30 = load i32, i32* %6, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [9 x i32], [9 x i32]* %5, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = load i32, i32* %8, align 4
  %35 = sub nsw i32 %34, %33
  store i32 %35, i32* %8, align 4
  %36 = load i8*, i8** %4, align 8
  %37 = load i32, i32* %6, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %36, i64 %38
  store i8 120, i8* %39, align 1
  br label %40

40:                                               ; preds = %29, %22
  br label %41

41:                                               ; preds = %40
  %42 = load i32, i32* %6, align 4
  %43 = add nsw i32 %42, -1
  store i32 %43, i32* %6, align 4
  br label %19

44:                                               ; preds = %19
  store i32 0, i32* %6, align 4
  br label %45

45:                                               ; preds = %73, %44
  %46 = load i32, i32* %6, align 4
  %47 = icmp slt i32 %46, 9
  br i1 %47, label %48, label %76

48:                                               ; preds = %45
  %49 = load i8*, i8** %4, align 8
  %50 = load i32, i32* %6, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = sext i8 %53 to i32
  %55 = icmp eq i32 %54, 120
  br i1 %55, label %56, label %65

56:                                               ; preds = %48
  %57 = load i32, i32* @NULLBASE, align 4
  %58 = load i32, i32* %6, align 4
  %59 = add nsw i32 %57, %58
  %60 = trunc i32 %59 to i8
  %61 = load i8*, i8** %4, align 8
  %62 = load i32, i32* %6, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %61, i64 %63
  store i8 %60, i8* %64, align 1
  br label %72

65:                                               ; preds = %48
  %66 = load i32, i32* @NULLBASE, align 4
  %67 = trunc i32 %66 to i8
  %68 = load i8*, i8** %4, align 8
  %69 = load i32, i32* %6, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %68, i64 %70
  store i8 %67, i8* %71, align 1
  br label %72

72:                                               ; preds = %65, %56
  br label %73

73:                                               ; preds = %72
  %74 = load i32, i32* %6, align 4
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %6, align 4
  br label %45

76:                                               ; preds = %45
  %77 = load i8*, i8** %4, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 9
  store i8 0, i8* %78, align 1
  %79 = load i32, i32* @stderr, align 4
  %80 = load i32, i32* %3, align 4
  %81 = load i8*, i8** %4, align 8
  %82 = call i32 @fprintf(i32 %79, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i32 %80, i8* %81)
  ret void
}

declare dso_local i32 @fprintf(i32, i8*, i32, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
