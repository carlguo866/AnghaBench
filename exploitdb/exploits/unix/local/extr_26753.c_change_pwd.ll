; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_26753.c_change_pwd.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_26753.c_change_pwd.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.dumpbuff = type { i8* }

@.str = private unnamed_addr constant [39 x i8] c"\0A Enter new Pwd :\0A(16 caratcters max)\0A\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%s%c\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"/dev/mem\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"r+\00", align 1
@SEEK_SET = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [20 x i8] c"\0A[Buffer Uptdated]\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @change_pwd() #0 {
  %1 = alloca i32*, align 8
  %2 = alloca %struct.dumpbuff, align 8
  %3 = alloca i32, align 4
  %4 = alloca i64, align 8
  %5 = alloca [18 x i8], align 16
  %6 = alloca i8, align 1
  store i64 1054, i64* %4, align 8
  %7 = call i32 @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %8

8:                                                ; preds = %15, %0
  %9 = load i32, i32* %3, align 4
  %10 = icmp slt i32 %9, 18
  br i1 %10, label %11, label %18

11:                                               ; preds = %8
  %12 = load i32, i32* %3, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [18 x i8], [18 x i8]* %5, i64 0, i64 %13
  store i8 32, i8* %14, align 1
  br label %15

15:                                               ; preds = %11
  %16 = load i32, i32* %3, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %3, align 4
  br label %8

18:                                               ; preds = %8
  %19 = bitcast [18 x i8]* %5 to i8**
  %20 = call i32 @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %19, i8* %6)
  store i32 0, i32* %3, align 4
  br label %21

21:                                               ; preds = %42, %18
  %22 = load i32, i32* %3, align 4
  %23 = icmp sle i32 %22, 15
  br i1 %23, label %24, label %45

24:                                               ; preds = %21
  %25 = load i32, i32* %3, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [18 x i8], [18 x i8]* %5, i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = getelementptr inbounds %struct.dumpbuff, %struct.dumpbuff* %2, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = load i32, i32* %3, align 4
  %32 = mul nsw i32 2, %31
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %30, i64 %33
  store i8 %28, i8* %34, align 1
  %35 = getelementptr inbounds %struct.dumpbuff, %struct.dumpbuff* %2, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = load i32, i32* %3, align 4
  %38 = mul nsw i32 2, %37
  %39 = add nsw i32 %38, 1
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %36, i64 %40
  store i8 32, i8* %41, align 1
  br label %42

42:                                               ; preds = %24
  %43 = load i32, i32* %3, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %3, align 4
  br label %21

45:                                               ; preds = %21
  %46 = call i32* @fopen(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0))
  store i32* %46, i32** %1, align 8
  %47 = load i32*, i32** %1, align 8
  %48 = load i64, i64* %4, align 8
  %49 = load i32, i32* @SEEK_SET, align 4
  %50 = call i32 @fseek(i32* %47, i64 %48, i32 %49)
  %51 = load i32*, i32** %1, align 8
  %52 = call i32 @fwrite(%struct.dumpbuff* %2, i32 8, i32 1, i32* %51)
  %53 = call i32 @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0))
  %54 = load i32*, i32** %1, align 8
  %55 = call i32 @fclose(i32* %54)
  ret i32 0
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @scanf(i8*, i8**, i8*) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @fseek(i32*, i64, i32) #1

declare dso_local i32 @fwrite(%struct.dumpbuff*, i32, i32, i32*) #1

declare dso_local i32 @fclose(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
