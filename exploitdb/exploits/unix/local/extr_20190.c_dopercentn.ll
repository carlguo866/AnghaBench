; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_20190.c_dopercentn.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_20190.c_dopercentn.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [15 x i8] c"%%1$%dx%%%u$hn\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @dopercentn(i8* %0, i32 %1, i32 %2, i32 %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca [1000 x i8], align 16
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  store i32 1, i32* %17, align 4
  %20 = load i32, i32* %6, align 4
  store i32 %20, i32* %10, align 4
  %21 = load i8*, i8** %5, align 8
  store i8* %21, i8** %9, align 8
  %22 = load i32, i32* %7, align 4
  %23 = urem i32 %22, 256
  %24 = sub i32 256, %23
  store i32 %24, i32* %7, align 4
  %25 = load i32, i32* %8, align 4
  %26 = srem i32 %25, 256
  %27 = load i32, i32* %7, align 4
  %28 = add i32 %26, %27
  store i32 %28, i32* %18, align 4
  %29 = getelementptr inbounds [1000 x i8], [1000 x i8]* %19, i64 0, i64 0
  %30 = load i32, i32* %18, align 4
  %31 = load i32, i32* %10, align 4
  %32 = call i32 @sprintf(i8* %29, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 %30, i32 %31)
  %33 = load i8*, i8** %9, align 8
  %34 = getelementptr inbounds [1000 x i8], [1000 x i8]* %19, i64 0, i64 0
  %35 = call i32 @strcpy(i8* %33, i8* %34)
  %36 = load i32, i32* %7, align 4
  %37 = load i32, i32* %18, align 4
  %38 = sub i32 256, %37
  %39 = add i32 %36, %38
  store i32 %39, i32* %7, align 4
  %40 = load i32, i32* %8, align 4
  %41 = ashr i32 %40, 8
  %42 = srem i32 %41, 256
  %43 = load i32, i32* %7, align 4
  %44 = add i32 %42, %43
  store i32 %44, i32* %18, align 4
  %45 = load i32, i32* %10, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %10, align 4
  %47 = getelementptr inbounds [1000 x i8], [1000 x i8]* %19, i64 0, i64 0
  %48 = load i32, i32* %18, align 4
  %49 = load i32, i32* %10, align 4
  %50 = call i32 @sprintf(i8* %47, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 %48, i32 %49)
  %51 = load i8*, i8** %9, align 8
  %52 = getelementptr inbounds [1000 x i8], [1000 x i8]* %19, i64 0, i64 0
  %53 = call i32 @strcat(i8* %51, i8* %52)
  %54 = load i32, i32* %7, align 4
  %55 = load i32, i32* %18, align 4
  %56 = sub i32 256, %55
  %57 = add i32 %54, %56
  store i32 %57, i32* %7, align 4
  %58 = load i32, i32* %8, align 4
  %59 = ashr i32 %58, 16
  %60 = srem i32 %59, 256
  %61 = load i32, i32* %7, align 4
  %62 = add i32 %60, %61
  store i32 %62, i32* %18, align 4
  %63 = load i32, i32* %10, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %10, align 4
  %65 = getelementptr inbounds [1000 x i8], [1000 x i8]* %19, i64 0, i64 0
  %66 = load i32, i32* %18, align 4
  %67 = load i32, i32* %10, align 4
  %68 = call i32 @sprintf(i8* %65, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 %66, i32 %67)
  %69 = load i8*, i8** %9, align 8
  %70 = getelementptr inbounds [1000 x i8], [1000 x i8]* %19, i64 0, i64 0
  %71 = call i32 @strcat(i8* %69, i8* %70)
  %72 = load i32, i32* %7, align 4
  %73 = load i32, i32* %18, align 4
  %74 = sub i32 256, %73
  %75 = add i32 %72, %74
  store i32 %75, i32* %7, align 4
  %76 = load i32, i32* %8, align 4
  %77 = ashr i32 %76, 24
  %78 = srem i32 %77, 256
  %79 = load i32, i32* %7, align 4
  %80 = add i32 %78, %79
  store i32 %80, i32* %18, align 4
  %81 = load i32, i32* %10, align 4
  %82 = add nsw i32 %81, 1
  store i32 %82, i32* %10, align 4
  %83 = getelementptr inbounds [1000 x i8], [1000 x i8]* %19, i64 0, i64 0
  %84 = load i32, i32* %18, align 4
  %85 = load i32, i32* %10, align 4
  %86 = call i32 @sprintf(i8* %83, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 %84, i32 %85)
  %87 = load i8*, i8** %9, align 8
  %88 = getelementptr inbounds [1000 x i8], [1000 x i8]* %19, i64 0, i64 0
  %89 = call i32 @strcat(i8* %87, i8* %88)
  ret void
}

declare dso_local i32 @sprintf(i8*, i8*, i32, i32) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @strcat(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
