; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_1092.c_banner.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_1092.c_banner.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [62 x i8] c"\0A%s[-] %sSUN Solaris SPARC / x86 Local Socket Hijack Exploit\0A\00", align 1
@YE = common dso_local global i8* null, align 8
@NO = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [63 x i8] c"%s[-] %sKernel issue allows a bind on an already bound socket\0A\00", align 1
@.str.2 = private unnamed_addr constant [65 x i8] c"%s[-] %sallowing a malicious user to impersonate a service that\0A\00", align 1
@.str.3 = private unnamed_addr constant [64 x i8] c"%s[-] %sis already running on a port greater than 1024, making\0A\00", align 1
@.str.4 = private unnamed_addr constant [66 x i8] c"%s[-] %sservice-in-the-middle attacks a trivial task to perform.\0A\00", align 1
@.str.5 = private unnamed_addr constant [53 x i8] c"%s[-] %sDeveloped by c0ntex || c0ntexb@gmail.com%s\0A\0A\00", align 1
@WH = common dso_local global i8* null, align 8
@EXIT_SUCCESS = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @banner() #0 {
  %1 = load i32, i32* @stderr, align 4
  %2 = load i8*, i8** @YE, align 8
  %3 = load i8*, i8** @NO, align 8
  %4 = call i32 (i32, i8*, i8*, i8*, ...) @fprintf(i32 %1, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i8* %2, i8* %3)
  %5 = load i32, i32* @stderr, align 4
  %6 = load i8*, i8** @YE, align 8
  %7 = load i8*, i8** @NO, align 8
  %8 = call i32 (i32, i8*, i8*, i8*, ...) @fprintf(i32 %5, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.1, i64 0, i64 0), i8* %6, i8* %7)
  %9 = load i32, i32* @stderr, align 4
  %10 = load i8*, i8** @YE, align 8
  %11 = load i8*, i8** @NO, align 8
  %12 = call i32 (i32, i8*, i8*, i8*, ...) @fprintf(i32 %9, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.2, i64 0, i64 0), i8* %10, i8* %11)
  %13 = load i32, i32* @stderr, align 4
  %14 = load i8*, i8** @YE, align 8
  %15 = load i8*, i8** @NO, align 8
  %16 = call i32 (i32, i8*, i8*, i8*, ...) @fprintf(i32 %13, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15)
  %17 = load i32, i32* @stderr, align 4
  %18 = load i8*, i8** @YE, align 8
  %19 = load i8*, i8** @NO, align 8
  %20 = call i32 (i32, i8*, i8*, i8*, ...) @fprintf(i32 %17, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.4, i64 0, i64 0), i8* %18, i8* %19)
  %21 = load i32, i32* @stderr, align 4
  %22 = load i8*, i8** @YE, align 8
  %23 = load i8*, i8** @WH, align 8
  %24 = load i8*, i8** @NO, align 8
  %25 = call i32 (i32, i8*, i8*, i8*, ...) @fprintf(i32 %21, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.5, i64 0, i64 0), i8* %22, i8* %23, i8* %24)
  %26 = load i32, i32* @EXIT_SUCCESS, align 4
  %27 = call i32 @_exit(i32 %26) #3
  unreachable
}

declare dso_local i32 @fprintf(i32, i8*, i8*, i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @_exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
