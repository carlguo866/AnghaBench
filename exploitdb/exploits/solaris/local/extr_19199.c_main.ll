; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_19199.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_19199.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timeval = type { i32, i64 }
%struct.mntrequest = type { i8*, i8*, i8*, i8* }
%struct.mntres = type { i32 }

@MAXHOSTNAMELEN = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [12 x i8] c"gethostname\00", align 1
@AUTOFS_PROG = common dso_local global i32 0, align 4
@AUTOFS_VERS = common dso_local global i32 0, align 4
@AUTOTS = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [12 x i8] c"clnt_create\00", align 1
@AUTOFS_MOUNT = common dso_local global i32 0, align 4
@xdr_mntrequest = common dso_local global i32 0, align 4
@xdr_mntres = common dso_local global i32 0, align 4
@RPC_SUCCESS = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [11 x i8] c"mount call\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"mntres = %d.\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.timeval, align 8
  %11 = alloca %struct.mntrequest, align 8
  %12 = alloca %struct.mntres, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %13 = load i32, i32* @MAXHOSTNAMELEN, align 4
  %14 = zext i32 %13 to i64
  %15 = call i8* @llvm.stacksave()
  store i8* %15, i8** %6, align 8
  %16 = alloca i8, i64 %14, align 16
  store i64 %14, i64* %7, align 8
  %17 = load i32, i32* %4, align 4
  %18 = icmp slt i32 %17, 4
  br i1 %18, label %19, label %24

19:                                               ; preds = %2
  %20 = load i8**, i8*** %5, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 0
  %22 = load i8*, i8** %21, align 8
  %23 = call i32 @usage(i8* %22)
  br label %24

24:                                               ; preds = %19, %2
  %25 = load i8**, i8*** %5, align 8
  %26 = getelementptr inbounds i8*, i8** %25, i64 1
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %struct.mntrequest, %struct.mntrequest* %11, i32 0, i32 0
  store i8* %27, i8** %28, align 8
  %29 = load i8**, i8*** %5, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i64 2
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %struct.mntrequest, %struct.mntrequest* %11, i32 0, i32 1
  store i8* %31, i8** %32, align 8
  %33 = load i8**, i8*** %5, align 8
  %34 = getelementptr inbounds i8*, i8** %33, i64 3
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %struct.mntrequest, %struct.mntrequest* %11, i32 0, i32 2
  store i8* %35, i8** %36, align 8
  %37 = load i8**, i8*** %5, align 8
  %38 = getelementptr inbounds i8*, i8** %37, i64 4
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %struct.mntrequest, %struct.mntrequest* %11, i32 0, i32 3
  store i8* %39, i8** %40, align 8
  %41 = trunc i64 %14 to i32
  %42 = call i32 @gethostname(i8* %16, i32 %41)
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %44, label %47

44:                                               ; preds = %24
  %45 = call i32 @perror(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0))
  %46 = call i32 @exit(i32 0) #4
  unreachable

47:                                               ; preds = %24
  %48 = load i32, i32* @AUTOFS_PROG, align 4
  %49 = load i32, i32* @AUTOFS_VERS, align 4
  %50 = load i32, i32* @AUTOTS, align 4
  %51 = call i32* @clnt_create(i8* %16, i32 %48, i32 %49, i32 %50)
  store i32* %51, i32** %8, align 8
  %52 = icmp eq i32* %51, null
  br i1 %52, label %53, label %56

53:                                               ; preds = %47
  %54 = call i32 @clnt_pcreateerror(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %55 = call i32 @exit(i32 0) #4
  unreachable

56:                                               ; preds = %47
  %57 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i32 0, i32 0
  store i32 5, i32* %57, align 8
  %58 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i32 0, i32 1
  store i64 0, i64* %58, align 8
  %59 = load i32*, i32** %8, align 8
  %60 = load i32, i32* @AUTOFS_MOUNT, align 4
  %61 = load i32, i32* @xdr_mntrequest, align 4
  %62 = bitcast %struct.mntrequest* %11 to i8*
  %63 = load i32, i32* @xdr_mntres, align 4
  %64 = bitcast %struct.mntres* %12 to i8*
  %65 = call i32 @clnt_call(i32* %59, i32 %60, i32 %61, i8* %62, i32 %63, i8* %64, %struct.timeval* byval(%struct.timeval) align 8 %10)
  store i32 %65, i32* %9, align 4
  %66 = load i32, i32* %9, align 4
  %67 = load i32, i32* @RPC_SUCCESS, align 4
  %68 = icmp ne i32 %66, %67
  br i1 %68, label %69, label %72

69:                                               ; preds = %56
  %70 = load i32*, i32** %8, align 8
  %71 = call i32 @clnt_perror(i32* %70, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0))
  br label %76

72:                                               ; preds = %56
  %73 = getelementptr inbounds %struct.mntres, %struct.mntres* %12, i32 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = call i32 @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i32 %74)
  br label %76

76:                                               ; preds = %72, %69
  %77 = load i32*, i32** %8, align 8
  %78 = call i32 @clnt_destroy(i32* %77)
  %79 = load i8*, i8** %6, align 8
  call void @llvm.stackrestore(i8* %79)
  %80 = load i32, i32* %3, align 4
  ret i32 %80
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @usage(i8*) #2

declare dso_local i32 @gethostname(i8*, i32) #2

declare dso_local i32 @perror(i8*) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32* @clnt_create(i8*, i32, i32, i32) #2

declare dso_local i32 @clnt_pcreateerror(i8*) #2

declare dso_local i32 @clnt_call(i32*, i32, i32, i8*, i32, i8*, %struct.timeval* byval(%struct.timeval) align 8) #2

declare dso_local i32 @clnt_perror(i32*, i8*) #2

declare dso_local i32 @printf(i8*, i32) #2

declare dso_local i32 @clnt_destroy(i32*) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
