; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_1092.c_checksys.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_1092.c_checksys.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.utsname = type { i32* }

@.str = private unnamed_addr constant [13 x i8] c"uname failed\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"malloc\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @checksys(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.utsname, align 8
  store i8* %0, i8** %2, align 8
  %4 = call i64 @uname(%struct.utsname* %3)
  %5 = icmp slt i64 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = call i32 @puts(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0))
  br label %8

8:                                                ; preds = %6, %1
  %9 = call i8* @malloc(i32 6)
  store i8* %9, i8** %2, align 8
  %10 = load i8*, i8** %2, align 8
  %11 = icmp ne i8* %10, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0))
  %14 = load i32, i32* @EXIT_FAILURE, align 4
  %15 = call i32 @_exit(i32 %14) #3
  unreachable

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.utsname, %struct.utsname* %3, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = icmp eq i32* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.utsname, %struct.utsname* %3, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = call i32 @strlen(i32* %22)
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %30, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.utsname, %struct.utsname* %3, i32 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = call i32 @strlen(i32* %27)
  %29 = icmp sgt i32 %28, 5
  br i1 %29, label %30, label %33

30:                                               ; preds = %25, %20, %16
  %31 = load i8*, i8** %2, align 8
  %32 = call i32 @checkerr(i8* %31)
  br label %33

33:                                               ; preds = %30, %25
  %34 = load i8*, i8** %2, align 8
  %35 = getelementptr inbounds %struct.utsname, %struct.utsname* %3, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = getelementptr inbounds %struct.utsname, %struct.utsname* %3, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = call i32 @strlen(i32* %38)
  %40 = call i32 @memcpy(i8* %34, i32* %36, i32 %39)
  %41 = load i8*, i8** %2, align 8
  %42 = icmp ne i8* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %33
  %44 = load i8*, i8** %2, align 8
  %45 = call i32 @checkerr(i8* %44)
  br label %46

46:                                               ; preds = %43, %33
  %47 = load i8*, i8** %2, align 8
  ret i8* %47
}

declare dso_local i64 @uname(%struct.utsname*) #1

declare dso_local i32 @puts(i8*) #1

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @perror(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @_exit(i32) #2

declare dso_local i32 @strlen(i32*) #1

declare dso_local i32 @checkerr(i8*) #1

declare dso_local i32 @memcpy(i8*, i32*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
