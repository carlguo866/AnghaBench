; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_21024.c_get_shelladdr.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_21024.c_get_shelladdr.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SI_PLATFORM = common dso_local global i32 0, align 4
@VULPROG = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @get_shelladdr(i64 %0, i8** %1, i8** %2, i64 %3) #0 {
  %5 = alloca i64, align 8
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca [256 x i8], align 16
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  store i64 %0, i64* %5, align 8
  store i8** %1, i8*** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i64 %3, i64* %8, align 8
  store i8 0, i8* %12, align 1
  store i8 0, i8* %13, align 1
  br label %18

18:                                               ; preds = %4, %144, %155
  store i32 0, i32* %10, align 4
  store i32 0, i32* %16, align 4
  br label %19

19:                                               ; preds = %36, %18
  %20 = load i8**, i8*** %6, align 8
  %21 = load i32, i32* %10, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8*, i8** %20, i64 %22
  %24 = load i8*, i8** %23, align 8
  %25 = icmp ne i8* %24, null
  br i1 %25, label %26, label %39

26:                                               ; preds = %19
  %27 = load i8**, i8*** %6, align 8
  %28 = load i32, i32* %10, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8*, i8** %27, i64 %29
  %31 = load i8*, i8** %30, align 8
  %32 = call i32 @strlen(i8* %31)
  %33 = add nsw i32 %32, 1
  %34 = load i32, i32* %16, align 4
  %35 = add nsw i32 %34, %33
  store i32 %35, i32* %16, align 4
  br label %36

36:                                               ; preds = %26
  %37 = load i32, i32* %10, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %10, align 4
  br label %19

39:                                               ; preds = %19
  %40 = load i32, i32* %16, align 4
  %41 = srem i32 %40, 4
  %42 = sub nsw i32 3, %41
  %43 = trunc i32 %42 to i8
  store i8 %43, i8* %12, align 1
  %44 = load i8**, i8*** %7, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i64 0
  %46 = load i8*, i8** %45, align 8
  %47 = load i8, i8* %12, align 1
  %48 = call i32 @memset(i8* %46, i8 signext 65, i8 signext %47)
  %49 = load i8**, i8*** %7, align 8
  %50 = getelementptr inbounds i8*, i8** %49, i64 0
  %51 = load i8*, i8** %50, align 8
  %52 = load i8, i8* %12, align 1
  %53 = sext i8 %52 to i64
  %54 = getelementptr inbounds i8, i8* %51, i64 %53
  store i8 0, i8* %54, align 1
  %55 = load i8**, i8*** %7, align 8
  %56 = getelementptr inbounds i8*, i8** %55, i64 2
  %57 = load i8*, i8** %56, align 8
  %58 = load i8, i8* %13, align 1
  %59 = call i32 @memset(i8* %57, i8 signext 65, i8 signext %58)
  %60 = load i8**, i8*** %7, align 8
  %61 = getelementptr inbounds i8*, i8** %60, i64 2
  %62 = load i8*, i8** %61, align 8
  %63 = load i8, i8* %13, align 1
  %64 = sext i8 %63 to i64
  %65 = getelementptr inbounds i8, i8* %62, i64 %64
  store i8 0, i8* %65, align 1
  store i32 0, i32* %10, align 4
  store i32 0, i32* %15, align 4
  br label %66

66:                                               ; preds = %83, %39
  %67 = load i8**, i8*** %7, align 8
  %68 = load i32, i32* %10, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8*, i8** %67, i64 %69
  %71 = load i8*, i8** %70, align 8
  %72 = icmp ne i8* %71, null
  br i1 %72, label %73, label %86

73:                                               ; preds = %66
  %74 = load i8**, i8*** %7, align 8
  %75 = load i32, i32* %10, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8*, i8** %74, i64 %76
  %78 = load i8*, i8** %77, align 8
  %79 = call i32 @strlen(i8* %78)
  %80 = add nsw i32 %79, 1
  %81 = load i32, i32* %15, align 4
  %82 = add nsw i32 %81, %80
  store i32 %82, i32* %15, align 4
  br label %83

83:                                               ; preds = %73
  %84 = load i32, i32* %10, align 4
  %85 = add nsw i32 %84, 1
  store i32 %85, i32* %10, align 4
  br label %66

86:                                               ; preds = %66
  %87 = load i32, i32* @SI_PLATFORM, align 4
  %88 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i64 0, i64 0
  %89 = call i32 @sysinfo(i32 %87, i8* %88, i32 256)
  %90 = load i32, i32* %16, align 4
  %91 = load i32, i32* %15, align 4
  %92 = add nsw i32 %90, %91
  %93 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i64 0, i64 0
  %94 = call i32 @strlen(i8* %93)
  %95 = add nsw i32 %92, %94
  %96 = add nsw i32 %95, 1
  %97 = load i8*, i8** @VULPROG, align 8
  %98 = call i32 @strlen(i8* %97)
  %99 = add nsw i32 %96, %98
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %17, align 4
  %101 = load i32, i32* %17, align 4
  %102 = srem i32 %101, 4
  %103 = sub nsw i32 4, %102
  %104 = trunc i32 %103 to i8
  store i8 %104, i8* %14, align 1
  %105 = load i64, i64* %5, align 8
  %106 = load i8, i8* %14, align 1
  %107 = sext i8 %106 to i64
  %108 = sub nsw i64 %105, %107
  %109 = load i8*, i8** @VULPROG, align 8
  %110 = call i32 @strlen(i8* %109)
  %111 = sext i32 %110 to i64
  %112 = sub nsw i64 %108, %111
  %113 = sub nsw i64 %112, 1
  %114 = getelementptr inbounds [256 x i8], [256 x i8]* %11, i64 0, i64 0
  %115 = call i32 @strlen(i8* %114)
  %116 = sext i32 %115 to i64
  %117 = sub nsw i64 %113, %116
  %118 = sub nsw i64 %117, 1
  store i64 %118, i64* %9, align 8
  %119 = load i32, i32* %10, align 4
  %120 = add nsw i32 %119, -1
  store i32 %120, i32* %10, align 4
  br label %121

121:                                              ; preds = %135, %86
  %122 = load i32, i32* %10, align 4
  %123 = icmp sgt i32 %122, 0
  br i1 %123, label %124, label %138

124:                                              ; preds = %121
  %125 = load i8**, i8*** %7, align 8
  %126 = load i32, i32* %10, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i8*, i8** %125, i64 %127
  %129 = load i8*, i8** %128, align 8
  %130 = call i32 @strlen(i8* %129)
  %131 = add nsw i32 %130, 1
  %132 = sext i32 %131 to i64
  %133 = load i64, i64* %9, align 8
  %134 = sub nsw i64 %133, %132
  store i64 %134, i64* %9, align 8
  br label %135

135:                                              ; preds = %124
  %136 = load i32, i32* %10, align 4
  %137 = add nsw i32 %136, -1
  store i32 %137, i32* %10, align 4
  br label %121

138:                                              ; preds = %121
  %139 = load i64, i64* %9, align 8
  %140 = load i64, i64* %8, align 8
  %141 = add nsw i64 %139, %140
  %142 = and i64 %141, 255
  %143 = icmp ne i64 %142, 0
  br i1 %143, label %149, label %144

144:                                              ; preds = %138
  %145 = load i8, i8* %13, align 1
  %146 = sext i8 %145 to i32
  %147 = add nsw i32 %146, 8
  %148 = trunc i32 %147 to i8
  store i8 %148, i8* %13, align 1
  br label %18

149:                                              ; preds = %138
  %150 = load i64, i64* %9, align 8
  %151 = load i64, i64* %8, align 8
  %152 = add nsw i64 %150, %151
  %153 = srem i64 %152, 8
  %154 = icmp ne i64 %153, 0
  br i1 %154, label %155, label %160

155:                                              ; preds = %149
  %156 = load i8, i8* %13, align 1
  %157 = sext i8 %156 to i32
  %158 = add nsw i32 %157, 4
  %159 = trunc i32 %158 to i8
  store i8 %159, i8* %13, align 1
  br label %18

160:                                              ; preds = %149
  br label %161

161:                                              ; preds = %160
  %162 = load i64, i64* %9, align 8
  ret i64 %162
}

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @memset(i8*, i8 signext, i8 signext) #1

declare dso_local i32 @sysinfo(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
