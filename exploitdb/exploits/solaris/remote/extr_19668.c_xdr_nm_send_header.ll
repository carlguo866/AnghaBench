; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/remote/extr_19668.c_xdr_nm_send_header.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/remote/extr_19668.c_xdr_nm_send_header.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.nm_send_header = type { i32, i32, i32, i32, %struct.TYPE_16__, i32, %struct.TYPE_15__, i32, i32, i32, %struct.TYPE_14__, i32, i32, %struct.TYPE_13__, %struct.TYPE_12__, i32, i32, i32, i32, i32, %struct.TYPE_11__, %struct.TYPE_10__, %struct.TYPE_9__ }
%struct.TYPE_16__ = type { i32, i32 }
%struct.TYPE_15__ = type { i32, i32 }
%struct.TYPE_14__ = type { i32 }
%struct.TYPE_13__ = type { i32 }
%struct.TYPE_12__ = type { i32 }
%struct.TYPE_11__ = type { i32, i32 }
%struct.TYPE_10__ = type { i32, i32 }
%struct.TYPE_9__ = type { i32, i32 }

@FALSE = common dso_local global i32 0, align 4
@TRUE = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xdr_nm_send_header(i32* %0, %struct.nm_send_header* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca %struct.nm_send_header*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store %struct.nm_send_header* %1, %struct.nm_send_header** %5, align 8
  store i64 4, i64* %7, align 8
  %8 = load i32*, i32** %4, align 8
  %9 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %10 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %9, i32 0, i32 22
  %11 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %10, i32 0, i32 1
  %12 = call i32 @xdr_long(i32* %8, i32* %11)
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = load i32, i32* @FALSE, align 4
  store i32 %15, i32* %3, align 4
  br label %252

16:                                               ; preds = %2
  %17 = load i32*, i32** %4, align 8
  %18 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %19 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %18, i32 0, i32 22
  %20 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %19, i32 0, i32 0
  %21 = call i32 @xdr_long(i32* %17, i32* %20)
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %16
  %24 = load i32, i32* @FALSE, align 4
  store i32 %24, i32* %3, align 4
  br label %252

25:                                               ; preds = %16
  %26 = load i32*, i32** %4, align 8
  %27 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %28 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %27, i32 0, i32 21
  %29 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %28, i32 0, i32 1
  %30 = call i32 @xdr_long(i32* %26, i32* %29)
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %25
  %33 = load i32, i32* @FALSE, align 4
  store i32 %33, i32* %3, align 4
  br label %252

34:                                               ; preds = %25
  %35 = load i32*, i32** %4, align 8
  %36 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %37 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %36, i32 0, i32 21
  %38 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %37, i32 0, i32 0
  %39 = call i32 @xdr_long(i32* %35, i32* %38)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  %42 = load i32, i32* @FALSE, align 4
  store i32 %42, i32* %3, align 4
  br label %252

43:                                               ; preds = %34
  %44 = load i32*, i32** %4, align 8
  %45 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %46 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %45, i32 0, i32 20
  %47 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %46, i32 0, i32 1
  %48 = call i32 @xdr_long(i32* %44, i32* %47)
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %43
  %51 = load i32, i32* @FALSE, align 4
  store i32 %51, i32* %3, align 4
  br label %252

52:                                               ; preds = %43
  %53 = load i32*, i32** %4, align 8
  %54 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %55 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %54, i32 0, i32 20
  %56 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %55, i32 0, i32 0
  %57 = call i32 @xdr_long(i32* %53, i32* %56)
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %52
  %60 = load i32, i32* @FALSE, align 4
  store i32 %60, i32* %3, align 4
  br label %252

61:                                               ; preds = %52
  %62 = load i32*, i32** %4, align 8
  %63 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %64 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %63, i32 0, i32 19
  %65 = call i32 @xdr_u_int(i32* %62, i32* %64)
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %61
  %68 = load i32, i32* @FALSE, align 4
  store i32 %68, i32* %3, align 4
  br label %252

69:                                               ; preds = %61
  %70 = load i32*, i32** %4, align 8
  %71 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %72 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %71, i32 0, i32 18
  %73 = call i32 @xdr_u_int(i32* %70, i32* %72)
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %69
  %76 = load i32, i32* @FALSE, align 4
  store i32 %76, i32* %3, align 4
  br label %252

77:                                               ; preds = %69
  %78 = load i32*, i32** %4, align 8
  %79 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %80 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %79, i32 0, i32 17
  %81 = call i32 @xdr_u_int(i32* %78, i32* %80)
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %77
  %84 = load i32, i32* @FALSE, align 4
  store i32 %84, i32* %3, align 4
  br label %252

85:                                               ; preds = %77
  %86 = load i32*, i32** %4, align 8
  %87 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %88 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %87, i32 0, i32 16
  %89 = call i32 @xdr_u_int(i32* %86, i32* %88)
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %85
  %92 = load i32, i32* @FALSE, align 4
  store i32 %92, i32* %3, align 4
  br label %252

93:                                               ; preds = %85
  %94 = load i32*, i32** %4, align 8
  %95 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %96 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %95, i32 0, i32 15
  %97 = call i32 @xdr_u_int(i32* %94, i32* %96)
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %93
  %100 = load i32, i32* @FALSE, align 4
  store i32 %100, i32* %3, align 4
  br label %252

101:                                              ; preds = %93
  %102 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %103 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %102, i32 0, i32 14
  %104 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %103, i32 0, i32 0
  %105 = bitcast i32* %104 to i8*
  store i8* %105, i8** %6, align 8
  %106 = load i32*, i32** %4, align 8
  %107 = load i64, i64* %7, align 8
  %108 = call i32 @xdr_bytes(i32* %106, i8** %6, i64* %7, i64 %107)
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %101
  %111 = load i32, i32* @FALSE, align 4
  store i32 %111, i32* %3, align 4
  br label %252

112:                                              ; preds = %101
  %113 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %114 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %113, i32 0, i32 13
  %115 = getelementptr inbounds %struct.TYPE_13__, %struct.TYPE_13__* %114, i32 0, i32 0
  %116 = bitcast i32* %115 to i8*
  store i8* %116, i8** %6, align 8
  %117 = load i32*, i32** %4, align 8
  %118 = load i64, i64* %7, align 8
  %119 = call i32 @xdr_bytes(i32* %117, i8** %6, i64* %7, i64 %118)
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %123, label %121

121:                                              ; preds = %112
  %122 = load i32, i32* @FALSE, align 4
  store i32 %122, i32* %3, align 4
  br label %252

123:                                              ; preds = %112
  %124 = load i32*, i32** %4, align 8
  %125 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %126 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %125, i32 0, i32 12
  %127 = call i32 @xdr_u_long(i32* %124, i32* %126)
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %131, label %129

129:                                              ; preds = %123
  %130 = load i32, i32* @FALSE, align 4
  store i32 %130, i32* %3, align 4
  br label %252

131:                                              ; preds = %123
  %132 = load i32*, i32** %4, align 8
  %133 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %134 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %133, i32 0, i32 11
  %135 = call i32 @xdr_u_long(i32* %132, i32* %134)
  %136 = icmp ne i32 %135, 0
  br i1 %136, label %139, label %137

137:                                              ; preds = %131
  %138 = load i32, i32* @FALSE, align 4
  store i32 %138, i32* %3, align 4
  br label %252

139:                                              ; preds = %131
  %140 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %141 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %140, i32 0, i32 10
  %142 = getelementptr inbounds %struct.TYPE_14__, %struct.TYPE_14__* %141, i32 0, i32 0
  %143 = bitcast i32* %142 to i8*
  store i8* %143, i8** %6, align 8
  %144 = load i32*, i32** %4, align 8
  %145 = load i64, i64* %7, align 8
  %146 = call i32 @xdr_bytes(i32* %144, i8** %6, i64* %7, i64 %145)
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %150, label %148

148:                                              ; preds = %139
  %149 = load i32, i32* @FALSE, align 4
  store i32 %149, i32* %3, align 4
  br label %252

150:                                              ; preds = %139
  %151 = load i32*, i32** %4, align 8
  %152 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %153 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %152, i32 0, i32 9
  %154 = call i32 @xdr_u_long(i32* %151, i32* %153)
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %158, label %156

156:                                              ; preds = %150
  %157 = load i32, i32* @FALSE, align 4
  store i32 %157, i32* %3, align 4
  br label %252

158:                                              ; preds = %150
  %159 = load i32*, i32** %4, align 8
  %160 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %161 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %160, i32 0, i32 8
  %162 = call i32 @xdr_u_long(i32* %159, i32* %161)
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %166, label %164

164:                                              ; preds = %158
  %165 = load i32, i32* @FALSE, align 4
  store i32 %165, i32* %3, align 4
  br label %252

166:                                              ; preds = %158
  %167 = load i32*, i32** %4, align 8
  %168 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %169 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %168, i32 0, i32 7
  %170 = call i32 @xdr_u_long(i32* %167, i32* %169)
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %174, label %172

172:                                              ; preds = %166
  %173 = load i32, i32* @FALSE, align 4
  store i32 %173, i32* %3, align 4
  br label %252

174:                                              ; preds = %166
  %175 = load i32*, i32** %4, align 8
  %176 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %177 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %176, i32 0, i32 6
  %178 = getelementptr inbounds %struct.TYPE_15__, %struct.TYPE_15__* %177, i32 0, i32 1
  %179 = call i32 @xdr_long(i32* %175, i32* %178)
  %180 = icmp ne i32 %179, 0
  br i1 %180, label %183, label %181

181:                                              ; preds = %174
  %182 = load i32, i32* @FALSE, align 4
  store i32 %182, i32* %3, align 4
  br label %252

183:                                              ; preds = %174
  %184 = load i32*, i32** %4, align 8
  %185 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %186 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %185, i32 0, i32 6
  %187 = getelementptr inbounds %struct.TYPE_15__, %struct.TYPE_15__* %186, i32 0, i32 0
  %188 = call i32 @xdr_long(i32* %184, i32* %187)
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %183
  %191 = load i32, i32* @FALSE, align 4
  store i32 %191, i32* %3, align 4
  br label %252

192:                                              ; preds = %183
  %193 = load i32*, i32** %4, align 8
  %194 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %195 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %194, i32 0, i32 5
  %196 = call i32 @xdr_u_int(i32* %193, i32* %195)
  %197 = icmp ne i32 %196, 0
  br i1 %197, label %200, label %198

198:                                              ; preds = %192
  %199 = load i32, i32* @FALSE, align 4
  store i32 %199, i32* %3, align 4
  br label %252

200:                                              ; preds = %192
  %201 = load i32*, i32** %4, align 8
  %202 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %203 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %202, i32 0, i32 4
  %204 = getelementptr inbounds %struct.TYPE_16__, %struct.TYPE_16__* %203, i32 0, i32 1
  %205 = call i32 @xdr_long(i32* %201, i32* %204)
  %206 = icmp ne i32 %205, 0
  br i1 %206, label %209, label %207

207:                                              ; preds = %200
  %208 = load i32, i32* @FALSE, align 4
  store i32 %208, i32* %3, align 4
  br label %252

209:                                              ; preds = %200
  %210 = load i32*, i32** %4, align 8
  %211 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %212 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %211, i32 0, i32 4
  %213 = getelementptr inbounds %struct.TYPE_16__, %struct.TYPE_16__* %212, i32 0, i32 0
  %214 = call i32 @xdr_long(i32* %210, i32* %213)
  %215 = icmp ne i32 %214, 0
  br i1 %215, label %218, label %216

216:                                              ; preds = %209
  %217 = load i32, i32* @FALSE, align 4
  store i32 %217, i32* %3, align 4
  br label %252

218:                                              ; preds = %209
  %219 = load i32*, i32** %4, align 8
  %220 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %221 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %220, i32 0, i32 3
  %222 = call i32 @xdr_wrapstring(i32* %219, i32* %221)
  %223 = icmp ne i32 %222, 0
  br i1 %223, label %226, label %224

224:                                              ; preds = %218
  %225 = load i32, i32* @FALSE, align 4
  store i32 %225, i32* %3, align 4
  br label %252

226:                                              ; preds = %218
  %227 = load i32*, i32** %4, align 8
  %228 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %229 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %228, i32 0, i32 2
  %230 = call i32 @xdr_wrapstring(i32* %227, i32* %229)
  %231 = icmp ne i32 %230, 0
  br i1 %231, label %234, label %232

232:                                              ; preds = %226
  %233 = load i32, i32* @FALSE, align 4
  store i32 %233, i32* %3, align 4
  br label %252

234:                                              ; preds = %226
  %235 = load i32*, i32** %4, align 8
  %236 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %237 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %236, i32 0, i32 1
  %238 = call i32 @xdr_wrapstring(i32* %235, i32* %237)
  %239 = icmp ne i32 %238, 0
  br i1 %239, label %242, label %240

240:                                              ; preds = %234
  %241 = load i32, i32* @FALSE, align 4
  store i32 %241, i32* %3, align 4
  br label %252

242:                                              ; preds = %234
  %243 = load i32*, i32** %4, align 8
  %244 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %245 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %244, i32 0, i32 0
  %246 = call i32 @xdr_u_int(i32* %243, i32* %245)
  %247 = icmp ne i32 %246, 0
  br i1 %247, label %250, label %248

248:                                              ; preds = %242
  %249 = load i32, i32* @FALSE, align 4
  store i32 %249, i32* %3, align 4
  br label %252

250:                                              ; preds = %242
  %251 = load i32, i32* @TRUE, align 4
  store i32 %251, i32* %3, align 4
  br label %252

252:                                              ; preds = %250, %248, %240, %232, %224, %216, %207, %198, %190, %181, %172, %164, %156, %148, %137, %129, %121, %110, %99, %91, %83, %75, %67, %59, %50, %41, %32, %23, %14
  %253 = load i32, i32* %3, align 4
  ret i32 %253
}

declare dso_local i32 @xdr_long(i32*, i32*) #1

declare dso_local i32 @xdr_u_int(i32*, i32*) #1

declare dso_local i32 @xdr_bytes(i32*, i8**, i64*, i64) #1

declare dso_local i32 @xdr_u_long(i32*, i32*) #1

declare dso_local i32 @xdr_wrapstring(i32*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
