; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/remote/extr_716.c_shell.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/remote/extr_716.c_shell.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [81 x i8] c"\22Da Bog da ti se mamica nahitavala s vragom po dvoristu!\22 -- Bozica (Hrvatska)\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"# \00", align 1
@CMD = common dso_local global i8* null, align 8
@FD_SETSIZE = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [7 x i8] c"select\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"Goodbye...\0A\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"read\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @shell(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [128 x i8], align 16
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %6 = load i32, i32* @stderr, align 4
  %7 = call i32 @fprintf(i32 %6, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str, i64 0, i64 0))
  %8 = call i64 @write(i32 1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32 2)
  %9 = load i32, i32* %2, align 4
  %10 = load i8*, i8** @CMD, align 8
  %11 = load i8*, i8** @CMD, align 8
  %12 = call i32 @strlen(i8* %11)
  %13 = call i64 @write(i32 %9, i8* %10, i32 %12)
  br label %14

14:                                               ; preds = %62, %1
  %15 = call i32 @FD_ZERO(i32* %3)
  %16 = load i32, i32* %2, align 4
  %17 = call i32 @FD_SET(i32 %16, i32* %3)
  %18 = call i32 @FD_SET(i32 0, i32* %3)
  %19 = load i32, i32* @FD_SETSIZE, align 4
  %20 = call i64 @select(i32 %19, i32* %3, i32* null, i32* null, i32* null)
  %21 = icmp slt i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %14
  %23 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0))
  br label %63

24:                                               ; preds = %14
  %25 = load i32, i32* %2, align 4
  %26 = call i64 @FD_ISSET(i32 %25, i32* %3)
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %28, label %44

28:                                               ; preds = %24
  %29 = load i32, i32* %2, align 4
  %30 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  %31 = call i32 @read(i32 %29, i8* %30, i32 128)
  store i32 %31, i32* %5, align 4
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = load i32, i32* @stderr, align 4
  %35 = call i32 @fprintf(i32 %34, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0))
  br label %63

36:                                               ; preds = %28
  %37 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  %38 = load i32, i32* %5, align 4
  %39 = call i64 @write(i32 1, i8* %37, i32 %38)
  %40 = icmp slt i64 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  %42 = call i32 @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  br label %63

43:                                               ; preds = %36
  br label %44

44:                                               ; preds = %43, %24
  %45 = call i64 @FD_ISSET(i32 0, i32* %3)
  %46 = icmp ne i64 %45, 0
  br i1 %46, label %47, label %62

47:                                               ; preds = %44
  %48 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  %49 = call i32 @read(i32 0, i8* %48, i32 128)
  store i32 %49, i32* %5, align 4
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  %52 = call i32 @perror(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0))
  br label %63

53:                                               ; preds = %47
  %54 = load i32, i32* %2, align 4
  %55 = getelementptr inbounds [128 x i8], [128 x i8]* %4, i64 0, i64 0
  %56 = load i32, i32* %5, align 4
  %57 = call i64 @write(i32 %54, i8* %55, i32 %56)
  %58 = icmp slt i64 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %53
  %60 = call i32 @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  br label %63

61:                                               ; preds = %53
  br label %62

62:                                               ; preds = %61, %44
  br label %14

63:                                               ; preds = %59, %51, %41, %33, %22
  %64 = load i32, i32* %2, align 4
  %65 = call i32 @close(i32 %64)
  %66 = call i32 @exit(i32 1) #3
  unreachable
}

declare dso_local i32 @fprintf(i32, i8*) #1

declare dso_local i64 @write(i32, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i64 @select(i32, i32*, i32*, i32*, i32*) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i64 @FD_ISSET(i32, i32*) #1

declare dso_local i32 @read(i32, i8*, i32) #1

declare dso_local i32 @close(i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
