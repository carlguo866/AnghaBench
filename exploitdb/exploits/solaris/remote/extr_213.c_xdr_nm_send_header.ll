; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/remote/extr_213.c_xdr_nm_send_header.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/remote/extr_213.c_xdr_nm_send_header.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.nm_send_header = type { i32, i32, i32, i32, %struct.TYPE_12__, i32, %struct.TYPE_11__, i32, i32, i32, i32, i32, %struct.TYPE_10__, i32, i32, i32, i32, i32, %struct.TYPE_9__, %struct.TYPE_8__, %struct.TYPE_7__ }
%struct.TYPE_12__ = type { i32, i32 }
%struct.TYPE_11__ = type { i32, i32 }
%struct.TYPE_10__ = type { i32 }
%struct.TYPE_9__ = type { i32, i32 }
%struct.TYPE_8__ = type { i32, i32 }
%struct.TYPE_7__ = type { i32, i32 }

@FALSE = common dso_local global i32 0, align 4
@TRUE = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @xdr_nm_send_header(i32* %0, %struct.nm_send_header* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca %struct.nm_send_header*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store %struct.nm_send_header* %1, %struct.nm_send_header** %5, align 8
  store i64 4, i64* %7, align 8
  %8 = load i32*, i32** %4, align 8
  %9 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %10 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %9, i32 0, i32 20
  %11 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %10, i32 0, i32 1
  %12 = call i32 @xdr_long(i32* %8, i32* %11)
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = load i32, i32* @FALSE, align 4
  store i32 %15, i32* %3, align 4
  br label %230

16:                                               ; preds = %2
  %17 = load i32*, i32** %4, align 8
  %18 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %19 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %18, i32 0, i32 20
  %20 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %19, i32 0, i32 0
  %21 = call i32 @xdr_long(i32* %17, i32* %20)
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %16
  %24 = load i32, i32* @FALSE, align 4
  store i32 %24, i32* %3, align 4
  br label %230

25:                                               ; preds = %16
  %26 = load i32*, i32** %4, align 8
  %27 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %28 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %27, i32 0, i32 19
  %29 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %28, i32 0, i32 1
  %30 = call i32 @xdr_long(i32* %26, i32* %29)
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %25
  %33 = load i32, i32* @FALSE, align 4
  store i32 %33, i32* %3, align 4
  br label %230

34:                                               ; preds = %25
  %35 = load i32*, i32** %4, align 8
  %36 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %37 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %36, i32 0, i32 19
  %38 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %37, i32 0, i32 0
  %39 = call i32 @xdr_long(i32* %35, i32* %38)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  %42 = load i32, i32* @FALSE, align 4
  store i32 %42, i32* %3, align 4
  br label %230

43:                                               ; preds = %34
  %44 = load i32*, i32** %4, align 8
  %45 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %46 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %45, i32 0, i32 18
  %47 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %46, i32 0, i32 1
  %48 = call i32 @xdr_long(i32* %44, i32* %47)
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %43
  %51 = load i32, i32* @FALSE, align 4
  store i32 %51, i32* %3, align 4
  br label %230

52:                                               ; preds = %43
  %53 = load i32*, i32** %4, align 8
  %54 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %55 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %54, i32 0, i32 18
  %56 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %55, i32 0, i32 0
  %57 = call i32 @xdr_long(i32* %53, i32* %56)
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %52
  %60 = load i32, i32* @FALSE, align 4
  store i32 %60, i32* %3, align 4
  br label %230

61:                                               ; preds = %52
  %62 = load i32*, i32** %4, align 8
  %63 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %64 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %63, i32 0, i32 17
  %65 = call i32 @xdr_u_int(i32* %62, i32* %64)
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %61
  %68 = load i32, i32* @FALSE, align 4
  store i32 %68, i32* %3, align 4
  br label %230

69:                                               ; preds = %61
  %70 = load i32*, i32** %4, align 8
  %71 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %72 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %71, i32 0, i32 16
  %73 = call i32 @xdr_u_int(i32* %70, i32* %72)
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %69
  %76 = load i32, i32* @FALSE, align 4
  store i32 %76, i32* %3, align 4
  br label %230

77:                                               ; preds = %69
  %78 = load i32*, i32** %4, align 8
  %79 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %80 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %79, i32 0, i32 15
  %81 = call i32 @xdr_u_int(i32* %78, i32* %80)
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %77
  %84 = load i32, i32* @FALSE, align 4
  store i32 %84, i32* %3, align 4
  br label %230

85:                                               ; preds = %77
  %86 = load i32*, i32** %4, align 8
  %87 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %88 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %87, i32 0, i32 14
  %89 = call i32 @xdr_u_int(i32* %86, i32* %88)
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %85
  %92 = load i32, i32* @FALSE, align 4
  store i32 %92, i32* %3, align 4
  br label %230

93:                                               ; preds = %85
  %94 = load i32*, i32** %4, align 8
  %95 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %96 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %95, i32 0, i32 13
  %97 = call i32 @xdr_u_int(i32* %94, i32* %96)
  %98 = icmp ne i32 %97, 0
  br i1 %98, label %101, label %99

99:                                               ; preds = %93
  %100 = load i32, i32* @FALSE, align 4
  store i32 %100, i32* %3, align 4
  br label %230

101:                                              ; preds = %93
  %102 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %103 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %102, i32 0, i32 12
  %104 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %103, i32 0, i32 0
  %105 = bitcast i32* %104 to i8*
  store i8* %105, i8** %6, align 8
  %106 = load i32*, i32** %4, align 8
  %107 = load i64, i64* %7, align 8
  %108 = call i32 @xdr_bytes(i32* %106, i8** %6, i64* %7, i64 %107)
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %112, label %110

110:                                              ; preds = %101
  %111 = load i32, i32* @FALSE, align 4
  store i32 %111, i32* %3, align 4
  br label %230

112:                                              ; preds = %101
  %113 = load i32*, i32** %4, align 8
  %114 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %115 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %114, i32 0, i32 11
  %116 = call i32 @xdr_u_long(i32* %113, i32* %115)
  %117 = icmp ne i32 %116, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %112
  %119 = load i32, i32* @FALSE, align 4
  store i32 %119, i32* %3, align 4
  br label %230

120:                                              ; preds = %112
  %121 = load i32*, i32** %4, align 8
  %122 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %123 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %122, i32 0, i32 10
  %124 = call i32 @xdr_u_long(i32* %121, i32* %123)
  %125 = icmp ne i32 %124, 0
  br i1 %125, label %128, label %126

126:                                              ; preds = %120
  %127 = load i32, i32* @FALSE, align 4
  store i32 %127, i32* %3, align 4
  br label %230

128:                                              ; preds = %120
  %129 = load i32*, i32** %4, align 8
  %130 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %131 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %130, i32 0, i32 9
  %132 = call i32 @xdr_u_long(i32* %129, i32* %131)
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %128
  %135 = load i32, i32* @FALSE, align 4
  store i32 %135, i32* %3, align 4
  br label %230

136:                                              ; preds = %128
  %137 = load i32*, i32** %4, align 8
  %138 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %139 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %138, i32 0, i32 8
  %140 = call i32 @xdr_u_long(i32* %137, i32* %139)
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %144, label %142

142:                                              ; preds = %136
  %143 = load i32, i32* @FALSE, align 4
  store i32 %143, i32* %3, align 4
  br label %230

144:                                              ; preds = %136
  %145 = load i32*, i32** %4, align 8
  %146 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %147 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %146, i32 0, i32 7
  %148 = call i32 @xdr_u_long(i32* %145, i32* %147)
  %149 = icmp ne i32 %148, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %144
  %151 = load i32, i32* @FALSE, align 4
  store i32 %151, i32* %3, align 4
  br label %230

152:                                              ; preds = %144
  %153 = load i32*, i32** %4, align 8
  %154 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %155 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %154, i32 0, i32 6
  %156 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %155, i32 0, i32 1
  %157 = call i32 @xdr_long(i32* %153, i32* %156)
  %158 = icmp ne i32 %157, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %152
  %160 = load i32, i32* @FALSE, align 4
  store i32 %160, i32* %3, align 4
  br label %230

161:                                              ; preds = %152
  %162 = load i32*, i32** %4, align 8
  %163 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %164 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %163, i32 0, i32 6
  %165 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %164, i32 0, i32 0
  %166 = call i32 @xdr_long(i32* %162, i32* %165)
  %167 = icmp ne i32 %166, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %161
  %169 = load i32, i32* @FALSE, align 4
  store i32 %169, i32* %3, align 4
  br label %230

170:                                              ; preds = %161
  %171 = load i32*, i32** %4, align 8
  %172 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %173 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %172, i32 0, i32 5
  %174 = call i32 @xdr_u_int(i32* %171, i32* %173)
  %175 = icmp ne i32 %174, 0
  br i1 %175, label %178, label %176

176:                                              ; preds = %170
  %177 = load i32, i32* @FALSE, align 4
  store i32 %177, i32* %3, align 4
  br label %230

178:                                              ; preds = %170
  %179 = load i32*, i32** %4, align 8
  %180 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %181 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %180, i32 0, i32 4
  %182 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %181, i32 0, i32 1
  %183 = call i32 @xdr_long(i32* %179, i32* %182)
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %187, label %185

185:                                              ; preds = %178
  %186 = load i32, i32* @FALSE, align 4
  store i32 %186, i32* %3, align 4
  br label %230

187:                                              ; preds = %178
  %188 = load i32*, i32** %4, align 8
  %189 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %190 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %189, i32 0, i32 4
  %191 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %190, i32 0, i32 0
  %192 = call i32 @xdr_long(i32* %188, i32* %191)
  %193 = icmp ne i32 %192, 0
  br i1 %193, label %196, label %194

194:                                              ; preds = %187
  %195 = load i32, i32* @FALSE, align 4
  store i32 %195, i32* %3, align 4
  br label %230

196:                                              ; preds = %187
  %197 = load i32*, i32** %4, align 8
  %198 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %199 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %198, i32 0, i32 3
  %200 = call i32 @xdr_wrapstring(i32* %197, i32* %199)
  %201 = icmp ne i32 %200, 0
  br i1 %201, label %204, label %202

202:                                              ; preds = %196
  %203 = load i32, i32* @FALSE, align 4
  store i32 %203, i32* %3, align 4
  br label %230

204:                                              ; preds = %196
  %205 = load i32*, i32** %4, align 8
  %206 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %207 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %206, i32 0, i32 2
  %208 = call i32 @xdr_wrapstring(i32* %205, i32* %207)
  %209 = icmp ne i32 %208, 0
  br i1 %209, label %212, label %210

210:                                              ; preds = %204
  %211 = load i32, i32* @FALSE, align 4
  store i32 %211, i32* %3, align 4
  br label %230

212:                                              ; preds = %204
  %213 = load i32*, i32** %4, align 8
  %214 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %215 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %214, i32 0, i32 1
  %216 = call i32 @xdr_wrapstring(i32* %213, i32* %215)
  %217 = icmp ne i32 %216, 0
  br i1 %217, label %220, label %218

218:                                              ; preds = %212
  %219 = load i32, i32* @FALSE, align 4
  store i32 %219, i32* %3, align 4
  br label %230

220:                                              ; preds = %212
  %221 = load i32*, i32** %4, align 8
  %222 = load %struct.nm_send_header*, %struct.nm_send_header** %5, align 8
  %223 = getelementptr inbounds %struct.nm_send_header, %struct.nm_send_header* %222, i32 0, i32 0
  %224 = call i32 @xdr_u_int(i32* %221, i32* %223)
  %225 = icmp ne i32 %224, 0
  br i1 %225, label %228, label %226

226:                                              ; preds = %220
  %227 = load i32, i32* @FALSE, align 4
  store i32 %227, i32* %3, align 4
  br label %230

228:                                              ; preds = %220
  %229 = load i32, i32* @TRUE, align 4
  store i32 %229, i32* %3, align 4
  br label %230

230:                                              ; preds = %228, %226, %218, %210, %202, %194, %185, %176, %168, %159, %150, %142, %134, %126, %118, %110, %99, %91, %83, %75, %67, %59, %50, %41, %32, %23, %14
  %231 = load i32, i32* %3, align 4
  ret i32 %231
}

declare dso_local i32 @xdr_long(i32*, i32*) #1

declare dso_local i32 @xdr_u_int(i32*, i32*) #1

declare dso_local i32 @xdr_bytes(i32*, i8**, i64*, i64) #1

declare dso_local i32 @xdr_u_long(i32*, i32*) #1

declare dso_local i32 @xdr_wrapstring(i32*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
