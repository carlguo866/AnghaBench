; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/remote/extr_301.c_normalize_heap.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/remote/extr_301.c_normalize_heap.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [10 x i8] c"Argument \00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @normalize_heap(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [8320 x i8], align 16
  store i32 %0, i32* %3, align 4
  %6 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %7 = call i32 @memset(i8* %6, i32 0, i32 8320)
  %8 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %9 = call i32 @memset(i8* %8, i32 98, i32 8190)
  %10 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %11 = call i32 @memcpy(i8* %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 9)
  %12 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %13 = call i32 @strcat(i8* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %14 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 72
  store i8 0, i8* %14, align 8
  store i32 0, i32* %4, align 4
  br label %15

15:                                               ; preds = %22, %1
  %16 = load i32, i32* %4, align 4
  %17 = icmp slt i32 %16, 128
  br i1 %17, label %18, label %25

18:                                               ; preds = %15
  %19 = load i32, i32* %3, align 4
  %20 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %21 = call i32 @write(i32 %19, i8* %20, i32 8191)
  br label %22

22:                                               ; preds = %18
  %23 = load i32, i32* %4, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %4, align 4
  br label %15

25:                                               ; preds = %15
  %26 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %27 = call i32 @memset(i8* %26, i32 0, i32 8320)
  %28 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %29 = call i32 @memset(i8* %28, i32 98, i32 8190)
  %30 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %31 = call i32 @memcpy(i8* %30, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 9)
  %32 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %33 = call i32 @strcat(i8* %32, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %34 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 65
  store i8 0, i8* %34, align 1
  store i32 0, i32* %4, align 4
  br label %35

35:                                               ; preds = %42, %25
  %36 = load i32, i32* %4, align 4
  %37 = icmp slt i32 %36, 64
  br i1 %37, label %38, label %45

38:                                               ; preds = %35
  %39 = load i32, i32* %3, align 4
  %40 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %41 = call i32 @write(i32 %39, i8* %40, i32 8191)
  br label %42

42:                                               ; preds = %38
  %43 = load i32, i32* %4, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %4, align 4
  br label %35

45:                                               ; preds = %35
  %46 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %47 = call i32 @memset(i8* %46, i32 0, i32 8320)
  %48 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %49 = call i32 @memset(i8* %48, i32 98, i32 8190)
  %50 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %51 = call i32 @memcpy(i8* %50, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 9)
  %52 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %53 = call i32 @strcat(i8* %52, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %54 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 44
  store i8 0, i8* %54, align 4
  store i32 0, i32* %4, align 4
  br label %55

55:                                               ; preds = %62, %45
  %56 = load i32, i32* %4, align 4
  %57 = icmp slt i32 %56, 32
  br i1 %57, label %58, label %65

58:                                               ; preds = %55
  %59 = load i32, i32* %3, align 4
  %60 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %61 = call i32 @write(i32 %59, i8* %60, i32 8191)
  br label %62

62:                                               ; preds = %58
  %63 = load i32, i32* %4, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %4, align 4
  br label %55

65:                                               ; preds = %55
  %66 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %67 = call i32 @memset(i8* %66, i32 0, i32 8320)
  %68 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %69 = call i32 @memset(i8* %68, i32 255, i32 8193)
  %70 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %71 = call i32 @memcpy(i8* %70, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 9)
  %72 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %73 = call i32 @strcat(i8* %72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  %74 = load i32, i32* %3, align 4
  %75 = getelementptr inbounds [8320 x i8], [8320 x i8]* %5, i64 0, i64 0
  %76 = call i32 @write(i32 %74, i8* %75, i32 8194)
  %77 = load i32, i32* %2, align 4
  ret i32 %77
}

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @write(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
