; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/solaris/remote/extr_301.c_do_auth.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/solaris/remote/extr_301.c_do_auth.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [7 x i8] c"malloc\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"BEGIN AUTH REQUEST\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@reposit = common dso_local global i8* null, align 8
@user = common dso_local global i8* null, align 8
@pass = common dso_local global i32 0, align 4
@scrambled = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [17 x i8] c"END AUTH REQUEST\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @do_auth(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  %4 = call i8* @malloc(i32 50000)
  store i8* %4, i8** %3, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0))
  %9 = call i32 @exit(i32 1) #3
  unreachable

10:                                               ; preds = %1
  %11 = load i8*, i8** %3, align 8
  %12 = call i32 @strcpy(i8* %11, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0))
  %13 = load i8*, i8** %3, align 8
  %14 = call i32 @strncat(i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i32 1)
  %15 = load i8*, i8** %3, align 8
  %16 = load i8*, i8** @reposit, align 8
  %17 = load i8*, i8** @reposit, align 8
  %18 = call i32 @strlen(i8* %17)
  %19 = call i32 @strncat(i8* %15, i8* %16, i32 %18)
  %20 = load i8*, i8** %3, align 8
  %21 = call i32 @strncat(i8* %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i32 1)
  %22 = load i8*, i8** %3, align 8
  %23 = load i8*, i8** @user, align 8
  %24 = load i8*, i8** @user, align 8
  %25 = call i32 @strlen(i8* %24)
  %26 = call i32 @strncat(i8* %22, i8* %23, i32 %25)
  %27 = load i8*, i8** %3, align 8
  %28 = call i32 @strncat(i8* %27, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i32 1)
  %29 = load i32, i32* @pass, align 4
  %30 = call i8* @scramble(i32 %29)
  store i8* %30, i8** @scrambled, align 8
  %31 = load i8*, i8** %3, align 8
  %32 = load i8*, i8** @scrambled, align 8
  %33 = load i8*, i8** @scrambled, align 8
  %34 = call i32 @strlen(i8* %33)
  %35 = call i32 @strncat(i8* %31, i8* %32, i32 %34)
  %36 = load i8*, i8** %3, align 8
  %37 = call i32 @strncat(i8* %36, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i32 1)
  %38 = load i8*, i8** %3, align 8
  %39 = call i32 @strncat(i8* %38, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 16)
  %40 = load i8*, i8** %3, align 8
  %41 = call i32 @strncat(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i32 1)
  %42 = load i32, i32* %2, align 4
  %43 = load i8*, i8** %3, align 8
  %44 = load i8*, i8** %3, align 8
  %45 = call i32 @strlen(i8* %44)
  %46 = call i32 @write(i32 %42, i8* %43, i32 %45)
  %47 = load i8*, i8** %3, align 8
  %48 = call i32 @free(i8* %47)
  ret i32 0
}

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @perror(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @strncat(i8*, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i8* @scramble(i32) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @free(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
