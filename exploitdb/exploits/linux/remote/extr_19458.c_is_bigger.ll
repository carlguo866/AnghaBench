; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_19458.c_is_bigger.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_19458.c_is_bigger.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@is_bigger.id = internal global i16 0, align 2
@is_bigger.tmp = internal global i16 0, align 2
@first_try = common dso_local global i64 0, align 8
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [27 x i8] c"Unexpected IP id, diff=%i\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @is_bigger() #0 {
  %1 = alloca i32, align 4
  %2 = call i32 @usleep(i32 10000)
  %3 = call zeroext i16 (...) @get_id()
  store i16 %3, i16* @is_bigger.tmp, align 2
  %4 = load i16, i16* @is_bigger.tmp, align 2
  %5 = zext i16 %4 to i32
  %6 = load i16, i16* @is_bigger.id, align 2
  %7 = zext i16 %6 to i32
  %8 = add nsw i32 %7, 1
  %9 = icmp eq i32 %5, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %0
  %11 = load i16, i16* @is_bigger.tmp, align 2
  store i16 %11, i16* @is_bigger.id, align 2
  store i32 0, i32* %1, align 4
  br label %36

12:                                               ; preds = %0
  %13 = load i16, i16* @is_bigger.tmp, align 2
  %14 = zext i16 %13 to i32
  %15 = load i16, i16* @is_bigger.id, align 2
  %16 = zext i16 %15 to i32
  %17 = add nsw i32 %16, 2
  %18 = icmp eq i32 %14, %17
  br i1 %18, label %19, label %21

19:                                               ; preds = %12
  %20 = load i16, i16* @is_bigger.tmp, align 2
  store i16 %20, i16* @is_bigger.id, align 2
  store i32 1, i32* %1, align 4
  br label %36

21:                                               ; preds = %12
  %22 = load i64, i64* @first_try, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %21
  %25 = load i16, i16* @is_bigger.tmp, align 2
  store i16 %25, i16* @is_bigger.id, align 2
  store i64 0, i64* @first_try, align 8
  store i32 0, i32* %1, align 4
  br label %36

26:                                               ; preds = %21
  %27 = load i32, i32* @stderr, align 4
  %28 = load i16, i16* @is_bigger.tmp, align 2
  %29 = zext i16 %28 to i32
  %30 = load i16, i16* @is_bigger.id, align 2
  %31 = zext i16 %30 to i32
  %32 = sub nsw i32 %29, %31
  %33 = trunc i32 %32 to i16
  %34 = call i32 @fprintf(i32 %27, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i16 zeroext %33)
  %35 = call i32 @exit(i32 1) #3
  unreachable

36:                                               ; preds = %24, %19, %10
  %37 = load i32, i32* %1, align 4
  ret i32 %37
}

declare dso_local i32 @usleep(i32) #1

declare dso_local zeroext i16 @get_id(...) #1

declare dso_local i32 @fprintf(i32, i8*, i16 zeroext) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
