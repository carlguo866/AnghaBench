; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_4537.c_parse_uri.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_4537.c_parse_uri.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [4 x i8] c"://\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"http\00", align 1
@HTTP = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [4 x i8] c"svn\00", align 1
@SVN = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [25 x i8] c"Unsupported protocol %s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @parse_uri(i8* %0, i32* %1, i8* %2, i32* %3, i8* %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca [1000 x i8], align 16
  store i8* %0, i8** %7, align 8
  store i32* %1, i32** %8, align 8
  store i8* %2, i8** %9, align 8
  store i32* %3, i32** %10, align 8
  store i8* %4, i8** %11, align 8
  %14 = load i8*, i8** %7, align 8
  %15 = call i8* @strstr(i8* %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0))
  store i8* %15, i8** %12, align 8
  %16 = load i8*, i8** %12, align 8
  %17 = icmp ne i8* %16, null
  br i1 %17, label %19, label %18

18:                                               ; preds = %5
  store i32 -1, i32* %6, align 4
  br label %87

19:                                               ; preds = %5
  %20 = load i8*, i8** %12, align 8
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds [1000 x i8], [1000 x i8]* %13, i64 0, i64 0
  %22 = load i8*, i8** %7, align 8
  %23 = call i32 @snprintf(i8* %21, i32 1000, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %22)
  %24 = getelementptr inbounds [1000 x i8], [1000 x i8]* %13, i64 0, i64 0
  %25 = call i32 @strcmp(i8* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0))
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %19
  %28 = load i32, i32* @HTTP, align 4
  %29 = load i32*, i32** %8, align 8
  store i32 %28, i32* %29, align 4
  %30 = load i32*, i32** %10, align 8
  store i32 80, i32* %30, align 4
  br label %43

31:                                               ; preds = %19
  %32 = getelementptr inbounds [1000 x i8], [1000 x i8]* %13, i64 0, i64 0
  %33 = call i32 @strcmp(i8* %32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0))
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = load i32, i32* @SVN, align 4
  %37 = load i32*, i32** %8, align 8
  store i32 %36, i32* %37, align 4
  %38 = load i32*, i32** %10, align 8
  store i32 3690, i32* %38, align 4
  br label %42

39:                                               ; preds = %31
  %40 = getelementptr inbounds [1000 x i8], [1000 x i8]* %13, i64 0, i64 0
  %41 = call i32 @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), i8* %40)
  store i32 -1, i32* %6, align 4
  br label %87

42:                                               ; preds = %35
  br label %43

43:                                               ; preds = %42, %27
  %44 = load i8*, i8** %12, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 3
  store i8* %45, i8** %7, align 8
  %46 = load i8*, i8** %7, align 8
  %47 = call i8* @strchr(i8* %46, i8 signext 58)
  store i8* %47, i8** %12, align 8
  %48 = icmp ne i8* %47, null
  br i1 %48, label %49, label %71

49:                                               ; preds = %43
  %50 = load i8*, i8** %12, align 8
  store i8 0, i8* %50, align 1
  %51 = load i8*, i8** %9, align 8
  %52 = load i8*, i8** %7, align 8
  %53 = call i32 @snprintf(i8* %51, i32 1000, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %52)
  %54 = load i8*, i8** %12, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 1
  store i8* %55, i8** %7, align 8
  %56 = load i8*, i8** %7, align 8
  %57 = call i8* @strchr(i8* %56, i8 signext 47)
  store i8* %57, i8** %12, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %59, label %60

59:                                               ; preds = %49
  store i32 -1, i32* %6, align 4
  br label %87

60:                                               ; preds = %49
  %61 = load i8*, i8** %12, align 8
  store i8 0, i8* %61, align 1
  %62 = getelementptr inbounds [1000 x i8], [1000 x i8]* %13, i64 0, i64 0
  %63 = load i8*, i8** %7, align 8
  %64 = call i32 @snprintf(i8* %62, i32 1000, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %63)
  %65 = getelementptr inbounds [1000 x i8], [1000 x i8]* %13, i64 0, i64 0
  %66 = call i64 @strtol(i8* %65, i32* null, i32 10)
  %67 = trunc i64 %66 to i32
  %68 = load i32*, i32** %10, align 8
  store i32 %67, i32* %68, align 4
  %69 = load i8*, i8** %12, align 8
  store i8 47, i8* %69, align 1
  %70 = load i8*, i8** %12, align 8
  store i8* %70, i8** %7, align 8
  br label %83

71:                                               ; preds = %43
  %72 = load i8*, i8** %7, align 8
  %73 = call i8* @strchr(i8* %72, i8 signext 47)
  store i8* %73, i8** %12, align 8
  %74 = icmp ne i8* %73, null
  br i1 %74, label %75, label %82

75:                                               ; preds = %71
  %76 = load i8*, i8** %12, align 8
  store i8 0, i8* %76, align 1
  %77 = load i8*, i8** %9, align 8
  %78 = load i8*, i8** %7, align 8
  %79 = call i32 @snprintf(i8* %77, i32 1000, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %78)
  %80 = load i8*, i8** %12, align 8
  store i8 47, i8* %80, align 1
  %81 = load i8*, i8** %12, align 8
  store i8* %81, i8** %7, align 8
  br label %82

82:                                               ; preds = %75, %71
  br label %83

83:                                               ; preds = %82, %60
  %84 = load i8*, i8** %11, align 8
  %85 = load i8*, i8** %7, align 8
  %86 = call i32 @snprintf(i8* %84, i32 1000, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %85)
  store i32 0, i32* %6, align 4
  br label %87

87:                                               ; preds = %83, %59, %39, %18
  %88 = load i32, i32* %6, align 4
  ret i32 %88
}

declare dso_local i8* @strstr(i8*, i8*) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*) #1

declare dso_local i32 @strcmp(i8*, i8*) #1

declare dso_local i32 @printf(i8*, i8*) #1

declare dso_local i8* @strchr(i8*, i8 signext) #1

declare dso_local i64 @strtol(i8*, i32*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
