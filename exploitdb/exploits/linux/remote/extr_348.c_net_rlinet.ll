; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_348.c_net_rlinet.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_348.c_net_rlinet.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timeval = type { i32, i32 }

@NET_READTIMEOUT = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @net_rlinet(i32 %0, i8* %1, i32 %2, i32 %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca %struct.timeval, align 4
  %13 = alloca %struct.timeval, align 4
  store i32 %0, i32* %6, align 4
  store i8* %1, i8** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i64 0, i64* %11, align 8
  %14 = load i8*, i8** %7, align 8
  %15 = load i32, i32* %8, align 4
  %16 = call i32 @memset(i8* %14, i8 signext 0, i32 %15)
  %17 = call i32 @gettimeofday(%struct.timeval* %12, i32* null)
  br label %18

18:                                               ; preds = %75, %4
  %19 = call i32 @gettimeofday(%struct.timeval* %13, i32* null)
  %20 = load i32, i32* %9, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %41

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.timeval, %struct.timeval* %13, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = mul nsw i32 %24, 1000000
  %26 = getelementptr inbounds %struct.timeval, %struct.timeval* %13, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = add nsw i32 %25, %27
  %29 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = mul nsw i32 %30, 1000000
  %32 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = add nsw i32 %31, %33
  %35 = sub nsw i32 %28, %34
  %36 = load i32, i32* %9, align 4
  %37 = mul nsw i32 %36, 1000000
  %38 = icmp sgt i32 %35, %37
  br i1 %38, label %39, label %40

39:                                               ; preds = %22
  store i32 -1, i32* %5, align 4
  br label %76

40:                                               ; preds = %22
  br label %41

41:                                               ; preds = %40, %18
  %42 = load i32, i32* %6, align 4
  %43 = load i32, i32* @NET_READTIMEOUT, align 4
  %44 = call i32 @net_rtimeout(i32 %42, i32 %43)
  store i32 %44, i32* %10, align 4
  %45 = load i32, i32* %10, align 4
  %46 = icmp sle i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %41
  store i32 -1, i32* %5, align 4
  br label %76

48:                                               ; preds = %41
  %49 = load i32, i32* %6, align 4
  %50 = load i8*, i8** %7, align 8
  %51 = call i32 @read(i32 %49, i8* %50, i32 1)
  store i32 %51, i32* %10, align 4
  %52 = load i32, i32* %10, align 4
  %53 = icmp sle i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = load i32, i32* %10, align 4
  store i32 %55, i32* %5, align 4
  br label %76

56:                                               ; preds = %48
  %57 = load i64, i64* %11, align 8
  %58 = add i64 %57, 1
  store i64 %58, i64* %11, align 8
  %59 = load i8*, i8** %7, align 8
  %60 = load i8, i8* %59, align 1
  %61 = sext i8 %60 to i32
  %62 = icmp eq i32 %61, 10
  br i1 %62, label %63, label %66

63:                                               ; preds = %56
  %64 = load i64, i64* %11, align 8
  %65 = trunc i64 %64 to i32
  store i32 %65, i32* %5, align 4
  br label %76

66:                                               ; preds = %56
  %67 = load i8*, i8** %7, align 8
  %68 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %68, i8** %7, align 8
  %69 = load i64, i64* %11, align 8
  %70 = load i32, i32* %8, align 4
  %71 = sext i32 %70 to i64
  %72 = icmp uge i64 %69, %71
  br i1 %72, label %73, label %74

73:                                               ; preds = %66
  store i32 -2, i32* %5, align 4
  br label %76

74:                                               ; preds = %66
  br label %75

75:                                               ; preds = %74
  br i1 true, label %18, label %76

76:                                               ; preds = %39, %47, %54, %63, %73, %75
  %77 = load i32, i32* %5, align 4
  ret i32 %77
}

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i32 @gettimeofday(%struct.timeval*, i32*) #1

declare dso_local i32 @net_rtimeout(i32, i32) #1

declare dso_local i32 @read(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
