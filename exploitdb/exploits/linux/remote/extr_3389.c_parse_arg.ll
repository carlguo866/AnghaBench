; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_3389.c_parse_arg.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_3389.c_parse_arg.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.in_addr = type { i32 }

@.str = private unnamed_addr constant [13 x i8] c"j:i:a:p:d:g:\00", align 1
@EOF = common dso_local global i32 0, align 4
@optarg = common dso_local global i32 0, align 4
@jmp_address = common dso_local global i32 0, align 4
@ip = common dso_local global i8* null, align 8
@u_code = common dso_local global i32 0, align 4
@IP_OFFSET = common dso_local global i32 0, align 4
@port = common dso_local global i8* null, align 8
@PORT_OFFSET = common dso_local global i32 0, align 4
@driver = common dso_local global i8* null, align 8
@iface = common dso_local global i8* null, align 8
@pad_space = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @parse_arg(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.in_addr, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  br label %7

7:                                                ; preds = %51, %2
  %8 = load i32, i32* %3, align 4
  %9 = load i8**, i8*** %4, align 8
  %10 = call i32 @getopt(i32 %8, i8** %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0))
  store i32 %10, i32* %5, align 4
  %11 = load i32, i32* @EOF, align 4
  %12 = icmp ne i32 %10, %11
  br i1 %12, label %13, label %52

13:                                               ; preds = %7
  %14 = load i32, i32* %5, align 4
  switch i32 %14, label %45 [
    i32 106, label %15
    i32 97, label %18
    i32 112, label %29
    i32 100, label %36
    i32 105, label %39
    i32 103, label %42
  ]

15:                                               ; preds = %13
  %16 = load i32, i32* @optarg, align 4
  %17 = call i32 @strtoll(i32 %16, i32* null, i32 16)
  store i32 %17, i32* @jmp_address, align 4
  br label %51

18:                                               ; preds = %13
  %19 = load i32, i32* @optarg, align 4
  %20 = call i8* @strdup(i32 %19)
  store i8* %20, i8** @ip, align 8
  %21 = load i8*, i8** @ip, align 8
  %22 = call i32 @inet_aton(i8* %21, %struct.in_addr* %6)
  %23 = load i32, i32* @u_code, align 4
  %24 = load i32, i32* @IP_OFFSET, align 4
  %25 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %6, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = xor i32 %26, -1
  %28 = call i32 @FIX_DWORD(i32 %23, i32 %24, i32 %27)
  br label %51

29:                                               ; preds = %13
  %30 = load i32, i32* @optarg, align 4
  %31 = call i8* @atoi(i32 %30)
  store i8* %31, i8** @port, align 8
  %32 = load i32, i32* @u_code, align 4
  %33 = load i32, i32* @PORT_OFFSET, align 4
  %34 = load i8*, i8** @port, align 8
  %35 = call i32 @FIX_WORD(i32 %32, i32 %33, i8* %34)
  br label %51

36:                                               ; preds = %13
  %37 = load i32, i32* @optarg, align 4
  %38 = call i8* @strdup(i32 %37)
  store i8* %38, i8** @driver, align 8
  br label %51

39:                                               ; preds = %13
  %40 = load i32, i32* @optarg, align 4
  %41 = call i8* @strdup(i32 %40)
  store i8* %41, i8** @iface, align 8
  br label %51

42:                                               ; preds = %13
  %43 = load i32, i32* @optarg, align 4
  %44 = call i8* @atoi(i32 %43)
  store i8* %44, i8** @pad_space, align 8
  br label %51

45:                                               ; preds = %13
  %46 = load i8**, i8*** %4, align 8
  %47 = getelementptr inbounds i8*, i8** %46, i64 0
  %48 = load i8*, i8** %47, align 8
  %49 = call i32 @usage(i8* %48)
  %50 = call i32 @exit(i32 1) #3
  unreachable

51:                                               ; preds = %42, %39, %36, %29, %18, %15
  br label %7

52:                                               ; preds = %7
  ret void
}

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @strtoll(i32, i32*, i32) #1

declare dso_local i8* @strdup(i32) #1

declare dso_local i32 @inet_aton(i8*, %struct.in_addr*) #1

declare dso_local i32 @FIX_DWORD(i32, i32, i32) #1

declare dso_local i8* @atoi(i32) #1

declare dso_local i32 @FIX_WORD(i32, i32, i8*) #1

declare dso_local i32 @usage(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
