; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_22893.c_ftpd_handler.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_22893.c_ftpd_handler.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [18 x i8] c"[?] -FTPD: \22%s\22.\0A\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"SYST\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"215 UNIX Type: L8\0A\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"USER \00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"331 login ok.\0A\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"PASS \00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"230 access granted.\0A\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"PORT \00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"PORT %u,%u,%u,%u,%u,%u\00", align 1
@ftp_ip = common dso_local global i8* null, align 8
@.str.9 = private unnamed_addr constant [12 x i8] c"%u.%u.%u.%u\00", align 1
@ftp_port = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [30 x i8] c"200 PORT command successful.\0A\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"LIST\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"150 Opening connection.\0A\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"226 Transfer complete.\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ftpd_handler(i32 %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  store i32 0, i32* %11, align 4
  br label %12

12:                                               ; preds = %39, %2
  %13 = load i32, i32* %11, align 4
  %14 = load i8*, i8** %4, align 8
  %15 = call i32 @strlen(i8* %14)
  %16 = icmp ult i32 %13, %15
  br i1 %16, label %17, label %42

17:                                               ; preds = %12
  %18 = load i8*, i8** %4, align 8
  %19 = load i32, i32* %11, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %18, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = icmp eq i32 %23, 13
  br i1 %24, label %33, label %25

25:                                               ; preds = %17
  %26 = load i8*, i8** %4, align 8
  %27 = load i32, i32* %11, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = sext i8 %30 to i32
  %32 = icmp eq i32 %31, 10
  br i1 %32, label %33, label %38

33:                                               ; preds = %25, %17
  %34 = load i8*, i8** %4, align 8
  %35 = load i32, i32* %11, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %34, i64 %36
  store i8 0, i8* %37, align 1
  br label %38

38:                                               ; preds = %33, %25
  br label %39

39:                                               ; preds = %38
  %40 = load i32, i32* %11, align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* %11, align 4
  br label %12

42:                                               ; preds = %12
  %43 = load i8*, i8** %4, align 8
  %44 = call i32 @strlen(i8* %43)
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %118

46:                                               ; preds = %42
  %47 = load i8*, i8** %4, align 8
  %48 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* %47)
  %49 = load i8*, i8** %4, align 8
  %50 = call i32 @strncmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* %49, i32 4)
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %46
  %53 = load i32, i32* %3, align 4
  %54 = call i32 @dprintf(i32 %53, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0))
  br label %117

55:                                               ; preds = %46
  %56 = load i8*, i8** %4, align 8
  %57 = call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* %56, i32 5)
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = load i32, i32* %3, align 4
  %61 = call i32 @dprintf(i32 %60, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0))
  br label %116

62:                                               ; preds = %55
  %63 = load i8*, i8** %4, align 8
  %64 = call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8* %63, i32 5)
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %62
  %67 = load i32, i32* %3, align 4
  %68 = call i32 @dprintf(i32 %67, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0))
  br label %115

69:                                               ; preds = %62
  %70 = load i8*, i8** %4, align 8
  %71 = call i32 @strncmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i8* %70, i32 5)
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %90, label %73

73:                                               ; preds = %69
  %74 = load i8*, i8** %4, align 8
  %75 = call i32 @sscanf(i8* %74, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32* %5, i32* %6, i32* %7, i32* %8, i32* %9, i32* %10)
  %76 = load i8*, i8** @ftp_ip, align 8
  %77 = call i32 @memset(i8* %76, i32 0, i32 65)
  %78 = load i8*, i8** @ftp_ip, align 8
  %79 = load i32, i32* %5, align 4
  %80 = load i32, i32* %6, align 4
  %81 = load i32, i32* %7, align 4
  %82 = load i32, i32* %8, align 4
  %83 = call i32 @snprintf(i8* %78, i32 64, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i32 %79, i32 %80, i32 %81, i32 %82)
  %84 = load i32, i32* %9, align 4
  %85 = mul i32 %84, 256
  %86 = load i32, i32* %10, align 4
  %87 = add i32 %85, %86
  store i32 %87, i32* @ftp_port, align 4
  %88 = load i32, i32* %3, align 4
  %89 = call i32 @dprintf(i32 %88, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0))
  br label %114

90:                                               ; preds = %69
  %91 = load i8*, i8** %4, align 8
  %92 = call i32 @strncmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i64 0, i64 0), i8* %91, i32 4)
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %113, label %94

94:                                               ; preds = %90
  %95 = load i32, i32* %3, align 4
  %96 = call i32 @dprintf(i32 %95, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0))
  %97 = load i8*, i8** @ftp_ip, align 8
  %98 = call i32 @strlen(i8* %97)
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %100, label %107

100:                                              ; preds = %94
  %101 = load i32, i32* @ftp_port, align 4
  %102 = icmp ne i32 %101, 0
  br i1 %102, label %103, label %107

103:                                              ; preds = %100
  %104 = load i8*, i8** @ftp_ip, align 8
  %105 = load i32, i32* @ftp_port, align 4
  %106 = call i32 @ftpd_list(i8* %104, i32 %105)
  br label %107

107:                                              ; preds = %103, %100, %94
  %108 = load i32, i32* %3, align 4
  %109 = call i32 @dprintf(i32 %108, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0))
  %110 = call i32 @sleep(i32 1)
  %111 = load i32, i32* %3, align 4
  %112 = call i32 @close(i32 %111)
  br label %113

113:                                              ; preds = %107, %90
  br label %114

114:                                              ; preds = %113, %73
  br label %115

115:                                              ; preds = %114, %66
  br label %116

116:                                              ; preds = %115, %59
  br label %117

117:                                              ; preds = %116, %52
  br label %118

118:                                              ; preds = %117, %42
  ret void
}

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @printf(i8*, i8*) #1

declare dso_local i32 @strncmp(i8*, i8*, i32) #1

declare dso_local i32 @dprintf(i32, i8*) #1

declare dso_local i32 @sscanf(i8*, i8*, i32*, i32*, i32*, i32*, i32*, i32*) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i32, i32, i32, i32) #1

declare dso_local i32 @ftpd_list(i8*, i32) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
