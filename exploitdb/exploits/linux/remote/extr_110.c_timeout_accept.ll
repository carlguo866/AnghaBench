; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_110.c_timeout_accept.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_110.c_timeout_accept.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr = type { i32 }
%struct.timeval = type { i32, i32 }

@ACCEPT_TIMEOUT = common dso_local global i32 0, align 4
@FAILURE = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @timeout_accept(i32 %0, %struct.sockaddr* %1, i32* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.sockaddr*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.timeval, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store %struct.sockaddr* %1, %struct.sockaddr** %6, align 8
  store i32* %2, i32** %7, align 8
  %11 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 0
  %12 = load i32, i32* @ACCEPT_TIMEOUT, align 4
  store i32 %12, i32* %11, align 4
  %13 = getelementptr inbounds %struct.timeval, %struct.timeval* %9, i32 0, i32 1
  store i32 0, i32* %13, align 4
  %14 = load i32, i32* %5, align 4
  %15 = icmp sle i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = load i32, i32* @FAILURE, align 4
  store i32 %17, i32* %4, align 4
  br label %33

18:                                               ; preds = %3
  %19 = call i32 @FD_ZERO(i32* %8)
  %20 = load i32, i32* %5, align 4
  %21 = call i32 @FD_SET(i32 %20, i32* %8)
  %22 = load i32, i32* %5, align 4
  %23 = add nsw i32 %22, 1
  %24 = call i32 @select(i32 %23, i32* %8, i32 0, i32 0, %struct.timeval* %9)
  store i32 %24, i32* %10, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %18
  %27 = load i32, i32* @FAILURE, align 4
  store i32 %27, i32* %4, align 4
  br label %33

28:                                               ; preds = %18
  %29 = load i32, i32* %5, align 4
  %30 = load %struct.sockaddr*, %struct.sockaddr** %6, align 8
  %31 = load i32*, i32** %7, align 8
  %32 = call i32 @accept(i32 %29, %struct.sockaddr* %30, i32* %31)
  store i32 %32, i32* %4, align 4
  br label %33

33:                                               ; preds = %28, %26, %16
  %34 = load i32, i32* %4, align 4
  ret i32 %34
}

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i32 @select(i32, i32*, i32, i32, %struct.timeval*) #1

declare dso_local i32 @accept(i32, %struct.sockaddr*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
