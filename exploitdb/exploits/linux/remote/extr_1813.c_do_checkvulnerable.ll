; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1813.c_do_checkvulnerable.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1813.c_do_checkvulnerable.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@MSG_WAITALL = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @do_checkvulnerable(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [1024 x i8], align 16
  %5 = alloca [10 x i8], align 1
  store i32 %0, i32* %3, align 4
  %6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %7 = call i32 @memset(i8* %6, i8 signext 0, i32 1023)
  %8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %9 = call i32 @memset(i8* %8, i8 signext 65, i32 1022)
  %10 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  store i8 85, i8* %10, align 16
  %11 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 1
  store i8 83, i8* %11, align 1
  %12 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 2
  store i8 69, i8* %12, align 2
  %13 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 3
  store i8 82, i8* %13, align 1
  %14 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 4
  store i8 32, i8* %14, align 4
  %15 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 1021
  store i8 13, i8* %15, align 1
  %16 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 1022
  store i8 10, i8* %16, align 2
  br label %17

17:                                               ; preds = %1, %31
  %18 = load i32, i32* %3, align 4
  %19 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i64 0, i64 0
  %20 = call i32 @recv(i32 %18, i8* %19, i32 1, i32 0)
  %21 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = sext i8 %22 to i32
  %24 = icmp eq i32 %23, 13
  br i1 %24, label %30, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i64 0, i64 0
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %30, label %31

30:                                               ; preds = %25, %17
  br label %32

31:                                               ; preds = %25
  br label %17

32:                                               ; preds = %30
  %33 = load i32, i32* %3, align 4
  %34 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %35 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %36 = call i32 @strlen(i8* %35)
  %37 = call i32 @send(i32 %33, i8* %34, i32 %36, i32 0)
  %38 = load i32, i32* %3, align 4
  %39 = getelementptr inbounds [10 x i8], [10 x i8]* %5, i64 0, i64 0
  %40 = load i32, i32* @MSG_WAITALL, align 4
  %41 = call i32 @recv(i32 %38, i8* %39, i32 9, i32 %40)
  %42 = icmp slt i32 %41, 3
  br i1 %42, label %43, label %44

43:                                               ; preds = %32
  store i32 0, i32* %2, align 4
  br label %45

44:                                               ; preds = %32
  store i32 -1, i32* %2, align 4
  br label %45

45:                                               ; preds = %44, %43
  %46 = load i32, i32* %2, align 4
  ret i32 %46
}

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
