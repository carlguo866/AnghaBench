; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_398.c_handleshell.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_398.c_handleshell.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SEND = common dso_local global i8* null, align 8
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [13 x i8] c"write error\0A\00", align 1
@stdin = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [12 x i8] c"read error\0A\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"exit\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @handleshell(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [512 x i8], align 16
  %6 = alloca [512 x i8], align 16
  %7 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %8 = load i32, i32* %3, align 4
  %9 = call i32 @close(i32 %8)
  %10 = load i32, i32* %4, align 4
  %11 = load i8*, i8** @SEND, align 8
  %12 = load i8*, i8** @SEND, align 8
  %13 = call i32 @strlen(i8* %12)
  %14 = call i64 @write(i32 %10, i8* %11, i32 %13)
  %15 = icmp slt i64 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %2
  %17 = load i32, i32* @stderr, align 4
  %18 = call i32 (i32, i8*, ...) @fprintf(i32 %17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0))
  %19 = call i32 @exit(i32 1) #3
  unreachable

20:                                               ; preds = %2
  br label %21

21:                                               ; preds = %20, %89
  %22 = call i32 @FD_ZERO(i32* %7)
  %23 = load i32, i32* @stdin, align 4
  %24 = call i32 @fileno(i32 %23)
  %25 = call i32 @FD_SET(i32 %24, i32* %7)
  %26 = load i32, i32* %4, align 4
  %27 = call i32 @FD_SET(i32 %26, i32* %7)
  %28 = load i32, i32* %4, align 4
  %29 = add nsw i32 %28, 1
  %30 = call i32 @select(i32 %29, i32* %7, i32* null, i32* null, i32* null)
  %31 = load i32, i32* @stdin, align 4
  %32 = call i32 @fileno(i32 %31)
  %33 = call i64 @FD_ISSET(i32 %32, i32* %7)
  %34 = icmp ne i64 %33, 0
  br i1 %34, label %35, label %70

35:                                               ; preds = %21
  %36 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %37 = call i32 @memset(i8* %36, i8 signext 0, i32 512)
  %38 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %39 = call i64 @read(i32 0, i8* %38, i32 511)
  %40 = icmp slt i64 %39, 0
  br i1 %40, label %41, label %45

41:                                               ; preds = %35
  %42 = load i32, i32* @stderr, align 4
  %43 = call i32 (i32, i8*, ...) @fprintf(i32 %42, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %44 = call i32 @exit(i32 1) #3
  unreachable

45:                                               ; preds = %35
  %46 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %47 = call i32 @strncmp(i8* %46, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i32 4)
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %58, label %49

49:                                               ; preds = %45
  %50 = load i32, i32* %4, align 4
  %51 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %52 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %53 = call i32 @strlen(i8* %52)
  %54 = call i64 @write(i32 %50, i8* %51, i32 %53)
  %55 = load i32, i32* %4, align 4
  %56 = call i32 @quit(i32 %55)
  %57 = call i32 @exit(i32 0) #3
  unreachable

58:                                               ; preds = %45
  %59 = load i32, i32* %4, align 4
  %60 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %61 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %62 = call i32 @strlen(i8* %61)
  %63 = call i64 @write(i32 %59, i8* %60, i32 %62)
  %64 = icmp slt i64 %63, 0
  br i1 %64, label %65, label %69

65:                                               ; preds = %58
  %66 = load i32, i32* @stderr, align 4
  %67 = call i32 (i32, i8*, ...) @fprintf(i32 %66, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0))
  %68 = call i32 @exit(i32 1) #3
  unreachable

69:                                               ; preds = %58
  br label %70

70:                                               ; preds = %69, %21
  %71 = load i32, i32* %4, align 4
  %72 = call i64 @FD_ISSET(i32 %71, i32* %7)
  %73 = icmp ne i64 %72, 0
  br i1 %73, label %74, label %89

74:                                               ; preds = %70
  %75 = getelementptr inbounds [512 x i8], [512 x i8]* %5, i64 0, i64 0
  %76 = call i32 @memset(i8* %75, i8 signext 0, i32 512)
  %77 = load i32, i32* %4, align 4
  %78 = getelementptr inbounds [512 x i8], [512 x i8]* %5, i64 0, i64 0
  %79 = call i64 @read(i32 %77, i8* %78, i32 511)
  %80 = icmp slt i64 %79, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %74
  %82 = load i32, i32* @stderr, align 4
  %83 = call i32 (i32, i8*, ...) @fprintf(i32 %82, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %84 = call i32 @exit(i32 1) #3
  unreachable

85:                                               ; preds = %74
  %86 = load i32, i32* @stderr, align 4
  %87 = getelementptr inbounds [512 x i8], [512 x i8]* %5, i64 0, i64 0
  %88 = call i32 (i32, i8*, ...) @fprintf(i32 %86, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i8* %87)
  br label %89

89:                                               ; preds = %85, %70
  br label %21
}

declare dso_local i32 @close(i32) #1

declare dso_local i64 @write(i32, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i32 @fileno(i32) #1

declare dso_local i32 @select(i32, i32*, i32*, i32*, i32*) #1

declare dso_local i64 @FD_ISSET(i32, i32*) #1

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i64 @read(i32, i8*, i32) #1

declare dso_local i32 @strncmp(i8*, i8*, i32) #1

declare dso_local i32 @quit(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
