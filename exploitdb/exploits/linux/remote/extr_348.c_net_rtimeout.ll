; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_348.c_net_rtimeout.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_348.c_net_rtimeout.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timeval = type { i32, i64 }

@F_GETFL = common dso_local global i32 0, align 4
@F_SETFL = common dso_local global i32 0, align 4
@O_NONBLOCK = common dso_local global i32 0, align 4
@ETIMEDOUT = common dso_local global i32 0, align 4
@errno = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @net_rtimeout(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.timeval, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i32 0, i32* %9, align 4
  %11 = load i32, i32* %4, align 4
  %12 = load i32, i32* @F_GETFL, align 4
  %13 = call i32 @fcntl(i32 %11, i32 %12, i32 0)
  store i32 %13, i32* %10, align 4
  %14 = load i32, i32* %4, align 4
  %15 = load i32, i32* @F_SETFL, align 4
  %16 = load i32, i32* %10, align 4
  %17 = load i32, i32* @O_NONBLOCK, align 4
  %18 = or i32 %16, %17
  %19 = call i32 @fcntl(i32 %14, i32 %15, i32 %18)
  store i32 %19, i32* %8, align 4
  %20 = load i32, i32* %8, align 4
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %23

22:                                               ; preds = %2
  store i32 -1, i32* %3, align 4
  br label %72

23:                                               ; preds = %2
  %24 = call i32 @FD_ZERO(i32* %6)
  %25 = load i32, i32* %4, align 4
  %26 = call i32 @FD_SET(i32 %25, i32* %6)
  %27 = load i32, i32* %5, align 4
  %28 = getelementptr inbounds %struct.timeval, %struct.timeval* %7, i32 0, i32 0
  store i32 %27, i32* %28, align 8
  %29 = getelementptr inbounds %struct.timeval, %struct.timeval* %7, i32 0, i32 1
  store i64 0, i64* %29, align 8
  %30 = load i32, i32* %4, align 4
  %31 = add nsw i32 %30, 1
  %32 = call i32 @select(i32 %31, i32* %6, i32* null, i32* null, %struct.timeval* %7)
  store i32 %32, i32* %8, align 4
  %33 = load i32, i32* %8, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %45

35:                                               ; preds = %23
  %36 = load i32, i32* %4, align 4
  %37 = load i32, i32* @F_SETFL, align 4
  %38 = load i32, i32* %10, align 4
  %39 = call i32 @fcntl(i32 %36, i32 %37, i32 %38)
  store i32 %39, i32* %8, align 4
  %40 = load i32, i32* %8, align 4
  %41 = icmp eq i32 %40, -1
  br i1 %41, label %42, label %43

42:                                               ; preds = %35
  store i32 -1, i32* %3, align 4
  br label %72

43:                                               ; preds = %35
  %44 = load i32, i32* @ETIMEDOUT, align 4
  store i32 %44, i32* @errno, align 4
  store i32 -1, i32* %3, align 4
  br label %72

45:                                               ; preds = %23
  %46 = load i32, i32* %8, align 4
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  store i32 -1, i32* %3, align 4
  br label %72

49:                                               ; preds = %45
  %50 = load i32, i32* %4, align 4
  %51 = call i64 @FD_ISSET(i32 %50, i32* %6)
  %52 = icmp ne i64 %51, 0
  br i1 %52, label %53, label %62

53:                                               ; preds = %49
  %54 = load i32, i32* %4, align 4
  %55 = load i32, i32* @F_SETFL, align 4
  %56 = load i32, i32* %10, align 4
  %57 = call i32 @fcntl(i32 %54, i32 %55, i32 %56)
  store i32 %57, i32* %8, align 4
  %58 = load i32, i32* %8, align 4
  %59 = icmp eq i32 %58, -1
  br i1 %59, label %60, label %61

60:                                               ; preds = %53
  store i32 -1, i32* %3, align 4
  br label %72

61:                                               ; preds = %53
  store i32 1, i32* %3, align 4
  br label %72

62:                                               ; preds = %49
  %63 = load i32, i32* %4, align 4
  %64 = load i32, i32* @F_SETFL, align 4
  %65 = load i32, i32* %10, align 4
  %66 = call i32 @fcntl(i32 %63, i32 %64, i32 %65)
  store i32 %66, i32* %8, align 4
  %67 = load i32, i32* %8, align 4
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %70

69:                                               ; preds = %62
  store i32 -1, i32* %3, align 4
  br label %72

70:                                               ; preds = %62
  %71 = load i32, i32* @ETIMEDOUT, align 4
  store i32 %71, i32* @errno, align 4
  store i32 -1, i32* %3, align 4
  br label %72

72:                                               ; preds = %70, %69, %61, %60, %48, %43, %42, %22
  %73 = load i32, i32* %3, align 4
  ret i32 %73
}

declare dso_local i32 @fcntl(i32, i32, i32) #1

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i32 @select(i32, i32*, i32*, i32*, %struct.timeval*) #1

declare dso_local i64 @FD_ISSET(i32, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
