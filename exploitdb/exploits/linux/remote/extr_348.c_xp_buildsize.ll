; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_348.c_xp_buildsize.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_348.c_xp_buildsize.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [5 x i8] c"7350\00", align 1
@debugmode = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [10 x i8] c": CWD %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"CWD %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"550 \00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"| CWD %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"CWD %s%c\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @xp_buildsize(i32 %0, i8 zeroext %1, i64 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [512 x i8], align 16
  %10 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  store i8 %1, i8* %5, align 1
  store i64 %2, i64* %6, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %10, align 8
  store i32 2, i32* %7, align 4
  br label %11

11:                                               ; preds = %55, %3
  %12 = load i32, i32* %7, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %58

14:                                               ; preds = %11
  %15 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  %16 = call i32 @memset(i8* %15, i8 signext 0, i32 512)
  store i32 0, i32* %8, align 4
  br label %17

17:                                               ; preds = %33, %14
  %18 = load i32, i32* %8, align 4
  %19 = sext i32 %18 to i64
  %20 = load i64, i64* %6, align 8
  %21 = sub i64 %20, 8
  %22 = icmp ult i64 %19, %21
  br i1 %22, label %23, label %36

23:                                               ; preds = %17
  %24 = load i8*, i8** %10, align 8
  %25 = load i32, i32* %8, align 4
  %26 = srem i32 %25, 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %24, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = load i32, i32* %8, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 %31
  store i8 %29, i8* %32, align 1
  br label %33

33:                                               ; preds = %23
  %34 = load i32, i32* %8, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %8, align 4
  br label %17

36:                                               ; preds = %17
  %37 = load i32, i32* %8, align 4
  %38 = sub nsw i32 %37, 4
  %39 = load i32, i32* %7, align 4
  %40 = add nsw i32 %38, %39
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 %41
  store i8 0, i8* %42, align 1
  %43 = load i64, i64* @debugmode, align 8
  %44 = icmp ne i64 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %36
  %46 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  %47 = call i32 @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8* %46)
  br label %48

48:                                               ; preds = %45, %36
  %49 = load i32, i32* %4, align 4
  %50 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  %51 = call i32 (i32, i8*, i8*, ...) @net_write(i32 %49, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8* %50)
  %52 = load i32, i32* %4, align 4
  %53 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  %54 = call i32 @ftp_recv_until(i32 %52, i8* %53, i32 512, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0))
  br label %55

55:                                               ; preds = %48
  %56 = load i32, i32* %7, align 4
  %57 = add nsw i32 %56, -1
  store i32 %57, i32* %7, align 4
  br label %11

58:                                               ; preds = %11
  %59 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  %60 = call i32 @memset(i8* %59, i8 signext 0, i32 512)
  store i32 0, i32* %8, align 4
  br label %61

61:                                               ; preds = %78, %58
  %62 = load i32, i32* %8, align 4
  %63 = sext i32 %62 to i64
  %64 = load i64, i64* %6, align 8
  %65 = sub i64 %64, 8
  %66 = sub i64 %65, 4
  %67 = icmp ult i64 %63, %66
  br i1 %67, label %68, label %81

68:                                               ; preds = %61
  %69 = load i8*, i8** %10, align 8
  %70 = load i32, i32* %8, align 4
  %71 = srem i32 %70, 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %69, i64 %72
  %74 = load i8, i8* %73, align 1
  %75 = load i32, i32* %8, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 %76
  store i8 %74, i8* %77, align 1
  br label %78

78:                                               ; preds = %68
  %79 = load i32, i32* %8, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %8, align 4
  br label %61

81:                                               ; preds = %61
  %82 = load i64, i64* @debugmode, align 8
  %83 = icmp ne i64 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %81
  %85 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  %86 = call i32 @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i8* %85)
  br label %87

87:                                               ; preds = %84, %81
  %88 = load i32, i32* %4, align 4
  %89 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  %90 = load i8, i8* %5, align 1
  %91 = zext i8 %90 to i32
  %92 = call i32 (i32, i8*, i8*, ...) @net_write(i32 %88, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i8* %89, i32 %91)
  %93 = load i32, i32* %4, align 4
  %94 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  %95 = call i32 @ftp_recv_until(i32 %93, i8* %94, i32 512, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0))
  %96 = load i32, i32* %4, align 4
  %97 = load i64, i64* %6, align 8
  %98 = call i32 @CHUNK_STRROUNDDOWN(i64 %97)
  %99 = call i32 @xp_gapfill(i32 %96, i32 1, i32 %98)
  ret void
}

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i32 @printf(i8*, i8*) #1

declare dso_local i32 @net_write(i32, i8*, i8*, ...) #1

declare dso_local i32 @ftp_recv_until(i32, i8*, i32, i8*) #1

declare dso_local i32 @xp_gapfill(i32, i32, i32) #1

declare dso_local i32 @CHUNK_STRROUNDDOWN(i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
