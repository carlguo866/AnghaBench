; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_88.c_usage.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_88.c_usage.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [563 x i8] c" usage: %s [options] -h hostname\0A\0A options:\0A -h <string>\09defines the target host/ip.\09(REQUIRED)\0A -P <number>\09defines the target port.\09(%d)\0A -s <number>\09defines the bindshell port.\09(%d)\0A -u <string>\09defines the username.\09\09(\22%s\22)\0A -p <string>\09defines the password.\09\09(\22%s\22)\0A -c <string>\09defines the writable directory.\09(\22%s\22)\0A -b <string>\09defines the base brute address.\09(0x%.8x)\0A -a <number>\09defines the alignment.\09\09(%d)\0A -n <number>\09defines the number of attempts.\09(%d)\0A -r\09\09go upward in memory, instead of downward.\0A -d\09\09do not show verbose ftp in/out traffic.\0A\0A\00", align 1
@port = common dso_local global i32 0, align 4
@sport = common dso_local global i32 0, align 4
@DFLUSER = common dso_local global i8* null, align 8
@DFLPASS = common dso_local global i8* null, align 8
@DFLDIR = common dso_local global i8* null, align 8
@DFLADDR = common dso_local global i32 0, align 4
@align = common dso_local global i32 0, align 4
@attempts = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @usage(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = load i32, i32* @port, align 4
  %5 = load i32, i32* @sport, align 4
  %6 = load i8*, i8** @DFLUSER, align 8
  %7 = load i8*, i8** @DFLPASS, align 8
  %8 = load i8*, i8** @DFLDIR, align 8
  %9 = load i32, i32* @DFLADDR, align 4
  %10 = load i32, i32* @align, align 4
  %11 = load i32, i32* @attempts, align 4
  %12 = call i32 @printf(i8* getelementptr inbounds ([563 x i8], [563 x i8]* @.str, i64 0, i64 0), i8* %3, i32 %4, i32 %5, i8* %6, i8* %7, i8* %8, i32 %9, i32 %10, i32 %11)
  %13 = call i32 @exit(i32 0) #3
  unreachable
}

declare dso_local i32 @printf(i8*, i8*, i32, i32, i8*, i8*, i8*, i32, i32, i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
