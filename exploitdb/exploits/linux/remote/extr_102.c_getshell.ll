; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_102.c_getshell.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_102.c_getshell.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@BUFLEN = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getshell(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %7 = load i32, i32* @BUFLEN, align 4
  %8 = zext i32 %7 to i64
  %9 = call i8* @llvm.stacksave()
  store i8* %9, i8** %3, align 8
  %10 = alloca i8, i64 %8, align 16
  store i64 %8, i64* %4, align 8
  store i32 0, i32* %5, align 4
  br label %11

11:                                               ; preds = %36, %1
  br label %12

12:                                               ; preds = %11
  %13 = call i32 @FD_SET(i32 0, i32* %6)
  %14 = load i32, i32* %2, align 4
  %15 = call i32 @FD_SET(i32 %14, i32* %6)
  %16 = load i32, i32* %2, align 4
  %17 = add nsw i32 %16, 1
  %18 = call i32 @select(i32 %17, i32* %6, i32* null, i32* null, i32* null)
  %19 = load i32, i32* %2, align 4
  %20 = call i64 @FD_ISSET(i32 %19, i32* %6)
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %12
  %23 = load i32, i32* %2, align 4
  %24 = load i32, i32* @BUFLEN, align 4
  %25 = call i32 @read(i32 %23, i8* %10, i32 %24)
  store i32 %25, i32* %5, align 4
  %26 = load i32, i32* %5, align 4
  %27 = call i32 @write(i32 1, i8* %10, i32 %26)
  br label %28

28:                                               ; preds = %22, %12
  %29 = call i64 @FD_ISSET(i32 0, i32* %6)
  %30 = icmp ne i64 %29, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %28
  %32 = load i32, i32* %2, align 4
  %33 = load i32, i32* @BUFLEN, align 4
  %34 = call i32 @read(i32 0, i8* %10, i32 %33)
  %35 = call i32 @write(i32 %32, i8* %10, i32 %34)
  br label %36

36:                                               ; preds = %31, %28
  br label %11
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @FD_SET(i32, i32*) #2

declare dso_local i32 @select(i32, i32*, i32*, i32*, i32*) #2

declare dso_local i64 @FD_ISSET(i32, i32*) #2

declare dso_local i32 @read(i32, i8*, i32) #2

declare dso_local i32 @write(i32, i8*, i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
