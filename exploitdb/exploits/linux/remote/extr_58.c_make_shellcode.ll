; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_58.c_make_shellcode.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_58.c_make_shellcode.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SIZ = common dso_local global i32 0, align 4
@shellcode = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [2 x i8] c"\01\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @make_shellcode(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = load i32, i32* @SIZ, align 4
  %6 = sub nsw i32 %5, 1
  %7 = call i32 @memset(i8* %4, i32 0, i32 %6)
  %8 = load i8*, i8** %2, align 8
  %9 = load i32, i32* @SIZ, align 4
  %10 = sub nsw i32 %9, 40
  %11 = call i32 @memset(i8* %8, i32 144, i32 %10)
  %12 = load i8*, i8** %2, align 8
  %13 = load i32, i32* @SIZ, align 4
  %14 = sub nsw i32 %13, 42
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %12, i64 %15
  %17 = load i32, i32* @shellcode, align 4
  %18 = call i32 @strlen(i32 %17)
  %19 = sext i32 %18 to i64
  %20 = sub i64 0, %19
  %21 = getelementptr inbounds i8, i8* %16, i64 %20
  %22 = load i32, i32* @shellcode, align 4
  %23 = load i32, i32* @shellcode, align 4
  %24 = call i32 @strlen(i32 %23)
  %25 = call i32 @memcpy(i8* %21, i32 %22, i32 %24)
  %26 = load i8*, i8** %2, align 8
  %27 = call i32 @strcat(i8* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  ret void
}

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i32, i32) #1

declare dso_local i32 @strlen(i32) #1

declare dso_local i32 @strcat(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
