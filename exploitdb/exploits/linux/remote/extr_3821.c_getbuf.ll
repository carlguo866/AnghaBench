; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_3821.c_getbuf.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_3821.c_getbuf.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@BUFSIZE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [36 x i8] c"getbuf(): allocating memory failed.\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"GET /\00", align 1
@x86_ptr = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [8 x i8] c"\0AHost: \00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @getbuf(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  store i32 0, i32* %3, align 4
  %5 = load i32, i32* @BUFSIZE, align 4
  %6 = add nsw i32 %5, 1
  %7 = call i64 @malloc(i32 %6)
  %8 = inttoptr i64 %7 to i8*
  store i8* %8, i8** %4, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %1
  %11 = call i32 @printe(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 1)
  br label %12

12:                                               ; preds = %10, %1
  %13 = load i8*, i8** %4, align 8
  %14 = call i32 @strcpy(i8* %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0))
  %15 = load i8*, i8** %4, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 5
  %17 = call i32 @memset(i8* %16, i8 signext -112, i32 1800)
  %18 = load i8*, i8** %4, align 8
  %19 = load i8*, i8** @x86_ptr, align 8
  %20 = call i32 @strcat(i8* %18, i8* %19)
  %21 = load i8*, i8** %4, align 8
  %22 = call i32 @strlen(i8* %21)
  store i32 %22, i32* %3, align 4
  br label %23

23:                                               ; preds = %34, %12
  %24 = load i32, i32* %3, align 4
  %25 = icmp ult i32 %24, 2100
  br i1 %25, label %26, label %37

26:                                               ; preds = %23
  %27 = load i32, i32* %2, align 4
  %28 = zext i32 %27 to i64
  %29 = load i8*, i8** %4, align 8
  %30 = load i32, i32* %3, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %29, i64 %31
  %33 = bitcast i8* %32 to i64*
  store i64 %28, i64* %33, align 8
  br label %34

34:                                               ; preds = %26
  %35 = load i32, i32* %3, align 4
  %36 = add i32 %35, 4
  store i32 %36, i32* %3, align 4
  br label %23

37:                                               ; preds = %23
  %38 = load i8*, i8** %4, align 8
  %39 = call i32 @strcat(i8* %38, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0))
  %40 = load i8*, i8** %4, align 8
  %41 = load i8*, i8** %4, align 8
  %42 = call i32 @strlen(i8* %41)
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %40, i64 %43
  %45 = load i32, i32* @BUFSIZE, align 4
  %46 = load i8*, i8** %4, align 8
  %47 = call i32 @strlen(i8* %46)
  %48 = sub nsw i32 %45, %47
  %49 = sub nsw i32 %48, 3
  %50 = sub nsw i32 %49, 2
  %51 = call i32 @memset(i8* %44, i8 signext 120, i32 %50)
  %52 = load i8*, i8** %4, align 8
  %53 = call i32 @strcat(i8* %52, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0))
  %54 = load i8*, i8** %4, align 8
  ret i8* %54
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @printe(i8*, i32) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @strlen(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
