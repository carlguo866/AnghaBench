; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1750.c_hook.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1750.c_hook.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@PROT_READ = common dso_local global i32 0, align 4
@PROT_WRITE = common dso_local global i32 0, align 4
@PROT_EXEC = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (i8* (i8*, i32, i8*)* @hook to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @hook(i8* %0, i32 %1, i8* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i8* %2, i8** %6, align 8
  %9 = load i32, i32* %5, align 4
  %10 = add nsw i32 %9, 5
  %11 = call i8* @malloc(i32 %10)
  store i8* %11, i8** %7, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = load i8*, i8** %4, align 8
  %14 = bitcast i8* %13 to i64*
  %15 = load i32, i32* %5, align 4
  %16 = call i32 @memcpy(i8* %12, i64* %14, i32 %15)
  %17 = load i8*, i8** %7, align 8
  %18 = load i32, i32* %5, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr i8, i8* %17, i64 %19
  %21 = call i32 @memset(i8* %20, i32 233, i32 1)
  %22 = load i8*, i8** %4, align 8
  %23 = load i8*, i8** %7, align 8
  %24 = getelementptr i8, i8* %23, i64 5
  %25 = ptrtoint i8* %22 to i64
  %26 = ptrtoint i8* %24 to i64
  %27 = sub i64 %25, %26
  store i64 %27, i64* %8, align 8
  %28 = load i8*, i8** %7, align 8
  %29 = load i32, i32* %5, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr i8, i8* %28, i64 %30
  %32 = getelementptr i8, i8* %31, i64 1
  %33 = call i32 @memcpy(i8* %32, i64* %8, i32 8)
  %34 = load i8*, i8** %4, align 8
  %35 = call i32 @PAGE(i8* %34)
  %36 = load i32, i32* @PROT_READ, align 4
  %37 = load i32, i32* @PROT_WRITE, align 4
  %38 = or i32 %36, %37
  %39 = load i32, i32* @PROT_EXEC, align 4
  %40 = or i32 %38, %39
  %41 = call i32 @mprotect(i32 %35, i32 4096, i32 %40)
  %42 = load i8*, i8** %4, align 8
  %43 = call i32 @memset(i8* %42, i32 233, i32 1)
  %44 = load i8*, i8** %6, align 8
  %45 = load i8*, i8** %4, align 8
  %46 = getelementptr i8, i8* %45, i64 5
  %47 = ptrtoint i8* %44 to i64
  %48 = ptrtoint i8* %46 to i64
  %49 = sub i64 %47, %48
  store i64 %49, i64* %8, align 8
  %50 = load i8*, i8** %4, align 8
  %51 = getelementptr i8, i8* %50, i64 1
  %52 = call i32 @memcpy(i8* %51, i64* %8, i32 8)
  %53 = load i8*, i8** %7, align 8
  ret i8* %53
}

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @memcpy(i8*, i64*, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @mprotect(i32, i32, i32) #1

declare dso_local i32 @PAGE(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
