; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_22091.c_convert_addr.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_22091.c_convert_addr.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.wr_addr = type { i64, i64 }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @convert_addr(i64 %0) #0 {
  %2 = alloca %struct.wr_addr, align 8
  %3 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 65535
  %6 = getelementptr inbounds %struct.wr_addr, %struct.wr_addr* %2, i32 0, i32 0
  store i64 %5, i64* %6, align 8
  %7 = load i64, i64* %3, align 8
  %8 = and i64 %7, 4294901760
  %9 = lshr i64 %8, 16
  %10 = getelementptr inbounds %struct.wr_addr, %struct.wr_addr* %2, i32 0, i32 1
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %struct.wr_addr, %struct.wr_addr* %2, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %struct.wr_addr, %struct.wr_addr* %2, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp ugt i64 %12, %14
  br i1 %15, label %16, label %22

16:                                               ; preds = %1
  %17 = getelementptr inbounds %struct.wr_addr, %struct.wr_addr* %2, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %struct.wr_addr, %struct.wr_addr* %2, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %18
  store i64 %21, i64* %19, align 8
  br label %31

22:                                               ; preds = %1
  %23 = getelementptr inbounds %struct.wr_addr, %struct.wr_addr* %2, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 65536
  store i64 %25, i64* %23, align 8
  %26 = getelementptr inbounds %struct.wr_addr, %struct.wr_addr* %2, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %struct.wr_addr, %struct.wr_addr* %2, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %29, %27
  store i64 %30, i64* %28, align 8
  br label %31

31:                                               ; preds = %22, %16
  %32 = getelementptr inbounds %struct.wr_addr, %struct.wr_addr* %2, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %33, 88
  store i64 %34, i64* %32, align 8
  %35 = bitcast %struct.wr_addr* %2 to { i64, i64 }*
  %36 = load { i64, i64 }, { i64, i64 }* %35, align 8
  ret { i64, i64 } %36
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
