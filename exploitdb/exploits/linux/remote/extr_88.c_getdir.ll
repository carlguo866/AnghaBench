; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_88.c_getdir.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_88.c_getdir.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [36 x i8] c"getdir(): allocating memory failed.\00", align 1
@align = common dso_local global i32 0, align 4
@reverse = common dso_local global i32 0, align 4
@baseaddr = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @getdir(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  store i32 0, i32* %3, align 4
  %5 = call i64 @malloc(i32 256)
  %6 = inttoptr i64 %5 to i8*
  store i8* %6, i8** %4, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = call i32 @printe(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 1)
  br label %10

10:                                               ; preds = %8, %1
  %11 = load i8*, i8** %4, align 8
  %12 = call i32 @memset(i8* %11, i8 signext 0, i32 256)
  %13 = load i32, i32* @align, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %10
  %16 = load i8*, i8** %4, align 8
  %17 = load i32, i32* @align, align 4
  %18 = call i32 @memset(i8* %16, i8 signext 120, i32 %17)
  br label %19

19:                                               ; preds = %15, %10
  %20 = load i32, i32* @align, align 4
  store i32 %20, i32* %3, align 4
  br label %21

21:                                               ; preds = %48, %19
  %22 = load i32, i32* %3, align 4
  %23 = icmp ult i32 %22, 252
  br i1 %23, label %24, label %51

24:                                               ; preds = %21
  %25 = load i32, i32* @reverse, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %24
  %28 = load i32, i32* @baseaddr, align 4
  %29 = load i32, i32* %2, align 4
  %30 = sub i32 %28, %29
  %31 = zext i32 %30 to i64
  %32 = load i8*, i8** %4, align 8
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %32, i64 %34
  %36 = bitcast i8* %35 to i64*
  store i64 %31, i64* %36, align 8
  br label %47

37:                                               ; preds = %24
  %38 = load i32, i32* @baseaddr, align 4
  %39 = load i32, i32* %2, align 4
  %40 = add i32 %38, %39
  %41 = zext i32 %40 to i64
  %42 = load i8*, i8** %4, align 8
  %43 = load i32, i32* %3, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %42, i64 %44
  %46 = bitcast i8* %45 to i64*
  store i64 %41, i64* %46, align 8
  br label %47

47:                                               ; preds = %37, %27
  br label %48

48:                                               ; preds = %47
  %49 = load i32, i32* %3, align 4
  %50 = add i32 %49, 4
  store i32 %50, i32* %3, align 4
  br label %21

51:                                               ; preds = %21
  %52 = load i8*, i8** %4, align 8
  ret i8* %52
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @printe(i8*, i32) #1

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
