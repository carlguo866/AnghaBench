; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_47320.c_send_icmp.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_47320.c_send_icmp.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.icmphdr = type { i32 }

@IP_MAXPACKET = common dso_local global i64 0, align 8
@ICMP_HDRLEN = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @send_icmp(i32 %0, i64 %1, i8* %2, i32 %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca %struct.icmphdr*, align 8
  %11 = alloca i64, align 8
  store i32 %0, i32* %5, align 4
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  store i32 %3, i32* %8, align 4
  %12 = load i64, i64* @IP_MAXPACKET, align 8
  %13 = call i8* @Malloc(i64 %12)
  store i8* %13, i8** %9, align 8
  %14 = load i8*, i8** %9, align 8
  %15 = bitcast i8* %14 to %struct.icmphdr*
  store %struct.icmphdr* %15, %struct.icmphdr** %10, align 8
  %16 = load i8*, i8** %7, align 8
  %17 = icmp ne i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %4
  %19 = load i64, i64* %6, align 8
  %20 = call i8* @Malloc(i64 %19)
  store i8* %20, i8** %7, align 8
  br label %21

21:                                               ; preds = %18, %4
  %22 = load %struct.icmphdr*, %struct.icmphdr** %10, align 8
  %23 = load i8*, i8** %7, align 8
  %24 = load i64, i64* %6, align 8
  %25 = call i32 @icmp_header(%struct.icmphdr* %22, i8* %23, i64 %24)
  %26 = load i64, i64* @ICMP_HDRLEN, align 8
  %27 = load i64, i64* %6, align 8
  %28 = add nsw i64 %26, %27
  store i64 %28, i64* %11, align 8
  %29 = load i32, i32* %5, align 4
  %30 = load i64, i64* %11, align 8
  %31 = load i8*, i8** %9, align 8
  %32 = load i32, i32* %8, align 4
  %33 = call i32 @send_ip4(i32 %29, i64 %30, i8* %31, i32 %32)
  %34 = load i8*, i8** %9, align 8
  %35 = call i32 @free(i8* %34)
  ret void
}

declare dso_local i8* @Malloc(i64) #1

declare dso_local i32 @icmp_header(%struct.icmphdr*, i8*, i64) #1

declare dso_local i32 @send_ip4(i32, i64, i8*, i32) #1

declare dso_local i32 @free(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
