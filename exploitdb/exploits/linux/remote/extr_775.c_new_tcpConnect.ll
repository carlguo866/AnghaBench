; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_775.c_new_tcpConnect.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_775.c_new_tcpConnect.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timeval = type { i32, i32 }
%struct.sockaddr_in = type { i32, i32, %struct.in_addr }
%struct.in_addr = type { i32 }
%struct.hostent = type { i64 }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [26 x i8] c"tcpConnect:gethostbyname\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [19 x i8] c"tcpConnect:socket\0A\00", align 1
@F_GETFL = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [18 x i8] c"tcpConnect:fcntl\0A\00", align 1
@O_NONBLOCK = common dso_local global i32 0, align 4
@F_SETFL = common dso_local global i32 0, align 4
@errno = common dso_local global i32 0, align 4
@EINPROGRESS = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [20 x i8] c"tcpConnect:connect\0A\00", align 1
@SOL_SOCKET = common dso_local global i32 0, align 4
@SO_ERROR = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [23 x i8] c"tcpConnect:getsockopt\0A\00", align 1
@IPPROTO_TCP = common dso_local global i32 0, align 4
@TCP_NODELAY = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [23 x i8] c"tcpConnect:setsockopt\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @new_tcpConnect(i8* %0, i32 %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca %struct.timeval, align 4
  %13 = alloca %struct.sockaddr_in, align 4
  %14 = alloca %struct.hostent*, align 8
  %15 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 0, i32* %10, align 4
  store %struct.hostent* null, %struct.hostent** %14, align 8
  %16 = load i8*, i8** %5, align 8
  %17 = call %struct.hostent* @gethostbyname(i8* %16)
  store %struct.hostent* %17, %struct.hostent** %14, align 8
  %18 = load %struct.hostent*, %struct.hostent** %14, align 8
  %19 = icmp eq %struct.hostent* null, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %3
  %21 = call i32 @perror(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0))
  store i32 -1, i32* %4, align 4
  br label %139

22:                                               ; preds = %3
  %23 = load i32, i32* @AF_INET, align 4
  %24 = load i32, i32* @SOCK_STREAM, align 4
  %25 = call i32 @socket(i32 %23, i32 %24, i32 0)
  store i32 %25, i32* %8, align 4
  %26 = load i32, i32* %8, align 4
  %27 = icmp eq i32 -1, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %22
  %29 = call i32 @perror(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0))
  store i32 -1, i32* %4, align 4
  br label %139

30:                                               ; preds = %22
  %31 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 2
  %32 = load %struct.hostent*, %struct.hostent** %14, align 8
  %33 = getelementptr inbounds %struct.hostent, %struct.hostent* %32, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = inttoptr i64 %34 to %struct.in_addr*
  %36 = bitcast %struct.in_addr* %31 to i8*
  %37 = bitcast %struct.in_addr* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 4, i1 false)
  %38 = load i32, i32* @AF_INET, align 4
  %39 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 1
  store i32 %38, i32* %39, align 4
  %40 = load i32, i32* %6, align 4
  %41 = call i32 @htons(i32 %40)
  %42 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 0
  store i32 %41, i32* %42, align 4
  %43 = load i32, i32* %8, align 4
  %44 = load i32, i32* @F_GETFL, align 4
  %45 = call i64 (i32, i32, ...) @fcntl(i32 %43, i32 %44)
  %46 = trunc i64 %45 to i32
  store i32 %46, i32* %9, align 4
  %47 = load i32, i32* %9, align 4
  %48 = icmp eq i32 -1, %47
  br i1 %48, label %49, label %53

49:                                               ; preds = %30
  %50 = call i32 @perror(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0))
  %51 = load i32, i32* %8, align 4
  %52 = call i32 @close(i32 %51)
  store i32 -1, i32* %4, align 4
  br label %139

53:                                               ; preds = %30
  %54 = load i32, i32* @O_NONBLOCK, align 4
  %55 = load i32, i32* %9, align 4
  %56 = or i32 %55, %54
  store i32 %56, i32* %9, align 4
  %57 = load i32, i32* %8, align 4
  %58 = load i32, i32* @F_SETFL, align 4
  %59 = load i32, i32* %9, align 4
  %60 = call i64 (i32, i32, ...) @fcntl(i32 %57, i32 %58, i32 %59)
  %61 = icmp slt i64 %60, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %53
  %63 = call i32 @perror(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0))
  %64 = load i32, i32* %8, align 4
  %65 = call i32 @close(i32 %64)
  store i32 -1, i32* %4, align 4
  br label %139

66:                                               ; preds = %53
  %67 = load i32, i32* %8, align 4
  %68 = bitcast %struct.sockaddr_in* %13 to %struct.sockaddr*
  %69 = call i64 @connect(i32 %67, %struct.sockaddr* %68, i32 12)
  %70 = icmp slt i64 %69, 0
  br i1 %70, label %71, label %79

71:                                               ; preds = %66
  %72 = load i32, i32* @errno, align 4
  %73 = load i32, i32* @EINPROGRESS, align 4
  %74 = icmp ne i32 %72, %73
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  %76 = call i32 @perror(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0))
  %77 = load i32, i32* %8, align 4
  %78 = call i32 @close(i32 %77)
  store i32 -1, i32* %4, align 4
  br label %139

79:                                               ; preds = %71, %66
  %80 = load i32, i32* %7, align 4
  %81 = udiv i32 %80, 1000
  %82 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 0
  store i32 %81, i32* %82, align 4
  %83 = load i32, i32* %7, align 4
  %84 = urem i32 %83, 1000
  %85 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 1
  store i32 %84, i32* %85, align 4
  %86 = call i32 @FD_ZERO(i32* %15)
  %87 = load i32, i32* %8, align 4
  %88 = call i32 @FD_SET(i32 %87, i32* %15)
  %89 = load i32, i32* %8, align 4
  %90 = add nsw i32 %89, 1
  %91 = call i64 @select(i32 %90, i32* %15, i32* %15, i32* null, %struct.timeval* %12)
  %92 = icmp sle i64 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %79
  %94 = load i32, i32* %8, align 4
  %95 = call i32 @close(i32 %94)
  store i32 -1, i32* %4, align 4
  br label %139

96:                                               ; preds = %79
  store i64 4, i64* %11, align 8
  %97 = load i32, i32* %8, align 4
  %98 = load i32, i32* @SOL_SOCKET, align 4
  %99 = load i32, i32* @SO_ERROR, align 4
  %100 = call i64 @getsockopt(i32 %97, i32 %98, i32 %99, i32* %10, i64* %11)
  %101 = icmp slt i64 %100, 0
  br i1 %101, label %102, label %106

102:                                              ; preds = %96
  %103 = call i32 @perror(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0))
  %104 = load i32, i32* %8, align 4
  %105 = call i32 @close(i32 %104)
  store i32 -1, i32* %4, align 4
  br label %139

106:                                              ; preds = %96
  %107 = load i32, i32* %10, align 4
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %109, label %113

109:                                              ; preds = %106
  %110 = load i32, i32* %10, align 4
  store i32 %110, i32* @errno, align 4
  %111 = load i32, i32* %8, align 4
  %112 = call i32 @close(i32 %111)
  store i32 -1, i32* %4, align 4
  br label %139

113:                                              ; preds = %106
  %114 = load i32, i32* %8, align 4
  %115 = load i32, i32* @F_SETFL, align 4
  %116 = load i32, i32* %9, align 4
  %117 = load i32, i32* @O_NONBLOCK, align 4
  %118 = xor i32 %117, -1
  %119 = and i32 %116, %118
  %120 = call i64 (i32, i32, ...) @fcntl(i32 %114, i32 %115, i32 %119)
  %121 = icmp slt i64 %120, 0
  br i1 %121, label %122, label %126

122:                                              ; preds = %113
  %123 = call i32 @perror(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0))
  %124 = load i32, i32* %8, align 4
  %125 = call i32 @close(i32 %124)
  store i32 -1, i32* %4, align 4
  br label %139

126:                                              ; preds = %113
  store i32 1, i32* %10, align 4
  store i64 4, i64* %11, align 8
  %127 = load i32, i32* %8, align 4
  %128 = load i32, i32* @IPPROTO_TCP, align 4
  %129 = load i32, i32* @TCP_NODELAY, align 4
  %130 = load i64, i64* %11, align 8
  %131 = call i64 @setsockopt(i32 %127, i32 %128, i32 %129, i32* %10, i64 %130)
  %132 = icmp slt i64 %131, 0
  br i1 %132, label %133, label %137

133:                                              ; preds = %126
  %134 = call i32 @perror(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0))
  %135 = load i32, i32* %8, align 4
  %136 = call i32 @close(i32 %135)
  store i32 -1, i32* %4, align 4
  br label %139

137:                                              ; preds = %126
  %138 = load i32, i32* %8, align 4
  store i32 %138, i32* %4, align 4
  br label %139

139:                                              ; preds = %137, %133, %122, %109, %102, %93, %75, %62, %49, %28, %20
  %140 = load i32, i32* %4, align 4
  ret i32 %140
}

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @socket(i32, i32, i32) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local i32 @htons(i32) #1

declare dso_local i64 @fcntl(i32, i32, ...) #1

declare dso_local i32 @close(i32) #1

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i64 @select(i32, i32*, i32*, i32*, %struct.timeval*) #1

declare dso_local i64 @getsockopt(i32, i32, i32, i32*, i64*) #1

declare dso_local i64 @setsockopt(i32, i32, i32, i32*, i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
