; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1295.c_do_login.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1295.c_do_login.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [5 x i8] c"220 \00", align 1
@BUFSIZ = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [10 x i8] c"USER %s\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"331 \00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"PASS %s\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"230 \00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_login(i32 %0, i8* %1, i8* %2, i8* %3, i8* %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  store i32 %0, i32* %6, align 4
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i8* %3, i8** %9, align 8
  store i8* %4, i8** %10, align 8
  %11 = load i8*, i8** %7, align 8
  %12 = call i32 @memset(i8* %11, i32 0, i32 8)
  %13 = load i8*, i8** %8, align 8
  %14 = call i32 @memset(i8* %13, i32 0, i32 8)
  br label %15

15:                                               ; preds = %19, %5
  %16 = load i32, i32* %6, align 4
  %17 = load i8*, i8** %7, align 8
  %18 = call i32 @_recv(i32 %16, i8* %17)
  br label %19

19:                                               ; preds = %15
  %20 = load i8*, i8** %7, align 8
  %21 = call i32* @strstr(i8* %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0))
  %22 = icmp eq i32* %21, null
  br i1 %22, label %15, label %23

23:                                               ; preds = %19
  %24 = load i8*, i8** %8, align 8
  %25 = load i32, i32* @BUFSIZ, align 4
  %26 = load i8*, i8** %9, align 8
  %27 = call i32 @snprintf(i8* %24, i32 %25, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8* %26)
  %28 = load i32, i32* %6, align 4
  %29 = load i8*, i8** %8, align 8
  %30 = load i8*, i8** %8, align 8
  %31 = call i32 @strlen(i8* %30)
  %32 = call i32 @send(i32 %28, i8* %29, i32 %31, i32 0)
  br label %33

33:                                               ; preds = %37, %23
  %34 = load i32, i32* %6, align 4
  %35 = load i8*, i8** %7, align 8
  %36 = call i32 @_recv(i32 %34, i8* %35)
  br label %37

37:                                               ; preds = %33
  %38 = load i8*, i8** %7, align 8
  %39 = call i32* @strstr(i8* %38, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0))
  %40 = icmp eq i32* %39, null
  br i1 %40, label %33, label %41

41:                                               ; preds = %37
  %42 = load i8*, i8** %8, align 8
  %43 = load i32, i32* @BUFSIZ, align 4
  %44 = load i8*, i8** %10, align 8
  %45 = call i32 @snprintf(i8* %42, i32 %43, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* %44)
  %46 = load i32, i32* %6, align 4
  %47 = load i8*, i8** %8, align 8
  %48 = load i8*, i8** %8, align 8
  %49 = call i32 @strlen(i8* %48)
  %50 = call i32 @send(i32 %46, i8* %47, i32 %49, i32 0)
  br label %51

51:                                               ; preds = %55, %41
  %52 = load i32, i32* %6, align 4
  %53 = load i8*, i8** %7, align 8
  %54 = call i32 @_recv(i32 %52, i8* %53)
  br label %55

55:                                               ; preds = %51
  %56 = load i8*, i8** %7, align 8
  %57 = call i32* @strstr(i8* %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0))
  %58 = icmp eq i32* %57, null
  br i1 %58, label %51, label %59

59:                                               ; preds = %55
  ret void
}

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @_recv(i32, i8*) #1

declare dso_local i32* @strstr(i8*, i8*) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
