; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_107.c_storbuf.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_107.c_storbuf.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [18 x i8] c"[+] STOR file %s\0A\00", align 1
@cmdbuf = common dso_local global i32 0, align 4
@SIZE = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [8 x i8] c"%s %s\0D\0A\00", align 1
@storstr = common dso_local global i8* null, align 8
@sockfd = common dso_local global i32 0, align 4
@srvbuf = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @storbuf(i8* %0, i8* %1, i32 %2, i32 %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %10 = load i8*, i8** %5, align 8
  %11 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* %10)
  %12 = load i32, i32* @cmdbuf, align 4
  %13 = load i32, i32* @SIZE, align 4
  %14 = call i32 @memset(i32 %12, i32 0, i32 %13)
  %15 = load i32, i32* @cmdbuf, align 4
  %16 = load i8*, i8** @storstr, align 8
  %17 = load i8*, i8** %5, align 8
  %18 = call i32 @sprintf(i32 %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8* %16, i8* %17)
  store i32 %18, i32* %9, align 4
  %19 = load i32, i32* @sockfd, align 4
  %20 = load i32, i32* @cmdbuf, align 4
  %21 = load i32, i32* %9, align 4
  %22 = call i32 @sendbuf(i32 %19, i32 %20, i32 %21)
  %23 = load i8*, i8** %6, align 8
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %8, align 4
  %26 = call i32 @storfile(i8* %23, i32 %24, i32 %25)
  %27 = load i32, i32* @sockfd, align 4
  %28 = load i32, i32* @srvbuf, align 4
  %29 = load i32, i32* @SIZE, align 4
  %30 = call i32 @readbuf(i32* null, i32 %27, i32 %28, i32 %29)
  %31 = load i32, i32* @srvbuf, align 4
  %32 = call i32 @checkstatus(i32 %31)
  ret void
}

declare dso_local i32 @printf(i8*, i8*) #1

declare dso_local i32 @memset(i32, i32, i32) #1

declare dso_local i32 @sprintf(i32, i8*, i8*, i8*) #1

declare dso_local i32 @sendbuf(i32, i32, i32) #1

declare dso_local i32 @storfile(i8*, i32, i32) #1

declare dso_local i32 @readbuf(i32*, i32, i32, i32) #1

declare dso_local i32 @checkstatus(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
