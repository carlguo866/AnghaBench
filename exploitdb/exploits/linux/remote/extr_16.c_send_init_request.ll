; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_16.c_send_init_request.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_16.c_send_init_request.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i32, %struct.TYPE_3__, i32, i32, i64, i64, i64, i32 }
%struct.TYPE_3__ = type { i32, i8*, i8*, i32 }

@PPTP_MAGIC_COOKIE = common dso_local global i32 0, align 4
@PPTP_CTRL_MESSAGE = common dso_local global i32 0, align 4
@START_CTRL_CONN_RQST = common dso_local global i32 0, align 4
@PPTP_VERSION = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [5 x i8] c"hell\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"domain HELL\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @send_init_request(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.TYPE_4__, align 8
  store i32 %0, i32* %2, align 4
  %4 = load i32, i32* @PPTP_MAGIC_COOKIE, align 4
  %5 = call i32 @htonl(i32 %4)
  %6 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %3, i32 0, i32 1
  %7 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %6, i32 0, i32 3
  store i32 %5, i32* %7, align 8
  %8 = load i32, i32* @PPTP_CTRL_MESSAGE, align 4
  %9 = call i8* @htons(i32 %8)
  %10 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %3, i32 0, i32 1
  %11 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %10, i32 0, i32 2
  store i8* %9, i8** %11, align 8
  %12 = load i32, i32* @START_CTRL_CONN_RQST, align 4
  %13 = call i8* @htons(i32 %12)
  %14 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %3, i32 0, i32 1
  %15 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %14, i32 0, i32 1
  store i8* %13, i8** %15, align 8
  %16 = load i32, i32* @PPTP_VERSION, align 4
  %17 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %3, i32 0, i32 7
  store i32 %16, i32* %17, align 8
  %18 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %3, i32 0, i32 6
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %3, i32 0, i32 5
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %3, i32 0, i32 0
  store i32 1, i32* %20, align 8
  %21 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %3, i32 0, i32 4
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %3, i32 0, i32 3
  %23 = load i32, i32* %22, align 4
  %24 = call i32 @strcpy(i32 %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0))
  %25 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %3, i32 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = call i32 @strcpy(i32 %26, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %28 = call i32 @ntohs(i32 80)
  %29 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %3, i32 0, i32 1
  %30 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %29, i32 0, i32 0
  store i32 %28, i32* %30, align 8
  %31 = load i32, i32* %2, align 4
  %32 = bitcast %struct.TYPE_4__* %3 to i8*
  %33 = call i32 @send(i32 %31, i8* %32, i32 80, i32 0)
  ret void
}

declare dso_local i32 @htonl(i32) #1

declare dso_local i8* @htons(i32) #1

declare dso_local i32 @strcpy(i32, i8*) #1

declare dso_local i32 @ntohs(i32) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
