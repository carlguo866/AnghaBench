; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_32965.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_32965.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_7__ = type { i32, i32 }

@GCRYCTL_ENABLE_QUICK_RANDOM = common dso_local global i32 0, align 4
@GNUTLS_PK_DSA = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [4 x i8] c"\01\00\01\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"buggy\0A\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"success!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.TYPE_7__, align 4
  %4 = alloca %struct.TYPE_7__, align 4
  %5 = alloca %struct.TYPE_7__, align 4
  %6 = alloca %struct.TYPE_7__, align 4
  %7 = alloca %struct.TYPE_7__, align 4
  %8 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %9 = call i32 (...) @gnutls_global_init()
  %10 = load i32, i32* @GCRYCTL_ENABLE_QUICK_RANDOM, align 4
  %11 = call i32 @gcry_control(i32 %10, i32 0)
  %12 = call i32 @gnutls_x509_privkey_init(i32* %2)
  store i32 %12, i32* %8, align 4
  %13 = load i32, i32* %8, align 4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %0
  store i32 1, i32* %1, align 4
  br label %61

16:                                               ; preds = %0
  %17 = load i32, i32* %2, align 4
  %18 = load i32, i32* @GNUTLS_PK_DSA, align 4
  %19 = call i32 @gnutls_x509_privkey_generate(i32 %17, i32 %18, i32 512, i32 0)
  store i32 %19, i32* %8, align 4
  %20 = load i32, i32* %8, align 4
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %16
  store i32 1, i32* %1, align 4
  br label %61

23:                                               ; preds = %16
  %24 = load i32, i32* %2, align 4
  %25 = call i32 @gnutls_x509_privkey_export_dsa_raw(i32 %24, %struct.TYPE_7__* %3, %struct.TYPE_7__* %4, %struct.TYPE_7__* %5, %struct.TYPE_7__* %6, %struct.TYPE_7__* %7)
  store i32 %25, i32* %8, align 4
  %26 = load i32, i32* %8, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %23
  store i32 1, i32* %1, align 4
  br label %61

29:                                               ; preds = %23
  %30 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %4, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 3
  br i1 %32, label %33, label %40

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %4, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = call i64 @memcmp(i32 %35, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 3)
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %33
  %39 = call i32 @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0))
  br label %42

40:                                               ; preds = %33, %29
  %41 = call i32 @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0))
  br label %42

42:                                               ; preds = %40, %38
  %43 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %3, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = call i32 @gnutls_free(i32 %44)
  %46 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %4, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = call i32 @gnutls_free(i32 %47)
  %49 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %5, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = call i32 @gnutls_free(i32 %50)
  %52 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %6, i32 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = call i32 @gnutls_free(i32 %53)
  %55 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %7, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = call i32 @gnutls_free(i32 %56)
  %58 = load i32, i32* %2, align 4
  %59 = call i32 @gnutls_x509_privkey_deinit(i32 %58)
  %60 = call i32 (...) @gnutls_global_deinit()
  store i32 0, i32* %1, align 4
  br label %61

61:                                               ; preds = %42, %28, %22, %15
  %62 = load i32, i32* %1, align 4
  ret i32 %62
}

declare dso_local i32 @gnutls_global_init(...) #1

declare dso_local i32 @gcry_control(i32, i32) #1

declare dso_local i32 @gnutls_x509_privkey_init(i32*) #1

declare dso_local i32 @gnutls_x509_privkey_generate(i32, i32, i32, i32) #1

declare dso_local i32 @gnutls_x509_privkey_export_dsa_raw(i32, %struct.TYPE_7__*, %struct.TYPE_7__*, %struct.TYPE_7__*, %struct.TYPE_7__*, %struct.TYPE_7__*) #1

declare dso_local i64 @memcmp(i32, i8*, i32) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @gnutls_free(i32) #1

declare dso_local i32 @gnutls_x509_privkey_deinit(i32) #1

declare dso_local i32 @gnutls_global_deinit(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
