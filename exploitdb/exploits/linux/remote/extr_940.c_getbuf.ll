; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_940.c_getbuf.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_940.c_getbuf.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32, i8 }

@BUFSIZE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [36 x i8] c"getbuf(): allocating memory failed.\00", align 1
@tbl = common dso_local global %struct.TYPE_2__ zeroinitializer, align 4
@.str.1 = private unnamed_addr constant [4 x i8] c"GET\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @getbuf(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  %4 = load i32, i32* @BUFSIZE, align 4
  %5 = add nsw i32 %4, 1
  %6 = call i64 @malloc(i32 %5)
  %7 = inttoptr i64 %6 to i8*
  store i8* %7, i8** %3, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %1
  %10 = call i32 @printe(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 1)
  br label %11

11:                                               ; preds = %9, %1
  %12 = load i8*, i8** %3, align 8
  %13 = load i32, i32* @BUFSIZE, align 4
  %14 = call i32 @memset(i8* %12, i32 8, i32 %13)
  %15 = load i8*, i8** %3, align 8
  %16 = load i32, i32* @BUFSIZE, align 4
  %17 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 0), align 4
  %18 = sub nsw i32 %16, %17
  %19 = sub nsw i32 %18, 9
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %15, i64 %20
  %22 = call i32 @memcpy(i8* %21, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 3)
  %23 = load i8, i8* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  %24 = load i8*, i8** %3, align 8
  %25 = load i32, i32* @BUFSIZE, align 4
  %26 = sub nsw i32 %25, 5
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %24, i64 %27
  store i8 %23, i8* %28, align 1
  %29 = load i32, i32* %2, align 4
  %30 = zext i32 %29 to i64
  %31 = load i8*, i8** %3, align 8
  %32 = load i32, i32* @BUFSIZE, align 4
  %33 = sub nsw i32 %32, 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %31, i64 %34
  %36 = bitcast i8* %35 to i64*
  store i64 %30, i64* %36, align 8
  %37 = load i8*, i8** %3, align 8
  %38 = load i32, i32* @BUFSIZE, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %37, i64 %39
  store i8 10, i8* %40, align 1
  %41 = load i8*, i8** %3, align 8
  ret i8* %41
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @printe(i8*, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
