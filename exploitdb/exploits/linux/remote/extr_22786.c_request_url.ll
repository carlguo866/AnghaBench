; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_22786.c_request_url.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_22786.c_request_url.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.hostent = type { i64 }
%struct.sockaddr_in = type { %struct.TYPE_2__, i32, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.sockaddr = type { i32 }

@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@IPPROTO_TCP = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [26 x i8] c"couldn't resolve hostname\00", align 1
@SIGALRM = common dso_local global i32 0, align 4
@sig_alarm = common dso_local global i32 0, align 4
@TIMEOUT = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [18 x i8] c"connection failed\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @request_url(i8* %0, i16 zeroext %1, i64 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i16, align 2
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %struct.hostent*, align 8
  %10 = alloca %struct.sockaddr_in, align 4
  store i8* %0, i8** %4, align 8
  store i16 %1, i16* %5, align 2
  store i64 %2, i64* %6, align 8
  %11 = load i32, i32* @AF_INET, align 4
  %12 = load i32, i32* @SOCK_STREAM, align 4
  %13 = load i32, i32* @IPPROTO_TCP, align 4
  %14 = call i32 @socket(i32 %11, i32 %12, i32 %13)
  store i32 %14, i32* %7, align 4
  %15 = load i32, i32* @AF_INET, align 4
  %16 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 2
  store i32 %15, i32* %16, align 4
  %17 = load i16, i16* %5, align 2
  %18 = call i32 @htons(i16 zeroext %17)
  %19 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 1
  store i32 %18, i32* %19, align 4
  %20 = load i8*, i8** %4, align 8
  %21 = call i32 @inet_addr(i8* %20)
  %22 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 0
  %23 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %22, i32 0, i32 0
  store i32 %21, i32* %23, align 4
  %24 = icmp ne i32 %21, 0
  br i1 %24, label %25, label %39

25:                                               ; preds = %3
  %26 = load i8*, i8** %4, align 8
  %27 = call %struct.hostent* @gethostbyname(i8* %26)
  store %struct.hostent* %27, %struct.hostent** %9, align 8
  %28 = icmp ne %struct.hostent* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = call i32 @printe(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 1)
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 0
  %33 = bitcast %struct.TYPE_2__* %32 to i8*
  %34 = load %struct.hostent*, %struct.hostent** %9, align 8
  %35 = getelementptr inbounds %struct.hostent, %struct.hostent* %34, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = inttoptr i64 %36 to i8*
  %38 = call i32 @memcpy(i8* %33, i8* %37, i32 4)
  br label %39

39:                                               ; preds = %31, %3
  %40 = load i32, i32* @SIGALRM, align 4
  %41 = load i32, i32* @sig_alarm, align 4
  %42 = call i32 @signal(i32 %40, i32 %41)
  %43 = load i32, i32* @TIMEOUT, align 4
  %44 = call i32 @alarm(i32 %43)
  %45 = load i32, i32* %7, align 4
  %46 = bitcast %struct.sockaddr_in* %10 to %struct.sockaddr*
  %47 = call i64 @connect(i32 %45, %struct.sockaddr* %46, i32 12)
  %48 = icmp ne i64 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %39
  %50 = call i32 @printe(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i32 1)
  br label %51

51:                                               ; preds = %49, %39
  %52 = call i32 @alarm(i32 0)
  %53 = load i64, i64* %6, align 8
  %54 = call i8* @getbuf(i64 %53)
  store i8* %54, i8** %8, align 8
  %55 = load i32, i32* %7, align 4
  %56 = load i8*, i8** %8, align 8
  %57 = load i8*, i8** %8, align 8
  %58 = call i32 @strlen(i8* %57)
  %59 = call i32 @write(i32 %55, i8* %56, i32 %58)
  %60 = load i32, i32* %7, align 4
  %61 = call i32 @close(i32 %60)
  ret void
}

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @htons(i16 zeroext) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

declare dso_local i32 @printe(i8*, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @signal(i32, i32) #1

declare dso_local i32 @alarm(i32) #1

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i8* @getbuf(i64) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
