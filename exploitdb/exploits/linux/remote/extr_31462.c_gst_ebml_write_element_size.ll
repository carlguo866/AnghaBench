; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_31462.c_gst_ebml_write_element_size.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_31462.c_gst_ebml_write_element_size.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@GST_EBML_SIZE_UNKNOWN = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gst_ebml_write_element_size(i32* %0, i32 %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 1, i32* %6, align 4
  store i32 128, i32* %7, align 4
  %8 = load i32, i32* %4, align 4
  %9 = load i32, i32* @GST_EBML_SIZE_UNKNOWN, align 4
  %10 = icmp ne i32 %8, %9
  br i1 %10, label %11, label %37

11:                                               ; preds = %2
  br label %12

12:                                               ; preds = %26, %11
  %13 = load i32, i32* %4, align 4
  %14 = load i32, i32* %6, align 4
  %15 = sub nsw i32 %14, 1
  %16 = mul nsw i32 %15, 8
  %17 = ashr i32 %13, %16
  %18 = load i32, i32* %7, align 4
  %19 = sub nsw i32 %18, 1
  %20 = icmp sge i32 %17, %19
  br i1 %20, label %21, label %24

21:                                               ; preds = %12
  %22 = load i32, i32* %6, align 4
  %23 = icmp sle i32 %22, 8
  br label %24

24:                                               ; preds = %21, %12
  %25 = phi i1 [ false, %12 ], [ %23, %21 ]
  br i1 %25, label %26, label %31

26:                                               ; preds = %24
  %27 = load i32, i32* %7, align 4
  %28 = ashr i32 %27, 1
  store i32 %28, i32* %7, align 4
  %29 = load i32, i32* %6, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %6, align 4
  br label %12

31:                                               ; preds = %24
  %32 = load i32, i32* %6, align 4
  %33 = icmp sgt i32 %32, 8
  br i1 %33, label %34, label %36

34:                                               ; preds = %31
  store i32 1, i32* %7, align 4
  store i32 8, i32* %6, align 4
  %35 = load i32, i32* @GST_EBML_SIZE_UNKNOWN, align 4
  store i32 %35, i32* %4, align 4
  br label %36

36:                                               ; preds = %34, %31
  br label %38

37:                                               ; preds = %2
  store i32 1, i32* %7, align 4
  store i32 8, i32* %6, align 4
  br label %38

38:                                               ; preds = %37, %36
  %39 = load i32, i32* %6, align 4
  store i32 %39, i32* %5, align 4
  br label %40

40:                                               ; preds = %60, %38
  %41 = load i32, i32* %6, align 4
  %42 = add nsw i32 %41, -1
  store i32 %42, i32* %6, align 4
  %43 = icmp sgt i32 %41, 0
  br i1 %43, label %44, label %61

44:                                               ; preds = %40
  %45 = load i32, i32* %4, align 4
  %46 = and i32 %45, 255
  %47 = load i32*, i32** %3, align 8
  %48 = load i32, i32* %6, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, i32* %47, i64 %49
  store i32 %46, i32* %50, align 4
  %51 = load i32, i32* %4, align 4
  %52 = ashr i32 %51, 8
  store i32 %52, i32* %4, align 4
  %53 = load i32, i32* %6, align 4
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %44
  %56 = load i32, i32* %7, align 4
  %57 = load i32*, i32** %3, align 8
  %58 = load i32, i32* %57, align 4
  %59 = or i32 %58, %56
  store i32 %59, i32* %57, align 4
  br label %60

60:                                               ; preds = %55, %44
  br label %40

61:                                               ; preds = %40
  %62 = load i32, i32* %5, align 4
  ret i32 %62
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
