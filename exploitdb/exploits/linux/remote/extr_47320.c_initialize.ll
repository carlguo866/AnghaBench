; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_47320.c_initialize.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_47320.c_initialize.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ifreq = type { i8*, i32, i32, %struct.TYPE_2__ }
%struct.TYPE_2__ = type { i32 }

@INTERFACE = common dso_local global i8* null, align 8
@AF_INET = common dso_local global i32 0, align 4
@SOCK_RAW = common dso_local global i32 0, align 4
@IPPROTO_RAW = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [59 x i8] c"socket() failed to get socket descriptor for using ioctl()\00", align 1
@SIOCGIFMTU = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [27 x i8] c"ioctl() failed to get MTU \00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"MTU of interface %s : %i\0A\00", align 1
@MIN_MTU = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [36 x i8] c"Run\0A$ ip link set dev %s mtu 12000\0A\00", align 1
@.str.4 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@SIOCGIFHWADDR = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [42 x i8] c"ioctl() failed to get source MAC address \00", align 1
@mac = common dso_local global i32* null, align 8
@.str.7 = private unnamed_addr constant [9 x i8] c"MAC %s :\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"%02x:\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"%02x\0A\00", align 1
@SIOCGIFINDEX = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [34 x i8] c"ioctl() failed to find interface \00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"Index for interface %s : %i\0A\00", align 1
@idx = common dso_local global i32 0, align 4
@PF_PACKET = common dso_local global i32 0, align 4
@ETH_P_ALL = common dso_local global i32 0, align 4
@raw_socket = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [37 x i8] c"socket() failed to obtain raw socket\00", align 1
@SOL_SOCKET = common dso_local global i32 0, align 4
@SO_BINDTODEVICE = common dso_local global i32 0, align 4
@.str.13 = private unnamed_addr constant [42 x i8] c"setsockopt() failed to bind to interface \00", align 1
@.str.14 = private unnamed_addr constant [32 x i8] c"Initialized socket discriptors\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @initialize() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.ifreq, align 8
  %3 = alloca [40 x i8], align 16
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = call i32 @time(i32* null)
  %7 = call i32 @srand(i32 %6)
  %8 = getelementptr inbounds [40 x i8], [40 x i8]* %3, i64 0, i64 0
  %9 = load i8*, i8** @INTERFACE, align 8
  %10 = call i32 @strcpy(i8* %8, i8* %9)
  %11 = load i32, i32* @AF_INET, align 4
  %12 = load i32, i32* @SOCK_RAW, align 4
  %13 = load i32, i32* @IPPROTO_RAW, align 4
  %14 = call i32 @socket(i32 %11, i32 %12, i32 %13)
  store i32 %14, i32* %1, align 4
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %0
  %17 = call i32 @die(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0))
  br label %18

18:                                               ; preds = %16, %0
  %19 = call i32 @memset(%struct.ifreq* %2, i32 0, i32 24)
  %20 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %2, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds [40 x i8], [40 x i8]* %3, i64 0, i64 0
  %23 = call i32 @strcpy(i8* %21, i8* %22)
  %24 = load i32, i32* %1, align 4
  %25 = load i32, i32* @SIOCGIFMTU, align 4
  %26 = call i64 @ioctl(i32 %24, i32 %25, %struct.ifreq* %2)
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %18
  %29 = call i32 @die(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0))
  br label %30

30:                                               ; preds = %28, %18
  %31 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %2, i32 0, i32 1
  %32 = load i32, i32* %31, align 8
  store i32 %32, i32* %4, align 4
  %33 = getelementptr inbounds [40 x i8], [40 x i8]* %3, i64 0, i64 0
  %34 = load i32, i32* %4, align 4
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i8* %33, i32 %34)
  %36 = load i32, i32* %4, align 4
  %37 = load i32, i32* @MIN_MTU, align 4
  %38 = icmp slt i32 %36, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %30
  %40 = getelementptr inbounds [40 x i8], [40 x i8]* %3, i64 0, i64 0
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i8* %40)
  %42 = call i32 @die(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.4, i64 0, i64 0))
  br label %43

43:                                               ; preds = %39, %30
  %44 = call i32 @memset(%struct.ifreq* %2, i32 0, i32 24)
  %45 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %2, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds [40 x i8], [40 x i8]* %3, i64 0, i64 0
  %48 = call i32 @snprintf(i8* %46, i32 8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %47)
  %49 = load i32, i32* %1, align 4
  %50 = load i32, i32* @SIOCGIFHWADDR, align 4
  %51 = call i64 @ioctl(i32 %49, i32 %50, %struct.ifreq* %2)
  %52 = icmp slt i64 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %43
  %54 = call i32 @die(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0))
  br label %55

55:                                               ; preds = %53, %43
  %56 = load i32*, i32** @mac, align 8
  %57 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %2, i32 0, i32 3
  %58 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = call i32 @memcpy(i32* %56, i32 %59, i32 24)
  %61 = getelementptr inbounds [40 x i8], [40 x i8]* %3, i64 0, i64 0
  %62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0), i8* %61)
  store i32 0, i32* %5, align 4
  br label %63

63:                                               ; preds = %73, %55
  %64 = load i32, i32* %5, align 4
  %65 = icmp slt i32 %64, 5
  br i1 %65, label %66, label %76

66:                                               ; preds = %63
  %67 = load i32*, i32** @mac, align 8
  %68 = load i32, i32* %5, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i32, i32* %67, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i32 %71)
  br label %73

73:                                               ; preds = %66
  %74 = load i32, i32* %5, align 4
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %5, align 4
  br label %63

76:                                               ; preds = %63
  %77 = load i32*, i32** @mac, align 8
  %78 = getelementptr inbounds i32, i32* %77, i64 5
  %79 = load i32, i32* %78, align 4
  %80 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i32 %79)
  %81 = call i32 @memset(%struct.ifreq* %2, i32 0, i32 24)
  %82 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %2, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds [40 x i8], [40 x i8]* %3, i64 0, i64 0
  %85 = call i32 @snprintf(i8* %83, i32 8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %84)
  %86 = load i32, i32* %1, align 4
  %87 = load i32, i32* @SIOCGIFINDEX, align 4
  %88 = call i64 @ioctl(i32 %86, i32 %87, %struct.ifreq* %2)
  %89 = icmp slt i64 %88, 0
  br i1 %89, label %90, label %92

90:                                               ; preds = %76
  %91 = call i32 @die(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.10, i64 0, i64 0))
  br label %92

92:                                               ; preds = %90, %76
  %93 = load i32, i32* %1, align 4
  %94 = call i32 @close(i32 %93)
  %95 = getelementptr inbounds [40 x i8], [40 x i8]* %3, i64 0, i64 0
  %96 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %2, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i8* %95, i32 %97)
  %99 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %2, i32 0, i32 2
  %100 = load i32, i32* %99, align 4
  store i32 %100, i32* @idx, align 4
  %101 = load i32, i32* @PF_PACKET, align 4
  %102 = load i32, i32* @SOCK_RAW, align 4
  %103 = load i32, i32* @ETH_P_ALL, align 4
  %104 = call i32 @htons(i32 %103)
  %105 = call i32 @socket(i32 %101, i32 %102, i32 %104)
  store i32 %105, i32* @raw_socket, align 4
  %106 = icmp eq i32 %105, -1
  br i1 %106, label %107, label %109

107:                                              ; preds = %92
  %108 = call i32 @die(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12, i64 0, i64 0))
  br label %109

109:                                              ; preds = %107, %92
  %110 = load i32, i32* @raw_socket, align 4
  %111 = load i32, i32* @SOL_SOCKET, align 4
  %112 = load i32, i32* @SO_BINDTODEVICE, align 4
  %113 = call i64 @setsockopt(i32 %110, i32 %111, i32 %112, %struct.ifreq* %2, i32 24)
  %114 = icmp slt i64 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = call i32 @die(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.13, i64 0, i64 0))
  br label %117

117:                                              ; preds = %115, %109
  %118 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i64 0, i64 0))
  ret void
}

declare dso_local i32 @srand(i32) #1

declare dso_local i32 @time(i32*) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @die(i8*) #1

declare dso_local i32 @memset(%struct.ifreq*, i32, i32) #1

declare dso_local i64 @ioctl(i32, i32, %struct.ifreq*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*) #1

declare dso_local i32 @memcpy(i32*, i32, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i64 @setsockopt(i32, i32, i32, %struct.ifreq*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
