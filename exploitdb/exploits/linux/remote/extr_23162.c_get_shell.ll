; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23162.c_get_shell.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23162.c_get_shell.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@buf = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_shell(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  br label %6

6:                                                ; preds = %51, %1
  %7 = call i32 @FD_ZERO(i32* %3)
  %8 = call i32 @FD_SET(i32 0, i32* %3)
  %9 = load i32, i32* %2, align 4
  %10 = call i32 @FD_SET(i32 %9, i32* %3)
  %11 = load i32, i32* %2, align 4
  %12 = add nsw i32 %11, 1
  %13 = call i32 @select(i32 %12, i32* %3, i32* null, i32* null, i32* null)
  store i32 %13, i32* %4, align 4
  %14 = load i32, i32* %4, align 4
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %16, label %44

16:                                               ; preds = %6
  %17 = load i32, i32* %2, align 4
  %18 = call i64 @FD_ISSET(i32 %17, i32* %3)
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %20, label %29

20:                                               ; preds = %16
  %21 = load i8*, i8** @buf, align 8
  %22 = load i32, i32* %2, align 4
  %23 = load i8*, i8** @buf, align 8
  %24 = call i32 @recv(i32 %22, i8* %23, i32 8095, i32 0)
  store i32 %24, i32* %5, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %21, i64 %25
  store i8 0, i8* %26, align 1
  %27 = load i8*, i8** @buf, align 8
  %28 = call i32 @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* %27)
  br label %29

29:                                               ; preds = %20, %16
  %30 = call i64 @FD_ISSET(i32 0, i32* %3)
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %32, label %43

32:                                               ; preds = %29
  %33 = load i8*, i8** @buf, align 8
  %34 = load i8*, i8** @buf, align 8
  %35 = call i32 @read(i32 0, i8* %34, i32 8095)
  store i32 %35, i32* %5, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %33, i64 %36
  store i8 0, i8* %37, align 1
  %38 = load i32, i32* %2, align 4
  %39 = load i8*, i8** @buf, align 8
  %40 = load i8*, i8** @buf, align 8
  %41 = call i32 @strlen(i8* %40)
  %42 = call i32 @send(i32 %38, i8* %39, i32 %41, i32 0)
  br label %43

43:                                               ; preds = %32, %29
  br label %44

44:                                               ; preds = %43, %6
  br label %45

45:                                               ; preds = %44
  %46 = load i32, i32* %4, align 4
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %45
  %49 = load i32, i32* %5, align 4
  %50 = icmp ne i32 %49, 0
  br label %51

51:                                               ; preds = %48, %45
  %52 = phi i1 [ false, %45 ], [ %50, %48 ]
  br i1 %52, label %6, label %53

53:                                               ; preds = %51
  %54 = load i32, i32* %2, align 4
  %55 = call i32 @close(i32 %54)
  ret i32 1
}

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i32 @select(i32, i32*, i32*, i32*, i32*) #1

declare dso_local i64 @FD_ISSET(i32, i32*) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i32 @printf(i8*, i8*) #1

declare dso_local i32 @read(i32, i8*, i32) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
