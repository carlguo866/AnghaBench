; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_143.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_143.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i8*, i32 }

@D_PORT = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [9 x i8] c"f:p:r:t:\00", align 1
@opterr = common dso_local global i64 0, align 8
@optarg = common dso_local global i32 0, align 4
@ret_addr = common dso_local global i32 0, align 4
@exp_os = common dso_local global %struct.TYPE_2__* null, align 8
@stderr = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [27 x i8] c" Platforms supported are:\0A\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c" num: %i - %s - 0x%x\0A\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"[-] option '%c' invalid\0A\00", align 1
@optopt = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca [128 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %12 = load i32, i32* @D_PORT, align 4
  store i32 %12, i32* %8, align 4
  store i64 0, i64* %9, align 8
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8** %10, align 8
  store i64 0, i64* @opterr, align 8
  %13 = load i32, i32* %4, align 4
  %14 = icmp slt i32 %13, 2
  br i1 %14, label %15, label %20

15:                                               ; preds = %2
  %16 = load i8**, i8*** %5, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 0
  %18 = load i8*, i8** %17, align 8
  %19 = call i32 @die(i8* %18)
  br label %20

20:                                               ; preds = %15, %2
  br label %21

21:                                               ; preds = %129, %20
  %22 = load i32, i32* %4, align 4
  %23 = load i8**, i8*** %5, align 8
  %24 = load i8*, i8** %10, align 8
  %25 = call i32 @getopt(i32 %22, i8** %23, i8* %24)
  store i32 %25, i32* %7, align 4
  %26 = icmp ne i32 %25, -1
  br i1 %26, label %27, label %130

27:                                               ; preds = %21
  %28 = load i32, i32* %7, align 4
  switch i32 %28, label %129 [
    i32 102, label %29
    i32 112, label %36
    i32 114, label %48
    i32 116, label %59
    i32 63, label %121
  ]

29:                                               ; preds = %27
  %30 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %31 = load i32, i32* @optarg, align 4
  %32 = call i32 @strncpy(i8* %30, i32 %31, i32 127)
  %33 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 127
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds [128 x i8], [128 x i8]* %11, i64 0, i64 0
  %35 = call i32 @create_file(i8* %34)
  store i32 0, i32* %3, align 4
  br label %133

36:                                               ; preds = %27
  %37 = load i32, i32* @optarg, align 4
  %38 = call i64 @atoi(i32 %37)
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %8, align 4
  %40 = load i32, i32* %8, align 4
  %41 = icmp sgt i32 %40, 65535
  br i1 %41, label %45, label %42

42:                                               ; preds = %36
  %43 = load i32, i32* %8, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %42, %36
  %46 = call i32 @exit(i32 -1) #3
  unreachable

47:                                               ; preds = %42
  br label %129

48:                                               ; preds = %27
  %49 = load i32, i32* @optarg, align 4
  %50 = call i32 @atol(i32 %49)
  store i32 %50, i32* @ret_addr, align 4
  %51 = load i32, i32* @ret_addr, align 4
  %52 = icmp ugt i32 %51, -1073741825
  br i1 %52, label %56, label %53

53:                                               ; preds = %48
  %54 = load i32, i32* @ret_addr, align 4
  %55 = icmp slt i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %53, %48
  %57 = call i32 @exit(i32 1) #3
  unreachable

58:                                               ; preds = %53
  br label %129

59:                                               ; preds = %27
  store i32 0, i32* %6, align 4
  br label %60

60:                                               ; preds = %111, %59
  %61 = load %struct.TYPE_2__*, %struct.TYPE_2__** @exp_os, align 8
  %62 = load i32, i32* %6, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %61, i64 %63
  %65 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %64, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = icmp ne i8* %66, null
  br i1 %67, label %68, label %114

68:                                               ; preds = %60
  %69 = load i32, i32* @optarg, align 4
  %70 = call i64 @atoi(i32 %69)
  %71 = load i32, i32* %6, align 4
  %72 = sext i32 %71 to i64
  %73 = icmp ugt i64 %70, %72
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = load i32, i32* @optarg, align 4
  %76 = call i64 @atoi(i32 %75)
  %77 = icmp ult i64 %76, 0
  br i1 %77, label %78, label %110

78:                                               ; preds = %74, %68
  %79 = load i32, i32* @stderr, align 4
  %80 = call i32 (i32, i8*, ...) @fprintf(i32 %79, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0))
  store i32 0, i32* %6, align 4
  br label %81

81:                                               ; preds = %105, %78
  %82 = load %struct.TYPE_2__*, %struct.TYPE_2__** @exp_os, align 8
  %83 = load i32, i32* %6, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %82, i64 %84
  %86 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %85, i32 0, i32 0
  %87 = load i8*, i8** %86, align 8
  %88 = icmp ne i8* %87, null
  br i1 %88, label %89, label %108

89:                                               ; preds = %81
  %90 = load i32, i32* @stderr, align 4
  %91 = load i32, i32* %6, align 4
  %92 = load %struct.TYPE_2__*, %struct.TYPE_2__** @exp_os, align 8
  %93 = load i32, i32* %6, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %92, i64 %94
  %96 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %95, i32 0, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = load %struct.TYPE_2__*, %struct.TYPE_2__** @exp_os, align 8
  %99 = load i32, i32* %6, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %98, i64 %100
  %102 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %101, i32 0, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = call i32 (i32, i8*, ...) @fprintf(i32 %90, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i32 %91, i8* %97, i32 %103)
  br label %105

105:                                              ; preds = %89
  %106 = load i32, i32* %6, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %6, align 4
  br label %81

108:                                              ; preds = %81
  %109 = call i32 @exit(i32 1) #3
  unreachable

110:                                              ; preds = %74
  br label %111

111:                                              ; preds = %110
  %112 = load i32, i32* %6, align 4
  %113 = add nsw i32 %112, 1
  store i32 %113, i32* %6, align 4
  br label %60

114:                                              ; preds = %60
  %115 = load %struct.TYPE_2__*, %struct.TYPE_2__** @exp_os, align 8
  %116 = load i32, i32* @optarg, align 4
  %117 = call i64 @atoi(i32 %116)
  %118 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %115, i64 %117
  %119 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %118, i32 0, i32 1
  %120 = load i32, i32* %119, align 8
  store i32 %120, i32* @ret_addr, align 4
  br label %129

121:                                              ; preds = %27
  %122 = load i32, i32* @stderr, align 4
  %123 = load i32, i32* @optopt, align 4
  %124 = call i32 (i32, i8*, ...) @fprintf(i32 %122, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i32 %123)
  %125 = load i8**, i8*** %5, align 8
  %126 = getelementptr inbounds i8*, i8** %125, i64 0
  %127 = load i8*, i8** %126, align 8
  %128 = call i32 @die(i8* %127)
  br label %129

129:                                              ; preds = %121, %27, %114, %58, %47
  br label %21

130:                                              ; preds = %21
  %131 = load i32, i32* %8, align 4
  %132 = call i32 @wait_connection(i32 %131)
  store i32 0, i32* %3, align 4
  br label %133

133:                                              ; preds = %130, %29
  %134 = load i32, i32* %3, align 4
  ret i32 %134
}

declare dso_local i32 @die(i8*) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @strncpy(i8*, i32, i32) #1

declare dso_local i32 @create_file(i8*) #1

declare dso_local i64 @atoi(i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @atol(i32) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i32 @wait_connection(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
