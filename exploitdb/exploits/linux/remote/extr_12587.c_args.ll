; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_12587.c_args.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_12587.c_args.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@host_addr = common dso_local global i32* null, align 8
@USER = common dso_local global i32* null, align 8
@PASS = common dso_local global i32* null, align 8
@PORT = common dso_local global i8* null, align 8
@option = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [32 x i8] c"error with argument nr %d:(%s)\0A\00", align 1
@Error = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @args(i64 %0, i32** %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  store i64 %0, i64* %4, align 8
  store i32** %1, i32*** %5, align 8
  %7 = load i64, i64* %4, align 8
  %8 = add i64 %7, -1
  store i64 %8, i64* %4, align 8
  store i64 1, i64* %6, align 8
  br label %9

9:                                                ; preds = %61, %2
  %10 = load i64, i64* %6, align 8
  %11 = load i64, i64* %4, align 8
  %12 = icmp ult i64 %10, %11
  br i1 %12, label %13, label %64

13:                                               ; preds = %9
  %14 = load i32**, i32*** %5, align 8
  %15 = load i64, i64* %6, align 8
  %16 = getelementptr inbounds i32*, i32** %14, i64 %15
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 1
  %19 = load i32, i32* %18, align 4
  switch i32 %19, label %52 [
    i32 104, label %20
    i32 117, label %26
    i32 119, label %32
    i32 112, label %38
    i32 111, label %45
  ]

20:                                               ; preds = %13
  %21 = load i32**, i32*** %5, align 8
  %22 = load i64, i64* %6, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %6, align 8
  %24 = getelementptr inbounds i32*, i32** %21, i64 %23
  %25 = load i32*, i32** %24, align 8
  store i32* %25, i32** @host_addr, align 8
  br label %60

26:                                               ; preds = %13
  %27 = load i32**, i32*** %5, align 8
  %28 = load i64, i64* %6, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %6, align 8
  %30 = getelementptr inbounds i32*, i32** %27, i64 %29
  %31 = load i32*, i32** %30, align 8
  store i32* %31, i32** @USER, align 8
  br label %60

32:                                               ; preds = %13
  %33 = load i32**, i32*** %5, align 8
  %34 = load i64, i64* %6, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %6, align 8
  %36 = getelementptr inbounds i32*, i32** %33, i64 %35
  %37 = load i32*, i32** %36, align 8
  store i32* %37, i32** @PASS, align 8
  br label %60

38:                                               ; preds = %13
  %39 = load i32**, i32*** %5, align 8
  %40 = load i64, i64* %6, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %6, align 8
  %42 = getelementptr inbounds i32*, i32** %39, i64 %41
  %43 = load i32*, i32** %42, align 8
  %44 = call i8* @atoi(i32* %43)
  store i8* %44, i8** @PORT, align 8
  br label %60

45:                                               ; preds = %13
  %46 = load i32**, i32*** %5, align 8
  %47 = load i64, i64* %6, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %6, align 8
  %49 = getelementptr inbounds i32*, i32** %46, i64 %48
  %50 = load i32*, i32** %49, align 8
  %51 = call i8* @atoi(i32* %50)
  store i8* %51, i8** @option, align 8
  br label %60

52:                                               ; preds = %13
  %53 = load i64, i64* %6, align 8
  %54 = load i32**, i32*** %5, align 8
  %55 = load i64, i64* %6, align 8
  %56 = getelementptr inbounds i32*, i32** %54, i64 %55
  %57 = load i32*, i32** %56, align 8
  %58 = call i32 @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i64 %53, i32* %57)
  %59 = load i64, i64* @Error, align 8
  store i64 %59, i64* %3, align 8
  br label %65

60:                                               ; preds = %45, %38, %32, %26, %20
  br label %61

61:                                               ; preds = %60
  %62 = load i64, i64* %6, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %6, align 8
  br label %9

64:                                               ; preds = %9
  store i64 1, i64* %3, align 8
  br label %65

65:                                               ; preds = %64, %52
  %66 = load i64, i64* %3, align 8
  ret i64 %66
}

declare dso_local i8* @atoi(i32*) #1

declare dso_local i32 @printf(i8*, i64, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
