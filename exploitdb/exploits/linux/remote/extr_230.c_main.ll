; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_230.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_230.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i8*, i8*, i64, i64, i64, i64 }

@.str = private unnamed_addr constant [18 x i8] c"h:p:r:s:t:P:R:S:c\00", align 1
@EOF = common dso_local global i8 0, align 1
@optarg = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@target = common dso_local global %struct.TYPE_2__* null, align 8
@SIGINT = common dso_local global i32 0, align 4
@sigint = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8, align 1
  %13 = alloca [128 x i8], align 16
  %14 = alloca [128 x i8], align 16
  %15 = alloca [128 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 515, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  %16 = load i32, i32* %4, align 4
  %17 = icmp slt i32 %16, 3
  br i1 %17, label %18, label %23

18:                                               ; preds = %2
  %19 = load i8**, i8*** %5, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i64 0
  %21 = load i8*, i8** %20, align 8
  %22 = call i32 @usage(i8* %21)
  br label %23

23:                                               ; preds = %18, %2
  %24 = getelementptr inbounds [128 x i8], [128 x i8]* %13, i64 0, i64 0
  %25 = call i32 @bzero(i8* %24, i32 128)
  %26 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i64 0, i64 0
  %27 = call i32 @bzero(i8* %26, i32 128)
  %28 = getelementptr inbounds [128 x i8], [128 x i8]* %15, i64 0, i64 0
  %29 = call i32 @bzero(i8* %28, i32 128)
  br label %30

30:                                               ; preds = %76, %23
  %31 = load i32, i32* %4, align 4
  %32 = load i8**, i8*** %5, align 8
  %33 = call signext i8 @getopt(i32 %31, i8** %32, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0))
  store i8 %33, i8* %12, align 1
  %34 = sext i8 %33 to i32
  %35 = load i8, i8* @EOF, align 1
  %36 = sext i8 %35 to i32
  %37 = icmp ne i32 %34, %36
  br i1 %37, label %38, label %77

38:                                               ; preds = %30
  %39 = load i8, i8* %12, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %71 [
    i32 104, label %41
    i32 112, label %45
    i32 114, label %48
    i32 115, label %52
    i32 116, label %56
    i32 80, label %59
    i32 82, label %62
    i32 83, label %65
    i32 99, label %68
  ]

41:                                               ; preds = %38
  %42 = getelementptr inbounds [128 x i8], [128 x i8]* %13, i64 0, i64 0
  %43 = load i32, i32* @optarg, align 4
  %44 = call i32 @strncpy(i8* %42, i32 %43, i32 128)
  br label %76

45:                                               ; preds = %38
  %46 = load i32, i32* @optarg, align 4
  %47 = call i32 @atoi(i32 %46)
  store i32 %47, i32* %6, align 4
  br label %76

48:                                               ; preds = %38
  %49 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i64 0, i64 0
  %50 = load i32, i32* @optarg, align 4
  %51 = call i32 @strncpy(i8* %49, i32 %50, i32 128)
  br label %76

52:                                               ; preds = %38
  %53 = getelementptr inbounds [128 x i8], [128 x i8]* %15, i64 0, i64 0
  %54 = load i32, i32* @optarg, align 4
  %55 = call i32 @strncpy(i8* %53, i32 %54, i32 128)
  br label %76

56:                                               ; preds = %38
  %57 = load i32, i32* @optarg, align 4
  %58 = call i32 @atoi(i32 %57)
  store i32 %58, i32* %7, align 4
  br label %76

59:                                               ; preds = %38
  %60 = load i32, i32* @optarg, align 4
  %61 = call i32 @atoi(i32 %60)
  store i32 %61, i32* %8, align 4
  br label %76

62:                                               ; preds = %38
  %63 = load i32, i32* @optarg, align 4
  %64 = call i32 @atoi(i32 %63)
  store i32 %64, i32* %9, align 4
  br label %76

65:                                               ; preds = %38
  %66 = load i32, i32* @optarg, align 4
  %67 = call i32 @atoi(i32 %66)
  store i32 %67, i32* %10, align 4
  br label %76

68:                                               ; preds = %38
  %69 = load i32, i32* @optarg, align 4
  %70 = call i32 @atoi(i32 %69)
  store i32 %70, i32* %11, align 4
  br label %76

71:                                               ; preds = %38
  %72 = load i8**, i8*** %5, align 8
  %73 = getelementptr inbounds i8*, i8** %72, i64 0
  %74 = load i8*, i8** %73, align 8
  %75 = call i32 @usage(i8* %74)
  br label %76

76:                                               ; preds = %71, %68, %65, %62, %59, %56, %52, %48, %45, %41
  br label %30

77:                                               ; preds = %30
  %78 = getelementptr inbounds [128 x i8], [128 x i8]* %13, i64 0, i64 0
  %79 = call i64 @strlen(i8* %78)
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %86

81:                                               ; preds = %77
  %82 = load i8**, i8*** %5, align 8
  %83 = getelementptr inbounds i8*, i8** %82, i64 0
  %84 = load i8*, i8** %83, align 8
  %85 = call i32 @usage(i8* %84)
  br label %86

86:                                               ; preds = %81, %77
  %87 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i64 0, i64 0
  %88 = call i64 @strcmp(i8* %87, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0))
  %89 = icmp ne i64 %88, 0
  br i1 %89, label %90, label %97

90:                                               ; preds = %86
  %91 = getelementptr inbounds [128 x i8], [128 x i8]* %14, i64 0, i64 0
  %92 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %93 = load i32, i32* %7, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %92, i64 %94
  %96 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %95, i32 0, i32 0
  store i8* %91, i8** %96, align 8
  br label %97

97:                                               ; preds = %90, %86
  %98 = getelementptr inbounds [128 x i8], [128 x i8]* %15, i64 0, i64 0
  %99 = call i64 @strcmp(i8* %98, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0))
  %100 = icmp ne i64 %99, 0
  br i1 %100, label %101, label %108

101:                                              ; preds = %97
  %102 = getelementptr inbounds [128 x i8], [128 x i8]* %15, i64 0, i64 0
  %103 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %104 = load i32, i32* %7, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %103, i64 %105
  %107 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %106, i32 0, i32 1
  store i8* %102, i8** %107, align 8
  br label %108

108:                                              ; preds = %101, %97
  %109 = load i32, i32* %9, align 4
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %126

111:                                              ; preds = %108
  %112 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %113 = load i32, i32* %7, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %112, i64 %114
  %116 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %115, i32 0, i32 5
  %117 = load i64, i64* %116, align 8
  %118 = load i32, i32* %9, align 4
  %119 = sext i32 %118 to i64
  %120 = add nsw i64 %117, %119
  %121 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %122 = load i32, i32* %7, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %121, i64 %123
  %125 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %124, i32 0, i32 5
  store i64 %120, i64* %125, align 8
  br label %126

126:                                              ; preds = %111, %108
  %127 = load i32, i32* %10, align 4
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %129, label %144

129:                                              ; preds = %126
  %130 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %131 = load i32, i32* %7, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %130, i64 %132
  %134 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %133, i32 0, i32 4
  %135 = load i64, i64* %134, align 8
  %136 = load i32, i32* %10, align 4
  %137 = sext i32 %136 to i64
  %138 = add nsw i64 %135, %137
  %139 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %140 = load i32, i32* %7, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %139, i64 %141
  %143 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %142, i32 0, i32 4
  store i64 %138, i64* %143, align 8
  br label %144

144:                                              ; preds = %129, %126
  %145 = load i32, i32* %8, align 4
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %147, label %162

147:                                              ; preds = %144
  %148 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %149 = load i32, i32* %7, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %148, i64 %150
  %152 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %151, i32 0, i32 3
  %153 = load i64, i64* %152, align 8
  %154 = load i32, i32* %8, align 4
  %155 = sext i32 %154 to i64
  %156 = add nsw i64 %153, %155
  %157 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %158 = load i32, i32* %7, align 4
  %159 = sext i32 %158 to i64
  %160 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %157, i64 %159
  %161 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %160, i32 0, i32 3
  store i64 %156, i64* %161, align 8
  br label %162

162:                                              ; preds = %147, %144
  %163 = load i32, i32* %11, align 4
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %165, label %180

165:                                              ; preds = %162
  %166 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %167 = load i32, i32* %7, align 4
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %166, i64 %168
  %170 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %169, i32 0, i32 2
  %171 = load i64, i64* %170, align 8
  %172 = load i32, i32* %11, align 4
  %173 = sext i32 %172 to i64
  %174 = add nsw i64 %171, %173
  %175 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %176 = load i32, i32* %7, align 4
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %175, i64 %177
  %179 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %178, i32 0, i32 2
  store i64 %174, i64* %179, align 8
  br label %180

180:                                              ; preds = %165, %162
  %181 = load i32, i32* @SIGINT, align 4
  %182 = load i32, i32* @sigint, align 4
  %183 = call i32 @signal(i32 %181, i32 %182)
  %184 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %185 = load i32, i32* %7, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %184, i64 %186
  %188 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %187, i32 0, i32 0
  %189 = load i8*, i8** %188, align 8
  %190 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %191 = load i32, i32* %7, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %190, i64 %192
  %194 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %193, i32 0, i32 1
  %195 = load i8*, i8** %194, align 8
  %196 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %197 = load i32, i32* %7, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %196, i64 %198
  %200 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %199, i32 0, i32 5
  %201 = load i64, i64* %200, align 8
  %202 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %203 = load i32, i32* %7, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %202, i64 %204
  %206 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %205, i32 0, i32 4
  %207 = load i64, i64* %206, align 8
  %208 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %209 = load i32, i32* %7, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %208, i64 %210
  %212 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %211, i32 0, i32 3
  %213 = load i64, i64* %212, align 8
  %214 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %215 = load i32, i32* %7, align 4
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %214, i64 %216
  %218 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %217, i32 0, i32 2
  %219 = load i64, i64* %218, align 8
  %220 = call i32 @makebuffer(i8* %189, i8* %195, i64 %201, i64 %207, i64 %213, i64 %219)
  %221 = getelementptr inbounds [128 x i8], [128 x i8]* %13, i64 0, i64 0
  %222 = load i32, i32* %6, align 4
  %223 = call i32 @mk_connect(i8* %221, i32 %222)
  %224 = load i32, i32* %3, align 4
  ret i32 %224
}

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @bzero(i8*, i32) #1

declare dso_local signext i8 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @strncpy(i8*, i32, i32) #1

declare dso_local i32 @atoi(i32) #1

declare dso_local i64 @strlen(i8*) #1

declare dso_local i64 @strcmp(i8*, i8*) #1

declare dso_local i32 @signal(i32, i32) #1

declare dso_local i32 @makebuffer(i8*, i8*, i64, i64, i64, i64) #1

declare dso_local i32 @mk_connect(i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
