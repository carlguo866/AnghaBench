; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1742.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_1742.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@anon_pckt_len = common dso_local global i32 0, align 4
@USOCK = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [10 x i8] c"127.0.0.1\00", align 1
@opterr = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [9 x i8] c"s:h:p:n:\00", align 1
@optarg = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@anon_pckt = common dso_local global i32* null, align 8
@.str.3 = private unnamed_addr constant [8 x i8] c" %.2x%c\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"cli: send(anon_pckt)\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"%c\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [65535 x i8], align 16
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca [65535 x i8], align 16
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8, align 1
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 3306, i32* %12, align 4
  store i32 0, i32* %14, align 4
  %18 = load i32, i32* @anon_pckt_len, align 4
  store i32 %18, i32* %15, align 4
  store i32 1, i32* %16, align 4
  %19 = load i8*, i8** @USOCK, align 8
  %20 = call i8* @strdup(i8* %19)
  store i8* %20, i8** %10, align 8
  %21 = call i8* @strdup(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0))
  store i8* %21, i8** %11, align 8
  store i64 0, i64* @opterr, align 8
  br label %22

22:                                               ; preds = %44, %2
  %23 = load i32, i32* %4, align 4
  %24 = load i8**, i8*** %5, align 8
  %25 = call signext i8 @getopt(i32 %23, i8** %24, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0))
  store i8 %25, i8* %17, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp ne i32 %26, -1
  br i1 %27, label %28, label %45

28:                                               ; preds = %22
  %29 = load i8, i8* %17, align 1
  %30 = sext i8 %29 to i32
  switch i32 %30, label %43 [
    i32 115, label %31
    i32 104, label %34
    i32 112, label %37
    i32 110, label %40
  ]

31:                                               ; preds = %28
  %32 = load i8*, i8** @optarg, align 8
  %33 = call i8* @strdup(i8* %32)
  store i8* %33, i8** %10, align 8
  store i32 1, i32* %16, align 4
  br label %44

34:                                               ; preds = %28
  %35 = load i8*, i8** @optarg, align 8
  %36 = call i8* @strdup(i8* %35)
  store i8* %36, i8** %11, align 8
  store i32 0, i32* %16, align 4
  br label %44

37:                                               ; preds = %28
  %38 = load i8*, i8** @optarg, align 8
  %39 = call i32 @atoi(i8* %38)
  store i32 %39, i32* %12, align 4
  store i32 0, i32* %16, align 4
  br label %44

40:                                               ; preds = %28
  %41 = load i8*, i8** @optarg, align 8
  %42 = call i32 @atoi(i8* %41)
  store i32 %42, i32* %14, align 4
  br label %44

43:                                               ; preds = %28
  br label %44

44:                                               ; preds = %43, %40, %37, %34, %31
  br label %22

45:                                               ; preds = %22
  %46 = getelementptr inbounds [65535 x i8], [65535 x i8]* %9, i64 0, i64 0
  %47 = call i32 @bzero(i8* %46, i32 65535)
  %48 = load i32, i32* @anon_pckt_len, align 4
  %49 = load i32, i32* %14, align 4
  %50 = add nsw i32 %48, %49
  store i32 %50, i32* %15, align 4
  %51 = load i32, i32* %15, align 4
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i32 %51)
  store i32 0, i32* %7, align 4
  br label %53

53:                                               ; preds = %67, %45
  %54 = load i32, i32* %7, align 4
  %55 = load i32, i32* %15, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %57, label %70

57:                                               ; preds = %53
  %58 = load i32*, i32** @anon_pckt, align 8
  %59 = load i32, i32* %7, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %58, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = trunc i32 %62 to i8
  %64 = load i32, i32* %7, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds [65535 x i8], [65535 x i8]* %9, i64 0, i64 %65
  store i8 %63, i8* %66, align 1
  br label %67

67:                                               ; preds = %57
  %68 = load i32, i32* %7, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %7, align 4
  br label %53

70:                                               ; preds = %53
  %71 = load i32, i32* %14, align 4
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %73, label %88

73:                                               ; preds = %70
  %74 = load i32, i32* @anon_pckt_len, align 4
  %75 = sub nsw i32 %74, 2
  store i32 %75, i32* %7, align 4
  br label %76

76:                                               ; preds = %84, %73
  %77 = load i32, i32* %7, align 4
  %78 = load i32, i32* %15, align 4
  %79 = icmp slt i32 %77, %78
  br i1 %79, label %80, label %87

80:                                               ; preds = %76
  %81 = load i32, i32* %7, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [65535 x i8], [65535 x i8]* %9, i64 0, i64 %82
  store i8 65, i8* %83, align 1
  br label %84

84:                                               ; preds = %80
  %85 = load i32, i32* %7, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %7, align 4
  br label %76

87:                                               ; preds = %76
  br label %88

88:                                               ; preds = %87, %70
  %89 = load i32, i32* %15, align 4
  %90 = sub nsw i32 %89, 1
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [65535 x i8], [65535 x i8]* %9, i64 0, i64 %91
  store i8 0, i8* %92, align 1
  %93 = load i32*, i32** @anon_pckt, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 0
  %95 = load i32, i32* %94, align 4
  %96 = load i32, i32* %14, align 4
  %97 = add nsw i32 %95, %96
  %98 = trunc i32 %97 to i8
  %99 = sext i8 %98 to i32
  %100 = and i32 %99, 255
  %101 = trunc i32 %100 to i8
  %102 = getelementptr inbounds [65535 x i8], [65535 x i8]* %9, i64 0, i64 0
  store i8 %101, i8* %102, align 16
  %103 = load i32*, i32** @anon_pckt, align 8
  %104 = getelementptr inbounds i32, i32* %103, i64 0
  %105 = load i32, i32* %104, align 4
  %106 = load i32, i32* %14, align 4
  %107 = add nsw i32 %105, %106
  %108 = ashr i32 %107, 8
  %109 = trunc i32 %108 to i8
  %110 = sext i8 %109 to i32
  %111 = and i32 %110, 255
  %112 = trunc i32 %111 to i8
  %113 = getelementptr inbounds [65535 x i8], [65535 x i8]* %9, i64 0, i64 1
  store i8 %112, i8* %113, align 1
  store i32 0, i32* %7, align 4
  br label %114

114:                                              ; preds = %131, %88
  %115 = load i32, i32* %7, align 4
  %116 = load i32, i32* %15, align 4
  %117 = icmp slt i32 %115, %116
  br i1 %117, label %118, label %134

118:                                              ; preds = %114
  %119 = load i32, i32* %7, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds [65535 x i8], [65535 x i8]* %9, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = zext i8 %122 to i32
  %124 = load i32, i32* %7, align 4
  %125 = add nsw i32 %124, 1
  %126 = srem i32 %125, 16
  %127 = icmp ne i32 %126, 0
  %128 = zext i1 %127 to i64
  %129 = select i1 %127, i32 32, i32 10
  %130 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i32 %123, i32 %129)
  br label %131

131:                                              ; preds = %118
  %132 = load i32, i32* %7, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %7, align 4
  br label %114

134:                                              ; preds = %114
  %135 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  %136 = load i32, i32* %16, align 4
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %141

138:                                              ; preds = %134
  %139 = load i8*, i8** %10, align 8
  %140 = call i32 @unix_conn(i8* %139)
  store i32 %140, i32* %6, align 4
  br label %145

141:                                              ; preds = %134
  %142 = load i8*, i8** %11, align 8
  %143 = load i32, i32* %12, align 4
  %144 = call i32 @tcp_conn(i8* %142, i32 %143)
  store i32 %144, i32* %6, align 4
  br label %145

145:                                              ; preds = %141, %138
  %146 = call i32 @sleep(i32 1)
  %147 = load i32, i32* %6, align 4
  %148 = getelementptr inbounds [65535 x i8], [65535 x i8]* %13, i64 0, i64 0
  %149 = call i32 @recv(i32 %147, i8* %148, i32 65535, i32 0)
  store i32 %149, i32* %8, align 4
  %150 = load i32, i32* %6, align 4
  %151 = getelementptr inbounds [65535 x i8], [65535 x i8]* %9, i64 0, i64 0
  %152 = load i32, i32* %15, align 4
  %153 = call i32 @send(i32 %150, i8* %151, i32 %152, i32 0)
  %154 = load i32, i32* %15, align 4
  %155 = icmp ne i32 %153, %154
  br i1 %155, label %156, label %159

156:                                              ; preds = %145
  %157 = call i32 @perror(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0))
  %158 = call i32 @exit(i32 1) #3
  unreachable

159:                                              ; preds = %145
  %160 = load i32, i32* %6, align 4
  %161 = getelementptr inbounds [65535 x i8], [65535 x i8]* %13, i64 0, i64 0
  %162 = call i32 @recv(i32 %160, i8* %161, i32 65535, i32 0)
  store i32 %162, i32* %8, align 4
  store i32 0, i32* %7, align 4
  br label %163

163:                                              ; preds = %184, %159
  %164 = load i32, i32* %7, align 4
  %165 = load i32, i32* %8, align 4
  %166 = icmp slt i32 %164, %165
  br i1 %166, label %167, label %187

167:                                              ; preds = %163
  %168 = load i32, i32* %7, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds [65535 x i8], [65535 x i8]* %13, i64 0, i64 %169
  %171 = load i8, i8* %170, align 1
  %172 = call i64 @isalpha(i8 signext %171)
  %173 = icmp ne i64 %172, 0
  br i1 %173, label %174, label %180

174:                                              ; preds = %167
  %175 = load i32, i32* %7, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [65535 x i8], [65535 x i8]* %13, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = sext i8 %178 to i32
  br label %181

180:                                              ; preds = %167
  br label %181

181:                                              ; preds = %180, %174
  %182 = phi i32 [ %179, %174 ], [ 46, %180 ]
  %183 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i32 %182)
  br label %184

184:                                              ; preds = %181
  %185 = load i32, i32* %7, align 4
  %186 = add nsw i32 %185, 1
  store i32 %186, i32* %7, align 4
  br label %163

187:                                              ; preds = %163
  %188 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  ret i32 0
}

declare dso_local i8* @strdup(i8*) #1

declare dso_local signext i8 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @bzero(i8*, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @unix_conn(i8*) #1

declare dso_local i32 @tcp_conn(i8*, i32) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @perror(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i64 @isalpha(i8 signext) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
