; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23413.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23413.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i8*, i32, i32 }

@EBOLA = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [10 x i8] c"hVlt:d:p:\00", align 1
@EOF = common dso_local global i32 0, align 4
@optarg = common dso_local global i8* null, align 8
@MAX_TG = common dso_local global i32 0, align 4
@debug = common dso_local global i32 0, align 4
@stdout = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [36 x i8] c" _(0x0)_  Exploiting <%s:%d> on %s\0A\00", align 1
@ebola = common dso_local global %struct.TYPE_2__* null, align 8
@.str.2 = private unnamed_addr constant [37 x i8] c"\0A _(0x666)_  Exploitation Failed !\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 -1, i32* %7, align 4
  %10 = load i32, i32* @EBOLA, align 4
  store i32 %10, i32* %8, align 4
  store i8* null, i8** %9, align 8
  br label %11

11:                                               ; preds = %49, %2
  %12 = load i32, i32* %4, align 4
  %13 = load i8**, i8*** %5, align 8
  %14 = call i32 @getopt(i32 %12, i8** %13, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0))
  store i32 %14, i32* %6, align 4
  %15 = load i32, i32* @EOF, align 4
  %16 = icmp ne i32 %14, %15
  br i1 %16, label %17, label %50

17:                                               ; preds = %11
  %18 = load i32, i32* %6, align 4
  switch i32 %18, label %44 [
    i32 112, label %19
    i32 100, label %22
    i32 116, label %24
    i32 108, label %40
    i32 86, label %42
    i32 104, label %43
  ]

19:                                               ; preds = %17
  %20 = load i8*, i8** @optarg, align 8
  %21 = call i32 @atoi(i8* %20)
  store i32 %21, i32* %8, align 4
  br label %49

22:                                               ; preds = %17
  %23 = load i8*, i8** @optarg, align 8
  store i8* %23, i8** %9, align 8
  br label %49

24:                                               ; preds = %17
  %25 = load i8*, i8** @optarg, align 8
  %26 = call i32 @atoi(i8* %25)
  store i32 %26, i32* %7, align 4
  %27 = load i32, i32* %7, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %24
  %30 = load i32, i32* %7, align 4
  %31 = load i32, i32* @MAX_TG, align 4
  %32 = sub nsw i32 %31, 1
  %33 = icmp sgt i32 %30, %32
  br i1 %33, label %34, label %39

34:                                               ; preds = %29, %24
  %35 = load i8**, i8*** %5, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 0
  %37 = load i8*, i8** %36, align 8
  %38 = call i32 @usage(i8* %37)
  br label %39

39:                                               ; preds = %34, %29
  br label %49

40:                                               ; preds = %17
  %41 = call i32 (...) @list()
  br label %49

42:                                               ; preds = %17
  store i32 1, i32* @debug, align 4
  br label %49

43:                                               ; preds = %17
  br label %44

44:                                               ; preds = %17, %43
  %45 = load i8**, i8*** %5, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i64 0
  %47 = load i8*, i8** %46, align 8
  %48 = call i32 @usage(i8* %47)
  br label %49

49:                                               ; preds = %44, %42, %40, %39, %22, %19
  br label %11

50:                                               ; preds = %11
  %51 = load i8*, i8** %9, align 8
  %52 = icmp eq i8* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  %54 = load i32, i32* %7, align 4
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %56, label %61

56:                                               ; preds = %53, %50
  %57 = load i8**, i8*** %5, align 8
  %58 = getelementptr inbounds i8*, i8** %57, i64 0
  %59 = load i8*, i8** %58, align 8
  %60 = call i32 @usage(i8* %59)
  br label %61

61:                                               ; preds = %56, %53
  %62 = call i32 (...) @banner()
  %63 = load i32, i32* @stdout, align 4
  %64 = load i8*, i8** %9, align 8
  %65 = load i32, i32* %8, align 4
  %66 = load %struct.TYPE_2__*, %struct.TYPE_2__** @ebola, align 8
  %67 = load i32, i32* %7, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %66, i64 %68
  %70 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %69, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = call i32 @fprintf(i32 %63, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i8* %64, i32 %65, i8* %71)
  %73 = load i8*, i8** %9, align 8
  %74 = load i32, i32* %8, align 4
  %75 = load %struct.TYPE_2__*, %struct.TYPE_2__** @ebola, align 8
  %76 = load i32, i32* %7, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %75, i64 %77
  %79 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %78, i32 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = load %struct.TYPE_2__*, %struct.TYPE_2__** @ebola, align 8
  %82 = load i32, i32* %7, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %81, i64 %83
  %85 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %84, i32 0, i32 1
  %86 = load i32, i32* %85, align 8
  %87 = call i32 @ebol4(i8* %73, i32 %74, i32 %80, i32 %86)
  %88 = icmp eq i32 %87, 819
  br i1 %88, label %89, label %90

89:                                               ; preds = %61
  store i32 0, i32* %3, align 4
  br label %92

90:                                               ; preds = %61
  %91 = call i32 @warning(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0))
  br label %92

92:                                               ; preds = %89, %90
  %93 = load i32, i32* %3, align 4
  ret i32 %93
}

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @list(...) #1

declare dso_local i32 @banner(...) #1

declare dso_local i32 @fprintf(i32, i8*, i8*, i32, i8*) #1

declare dso_local i32 @ebol4(i8*, i32, i32, i32) #1

declare dso_local i32 @warning(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
