; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_31462.c_gst_ebml_write_element_id.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_31462.c_gst_ebml_write_element_id.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@GST_EBML_ID_VOID = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @gst_ebml_write_element_id(i32* %0, i32 %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 4, i32* %6, align 4
  store i32 16, i32* %7, align 4
  br label %8

8:                                                ; preds = %22, %2
  %9 = load i32, i32* %4, align 4
  %10 = load i32, i32* %7, align 4
  %11 = load i32, i32* %6, align 4
  %12 = sub nsw i32 %11, 1
  %13 = mul nsw i32 %12, 8
  %14 = shl i32 %10, %13
  %15 = and i32 %9, %14
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %8
  %18 = load i32, i32* %6, align 4
  %19 = icmp sgt i32 %18, 0
  br label %20

20:                                               ; preds = %17, %8
  %21 = phi i1 [ false, %8 ], [ %19, %17 ]
  br i1 %21, label %22, label %27

22:                                               ; preds = %20
  %23 = load i32, i32* %7, align 4
  %24 = shl i32 %23, 1
  store i32 %24, i32* %7, align 4
  %25 = load i32, i32* %6, align 4
  %26 = add nsw i32 %25, -1
  store i32 %26, i32* %6, align 4
  br label %8

27:                                               ; preds = %20
  %28 = load i32, i32* %6, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  store i32 1, i32* %6, align 4
  %31 = load i32, i32* @GST_EBML_ID_VOID, align 4
  store i32 %31, i32* %4, align 4
  br label %32

32:                                               ; preds = %30, %27
  %33 = load i32, i32* %6, align 4
  store i32 %33, i32* %5, align 4
  br label %34

34:                                               ; preds = %38, %32
  %35 = load i32, i32* %6, align 4
  %36 = add nsw i32 %35, -1
  store i32 %36, i32* %6, align 4
  %37 = icmp ne i32 %35, 0
  br i1 %37, label %38, label %47

38:                                               ; preds = %34
  %39 = load i32, i32* %4, align 4
  %40 = and i32 %39, 255
  %41 = load i32*, i32** %3, align 8
  %42 = load i32, i32* %6, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %41, i64 %43
  store i32 %40, i32* %44, align 4
  %45 = load i32, i32* %4, align 4
  %46 = ashr i32 %45, 8
  store i32 %46, i32* %4, align 4
  br label %34

47:                                               ; preds = %34
  %48 = load i32, i32* %5, align 4
  ret i32 %48
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
