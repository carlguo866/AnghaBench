; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_107.c_setport.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_107.c_setport.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@cmdbuf = common dso_local global i8* null, align 8
@SIZE = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [14 x i8] c"%s %s,%d,%d\0D\0A\00", align 1
@portstr = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [7 x i8] c"[+] %s\00", align 1
@sockfd = common dso_local global i32 0, align 4
@srvbuf = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @setport(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [30 x i8], align 16
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %11 = getelementptr inbounds [30 x i8], [30 x i8]* %10, i64 0, i64 0
  %12 = call i32 @memset(i8* %11, i32 0, i32 30)
  %13 = getelementptr inbounds [30 x i8], [30 x i8]* %10, i64 0, i64 0
  %14 = load i8*, i8** %3, align 8
  %15 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* %14)
  store i32 %15, i32* %6, align 4
  store i32 0, i32* %5, align 4
  br label %16

16:                                               ; preds = %32, %2
  %17 = load i32, i32* %5, align 4
  %18 = load i32, i32* %6, align 4
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %20, label %35

20:                                               ; preds = %16
  %21 = load i32, i32* %5, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [30 x i8], [30 x i8]* %10, i64 0, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = sext i8 %24 to i32
  %26 = icmp eq i32 %25, 46
  br i1 %26, label %27, label %31

27:                                               ; preds = %20
  %28 = load i32, i32* %5, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [30 x i8], [30 x i8]* %10, i64 0, i64 %29
  store i8 44, i8* %30, align 1
  br label %31

31:                                               ; preds = %27, %20
  br label %32

32:                                               ; preds = %31
  %33 = load i32, i32* %5, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %5, align 4
  br label %16

35:                                               ; preds = %16
  %36 = load i8*, i8** @cmdbuf, align 8
  %37 = load i32, i32* @SIZE, align 4
  %38 = call i32 @memset(i8* %36, i32 0, i32 %37)
  %39 = load i32, i32* %4, align 4
  %40 = ashr i32 %39, 8
  %41 = and i32 %40, 255
  store i32 %41, i32* %7, align 4
  %42 = load i32, i32* %4, align 4
  %43 = and i32 %42, 255
  store i32 %43, i32* %8, align 4
  %44 = load i8*, i8** @cmdbuf, align 8
  %45 = load i8*, i8** @portstr, align 8
  %46 = getelementptr inbounds [30 x i8], [30 x i8]* %10, i64 0, i64 0
  %47 = load i32, i32* %7, align 4
  %48 = load i32, i32* %8, align 4
  %49 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %44, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8* %45, i8* %46, i32 %47, i32 %48)
  store i32 %49, i32* %9, align 4
  %50 = load i8*, i8** @cmdbuf, align 8
  %51 = call i32 @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* %50)
  %52 = load i32, i32* @sockfd, align 4
  %53 = load i8*, i8** @cmdbuf, align 8
  %54 = load i32, i32* %9, align 4
  %55 = call i32 @sendbuf(i32 %52, i8* %53, i32 %54)
  %56 = load i32, i32* @sockfd, align 4
  %57 = load i32, i32* @srvbuf, align 4
  %58 = load i32, i32* @SIZE, align 4
  %59 = call i32 @readbuf(i32* null, i32 %56, i32 %57, i32 %58)
  %60 = load i32, i32* @srvbuf, align 4
  %61 = call i32 @checkstatus(i32 %60)
  ret void
}

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*, ...) #1

declare dso_local i32 @printf(i8*, i8*) #1

declare dso_local i32 @sendbuf(i32, i8*, i32) #1

declare dso_local i32 @readbuf(i32*, i32, i32, i32) #1

declare dso_local i32 @checkstatus(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
