; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_372.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_372.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [11 x i8] c"h:t:u:p:e:\00", align 1
@EOF = common dso_local global i8 0, align 1
@optarg = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [9 x i8] c"%[^:]:%d\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"127.0.0.1\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"anonymous\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"freak@kaefig.com\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"id; killall msg; \00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [33 x i8] c"[*] connecting %s:%d (%s/%s)...\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = alloca [512 x i8], align 16
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* null, i8** %7, align 8
  %15 = bitcast [512 x i8]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %15, i8 0, i64 512, i1 false)
  store i8* null, i8** %9, align 8
  store i8* null, i8** %10, align 8
  store i32 -1, i32* %12, align 4
  store i32 0, i32* %14, align 4
  %16 = load i32, i32* %4, align 4
  %17 = icmp slt i32 %16, 2
  br i1 %17, label %18, label %22

18:                                               ; preds = %2
  %19 = load i32, i32* %4, align 4
  %20 = load i8**, i8*** %5, align 8
  %21 = call i32 @helpme(i32 %19, i8** %20)
  br label %88

22:                                               ; preds = %2
  br label %23

23:                                               ; preds = %47, %22
  %24 = load i32, i32* %4, align 4
  %25 = load i8**, i8*** %5, align 8
  %26 = call signext i8 @getopt(i32 %24, i8** %25, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0))
  store i8 %26, i8* %6, align 1
  %27 = sext i8 %26 to i32
  %28 = load i8, i8* @EOF, align 1
  %29 = sext i8 %28 to i32
  %30 = icmp ne i32 %27, %29
  br i1 %30, label %31, label %48

31:                                               ; preds = %23
  %32 = load i8, i8* %6, align 1
  %33 = sext i8 %32 to i32
  switch i32 %33, label %47 [
    i32 104, label %34
    i32 117, label %38
    i32 112, label %40
    i32 116, label %42
    i32 101, label %45
  ]

34:                                               ; preds = %31
  %35 = load i8*, i8** @optarg, align 8
  %36 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %37 = call i32 @sscanf(i8* %35, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i8* %36, i32* %13)
  br label %47

38:                                               ; preds = %31
  %39 = load i8*, i8** @optarg, align 8
  store i8* %39, i8** %9, align 8
  br label %47

40:                                               ; preds = %31
  %41 = load i8*, i8** @optarg, align 8
  store i8* %41, i8** %10, align 8
  br label %47

42:                                               ; preds = %31
  %43 = load i8*, i8** @optarg, align 8
  %44 = call i32 @atoi(i8* %43)
  store i32 %44, i32* %14, align 4
  br label %47

45:                                               ; preds = %31
  %46 = load i8*, i8** @optarg, align 8
  store i8* %46, i8** %7, align 8
  br label %47

47:                                               ; preds = %31, %45, %42, %40, %38, %34
  br label %23

48:                                               ; preds = %23
  %49 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %50 = call i32 @strcmp(i8* %49, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0))
  %51 = icmp ne i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %54 = call i32 @strcpy(i8* %53, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0))
  store i32 21, i32* %13, align 4
  br label %55

55:                                               ; preds = %52, %48
  %56 = load i8*, i8** %9, align 8
  %57 = icmp ne i8* %56, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i8** %9, align 8
  br label %59

59:                                               ; preds = %58, %55
  %60 = load i8*, i8** %10, align 8
  %61 = icmp ne i8* %60, null
  br i1 %61, label %63, label %62

62:                                               ; preds = %59
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i8** %10, align 8
  br label %63

63:                                               ; preds = %62, %59
  %64 = load i8*, i8** %7, align 8
  %65 = icmp ne i8* %64, null
  br i1 %65, label %67, label %66

66:                                               ; preds = %63
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8** %7, align 8
  br label %67

67:                                               ; preds = %66, %63
  %68 = load i32, i32* @stderr, align 4
  %69 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %70 = load i32, i32* %13, align 4
  %71 = load i8*, i8** %9, align 8
  %72 = load i8*, i8** %10, align 8
  %73 = call i32 @fprintf(i32 %68, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i8* %69, i32 %70, i8* %71, i8* %72)
  %74 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %75 = load i32, i32* %13, align 4
  %76 = call i32 @connectserver(i32* %11, i8* %74, i32 %75)
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %87, label %78

78:                                               ; preds = %67
  %79 = load i32, i32* %11, align 4
  %80 = load i8*, i8** %9, align 8
  %81 = load i8*, i8** %10, align 8
  %82 = load i32, i32* %14, align 4
  %83 = load i8*, i8** %7, align 8
  %84 = call i32 @attack(i32 %79, i8* %80, i8* %81, i32 %82, i8* %83)
  store i32 %84, i32* %12, align 4
  %85 = load i32, i32* %11, align 4
  %86 = call i32 @close(i32 %85)
  br label %87

87:                                               ; preds = %78, %67
  br label %88

88:                                               ; preds = %87, %18
  %89 = load i32, i32* %12, align 4
  ret i32 %89
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dso_local i32 @helpme(i32, i8**) #2

declare dso_local signext i8 @getopt(i32, i8**, i8*) #2

declare dso_local i32 @sscanf(i8*, i8*, i8*, i32*) #2

declare dso_local i32 @atoi(i8*) #2

declare dso_local i32 @strcmp(i8*, i8*) #2

declare dso_local i32 @strcpy(i8*, i8*) #2

declare dso_local i32 @fprintf(i32, i8*, i8*, i32, i8*, i8*) #2

declare dso_local i32 @connectserver(i32*, i8*, i32) #2

declare dso_local i32 @attack(i32, i8*, i8*, i32, i8*) #2

declare dso_local i32 @close(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
