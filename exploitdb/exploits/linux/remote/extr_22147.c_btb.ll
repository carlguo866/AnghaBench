; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_22147.c_btb.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_22147.c_btb.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [5 x i8] c"%01d\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @btb(i8 zeroext %0) #0 {
  %2 = alloca i8, align 1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8, align 1
  store i8 %0, i8* %2, align 1
  store i32 7, i32* %3, align 4
  store i8 -128, i8* %5, align 1
  br label %6

6:                                                ; preds = %26, %1
  %7 = load i32, i32* %3, align 4
  %8 = icmp sge i32 %7, 0
  br i1 %8, label %9, label %33

9:                                                ; preds = %6
  store i32 0, i32* %4, align 4
  %10 = load i8, i8* %2, align 1
  %11 = zext i8 %10 to i32
  %12 = load i8, i8* %5, align 1
  %13 = zext i8 %12 to i32
  %14 = and i32 %11, %13
  %15 = load i32, i32* %3, align 4
  %16 = ashr i32 %14, %15
  store i32 %16, i32* %4, align 4
  %17 = load i32, i32* @stderr, align 4
  %18 = load i32, i32* %4, align 4
  %19 = call i32 @fprintf(i32 %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 %18)
  %20 = load i32, i32* %3, align 4
  %21 = icmp eq i32 %20, 4
  br i1 %21, label %22, label %25

22:                                               ; preds = %9
  %23 = load i32, i32* @stderr, align 4
  %24 = call i32 @fputc(i8 signext 32, i32 %23)
  br label %25

25:                                               ; preds = %22, %9
  br label %26

26:                                               ; preds = %25
  %27 = load i32, i32* %3, align 4
  %28 = add nsw i32 %27, -1
  store i32 %28, i32* %3, align 4
  %29 = load i8, i8* %5, align 1
  %30 = zext i8 %29 to i32
  %31 = sdiv i32 %30, 2
  %32 = trunc i32 %31 to i8
  store i8 %32, i8* %5, align 1
  br label %6

33:                                               ; preds = %6
  %34 = load i32, i32* @stderr, align 4
  %35 = call i32 @fputc(i8 signext 32, i32 %34)
  ret void
}

declare dso_local i32 @fprintf(i32, i8*, i32) #1

declare dso_local i32 @fputc(i8 signext, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
