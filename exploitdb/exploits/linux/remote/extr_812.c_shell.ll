; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_812.c_shell.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/remote/extr_812.c_shell.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [13 x i8] c"uname -a;id\0A\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"remote read\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"local read\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @shell(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [1024 x i8], align 16
  store i32 %0, i32* %2, align 4
  %6 = load i32, i32* %2, align 4
  %7 = call i32 @write(i32 %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 12)
  br label %8

8:                                                ; preds = %1, %45
  %9 = load i32, i32* %2, align 4
  %10 = call i32 @FD_SET(i32 %9, i32* %4)
  %11 = call i32 @FD_SET(i32 0, i32* %4)
  %12 = load i32, i32* %2, align 4
  %13 = add nsw i32 %12, 1
  %14 = call i32 @select(i32 %13, i32* %4, i32* null, i32* null, i32* null)
  %15 = load i32, i32* %2, align 4
  %16 = call i64 @FD_ISSET(i32 %15, i32* %4)
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %8
  %19 = load i32, i32* %2, align 4
  %20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  %21 = call i32 @read(i32 %19, i8* %20, i32 1024)
  store i32 %21, i32* %3, align 4
  %22 = load i32, i32* %3, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = call i32 @err(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  br label %26

26:                                               ; preds = %24, %18
  %27 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  %28 = load i32, i32* %3, align 4
  %29 = call i32 @write(i32 1, i8* %27, i32 %28)
  br label %30

30:                                               ; preds = %26, %8
  %31 = call i64 @FD_ISSET(i32 0, i32* %4)
  %32 = icmp ne i64 %31, 0
  br i1 %32, label %33, label %45

33:                                               ; preds = %30
  %34 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  %35 = call i32 @read(i32 0, i8* %34, i32 1024)
  store i32 %35, i32* %3, align 4
  %36 = load i32, i32* %3, align 4
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %33
  %39 = call i32 @err(i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0))
  br label %40

40:                                               ; preds = %38, %33
  %41 = load i32, i32* %2, align 4
  %42 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  %43 = load i32, i32* %3, align 4
  %44 = call i32 @write(i32 %41, i8* %42, i32 %43)
  br label %45

45:                                               ; preds = %40, %30
  br label %8
}

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i32 @select(i32, i32*, i32*, i32*, i32*) #1

declare dso_local i64 @FD_ISSET(i32, i32*) #1

declare dso_local i32 @read(i32, i8*, i32) #1

declare dso_local i32 @err(i32, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
