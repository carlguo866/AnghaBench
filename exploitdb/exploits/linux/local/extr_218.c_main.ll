; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_218.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_218.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@OFFSET = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [3 x i8] c"up\00", align 1
@RET = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [26 x i8] c"Increasing offset by: %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"Increasing EIP to: 0x%x\0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"down\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"Decreasing offset by: %d\0A\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"Decreasing EIP to: 0x%x\0A\0A\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"Setting EIP to: 0x%x\0A\00", align 1
@BUFLEN = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [24 x i8] c"Can't allocate memory.\0A\00", align 1
@code = common dso_local global i32* null, align 8
@NOP = common dso_local global i8 0, align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@EXPECT = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %12 = load i32, i32* @OFFSET, align 4
  store i32 %12, i32* %10, align 4
  %13 = load i32, i32* %4, align 4
  %14 = icmp slt i32 %13, 3
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = load i32, i32* %4, align 4
  %17 = icmp sgt i32 %16, 4
  br i1 %17, label %18, label %23

18:                                               ; preds = %15, %2
  %19 = load i8**, i8*** %5, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i64 0
  %21 = load i8*, i8** %20, align 8
  %22 = call i32 @usage(i8* %21)
  br label %23

23:                                               ; preds = %18, %15
  %24 = load i32, i32* %4, align 4
  %25 = icmp eq i32 %24, 3
  br i1 %25, label %26, label %79

26:                                               ; preds = %23
  %27 = load i8**, i8*** %5, align 8
  %28 = getelementptr inbounds i8*, i8** %27, i64 2
  %29 = load i8*, i8** %28, align 8
  %30 = call i32 @strcmp(i8* %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %52, label %32

32:                                               ; preds = %26
  %33 = load i32, i32* @RET, align 4
  %34 = load i8**, i8*** %5, align 8
  %35 = getelementptr inbounds i8*, i8** %34, i64 1
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @atoi(i8* %36)
  %38 = add nsw i32 %33, %37
  %39 = sext i32 %38 to i64
  store i64 %39, i64* %9, align 8
  %40 = load i8**, i8*** %5, align 8
  %41 = getelementptr inbounds i8*, i8** %40, i64 1
  %42 = load i8*, i8** %41, align 8
  %43 = call i32 @atoi(i8* %42)
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i32 %43)
  %45 = load i32, i32* @RET, align 4
  %46 = load i8**, i8*** %5, align 8
  %47 = getelementptr inbounds i8*, i8** %46, i64 1
  %48 = load i8*, i8** %47, align 8
  %49 = call i32 @atoi(i8* %48)
  %50 = add nsw i32 %45, %49
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i32 %50)
  br label %52

52:                                               ; preds = %32, %26
  %53 = load i8**, i8*** %5, align 8
  %54 = getelementptr inbounds i8*, i8** %53, i64 2
  %55 = load i8*, i8** %54, align 8
  %56 = call i32 @strcmp(i8* %55, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0))
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %78, label %58

58:                                               ; preds = %52
  %59 = load i32, i32* @RET, align 4
  %60 = load i8**, i8*** %5, align 8
  %61 = getelementptr inbounds i8*, i8** %60, i64 1
  %62 = load i8*, i8** %61, align 8
  %63 = call i32 @atoi(i8* %62)
  %64 = sub nsw i32 %59, %63
  %65 = sext i32 %64 to i64
  store i64 %65, i64* %9, align 8
  %66 = load i8**, i8*** %5, align 8
  %67 = getelementptr inbounds i8*, i8** %66, i64 1
  %68 = load i8*, i8** %67, align 8
  %69 = call i32 @atoi(i8* %68)
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i32 %69)
  %71 = load i32, i32* @RET, align 4
  %72 = load i8**, i8*** %5, align 8
  %73 = getelementptr inbounds i8*, i8** %72, i64 1
  %74 = load i8*, i8** %73, align 8
  %75 = call i32 @atoi(i8* %74)
  %76 = sub nsw i32 %71, %75
  %77 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i32 %76)
  br label %78

78:                                               ; preds = %58, %52
  br label %79

79:                                               ; preds = %78, %23
  %80 = load i32, i32* %4, align 4
  %81 = icmp sge i32 %80, 4
  br i1 %81, label %82, label %157

82:                                               ; preds = %79
  %83 = load i8**, i8*** %5, align 8
  %84 = getelementptr inbounds i8*, i8** %83, i64 2
  %85 = load i8*, i8** %84, align 8
  %86 = call i32 @strcmp(i8* %85, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %119, label %88

88:                                               ; preds = %82
  %89 = load i8**, i8*** %5, align 8
  %90 = getelementptr inbounds i8*, i8** %89, i64 3
  %91 = load i8*, i8** %90, align 8
  %92 = call i32 @strtoul(i8* %91, i32* null, i32 16)
  %93 = load i8**, i8*** %5, align 8
  %94 = getelementptr inbounds i8*, i8** %93, i64 1
  %95 = load i8*, i8** %94, align 8
  %96 = call i32 @atoi(i8* %95)
  %97 = add nsw i32 %92, %96
  %98 = sext i32 %97 to i64
  store i64 %98, i64* %9, align 8
  %99 = load i8**, i8*** %5, align 8
  %100 = getelementptr inbounds i8*, i8** %99, i64 3
  %101 = load i8*, i8** %100, align 8
  %102 = call i32 @strtoul(i8* %101, i32* null, i32 16)
  %103 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i32 %102)
  %104 = load i8**, i8*** %5, align 8
  %105 = getelementptr inbounds i8*, i8** %104, i64 1
  %106 = load i8*, i8** %105, align 8
  %107 = call i32 @atoi(i8* %106)
  %108 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i32 %107)
  %109 = load i8**, i8*** %5, align 8
  %110 = getelementptr inbounds i8*, i8** %109, i64 3
  %111 = load i8*, i8** %110, align 8
  %112 = call i32 @strtoul(i8* %111, i32* null, i32 16)
  %113 = load i8**, i8*** %5, align 8
  %114 = getelementptr inbounds i8*, i8** %113, i64 1
  %115 = load i8*, i8** %114, align 8
  %116 = call i32 @atoi(i8* %115)
  %117 = add nsw i32 %112, %116
  %118 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i32 %117)
  br label %119

119:                                              ; preds = %88, %82
  %120 = load i8**, i8*** %5, align 8
  %121 = getelementptr inbounds i8*, i8** %120, i64 2
  %122 = load i8*, i8** %121, align 8
  %123 = call i32 @strcmp(i8* %122, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0))
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %156, label %125

125:                                              ; preds = %119
  %126 = load i8**, i8*** %5, align 8
  %127 = getelementptr inbounds i8*, i8** %126, i64 3
  %128 = load i8*, i8** %127, align 8
  %129 = call i32 @strtoul(i8* %128, i32* null, i32 16)
  %130 = load i8**, i8*** %5, align 8
  %131 = getelementptr inbounds i8*, i8** %130, i64 1
  %132 = load i8*, i8** %131, align 8
  %133 = call i32 @atoi(i8* %132)
  %134 = add nsw i32 %129, %133
  %135 = sext i32 %134 to i64
  store i64 %135, i64* %9, align 8
  %136 = load i8**, i8*** %5, align 8
  %137 = getelementptr inbounds i8*, i8** %136, i64 3
  %138 = load i8*, i8** %137, align 8
  %139 = call i32 @strtoul(i8* %138, i32* null, i32 16)
  %140 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i32 %139)
  %141 = load i8**, i8*** %5, align 8
  %142 = getelementptr inbounds i8*, i8** %141, i64 1
  %143 = load i8*, i8** %142, align 8
  %144 = call i32 @atoi(i8* %143)
  %145 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i32 %144)
  %146 = load i8**, i8*** %5, align 8
  %147 = getelementptr inbounds i8*, i8** %146, i64 3
  %148 = load i8*, i8** %147, align 8
  %149 = call i32 @strtoul(i8* %148, i32* null, i32 16)
  %150 = load i8**, i8*** %5, align 8
  %151 = getelementptr inbounds i8*, i8** %150, i64 1
  %152 = load i8*, i8** %151, align 8
  %153 = call i32 @atoi(i8* %152)
  %154 = sub nsw i32 %149, %153
  %155 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i32 %154)
  br label %156

156:                                              ; preds = %125, %119
  br label %157

157:                                              ; preds = %156, %79
  %158 = load i32, i32* @BUFLEN, align 4
  %159 = call i64 @malloc(i32 %158)
  %160 = inttoptr i64 %159 to i8*
  store i8* %160, i8** %6, align 8
  %161 = icmp ne i8* %160, null
  br i1 %161, label %165, label %162

162:                                              ; preds = %157
  %163 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0))
  %164 = call i32 @exit(i32 -1) #3
  unreachable

165:                                              ; preds = %157
  %166 = load i8*, i8** %6, align 8
  store i8* %166, i8** %7, align 8
  %167 = load i8*, i8** %7, align 8
  %168 = bitcast i8* %167 to i64*
  store i64* %168, i64** %8, align 8
  store i32 0, i32* %11, align 4
  br label %169

169:                                              ; preds = %177, %165
  %170 = load i32, i32* %11, align 4
  %171 = load i32, i32* @BUFLEN, align 4
  %172 = icmp slt i32 %170, %171
  br i1 %172, label %173, label %180

173:                                              ; preds = %169
  %174 = load i64, i64* %9, align 8
  %175 = load i64*, i64** %8, align 8
  %176 = getelementptr inbounds i64, i64* %175, i32 1
  store i64* %176, i64** %8, align 8
  store i64 %174, i64* %175, align 8
  br label %177

177:                                              ; preds = %173
  %178 = load i32, i32* %11, align 4
  %179 = add nsw i32 %178, 4
  store i32 %179, i32* %11, align 4
  br label %169

180:                                              ; preds = %169
  store i32 0, i32* %11, align 4
  br label %181

181:                                              ; preds = %195, %180
  %182 = load i32, i32* %11, align 4
  %183 = load i32, i32* @BUFLEN, align 4
  %184 = load i32*, i32** @code, align 8
  %185 = call i32 @strlen(i32* %184)
  %186 = sub nsw i32 %183, %185
  %187 = sub nsw i32 %186, 4
  %188 = icmp slt i32 %182, %187
  br i1 %188, label %189, label %198

189:                                              ; preds = %181
  %190 = load i8, i8* @NOP, align 1
  %191 = load i8*, i8** %6, align 8
  %192 = load i32, i32* %11, align 4
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds i8, i8* %191, i64 %193
  store i8 %190, i8* %194, align 1
  br label %195

195:                                              ; preds = %189
  %196 = load i32, i32* %11, align 4
  %197 = add nsw i32 %196, 1
  store i32 %197, i32* %11, align 4
  br label %181

198:                                              ; preds = %181
  %199 = load i8*, i8** %6, align 8
  %200 = load i32, i32* @BUFLEN, align 4
  %201 = load i32*, i32** @code, align 8
  %202 = call i32 @strlen(i32* %201)
  %203 = sub nsw i32 %200, %202
  %204 = sub nsw i32 %203, 4
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds i8, i8* %199, i64 %205
  store i8* %206, i8** %7, align 8
  store i32 0, i32* %11, align 4
  br label %207

207:                                              ; preds = %221, %198
  %208 = load i32, i32* %11, align 4
  %209 = load i32*, i32** @code, align 8
  %210 = call i32 @strlen(i32* %209)
  %211 = icmp slt i32 %208, %210
  br i1 %211, label %212, label %224

212:                                              ; preds = %207
  %213 = load i32*, i32** @code, align 8
  %214 = load i32, i32* %11, align 4
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds i32, i32* %213, i64 %215
  %217 = load i32, i32* %216, align 4
  %218 = trunc i32 %217 to i8
  %219 = load i8*, i8** %7, align 8
  %220 = getelementptr inbounds i8, i8* %219, i32 1
  store i8* %220, i8** %7, align 8
  store i8 %218, i8* %219, align 1
  br label %221

221:                                              ; preds = %212
  %222 = load i32, i32* %11, align 4
  %223 = add nsw i32 %222, 1
  store i32 %223, i32* %11, align 4
  br label %207

224:                                              ; preds = %207
  %225 = load i8*, i8** %6, align 8
  %226 = load i32, i32* @BUFLEN, align 4
  %227 = sext i32 %226 to i64
  %228 = getelementptr inbounds i8, i8* %225, i64 %227
  store i8 0, i8* %228, align 1
  %229 = load i8*, i8** %6, align 8
  %230 = call i32 @setenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* %229, i32 1)
  %231 = load i32, i32* @EXPECT, align 4
  %232 = call i32 @system(i32 %231)
  %233 = load i32, i32* %3, align 4
  ret i32 %233
}

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @strcmp(i8*, i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @strtoul(i8*, i32*, i32) #1

declare dso_local i64 @malloc(i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @strlen(i32*) #1

declare dso_local i32 @setenv(i8*, i8*, i32) #1

declare dso_local i32 @system(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
