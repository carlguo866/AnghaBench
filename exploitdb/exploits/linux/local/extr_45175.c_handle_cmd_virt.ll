; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45175.c_handle_cmd_virt.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45175.c_handle_cmd_virt.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [46 x i8] c"[.] dumping virtual memory [%016lx, %016lx):\0A\00", align 1
@g_addr = common dso_local global i64 0, align 8
@g_length = common dso_local global i64 0, align 8
@g_file = common dso_local global i32* null, align 8
@.str.1 = private unnamed_addr constant [10 x i8] c"[+] done\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @handle_cmd_virt() #0 {
  %1 = alloca i32, align 4
  store i32 -1, i32* %1, align 4
  %2 = load i64, i64* @g_addr, align 8
  %3 = load i64, i64* @g_addr, align 8
  %4 = load i64, i64* @g_length, align 8
  %5 = add nsw i64 %3, %4
  %6 = call i32 (i8*, ...) @info(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0), i64 %2, i64 %5)
  %7 = load i32*, i32** @g_file, align 8
  %8 = icmp ne i32* %7, null
  br i1 %8, label %9, label %12

9:                                                ; preds = %0
  %10 = load i32*, i32** @g_file, align 8
  %11 = call i32 @create_file(i32* %10)
  store i32 %11, i32* %1, align 4
  br label %12

12:                                               ; preds = %9, %0
  %13 = load i64, i64* @g_addr, align 8
  %14 = load i64, i64* @g_length, align 8
  %15 = load i32, i32* %1, align 4
  %16 = call i32 @read_virt_memory(i64 %13, i64 %14, i32 %15)
  %17 = load i32, i32* %1, align 4
  %18 = icmp ne i32 %17, -1
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = load i32, i32* %1, align 4
  %21 = call i32 @close(i32 %20)
  br label %22

22:                                               ; preds = %19, %12
  %23 = call i32 (i8*, ...) @info(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0))
  ret void
}

declare dso_local i32 @info(i8*, ...) #1

declare dso_local i32 @create_file(i32*) #1

declare dso_local i32 @read_virt_memory(i64, i64, i32) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
