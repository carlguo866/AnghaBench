; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_145.c_slab_helper.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_145.c_slab_helper.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SIGUSR1 = common dso_local global i32 0, align 4
@catchme = common dso_local global i32 0, align 4
@SIGUSR2 = common dso_local global i32 0, align 4
@exitme = common dso_local global i32 0, align 4
@blah = common dso_local global i64 0, align 8
@DUPTO = common dso_local global i32 0, align 4
@ppid = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @slab_helper() #0 {
  %1 = load i32, i32* @SIGUSR1, align 4
  %2 = call i32 @signal(i32 %1, i32* @catchme)
  %3 = load i32, i32* @SIGUSR2, align 4
  %4 = call i32 @signal(i32 %3, i32* @exitme)
  store i64 0, i64* @blah, align 8
  br label %5

5:                                                ; preds = %0, %34
  br label %6

6:                                                ; preds = %10, %5
  %7 = load i64, i64* @blah, align 8
  %8 = icmp ne i64 %7, 0
  %9 = xor i1 %8, true
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = call i32 (...) @pause()
  br label %6

12:                                               ; preds = %6
  store i64 0, i64* @blah, align 8
  %13 = call i32 (...) @fork()
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %12
  %16 = load i32, i32* @DUPTO, align 4
  %17 = call i32 @dup2(i32 0, i32 %16)
  %18 = call i32 (...) @getppid()
  %19 = load i32, i32* @SIGUSR1, align 4
  %20 = call i32 @kill(i32 %18, i32 %19)
  br label %21

21:                                               ; preds = %15, %21
  %22 = call i32 (...) @pause()
  br label %21

23:                                               ; preds = %12
  br label %24

24:                                               ; preds = %28, %23
  %25 = load i64, i64* @blah, align 8
  %26 = icmp ne i64 %25, 0
  %27 = xor i1 %26, true
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = call i32 (...) @pause()
  br label %24

30:                                               ; preds = %24
  store i64 0, i64* @blah, align 8
  %31 = load i32, i32* @ppid, align 4
  %32 = load i32, i32* @SIGUSR2, align 4
  %33 = call i32 @kill(i32 %31, i32 %32)
  br label %34

34:                                               ; preds = %30
  br label %5
}

declare dso_local i32 @signal(i32, i32*) #1

declare dso_local i32 @pause(...) #1

declare dso_local i32 @fork(...) #1

declare dso_local i32 @dup2(i32, i32) #1

declare dso_local i32 @kill(i32, i32) #1

declare dso_local i32 @getppid(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
