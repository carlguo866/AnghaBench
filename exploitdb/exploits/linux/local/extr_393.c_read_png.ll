; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_393.c_read_png.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_393.c_read_png.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@ERROR = common dso_local global i32 0, align 4
@PNG_LIBPNG_VER_STRING = common dso_local global i32 0, align 4
@png_infopp_NULL = common dso_local global i32** null, align 8
@PNG_TRANSFORM_IDENTITY = common dso_local global i32 0, align 4
@png_voidp_NULL = common dso_local global i32 0, align 4
@OK = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @read_png(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32*, align 8
  store i8* %0, i8** %3, align 8
  store i32 0, i32* %6, align 4
  %13 = load i8*, i8** %3, align 8
  %14 = call i32* @fopen(i8* %13, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  store i32* %14, i32** %12, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %16, label %18

16:                                               ; preds = %1
  %17 = load i32, i32* @ERROR, align 4
  store i32 %17, i32* %2, align 4
  br label %67

18:                                               ; preds = %1
  %19 = load i32, i32* @PNG_LIBPNG_VER_STRING, align 4
  %20 = call i32* @png_create_read_struct(i32 %19, i32* null, i32* null, i32* null)
  store i32* %20, i32** %4, align 8
  %21 = load i32*, i32** %4, align 8
  %22 = icmp eq i32* %21, null
  br i1 %22, label %23, label %27

23:                                               ; preds = %18
  %24 = load i32*, i32** %12, align 8
  %25 = call i32 @fclose(i32* %24)
  %26 = load i32, i32* @ERROR, align 4
  store i32 %26, i32* %2, align 4
  br label %67

27:                                               ; preds = %18
  %28 = load i32*, i32** %4, align 8
  %29 = call i32* @png_create_info_struct(i32* %28)
  store i32* %29, i32** %5, align 8
  %30 = load i32*, i32** %5, align 8
  %31 = icmp eq i32* %30, null
  br i1 %31, label %32, label %39

32:                                               ; preds = %27
  %33 = load i32*, i32** %12, align 8
  %34 = call i32 @fclose(i32* %33)
  %35 = load i32**, i32*** @png_infopp_NULL, align 8
  %36 = load i32**, i32*** @png_infopp_NULL, align 8
  %37 = call i32 @png_destroy_read_struct(i32** %4, i32** %35, i32** %36)
  %38 = load i32, i32* @ERROR, align 4
  store i32 %38, i32* %2, align 4
  br label %67

39:                                               ; preds = %27
  %40 = load i32*, i32** %4, align 8
  %41 = call i32 @png_jmpbuf(i32* %40)
  %42 = call i64 @setjmp(i32 %41) #3
  %43 = icmp ne i64 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %39
  %45 = load i32**, i32*** @png_infopp_NULL, align 8
  %46 = call i32 @png_destroy_read_struct(i32** %4, i32** %5, i32** %45)
  %47 = load i32*, i32** %12, align 8
  %48 = call i32 @fclose(i32* %47)
  %49 = load i32, i32* @ERROR, align 4
  store i32 %49, i32* %2, align 4
  br label %67

50:                                               ; preds = %39
  %51 = load i32*, i32** %4, align 8
  %52 = load i32*, i32** %12, align 8
  %53 = call i32 @png_init_io(i32* %51, i32* %52)
  %54 = load i32*, i32** %4, align 8
  %55 = load i32, i32* %6, align 4
  %56 = call i32 @png_set_sig_bytes(i32* %54, i32 %55)
  %57 = load i32*, i32** %4, align 8
  %58 = load i32*, i32** %5, align 8
  %59 = load i32, i32* @PNG_TRANSFORM_IDENTITY, align 4
  %60 = load i32, i32* @png_voidp_NULL, align 4
  %61 = call i32 @png_read_png(i32* %57, i32* %58, i32 %59, i32 %60)
  %62 = load i32**, i32*** @png_infopp_NULL, align 8
  %63 = call i32 @png_destroy_read_struct(i32** %4, i32** %5, i32** %62)
  %64 = load i32*, i32** %12, align 8
  %65 = call i32 @fclose(i32* %64)
  %66 = load i32, i32* @OK, align 4
  store i32 %66, i32* %2, align 4
  br label %67

67:                                               ; preds = %50, %44, %32, %23, %16
  %68 = load i32, i32* %2, align 4
  ret i32 %68
}

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32* @png_create_read_struct(i32, i32*, i32*, i32*) #1

declare dso_local i32 @fclose(i32*) #1

declare dso_local i32* @png_create_info_struct(i32*) #1

declare dso_local i32 @png_destroy_read_struct(i32**, i32**, i32**) #1

; Function Attrs: returns_twice
declare dso_local i64 @setjmp(i32) #2

declare dso_local i32 @png_jmpbuf(i32*) #1

declare dso_local i32 @png_init_io(i32*, i32*) #1

declare dso_local i32 @png_set_sig_bytes(i32*, i32) #1

declare dso_local i32 @png_read_png(i32*, i32*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { returns_twice "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { returns_twice }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
