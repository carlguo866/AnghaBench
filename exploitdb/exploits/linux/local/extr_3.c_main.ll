; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_3.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_3.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SIGALRM = common dso_local global i32 0, align 4
@sigalrm = common dso_local global i32 0, align 4
@parent = common dso_local global i32 0, align 4
@child = common dso_local global i32 0, align 4
@victim = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [19 x i8] c"[-] Unable to fork\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %6 = call i32 (...) @prepare()
  %7 = load i32, i32* @SIGALRM, align 4
  %8 = load i32, i32* @sigalrm, align 4
  %9 = call i32 @signal(i32 %7, i32 %8)
  %10 = call i32 @alarm(i32 10)
  %11 = call i32 (...) @getpid()
  store i32 %11, i32* @parent, align 4
  %12 = call i32 (...) @fork()
  store i32 %12, i32* @child, align 4
  %13 = load i32, i32* @child, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* @victim, align 4
  %15 = load i32, i32* @child, align 4
  %16 = icmp eq i32 %15, -1
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = call i32 @fatal(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0))
  br label %19

19:                                               ; preds = %17, %2
  %20 = load i32, i32* @child, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %19
  %23 = call i32 (...) @do_child()
  br label %29

24:                                               ; preds = %19
  %25 = load i8**, i8*** %5, align 8
  %26 = getelementptr inbounds i8*, i8** %25, i64 0
  %27 = load i8*, i8** %26, align 8
  %28 = call i32 @do_parent(i8* %27)
  br label %29

29:                                               ; preds = %24, %22
  ret i32 0
}

declare dso_local i32 @prepare(...) #1

declare dso_local i32 @signal(i32, i32) #1

declare dso_local i32 @alarm(i32) #1

declare dso_local i32 @getpid(...) #1

declare dso_local i32 @fork(...) #1

declare dso_local i32 @fatal(i8*) #1

declare dso_local i32 @do_child(...) #1

declare dso_local i32 @do_parent(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
