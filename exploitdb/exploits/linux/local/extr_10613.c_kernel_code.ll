; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_10613.c_kernel_code.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_10613.c_kernel_code.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@uid = common dso_local global i32 0, align 4
@gid = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @kernel_code() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  %3 = call i32* (...) @get_current()
  store i32* %3, i32** %2, align 8
  store i32 0, i32* %1, align 4
  br label %4

4:                                                ; preds = %86, %0
  %5 = load i32, i32* %1, align 4
  %6 = icmp slt i32 %5, 1011
  br i1 %6, label %7, label %89

7:                                                ; preds = %4
  %8 = load i32*, i32** %2, align 8
  %9 = getelementptr inbounds i32, i32* %8, i64 0
  %10 = load i32, i32* %9, align 4
  %11 = load i32, i32* @uid, align 4
  %12 = icmp eq i32 %10, %11
  br i1 %12, label %13, label %83

13:                                               ; preds = %7
  %14 = load i32*, i32** %2, align 8
  %15 = getelementptr inbounds i32, i32* %14, i64 1
  %16 = load i32, i32* %15, align 4
  %17 = load i32, i32* @uid, align 4
  %18 = icmp eq i32 %16, %17
  br i1 %18, label %19, label %83

19:                                               ; preds = %13
  %20 = load i32*, i32** %2, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 2
  %22 = load i32, i32* %21, align 4
  %23 = load i32, i32* @uid, align 4
  %24 = icmp eq i32 %22, %23
  br i1 %24, label %25, label %83

25:                                               ; preds = %19
  %26 = load i32*, i32** %2, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 3
  %28 = load i32, i32* %27, align 4
  %29 = load i32, i32* @uid, align 4
  %30 = icmp eq i32 %28, %29
  br i1 %30, label %31, label %83

31:                                               ; preds = %25
  %32 = load i32*, i32** %2, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 4
  %34 = load i32, i32* %33, align 4
  %35 = load i32, i32* @gid, align 4
  %36 = icmp eq i32 %34, %35
  br i1 %36, label %37, label %83

37:                                               ; preds = %31
  %38 = load i32*, i32** %2, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 5
  %40 = load i32, i32* %39, align 4
  %41 = load i32, i32* @gid, align 4
  %42 = icmp eq i32 %40, %41
  br i1 %42, label %43, label %83

43:                                               ; preds = %37
  %44 = load i32*, i32** %2, align 8
  %45 = getelementptr inbounds i32, i32* %44, i64 6
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* @gid, align 4
  %48 = icmp eq i32 %46, %47
  br i1 %48, label %49, label %83

49:                                               ; preds = %43
  %50 = load i32*, i32** %2, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 7
  %52 = load i32, i32* %51, align 4
  %53 = load i32, i32* @gid, align 4
  %54 = icmp eq i32 %52, %53
  br i1 %54, label %55, label %83

55:                                               ; preds = %49
  %56 = load i32*, i32** %2, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 3
  store i32 0, i32* %57, align 4
  %58 = load i32*, i32** %2, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 2
  store i32 0, i32* %59, align 4
  %60 = load i32*, i32** %2, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 1
  store i32 0, i32* %61, align 4
  %62 = load i32*, i32** %2, align 8
  %63 = getelementptr inbounds i32, i32* %62, i64 0
  store i32 0, i32* %63, align 4
  %64 = load i32*, i32** %2, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 7
  store i32 0, i32* %65, align 4
  %66 = load i32*, i32** %2, align 8
  %67 = getelementptr inbounds i32, i32* %66, i64 6
  store i32 0, i32* %67, align 4
  %68 = load i32*, i32** %2, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 5
  store i32 0, i32* %69, align 4
  %70 = load i32*, i32** %2, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 4
  store i32 0, i32* %71, align 4
  %72 = load i32*, i32** %2, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 8
  %74 = bitcast i32* %73 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 8
  %76 = bitcast i8* %75 to i32*
  store i32* %76, i32** %2, align 8
  %77 = load i32*, i32** %2, align 8
  %78 = getelementptr inbounds i32, i32* %77, i64 2
  store i32 -1, i32* %78, align 4
  %79 = load i32*, i32** %2, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 1
  store i32 -1, i32* %80, align 4
  %81 = load i32*, i32** %2, align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 0
  store i32 -1, i32* %82, align 4
  br label %89

83:                                               ; preds = %49, %43, %37, %31, %25, %19, %13, %7
  %84 = load i32*, i32** %2, align 8
  %85 = getelementptr inbounds i32, i32* %84, i32 1
  store i32* %85, i32** %2, align 8
  br label %86

86:                                               ; preds = %83
  %87 = load i32, i32* %1, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %1, align 4
  br label %4

89:                                               ; preds = %55, %4
  %90 = call i32 (...) @exit_kernel()
  ret void
}

declare dso_local i32* @get_current(...) #1

declare dso_local i32 @exit_kernel(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
