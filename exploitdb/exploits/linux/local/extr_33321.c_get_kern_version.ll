; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_33321.c_get_kern_version.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_33321.c_get_kern_version.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.utsname = type { i32* }

@.str = private unnamed_addr constant [59 x i8] c"can't have ur k3rn3l version. this box isn't for today :P\0A\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"\09\09+ Kernel version %i\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_kern_version() #0 {
  %1 = alloca %struct.utsname, align 8
  %2 = alloca [2 x i8], align 1
  %3 = alloca [3 x i8], align 1
  %4 = alloca i32, align 4
  store i32 2000, i32* %4, align 4
  %5 = call i64 @uname(%struct.utsname* %1)
  %6 = icmp slt i64 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %0
  %8 = call i32 @error(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0))
  br label %9

9:                                                ; preds = %7, %0
  %10 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i64 0, i64 0
  %11 = getelementptr inbounds %struct.utsname, %struct.utsname* %1, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds i32, i32* %12, i64 2
  %14 = load i32, i32* %13, align 4
  %15 = call i32 @sprintf(i8* %10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i32 %14)
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i64 0, i64 1
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds [2 x i8], [2 x i8]* %2, i64 0, i64 0
  %18 = call i32 @atoi(i8* %17)
  %19 = mul nsw i32 %18, 100
  %20 = load i32, i32* %4, align 4
  %21 = add nsw i32 %20, %19
  store i32 %21, i32* %4, align 4
  %22 = getelementptr inbounds %struct.utsname, %struct.utsname* %1, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 4
  %25 = load i32, i32* %24, align 4
  %26 = trunc i32 %25 to i8
  %27 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0
  store i8 %26, i8* %27, align 1
  %28 = getelementptr inbounds %struct.utsname, %struct.utsname* %1, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 5
  %31 = load i32, i32* %30, align 4
  %32 = icmp sge i32 %31, 48
  br i1 %32, label %39, label %33

33:                                               ; preds = %9
  %34 = getelementptr inbounds %struct.utsname, %struct.utsname* %1, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 5
  %37 = load i32, i32* %36, align 4
  %38 = icmp sle i32 %37, 57
  br i1 %38, label %39, label %51

39:                                               ; preds = %33, %9
  %40 = getelementptr inbounds %struct.utsname, %struct.utsname* %1, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 5
  %43 = load i32, i32* %42, align 4
  %44 = trunc i32 %43 to i8
  %45 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 1
  store i8 %44, i8* %45, align 1
  %46 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 2
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0
  %48 = call i32 @atoi(i8* %47)
  %49 = load i32, i32* %4, align 4
  %50 = add nsw i32 %49, %48
  store i32 %50, i32* %4, align 4
  br label %59

51:                                               ; preds = %33
  %52 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 1
  store i8 0, i8* %52, align 1
  %53 = getelementptr inbounds [3 x i8], [3 x i8]* %3, i64 0, i64 0
  %54 = load i8, i8* %53, align 1
  %55 = sext i8 %54 to i32
  %56 = sub nsw i32 %55, 48
  %57 = load i32, i32* %4, align 4
  %58 = add nsw i32 %57, %56
  store i32 %58, i32* %4, align 4
  br label %59

59:                                               ; preds = %51, %39
  %60 = load i32, i32* %4, align 4
  %61 = call i32 @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 %60)
  %62 = load i32, i32* %4, align 4
  ret i32 %62
}

declare dso_local i64 @uname(%struct.utsname*) #1

declare dso_local i32 @error(i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, i32) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @printf(i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
