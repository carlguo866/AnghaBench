; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_1397.c_map_pte.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_1397.c_map_pte.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (i32, i32, i32)* @map_pte to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @map_pte(i32 %0, i32 %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %8 = load i32, i32* %5, align 4
  %9 = mul nsw i32 %8, 4096
  %10 = add nsw i32 %9, 8
  %11 = sext i32 %10 to i64
  %12 = alloca i8, i64 %11, align 16
  %13 = bitcast i8* %12 to i32*
  store i32* %13, i32** %7, align 8
  %14 = load i32, i32* %6, align 4
  %15 = call i32 (i32, ...) bitcast (i32 (...)* @MKPTE to i32 (i32, ...)*)(i32 %14)
  %16 = load i32*, i32** %7, align 8
  %17 = load i32, i32* %5, align 4
  %18 = mul nsw i32 %17, 1024
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %16, i64 %19
  store i32 %15, i32* %20, align 4
  %21 = load i32*, i32** %7, align 8
  %22 = load i32, i32* %5, align 4
  %23 = mul nsw i32 %22, 1024
  %24 = add nsw i32 %23, 1
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i32, i32* %21, i64 %25
  store i32 0, i32* %26, align 4
  %27 = load i32*, i32** %7, align 8
  %28 = bitcast i32* %27 to i8*
  %29 = call i32 (i8*, ...) bitcast (i32 (...)* @fixint to i32 (i8*, ...)*)(i8* %28)
  %30 = load i32, i32* %4, align 4
  %31 = load i32*, i32** %7, align 8
  %32 = bitcast i32* %31 to i8*
  %33 = load i32, i32* %5, align 4
  %34 = mul nsw i32 %33, 4096
  %35 = add nsw i32 %34, 4
  %36 = call i32 (i32, i8*, i32, ...) bitcast (i32 (...)* @kwrite to i32 (i32, i8*, i32, ...)*)(i32 %30, i8* %32, i32 %35)
  ret i32 %36
}

declare dso_local i32 @MKPTE(...) #1

declare dso_local i32 @fixint(...) #1

declare dso_local i32 @kwrite(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
