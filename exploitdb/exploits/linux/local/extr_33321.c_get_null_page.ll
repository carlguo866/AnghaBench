; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_33321.c_get_null_page.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_33321.c_get_null_page.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@PER_SVR4 = common dso_local global i64 0, align 8
@PROT_READ = common dso_local global i32 0, align 4
@PROT_WRITE = common dso_local global i32 0, align 4
@PROT_EXEC = common dso_local global i32 0, align 4
@MAP_FIXED = common dso_local global i32 0, align 4
@MAP_ANONYMOUS = common dso_local global i32 0, align 4
@MAP_PRIVATE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [76 x i8] c"this box haz a motherfuckin mmap_min_addr-like stuff! burn it if u can !@#*\00", align 1
@.str.1 = private unnamed_addr constant [57 x i8] c"HELL! can't mprotect my null page !@#*. goto /dev/null !\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"\09\09+ Got null page\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @get_null_page() #0 {
  %1 = alloca i8*, align 8
  %2 = call i64 @personality(i32 -1)
  %3 = load i64, i64* @PER_SVR4, align 8
  %4 = icmp ne i64 %2, %3
  br i1 %4, label %5, label %48

5:                                                ; preds = %0
  %6 = load i32, i32* @PROT_READ, align 4
  %7 = load i32, i32* @PROT_WRITE, align 4
  %8 = or i32 %6, %7
  %9 = load i32, i32* @PROT_EXEC, align 4
  %10 = or i32 %8, %9
  %11 = load i32, i32* @MAP_FIXED, align 4
  %12 = load i32, i32* @MAP_ANONYMOUS, align 4
  %13 = or i32 %11, %12
  %14 = load i32, i32* @MAP_PRIVATE, align 4
  %15 = or i32 %13, %14
  %16 = call i8* @mmap(i32* null, i32 4096, i32 %10, i32 %15, i32 0, i32 0)
  store i8* %16, i8** %1, align 8
  %17 = load i8*, i8** %1, align 8
  %18 = icmp ne i8* %17, null
  br i1 %18, label %19, label %34

19:                                               ; preds = %5
  %20 = load i32, i32* @PROT_READ, align 4
  %21 = load i32, i32* @PROT_WRITE, align 4
  %22 = or i32 %20, %21
  %23 = load i32, i32* @MAP_FIXED, align 4
  %24 = load i32, i32* @MAP_ANONYMOUS, align 4
  %25 = or i32 %23, %24
  %26 = load i32, i32* @MAP_PRIVATE, align 4
  %27 = or i32 %25, %26
  %28 = call i8* @mmap(i32* null, i32 4096, i32 %22, i32 %27, i32 0, i32 0)
  store i8* %28, i8** %1, align 8
  %29 = load i8*, i8** %1, align 8
  %30 = icmp ne i8* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %19
  %32 = call i32 @error(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str, i64 0, i64 0))
  br label %33

33:                                               ; preds = %31, %19
  br label %47

34:                                               ; preds = %5
  %35 = load i32, i32* @PROT_READ, align 4
  %36 = load i32, i32* @PROT_WRITE, align 4
  %37 = or i32 %35, %36
  %38 = load i32, i32* @PROT_EXEC, align 4
  %39 = or i32 %37, %38
  %40 = call i64 @mprotect(i32* null, i32 4096, i32 %39)
  %41 = icmp slt i64 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %34
  %43 = load i8*, i8** %1, align 8
  %44 = call i32 @free(i8* %43)
  %45 = call i32 @error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0))
  br label %46

46:                                               ; preds = %42, %34
  br label %47

47:                                               ; preds = %46, %33
  br label %91

48:                                               ; preds = %0
  %49 = load i32, i32* @PROT_READ, align 4
  %50 = load i32, i32* @PROT_WRITE, align 4
  %51 = or i32 %49, %50
  %52 = load i32, i32* @PROT_EXEC, align 4
  %53 = or i32 %51, %52
  %54 = load i32, i32* @MAP_FIXED, align 4
  %55 = load i32, i32* @MAP_ANONYMOUS, align 4
  %56 = or i32 %54, %55
  %57 = load i32, i32* @MAP_PRIVATE, align 4
  %58 = or i32 %56, %57
  %59 = call i8* @mmap(i32* null, i32 4096, i32 %53, i32 %58, i32 0, i32 0)
  store i8* %59, i8** %1, align 8
  %60 = load i8*, i8** %1, align 8
  %61 = icmp ne i8* %60, null
  br i1 %61, label %62, label %77

62:                                               ; preds = %48
  %63 = load i32, i32* @PROT_READ, align 4
  %64 = load i32, i32* @PROT_WRITE, align 4
  %65 = or i32 %63, %64
  %66 = load i32, i32* @MAP_FIXED, align 4
  %67 = load i32, i32* @MAP_ANONYMOUS, align 4
  %68 = or i32 %66, %67
  %69 = load i32, i32* @MAP_PRIVATE, align 4
  %70 = or i32 %68, %69
  %71 = call i8* @mmap(i32* null, i32 4096, i32 %65, i32 %70, i32 0, i32 0)
  store i8* %71, i8** %1, align 8
  %72 = load i8*, i8** %1, align 8
  %73 = icmp ne i8* %72, null
  br i1 %73, label %74, label %76

74:                                               ; preds = %62
  %75 = call i32 @error(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str, i64 0, i64 0))
  br label %76

76:                                               ; preds = %74, %62
  br label %90

77:                                               ; preds = %48
  %78 = load i32, i32* @PROT_READ, align 4
  %79 = load i32, i32* @PROT_WRITE, align 4
  %80 = or i32 %78, %79
  %81 = load i32, i32* @PROT_EXEC, align 4
  %82 = or i32 %80, %81
  %83 = call i64 @mprotect(i32* null, i32 4096, i32 %82)
  %84 = icmp slt i64 %83, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %77
  %86 = load i8*, i8** %1, align 8
  %87 = call i32 @free(i8* %86)
  %88 = call i32 @error(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0))
  br label %89

89:                                               ; preds = %85, %77
  br label %90

90:                                               ; preds = %89, %76
  br label %91

91:                                               ; preds = %90, %47
  %92 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0))
  %93 = load i8*, i8** %1, align 8
  ret i8* %93
}

declare dso_local i64 @personality(i32) #1

declare dso_local i8* @mmap(i32*, i32, i32, i32, i32, i32) #1

declare dso_local i32 @error(i8*) #1

declare dso_local i64 @mprotect(i32*, i32, i32) #1

declare dso_local i32 @free(i8*) #1

declare dso_local i32 @printf(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
