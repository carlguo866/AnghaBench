; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_9363.c_hex_dump_to_buffer.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_9363.c_hex_dump_to_buffer.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [11 x i8] c"%16.16llx \00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"%8.8x \00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"%4.4x \00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @hex_dump_to_buffer(i8* %0, i64 %1, i32 %2, i32 %3, i8* %4, i64 %5, i32 %6) #0 {
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca i8*, align 8
  %16 = alloca i8, align 1
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i64*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32*, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32*, align 8
  %25 = alloca i32, align 4
  store i8* %0, i8** %8, align 8
  store i64 %1, i64* %9, align 8
  store i32 %2, i32* %10, align 4
  store i32 %3, i32* %11, align 4
  store i8* %4, i8** %12, align 8
  store i64 %5, i64* %13, align 8
  store i32 %6, i32* %14, align 4
  %26 = load i8*, i8** %8, align 8
  store i8* %26, i8** %15, align 8
  store i32 0, i32* %18, align 4
  %27 = load i32, i32* %10, align 4
  %28 = icmp ne i32 %27, 16
  br i1 %28, label %29, label %33

29:                                               ; preds = %7
  %30 = load i32, i32* %10, align 4
  %31 = icmp ne i32 %30, 32
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  store i32 16, i32* %10, align 4
  br label %33

33:                                               ; preds = %32, %29, %7
  %34 = load i64, i64* %9, align 8
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  br label %291

37:                                               ; preds = %33
  %38 = load i64, i64* %9, align 8
  %39 = load i32, i32* %10, align 4
  %40 = sext i32 %39 to i64
  %41 = icmp ugt i64 %38, %40
  br i1 %41, label %42, label %45

42:                                               ; preds = %37
  %43 = load i32, i32* %10, align 4
  %44 = sext i32 %43 to i64
  store i64 %44, i64* %9, align 8
  br label %45

45:                                               ; preds = %42, %37
  %46 = load i64, i64* %9, align 8
  %47 = load i32, i32* %11, align 4
  %48 = sext i32 %47 to i64
  %49 = urem i64 %46, %48
  %50 = icmp ne i64 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %45
  store i32 1, i32* %11, align 4
  br label %52

52:                                               ; preds = %51, %45
  %53 = load i32, i32* %11, align 4
  switch i32 %53, label %163 [
    i32 8, label %54
    i32 4, label %91
    i32 2, label %127
  ]

54:                                               ; preds = %52
  %55 = load i8*, i8** %8, align 8
  %56 = bitcast i8* %55 to i64*
  store i64* %56, i64** %20, align 8
  %57 = load i64, i64* %9, align 8
  %58 = load i32, i32* %11, align 4
  %59 = sext i32 %58 to i64
  %60 = udiv i64 %57, %59
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %21, align 4
  store i32 0, i32* %17, align 4
  br label %62

62:                                               ; preds = %84, %54
  %63 = load i32, i32* %17, align 4
  %64 = load i32, i32* %21, align 4
  %65 = icmp slt i32 %63, %64
  br i1 %65, label %66, label %87

66:                                               ; preds = %62
  %67 = load i8*, i8** %12, align 8
  %68 = load i32, i32* %18, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %67, i64 %69
  %71 = load i64, i64* %13, align 8
  %72 = load i32, i32* %18, align 4
  %73 = sext i32 %72 to i64
  %74 = sub i64 %71, %73
  %75 = load i64*, i64** %20, align 8
  %76 = load i32, i32* %17, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i64, i64* %75, i64 %77
  %79 = load i64, i64* %78, align 8
  %80 = trunc i64 %79 to i32
  %81 = call i32 @snprintf(i8* %70, i64 %74, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 %80)
  %82 = load i32, i32* %18, align 4
  %83 = add nsw i32 %82, %81
  store i32 %83, i32* %18, align 4
  br label %84

84:                                               ; preds = %66
  %85 = load i32, i32* %17, align 4
  %86 = add nsw i32 %85, 1
  store i32 %86, i32* %17, align 4
  br label %62

87:                                               ; preds = %62
  %88 = load i32, i32* %21, align 4
  %89 = mul nsw i32 17, %88
  %90 = add nsw i32 %89, 2
  store i32 %90, i32* %19, align 4
  br label %213

91:                                               ; preds = %52
  %92 = load i8*, i8** %8, align 8
  %93 = bitcast i8* %92 to i32*
  store i32* %93, i32** %22, align 8
  %94 = load i64, i64* %9, align 8
  %95 = load i32, i32* %11, align 4
  %96 = sext i32 %95 to i64
  %97 = udiv i64 %94, %96
  %98 = trunc i64 %97 to i32
  store i32 %98, i32* %23, align 4
  store i32 0, i32* %17, align 4
  br label %99

99:                                               ; preds = %120, %91
  %100 = load i32, i32* %17, align 4
  %101 = load i32, i32* %23, align 4
  %102 = icmp slt i32 %100, %101
  br i1 %102, label %103, label %123

103:                                              ; preds = %99
  %104 = load i8*, i8** %12, align 8
  %105 = load i32, i32* %18, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i8, i8* %104, i64 %106
  %108 = load i64, i64* %13, align 8
  %109 = load i32, i32* %18, align 4
  %110 = sext i32 %109 to i64
  %111 = sub i64 %108, %110
  %112 = load i32*, i32** %22, align 8
  %113 = load i32, i32* %17, align 4
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %112, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = call i32 @snprintf(i8* %107, i64 %111, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 %116)
  %118 = load i32, i32* %18, align 4
  %119 = add nsw i32 %118, %117
  store i32 %119, i32* %18, align 4
  br label %120

120:                                              ; preds = %103
  %121 = load i32, i32* %17, align 4
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %17, align 4
  br label %99

123:                                              ; preds = %99
  %124 = load i32, i32* %23, align 4
  %125 = mul nsw i32 9, %124
  %126 = add nsw i32 %125, 2
  store i32 %126, i32* %19, align 4
  br label %213

127:                                              ; preds = %52
  %128 = load i8*, i8** %8, align 8
  %129 = bitcast i8* %128 to i32*
  store i32* %129, i32** %24, align 8
  %130 = load i64, i64* %9, align 8
  %131 = load i32, i32* %11, align 4
  %132 = sext i32 %131 to i64
  %133 = udiv i64 %130, %132
  %134 = trunc i64 %133 to i32
  store i32 %134, i32* %25, align 4
  store i32 0, i32* %17, align 4
  br label %135

135:                                              ; preds = %156, %127
  %136 = load i32, i32* %17, align 4
  %137 = load i32, i32* %25, align 4
  %138 = icmp slt i32 %136, %137
  br i1 %138, label %139, label %159

139:                                              ; preds = %135
  %140 = load i8*, i8** %12, align 8
  %141 = load i32, i32* %18, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %140, i64 %142
  %144 = load i64, i64* %13, align 8
  %145 = load i32, i32* %18, align 4
  %146 = sext i32 %145 to i64
  %147 = sub i64 %144, %146
  %148 = load i32*, i32** %24, align 8
  %149 = load i32, i32* %17, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i32, i32* %148, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = call i32 @snprintf(i8* %143, i64 %147, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %152)
  %154 = load i32, i32* %18, align 4
  %155 = add nsw i32 %154, %153
  store i32 %155, i32* %18, align 4
  br label %156

156:                                              ; preds = %139
  %157 = load i32, i32* %17, align 4
  %158 = add nsw i32 %157, 1
  store i32 %158, i32* %17, align 4
  br label %135

159:                                              ; preds = %135
  %160 = load i32, i32* %25, align 4
  %161 = mul nsw i32 5, %160
  %162 = add nsw i32 %161, 2
  store i32 %162, i32* %19, align 4
  br label %213

163:                                              ; preds = %52
  store i32 0, i32* %17, align 4
  br label %164

164:                                              ; preds = %206, %163
  %165 = load i32, i32* %17, align 4
  %166 = load i32, i32* %10, align 4
  %167 = icmp slt i32 %165, %166
  br i1 %167, label %168, label %179

168:                                              ; preds = %164
  %169 = load i32, i32* %17, align 4
  %170 = sext i32 %169 to i64
  %171 = load i64, i64* %9, align 8
  %172 = icmp ult i64 %170, %171
  br i1 %172, label %173, label %179

173:                                              ; preds = %168
  %174 = load i32, i32* %18, align 4
  %175 = add nsw i32 %174, 4
  %176 = sext i32 %175 to i64
  %177 = load i64, i64* %13, align 8
  %178 = icmp ult i64 %176, %177
  br label %179

179:                                              ; preds = %173, %168, %164
  %180 = phi i1 [ false, %168 ], [ false, %164 ], [ %178, %173 ]
  br i1 %180, label %181, label %209

181:                                              ; preds = %179
  %182 = load i8*, i8** %15, align 8
  %183 = load i32, i32* %17, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i8, i8* %182, i64 %184
  %186 = load i8, i8* %185, align 1
  store i8 %186, i8* %16, align 1
  %187 = load i8, i8* %16, align 1
  %188 = call signext i8 @hex_asc_hi(i8 signext %187)
  %189 = load i8*, i8** %12, align 8
  %190 = load i32, i32* %18, align 4
  %191 = add nsw i32 %190, 1
  store i32 %191, i32* %18, align 4
  %192 = sext i32 %190 to i64
  %193 = getelementptr inbounds i8, i8* %189, i64 %192
  store i8 %188, i8* %193, align 1
  %194 = load i8, i8* %16, align 1
  %195 = call signext i8 @hex_asc_lo(i8 signext %194)
  %196 = load i8*, i8** %12, align 8
  %197 = load i32, i32* %18, align 4
  %198 = add nsw i32 %197, 1
  store i32 %198, i32* %18, align 4
  %199 = sext i32 %197 to i64
  %200 = getelementptr inbounds i8, i8* %196, i64 %199
  store i8 %195, i8* %200, align 1
  %201 = load i8*, i8** %12, align 8
  %202 = load i32, i32* %18, align 4
  %203 = add nsw i32 %202, 1
  store i32 %203, i32* %18, align 4
  %204 = sext i32 %202 to i64
  %205 = getelementptr inbounds i8, i8* %201, i64 %204
  store i8 32, i8* %205, align 1
  br label %206

206:                                              ; preds = %181
  %207 = load i32, i32* %17, align 4
  %208 = add nsw i32 %207, 1
  store i32 %208, i32* %17, align 4
  br label %164

209:                                              ; preds = %179
  %210 = load i32, i32* %10, align 4
  %211 = mul nsw i32 3, %210
  %212 = add nsw i32 %211, 2
  store i32 %212, i32* %19, align 4
  br label %213

213:                                              ; preds = %209, %159, %123, %87
  %214 = load i32, i32* %14, align 4
  %215 = icmp ne i32 %214, 0
  br i1 %215, label %217, label %216

216:                                              ; preds = %213
  br label %291

217:                                              ; preds = %213
  br label %218

218:                                              ; preds = %231, %217
  %219 = load i32, i32* %18, align 4
  %220 = sext i32 %219 to i64
  %221 = load i64, i64* %13, align 8
  %222 = sub i64 %221, 1
  %223 = icmp ult i64 %220, %222
  br i1 %223, label %224, label %229

224:                                              ; preds = %218
  %225 = load i32, i32* %18, align 4
  %226 = load i32, i32* %19, align 4
  %227 = sub nsw i32 %226, 1
  %228 = icmp slt i32 %225, %227
  br label %229

229:                                              ; preds = %224, %218
  %230 = phi i1 [ false, %218 ], [ %228, %224 ]
  br i1 %230, label %231, label %237

231:                                              ; preds = %229
  %232 = load i8*, i8** %12, align 8
  %233 = load i32, i32* %18, align 4
  %234 = add nsw i32 %233, 1
  store i32 %234, i32* %18, align 4
  %235 = sext i32 %233 to i64
  %236 = getelementptr inbounds i8, i8* %232, i64 %235
  store i8 32, i8* %236, align 1
  br label %218

237:                                              ; preds = %229
  store i32 0, i32* %17, align 4
  br label %238

238:                                              ; preds = %287, %237
  %239 = load i32, i32* %17, align 4
  %240 = load i32, i32* %10, align 4
  %241 = icmp slt i32 %239, %240
  br i1 %241, label %242, label %253

242:                                              ; preds = %238
  %243 = load i32, i32* %17, align 4
  %244 = sext i32 %243 to i64
  %245 = load i64, i64* %9, align 8
  %246 = icmp ult i64 %244, %245
  br i1 %246, label %247, label %253

247:                                              ; preds = %242
  %248 = load i32, i32* %18, align 4
  %249 = add nsw i32 %248, 2
  %250 = sext i32 %249 to i64
  %251 = load i64, i64* %13, align 8
  %252 = icmp ult i64 %250, %251
  br label %253

253:                                              ; preds = %247, %242, %238
  %254 = phi i1 [ false, %242 ], [ false, %238 ], [ %252, %247 ]
  br i1 %254, label %255, label %290

255:                                              ; preds = %253
  %256 = load i8*, i8** %15, align 8
  %257 = load i32, i32* %17, align 4
  %258 = sext i32 %257 to i64
  %259 = getelementptr inbounds i8, i8* %256, i64 %258
  %260 = load i8, i8* %259, align 1
  %261 = call i64 @isascii(i8 signext %260)
  %262 = icmp ne i64 %261, 0
  br i1 %262, label %263, label %278

263:                                              ; preds = %255
  %264 = load i8*, i8** %15, align 8
  %265 = load i32, i32* %17, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds i8, i8* %264, i64 %266
  %268 = load i8, i8* %267, align 1
  %269 = call i64 @isprint(i8 signext %268)
  %270 = icmp ne i64 %269, 0
  br i1 %270, label %271, label %278

271:                                              ; preds = %263
  %272 = load i8*, i8** %15, align 8
  %273 = load i32, i32* %17, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds i8, i8* %272, i64 %274
  %276 = load i8, i8* %275, align 1
  %277 = sext i8 %276 to i32
  br label %279

278:                                              ; preds = %263, %255
  br label %279

279:                                              ; preds = %278, %271
  %280 = phi i32 [ %277, %271 ], [ 46, %278 ]
  %281 = trunc i32 %280 to i8
  %282 = load i8*, i8** %12, align 8
  %283 = load i32, i32* %18, align 4
  %284 = add nsw i32 %283, 1
  store i32 %284, i32* %18, align 4
  %285 = sext i32 %283 to i64
  %286 = getelementptr inbounds i8, i8* %282, i64 %285
  store i8 %281, i8* %286, align 1
  br label %287

287:                                              ; preds = %279
  %288 = load i32, i32* %17, align 4
  %289 = add nsw i32 %288, 1
  store i32 %289, i32* %17, align 4
  br label %238

290:                                              ; preds = %253
  br label %291

291:                                              ; preds = %290, %216, %36
  %292 = load i8*, i8** %12, align 8
  %293 = load i32, i32* %18, align 4
  %294 = add nsw i32 %293, 1
  store i32 %294, i32* %18, align 4
  %295 = sext i32 %293 to i64
  %296 = getelementptr inbounds i8, i8* %292, i64 %295
  store i8 0, i8* %296, align 1
  ret void
}

declare dso_local i32 @snprintf(i8*, i64, i8*, i32) #1

declare dso_local signext i8 @hex_asc_hi(i8 signext) #1

declare dso_local signext i8 @hex_asc_lo(i8 signext) #1

declare dso_local i64 @isascii(i8 signext) #1

declare dso_local i64 @isprint(i8 signext) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
