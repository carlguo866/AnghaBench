; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_43345.c_do_race.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_43345.c_do_race.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@RACE_TIME = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@CLOCK_REALTIME = common dso_local global i32 0, align 4
@fd = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [23 x i8] c"timerfd craete failed!\00", align 1
@list_add_thread = common dso_local global i32 0, align 4
@count = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @do_race() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [2 x i32], align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [2 x i32], align 4
  %6 = bitcast [2 x i32]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 8, i1 false)
  store i32 0, i32* %3, align 4
  br label %7

7:                                                ; preds = %46, %0
  %8 = load i32, i32* %3, align 4
  %9 = load i32, i32* @RACE_TIME, align 4
  %10 = icmp slt i32 %8, %9
  br i1 %10, label %11, label %54

11:                                               ; preds = %7
  %12 = load i32, i32* %3, align 4
  %13 = srem i32 %12, 128
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = load i32, i32* %3, align 4
  %17 = call i32 @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 %16)
  br label %18

18:                                               ; preds = %15, %11
  %19 = load i32, i32* @CLOCK_REALTIME, align 4
  %20 = call i64 @timerfd_create(i32 %19, i32 0)
  store i64 %20, i64* @fd, align 8
  %21 = load i64, i64* @fd, align 8
  %22 = icmp slt i64 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  %24 = call i32 @perror(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0))
  store i32 -1, i32* %1, align 4
  br label %55

25:                                               ; preds = %18
  %26 = getelementptr inbounds [2 x i32], [2 x i32]* %5, i64 0, i64 0
  %27 = load i32, i32* @list_add_thread, align 4
  %28 = call i32 @pthread_create(i32* %26, i32* null, i32 %27, i8* inttoptr (i64 1 to i8*))
  %29 = getelementptr inbounds [2 x i32], [2 x i32]* %2, i64 0, i64 0
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds [2 x i32], [2 x i32]* %5, i64 0, i64 1
  %31 = load i32, i32* @list_add_thread, align 4
  %32 = call i32 @pthread_create(i32* %30, i32* null, i32 %31, i8* inttoptr (i64 2 to i8*))
  %33 = getelementptr inbounds [2 x i32], [2 x i32]* %2, i64 0, i64 1
  store i32 %32, i32* %33, align 4
  store i32 0, i32* %4, align 4
  br label %34

34:                                               ; preds = %43, %25
  %35 = load i32, i32* %4, align 4
  %36 = icmp slt i32 %35, 2
  br i1 %36, label %37, label %46

37:                                               ; preds = %34
  %38 = load i32, i32* %4, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [2 x i32], [2 x i32]* %5, i64 0, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = call i32 @pthread_join(i32 %41, i32* null)
  br label %43

43:                                               ; preds = %37
  %44 = load i32, i32* %4, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %4, align 4
  br label %34

46:                                               ; preds = %34
  %47 = load i64, i64* @fd, align 8
  %48 = call i32 @close(i64 %47)
  %49 = call i32 @usleep(i32 150000)
  %50 = load i32, i32* %3, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %3, align 4
  %52 = load i32, i32* @count, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* @count, align 4
  br label %7

54:                                               ; preds = %7
  store i32 0, i32* %1, align 4
  br label %55

55:                                               ; preds = %54, %23
  %56 = load i32, i32* %1, align 4
  ret i32 %56
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dso_local i32 @printf(i8*, i32) #2

declare dso_local i64 @timerfd_create(i32, i32) #2

declare dso_local i32 @perror(i8*) #2

declare !callback !2 dso_local i32 @pthread_create(i32*, i32*, i32, i8*) #2

declare dso_local i32 @pthread_join(i32, i32*) #2

declare dso_local i32 @close(i64) #2

declare dso_local i32 @usleep(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
!2 = !{!3}
!3 = !{i64 2, i64 3, i1 false}
