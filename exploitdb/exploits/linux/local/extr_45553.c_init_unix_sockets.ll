; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45553.c_init_unix_sockets.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45553.c_init_unix_sockets.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.realloc_thread_arg = type { i8*, %struct.timeval, i8* }
%struct.timeval = type { i64, i32 }
%struct.sockaddr = type { i32 }

@init_unix_sockets.sock_counter = internal global i32 0, align 4
@AF_UNIX = common dso_local global i32 0, align 4
@SOCK_DGRAM = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [11 x i8] c"[-] socket\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"sock_%lx_%d\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"[-] bind\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"[-] connect\00", align 1
@SOL_SOCKET = common dso_local global i32 0, align 4
@SO_SNDTIMEO = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [15 x i8] c"[-] setsockopt\00", align 1
@.str.5 = private unnamed_addr constant [40 x i8] c"[-] failed to initialize UNIX sockets!\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (%struct.realloc_thread_arg*)* @init_unix_sockets to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @init_unix_sockets(%struct.realloc_thread_arg* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.realloc_thread_arg*, align 8
  %4 = alloca %struct.timeval, align 8
  store %struct.realloc_thread_arg* %0, %struct.realloc_thread_arg** %3, align 8
  %5 = load i32, i32* @AF_UNIX, align 4
  %6 = load i32, i32* @SOCK_DGRAM, align 4
  %7 = call i8* @_socket(i32 %5, i32 %6, i32 0)
  %8 = load %struct.realloc_thread_arg*, %struct.realloc_thread_arg** %3, align 8
  %9 = getelementptr inbounds %struct.realloc_thread_arg, %struct.realloc_thread_arg* %8, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = icmp ult i8* %7, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = load i32, i32* @AF_UNIX, align 4
  %13 = load i32, i32* @SOCK_DGRAM, align 4
  %14 = call i8* @_socket(i32 %12, i32 %13, i32 0)
  %15 = load %struct.realloc_thread_arg*, %struct.realloc_thread_arg** %3, align 8
  %16 = getelementptr inbounds %struct.realloc_thread_arg, %struct.realloc_thread_arg* %15, i32 0, i32 2
  store i8* %14, i8** %16, align 8
  %17 = icmp ult i8* %14, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %11, %1
  %19 = call i32 @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0))
  br label %70

20:                                               ; preds = %11
  %21 = load %struct.realloc_thread_arg*, %struct.realloc_thread_arg** %3, align 8
  %22 = getelementptr inbounds %struct.realloc_thread_arg, %struct.realloc_thread_arg* %21, i32 0, i32 1
  %23 = call i32 @memset(%struct.timeval* %22, i32 0, i32 16)
  %24 = load i32, i32* @AF_UNIX, align 4
  %25 = load %struct.realloc_thread_arg*, %struct.realloc_thread_arg** %3, align 8
  %26 = getelementptr inbounds %struct.realloc_thread_arg, %struct.realloc_thread_arg* %25, i32 0, i32 1
  %27 = getelementptr inbounds %struct.timeval, %struct.timeval* %26, i32 0, i32 1
  store i32 %24, i32* %27, align 8
  %28 = load %struct.realloc_thread_arg*, %struct.realloc_thread_arg** %3, align 8
  %29 = getelementptr inbounds %struct.realloc_thread_arg, %struct.realloc_thread_arg* %28, i32 0, i32 1
  %30 = getelementptr inbounds %struct.timeval, %struct.timeval* %29, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i64 %31, 1
  %33 = call i32 (...) @_gettid()
  %34 = load i32, i32* @init_unix_sockets.sock_counter, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* @init_unix_sockets.sock_counter, align 4
  %36 = call i32 @sprintf(i64 %32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32 %33, i32 %35)
  %37 = load %struct.realloc_thread_arg*, %struct.realloc_thread_arg** %3, align 8
  %38 = getelementptr inbounds %struct.realloc_thread_arg, %struct.realloc_thread_arg* %37, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = load %struct.realloc_thread_arg*, %struct.realloc_thread_arg** %3, align 8
  %41 = getelementptr inbounds %struct.realloc_thread_arg, %struct.realloc_thread_arg* %40, i32 0, i32 1
  %42 = bitcast %struct.timeval* %41 to %struct.sockaddr*
  %43 = call i64 @_bind(i8* %39, %struct.sockaddr* %42, i32 16)
  %44 = icmp ne i64 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %20
  %46 = call i32 @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0))
  br label %70

47:                                               ; preds = %20
  %48 = load %struct.realloc_thread_arg*, %struct.realloc_thread_arg** %3, align 8
  %49 = getelementptr inbounds %struct.realloc_thread_arg, %struct.realloc_thread_arg* %48, i32 0, i32 2
  %50 = load i8*, i8** %49, align 8
  %51 = load %struct.realloc_thread_arg*, %struct.realloc_thread_arg** %3, align 8
  %52 = getelementptr inbounds %struct.realloc_thread_arg, %struct.realloc_thread_arg* %51, i32 0, i32 1
  %53 = bitcast %struct.timeval* %52 to %struct.sockaddr*
  %54 = call i64 @_connect(i8* %50, %struct.sockaddr* %53, i32 16)
  %55 = icmp ne i64 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %47
  %57 = call i32 @perror(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0))
  br label %70

58:                                               ; preds = %47
  %59 = call i32 @memset(%struct.timeval* %4, i32 0, i32 16)
  %60 = load %struct.realloc_thread_arg*, %struct.realloc_thread_arg** %3, align 8
  %61 = getelementptr inbounds %struct.realloc_thread_arg, %struct.realloc_thread_arg* %60, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  %63 = load i32, i32* @SOL_SOCKET, align 4
  %64 = load i32, i32* @SO_SNDTIMEO, align 4
  %65 = call i64 @_setsockopt(i8* %62, i32 %63, i32 %64, %struct.timeval* %4, i32 16)
  %66 = icmp ne i64 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %58
  %68 = call i32 @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0))
  br label %70

69:                                               ; preds = %58
  store i32 0, i32* %2, align 4
  br label %72

70:                                               ; preds = %67, %56, %45, %18
  %71 = call i32 @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i64 0, i64 0))
  store i32 -1, i32* %2, align 4
  br label %72

72:                                               ; preds = %70, %69
  %73 = load i32, i32* %2, align 4
  ret i32 %73
}

declare dso_local i8* @_socket(i32, i32, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @memset(%struct.timeval*, i32, i32) #1

declare dso_local i32 @sprintf(i64, i8*, i32, i32) #1

declare dso_local i32 @_gettid(...) #1

declare dso_local i64 @_bind(i8*, %struct.sockaddr*, i32) #1

declare dso_local i64 @_connect(i8*, %struct.sockaddr*, i32) #1

declare dso_local i64 @_setsockopt(i8*, i32, i32, %struct.timeval*, i32) #1

declare dso_local i32 @printf(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
