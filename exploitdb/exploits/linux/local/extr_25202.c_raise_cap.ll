; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_25202.c_raise_cap.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_25202.c_raise_cap.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.__user_cap_header_struct = type { i32, i64 }
%struct.__user_cap_data_struct = type { i64, i64, i64 }

@raise_cap.head = internal global %struct.__user_cap_header_struct zeroinitializer, align 8
@raise_cap.data = internal global %struct.__user_cap_data_struct zeroinitializer, align 8
@raise_cap.n = internal global %struct.__user_cap_data_struct zeroinitializer, align 8
@clear1 = common dso_local global i64* null, align 8
@clear2 = common dso_local global i64* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @raise_cap(i64* %0) #0 {
  %2 = alloca i64*, align 8
  %3 = alloca i32, align 4
  store i64* %0, i64** %2, align 8
  %4 = load i64*, i64** @clear1, align 8
  store i64 0, i64* %4, align 8
  %5 = load i64*, i64** @clear2, align 8
  store i64 0, i64* %5, align 8
  store i32 429392688, i32* getelementptr inbounds (%struct.__user_cap_header_struct, %struct.__user_cap_header_struct* @raise_cap.head, i32 0, i32 0), align 8
  store i64 0, i64* getelementptr inbounds (%struct.__user_cap_header_struct, %struct.__user_cap_header_struct* @raise_cap.head, i32 0, i32 1), align 8
  %6 = call i32 @capget(%struct.__user_cap_header_struct* @raise_cap.head, %struct.__user_cap_data_struct* @raise_cap.data)
  store i32 0, i32* %3, align 4
  br label %7

7:                                                ; preds = %49, %1
  %8 = load i32, i32* %3, align 4
  %9 = icmp slt i32 %8, 512
  br i1 %9, label %10, label %54

10:                                               ; preds = %7
  %11 = load i64*, i64** %2, align 8
  %12 = getelementptr inbounds i64, i64* %11, i64 0
  %13 = load i64, i64* %12, align 8
  %14 = load i64, i64* getelementptr inbounds (%struct.__user_cap_data_struct, %struct.__user_cap_data_struct* @raise_cap.data, i32 0, i32 0), align 8
  %15 = icmp eq i64 %13, %14
  br i1 %15, label %16, label %48

16:                                               ; preds = %10
  %17 = load i64*, i64** %2, align 8
  %18 = getelementptr inbounds i64, i64* %17, i64 1
  %19 = load i64, i64* %18, align 8
  %20 = load i64, i64* getelementptr inbounds (%struct.__user_cap_data_struct, %struct.__user_cap_data_struct* @raise_cap.data, i32 0, i32 1), align 8
  %21 = icmp eq i64 %19, %20
  br i1 %21, label %22, label %48

22:                                               ; preds = %16
  %23 = load i64*, i64** %2, align 8
  %24 = getelementptr inbounds i64, i64* %23, i64 2
  %25 = load i64, i64* %24, align 8
  %26 = load i64, i64* getelementptr inbounds (%struct.__user_cap_data_struct, %struct.__user_cap_data_struct* @raise_cap.data, i32 0, i32 2), align 8
  %27 = icmp eq i64 %25, %26
  br i1 %27, label %28, label %48

28:                                               ; preds = %22
  %29 = load i64*, i64** %2, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 0
  store i64 305402420, i64* %30, align 8
  %31 = call i32 @capget(%struct.__user_cap_header_struct* @raise_cap.head, %struct.__user_cap_data_struct* @raise_cap.n)
  %32 = load i64, i64* getelementptr inbounds (%struct.__user_cap_data_struct, %struct.__user_cap_data_struct* @raise_cap.n, i32 0, i32 0), align 8
  %33 = load i64*, i64** %2, align 8
  %34 = getelementptr inbounds i64, i64* %33, i64 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %32, %35
  br i1 %36, label %37, label %44

37:                                               ; preds = %28
  %38 = load i64*, i64** %2, align 8
  %39 = getelementptr inbounds i64, i64* %38, i64 2
  store i64 4294967295, i64* %39, align 8
  %40 = load i64*, i64** %2, align 8
  %41 = getelementptr inbounds i64, i64* %40, i64 1
  store i64 4294967295, i64* %41, align 8
  %42 = load i64*, i64** %2, align 8
  %43 = getelementptr inbounds i64, i64* %42, i64 0
  store i64 4294967295, i64* %43, align 8
  br label %55

44:                                               ; preds = %28
  %45 = load i64, i64* getelementptr inbounds (%struct.__user_cap_data_struct, %struct.__user_cap_data_struct* @raise_cap.data, i32 0, i32 0), align 8
  %46 = load i64*, i64** %2, align 8
  %47 = getelementptr inbounds i64, i64* %46, i64 0
  store i64 %45, i64* %47, align 8
  br label %48

48:                                               ; preds = %44, %22, %16, %10
  br label %49

49:                                               ; preds = %48
  %50 = load i32, i32* %3, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %3, align 4
  %52 = load i64*, i64** %2, align 8
  %53 = getelementptr inbounds i64, i64* %52, i32 1
  store i64* %53, i64** %2, align 8
  br label %7

54:                                               ; preds = %7
  br label %55

55:                                               ; preds = %54, %37
  ret void
}

declare dso_local i32 @capget(%struct.__user_cap_header_struct*, %struct.__user_cap_data_struct*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
