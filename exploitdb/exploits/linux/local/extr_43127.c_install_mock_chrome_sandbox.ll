; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_43127.c_install_mock_chrome_sandbox.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_43127.c_install_mock_chrome_sandbox.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sock_fprog = type { i16, i8* }

@.str = private unnamed_addr constant [22 x i8] c"chrome_seccomp_filter\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@SEEK_END = common dso_local global i32 0, align 4
@SEEK_SET = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [37 x i8] c"couldn't open chrome_seccomp_filter\0A\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"length mod 8 != 0?\0A\00", align 1
@CLONE_NEWUSER = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [23 x i8] c"unshare(CLONE_NEWUSER)\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"no new user...\0A\00", align 1
@CLONE_NEWNET = common dso_local global i32 0, align 4
@EXIT_FAILURE = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [21 x i8] c"/proc/self/setgroups\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"deny\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"write_file(/proc/self/set_groups)\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"/proc/self/uid_map\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"1000 %d 1\0A\00", align 1
@.str.11 = private unnamed_addr constant [31 x i8] c"write_file(/proc/self/uid_map)\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"/proc/self/gid_map\00", align 1
@.str.13 = private unnamed_addr constant [31 x i8] c"write_file(/proc/self/gid_map)\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"/proc/self/fdinfo\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"chroot\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"setgid\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"setuid\00", align 1
@PR_SET_NO_NEW_PRIVS = common dso_local global i32 0, align 4
@.str.18 = private unnamed_addr constant [25 x i8] c"no new privs failed? %d\0A\00", align 1
@__NR_seccomp = common dso_local global i32 0, align 4
@SECCOMP_SET_MODE_FILTER = common dso_local global i32 0, align 4
@.str.19 = private unnamed_addr constant [8 x i8] c"seccomp\00", align 1
@.str.20 = private unnamed_addr constant [53 x i8] c"Installed sandboxes. Seccomp, chroot, uid namespace\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @install_mock_chrome_sandbox() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca i64, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.sock_fprog, align 8
  store i8* null, i8** %1, align 8
  %9 = call i32* @fopen(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0))
  store i32* %9, i32** %3, align 8
  %10 = load i32*, i32** %3, align 8
  %11 = icmp ne i32* %10, null
  br i1 %11, label %12, label %33

12:                                               ; preds = %0
  %13 = load i32*, i32** %3, align 8
  %14 = load i32, i32* @SEEK_END, align 4
  %15 = call i32 @fseek(i32* %13, i32 0, i32 %14)
  %16 = load i32*, i32** %3, align 8
  %17 = call i64 @ftell(i32* %16)
  store i64 %17, i64* %2, align 8
  %18 = load i32*, i32** %3, align 8
  %19 = load i32, i32* @SEEK_SET, align 4
  %20 = call i32 @fseek(i32* %18, i32 0, i32 %19)
  %21 = load i64, i64* %2, align 8
  %22 = call i8* @malloc(i64 %21)
  store i8* %22, i8** %1, align 8
  %23 = load i8*, i8** %1, align 8
  %24 = icmp ne i8* %23, null
  br i1 %24, label %25, label %30

25:                                               ; preds = %12
  %26 = load i8*, i8** %1, align 8
  %27 = load i64, i64* %2, align 8
  %28 = load i32*, i32** %3, align 8
  %29 = call i32 @fread(i8* %26, i32 1, i64 %27, i32* %28)
  br label %30

30:                                               ; preds = %25, %12
  %31 = load i32*, i32** %3, align 8
  %32 = call i32 @fclose(i32* %31)
  br label %36

33:                                               ; preds = %0
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0))
  %35 = call i32 @exit(i32 -1) #3
  unreachable

36:                                               ; preds = %30
  %37 = load i64, i64* %2, align 8
  %38 = srem i64 %37, 8
  %39 = icmp ne i64 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %36
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0))
  %42 = call i32 @exit(i32 -1) #3
  unreachable

43:                                               ; preds = %36
  store i32 1000, i32* %4, align 4
  store i32 1000, i32* %5, align 4
  store i32 1, i32* %6, align 4
  %44 = load i32, i32* @CLONE_NEWUSER, align 4
  %45 = call i64 @unshare(i32 %44)
  %46 = icmp ne i64 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %43
  %48 = call i32 @perror(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0))
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0))
  store i32 0, i32* %6, align 4
  br label %50

50:                                               ; preds = %47, %43
  %51 = load i32, i32* @CLONE_NEWNET, align 4
  %52 = call i64 @unshare(i32 %51)
  %53 = icmp ne i64 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %50
  %55 = call i32 @perror(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0))
  %56 = load i32, i32* @EXIT_FAILURE, align 4
  %57 = call i32 @exit(i32 %56) #3
  unreachable

58:                                               ; preds = %50
  %59 = load i32, i32* %6, align 4
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %61, label %68

61:                                               ; preds = %58
  %62 = call i32 (i8*, i8*, ...) @write_file(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0))
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %61
  %65 = call i32 @perror(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0))
  %66 = load i32, i32* @EXIT_FAILURE, align 4
  %67 = call i32 @exit(i32 %66) #3
  unreachable

68:                                               ; preds = %61, %58
  %69 = load i32, i32* %6, align 4
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %71, label %79

71:                                               ; preds = %68
  %72 = load i32, i32* %4, align 4
  %73 = call i32 (i8*, i8*, ...) @write_file(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i32 %72)
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %71
  %76 = call i32 @perror(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11, i64 0, i64 0))
  %77 = load i32, i32* @EXIT_FAILURE, align 4
  %78 = call i32 @exit(i32 %77) #3
  unreachable

79:                                               ; preds = %71, %68
  %80 = load i32, i32* %6, align 4
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %90

82:                                               ; preds = %79
  %83 = load i32, i32* %5, align 4
  %84 = call i32 (i8*, i8*, ...) @write_file(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i32 %83)
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %90, label %86

86:                                               ; preds = %82
  %87 = call i32 @perror(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13, i64 0, i64 0))
  %88 = load i32, i32* @EXIT_FAILURE, align 4
  %89 = call i32 @exit(i32 %88) #3
  unreachable

90:                                               ; preds = %82, %79
  %91 = call i64 @chroot(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0))
  %92 = icmp ne i64 %91, 0
  br i1 %92, label %93, label %97

93:                                               ; preds = %90
  %94 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0))
  %95 = load i32, i32* @EXIT_FAILURE, align 4
  %96 = call i32 @exit(i32 %95) #3
  unreachable

97:                                               ; preds = %90
  %98 = load i32, i32* %6, align 4
  %99 = icmp ne i32 %98, 0
  br i1 %99, label %115, label %100

100:                                              ; preds = %97
  %101 = call i64 @setgid(i32 1000)
  %102 = icmp ne i64 %101, 0
  br i1 %102, label %103, label %107

103:                                              ; preds = %100
  %104 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0))
  %105 = load i32, i32* @EXIT_FAILURE, align 4
  %106 = call i32 @exit(i32 %105) #3
  unreachable

107:                                              ; preds = %100
  %108 = call i64 @setuid(i32 1000)
  %109 = icmp ne i64 %108, 0
  br i1 %109, label %110, label %114

110:                                              ; preds = %107
  %111 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0))
  %112 = load i32, i32* @EXIT_FAILURE, align 4
  %113 = call i32 @exit(i32 %112) #3
  unreachable

114:                                              ; preds = %107
  br label %115

115:                                              ; preds = %114, %97
  %116 = load i32, i32* @PR_SET_NO_NEW_PRIVS, align 4
  %117 = call i32 @prctl(i32 %116, i32 1, i32 0, i32 0, i32 0)
  store i32 %117, i32* %7, align 4
  %118 = load i32, i32* %7, align 4
  %119 = icmp ne i32 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %115
  %121 = load i32, i32* %7, align 4
  %122 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.18, i64 0, i64 0), i32 %121)
  br label %123

123:                                              ; preds = %120, %115
  %124 = getelementptr inbounds %struct.sock_fprog, %struct.sock_fprog* %8, i32 0, i32 0
  %125 = load i64, i64* %2, align 8
  %126 = sdiv i64 %125, 8
  %127 = trunc i64 %126 to i16
  store i16 %127, i16* %124, align 8
  %128 = getelementptr inbounds %struct.sock_fprog, %struct.sock_fprog* %8, i32 0, i32 1
  %129 = load i8*, i8** %1, align 8
  store i8* %129, i8** %128, align 8
  %130 = load i32, i32* @__NR_seccomp, align 4
  %131 = load i32, i32* @SECCOMP_SET_MODE_FILTER, align 4
  %132 = call i64 @syscall(i32 %130, i32 %131, i32 0, %struct.sock_fprog* %8)
  %133 = icmp ne i64 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %123
  %135 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i64 0, i64 0))
  %136 = call i32 @exit(i32 -2) #3
  unreachable

137:                                              ; preds = %123
  %138 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.20, i64 0, i64 0))
  ret void
}

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @fseek(i32*, i32, i32) #1

declare dso_local i64 @ftell(i32*) #1

declare dso_local i8* @malloc(i64) #1

declare dso_local i32 @fread(i8*, i32, i64, i32*) #1

declare dso_local i32 @fclose(i32*) #1

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i64 @unshare(i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @write_file(i8*, i8*, ...) #1

declare dso_local i64 @chroot(i8*) #1

declare dso_local i64 @setgid(i32) #1

declare dso_local i64 @setuid(i32) #1

declare dso_local i32 @prctl(i32, i32, i32, i32, i32) #1

declare dso_local i64 @syscall(i32, i32, i32, %struct.sock_fprog*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
