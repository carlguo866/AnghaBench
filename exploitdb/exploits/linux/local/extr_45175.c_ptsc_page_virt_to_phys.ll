; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45175.c_ptsc_page_virt_to_phys.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45175.c_ptsc_page_virt_to_phys.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ptsc = type { i64, %struct.pgd_entry }
%struct.pgd_entry = type { i32, %struct.pud_entry** }
%struct.pud_entry = type { i32, %struct.pmd_entry** }
%struct.pmd_entry = type { i32, %struct.TYPE_2__* }
%struct.TYPE_2__ = type { i64, i32, %struct.pte_entry* }
%struct.pte_entry = type { i32, i64* }

@.str = private unnamed_addr constant [34 x i8] c"looking up phys addr for %016lx:\0A\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c" pgd: %016lx, index: %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"   -> %016lx\0A\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c" not found, pgd is none\0A\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c" not found, pgd is not present\0A\00", align 1
@PHYSICAL_PAGE_MASK = common dso_local global i64 0, align 8
@.str.5 = private unnamed_addr constant [25 x i8] c" pud: %016lx, index: %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c" not found, pud is none\0A\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c" not found, pud is not present\0A\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c" pmd: %016lx, index: %d\0A\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c" not found, pmd is none\0A\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c" not found, pmd is not present\0A\00", align 1
@_PAGE_PSE = common dso_local global i32 0, align 4
@HUGE_PAGE_MASK = common dso_local global i64 0, align 8
@.str.11 = private unnamed_addr constant [21 x i8] c" phy: %016lx (huge)\0A\00", align 1
@.str.12 = private unnamed_addr constant [25 x i8] c" pte: %016lx, index: %d\0A\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c" not found, pte is none\0A\00", align 1
@.str.14 = private unnamed_addr constant [32 x i8] c" not found, pte is not present\0A\00", align 1
@PAGE_MASK = common dso_local global i64 0, align 8
@llvm.used = appending global [1 x i8*] [i8* bitcast (i64 (%struct.ptsc*, i64)* @ptsc_page_virt_to_phys to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @ptsc_page_virt_to_phys(%struct.ptsc* %0, i64 %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca %struct.ptsc*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.pgd_entry*, align 8
  %7 = alloca %struct.pud_entry*, align 8
  %8 = alloca %struct.pmd_entry*, align 8
  %9 = alloca %struct.pte_entry*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  store %struct.ptsc* %0, %struct.ptsc** %4, align 8
  store i64 %1, i64* %5, align 8
  %19 = load i64, i64* %5, align 8
  %20 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i64 %19)
  %21 = load %struct.ptsc*, %struct.ptsc** %4, align 8
  %22 = getelementptr inbounds %struct.ptsc, %struct.ptsc* %21, i32 0, i32 1
  store %struct.pgd_entry* %22, %struct.pgd_entry** %6, align 8
  %23 = load i64, i64* %5, align 8
  %24 = call i32 @pgd_index(i64 %23)
  store i32 %24, i32* %11, align 4
  %25 = load %struct.pgd_entry*, %struct.pgd_entry** %6, align 8
  %26 = getelementptr inbounds %struct.pgd_entry, %struct.pgd_entry* %25, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = load i32, i32* %11, align 4
  %29 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i32 %27, i32 %28)
  %30 = load %struct.pgd_entry*, %struct.pgd_entry** %6, align 8
  %31 = getelementptr inbounds %struct.pgd_entry, %struct.pgd_entry* %30, i32 0, i32 1
  %32 = load %struct.pud_entry**, %struct.pud_entry*** %31, align 8
  %33 = load i32, i32* %11, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %struct.pud_entry*, %struct.pud_entry** %32, i64 %34
  %36 = load %struct.pud_entry*, %struct.pud_entry** %35, align 8
  %37 = icmp ne %struct.pud_entry* %36, null
  br i1 %37, label %79, label %38

38:                                               ; preds = %2
  %39 = load %struct.pgd_entry*, %struct.pgd_entry** %6, align 8
  %40 = getelementptr inbounds %struct.pgd_entry, %struct.pgd_entry* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = sext i32 %41 to i64
  %43 = load i32, i32* %11, align 4
  %44 = sext i32 %43 to i64
  %45 = mul i64 %44, 8
  %46 = add i64 %42, %45
  %47 = trunc i64 %46 to i32
  %48 = call i64 @read_8(i32 %47)
  store i64 %48, i64* %12, align 8
  %49 = load i64, i64* %12, align 8
  %50 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 %49)
  %51 = load i64, i64* %12, align 8
  %52 = call i64 @pgd_none(i64 %51)
  %53 = icmp ne i64 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %38
  %55 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0))
  store i64 0, i64* %3, align 8
  br label %349

56:                                               ; preds = %38
  %57 = load i64, i64* %12, align 8
  %58 = call i32 @pgd_present(i64 %57)
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0))
  store i64 0, i64* %3, align 8
  br label %349

62:                                               ; preds = %56
  %63 = load %struct.ptsc*, %struct.ptsc** %4, align 8
  %64 = getelementptr inbounds %struct.ptsc, %struct.ptsc* %63, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = load i64, i64* %12, align 8
  %67 = load i64, i64* @PHYSICAL_PAGE_MASK, align 8
  %68 = and i64 %66, %67
  %69 = add i64 %65, %68
  store i64 %69, i64* %13, align 8
  %70 = load i64, i64* %13, align 8
  %71 = call %struct.pud_entry* @ptsc_alloc_pud_entry(i64 %70)
  store %struct.pud_entry* %71, %struct.pud_entry** %7, align 8
  %72 = load %struct.pud_entry*, %struct.pud_entry** %7, align 8
  %73 = load %struct.pgd_entry*, %struct.pgd_entry** %6, align 8
  %74 = getelementptr inbounds %struct.pgd_entry, %struct.pgd_entry* %73, i32 0, i32 1
  %75 = load %struct.pud_entry**, %struct.pud_entry*** %74, align 8
  %76 = load i32, i32* %11, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds %struct.pud_entry*, %struct.pud_entry** %75, i64 %77
  store %struct.pud_entry* %72, %struct.pud_entry** %78, align 8
  br label %79

79:                                               ; preds = %62, %2
  %80 = load %struct.pgd_entry*, %struct.pgd_entry** %6, align 8
  %81 = getelementptr inbounds %struct.pgd_entry, %struct.pgd_entry* %80, i32 0, i32 1
  %82 = load %struct.pud_entry**, %struct.pud_entry*** %81, align 8
  %83 = load i32, i32* %11, align 4
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds %struct.pud_entry*, %struct.pud_entry** %82, i64 %84
  %86 = load %struct.pud_entry*, %struct.pud_entry** %85, align 8
  store %struct.pud_entry* %86, %struct.pud_entry** %7, align 8
  %87 = load i64, i64* %5, align 8
  %88 = call i32 @pud_index(i64 %87)
  store i32 %88, i32* %11, align 4
  %89 = load %struct.pud_entry*, %struct.pud_entry** %7, align 8
  %90 = getelementptr inbounds %struct.pud_entry, %struct.pud_entry* %89, i32 0, i32 0
  %91 = load i32, i32* %90, align 8
  %92 = load i32, i32* %11, align 4
  %93 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i32 %91, i32 %92)
  %94 = load %struct.pud_entry*, %struct.pud_entry** %7, align 8
  %95 = getelementptr inbounds %struct.pud_entry, %struct.pud_entry* %94, i32 0, i32 1
  %96 = load %struct.pmd_entry**, %struct.pmd_entry*** %95, align 8
  %97 = load i32, i32* %11, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds %struct.pmd_entry*, %struct.pmd_entry** %96, i64 %98
  %100 = load %struct.pmd_entry*, %struct.pmd_entry** %99, align 8
  %101 = icmp ne %struct.pmd_entry* %100, null
  br i1 %101, label %143, label %102

102:                                              ; preds = %79
  %103 = load %struct.pud_entry*, %struct.pud_entry** %7, align 8
  %104 = getelementptr inbounds %struct.pud_entry, %struct.pud_entry* %103, i32 0, i32 0
  %105 = load i32, i32* %104, align 8
  %106 = sext i32 %105 to i64
  %107 = load i32, i32* %11, align 4
  %108 = sext i32 %107 to i64
  %109 = mul i64 %108, 8
  %110 = add i64 %106, %109
  %111 = trunc i64 %110 to i32
  %112 = call i64 @read_8(i32 %111)
  store i64 %112, i64* %14, align 8
  %113 = load i64, i64* %14, align 8
  %114 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 %113)
  %115 = load i64, i64* %14, align 8
  %116 = call i64 @pud_none(i64 %115)
  %117 = icmp ne i64 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %102
  %119 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0))
  store i64 0, i64* %3, align 8
  br label %349

120:                                              ; preds = %102
  %121 = load i64, i64* %14, align 8
  %122 = call i32 @pud_present(i64 %121)
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %120
  %125 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0))
  store i64 0, i64* %3, align 8
  br label %349

126:                                              ; preds = %120
  %127 = load %struct.ptsc*, %struct.ptsc** %4, align 8
  %128 = getelementptr inbounds %struct.ptsc, %struct.ptsc* %127, i32 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = load i64, i64* %14, align 8
  %131 = load i64, i64* @PHYSICAL_PAGE_MASK, align 8
  %132 = and i64 %130, %131
  %133 = add i64 %129, %132
  store i64 %133, i64* %15, align 8
  %134 = load i64, i64* %15, align 8
  %135 = call %struct.pmd_entry* @ptsc_alloc_pmd_entry(i64 %134)
  store %struct.pmd_entry* %135, %struct.pmd_entry** %8, align 8
  %136 = load %struct.pmd_entry*, %struct.pmd_entry** %8, align 8
  %137 = load %struct.pud_entry*, %struct.pud_entry** %7, align 8
  %138 = getelementptr inbounds %struct.pud_entry, %struct.pud_entry* %137, i32 0, i32 1
  %139 = load %struct.pmd_entry**, %struct.pmd_entry*** %138, align 8
  %140 = load i32, i32* %11, align 4
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds %struct.pmd_entry*, %struct.pmd_entry** %139, i64 %141
  store %struct.pmd_entry* %136, %struct.pmd_entry** %142, align 8
  br label %143

143:                                              ; preds = %126, %79
  %144 = load %struct.pud_entry*, %struct.pud_entry** %7, align 8
  %145 = getelementptr inbounds %struct.pud_entry, %struct.pud_entry* %144, i32 0, i32 1
  %146 = load %struct.pmd_entry**, %struct.pmd_entry*** %145, align 8
  %147 = load i32, i32* %11, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds %struct.pmd_entry*, %struct.pmd_entry** %146, i64 %148
  %150 = load %struct.pmd_entry*, %struct.pmd_entry** %149, align 8
  store %struct.pmd_entry* %150, %struct.pmd_entry** %8, align 8
  %151 = load i64, i64* %5, align 8
  %152 = call i32 @pmd_index(i64 %151)
  store i32 %152, i32* %11, align 4
  %153 = load %struct.pmd_entry*, %struct.pmd_entry** %8, align 8
  %154 = getelementptr inbounds %struct.pmd_entry, %struct.pmd_entry* %153, i32 0, i32 0
  %155 = load i32, i32* %154, align 8
  %156 = load i32, i32* %11, align 4
  %157 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i32 %155, i32 %156)
  %158 = load %struct.pmd_entry*, %struct.pmd_entry** %8, align 8
  %159 = getelementptr inbounds %struct.pmd_entry, %struct.pmd_entry* %158, i32 0, i32 1
  %160 = load %struct.TYPE_2__*, %struct.TYPE_2__** %159, align 8
  %161 = load i32, i32* %11, align 4
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %160, i64 %162
  %164 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %163, i32 0, i32 2
  %165 = load %struct.pte_entry*, %struct.pte_entry** %164, align 8
  %166 = icmp ne %struct.pte_entry* %165, null
  br i1 %166, label %251, label %167

167:                                              ; preds = %143
  %168 = load %struct.pmd_entry*, %struct.pmd_entry** %8, align 8
  %169 = getelementptr inbounds %struct.pmd_entry, %struct.pmd_entry* %168, i32 0, i32 0
  %170 = load i32, i32* %169, align 8
  %171 = sext i32 %170 to i64
  %172 = load i32, i32* %11, align 4
  %173 = sext i32 %172 to i64
  %174 = mul i64 %173, 8
  %175 = add i64 %171, %174
  %176 = trunc i64 %175 to i32
  %177 = call i64 @read_8(i32 %176)
  store i64 %177, i64* %16, align 8
  %178 = load i64, i64* %16, align 8
  %179 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 %178)
  %180 = load i64, i64* %16, align 8
  %181 = call i64 @pmd_none(i64 %180)
  %182 = icmp ne i64 %181, 0
  br i1 %182, label %183, label %185

183:                                              ; preds = %167
  %184 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0))
  store i64 0, i64* %3, align 8
  br label %349

185:                                              ; preds = %167
  %186 = load i64, i64* %16, align 8
  %187 = call i32 @pmd_present(i64 %186)
  %188 = icmp ne i32 %187, 0
  br i1 %188, label %191, label %189

189:                                              ; preds = %185
  %190 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0))
  store i64 0, i64* %3, align 8
  br label %349

191:                                              ; preds = %185
  %192 = load i64, i64* %16, align 8
  %193 = call i32 @pmd_flags(i64 %192)
  %194 = load i32, i32* @_PAGE_PSE, align 4
  %195 = and i32 %193, %194
  %196 = icmp ne i32 %195, 0
  br i1 %196, label %197, label %225

197:                                              ; preds = %191
  %198 = load %struct.ptsc*, %struct.ptsc** %4, align 8
  %199 = getelementptr inbounds %struct.ptsc, %struct.ptsc* %198, i32 0, i32 0
  %200 = load i64, i64* %199, align 8
  %201 = load i64, i64* %16, align 8
  %202 = load i64, i64* @PHYSICAL_PAGE_MASK, align 8
  %203 = and i64 %201, %202
  %204 = add i64 %200, %203
  %205 = load i64, i64* %5, align 8
  %206 = load i64, i64* @HUGE_PAGE_MASK, align 8
  %207 = xor i64 %206, -1
  %208 = and i64 %205, %207
  %209 = add i64 %204, %208
  store i64 %209, i64* %10, align 8
  %210 = load i64, i64* %10, align 8
  %211 = load %struct.pmd_entry*, %struct.pmd_entry** %8, align 8
  %212 = getelementptr inbounds %struct.pmd_entry, %struct.pmd_entry* %211, i32 0, i32 1
  %213 = load %struct.TYPE_2__*, %struct.TYPE_2__** %212, align 8
  %214 = load i32, i32* %11, align 4
  %215 = sext i32 %214 to i64
  %216 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %213, i64 %215
  %217 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %216, i32 0, i32 0
  store i64 %210, i64* %217, align 8
  %218 = load %struct.pmd_entry*, %struct.pmd_entry** %8, align 8
  %219 = getelementptr inbounds %struct.pmd_entry, %struct.pmd_entry* %218, i32 0, i32 1
  %220 = load %struct.TYPE_2__*, %struct.TYPE_2__** %219, align 8
  %221 = load i32, i32* %11, align 4
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %220, i64 %222
  %224 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %223, i32 0, i32 1
  store i32 1, i32* %224, align 8
  br label %250

225:                                              ; preds = %191
  %226 = load %struct.ptsc*, %struct.ptsc** %4, align 8
  %227 = getelementptr inbounds %struct.ptsc, %struct.ptsc* %226, i32 0, i32 0
  %228 = load i64, i64* %227, align 8
  %229 = load i64, i64* %16, align 8
  %230 = load i64, i64* @PHYSICAL_PAGE_MASK, align 8
  %231 = and i64 %229, %230
  %232 = add i64 %228, %231
  store i64 %232, i64* %17, align 8
  %233 = load i64, i64* %17, align 8
  %234 = call %struct.pte_entry* @ptsc_alloc_pte_entry(i64 %233)
  store %struct.pte_entry* %234, %struct.pte_entry** %9, align 8
  %235 = load %struct.pte_entry*, %struct.pte_entry** %9, align 8
  %236 = load %struct.pmd_entry*, %struct.pmd_entry** %8, align 8
  %237 = getelementptr inbounds %struct.pmd_entry, %struct.pmd_entry* %236, i32 0, i32 1
  %238 = load %struct.TYPE_2__*, %struct.TYPE_2__** %237, align 8
  %239 = load i32, i32* %11, align 4
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %238, i64 %240
  %242 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %241, i32 0, i32 2
  store %struct.pte_entry* %235, %struct.pte_entry** %242, align 8
  %243 = load %struct.pmd_entry*, %struct.pmd_entry** %8, align 8
  %244 = getelementptr inbounds %struct.pmd_entry, %struct.pmd_entry* %243, i32 0, i32 1
  %245 = load %struct.TYPE_2__*, %struct.TYPE_2__** %244, align 8
  %246 = load i32, i32* %11, align 4
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %245, i64 %247
  %249 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %248, i32 0, i32 1
  store i32 0, i32* %249, align 8
  br label %250

250:                                              ; preds = %225, %197
  br label %251

251:                                              ; preds = %250, %143
  %252 = load %struct.pmd_entry*, %struct.pmd_entry** %8, align 8
  %253 = getelementptr inbounds %struct.pmd_entry, %struct.pmd_entry* %252, i32 0, i32 1
  %254 = load %struct.TYPE_2__*, %struct.TYPE_2__** %253, align 8
  %255 = load i32, i32* %11, align 4
  %256 = sext i32 %255 to i64
  %257 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %254, i64 %256
  %258 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %257, i32 0, i32 1
  %259 = load i32, i32* %258, align 8
  %260 = icmp ne i32 %259, 0
  br i1 %260, label %261, label %272

261:                                              ; preds = %251
  %262 = load i64, i64* %10, align 8
  %263 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i64 %262)
  %264 = load %struct.pmd_entry*, %struct.pmd_entry** %8, align 8
  %265 = getelementptr inbounds %struct.pmd_entry, %struct.pmd_entry* %264, i32 0, i32 1
  %266 = load %struct.TYPE_2__*, %struct.TYPE_2__** %265, align 8
  %267 = load i32, i32* %11, align 4
  %268 = sext i32 %267 to i64
  %269 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %266, i64 %268
  %270 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %269, i32 0, i32 0
  %271 = load i64, i64* %270, align 8
  store i64 %271, i64* %3, align 8
  br label %349

272:                                              ; preds = %251
  %273 = load %struct.pmd_entry*, %struct.pmd_entry** %8, align 8
  %274 = getelementptr inbounds %struct.pmd_entry, %struct.pmd_entry* %273, i32 0, i32 1
  %275 = load %struct.TYPE_2__*, %struct.TYPE_2__** %274, align 8
  %276 = load i32, i32* %11, align 4
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %275, i64 %277
  %279 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %278, i32 0, i32 2
  %280 = load %struct.pte_entry*, %struct.pte_entry** %279, align 8
  store %struct.pte_entry* %280, %struct.pte_entry** %9, align 8
  %281 = load i64, i64* %5, align 8
  %282 = call i32 @pte_index(i64 %281)
  store i32 %282, i32* %11, align 4
  %283 = load %struct.pte_entry*, %struct.pte_entry** %9, align 8
  %284 = getelementptr inbounds %struct.pte_entry, %struct.pte_entry* %283, i32 0, i32 0
  %285 = load i32, i32* %284, align 8
  %286 = load i32, i32* %11, align 4
  %287 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.12, i64 0, i64 0), i32 %285, i32 %286)
  %288 = load %struct.pte_entry*, %struct.pte_entry** %9, align 8
  %289 = getelementptr inbounds %struct.pte_entry, %struct.pte_entry* %288, i32 0, i32 1
  %290 = load i64*, i64** %289, align 8
  %291 = load i32, i32* %11, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds i64, i64* %290, i64 %292
  %294 = load i64, i64* %293, align 8
  %295 = icmp ne i64 %294, 0
  br i1 %295, label %340, label %296

296:                                              ; preds = %272
  %297 = load %struct.pte_entry*, %struct.pte_entry** %9, align 8
  %298 = getelementptr inbounds %struct.pte_entry, %struct.pte_entry* %297, i32 0, i32 0
  %299 = load i32, i32* %298, align 8
  %300 = sext i32 %299 to i64
  %301 = load i32, i32* %11, align 4
  %302 = sext i32 %301 to i64
  %303 = mul i64 %302, 8
  %304 = add i64 %300, %303
  %305 = trunc i64 %304 to i32
  %306 = call i64 @read_8(i32 %305)
  store i64 %306, i64* %18, align 8
  %307 = load i64, i64* %18, align 8
  %308 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i64 %307)
  %309 = load i64, i64* %18, align 8
  %310 = call i64 @pte_none(i64 %309)
  %311 = icmp ne i64 %310, 0
  br i1 %311, label %312, label %314

312:                                              ; preds = %296
  %313 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0))
  store i64 0, i64* %3, align 8
  br label %349

314:                                              ; preds = %296
  %315 = load i64, i64* %18, align 8
  %316 = call i32 @pte_present(i64 %315)
  %317 = icmp ne i32 %316, 0
  br i1 %317, label %320, label %318

318:                                              ; preds = %314
  %319 = call i32 (i8*, ...) @debug1(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i64 0, i64 0))
  store i64 0, i64* %3, align 8
  br label %349

320:                                              ; preds = %314
  %321 = load %struct.ptsc*, %struct.ptsc** %4, align 8
  %322 = getelementptr inbounds %struct.ptsc, %struct.ptsc* %321, i32 0, i32 0
  %323 = load i64, i64* %322, align 8
  %324 = load i64, i64* %18, align 8
  %325 = load i64, i64* @PHYSICAL_PAGE_MASK, align 8
  %326 = and i64 %324, %325
  %327 = add i64 %323, %326
  %328 = load i64, i64* %5, align 8
  %329 = load i64, i64* @PAGE_MASK, align 8
  %330 = xor i64 %329, -1
  %331 = and i64 %328, %330
  %332 = add i64 %327, %331
  store i64 %332, i64* %10, align 8
  %333 = load i64, i64* %10, align 8
  %334 = load %struct.pte_entry*, %struct.pte_entry** %9, align 8
  %335 = getelementptr inbounds %struct.pte_entry, %struct.pte_entry* %334, i32 0, i32 1
  %336 = load i64*, i64** %335, align 8
  %337 = load i32, i32* %11, align 4
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds i64, i64* %336, i64 %338
  store i64 %333, i64* %339, align 8
  br label %340

340:                                              ; preds = %320, %272
  %341 = load %struct.pte_entry*, %struct.pte_entry** %9, align 8
  %342 = getelementptr inbounds %struct.pte_entry, %struct.pte_entry* %341, i32 0, i32 1
  %343 = load i64*, i64** %342, align 8
  %344 = load i32, i32* %11, align 4
  %345 = sext i32 %344 to i64
  %346 = getelementptr inbounds i64, i64* %343, i64 %345
  %347 = load i64, i64* %346, align 8
  store i64 %347, i64* %10, align 8
  %348 = load i64, i64* %10, align 8
  store i64 %348, i64* %3, align 8
  br label %349

349:                                              ; preds = %340, %318, %312, %261, %189, %183, %124, %118, %60, %54
  %350 = load i64, i64* %3, align 8
  ret i64 %350
}

declare dso_local i32 @debug1(i8*, ...) #1

declare dso_local i32 @pgd_index(i64) #1

declare dso_local i64 @read_8(i32) #1

declare dso_local i64 @pgd_none(i64) #1

declare dso_local i32 @pgd_present(i64) #1

declare dso_local %struct.pud_entry* @ptsc_alloc_pud_entry(i64) #1

declare dso_local i32 @pud_index(i64) #1

declare dso_local i64 @pud_none(i64) #1

declare dso_local i32 @pud_present(i64) #1

declare dso_local %struct.pmd_entry* @ptsc_alloc_pmd_entry(i64) #1

declare dso_local i32 @pmd_index(i64) #1

declare dso_local i64 @pmd_none(i64) #1

declare dso_local i32 @pmd_present(i64) #1

declare dso_local i32 @pmd_flags(i64) #1

declare dso_local %struct.pte_entry* @ptsc_alloc_pte_entry(i64) #1

declare dso_local i32 @pte_index(i64) #1

declare dso_local i64 @pte_none(i64) #1

declare dso_local i32 @pte_present(i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
