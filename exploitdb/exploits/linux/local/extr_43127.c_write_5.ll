; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_43127.c_write_5.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_43127.c_write_5.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [23 x i8] c"cannot write that val\0A\00", align 1
@just_exit = common dso_local global i32 0, align 4
@new_stack = common dso_local global i32* null, align 8
@CLONE_VM = common dso_local global i32 0, align 4
@SIGCHLD = common dso_local global i32 0, align 4
@SYS_waitid = common dso_local global i32 0, align 4
@P_PID = common dso_local global i32 0, align 4
@WEXITED = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @write_5(i64 %0, i64 %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca [20 x i64], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  %9 = load i64, i64* %4, align 8
  %10 = and i64 %9, 16777215
  %11 = icmp ne i64 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = call i32 @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0))
  %14 = call i32 @exit(i32 -1) #3
  unreachable

15:                                               ; preds = %2
  store i32 0, i32* %6, align 4
  store i32 3, i32* %6, align 4
  br label %16

16:                                               ; preds = %64, %15
  %17 = load i32, i32* %6, align 4
  %18 = icmp slt i32 %17, 8
  br i1 %18, label %19, label %67

19:                                               ; preds = %16
  %20 = load i64, i64* %4, align 8
  %21 = load i32, i32* %6, align 4
  %22 = mul nsw i32 8, %21
  %23 = zext i32 %22 to i64
  %24 = lshr i64 %20, %23
  %25 = and i64 %24, 255
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %7, align 4
  br label %27

27:                                               ; preds = %19, %62
  %28 = load i32, i32* @just_exit, align 4
  %29 = load i32*, i32** @new_stack, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 5000
  %31 = load i32, i32* @CLONE_VM, align 4
  %32 = load i32, i32* @SIGCHLD, align 4
  %33 = or i32 %31, %32
  %34 = call i32 @clone(i32 %28, i32* %30, i32 %33, i32* null)
  store i32 %34, i32* %8, align 4
  %35 = load i32, i32* %8, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %27
  %38 = call i32 @exit(i32 0) #3
  unreachable

39:                                               ; preds = %27
  %40 = load i32, i32* %8, align 4
  %41 = and i32 %40, 255
  %42 = load i32, i32* %7, align 4
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %44, label %55

44:                                               ; preds = %39
  %45 = load i32, i32* @SYS_waitid, align 4
  %46 = load i32, i32* @P_PID, align 4
  %47 = load i32, i32* %8, align 4
  %48 = load i64, i64* %3, align 8
  %49 = sub i64 %48, 16
  %50 = load i32, i32* %6, align 4
  %51 = sext i32 %50 to i64
  %52 = add i64 %49, %51
  %53 = load i32, i32* @WEXITED, align 4
  %54 = call i32 (i32, i32, i32, ...) @syscall(i32 %45, i32 %46, i32 %47, i64 %52, i32 %53, i8* null)
  br label %63

55:                                               ; preds = %39
  %56 = load i32, i32* @SYS_waitid, align 4
  %57 = load i32, i32* @P_PID, align 4
  %58 = load i32, i32* %8, align 4
  %59 = getelementptr inbounds [20 x i64], [20 x i64]* %5, i64 0, i64 0
  %60 = load i32, i32* @WEXITED, align 4
  %61 = call i32 (i32, i32, i32, ...) @syscall(i32 %56, i32 %57, i32 %58, i64* %59, i32 %60, i8* null)
  br label %62

62:                                               ; preds = %55
  br label %27

63:                                               ; preds = %44
  br label %64

64:                                               ; preds = %63
  %65 = load i32, i32* %6, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %6, align 4
  br label %16

67:                                               ; preds = %16
  ret void
}

declare dso_local i32 @printf(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @clone(i32, i32*, i32, i32*) #1

declare dso_local i32 @syscall(i32, i32, i32, ...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
