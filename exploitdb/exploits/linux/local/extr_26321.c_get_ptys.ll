; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_26321.c_get_ptys.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_26321.c_get_ptys.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@helper_pid = common dso_local global i32 0, align 4
@helper_socket_protocol = common dso_local global i32* null, align 8
@helper_socket_fdpassing = common dso_local global i32* null, align 8
@.str = private unnamed_addr constant [27 x i8] c"/usr/sbin/gnome-pty-helper\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"gnome-pty-helper\00", align 1
@F_SETFD = common dso_local global i32 0, align 4
@FD_CLOEXEC = common dso_local global i32 0, align 4
@GNOME_PTY_OPEN_NO_DB_UPDATE = common dso_local global i32 0, align 4
@ZVT_TERM_DO_UTMP_LOG = common dso_local global i32 0, align 4
@ZVT_TERM_DO_WTMP_LOG = common dso_local global i32 0, align 4
@ZVT_TERM_DO_LASTLOG = common dso_local global i32 0, align 4
@GNOME_PTY_OPEN_PTY_LASTLOGUWTMP = common dso_local global i32 0, align 4
@GNOME_PTY_OPEN_PTY_UWTMP = common dso_local global i32 0, align 4
@GNOME_PTY_OPEN_PTY_LASTLOGUTMP = common dso_local global i32 0, align 4
@GNOME_PTY_OPEN_PTY_UTMP = common dso_local global i32 0, align 4
@GNOME_PTY_OPEN_PTY_LASTLOGWTMP = common dso_local global i32 0, align 4
@GNOME_PTY_OPEN_PTY_WTMP = common dso_local global i32 0, align 4
@GNOME_PTY_OPEN_PTY_LASTLOG = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (i8* (i32*, i32*, i32)* @get_ptys to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @get_ptys(i32* %0, i32* %1, i32 %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i8*, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32 %2, i32* %7, align 4
  %12 = load i32, i32* @helper_pid, align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %15

14:                                               ; preds = %3
  store i8* null, i8** %4, align 8
  br label %224

15:                                               ; preds = %3
  %16 = load i32, i32* @helper_pid, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %111

18:                                               ; preds = %15
  %19 = load i32*, i32** @helper_socket_protocol, align 8
  %20 = call i32 @s_pipe(i32* %19)
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  store i8* null, i8** %4, align 8
  br label %224

23:                                               ; preds = %18
  %24 = load i32*, i32** @helper_socket_fdpassing, align 8
  %25 = call i32 @s_pipe(i32* %24)
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %27, label %36

27:                                               ; preds = %23
  %28 = load i32*, i32** @helper_socket_protocol, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 0
  %30 = load i32, i32* %29, align 4
  %31 = call i32 @close(i32 %30)
  %32 = load i32*, i32** @helper_socket_protocol, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 1
  %34 = load i32, i32* %33, align 4
  %35 = call i32 @close(i32 %34)
  store i8* null, i8** %4, align 8
  br label %224

36:                                               ; preds = %23
  %37 = call i32 (...) @fork()
  store i32 %37, i32* @helper_pid, align 4
  %38 = load i32, i32* @helper_pid, align 4
  %39 = icmp eq i32 %38, -1
  br i1 %39, label %40, label %57

40:                                               ; preds = %36
  %41 = load i32*, i32** @helper_socket_protocol, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 0
  %43 = load i32, i32* %42, align 4
  %44 = call i32 @close(i32 %43)
  %45 = load i32*, i32** @helper_socket_protocol, align 8
  %46 = getelementptr inbounds i32, i32* %45, i64 1
  %47 = load i32, i32* %46, align 4
  %48 = call i32 @close(i32 %47)
  %49 = load i32*, i32** @helper_socket_fdpassing, align 8
  %50 = getelementptr inbounds i32, i32* %49, i64 0
  %51 = load i32, i32* %50, align 4
  %52 = call i32 @close(i32 %51)
  %53 = load i32*, i32** @helper_socket_fdpassing, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 1
  %55 = load i32, i32* %54, align 4
  %56 = call i32 @close(i32 %55)
  store i8* null, i8** %4, align 8
  br label %224

57:                                               ; preds = %36
  %58 = load i32, i32* @helper_pid, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %89

60:                                               ; preds = %57
  %61 = call i32 @close(i32 0)
  %62 = call i32 @close(i32 1)
  %63 = load i32*, i32** @helper_socket_protocol, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 1
  %65 = load i32, i32* %64, align 4
  %66 = call i32 @dup2(i32 %65, i32 0)
  %67 = load i32*, i32** @helper_socket_fdpassing, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 1
  %69 = load i32, i32* %68, align 4
  %70 = call i32 @dup2(i32 %69, i32 1)
  %71 = load i32*, i32** @helper_socket_protocol, align 8
  %72 = getelementptr inbounds i32, i32* %71, i64 0
  %73 = load i32, i32* %72, align 4
  %74 = call i32 @close(i32 %73)
  %75 = load i32*, i32** @helper_socket_protocol, align 8
  %76 = getelementptr inbounds i32, i32* %75, i64 1
  %77 = load i32, i32* %76, align 4
  %78 = call i32 @close(i32 %77)
  %79 = load i32*, i32** @helper_socket_fdpassing, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 0
  %81 = load i32, i32* %80, align 4
  %82 = call i32 @close(i32 %81)
  %83 = load i32*, i32** @helper_socket_fdpassing, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 1
  %85 = load i32, i32* %84, align 4
  %86 = call i32 @close(i32 %85)
  %87 = call i32 @execl(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i32* null)
  %88 = call i32 @exit(i32 1) #3
  unreachable

89:                                               ; preds = %57
  %90 = load i32*, i32** @helper_socket_fdpassing, align 8
  %91 = getelementptr inbounds i32, i32* %90, i64 1
  %92 = load i32, i32* %91, align 4
  %93 = call i32 @close(i32 %92)
  %94 = load i32*, i32** @helper_socket_protocol, align 8
  %95 = getelementptr inbounds i32, i32* %94, i64 1
  %96 = load i32, i32* %95, align 4
  %97 = call i32 @close(i32 %96)
  %98 = load i32*, i32** @helper_socket_protocol, align 8
  %99 = getelementptr inbounds i32, i32* %98, i64 0
  %100 = load i32, i32* %99, align 4
  %101 = load i32, i32* @F_SETFD, align 4
  %102 = load i32, i32* @FD_CLOEXEC, align 4
  %103 = call i32 @fcntl(i32 %100, i32 %101, i32 %102)
  %104 = load i32*, i32** @helper_socket_fdpassing, align 8
  %105 = getelementptr inbounds i32, i32* %104, i64 0
  %106 = load i32, i32* %105, align 4
  %107 = load i32, i32* @F_SETFD, align 4
  %108 = load i32, i32* @FD_CLOEXEC, align 4
  %109 = call i32 @fcntl(i32 %106, i32 %107, i32 %108)
  br label %110

110:                                              ; preds = %89
  br label %111

111:                                              ; preds = %110, %15
  %112 = load i32, i32* @GNOME_PTY_OPEN_NO_DB_UPDATE, align 4
  store i32 %112, i32* %8, align 4
  %113 = load i32, i32* %7, align 4
  %114 = load i32, i32* @ZVT_TERM_DO_UTMP_LOG, align 4
  %115 = and i32 %113, %114
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %117, label %145

117:                                              ; preds = %111
  %118 = load i32, i32* %7, align 4
  %119 = load i32, i32* @ZVT_TERM_DO_WTMP_LOG, align 4
  %120 = load i32, i32* @ZVT_TERM_DO_LASTLOG, align 4
  %121 = or i32 %119, %120
  %122 = and i32 %118, %121
  %123 = icmp ne i32 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %117
  %125 = load i32, i32* @GNOME_PTY_OPEN_PTY_LASTLOGUWTMP, align 4
  store i32 %125, i32* %8, align 4
  br label %144

126:                                              ; preds = %117
  %127 = load i32, i32* %7, align 4
  %128 = load i32, i32* @ZVT_TERM_DO_WTMP_LOG, align 4
  %129 = and i32 %127, %128
  %130 = icmp ne i32 %129, 0
  br i1 %130, label %131, label %133

131:                                              ; preds = %126
  %132 = load i32, i32* @GNOME_PTY_OPEN_PTY_UWTMP, align 4
  store i32 %132, i32* %8, align 4
  br label %143

133:                                              ; preds = %126
  %134 = load i32, i32* %7, align 4
  %135 = load i32, i32* @ZVT_TERM_DO_LASTLOG, align 4
  %136 = and i32 %134, %135
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %133
  %139 = load i32, i32* @GNOME_PTY_OPEN_PTY_LASTLOGUTMP, align 4
  store i32 %139, i32* %8, align 4
  br label %142

140:                                              ; preds = %133
  %141 = load i32, i32* @GNOME_PTY_OPEN_PTY_UTMP, align 4
  store i32 %141, i32* %8, align 4
  br label %142

142:                                              ; preds = %140, %138
  br label %143

143:                                              ; preds = %142, %131
  br label %144

144:                                              ; preds = %143, %124
  br label %177

145:                                              ; preds = %111
  %146 = load i32, i32* %7, align 4
  %147 = load i32, i32* @ZVT_TERM_DO_WTMP_LOG, align 4
  %148 = and i32 %146, %147
  %149 = icmp ne i32 %148, 0
  br i1 %149, label %150, label %168

150:                                              ; preds = %145
  %151 = load i32, i32* %7, align 4
  %152 = load i32, i32* @ZVT_TERM_DO_WTMP_LOG, align 4
  %153 = load i32, i32* @ZVT_TERM_DO_LASTLOG, align 4
  %154 = or i32 %152, %153
  %155 = and i32 %151, %154
  %156 = icmp ne i32 %155, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %150
  %158 = load i32, i32* @GNOME_PTY_OPEN_PTY_LASTLOGWTMP, align 4
  store i32 %158, i32* %8, align 4
  br label %167

159:                                              ; preds = %150
  %160 = load i32, i32* %7, align 4
  %161 = load i32, i32* @ZVT_TERM_DO_WTMP_LOG, align 4
  %162 = and i32 %160, %161
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %159
  %165 = load i32, i32* @GNOME_PTY_OPEN_PTY_WTMP, align 4
  store i32 %165, i32* %8, align 4
  br label %166

166:                                              ; preds = %164, %159
  br label %167

167:                                              ; preds = %166, %157
  br label %176

168:                                              ; preds = %145
  %169 = load i32, i32* %7, align 4
  %170 = load i32, i32* @ZVT_TERM_DO_LASTLOG, align 4
  %171 = and i32 %169, %170
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %173, label %175

173:                                              ; preds = %168
  %174 = load i32, i32* @GNOME_PTY_OPEN_PTY_LASTLOG, align 4
  store i32 %174, i32* %8, align 4
  br label %175

175:                                              ; preds = %173, %168
  br label %176

176:                                              ; preds = %175, %167
  br label %177

177:                                              ; preds = %176, %144
  %178 = load i32*, i32** @helper_socket_protocol, align 8
  %179 = getelementptr inbounds i32, i32* %178, i64 0
  %180 = load i32, i32* %179, align 4
  %181 = call i64 @write(i32 %180, i32* %8, i32 4)
  %182 = icmp slt i64 %181, 0
  br i1 %182, label %183, label %184

183:                                              ; preds = %177
  store i8* null, i8** %4, align 8
  br label %224

184:                                              ; preds = %177
  %185 = load i32*, i32** @helper_socket_protocol, align 8
  %186 = getelementptr inbounds i32, i32* %185, i64 0
  %187 = load i32, i32* %186, align 4
  %188 = call i32 (i32, ...) @read(i32 %187, i32* %9, i64 4)
  store i32 %188, i32* %10, align 4
  %189 = load i32, i32* %10, align 4
  %190 = icmp eq i32 %189, -1
  br i1 %190, label %195, label %191

191:                                              ; preds = %184
  %192 = load i32, i32* %10, align 4
  %193 = sext i32 %192 to i64
  %194 = icmp ne i64 %193, 4
  br i1 %194, label %195, label %196

195:                                              ; preds = %191, %184
  store i32 0, i32* @helper_pid, align 4
  store i8* null, i8** %4, align 8
  br label %224

196:                                              ; preds = %191
  %197 = load i32, i32* %9, align 4
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  store i8* null, i8** %4, align 8
  br label %224

200:                                              ; preds = %196
  %201 = load i32*, i32** @helper_socket_protocol, align 8
  %202 = getelementptr inbounds i32, i32* %201, i64 0
  %203 = load i32, i32* %202, align 4
  %204 = call i32 (i32, ...) @read(i32 %203, i8** %11, i64 8)
  store i32 %204, i32* %10, align 4
  %205 = load i32, i32* %10, align 4
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %211, label %207

207:                                              ; preds = %200
  %208 = load i32, i32* %10, align 4
  %209 = sext i32 %208 to i64
  %210 = icmp ne i64 %209, 8
  br i1 %210, label %211, label %212

211:                                              ; preds = %207, %200
  store i32 0, i32* @helper_pid, align 4
  store i8* null, i8** %4, align 8
  br label %224

212:                                              ; preds = %207
  %213 = load i32*, i32** @helper_socket_fdpassing, align 8
  %214 = getelementptr inbounds i32, i32* %213, i64 0
  %215 = load i32, i32* %214, align 4
  %216 = call i32 @receive_fd(i32 %215)
  %217 = load i32*, i32** %5, align 8
  store i32 %216, i32* %217, align 4
  %218 = load i32*, i32** @helper_socket_fdpassing, align 8
  %219 = getelementptr inbounds i32, i32* %218, i64 0
  %220 = load i32, i32* %219, align 4
  %221 = call i32 @receive_fd(i32 %220)
  %222 = load i32*, i32** %6, align 8
  store i32 %221, i32* %222, align 4
  %223 = load i8*, i8** %11, align 8
  store i8* %223, i8** %4, align 8
  br label %224

224:                                              ; preds = %212, %211, %199, %195, %183, %40, %27, %22, %14
  %225 = load i8*, i8** %4, align 8
  ret i8* %225
}

declare dso_local i32 @s_pipe(i32*) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @fork(...) #1

declare dso_local i32 @dup2(i32, i32) #1

declare dso_local i32 @execl(i8*, i8*, i32*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @fcntl(i32, i32, i32) #1

declare dso_local i64 @write(i32, i32*, i32) #1

declare dso_local i32 @read(i32, ...) #1

declare dso_local i32 @receive_fd(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
