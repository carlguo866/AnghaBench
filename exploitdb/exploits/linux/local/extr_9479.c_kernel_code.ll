; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_9479.c_kernel_code.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_9479.c_kernel_code.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@uid = common dso_local global i64 0, align 8
@gid = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @kernel_code() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64*, align 8
  store i64 0, i64* %1, align 8
  %3 = ptrtoint i64* %1 to i64
  store i64 %3, i64* %1, align 8
  %4 = load i64, i64* %1, align 8
  %5 = and i64 %4, -8192
  store i64 %5, i64* %1, align 8
  %6 = load i64, i64* %1, align 8
  %7 = inttoptr i64 %6 to i64*
  store i64* %7, i64** %2, align 8
  br label %8

8:                                                ; preds = %76, %0
  %9 = load i64*, i64** %2, align 8
  %10 = icmp ne i64* %9, null
  br i1 %10, label %11, label %79

11:                                               ; preds = %8
  %12 = load i64*, i64** %2, align 8
  %13 = getelementptr inbounds i64, i64* %12, i64 0
  %14 = load i64, i64* %13, align 8
  %15 = load i64, i64* @uid, align 8
  %16 = icmp eq i64 %14, %15
  br i1 %16, label %17, label %76

17:                                               ; preds = %11
  %18 = load i64*, i64** %2, align 8
  %19 = getelementptr inbounds i64, i64* %18, i64 1
  %20 = load i64, i64* %19, align 8
  %21 = load i64, i64* @uid, align 8
  %22 = icmp eq i64 %20, %21
  br i1 %22, label %23, label %76

23:                                               ; preds = %17
  %24 = load i64*, i64** %2, align 8
  %25 = getelementptr inbounds i64, i64* %24, i64 2
  %26 = load i64, i64* %25, align 8
  %27 = load i64, i64* @uid, align 8
  %28 = icmp eq i64 %26, %27
  br i1 %28, label %29, label %76

29:                                               ; preds = %23
  %30 = load i64*, i64** %2, align 8
  %31 = getelementptr inbounds i64, i64* %30, i64 3
  %32 = load i64, i64* %31, align 8
  %33 = load i64, i64* @uid, align 8
  %34 = icmp eq i64 %32, %33
  br i1 %34, label %35, label %76

35:                                               ; preds = %29
  %36 = load i64*, i64** %2, align 8
  %37 = getelementptr inbounds i64, i64* %36, i64 4
  %38 = load i64, i64* %37, align 8
  %39 = load i64, i64* @gid, align 8
  %40 = icmp eq i64 %38, %39
  br i1 %40, label %41, label %76

41:                                               ; preds = %35
  %42 = load i64*, i64** %2, align 8
  %43 = getelementptr inbounds i64, i64* %42, i64 5
  %44 = load i64, i64* %43, align 8
  %45 = load i64, i64* @gid, align 8
  %46 = icmp eq i64 %44, %45
  br i1 %46, label %47, label %76

47:                                               ; preds = %41
  %48 = load i64*, i64** %2, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 6
  %50 = load i64, i64* %49, align 8
  %51 = load i64, i64* @gid, align 8
  %52 = icmp eq i64 %50, %51
  br i1 %52, label %53, label %76

53:                                               ; preds = %47
  %54 = load i64*, i64** %2, align 8
  %55 = getelementptr inbounds i64, i64* %54, i64 7
  %56 = load i64, i64* %55, align 8
  %57 = load i64, i64* @gid, align 8
  %58 = icmp eq i64 %56, %57
  br i1 %58, label %59, label %76

59:                                               ; preds = %53
  %60 = load i64*, i64** %2, align 8
  %61 = getelementptr inbounds i64, i64* %60, i64 3
  store i64 0, i64* %61, align 8
  %62 = load i64*, i64** %2, align 8
  %63 = getelementptr inbounds i64, i64* %62, i64 2
  store i64 0, i64* %63, align 8
  %64 = load i64*, i64** %2, align 8
  %65 = getelementptr inbounds i64, i64* %64, i64 1
  store i64 0, i64* %65, align 8
  %66 = load i64*, i64** %2, align 8
  %67 = getelementptr inbounds i64, i64* %66, i64 0
  store i64 0, i64* %67, align 8
  %68 = load i64*, i64** %2, align 8
  %69 = getelementptr inbounds i64, i64* %68, i64 7
  store i64 0, i64* %69, align 8
  %70 = load i64*, i64** %2, align 8
  %71 = getelementptr inbounds i64, i64* %70, i64 6
  store i64 0, i64* %71, align 8
  %72 = load i64*, i64** %2, align 8
  %73 = getelementptr inbounds i64, i64* %72, i64 5
  store i64 0, i64* %73, align 8
  %74 = load i64*, i64** %2, align 8
  %75 = getelementptr inbounds i64, i64* %74, i64 4
  store i64 0, i64* %75, align 8
  br label %79

76:                                               ; preds = %53, %47, %41, %35, %29, %23, %17, %11
  %77 = load i64*, i64** %2, align 8
  %78 = getelementptr inbounds i64, i64* %77, i32 1
  store i64* %78, i64** %2, align 8
  br label %8

79:                                               ; preds = %59, %8
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
