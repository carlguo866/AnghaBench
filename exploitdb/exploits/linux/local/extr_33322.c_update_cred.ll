; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_33322.c_update_cred.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_33322.c_update_cred.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@taskstruct = common dso_local global i32* null, align 8
@uid = common dso_local global i32 0, align 4
@gid = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void ()* @update_cred to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @update_cred() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  %3 = alloca i32*, align 8
  %4 = call i32* (...) @get_current()
  store i32* %4, i32** %2, align 8
  store i32* null, i32** %3, align 8
  store i32 0, i32* %1, align 4
  br label %5

5:                                                ; preds = %107, %0
  %6 = load i32, i32* %1, align 4
  %7 = icmp slt i32 %6, 1024
  br i1 %7, label %8, label %110

8:                                                ; preds = %5
  %9 = load i32*, i32** %2, align 8
  %10 = load i32, i32* %1, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i32, i32* %9, i64 %11
  %13 = load i32, i32* %12, align 4
  %14 = load i32*, i32** @taskstruct, align 8
  %15 = load i32, i32* %1, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i32, i32* %14, i64 %16
  store i32 %13, i32* %17, align 4
  %18 = load i32*, i32** %2, align 8
  %19 = load i32, i32* %1, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, i32* %18, i64 %20
  %22 = load i32, i32* %21, align 4
  %23 = sext i32 %22 to i64
  %24 = inttoptr i64 %23 to i32*
  store i32* %24, i32** %3, align 8
  %25 = load i32*, i32** %3, align 8
  %26 = load i32*, i32** %2, align 8
  %27 = load i32, i32* %1, align 4
  %28 = add nsw i32 %27, 1
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i32, i32* %26, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = inttoptr i64 %32 to i32*
  %34 = icmp eq i32* %25, %33
  br i1 %34, label %35, label %106

35:                                               ; preds = %8
  %36 = load i32*, i32** %3, align 8
  %37 = icmp ugt i32* %36, inttoptr (i64 3221225472 to i32*)
  br i1 %37, label %38, label %106

38:                                               ; preds = %35
  %39 = load i32*, i32** %3, align 8
  %40 = getelementptr inbounds i32, i32* %39, i32 1
  store i32* %40, i32** %3, align 8
  %41 = load i32*, i32** %3, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 0
  %43 = load i32, i32* %42, align 4
  %44 = load i32, i32* @uid, align 4
  %45 = icmp eq i32 %43, %44
  br i1 %45, label %46, label %105

46:                                               ; preds = %38
  %47 = load i32*, i32** %3, align 8
  %48 = getelementptr inbounds i32, i32* %47, i64 1
  %49 = load i32, i32* %48, align 4
  %50 = load i32, i32* @gid, align 4
  %51 = icmp eq i32 %49, %50
  br i1 %51, label %52, label %105

52:                                               ; preds = %46
  %53 = load i32*, i32** %3, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 2
  %55 = load i32, i32* %54, align 4
  %56 = load i32, i32* @uid, align 4
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %58, label %105

58:                                               ; preds = %52
  %59 = load i32*, i32** %3, align 8
  %60 = getelementptr inbounds i32, i32* %59, i64 3
  %61 = load i32, i32* %60, align 4
  %62 = load i32, i32* @gid, align 4
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %64, label %105

64:                                               ; preds = %58
  %65 = load i32*, i32** %3, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 4
  %67 = load i32, i32* %66, align 4
  %68 = load i32, i32* @uid, align 4
  %69 = icmp eq i32 %67, %68
  br i1 %69, label %70, label %105

70:                                               ; preds = %64
  %71 = load i32*, i32** %3, align 8
  %72 = getelementptr inbounds i32, i32* %71, i64 5
  %73 = load i32, i32* %72, align 4
  %74 = load i32, i32* @gid, align 4
  %75 = icmp eq i32 %73, %74
  br i1 %75, label %76, label %105

76:                                               ; preds = %70
  %77 = load i32*, i32** %3, align 8
  %78 = getelementptr inbounds i32, i32* %77, i64 6
  %79 = load i32, i32* %78, align 4
  %80 = load i32, i32* @uid, align 4
  %81 = icmp eq i32 %79, %80
  br i1 %81, label %82, label %105

82:                                               ; preds = %76
  %83 = load i32*, i32** %3, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 7
  %85 = load i32, i32* %84, align 4
  %86 = load i32, i32* @gid, align 4
  %87 = icmp eq i32 %85, %86
  br i1 %87, label %88, label %105

88:                                               ; preds = %82
  %89 = load i32*, i32** %3, align 8
  %90 = getelementptr inbounds i32, i32* %89, i64 6
  store i32 0, i32* %90, align 4
  %91 = load i32*, i32** %3, align 8
  %92 = getelementptr inbounds i32, i32* %91, i64 4
  store i32 0, i32* %92, align 4
  %93 = load i32*, i32** %3, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 2
  store i32 0, i32* %94, align 4
  %95 = load i32*, i32** %3, align 8
  %96 = getelementptr inbounds i32, i32* %95, i64 0
  store i32 0, i32* %96, align 4
  %97 = load i32*, i32** %3, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 7
  store i32 0, i32* %98, align 4
  %99 = load i32*, i32** %3, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 5
  store i32 0, i32* %100, align 4
  %101 = load i32*, i32** %3, align 8
  %102 = getelementptr inbounds i32, i32* %101, i64 3
  store i32 0, i32* %102, align 4
  %103 = load i32*, i32** %3, align 8
  %104 = getelementptr inbounds i32, i32* %103, i64 1
  store i32 0, i32* %104, align 4
  br label %110

105:                                              ; preds = %82, %76, %70, %64, %58, %52, %46, %38
  br label %106

106:                                              ; preds = %105, %35, %8
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %1, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %1, align 4
  br label %5

110:                                              ; preds = %88, %5
  ret void
}

declare dso_local i32* @get_current(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
