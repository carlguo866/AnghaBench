; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45175.c_parse_args.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45175.c_parse_args.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@g_cmd = common dso_local global i32 0, align 4
@g_num = common dso_local global i32 0, align 4
@g_pid = common dso_local global i32 0, align 4
@g_dir = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [15 x i8] c"CMD_PID %u %s\0A\00", align 1
@g_addr = common dso_local global i8* null, align 8
@g_length = common dso_local global i8* null, align 8
@g_file = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [27 x i8] c"CMD_VIRT %016lx %016lx %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"NULL\00", align 1
@g_offset = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [27 x i8] c"CMD_PHYS %016lx %016lx %s\0A\00", align 1
@g_string = common dso_local global i8* null, align 8
@.str.4 = private unnamed_addr constant [31 x i8] c"CMD_SEARCH <%s> %016lx %016lx\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (i32, i8**)* @parse_args to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @parse_args(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 2
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  store i32 0, i32* %3, align 4
  br label %168

9:                                                ; preds = %2
  %10 = load i8**, i8*** %5, align 8
  %11 = getelementptr inbounds i8*, i8** %10, i64 1
  %12 = load i8*, i8** %11, align 8
  %13 = call i32 @parse_cmd(i8* %12)
  store i32 %13, i32* @g_cmd, align 4
  %14 = load i32, i32* @g_cmd, align 4
  switch i32 %14, label %167 [
    i32 132, label %15
    i32 130, label %30
    i32 128, label %54
    i32 131, label %93
    i32 129, label %132
  ]

15:                                               ; preds = %9
  %16 = load i32, i32* %4, align 4
  %17 = icmp sgt i32 %16, 3
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  store i32 0, i32* %3, align 4
  br label %168

19:                                               ; preds = %15
  %20 = load i32, i32* %4, align 4
  %21 = icmp sge i32 %20, 3
  br i1 %21, label %22, label %29

22:                                               ; preds = %19
  %23 = load i8**, i8*** %5, align 8
  %24 = getelementptr inbounds i8*, i8** %23, i64 2
  %25 = load i8*, i8** %24, align 8
  %26 = call i32 @parse_u(i8* %25, i32 10, i32* @g_num)
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %22
  store i32 0, i32* %3, align 4
  br label %168

29:                                               ; preds = %22, %19
  store i32 1, i32* %3, align 4
  br label %168

30:                                               ; preds = %9
  %31 = load i32, i32* %4, align 4
  %32 = icmp ne i32 %31, 4
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  store i32 0, i32* %3, align 4
  br label %168

34:                                               ; preds = %30
  %35 = load i8**, i8*** %5, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 2
  %37 = load i8*, i8** %36, align 8
  %38 = call i32 @parse_u(i8* %37, i32 10, i32* @g_pid)
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %34
  store i32 0, i32* %3, align 4
  br label %168

41:                                               ; preds = %34
  %42 = load i32, i32* @g_pid, align 4
  %43 = icmp sle i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  store i32 0, i32* %3, align 4
  br label %168

45:                                               ; preds = %41
  %46 = load i8**, i8*** %5, align 8
  %47 = getelementptr inbounds i8*, i8** %46, i64 3
  %48 = load i8*, i8** %47, align 8
  store i8* %48, i8** @g_dir, align 8
  %49 = load i32, i32* @g_pid, align 4
  %50 = sext i32 %49 to i64
  %51 = inttoptr i64 %50 to i8*
  %52 = load i8*, i8** @g_dir, align 8
  %53 = call i32 (i8*, i8*, i8*, ...) @debug1(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8* %51, i8* %52)
  store i32 1, i32* %3, align 4
  br label %168

54:                                               ; preds = %9
  %55 = load i32, i32* %4, align 4
  %56 = icmp slt i32 %55, 4
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = load i32, i32* %4, align 4
  %59 = icmp sgt i32 %58, 5
  br i1 %59, label %60, label %61

60:                                               ; preds = %57, %54
  store i32 0, i32* %3, align 4
  br label %168

61:                                               ; preds = %57
  %62 = load i8**, i8*** %5, align 8
  %63 = getelementptr inbounds i8*, i8** %62, i64 2
  %64 = load i8*, i8** %63, align 8
  %65 = call i32 @parse_ul(i8* %64, i32 16, i8** @g_addr)
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %61
  store i32 0, i32* %3, align 4
  br label %168

68:                                               ; preds = %61
  %69 = load i8**, i8*** %5, align 8
  %70 = getelementptr inbounds i8*, i8** %69, i64 3
  %71 = load i8*, i8** %70, align 8
  %72 = call i32 @parse_ul(i8* %71, i32 16, i8** @g_length)
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %75, label %74

74:                                               ; preds = %68
  store i32 0, i32* %3, align 4
  br label %168

75:                                               ; preds = %68
  %76 = load i32, i32* %4, align 4
  %77 = icmp eq i32 %76, 5
  br i1 %77, label %78, label %82

78:                                               ; preds = %75
  %79 = load i8**, i8*** %5, align 8
  %80 = getelementptr inbounds i8*, i8** %79, i64 4
  %81 = load i8*, i8** %80, align 8
  store i8* %81, i8** @g_file, align 8
  br label %82

82:                                               ; preds = %78, %75
  %83 = load i8*, i8** @g_addr, align 8
  %84 = load i8*, i8** @g_length, align 8
  %85 = load i8*, i8** @g_file, align 8
  %86 = icmp ne i8* %85, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %82
  %88 = load i8*, i8** @g_file, align 8
  br label %90

89:                                               ; preds = %82
  br label %90

90:                                               ; preds = %89, %87
  %91 = phi i8* [ %88, %87 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), %89 ]
  %92 = call i32 (i8*, i8*, i8*, ...) @debug1(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* %83, i8* %84, i8* %91)
  store i32 1, i32* %3, align 4
  br label %168

93:                                               ; preds = %9
  %94 = load i32, i32* %4, align 4
  %95 = icmp slt i32 %94, 4
  br i1 %95, label %99, label %96

96:                                               ; preds = %93
  %97 = load i32, i32* %4, align 4
  %98 = icmp sgt i32 %97, 5
  br i1 %98, label %99, label %100

99:                                               ; preds = %96, %93
  store i32 0, i32* %3, align 4
  br label %168

100:                                              ; preds = %96
  %101 = load i8**, i8*** %5, align 8
  %102 = getelementptr inbounds i8*, i8** %101, i64 2
  %103 = load i8*, i8** %102, align 8
  %104 = call i32 @parse_ul(i8* %103, i32 16, i8** @g_offset)
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %107, label %106

106:                                              ; preds = %100
  store i32 0, i32* %3, align 4
  br label %168

107:                                              ; preds = %100
  %108 = load i8**, i8*** %5, align 8
  %109 = getelementptr inbounds i8*, i8** %108, i64 3
  %110 = load i8*, i8** %109, align 8
  %111 = call i32 @parse_ul(i8* %110, i32 16, i8** @g_length)
  %112 = icmp ne i32 %111, 0
  br i1 %112, label %114, label %113

113:                                              ; preds = %107
  store i32 0, i32* %3, align 4
  br label %168

114:                                              ; preds = %107
  %115 = load i32, i32* %4, align 4
  %116 = icmp eq i32 %115, 5
  br i1 %116, label %117, label %121

117:                                              ; preds = %114
  %118 = load i8**, i8*** %5, align 8
  %119 = getelementptr inbounds i8*, i8** %118, i64 4
  %120 = load i8*, i8** %119, align 8
  store i8* %120, i8** @g_file, align 8
  br label %121

121:                                              ; preds = %117, %114
  %122 = load i8*, i8** @g_offset, align 8
  %123 = load i8*, i8** @g_length, align 8
  %124 = load i8*, i8** @g_file, align 8
  %125 = icmp ne i8* %124, null
  br i1 %125, label %126, label %128

126:                                              ; preds = %121
  %127 = load i8*, i8** @g_file, align 8
  br label %129

128:                                              ; preds = %121
  br label %129

129:                                              ; preds = %128, %126
  %130 = phi i8* [ %127, %126 ], [ getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), %128 ]
  %131 = call i32 (i8*, i8*, i8*, ...) @debug1(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8* %122, i8* %123, i8* %130)
  store i32 1, i32* %3, align 4
  br label %168

132:                                              ; preds = %9
  %133 = load i32, i32* %4, align 4
  %134 = icmp slt i32 %133, 3
  br i1 %134, label %138, label %135

135:                                              ; preds = %132
  %136 = load i32, i32* %4, align 4
  %137 = icmp sgt i32 %136, 5
  br i1 %137, label %138, label %139

138:                                              ; preds = %135, %132
  store i32 0, i32* %3, align 4
  br label %168

139:                                              ; preds = %135
  %140 = load i8**, i8*** %5, align 8
  %141 = getelementptr inbounds i8*, i8** %140, i64 2
  %142 = load i8*, i8** %141, align 8
  store i8* %142, i8** @g_string, align 8
  %143 = load i32, i32* %4, align 4
  %144 = icmp sge i32 %143, 4
  br i1 %144, label %145, label %152

145:                                              ; preds = %139
  %146 = load i8**, i8*** %5, align 8
  %147 = getelementptr inbounds i8*, i8** %146, i64 3
  %148 = load i8*, i8** %147, align 8
  %149 = call i32 @parse_ul(i8* %148, i32 16, i8** @g_offset)
  %150 = icmp ne i32 %149, 0
  br i1 %150, label %152, label %151

151:                                              ; preds = %145
  store i32 0, i32* %3, align 4
  br label %168

152:                                              ; preds = %145, %139
  %153 = load i32, i32* %4, align 4
  %154 = icmp sge i32 %153, 5
  br i1 %154, label %155, label %162

155:                                              ; preds = %152
  %156 = load i8**, i8*** %5, align 8
  %157 = getelementptr inbounds i8*, i8** %156, i64 4
  %158 = load i8*, i8** %157, align 8
  %159 = call i32 @parse_ul(i8* %158, i32 16, i8** @g_length)
  %160 = icmp ne i32 %159, 0
  br i1 %160, label %162, label %161

161:                                              ; preds = %155
  store i32 0, i32* %3, align 4
  br label %168

162:                                              ; preds = %155, %152
  %163 = load i8*, i8** @g_string, align 8
  %164 = load i8*, i8** @g_offset, align 8
  %165 = load i8*, i8** @g_length, align 8
  %166 = call i32 (i8*, i8*, i8*, ...) @debug1(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0), i8* %163, i8* %164, i8* %165)
  store i32 1, i32* %3, align 4
  br label %168

167:                                              ; preds = %9
  store i32 0, i32* %3, align 4
  br label %168

168:                                              ; preds = %167, %162, %161, %151, %138, %129, %113, %106, %99, %90, %74, %67, %60, %45, %44, %40, %33, %29, %28, %18, %8
  %169 = load i32, i32* %3, align 4
  ret i32 %169
}

declare dso_local i32 @parse_cmd(i8*) #1

declare dso_local i32 @parse_u(i8*, i32, i32*) #1

declare dso_local i32 @debug1(i8*, i8*, i8*, ...) #1

declare dso_local i32 @parse_ul(i8*, i32, i8**) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
