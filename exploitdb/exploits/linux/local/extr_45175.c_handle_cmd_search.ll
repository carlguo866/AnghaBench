; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45175.c_handle_cmd_search.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45175.c_handle_cmd_search.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@g_offset = common dso_local global i64 0, align 8
@g_length = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [42 x i8] c"[.] searching [%016lx, %016lx) for '%s':\0A\00", align 1
@g_string = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [10 x i8] c"[+] done\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @handle_cmd_search() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = load i64, i64* @g_offset, align 8
  %4 = icmp ne i64 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %0
  %6 = load i64, i64* @g_offset, align 8
  br label %8

7:                                                ; preds = %0
  br label %8

8:                                                ; preds = %7, %5
  %9 = phi i64 [ %6, %5 ], [ 0, %7 ]
  store i64 %9, i64* %1, align 8
  %10 = load i64, i64* @g_length, align 8
  %11 = icmp ne i64 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %8
  %13 = load i64, i64* %1, align 8
  %14 = load i64, i64* @g_length, align 8
  %15 = add i64 %13, %14
  br label %18

16:                                               ; preds = %8
  %17 = call i64 (...) @get_phys_size()
  br label %18

18:                                               ; preds = %16, %12
  %19 = phi i64 [ %15, %12 ], [ %17, %16 ]
  store i64 %19, i64* %2, align 8
  %20 = load i64, i64* %1, align 8
  %21 = load i64, i64* %2, align 8
  %22 = load i32, i32* @g_string, align 4
  %23 = call i32 (i8*, ...) @info(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i64 %20, i64 %21, i32 %22)
  %24 = load i64, i64* %1, align 8
  %25 = load i64, i64* %2, align 8
  %26 = load i32, i32* @g_string, align 4
  %27 = call i32 @phys_search(i64 %24, i64 %25, i32 %26)
  %28 = call i32 (i8*, ...) @info(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0))
  ret void
}

declare dso_local i64 @get_phys_size(...) #1

declare dso_local i32 @info(i8*, ...) #1

declare dso_local i32 @phys_search(i64, i64, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
