; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45553.c_unblock_thread.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45553.c_unblock_thread.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.unblock_thread_arg = type { i32, i32, i32 }

@.str = private unnamed_addr constant [28 x i8] c"[ ][unblock] closing %d fd\0A\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"[ ][unblock] unblocking now\0A\00", align 1
@SOL_NETLINK = common dso_local global i32 0, align 4
@NETLINK_NO_ENOBUFS = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [15 x i8] c"[+] setsockopt\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i8* (i8*)* @unblock_thread to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @unblock_thread(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.unblock_thread_arg*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %5 = load i8*, i8** %2, align 8
  %6 = bitcast i8* %5 to %struct.unblock_thread_arg*
  store %struct.unblock_thread_arg* %6, %struct.unblock_thread_arg** %3, align 8
  store i32 3535, i32* %4, align 4
  %7 = load %struct.unblock_thread_arg*, %struct.unblock_thread_arg** %3, align 8
  %8 = getelementptr inbounds %struct.unblock_thread_arg, %struct.unblock_thread_arg* %7, i32 0, i32 0
  store i32 1, i32* %8, align 4
  %9 = call i32 @sleep(i32 5)
  %10 = load %struct.unblock_thread_arg*, %struct.unblock_thread_arg** %3, align 8
  %11 = getelementptr inbounds %struct.unblock_thread_arg, %struct.unblock_thread_arg* %10, i32 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 %12)
  %14 = load %struct.unblock_thread_arg*, %struct.unblock_thread_arg** %3, align 8
  %15 = getelementptr inbounds %struct.unblock_thread_arg, %struct.unblock_thread_arg* %14, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = call i32 @_close(i32 %16)
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0))
  %19 = load %struct.unblock_thread_arg*, %struct.unblock_thread_arg** %3, align 8
  %20 = getelementptr inbounds %struct.unblock_thread_arg, %struct.unblock_thread_arg* %19, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = load i32, i32* @SOL_NETLINK, align 4
  %23 = load i32, i32* @NETLINK_NO_ENOBUFS, align 4
  %24 = call i64 @_setsockopt(i32 %21, i32 %22, i32 %23, i32* %4, i32 4)
  %25 = icmp ne i64 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %1
  %27 = call i32 @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0))
  br label %28

28:                                               ; preds = %26, %1
  ret i8* null
}

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @_close(i32) #1

declare dso_local i64 @_setsockopt(i32, i32, i32, i32*, i32) #1

declare dso_local i32 @perror(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
