; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_43775.c_waitForTriggerPipeOpen.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_43775.c_waitForTriggerPipeOpen.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timespec = type { i64, i32 }

@CLOCK_MONOTONIC = common dso_local global i32 0, align 4
@O_WRONLY = common dso_local global i32 0, align 4
@O_NONBLOCK = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @waitForTriggerPipeOpen(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.timespec, align 8
  %5 = alloca %struct.timespec, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %8 = load i32, i32* @CLOCK_MONOTONIC, align 4
  %9 = call i32 @clock_gettime(i32 %8, %struct.timespec* %4)
  store i32 %9, i32* %6, align 4
  %10 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = add nsw i64 %11, 10
  store i64 %12, i64* %10, align 8
  %13 = load i32, i32* %6, align 4
  %14 = icmp ne i32 %13, 0
  %15 = xor i1 %14, true
  %16 = zext i1 %15 to i32
  %17 = call i32 @assert(i32 %16)
  br label %18

18:                                               ; preds = %1, %38
  %19 = load i8*, i8** %3, align 8
  %20 = load i32, i32* @O_WRONLY, align 4
  %21 = load i32, i32* @O_NONBLOCK, align 4
  %22 = or i32 %20, %21
  %23 = call i32 @open(i8* %19, i32 %22)
  store i32 %23, i32* %7, align 4
  %24 = load i32, i32* %7, align 4
  %25 = icmp sge i32 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %18
  %27 = load i32, i32* %7, align 4
  %28 = call i32 @close(i32 %27)
  br label %42

29:                                               ; preds = %18
  %30 = load i32, i32* @CLOCK_MONOTONIC, align 4
  %31 = call i32 @clock_gettime(i32 %30, %struct.timespec* %5)
  store i32 %31, i32* %6, align 4
  %32 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.timespec, %struct.timespec* %4, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp sgt i64 %33, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %29
  store i32 -1, i32* %2, align 4
  br label %43

38:                                               ; preds = %29
  %39 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i32 0, i32 0
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %struct.timespec, %struct.timespec* %5, i32 0, i32 1
  store i32 100000000, i32* %40, align 8
  %41 = call i32 @nanosleep(%struct.timespec* %5, i32* null)
  br label %18

42:                                               ; preds = %26
  store i32 0, i32* %2, align 4
  br label %43

43:                                               ; preds = %42, %37
  %44 = load i32, i32* %2, align 4
  ret i32 %44
}

declare dso_local i32 @clock_gettime(i32, %struct.timespec*) #1

declare dso_local i32 @assert(i32) #1

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @nanosleep(%struct.timespec*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
