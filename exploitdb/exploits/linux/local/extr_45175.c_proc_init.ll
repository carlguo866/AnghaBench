; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45175.c_proc_init.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45175.c_proc_init.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.proc_reader = type { i64, i32, i32* }

@.str = private unnamed_addr constant [19 x i8] c"proc_init: %016lx\0A\00", align 1
@PROC_INITIAL_SIZE = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [24 x i8] c"[-] proc_init: malloc()\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [18 x i8] c"proc_init = void\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.proc_reader*)* @proc_init to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @proc_init(%struct.proc_reader* %0) #0 {
  %2 = alloca %struct.proc_reader*, align 8
  store %struct.proc_reader* %0, %struct.proc_reader** %2, align 8
  %3 = load %struct.proc_reader*, %struct.proc_reader** %2, align 8
  %4 = call i32 (i8*, ...) @debug2(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), %struct.proc_reader* %3)
  %5 = load i32, i32* @PROC_INITIAL_SIZE, align 4
  %6 = call i32* @malloc(i32 %5)
  %7 = load %struct.proc_reader*, %struct.proc_reader** %2, align 8
  %8 = getelementptr inbounds %struct.proc_reader, %struct.proc_reader* %7, i32 0, i32 2
  store i32* %6, i32** %8, align 8
  %9 = load %struct.proc_reader*, %struct.proc_reader** %2, align 8
  %10 = getelementptr inbounds %struct.proc_reader, %struct.proc_reader* %9, i32 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %13, label %17

13:                                               ; preds = %1
  %14 = call i32 @perror(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0))
  %15 = load i32, i32* @EXIT_FAILURE, align 4
  %16 = call i32 @exit(i32 %15) #3
  unreachable

17:                                               ; preds = %1
  %18 = load i32, i32* @PROC_INITIAL_SIZE, align 4
  %19 = load %struct.proc_reader*, %struct.proc_reader** %2, align 8
  %20 = getelementptr inbounds %struct.proc_reader, %struct.proc_reader* %19, i32 0, i32 1
  store i32 %18, i32* %20, align 8
  %21 = load %struct.proc_reader*, %struct.proc_reader** %2, align 8
  %22 = getelementptr inbounds %struct.proc_reader, %struct.proc_reader* %21, i32 0, i32 0
  store i64 0, i64* %22, align 8
  %23 = call i32 (i8*, ...) @debug2(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0))
  ret void
}

declare dso_local i32 @debug2(i8*, ...) #1

declare dso_local i32* @malloc(i32) #1

declare dso_local i32 @perror(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
