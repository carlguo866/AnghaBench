; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45175.c_proc_ensure_size.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45175.c_proc_ensure_size.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.proc_reader = type { i32, i32* }

@.str = private unnamed_addr constant [32 x i8] c"[-] proc_ensure_size: realloc()\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.proc_reader*, i32)* @proc_ensure_size to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @proc_ensure_size(%struct.proc_reader* %0, i32 %1) #0 {
  %3 = alloca %struct.proc_reader*, align 8
  %4 = alloca i32, align 4
  store %struct.proc_reader* %0, %struct.proc_reader** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.proc_reader*, %struct.proc_reader** %3, align 8
  %6 = getelementptr inbounds %struct.proc_reader, %struct.proc_reader* %5, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = load i32, i32* %4, align 4
  %9 = icmp sge i32 %7, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %2
  br label %41

11:                                               ; preds = %2
  br label %12

12:                                               ; preds = %18, %11
  %13 = load %struct.proc_reader*, %struct.proc_reader** %3, align 8
  %14 = getelementptr inbounds %struct.proc_reader, %struct.proc_reader* %13, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = load i32, i32* %4, align 4
  %17 = icmp slt i32 %15, %16
  br i1 %17, label %18, label %23

18:                                               ; preds = %12
  %19 = load %struct.proc_reader*, %struct.proc_reader** %3, align 8
  %20 = getelementptr inbounds %struct.proc_reader, %struct.proc_reader* %19, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = shl i32 %21, 1
  store i32 %22, i32* %20, align 8
  br label %12

23:                                               ; preds = %12
  %24 = load %struct.proc_reader*, %struct.proc_reader** %3, align 8
  %25 = getelementptr inbounds %struct.proc_reader, %struct.proc_reader* %24, i32 0, i32 1
  %26 = load i32*, i32** %25, align 8
  %27 = load %struct.proc_reader*, %struct.proc_reader** %3, align 8
  %28 = getelementptr inbounds %struct.proc_reader, %struct.proc_reader* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = call i32* @realloc(i32* %26, i32 %29)
  %31 = load %struct.proc_reader*, %struct.proc_reader** %3, align 8
  %32 = getelementptr inbounds %struct.proc_reader, %struct.proc_reader* %31, i32 0, i32 1
  store i32* %30, i32** %32, align 8
  %33 = load %struct.proc_reader*, %struct.proc_reader** %3, align 8
  %34 = getelementptr inbounds %struct.proc_reader, %struct.proc_reader* %33, i32 0, i32 1
  %35 = load i32*, i32** %34, align 8
  %36 = icmp eq i32* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %23
  %38 = call i32 @perror(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0))
  %39 = load i32, i32* @EXIT_FAILURE, align 4
  %40 = call i32 @exit(i32 %39) #3
  unreachable

41:                                               ; preds = %10, %23
  ret void
}

declare dso_local i32* @realloc(i32*, i32) #1

declare dso_local i32 @perror(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
