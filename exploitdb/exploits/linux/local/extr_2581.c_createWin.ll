; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_2581.c_createWin.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_2581.c_createWin.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_9__ = type { i32, i32, i32, i32, i32, i32, i32* }
%struct.TYPE_7__ = type { i32, i32, i8*, i8* }
%struct.TYPE_8__ = type { i8*, i32 }

@NorthWestGravity = common dso_local global i32 0, align 4
@ButtonPressMask = common dso_local global i32 0, align 4
@ButtonReleaseMask = common dso_local global i32 0, align 4
@KeyPressMask = common dso_local global i32 0, align 4
@ExposureMask = common dso_local global i32 0, align 4
@CWBorderPixel = common dso_local global i32 0, align 4
@CWBackPixel = common dso_local global i32 0, align 4
@CWEventMask = common dso_local global i32 0, align 4
@CWBitGravity = common dso_local global i32 0, align 4
@InputOutput = common dso_local global i32 0, align 4
@XFT_FAMILY = common dso_local global i32 0, align 4
@XftTypeString = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [5 x i8] c"mono\00", align 1
@XFT_SIZE = common dso_local global i32 0, align 4
@XftTypeInteger = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [5 x i8] c"red4\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [17 x i8] c"cannot get color\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"linen\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"cannot get bg color\00", align 1
@GCForeground = common dso_local global i32 0, align 4
@GCBackground = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @createWin(%struct.TYPE_9__* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.TYPE_9__*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.TYPE_7__, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  %9 = alloca %struct.TYPE_8__, align 8
  %10 = alloca i32*, align 8
  store %struct.TYPE_9__* %0, %struct.TYPE_9__** %3, align 8
  %11 = load %struct.TYPE_9__*, %struct.TYPE_9__** %3, align 8
  %12 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %11, i32 0, i32 6
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %7, align 8
  %14 = load i32*, i32** %7, align 8
  %15 = call i32 @DefaultScreen(i32* %14)
  store i32 %15, i32* %8, align 4
  %16 = load i32*, i32** %7, align 8
  %17 = load i32, i32* %8, align 4
  %18 = call i8* @WhitePixel(i32* %16, i32 %17)
  %19 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %5, i32 0, i32 3
  store i8* %18, i8** %19, align 8
  %20 = load i32*, i32** %7, align 8
  %21 = load i32, i32* %8, align 4
  %22 = call i8* @WhitePixel(i32* %20, i32 %21)
  %23 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %5, i32 0, i32 2
  store i8* %22, i8** %23, align 8
  %24 = load i32, i32* @NorthWestGravity, align 4
  %25 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %5, i32 0, i32 1
  store i32 %24, i32* %25, align 4
  %26 = load i32, i32* @ButtonPressMask, align 4
  %27 = load i32, i32* @ButtonReleaseMask, align 4
  %28 = or i32 %26, %27
  %29 = load i32, i32* @KeyPressMask, align 4
  %30 = or i32 %28, %29
  %31 = load i32, i32* @ExposureMask, align 4
  %32 = or i32 %30, %31
  %33 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %5, i32 0, i32 0
  store i32 %32, i32* %33, align 8
  %34 = load i32, i32* @CWBorderPixel, align 4
  %35 = load i32, i32* @CWBackPixel, align 4
  %36 = or i32 %34, %35
  %37 = load i32, i32* @CWEventMask, align 4
  %38 = or i32 %36, %37
  %39 = load i32, i32* @CWBitGravity, align 4
  %40 = or i32 %38, %39
  store i32 %40, i32* %4, align 4
  %41 = load %struct.TYPE_9__*, %struct.TYPE_9__** %3, align 8
  %42 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %41, i32 0, i32 6
  %43 = load i32*, i32** %42, align 8
  %44 = load i32, i32* %8, align 4
  %45 = call i32* @ScreenOfDisplay(i32* %43, i32 %44)
  store i32* %45, i32** %10, align 8
  %46 = load i32*, i32** %7, align 8
  %47 = load i32*, i32** %7, align 8
  %48 = load i32, i32* %8, align 4
  %49 = call i32 @RootWindow(i32* %47, i32 %48)
  %50 = load i32*, i32** %7, align 8
  %51 = load i32, i32* %8, align 4
  %52 = call i32 @DisplayWidth(i32* %50, i32 %51)
  %53 = sdiv i32 %52, 2
  %54 = load i32*, i32** %7, align 8
  %55 = load i32, i32* %8, align 4
  %56 = call i32 @DefaultDepth(i32* %54, i32 %55)
  %57 = load i32, i32* @InputOutput, align 4
  %58 = load i32*, i32** %7, align 8
  %59 = load i32, i32* %8, align 4
  %60 = call i32 @DefaultVisual(i32* %58, i32 %59)
  %61 = load i32, i32* %4, align 4
  %62 = call i32 @XCreateWindow(i32* %46, i32 %49, i32 0, i32 0, i32 %53, i32 150, i32 0, i32 %56, i32 %57, i32 %60, i32 %61, %struct.TYPE_7__* %5)
  store i32 %62, i32* %6, align 4
  %63 = load i32*, i32** %7, align 8
  %64 = load i32, i32* %8, align 4
  %65 = load i32, i32* @XFT_FAMILY, align 4
  %66 = load i32, i32* @XftTypeString, align 4
  %67 = load i32, i32* @XFT_SIZE, align 4
  %68 = load i32, i32* @XftTypeInteger, align 4
  %69 = call i32 @XftFontOpen(i32* %63, i32 %64, i32 %65, i32 %66, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 %67, i32 %68, i32 16, i32* null)
  %70 = load %struct.TYPE_9__*, %struct.TYPE_9__** %3, align 8
  %71 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %70, i32 0, i32 5
  store i32 %69, i32* %71, align 4
  %72 = load i32*, i32** %7, align 8
  %73 = load i32*, i32** %7, align 8
  %74 = load i32, i32* %8, align 4
  %75 = call i32 @XDefaultVisual(i32* %73, i32 %74)
  %76 = load i32*, i32** %7, align 8
  %77 = load i32, i32* %8, align 4
  %78 = call i32 @DefaultColormap(i32* %76, i32 %77)
  %79 = load %struct.TYPE_9__*, %struct.TYPE_9__** %3, align 8
  %80 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %79, i32 0, i32 4
  %81 = call i32 @XftColorAllocName(i32* %72, i32 %75, i32 %78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32* %80)
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %1
  %84 = load i32, i32* @stderr, align 4
  %85 = call i32 @fprintf(i32 %84, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0))
  store i32 -1, i32* %2, align 4
  br label %132

86:                                               ; preds = %1
  %87 = load i32*, i32** %7, align 8
  %88 = load i32*, i32** %7, align 8
  %89 = load i32, i32* %8, align 4
  %90 = call i32 @XDefaultVisual(i32* %88, i32 %89)
  %91 = load i32*, i32** %7, align 8
  %92 = load i32, i32* %8, align 4
  %93 = call i32 @DefaultColormap(i32* %91, i32 %92)
  %94 = load %struct.TYPE_9__*, %struct.TYPE_9__** %3, align 8
  %95 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %94, i32 0, i32 3
  %96 = call i32 @XftColorAllocName(i32* %87, i32 %90, i32 %93, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32* %95)
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %101, label %98

98:                                               ; preds = %86
  %99 = load i32, i32* @stderr, align 4
  %100 = call i32 @fprintf(i32 %99, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0))
  store i32 -1, i32* %2, align 4
  br label %132

101:                                              ; preds = %86
  %102 = load i32*, i32** %7, align 8
  %103 = load i32, i32* %6, align 4
  %104 = load i32*, i32** %7, align 8
  %105 = load i32, i32* %8, align 4
  %106 = call i32 @DefaultVisual(i32* %104, i32 %105)
  %107 = load i32*, i32** %7, align 8
  %108 = load i32, i32* %8, align 4
  %109 = call i32 @DefaultColormap(i32* %107, i32 %108)
  %110 = call i32 @XftDrawCreate(i32* %102, i32 %103, i32 %106, i32 %109)
  %111 = load %struct.TYPE_9__*, %struct.TYPE_9__** %3, align 8
  %112 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %111, i32 0, i32 2
  store i32 %110, i32* %112, align 8
  %113 = load i32*, i32** %7, align 8
  %114 = load i32, i32* %8, align 4
  %115 = call i32 @BlackPixel(i32* %113, i32 %114)
  %116 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %9, i32 0, i32 1
  store i32 %115, i32* %116, align 8
  %117 = load i32*, i32** %7, align 8
  %118 = load i32, i32* %8, align 4
  %119 = call i8* @WhitePixel(i32* %117, i32 %118)
  %120 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %9, i32 0, i32 0
  store i8* %119, i8** %120, align 8
  %121 = load i32*, i32** %7, align 8
  %122 = load i32, i32* %6, align 4
  %123 = load i32, i32* @GCForeground, align 4
  %124 = load i32, i32* @GCBackground, align 4
  %125 = or i32 %123, %124
  %126 = call i32 @XCreateGC(i32* %121, i32 %122, i32 %125, %struct.TYPE_8__* %9)
  %127 = load %struct.TYPE_9__*, %struct.TYPE_9__** %3, align 8
  %128 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %127, i32 0, i32 1
  store i32 %126, i32* %128, align 4
  %129 = load i32, i32* %6, align 4
  %130 = load %struct.TYPE_9__*, %struct.TYPE_9__** %3, align 8
  %131 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %130, i32 0, i32 0
  store i32 %129, i32* %131, align 8
  store i32 0, i32* %2, align 4
  br label %132

132:                                              ; preds = %101, %98, %83
  %133 = load i32, i32* %2, align 4
  ret i32 %133
}

declare dso_local i32 @DefaultScreen(i32*) #1

declare dso_local i8* @WhitePixel(i32*, i32) #1

declare dso_local i32* @ScreenOfDisplay(i32*, i32) #1

declare dso_local i32 @XCreateWindow(i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.TYPE_7__*) #1

declare dso_local i32 @RootWindow(i32*, i32) #1

declare dso_local i32 @DisplayWidth(i32*, i32) #1

declare dso_local i32 @DefaultDepth(i32*, i32) #1

declare dso_local i32 @DefaultVisual(i32*, i32) #1

declare dso_local i32 @XftFontOpen(i32*, i32, i32, i32, i8*, i32, i32, i32, i32*) #1

declare dso_local i32 @XftColorAllocName(i32*, i32, i32, i8*, i32*) #1

declare dso_local i32 @XDefaultVisual(i32*, i32) #1

declare dso_local i32 @DefaultColormap(i32*, i32) #1

declare dso_local i32 @fprintf(i32, i8*) #1

declare dso_local i32 @XftDrawCreate(i32*, i32, i32, i32) #1

declare dso_local i32 @BlackPixel(i32*, i32) #1

declare dso_local i32 @XCreateGC(i32*, i32, i32, %struct.TYPE_8__*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
