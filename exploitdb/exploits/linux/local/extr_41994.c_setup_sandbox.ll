; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_41994.c_setup_sandbox.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_41994.c_setup_sandbox.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@CLONE_NEWUSER = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [27 x i8] c"[-] unshare(CLONE_NEWUSER)\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@CLONE_NEWNET = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [21 x i8] c"/proc/self/setgroups\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"deny\00", align 1
@.str.3 = private unnamed_addr constant [38 x i8] c"[-] write_file(/proc/self/set_groups)\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"/proc/self/uid_map\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"0 %d 1\0A\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"[-] write_file(/proc/self/uid_map)\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"/proc/self/gid_map\00", align 1
@.str.8 = private unnamed_addr constant [35 x i8] c"[-] write_file(/proc/self/gid_map)\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"[-] sched_setaffinity()\00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"/sbin/ifconfig lo up\00", align 1
@.str.11 = private unnamed_addr constant [33 x i8] c"[-] system(/sbin/ifconfig lo up)\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @setup_sandbox() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = call i32 (...) @getuid()
  store i32 %4, i32* %1, align 4
  %5 = call i32 (...) @getgid()
  store i32 %5, i32* %2, align 4
  %6 = load i32, i32* @CLONE_NEWUSER, align 4
  %7 = call i64 @unshare(i32 %6)
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %0
  %10 = call i32 @perror(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0))
  %11 = load i32, i32* @EXIT_FAILURE, align 4
  %12 = call i32 @exit(i32 %11) #3
  unreachable

13:                                               ; preds = %0
  %14 = load i32, i32* @CLONE_NEWNET, align 4
  %15 = call i64 @unshare(i32 %14)
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %13
  %18 = call i32 @perror(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0))
  %19 = load i32, i32* @EXIT_FAILURE, align 4
  %20 = call i32 @exit(i32 %19) #3
  unreachable

21:                                               ; preds = %13
  %22 = call i32 (i8*, i8*, ...) @write_file(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0))
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %28, label %24

24:                                               ; preds = %21
  %25 = call i32 @perror(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3, i64 0, i64 0))
  %26 = load i32, i32* @EXIT_FAILURE, align 4
  %27 = call i32 @exit(i32 %26) #3
  unreachable

28:                                               ; preds = %21
  %29 = load i32, i32* %1, align 4
  %30 = call i32 (i8*, i8*, ...) @write_file(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i32 %29)
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = call i32 @perror(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0))
  %34 = load i32, i32* @EXIT_FAILURE, align 4
  %35 = call i32 @exit(i32 %34) #3
  unreachable

36:                                               ; preds = %28
  %37 = load i32, i32* %2, align 4
  %38 = call i32 (i8*, i8*, ...) @write_file(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i32 %37)
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  %41 = call i32 @perror(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8, i64 0, i64 0))
  %42 = load i32, i32* @EXIT_FAILURE, align 4
  %43 = call i32 @exit(i32 %42) #3
  unreachable

44:                                               ; preds = %36
  %45 = call i32 @CPU_ZERO(i32* %3)
  %46 = call i32 @CPU_SET(i32 0, i32* %3)
  %47 = call i64 @sched_setaffinity(i32 0, i32 4, i32* %3)
  %48 = icmp ne i64 %47, 0
  br i1 %48, label %49, label %53

49:                                               ; preds = %44
  %50 = call i32 @perror(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i64 0, i64 0))
  %51 = load i32, i32* @EXIT_FAILURE, align 4
  %52 = call i32 @exit(i32 %51) #3
  unreachable

53:                                               ; preds = %44
  %54 = call i64 @system(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0))
  %55 = icmp ne i64 %54, 0
  br i1 %55, label %56, label %60

56:                                               ; preds = %53
  %57 = call i32 @perror(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0))
  %58 = load i32, i32* @EXIT_FAILURE, align 4
  %59 = call i32 @exit(i32 %58) #3
  unreachable

60:                                               ; preds = %53
  ret void
}

declare dso_local i32 @getuid(...) #1

declare dso_local i32 @getgid(...) #1

declare dso_local i64 @unshare(i32) #1

declare dso_local i32 @perror(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @write_file(i8*, i8*, ...) #1

declare dso_local i32 @CPU_ZERO(i32*) #1

declare dso_local i32 @CPU_SET(i32, i32*) #1

declare dso_local i64 @sched_setaffinity(i32, i32, i32*) #1

declare dso_local i64 @system(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
