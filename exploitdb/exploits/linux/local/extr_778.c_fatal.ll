; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_778.c_fatal.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_778.c_fatal.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SIGSTOP = common dso_local global i32 0, align 4
@fstop = common dso_local global i64 0, align 8
@SIGKILL = common dso_local global i32 0, align 4
@errno = common dso_local global i32 0, align 4
@stdout = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [17 x i8] c"\0A[-] FAILED: %s \00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"\0A[-] FAILED: %s (%s) \00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"\0ACRITICAL, entering endless loop\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@libname = common dso_local global i32 0, align 4
@cpid = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @fatal(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load i32, i32* %4, align 4
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %2
  %9 = load i32, i32* @SIGSTOP, align 4
  br label %19

10:                                               ; preds = %2
  %11 = load i64, i64* @fstop, align 8
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = load i32, i32* @SIGSTOP, align 4
  br label %17

15:                                               ; preds = %10
  %16 = load i32, i32* @SIGKILL, align 4
  br label %17

17:                                               ; preds = %15, %13
  %18 = phi i32 [ %14, %13 ], [ %16, %15 ]
  br label %19

19:                                               ; preds = %17, %8
  %20 = phi i32 [ %9, %8 ], [ %18, %17 ]
  store i32 %20, i32* %5, align 4
  %21 = load i32, i32* @errno, align 4
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %19
  %24 = load i32, i32* @stdout, align 4
  %25 = load i8*, i8** %3, align 8
  %26 = call i32 (i32, i8*, i8*, ...) @fprintf(i32 %24, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* %25)
  br label %34

27:                                               ; preds = %19
  %28 = load i32, i32* @stdout, align 4
  %29 = load i8*, i8** %3, align 8
  %30 = load i32, i32* @errno, align 4
  %31 = call i64 @strerror(i32 %30)
  %32 = inttoptr i64 %31 to i8*
  %33 = call i32 (i32, i8*, i8*, ...) @fprintf(i32 %28, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i8* %29, i8* %32)
  br label %34

34:                                               ; preds = %27, %23
  %35 = load i32, i32* %4, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %34
  %38 = call i32 @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0))
  br label %39

39:                                               ; preds = %37, %34
  %40 = call i32 @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %41 = load i32, i32* @stdout, align 4
  %42 = call i32 @fflush(i32 %41)
  %43 = load i32, i32* @libname, align 4
  %44 = call i32 @unlink(i32 %43)
  %45 = load i32, i32* @cpid, align 4
  %46 = load i32, i32* @SIGKILL, align 4
  %47 = call i32 @kill(i32 %45, i32 %46)
  br label %48

48:                                               ; preds = %48, %39
  %49 = load i32, i32* %5, align 4
  %50 = call i32 @kill(i32 0, i32 %49)
  br label %48
}

declare dso_local i32 @fprintf(i32, i8*, i8*, ...) #1

declare dso_local i64 @strerror(i32) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @fflush(i32) #1

declare dso_local i32 @unlink(i32) #1

declare dso_local i32 @kill(i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
