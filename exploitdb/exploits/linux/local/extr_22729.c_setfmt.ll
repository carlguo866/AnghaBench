; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_22729.c_setfmt.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_22729.c_setfmt.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32, i64 }

@target = common dso_local global %struct.TYPE_2__* null, align 8
@.str = private unnamed_addr constant [35 x i8] c"setfmt(): allocating memory failed\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"8 %%.%dd%%%d$hn%%.%dd%%%d$hn\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @setfmt(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  %8 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %9 = load i32, i32* %2, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %8, i64 %10
  %12 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %11, i32 0, i32 0
  %13 = load i32, i32* %12, align 8
  store i32 %13, i32* %5, align 4
  %14 = load %struct.TYPE_2__*, %struct.TYPE_2__** @target, align 8
  %15 = load i32, i32* %2, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %14, i64 %16
  %18 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %17, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %6, align 8
  %20 = load i64, i64* %6, align 8
  %21 = and i64 %20, 4294901760
  %22 = lshr i64 %21, 16
  %23 = trunc i64 %22 to i32
  store i32 %23, i32* %4, align 4
  %24 = load i64, i64* %6, align 8
  %25 = and i64 %24, 65535
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %3, align 4
  %27 = call i64 @malloc(i32 65)
  %28 = inttoptr i64 %27 to i8*
  store i8* %28, i8** %7, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %1
  %31 = call i32 @printe(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0))
  br label %32

32:                                               ; preds = %30, %1
  %33 = load i8*, i8** %7, align 8
  %34 = call i32 @bzero(i8* %33, i32 65)
  %35 = load i32, i32* %4, align 4
  %36 = load i32, i32* %3, align 4
  %37 = icmp ult i32 %35, %36
  br i1 %37, label %38, label %49

38:                                               ; preds = %32
  %39 = load i8*, i8** %7, align 8
  %40 = load i32, i32* %4, align 4
  %41 = sub i32 %40, 1
  %42 = load i32, i32* %5, align 4
  %43 = load i32, i32* %3, align 4
  %44 = load i32, i32* %4, align 4
  %45 = sub i32 %43, %44
  %46 = load i32, i32* %5, align 4
  %47 = add i32 %46, 1
  %48 = call i32 @sprintf(i8* %39, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i32 %41, i32 %42, i32 %45, i32 %47)
  br label %60

49:                                               ; preds = %32
  %50 = load i8*, i8** %7, align 8
  %51 = load i32, i32* %3, align 4
  %52 = sub i32 %51, 1
  %53 = load i32, i32* %5, align 4
  %54 = add i32 %53, 1
  %55 = load i32, i32* %4, align 4
  %56 = load i32, i32* %3, align 4
  %57 = sub i32 %55, %56
  %58 = load i32, i32* %5, align 4
  %59 = call i32 @sprintf(i8* %50, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i32 %52, i32 %54, i32 %57, i32 %58)
  br label %60

60:                                               ; preds = %49, %38
  %61 = load i8*, i8** %7, align 8
  ret i8* %61
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @printe(i8*) #1

declare dso_local i32 @bzero(i8*, i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i32, i32, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
