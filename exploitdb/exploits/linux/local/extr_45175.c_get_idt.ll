; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45175.c_get_idt.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45175.c_get_idt.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.idt_register = type { i32, i32 }

@.str = private unnamed_addr constant [40 x i8] c"get_idt_base: base: %016lx, length: %d\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.idt_register*)* @get_idt to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_idt(%struct.idt_register* %0) #0 {
  %2 = alloca %struct.idt_register*, align 8
  store %struct.idt_register* %0, %struct.idt_register** %2, align 8
  %3 = load %struct.idt_register*, %struct.idt_register** %2, align 8
  call void asm sideeffect "sidt $0", "*m,~{dirflag},~{fpsr},~{flags}"(%struct.idt_register* %3) #2, !srcloc !2
  %4 = load %struct.idt_register*, %struct.idt_register** %2, align 8
  %5 = getelementptr inbounds %struct.idt_register, %struct.idt_register* %4, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = load %struct.idt_register*, %struct.idt_register** %2, align 8
  %8 = getelementptr inbounds %struct.idt_register, %struct.idt_register* %7, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = call i32 @debug1(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i32 %6, i32 %9)
  ret void
}

declare dso_local i32 @debug1(i8*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
!2 = !{i32 299}
