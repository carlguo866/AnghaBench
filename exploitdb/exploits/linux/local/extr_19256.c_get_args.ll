; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19256.c_get_args.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19256.c_get_args.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [9 x i8] c"c:s:a:e:\00", align 1
@EOF = common dso_local global i32 0, align 4
@client_addr = common dso_local global i32 0, align 4
@optarg = common dso_local global i32 0, align 4
@host_addr = common dso_local global i32 0, align 4
@realpath_adjust = common dso_local global i8* null, align 8
@exploit_length = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @get_args(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  br label %6

6:                                                ; preds = %30, %2
  %7 = load i32, i32* %3, align 4
  %8 = load i8**, i8*** %4, align 8
  %9 = call i32 @getopt(i32 %7, i8** %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0))
  store i32 %9, i32* %5, align 4
  %10 = load i32, i32* @EOF, align 4
  %11 = icmp ne i32 %9, %10
  br i1 %11, label %12, label %31

12:                                               ; preds = %6
  %13 = load i32, i32* %5, align 4
  switch i32 %13, label %28 [
    i32 99, label %14
    i32 115, label %18
    i32 97, label %22
    i32 101, label %25
  ]

14:                                               ; preds = %12
  %15 = load i32, i32* @client_addr, align 4
  %16 = load i32, i32* @optarg, align 4
  %17 = call i32 @strcpy(i32 %15, i32 %16)
  br label %30

18:                                               ; preds = %12
  %19 = load i32, i32* @host_addr, align 4
  %20 = load i32, i32* @optarg, align 4
  %21 = call i32 @strcpy(i32 %19, i32 %20)
  br label %30

22:                                               ; preds = %12
  %23 = load i32, i32* @optarg, align 4
  %24 = call i8* @atoi(i32 %23)
  store i8* %24, i8** @realpath_adjust, align 8
  br label %30

25:                                               ; preds = %12
  %26 = load i32, i32* @optarg, align 4
  %27 = call i8* @atoi(i32 %26)
  store i8* %27, i8** @exploit_length, align 8
  br label %30

28:                                               ; preds = %12
  %29 = call i32 (...) @usage()
  br label %30

30:                                               ; preds = %28, %25, %22, %18, %14
  br label %6

31:                                               ; preds = %6
  ret void
}

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @strcpy(i32, i32) #1

declare dso_local i8* @atoi(i32) #1

declare dso_local i32 @usage(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
