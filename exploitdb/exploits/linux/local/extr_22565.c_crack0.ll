; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_22565.c_crack0.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_22565.c_crack0.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@MAX_LEN = common dso_local global i32 0, align 4
@MIN_CHAR = common dso_local global i32 0, align 4
@MAX_CHAR = common dso_local global i32 0, align 4
@MASK = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @crack0(i32 %0, i32 %1, i32 %2, i32* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i8*, align 8
  %26 = alloca i64, align 8
  %27 = alloca i64, align 8
  %28 = alloca i64, align 8
  %29 = alloca i64, align 8
  %30 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32* %3, i32** %9, align 8
  %31 = load i32, i32* @MAX_LEN, align 4
  %32 = sub nsw i32 %31, 2
  %33 = zext i32 %32 to i64
  %34 = call i8* @llvm.stacksave()
  store i8* %34, i8** %25, align 8
  %35 = alloca i32, i64 %33, align 16
  store i64 %33, i64* %26, align 8
  %36 = load i32, i32* @MAX_LEN, align 4
  %37 = sub nsw i32 %36, 2
  %38 = zext i32 %37 to i64
  %39 = alloca i32, i64 %38, align 16
  store i64 %38, i64* %27, align 8
  %40 = load i32, i32* @MAX_LEN, align 4
  %41 = sub nsw i32 %40, 3
  %42 = zext i32 %41 to i64
  %43 = alloca i32, i64 %42, align 16
  store i64 %42, i64* %28, align 8
  %44 = load i32, i32* @MAX_LEN, align 4
  %45 = sub nsw i32 %44, 3
  %46 = zext i32 %45 to i64
  %47 = alloca i32, i64 %46, align 16
  store i64 %46, i64* %29, align 8
  store i32 -1, i32* %10, align 4
  store i32 7, i32* %14, align 4
  %48 = getelementptr inbounds i32, i32* %35, i64 0
  store i32 1345345333, i32* %48, align 16
  %49 = getelementptr inbounds i32, i32* %39, i64 0
  store i32 305419889, i32* %49, align 16
  br label %50

50:                                               ; preds = %284, %4
  br label %51

51:                                               ; preds = %50
  br label %52

52:                                               ; preds = %56, %51
  %53 = load i32, i32* %10, align 4
  %54 = load i32, i32* %6, align 4
  %55 = icmp slt i32 %53, %54
  br i1 %55, label %56, label %125

56:                                               ; preds = %52
  %57 = load i32, i32* %10, align 4
  %58 = add nsw i32 %57, 1
  store i32 %58, i32* %10, align 4
  %59 = load i32, i32* @MIN_CHAR, align 4
  %60 = load i32*, i32** %9, align 8
  %61 = load i32, i32* %10, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %60, i64 %62
  store i32 %59, i32* %63, align 4
  %64 = load i32, i32* %10, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i32, i32* %35, i64 %65
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 63
  %69 = load i32, i32* %14, align 4
  %70 = add nsw i32 %68, %69
  %71 = load i32, i32* %10, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %47, i64 %72
  store i32 %70, i32* %73, align 4
  %74 = load i32, i32* %10, align 4
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i32, i32* %47, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = load i32, i32* @MIN_CHAR, align 4
  %79 = mul nsw i32 %77, %78
  %80 = load i32, i32* %10, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i32, i32* %35, i64 %81
  %83 = load i32, i32* %82, align 4
  %84 = shl i32 %83, 8
  %85 = add nsw i32 %79, %84
  %86 = load i32, i32* %10, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i32, i32* %43, i64 %87
  store i32 %85, i32* %88, align 4
  %89 = load i32, i32* @MIN_CHAR, align 4
  %90 = load i32, i32* %14, align 4
  %91 = add nsw i32 %90, %89
  store i32 %91, i32* %14, align 4
  %92 = load i32, i32* %10, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i32, i32* %35, i64 %93
  %95 = load i32, i32* %94, align 4
  %96 = load i32, i32* %10, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i32, i32* %43, i64 %97
  %99 = load i32, i32* %98, align 4
  %100 = xor i32 %95, %99
  %101 = load i32, i32* %10, align 4
  %102 = add nsw i32 %101, 1
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %35, i64 %103
  store i32 %100, i32* %104, align 4
  %105 = load i32, i32* %10, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i32, i32* %39, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = load i32, i32* %10, align 4
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i32, i32* %39, i64 %110
  %112 = load i32, i32* %111, align 4
  %113 = shl i32 %112, 8
  %114 = load i32, i32* %10, align 4
  %115 = add nsw i32 %114, 1
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i32, i32* %35, i64 %116
  %118 = load i32, i32* %117, align 4
  %119 = xor i32 %113, %118
  %120 = add nsw i32 %108, %119
  %121 = load i32, i32* %10, align 4
  %122 = add nsw i32 %121, 1
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i32, i32* %39, i64 %123
  store i32 %120, i32* %124, align 4
  br label %52

125:                                              ; preds = %52
  %126 = load i32, i32* %10, align 4
  %127 = add nsw i32 %126, 1
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i32, i32* %35, i64 %128
  %130 = load i32, i32* %129, align 4
  store i32 %130, i32* %20, align 4
  %131 = load i32, i32* %10, align 4
  %132 = add nsw i32 %131, 1
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i32, i32* %39, i64 %133
  %135 = load i32, i32* %134, align 4
  store i32 %135, i32* %21, align 4
  %136 = load i32, i32* %20, align 4
  %137 = and i32 %136, 63
  %138 = load i32, i32* %14, align 4
  %139 = add nsw i32 %137, %138
  store i32 %139, i32* %15, align 4
  %140 = load i32, i32* %15, align 4
  %141 = load i32, i32* @MIN_CHAR, align 4
  %142 = mul nsw i32 %140, %141
  %143 = load i32, i32* %20, align 4
  %144 = shl i32 %143, 8
  %145 = add nsw i32 %142, %144
  store i32 %145, i32* %18, align 4
  %146 = load i32, i32* %21, align 4
  %147 = shl i32 %146, 8
  %148 = load i32, i32* %20, align 4
  %149 = xor i32 %147, %148
  store i32 %149, i32* %19, align 4
  %150 = load i32, i32* @MIN_CHAR, align 4
  store i32 %150, i32* %11, align 4
  br label %151

151:                                              ; preds = %254, %125
  %152 = load i32, i32* %11, align 4
  %153 = load i32, i32* @MAX_CHAR, align 4
  %154 = icmp sle i32 %152, %153
  br i1 %154, label %155, label %260

155:                                              ; preds = %151
  %156 = load i32, i32* %21, align 4
  %157 = load i32, i32* %18, align 4
  %158 = load i32, i32* %19, align 4
  %159 = xor i32 %157, %158
  %160 = add nsw i32 %156, %159
  store i32 %160, i32* %23, align 4
  %161 = load i32, i32* %20, align 4
  %162 = load i32, i32* %18, align 4
  %163 = xor i32 %161, %162
  store i32 %163, i32* %22, align 4
  %164 = load i32, i32* %8, align 4
  %165 = load i32, i32* %23, align 4
  %166 = sub nsw i32 %164, %165
  %167 = load i32, i32* %23, align 4
  %168 = shl i32 %167, 8
  %169 = xor i32 %166, %168
  store i32 %169, i32* %24, align 4
  %170 = load i32, i32* %22, align 4
  %171 = and i32 %170, 63
  %172 = load i32, i32* %14, align 4
  %173 = add nsw i32 %171, %172
  %174 = load i32, i32* %11, align 4
  %175 = add nsw i32 %173, %174
  store i32 %175, i32* %17, align 4
  %176 = load i32, i32* %24, align 4
  %177 = load i32, i32* %22, align 4
  %178 = xor i32 %176, %177
  %179 = load i32, i32* %22, align 4
  %180 = shl i32 %179, 8
  %181 = sub nsw i32 %178, %180
  %182 = load i32, i32* @MASK, align 4
  %183 = and i32 %181, %182
  store i32 %183, i32* %16, align 4
  %184 = load i32, i32* %16, align 4
  %185 = load i32, i32* %17, align 4
  %186 = srem i32 %184, %185
  %187 = icmp ne i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %155
  br label %254

189:                                              ; preds = %155
  %190 = load i32, i32* %16, align 4
  %191 = load i32, i32* %17, align 4
  %192 = sdiv i32 %190, %191
  store i32 %192, i32* %12, align 4
  %193 = load i32, i32* %12, align 4
  %194 = load i32, i32* @MIN_CHAR, align 4
  %195 = icmp slt i32 %193, %194
  br i1 %195, label %200, label %196

196:                                              ; preds = %189
  %197 = load i32, i32* %12, align 4
  %198 = load i32, i32* @MAX_CHAR, align 4
  %199 = icmp sgt i32 %197, %198
  br i1 %199, label %200, label %201

200:                                              ; preds = %196, %189
  br label %254

201:                                              ; preds = %196
  %202 = load i32, i32* %24, align 4
  %203 = and i32 %202, 63
  %204 = load i32, i32* %14, align 4
  %205 = add nsw i32 %203, %204
  %206 = load i32, i32* %11, align 4
  %207 = add nsw i32 %205, %206
  %208 = load i32, i32* %12, align 4
  %209 = add nsw i32 %207, %208
  store i32 %209, i32* %17, align 4
  %210 = load i32, i32* %7, align 4
  %211 = load i32, i32* %24, align 4
  %212 = xor i32 %210, %211
  %213 = load i32, i32* %24, align 4
  %214 = shl i32 %213, 8
  %215 = sub nsw i32 %212, %214
  %216 = load i32, i32* @MASK, align 4
  %217 = and i32 %215, %216
  store i32 %217, i32* %16, align 4
  %218 = load i32, i32* %16, align 4
  %219 = load i32, i32* %17, align 4
  %220 = srem i32 %218, %219
  %221 = icmp ne i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %201
  br label %254

223:                                              ; preds = %201
  %224 = load i32, i32* %16, align 4
  %225 = load i32, i32* %17, align 4
  %226 = sdiv i32 %224, %225
  store i32 %226, i32* %13, align 4
  %227 = load i32, i32* %13, align 4
  %228 = load i32, i32* @MIN_CHAR, align 4
  %229 = icmp slt i32 %227, %228
  br i1 %229, label %234, label %230

230:                                              ; preds = %223
  %231 = load i32, i32* %13, align 4
  %232 = load i32, i32* @MAX_CHAR, align 4
  %233 = icmp sgt i32 %231, %232
  br i1 %233, label %234, label %235

234:                                              ; preds = %230, %223
  br label %254

235:                                              ; preds = %230
  %236 = load i32, i32* %11, align 4
  %237 = load i32*, i32** %9, align 8
  %238 = load i32, i32* %10, align 4
  %239 = add nsw i32 %238, 1
  %240 = sext i32 %239 to i64
  %241 = getelementptr inbounds i32, i32* %237, i64 %240
  store i32 %236, i32* %241, align 4
  %242 = load i32, i32* %12, align 4
  %243 = load i32*, i32** %9, align 8
  %244 = load i32, i32* %10, align 4
  %245 = add nsw i32 %244, 2
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i32, i32* %243, i64 %246
  store i32 %242, i32* %247, align 4
  %248 = load i32, i32* %13, align 4
  %249 = load i32*, i32** %9, align 8
  %250 = load i32, i32* %10, align 4
  %251 = add nsw i32 %250, 3
  %252 = sext i32 %251 to i64
  %253 = getelementptr inbounds i32, i32* %249, i64 %252
  store i32 %248, i32* %253, align 4
  store i32 1, i32* %5, align 4
  store i32 1, i32* %30, align 4
  br label %336

254:                                              ; preds = %234, %222, %200, %188
  %255 = load i32, i32* %11, align 4
  %256 = add nsw i32 %255, 1
  store i32 %256, i32* %11, align 4
  %257 = load i32, i32* %15, align 4
  %258 = load i32, i32* %18, align 4
  %259 = add nsw i32 %258, %257
  store i32 %259, i32* %18, align 4
  br label %151

260:                                              ; preds = %151
  br label %261

261:                                              ; preds = %274, %260
  %262 = load i32, i32* %10, align 4
  %263 = icmp sge i32 %262, 0
  br i1 %263, label %264, label %272

264:                                              ; preds = %261
  %265 = load i32*, i32** %9, align 8
  %266 = load i32, i32* %10, align 4
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds i32, i32* %265, i64 %267
  %269 = load i32, i32* %268, align 4
  %270 = load i32, i32* @MAX_CHAR, align 4
  %271 = icmp sge i32 %269, %270
  br label %272

272:                                              ; preds = %264, %261
  %273 = phi i1 [ false, %261 ], [ %271, %264 ]
  br i1 %273, label %274, label %280

274:                                              ; preds = %272
  %275 = load i32, i32* @MAX_CHAR, align 4
  %276 = load i32, i32* %14, align 4
  %277 = sub nsw i32 %276, %275
  store i32 %277, i32* %14, align 4
  %278 = load i32, i32* %10, align 4
  %279 = add nsw i32 %278, -1
  store i32 %279, i32* %10, align 4
  br label %261

280:                                              ; preds = %272
  %281 = load i32, i32* %10, align 4
  %282 = icmp slt i32 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %280
  br label %335

284:                                              ; preds = %280
  %285 = load i32*, i32** %9, align 8
  %286 = load i32, i32* %10, align 4
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds i32, i32* %285, i64 %287
  %289 = load i32, i32* %288, align 4
  %290 = add nsw i32 %289, 1
  store i32 %290, i32* %288, align 4
  %291 = load i32, i32* %10, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds i32, i32* %47, i64 %292
  %294 = load i32, i32* %293, align 4
  %295 = load i32, i32* %10, align 4
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds i32, i32* %43, i64 %296
  %298 = load i32, i32* %297, align 4
  %299 = add nsw i32 %298, %294
  store i32 %299, i32* %297, align 4
  %300 = load i32, i32* %14, align 4
  %301 = add nsw i32 %300, 1
  store i32 %301, i32* %14, align 4
  %302 = load i32, i32* %10, align 4
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds i32, i32* %35, i64 %303
  %305 = load i32, i32* %304, align 4
  %306 = load i32, i32* %10, align 4
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds i32, i32* %43, i64 %307
  %309 = load i32, i32* %308, align 4
  %310 = xor i32 %305, %309
  %311 = load i32, i32* %10, align 4
  %312 = add nsw i32 %311, 1
  %313 = sext i32 %312 to i64
  %314 = getelementptr inbounds i32, i32* %35, i64 %313
  store i32 %310, i32* %314, align 4
  %315 = load i32, i32* %10, align 4
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds i32, i32* %39, i64 %316
  %318 = load i32, i32* %317, align 4
  %319 = load i32, i32* %10, align 4
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds i32, i32* %39, i64 %320
  %322 = load i32, i32* %321, align 4
  %323 = shl i32 %322, 8
  %324 = load i32, i32* %10, align 4
  %325 = add nsw i32 %324, 1
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i32, i32* %35, i64 %326
  %328 = load i32, i32* %327, align 4
  %329 = xor i32 %323, %328
  %330 = add nsw i32 %318, %329
  %331 = load i32, i32* %10, align 4
  %332 = add nsw i32 %331, 1
  %333 = sext i32 %332 to i64
  %334 = getelementptr inbounds i32, i32* %39, i64 %333
  store i32 %330, i32* %334, align 4
  br label %50

335:                                              ; preds = %283
  store i32 0, i32* %5, align 4
  store i32 1, i32* %30, align 4
  br label %336

336:                                              ; preds = %335, %235
  %337 = load i8*, i8** %25, align 8
  call void @llvm.stackrestore(i8* %337)
  %338 = load i32, i32* %5, align 4
  ret i32 %338
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
