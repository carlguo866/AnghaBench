; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20901.c_usage.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20901.c_usage.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [55 x i8] c"%s versus Red Hat Linux/Intel 6.2 (Zoot) sudo-1.6.1-1\0A\00", align 1
@.str.1 = private unnamed_addr constant [61 x i8] c"Copyright (C) 2001 Michel \22MaXX\22 Kaempf <maxx@synnergy.net>\0A\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.3 = private unnamed_addr constant [35 x i8] c"* Usage: %s __malloc_hook tz envp\0A\00", align 1
@.str.4 = private unnamed_addr constant [37 x i8] c"* Example: %s 0x002501dc 62595 6866\0A\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"* __malloc_hook:\0A\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"  $ LD_TRACE_LOADED_OBJECTS=1 %s | grep %s\0A\00", align 1
@SUDO = common dso_local global i8* null, align 8
@LIBC = common dso_local global i8* null, align 8
@.str.7 = private unnamed_addr constant [44 x i8] c"  $ objdump --syms %s | grep __malloc_hook\0A\00", align 1
@.str.8 = private unnamed_addr constant [32 x i8] c"  $ nm %s | grep __malloc_hook\0A\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"* tz:\0A\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"  - first: %u\0A\00", align 1
@TZ_FIRST = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [14 x i8] c"  - step: %u\0A\00", align 1
@TZ_STEP = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [14 x i8] c"  - last: %u\0A\00", align 1
@TZ_LAST = common dso_local global i32 0, align 4
@.str.13 = private unnamed_addr constant [9 x i8] c"* envp:\0A\00", align 1
@ENVP_FIRST = common dso_local global i32 0, align 4
@ENVP_STEP = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @usage(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i8* %3)
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0))
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %7 = load i8*, i8** %2, align 8
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.3, i64 0, i64 0), i8* %7)
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %10 = load i8*, i8** %2, align 8
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i8* %10)
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0))
  %14 = load i8*, i8** @SUDO, align 8
  %15 = load i8*, i8** @LIBC, align 8
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %14, i8* %15)
  %17 = load i8*, i8** @LIBC, align 8
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0), i8* %17)
  %19 = load i8*, i8** @LIBC, align 8
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i64 0, i64 0), i8* %19)
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0))
  %23 = load i32, i32* @TZ_FIRST, align 4
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i32 %23)
  %25 = load i32, i32* @TZ_STEP, align 4
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i32 %25)
  %27 = load i32, i32* @TZ_LAST, align 4
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), i32 %27)
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0))
  %31 = load i32, i32* @ENVP_FIRST, align 4
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i32 %31)
  %33 = load i32, i32* @ENVP_STEP, align 4
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i32 %33)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
