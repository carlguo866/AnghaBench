; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_160.c_pte_populate.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_160.c_pte_populate.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@PAGE_SIZE = common dso_local global i32 0, align 4
@suid_code_end = common dso_local global i64 0, align 8
@suid_code = common dso_local global i64 0, align 8
@launch = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i32)* @pte_populate to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @pte_populate(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  %5 = load i32, i32* %2, align 4
  %6 = zext i32 %5 to i64
  %7 = inttoptr i64 %6 to i8*
  %8 = load i32, i32* @PAGE_SIZE, align 4
  %9 = call i32 @memset(i8* %7, i32 144, i32 %8)
  %10 = load i64, i64* @suid_code_end, align 8
  %11 = trunc i64 %10 to i32
  %12 = load i64, i64* @suid_code, align 8
  %13 = trunc i64 %12 to i32
  %14 = sub i32 %11, %13
  store i32 %14, i32* %3, align 4
  %15 = load i32, i32* %2, align 4
  %16 = load i32, i32* @PAGE_SIZE, align 4
  %17 = add i32 %15, %16
  %18 = zext i32 %17 to i64
  %19 = inttoptr i64 %18 to i8*
  store i8* %19, i8** %4, align 8
  %20 = load i32, i32* %3, align 4
  %21 = add i32 %20, 1
  %22 = load i8*, i8** %4, align 8
  %23 = zext i32 %21 to i64
  %24 = sub i64 0, %23
  %25 = getelementptr inbounds i8, i8* %22, i64 %24
  store i8* %25, i8** %4, align 8
  %26 = load i8*, i8** %4, align 8
  %27 = load i64, i64* @suid_code, align 8
  %28 = trunc i64 %27 to i32
  %29 = load i32, i32* %3, align 4
  %30 = call i32 @memcpy(i8* %26, i32 %28, i32 %29)
  %31 = load i32, i32* %2, align 4
  %32 = zext i32 %31 to i64
  %33 = inttoptr i64 %32 to i8*
  %34 = load i32, i32* @launch, align 4
  %35 = load i32, i32* @launch, align 4
  %36 = call i32 @strlen(i32 %35)
  %37 = add nsw i32 %36, 1
  %38 = call i32 @memcpy(i8* %33, i32 %34, i32 %37)
  ret void
}

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i32, i32) #1

declare dso_local i32 @strlen(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
