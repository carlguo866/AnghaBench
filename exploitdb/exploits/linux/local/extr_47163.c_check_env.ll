; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_47163.c_check_env.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_47163.c_check_env.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [15 x i8] c"XDG_SESSION_ID\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"[.] Checking environment ...\0A\00", align 1
@pkexec_path = common dso_local global i8* null, align 8
@st = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [43 x i8] c"[-] Could not find pkexec executable at %s\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@pkaction_path = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [45 x i8] c"[-] Could not find pkaction executable at %s\00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"[!] Warning: $XDG_SESSION_ID is not set\0A\00", align 1
@.str.5 = private unnamed_addr constant [108 x i8] c"/bin/loginctl --no-ask-password show-session $XDG_SESSION_ID | /bin/grep Remote=no >>/dev/null 2>>/dev/null\00", align 1
@.str.6 = private unnamed_addr constant [49 x i8] c"[!] Warning: Could not find active PolKit agent\0A\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"/usr/sbin/getsebool\00", align 1
@.str.8 = private unnamed_addr constant [54 x i8] c"/usr/sbin/getsebool deny_ptrace 2>1 | /bin/grep -q on\00", align 1
@.str.9 = private unnamed_addr constant [45 x i8] c"[!] Warning: SELinux deny_ptrace is enabled\0A\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"[~] Done, looks good\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 ()* @check_env to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @check_env() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = call i8* @getenv(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0))
  store i8* %3, i8** %2, align 8
  %4 = call i32 (i8*, ...) @dprintf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0))
  %5 = load i8*, i8** @pkexec_path, align 8
  %6 = call i64 @stat(i8* %5, i32* @st)
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %13

8:                                                ; preds = %0
  %9 = load i8*, i8** @pkexec_path, align 8
  %10 = call i32 (i8*, ...) @dprintf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i8* %9)
  %11 = load i32, i32* @EXIT_FAILURE, align 4
  %12 = call i32 @exit(i32 %11) #3
  unreachable

13:                                               ; preds = %0
  %14 = load i8*, i8** @pkaction_path, align 8
  %15 = call i64 @stat(i8* %14, i32* @st)
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %22

17:                                               ; preds = %13
  %18 = load i8*, i8** @pkaction_path, align 8
  %19 = call i32 (i8*, ...) @dprintf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i8* %18)
  %20 = load i32, i32* @EXIT_FAILURE, align 4
  %21 = call i32 @exit(i32 %20) #3
  unreachable

22:                                               ; preds = %13
  %23 = load i8*, i8** %2, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = call i32 (i8*, ...) @dprintf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %43

27:                                               ; preds = %22
  %28 = call i64 @system(i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.5, i64 0, i64 0))
  %29 = icmp ne i64 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %27
  %31 = call i32 (i8*, ...) @dprintf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.6, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %43

32:                                               ; preds = %27
  %33 = call i64 @stat(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0), i32* @st)
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %32
  %36 = call i64 @system(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8, i64 0, i64 0))
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %35
  %39 = call i32 (i8*, ...) @dprintf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %43

40:                                               ; preds = %35
  br label %41

41:                                               ; preds = %40, %32
  %42 = call i32 (i8*, ...) @dprintf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0))
  store i32 0, i32* %1, align 4
  br label %43

43:                                               ; preds = %41, %38, %30, %25
  %44 = load i32, i32* %1, align 4
  ret i32 %44
}

declare dso_local i8* @getenv(i8*) #1

declare dso_local i32 @dprintf(i8*, ...) #1

declare dso_local i64 @stat(i8*, i32*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i64 @system(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
