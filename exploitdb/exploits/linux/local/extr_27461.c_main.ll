; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_27461.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_27461.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i32, %struct.TYPE_2__, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.sockaddr = type { i32 }

@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [17 x i8] c"usage: bug PORT\0A\00", align 1
@PF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [12 x i8] c"ls = socket\00", align 1
@SOL_SOCKET = common dso_local global i32 0, align 4
@SO_REUSEADDR = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [15 x i8] c"setsockopt(ls)\00", align 1
@INADDR_ANY = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [9 x i8] c"bind(ls)\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"listen(ls)\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"accept(ls)\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"getsockname(as)\00", align 1
@SOL_IP = common dso_local global i32 0, align 4
@SO_ORIGINAL_DST = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.sockaddr_in, align 4
  %12 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %13 = load i32, i32* %4, align 4
  %14 = icmp ne i32 %13, 2
  br i1 %14, label %21, label %15

15:                                               ; preds = %2
  %16 = load i8**, i8*** %5, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 1
  %18 = load i8*, i8** %17, align 8
  %19 = call i32 @atoi(i8* %18)
  store i32 %19, i32* %6, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %15, %2
  %22 = load i32, i32* @stderr, align 4
  %23 = call i32 @fprintf(i32 %22, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %97

24:                                               ; preds = %15
  %25 = load i32, i32* @PF_INET, align 4
  %26 = load i32, i32* @SOCK_STREAM, align 4
  %27 = call i32 @socket(i32 %25, i32 %26, i32 0)
  store i32 %27, i32* %7, align 4
  %28 = load i32, i32* %7, align 4
  %29 = icmp eq i32 %28, -1
  br i1 %29, label %30, label %32

30:                                               ; preds = %24
  %31 = call i32 @perror(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %97

32:                                               ; preds = %24
  store i32 1, i32* %10, align 4
  %33 = load i32, i32* %7, align 4
  %34 = load i32, i32* @SOL_SOCKET, align 4
  %35 = load i32, i32* @SO_REUSEADDR, align 4
  %36 = call i32 @setsockopt(i32 %33, i32 %34, i32 %35, i32* %10, i32 4)
  store i32 %36, i32* %9, align 4
  %37 = load i32, i32* %9, align 4
  %38 = icmp eq i32 %37, -1
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = call i32 @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %97

41:                                               ; preds = %32
  %42 = load i32, i32* @PF_INET, align 4
  %43 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 2
  store i32 %42, i32* %43, align 4
  %44 = load i32, i32* @INADDR_ANY, align 4
  %45 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 1
  %46 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %45, i32 0, i32 0
  store i32 %44, i32* %46, align 4
  %47 = load i32, i32* %6, align 4
  %48 = call i32 @htons(i32 %47)
  %49 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 0
  store i32 %48, i32* %49, align 4
  %50 = load i32, i32* %7, align 4
  %51 = bitcast %struct.sockaddr_in* %11 to %struct.sockaddr*
  %52 = call i32 @bind(i32 %50, %struct.sockaddr* %51, i32 12)
  store i32 %52, i32* %9, align 4
  %53 = load i32, i32* %9, align 4
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %55, label %57

55:                                               ; preds = %41
  %56 = call i32 @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %97

57:                                               ; preds = %41
  %58 = load i32, i32* %7, align 4
  %59 = call i32 @listen(i32 %58, i32 1)
  store i32 %59, i32* %9, align 4
  %60 = load i32, i32* %9, align 4
  %61 = icmp eq i32 %60, -1
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = call i32 @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %97

64:                                               ; preds = %57
  store i32 12, i32* %12, align 4
  %65 = load i32, i32* %7, align 4
  %66 = bitcast %struct.sockaddr_in* %11 to %struct.sockaddr*
  %67 = call i32 @accept(i32 %65, %struct.sockaddr* %66, i32* %12)
  store i32 %67, i32* %8, align 4
  %68 = load i32, i32* %8, align 4
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %70, label %72

70:                                               ; preds = %64
  %71 = call i32 @perror(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %97

72:                                               ; preds = %64
  %73 = bitcast %struct.sockaddr_in* %11 to i8*
  %74 = call i32 @dump(i8* %73, i32 12)
  store i32 12, i32* %12, align 4
  %75 = load i32, i32* %8, align 4
  %76 = bitcast %struct.sockaddr_in* %11 to %struct.sockaddr*
  %77 = call i32 @getsockname(i32 %75, %struct.sockaddr* %76, i32* %12)
  store i32 %77, i32* %9, align 4
  %78 = load i32, i32* %9, align 4
  %79 = icmp eq i32 %78, -1
  br i1 %79, label %80, label %82

80:                                               ; preds = %72
  %81 = call i32 @perror(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %97

82:                                               ; preds = %72
  %83 = bitcast %struct.sockaddr_in* %11 to i8*
  %84 = call i32 @dump(i8* %83, i32 12)
  store i32 12, i32* %12, align 4
  %85 = load i32, i32* %8, align 4
  %86 = load i32, i32* @SOL_IP, align 4
  %87 = load i32, i32* @SO_ORIGINAL_DST, align 4
  %88 = bitcast %struct.sockaddr_in* %11 to %struct.sockaddr*
  %89 = call i32 @getsockopt(i32 %85, i32 %86, i32 %87, %struct.sockaddr* %88, i32* %12)
  store i32 %89, i32* %9, align 4
  %90 = load i32, i32* %9, align 4
  %91 = icmp eq i32 %90, -1
  br i1 %91, label %92, label %94

92:                                               ; preds = %82
  %93 = call i32 @perror(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %97

94:                                               ; preds = %82
  %95 = bitcast %struct.sockaddr_in* %11 to i8*
  %96 = call i32 @dump(i8* %95, i32 12)
  store i32 0, i32* %3, align 4
  br label %97

97:                                               ; preds = %94, %92, %80, %70, %62, %55, %39, %30, %21
  %98 = load i32, i32* %3, align 4
  ret i32 %98
}

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @fprintf(i32, i8*) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @setsockopt(i32, i32, i32, i32*, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @bind(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @listen(i32, i32) #1

declare dso_local i32 @accept(i32, %struct.sockaddr*, i32*) #1

declare dso_local i32 @dump(i8*, i32) #1

declare dso_local i32 @getsockname(i32, %struct.sockaddr*, i32*) #1

declare dso_local i32 @getsockopt(i32, i32, i32, %struct.sockaddr*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
