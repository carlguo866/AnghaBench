; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_1397.c_get_config.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_1397.c_get_config.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@uid = common dso_local global i32 0, align 4
@progargv0 = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [10 x i8] c"e:p:t:ash\00", align 1
@havepse = common dso_local global i32 0, align 4
@definePAE = common dso_local global i32 0, align 4
@optarg = common dso_local global i32 0, align 4
@exploitway = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [21 x i8] c"bad exploitway value\00", align 1
@npages = common dso_local global i8* null, align 8
@thread_size = common dso_local global i64 0, align 8
@THREAD_SIZE_MASK = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i32, i8**)* @get_config to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @get_config(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %6 = call i32 (...) @getuid()
  store i32 %6, i32* @uid, align 4
  %7 = load i8**, i8*** %4, align 8
  %8 = getelementptr inbounds i8*, i8** %7, i64 0
  %9 = load i8*, i8** %8, align 8
  store i8* %9, i8** @progargv0, align 8
  br label %10

10:                                               ; preds = %45, %2
  %11 = load i32, i32* %3, align 4
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %13, label %46

13:                                               ; preds = %10
  %14 = load i32, i32* %3, align 4
  %15 = load i8**, i8*** %4, align 8
  %16 = call i32 @getopt(i32 %14, i8** %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0))
  store i32 %16, i32* %5, align 4
  %17 = load i32, i32* %5, align 4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %13
  br label %46

20:                                               ; preds = %13
  %21 = load i32, i32* %5, align 4
  switch i32 %21, label %40 [
    i32 115, label %22
    i32 97, label %23
    i32 101, label %24
    i32 112, label %32
    i32 116, label %35
    i32 104, label %39
  ]

22:                                               ; preds = %20
  store i32 1, i32* @havepse, align 4
  br label %45

23:                                               ; preds = %20
  store i32 1, i32* @definePAE, align 4
  br label %45

24:                                               ; preds = %20
  %25 = load i32, i32* @optarg, align 4
  %26 = call i8* @atoi(i32 %25)
  store i8* %26, i8** @exploitway, align 8
  %27 = load i8*, i8** @exploitway, align 8
  %28 = icmp ult i8* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  %30 = call i32 @fatal(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0))
  br label %31

31:                                               ; preds = %29, %24
  br label %45

32:                                               ; preds = %20
  %33 = load i32, i32* @optarg, align 4
  %34 = call i8* @atoi(i32 %33)
  store i8* %34, i8** @npages, align 8
  br label %45

35:                                               ; preds = %20
  %36 = load i32, i32* @optarg, align 4
  %37 = call i8* @atoi(i32 %36)
  %38 = ptrtoint i8* %37 to i64
  store i64 %38, i64* @thread_size, align 8
  br label %45

39:                                               ; preds = %20
  br label %40

40:                                               ; preds = %20, %39
  %41 = load i8**, i8*** %4, align 8
  %42 = getelementptr inbounds i8*, i8** %41, i64 0
  %43 = load i8*, i8** %42, align 8
  %44 = call i32 @usage(i8* %43)
  br label %45

45:                                               ; preds = %40, %35, %32, %31, %23, %22
  br label %10

46:                                               ; preds = %19, %10
  %47 = load i64, i64* @thread_size, align 8
  %48 = icmp eq i64 %47, 0
  %49 = zext i1 %48 to i64
  %50 = select i1 %48, i32 -4096, i32 -8192
  store i32 %50, i32* @THREAD_SIZE_MASK, align 4
  %51 = call i32 (...) @read_proc()
  ret void
}

declare dso_local i32 @getuid(...) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i8* @atoi(i32) #1

declare dso_local i32 @fatal(i8*) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @read_proc(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
