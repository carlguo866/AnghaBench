; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_33321.c_gomu_gomu_nooooo_gatling_shell.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_33321.c_gomu_gomu_nooooo_gatling_shell.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [8 x i8] c"/bin/sh\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"--noprofile\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"--norc\00", align 1
@__const.gomu_gomu_nooooo_gatling_shell.argv = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i8* null], align 16
@.str.3 = private unnamed_addr constant [11 x i8] c"TERM=linux\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"PS1=blackbird\\$  \00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"BASH_HISTORY=/dev/null\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"HISTORY=/dev/null\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"history=/dev/null\00", align 1
@.str.8 = private unnamed_addr constant [66 x i8] c"PATH=/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin\00", align 1
@.str.9 = private unnamed_addr constant [32 x i8] c"hheeeehhh! unable to spawn a sh\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @gomu_gomu_nooooo_gatling_shell() #0 {
  %1 = alloca [4 x i8*], align 16
  %2 = alloca [7 x i8*], align 16
  %3 = bitcast [4 x i8*]* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %3, i8* align 16 bitcast ([4 x i8*]* @__const.gomu_gomu_nooooo_gatling_shell.argv to i8*), i64 32, i1 false)
  %4 = bitcast [7 x i8*]* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %4, i8 0, i64 56, i1 false)
  %5 = bitcast i8* %4 to [7 x i8*]*
  %6 = getelementptr inbounds [7 x i8*], [7 x i8*]* %5, i32 0, i32 0
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i8** %6, align 16
  %7 = getelementptr inbounds [7 x i8*], [7 x i8*]* %5, i32 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i32 0, i32 0), i8** %7, align 8
  %8 = getelementptr inbounds [7 x i8*], [7 x i8*]* %5, i32 0, i32 2
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i32 0, i32 0), i8** %8, align 16
  %9 = getelementptr inbounds [7 x i8*], [7 x i8*]* %5, i32 0, i32 3
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i32 0, i32 0), i8** %9, align 8
  %10 = getelementptr inbounds [7 x i8*], [7 x i8*]* %5, i32 0, i32 4
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i32 0, i32 0), i8** %10, align 16
  %11 = getelementptr inbounds [7 x i8*], [7 x i8*]* %5, i32 0, i32 5
  store i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.8, i32 0, i32 0), i8** %11, align 8
  %12 = getelementptr inbounds [4 x i8*], [4 x i8*]* %1, i64 0, i64 0
  %13 = getelementptr inbounds [7 x i8*], [7 x i8*]* %2, i64 0, i64 0
  %14 = call i32 @execve(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8** %12, i8** %13)
  %15 = call i32 @error(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9, i64 0, i64 0))
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dso_local i32 @execve(i8*, i8**, i8**) #2

declare dso_local i32 @error(i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
