; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_778.c_wipe_slab.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_778.c_wipe_slab.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SIGUSR1 = common dso_local global i32 0, align 4
@chldcnt = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [18 x i8] c"\0A[+] SLAB cleanup\00", align 1
@stdout = common dso_local global i32 0, align 4
@ccnt = common dso_local global i64 0, align 8
@val = common dso_local global i32 0, align 4
@cpid = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [15 x i8] c"vm_area_struct\00", align 1
@SLAB_THRSH = common dso_local global i64 0, align 8
@SIG_DFL = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @wipe_slab() #0 {
  %1 = load i32, i32* @SIGUSR1, align 4
  %2 = load i32, i32* @chldcnt, align 4
  %3 = call i32 @signal(i32 %1, i32 %2)
  %4 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0))
  %5 = load i32, i32* @stdout, align 4
  %6 = call i32 @fflush(i32 %5)
  br label %7

7:                                                ; preds = %27, %0
  store i64 0, i64* @ccnt, align 8
  %8 = load i32, i32* @val, align 4
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* @val, align 4
  %10 = call i32 (...) @fork()
  store i32 %10, i32* @cpid, align 4
  %11 = load i32, i32* @cpid, align 4
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %7
  %14 = call i32 (...) @do_wipe()
  br label %15

15:                                               ; preds = %13, %7
  br label %16

16:                                               ; preds = %20, %15
  %17 = load i64, i64* @ccnt, align 8
  %18 = icmp ne i64 %17, 0
  %19 = xor i1 %18, true
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = call i32 (...) @sys_sched_yield()
  br label %16

22:                                               ; preds = %16
  %23 = call i64 @get_slab_objs(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0))
  %24 = load i64, i64* @SLAB_THRSH, align 8
  %25 = icmp sle i64 %23, %24
  br i1 %25, label %26, label %27

26:                                               ; preds = %22
  br label %28

27:                                               ; preds = %22
  br label %7

28:                                               ; preds = %26
  %29 = load i32, i32* @SIGUSR1, align 4
  %30 = load i32, i32* @SIG_DFL, align 4
  %31 = call i32 @signal(i32 %29, i32 %30)
  ret void
}

declare dso_local i32 @signal(i32, i32) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @fflush(i32) #1

declare dso_local i32 @fork(...) #1

declare dso_local i32 @do_wipe(...) #1

declare dso_local i32 @sys_sched_yield(...) #1

declare dso_local i64 @get_slab_objs(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
