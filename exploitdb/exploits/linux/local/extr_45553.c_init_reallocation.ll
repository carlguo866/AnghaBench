; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45553.c_init_reallocation.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_45553.c_init_reallocation.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.realloc_thread_arg = type { i32 }

@.str = private unnamed_addr constant [64 x i8] c"[-] can't use the 'ancillary data buffer' reallocation gadget!\0A\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"[+] can use the 'ancillary data buffer' reallocation gadget!\0A\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"[-] failed to initialize reallocation data!\0A\00", align 1
@.str.3 = private unnamed_addr constant [36 x i8] c"[+] reallocation data initialized!\0A\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"[ ] initializing reallocation threads, please wait...\0A\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"[-] failed to init UNIX sockets!\0A\00", align 1
@realloc_thread = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [19 x i8] c"[-] pthread_create\00", align 1
@g_nb_realloc_thread_ready = common dso_local global i64 0, align 8
@.str.7 = private unnamed_addr constant [37 x i8] c"[+] %lu reallocation threads ready!\0A\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"[-] failed to initialize reallocation\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (%struct.realloc_thread_arg*, i64)* @init_reallocation to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @init_reallocation(%struct.realloc_thread_arg* %0, i64 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.realloc_thread_arg*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store %struct.realloc_thread_arg* %0, %struct.realloc_thread_arg** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32 0, i32* %6, align 4
  store i32 -1, i32* %7, align 4
  %8 = call i32 (...) @can_use_realloc_gadget()
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %2
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0))
  br label %64

12:                                               ; preds = %2
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0))
  %14 = call i64 (...) @init_realloc_data()
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0))
  br label %64

18:                                               ; preds = %12
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0))
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0))
  store i32 0, i32* %6, align 4
  br label %21

21:                                               ; preds = %51, %18
  %22 = load i32, i32* %6, align 4
  %23 = sext i32 %22 to i64
  %24 = load i64, i64* %5, align 8
  %25 = icmp ult i64 %23, %24
  br i1 %25, label %26, label %54

26:                                               ; preds = %21
  %27 = load %struct.realloc_thread_arg*, %struct.realloc_thread_arg** %4, align 8
  %28 = load i32, i32* %6, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %struct.realloc_thread_arg, %struct.realloc_thread_arg* %27, i64 %29
  %31 = call i64 @init_unix_sockets(%struct.realloc_thread_arg* %30)
  %32 = icmp ne i64 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %26
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0))
  br label %64

35:                                               ; preds = %26
  %36 = load %struct.realloc_thread_arg*, %struct.realloc_thread_arg** %4, align 8
  %37 = load i32, i32* %6, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds %struct.realloc_thread_arg, %struct.realloc_thread_arg* %36, i64 %38
  %40 = getelementptr inbounds %struct.realloc_thread_arg, %struct.realloc_thread_arg* %39, i32 0, i32 0
  %41 = load i32, i32* @realloc_thread, align 4
  %42 = load %struct.realloc_thread_arg*, %struct.realloc_thread_arg** %4, align 8
  %43 = load i32, i32* %6, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %struct.realloc_thread_arg, %struct.realloc_thread_arg* %42, i64 %44
  %46 = call i32 @pthread_create(i32* %40, i32* null, i32 %41, %struct.realloc_thread_arg* %45)
  store i32 %46, i32* %7, align 4
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %35
  %49 = call i32 @perror(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0))
  br label %64

50:                                               ; preds = %35
  br label %51

51:                                               ; preds = %50
  %52 = load i32, i32* %6, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %6, align 4
  br label %21

54:                                               ; preds = %21
  br label %55

55:                                               ; preds = %59, %54
  %56 = load i64, i64* @g_nb_realloc_thread_ready, align 8
  %57 = load i64, i64* %5, align 8
  %58 = icmp ult i64 %56, %57
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = call i32 (...) @_sched_yield()
  br label %55

61:                                               ; preds = %55
  %62 = load i64, i64* %5, align 8
  %63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0), i64 %62)
  store i32 0, i32* %3, align 4
  br label %66

64:                                               ; preds = %48, %33, %16, %10
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %66

66:                                               ; preds = %64, %61
  %67 = load i32, i32* %3, align 4
  ret i32 %67
}

declare dso_local i32 @can_use_realloc_gadget(...) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @init_realloc_data(...) #1

declare dso_local i64 @init_unix_sockets(%struct.realloc_thread_arg*) #1

declare !callback !2 dso_local i32 @pthread_create(i32*, i32*, i32, %struct.realloc_thread_arg*) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @_sched_yield(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
!2 = !{!3}
!3 = !{i64 2, i64 3, i1 false}
