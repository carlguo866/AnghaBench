; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_1267.c_do_syms.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_1267.c_do_syms.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@libc_file = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [7 x i8] c"stdout\00", align 1
@libc_base = common dso_local global i32 0, align 4
@file_addr = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [7 x i8] c"stderr\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"stdin\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"[-] Can't use std files\0A\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"system\00", align 1
@system_addr = common dso_local global i8* null, align 8
@.str.5 = private unnamed_addr constant [24 x i8] c"[-] Can't use system()\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_syms() #0 {
  %1 = load i32, i32* @libc_file, align 4
  %2 = load i32, i32* @libc_base, align 4
  %3 = call i8* @check_sym(i32 %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 %2)
  store i8* %3, i8** @file_addr, align 8
  %4 = icmp ne i8* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %0
  %6 = load i32, i32* @libc_file, align 4
  %7 = load i32, i32* @libc_base, align 4
  %8 = call i8* @check_sym(i32 %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i32 %7)
  store i8* %8, i8** @file_addr, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %18, label %10

10:                                               ; preds = %5
  %11 = load i32, i32* @libc_file, align 4
  %12 = load i32, i32* @libc_base, align 4
  %13 = call i8* @check_sym(i32 %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i32 %12)
  store i8* %13, i8** @file_addr, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = call i32 @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0))
  %17 = call i32 @exit(i32 -1) #3
  unreachable

18:                                               ; preds = %10, %5, %0
  %19 = load i32, i32* @libc_file, align 4
  %20 = load i32, i32* @libc_base, align 4
  %21 = call i8* @check_sym(i32 %19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i32 %20)
  store i8* %21, i8** @system_addr, align 8
  %22 = icmp ne i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = call i32 @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0))
  %25 = call i32 @exit(i32 -1) #3
  unreachable

26:                                               ; preds = %18
  ret void
}

declare dso_local i8* @check_sym(i32, i8*, i32) #1

declare dso_local i32 @printf(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
