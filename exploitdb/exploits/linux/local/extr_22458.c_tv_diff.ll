; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_22458.c_tv_diff.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_22458.c_tv_diff.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timeval = type { i64, i64 }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @tv_diff(%struct.timeval* %0, %struct.timeval* %1) #0 {
  %3 = alloca %struct.timeval*, align 8
  %4 = alloca %struct.timeval*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.timeval*, align 8
  store %struct.timeval* %0, %struct.timeval** %3, align 8
  store %struct.timeval* %1, %struct.timeval** %4, align 8
  %7 = load %struct.timeval*, %struct.timeval** %3, align 8
  %8 = getelementptr inbounds %struct.timeval, %struct.timeval* %7, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = load %struct.timeval*, %struct.timeval** %4, align 8
  %11 = getelementptr inbounds %struct.timeval, %struct.timeval* %10, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp slt i64 %9, %12
  br i1 %13, label %30, label %14

14:                                               ; preds = %2
  %15 = load %struct.timeval*, %struct.timeval** %3, align 8
  %16 = getelementptr inbounds %struct.timeval, %struct.timeval* %15, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = load %struct.timeval*, %struct.timeval** %4, align 8
  %19 = getelementptr inbounds %struct.timeval, %struct.timeval* %18, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %17, %20
  br i1 %21, label %22, label %34

22:                                               ; preds = %14
  %23 = load %struct.timeval*, %struct.timeval** %3, align 8
  %24 = getelementptr inbounds %struct.timeval, %struct.timeval* %23, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = load %struct.timeval*, %struct.timeval** %4, align 8
  %27 = getelementptr inbounds %struct.timeval, %struct.timeval* %26, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp slt i64 %25, %28
  br i1 %29, label %30, label %34

30:                                               ; preds = %22, %2
  %31 = load %struct.timeval*, %struct.timeval** %4, align 8
  store %struct.timeval* %31, %struct.timeval** %6, align 8
  %32 = load %struct.timeval*, %struct.timeval** %3, align 8
  store %struct.timeval* %32, %struct.timeval** %4, align 8
  %33 = load %struct.timeval*, %struct.timeval** %6, align 8
  store %struct.timeval* %33, %struct.timeval** %3, align 8
  br label %34

34:                                               ; preds = %30, %22, %14
  %35 = load %struct.timeval*, %struct.timeval** %3, align 8
  %36 = getelementptr inbounds %struct.timeval, %struct.timeval* %35, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = load %struct.timeval*, %struct.timeval** %4, align 8
  %39 = getelementptr inbounds %struct.timeval, %struct.timeval* %38, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = sub nsw i64 %37, %40
  %42 = mul nsw i64 %41, 1000000
  store i64 %42, i64* %5, align 8
  %43 = load %struct.timeval*, %struct.timeval** %3, align 8
  %44 = getelementptr inbounds %struct.timeval, %struct.timeval* %43, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = load %struct.timeval*, %struct.timeval** %4, align 8
  %47 = getelementptr inbounds %struct.timeval, %struct.timeval* %46, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %45, %48
  br i1 %49, label %50, label %60

50:                                               ; preds = %34
  %51 = load %struct.timeval*, %struct.timeval** %3, align 8
  %52 = getelementptr inbounds %struct.timeval, %struct.timeval* %51, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = load %struct.timeval*, %struct.timeval** %4, align 8
  %55 = getelementptr inbounds %struct.timeval, %struct.timeval* %54, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = sub nsw i64 %53, %56
  %58 = load i64, i64* %5, align 8
  %59 = add i64 %58, %57
  store i64 %59, i64* %5, align 8
  br label %89

60:                                               ; preds = %34
  %61 = load %struct.timeval*, %struct.timeval** %3, align 8
  %62 = getelementptr inbounds %struct.timeval, %struct.timeval* %61, i32 0, i32 1
  %63 = load i64, i64* %62, align 8
  %64 = load %struct.timeval*, %struct.timeval** %4, align 8
  %65 = getelementptr inbounds %struct.timeval, %struct.timeval* %64, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = icmp sge i64 %63, %66
  br i1 %67, label %68, label %78

68:                                               ; preds = %60
  %69 = load %struct.timeval*, %struct.timeval** %3, align 8
  %70 = getelementptr inbounds %struct.timeval, %struct.timeval* %69, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = load %struct.timeval*, %struct.timeval** %4, align 8
  %73 = getelementptr inbounds %struct.timeval, %struct.timeval* %72, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = sub nsw i64 %71, %74
  %76 = load i64, i64* %5, align 8
  %77 = add i64 %76, %75
  store i64 %77, i64* %5, align 8
  br label %88

78:                                               ; preds = %60
  %79 = load %struct.timeval*, %struct.timeval** %4, align 8
  %80 = getelementptr inbounds %struct.timeval, %struct.timeval* %79, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = load %struct.timeval*, %struct.timeval** %3, align 8
  %83 = getelementptr inbounds %struct.timeval, %struct.timeval* %82, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = sub nsw i64 %81, %84
  %86 = load i64, i64* %5, align 8
  %87 = sub i64 %86, %85
  store i64 %87, i64* %5, align 8
  br label %88

88:                                               ; preds = %78, %68
  br label %89

89:                                               ; preds = %88, %50
  %90 = load i64, i64* %5, align 8
  ret i64 %90
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
