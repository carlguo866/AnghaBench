; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_1267.c_do_maps.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_1267.c_do_maps.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [14 x i8] c"/proc/%d/maps\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"%08lx-%08lx %*s %08lx %*s %*s %s\00", align 1
@stack_base = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [6 x i8] c"/libc\00", align 1
@libc_base = common dso_local global i32 0, align 4
@libc_file = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_maps(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32*, align 8
  %4 = alloca [1024 x i8], align 16
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [1024 x i8], align 16
  %8 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %10 = load i32, i32* %2, align 4
  %11 = call i32 @sprintf(i8* %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 %10)
  %12 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %13 = call i32* @fopen(i8* %12, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  store i32* %13, i32** %3, align 8
  %14 = icmp ne i32* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  br label %52

16:                                               ; preds = %1
  br label %17

17:                                               ; preds = %48, %16
  %18 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %19 = load i32*, i32** %3, align 8
  %20 = call i64 @fgets(i8* %18, i32 1024, i32* %19)
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %22, label %49

22:                                               ; preds = %17
  %23 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  store i8 0, i8* %23, align 16
  %24 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %25 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %26 = call i32 @sscanf(i8* %24, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i32* %5, i32* %6, i32* %8, i8* %25)
  %27 = load i32, i32* %8, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %22
  %30 = load i32, i32* %6, align 4
  store i32 %30, i32* @stack_base, align 4
  br label %48

31:                                               ; preds = %22
  %32 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %33 = call i64 @strstr(i8* %32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  %34 = icmp ne i64 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %31
  %36 = load i32, i32* @libc_base, align 4
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %35
  %39 = load i32, i32* %5, align 4
  %40 = load i32, i32* @libc_base, align 4
  %41 = icmp ult i32 %39, %40
  br i1 %41, label %42, label %47

42:                                               ; preds = %38, %35
  %43 = load i32, i32* %5, align 4
  store i32 %43, i32* @libc_base, align 4
  %44 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %45 = call i64 @strdup(i8* %44)
  %46 = inttoptr i64 %45 to i8*
  store i8* %46, i8** @libc_file, align 8
  br label %47

47:                                               ; preds = %42, %38, %31
  br label %48

48:                                               ; preds = %47, %29
  br label %17

49:                                               ; preds = %17
  %50 = load i32*, i32** %3, align 8
  %51 = call i32 @fclose(i32* %50)
  br label %52

52:                                               ; preds = %49, %15
  ret void
}

declare dso_local i32 @sprintf(i8*, i8*, i32) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i64 @fgets(i8*, i32, i32*) #1

declare dso_local i32 @sscanf(i8*, i8*, i32*, i32*, i32*, i8*) #1

declare dso_local i64 @strstr(i8*, i8*) #1

declare dso_local i64 @strdup(i8*) #1

declare dso_local i32 @fclose(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
