; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_23228.c_write_buffer.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_23228.c_write_buffer.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@f = common dso_local global i32 0, align 4
@file_pos = common dso_local global i32 0, align 4
@path_len = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @write_buffer(i32 %0, i8* %1, i32 %2, i32 %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [3 x i8], align 1
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %10 = load i32, i32* %5, align 4
  %11 = icmp sgt i32 %10, 127
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = load i32, i32* %5, align 4
  %14 = icmp slt i32 %13, -127
  br i1 %14, label %15, label %30

15:                                               ; preds = %12, %4
  %16 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 0, i64 0
  store i8 -128, i8* %16, align 1
  %17 = load i32, i32* %5, align 4
  %18 = ashr i32 %17, 8
  %19 = trunc i32 %18 to i8
  %20 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 0, i64 1
  store i8 %19, i8* %20, align 1
  %21 = load i32, i32* %5, align 4
  %22 = srem i32 %21, 256
  %23 = trunc i32 %22 to i8
  %24 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 0, i64 2
  store i8 %23, i8* %24, align 1
  %25 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 0, i64 0
  %26 = load i32, i32* @f, align 4
  %27 = call i32 @fwrite(i8* %25, i32 1, i32 3, i32 %26)
  %28 = load i32, i32* @file_pos, align 4
  %29 = add nsw i32 %28, 3
  store i32 %29, i32* @file_pos, align 4
  br label %39

30:                                               ; preds = %12
  %31 = load i32, i32* %5, align 4
  %32 = trunc i32 %31 to i8
  %33 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 0, i64 0
  store i8 %32, i8* %33, align 1
  %34 = getelementptr inbounds [3 x i8], [3 x i8]* %9, i64 0, i64 0
  %35 = load i32, i32* @f, align 4
  %36 = call i32 @fwrite(i8* %34, i32 1, i32 1, i32 %35)
  %37 = load i32, i32* @file_pos, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* @file_pos, align 4
  br label %39

39:                                               ; preds = %30, %15
  %40 = load i32, i32* %8, align 4
  %41 = icmp ne i32 %40, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %39
  %43 = load i8*, i8** %6, align 8
  %44 = load i32, i32* %7, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  store i8 0, i8* %46, align 1
  br label %47

47:                                               ; preds = %42, %39
  %48 = load i8*, i8** %6, align 8
  %49 = load i32, i32* %7, align 4
  %50 = add nsw i32 %49, 1
  %51 = load i32, i32* @f, align 4
  %52 = call i32 @fwrite(i8* %48, i32 1, i32 %50, i32 %51)
  %53 = load i32, i32* %7, align 4
  %54 = add nsw i32 %53, 1
  %55 = load i32, i32* @file_pos, align 4
  %56 = add nsw i32 %55, %54
  store i32 %56, i32* @file_pos, align 4
  %57 = load i32, i32* %5, align 4
  %58 = load i32, i32* @path_len, align 4
  %59 = add nsw i32 %58, %57
  store i32 %59, i32* @path_len, align 4
  ret void
}

declare dso_local i32 @fwrite(i8*, i32, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
