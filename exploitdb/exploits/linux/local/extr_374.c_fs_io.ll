; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_374.c_fs_io.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_374.c_fs_io.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.stat = type { i64 }

@.str = private unnamed_addr constant [22 x i8] c"Input File not found\0A\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@PROT_READ = common dso_local global i32 0, align 4
@PROT_WRITE = common dso_local global i32 0, align 4
@MAP_PRIVATE = common dso_local global i32 0, align 4
@memap = common dso_local global i32* null, align 8
@.str.2 = private unnamed_addr constant [20 x i8] c"allocation problem\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @fs_io(i8* %0, i8* %1, i32 %2, i64* %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64*, align 8
  %10 = alloca %struct.stat, align 8
  %11 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i32 %2, i32* %8, align 4
  store i64* %3, i64** %9, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %49

14:                                               ; preds = %4
  %15 = load i8*, i8** %6, align 8
  %16 = call i64 @lstat(i8* %15, %struct.stat* %10)
  %17 = icmp slt i64 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %14
  %19 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0))
  %20 = call i32 @exit(i32 -1) #3
  unreachable

21:                                               ; preds = %14
  %22 = load i8*, i8** %6, align 8
  %23 = load i32, i32* %8, align 4
  %24 = call i32 @open(i8* %22, i32 %23, i32 438)
  store i32 %24, i32* %11, align 4
  %25 = icmp eq i32 %24, -1
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = call i32 @perror(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  %28 = call i32 @exit(i32 -1) #3
  unreachable

29:                                               ; preds = %21
  %30 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = load i32, i32* @PROT_READ, align 4
  %33 = load i32, i32* @PROT_WRITE, align 4
  %34 = or i32 %32, %33
  %35 = load i32, i32* @MAP_PRIVATE, align 4
  %36 = load i32, i32* %11, align 4
  %37 = call i32* @mmap(i32 0, i64 %31, i32 %34, i32 %35, i32 %36, i32 0)
  store i32* %37, i32** @memap, align 8
  %38 = load i32*, i32** @memap, align 8
  %39 = icmp eq i32* %38, null
  br i1 %39, label %40, label %43

40:                                               ; preds = %29
  %41 = call i32 @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0))
  %42 = call i32 @exit(i32 -1) #3
  unreachable

43:                                               ; preds = %29
  %44 = getelementptr inbounds %struct.stat, %struct.stat* %10, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = load i64*, i64** %9, align 8
  store i64 %45, i64* %46, align 8
  %47 = load i32*, i32** @memap, align 8
  %48 = bitcast i32* %47 to i8*
  store i8* %48, i8** %5, align 8
  br label %49

49:                                               ; preds = %43, %4
  %50 = load i8*, i8** %5, align 8
  ret i8* %50
}

declare dso_local i64 @lstat(i8*, %struct.stat*) #1

declare dso_local i32 @printf(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @open(i8*, i32, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32* @mmap(i32, i64, i32, i32, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
