; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_8469.c_sec_connect.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_8469.c_sec_connect.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.stream = type { i32, i32, i32 }

@False = common dso_local global i32 0, align 4
@True = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @sec_connect(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.stream, align 4
  store i8* %0, i8** %3, align 8
  %5 = getelementptr inbounds %struct.stream, %struct.stream* %4, i32 0, i32 0
  store i32 512, i32* %5, align 4
  %6 = getelementptr inbounds %struct.stream, %struct.stream* %4, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = call i32 @xmalloc(i32 %7)
  %9 = getelementptr inbounds %struct.stream, %struct.stream* %4, i32 0, i32 1
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds %struct.stream, %struct.stream* %4, i32 0, i32 2
  store i32 %8, i32* %10, align 4
  %11 = call i32 @sec_out_mcs_data(%struct.stream* %4)
  %12 = load i8*, i8** %3, align 8
  %13 = call i32 @mcs_connect(i8* %12, %struct.stream* %4)
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %1
  %16 = load i32, i32* @False, align 4
  store i32 %16, i32* %2, align 4
  br label %23

17:                                               ; preds = %1
  %18 = call i32 @sec_process_mcs_data(%struct.stream* %4)
  %19 = getelementptr inbounds %struct.stream, %struct.stream* %4, i32 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = call i32 @xfree(i32 %20)
  %22 = load i32, i32* @True, align 4
  store i32 %22, i32* %2, align 4
  br label %23

23:                                               ; preds = %17, %15
  %24 = load i32, i32* %2, align 4
  ret i32 %24
}

declare dso_local i32 @xmalloc(i32) #1

declare dso_local i32 @sec_out_mcs_data(%struct.stream*) #1

declare dso_local i32 @mcs_connect(i8*, %struct.stream*) #1

declare dso_local i32 @sec_process_mcs_data(%struct.stream*) #1

declare dso_local i32 @xfree(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
