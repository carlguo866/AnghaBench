; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_20566.c_checksum.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_20566.c_checksum.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local zeroext i16 @checksum(i16* %0, i16 zeroext %1) #0 {
  %3 = alloca i16*, align 8
  %4 = alloca i16, align 2
  %5 = alloca i64, align 8
  %6 = alloca i16, align 2
  store i16* %0, i16** %3, align 8
  store i16 %1, i16* %4, align 2
  store i16 0, i16* %6, align 2
  br label %7

7:                                                ; preds = %23, %2
  %8 = load i16, i16* %6, align 2
  %9 = zext i16 %8 to i32
  %10 = load i16, i16* %4, align 2
  %11 = zext i16 %10 to i32
  %12 = ashr i32 %11, 1
  %13 = icmp slt i32 %9, %12
  br i1 %13, label %14, label %26

14:                                               ; preds = %7
  %15 = load i16*, i16** %3, align 8
  %16 = load i16, i16* %6, align 2
  %17 = zext i16 %16 to i64
  %18 = getelementptr inbounds i16, i16* %15, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i64
  %21 = load i64, i64* %5, align 8
  %22 = add nsw i64 %21, %20
  store i64 %22, i64* %5, align 8
  br label %23

23:                                               ; preds = %14
  %24 = load i16, i16* %6, align 2
  %25 = add i16 %24, 1
  store i16 %25, i16* %6, align 2
  br label %7

26:                                               ; preds = %7
  %27 = load i16, i16* %4, align 2
  %28 = zext i16 %27 to i32
  %29 = and i32 %28, 1
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %42

31:                                               ; preds = %26
  %32 = load i16*, i16** %3, align 8
  %33 = load i16, i16* %6, align 2
  %34 = zext i16 %33 to i64
  %35 = getelementptr inbounds i16, i16* %32, i64 %34
  %36 = load i16, i16* %35, align 2
  %37 = zext i16 %36 to i32
  %38 = shl i32 %37, 8
  %39 = sext i32 %38 to i64
  %40 = load i64, i64* %5, align 8
  %41 = add nsw i64 %40, %39
  store i64 %41, i64* %5, align 8
  br label %42

42:                                               ; preds = %31, %26
  %43 = load i64, i64* %5, align 8
  %44 = and i64 %43, 65535
  %45 = load i64, i64* %5, align 8
  %46 = ashr i64 %45, 16
  %47 = add nsw i64 %44, %46
  store i64 %47, i64* %5, align 8
  %48 = load i64, i64* %5, align 8
  %49 = xor i64 %48, -1
  %50 = trunc i64 %49 to i16
  ret i16 %50
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
