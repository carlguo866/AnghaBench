; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_8469.c_sec_recv.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_8469.c_sec_recv.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@encryption = common dso_local global i64 0, align 8
@licence_issued = common dso_local global i32 0, align 4
@SEC_LICENCE_NEG = common dso_local global i32 0, align 4
@SEC_ENCRYPT = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32* @sec_recv() #0 {
  %1 = alloca i32*, align 8
  %2 = alloca i32, align 4
  %3 = alloca i32*, align 8
  br label %4

4:                                                ; preds = %21, %0
  %5 = call i32* (...) @mcs_recv()
  store i32* %5, i32** %3, align 8
  %6 = icmp ne i32* %5, null
  br i1 %6, label %7, label %35

7:                                                ; preds = %4
  %8 = load i64, i64* @encryption, align 8
  %9 = icmp ne i64 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7
  %11 = load i32, i32* @licence_issued, align 4
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %33, label %13

13:                                               ; preds = %10, %7
  %14 = load i32*, i32** %3, align 8
  %15 = load i32, i32* %2, align 4
  %16 = call i32 @in_uint32_le(i32* %14, i32 %15)
  %17 = load i32, i32* %2, align 4
  %18 = load i32, i32* @SEC_LICENCE_NEG, align 4
  %19 = and i32 %17, %18
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %13
  %22 = load i32*, i32** %3, align 8
  %23 = call i32 @licence_process(i32* %22)
  br label %4

24:                                               ; preds = %13
  %25 = load i32, i32* %2, align 4
  %26 = load i32, i32* @SEC_ENCRYPT, align 4
  %27 = and i32 %25, %26
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %24
  %30 = load i32*, i32** %3, align 8
  %31 = call i32 @in_uint8s(i32* %30, i32 8)
  br label %32

32:                                               ; preds = %29, %24
  br label %33

33:                                               ; preds = %32, %10
  %34 = load i32*, i32** %3, align 8
  store i32* %34, i32** %1, align 8
  br label %36

35:                                               ; preds = %4
  store i32* null, i32** %1, align 8
  br label %36

36:                                               ; preds = %35, %33
  %37 = load i32*, i32** %1, align 8
  ret i32* %37
}

declare dso_local i32* @mcs_recv(...) #1

declare dso_local i32 @in_uint32_le(i32*, i32) #1

declare dso_local i32 @licence_process(i32*) #1

declare dso_local i32 @in_uint8s(i32*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
