; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_45919.c_send_diag_msg.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_45919.c_send_diag_msg.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.msghdr = type { i32, i32, i32, i32, %struct.iovec*, i8*, i32, i32, i32, i32, i32, i32 }
%struct.iovec = type { i32, i8* }
%struct.nlmsghdr = type { i32, i32, i32, i32, %struct.iovec*, i8*, i32, i32, i32, i32, i32, i32 }
%struct.inet_diag_req_v2 = type { i32, i32, i32, i32, %struct.iovec*, i8*, i32, i32, i32, i32, i32, i32 }
%struct.sockaddr_nl = type { i32, i32, i32, i32, %struct.iovec*, i8*, i32, i32, i32, i32, i32, i32 }
%struct.rtattr = type { i32 }

@AF_NETLINK = common dso_local global i32 0, align 4
@AF_INET = common dso_local global i32 0, align 4
@IPPROTO_SCTP = common dso_local global i32 0, align 4
@SCTP_SS_CLOSED = common dso_local global i32 0, align 4
@INET_DIAG_INFO = common dso_local global i32 0, align 4
@NLM_F_DUMP = common dso_local global i32 0, align 4
@NLM_F_REQUEST = common dso_local global i32 0, align 4
@SOCK_DIAG_BY_FAMILY = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @send_diag_msg(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.msghdr, align 8
  %4 = alloca %struct.nlmsghdr, align 8
  %5 = alloca %struct.inet_diag_req_v2, align 8
  %6 = alloca %struct.sockaddr_nl, align 8
  %7 = alloca [4 x %struct.iovec], align 16
  %8 = alloca i32, align 4
  %9 = alloca %struct.rtattr, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  store i32 0, i32* %8, align 4
  store i8* null, i8** %10, align 8
  store i32 0, i32* %11, align 4
  %12 = bitcast %struct.msghdr* %3 to %struct.sockaddr_nl*
  %13 = call i32 @memset(%struct.sockaddr_nl* %12, i32 0, i32 56)
  %14 = call i32 @memset(%struct.sockaddr_nl* %6, i32 0, i32 56)
  %15 = bitcast %struct.nlmsghdr* %4 to %struct.sockaddr_nl*
  %16 = call i32 @memset(%struct.sockaddr_nl* %15, i32 0, i32 56)
  %17 = bitcast %struct.inet_diag_req_v2* %5 to %struct.sockaddr_nl*
  %18 = call i32 @memset(%struct.sockaddr_nl* %17, i32 0, i32 56)
  %19 = load i32, i32* @AF_NETLINK, align 4
  %20 = getelementptr inbounds %struct.sockaddr_nl, %struct.sockaddr_nl* %6, i32 0, i32 11
  store i32 %19, i32* %20, align 4
  %21 = load i32, i32* @AF_INET, align 4
  %22 = getelementptr inbounds %struct.inet_diag_req_v2, %struct.inet_diag_req_v2* %5, i32 0, i32 10
  store i32 %21, i32* %22, align 8
  %23 = load i32, i32* @IPPROTO_SCTP, align 4
  %24 = getelementptr inbounds %struct.inet_diag_req_v2, %struct.inet_diag_req_v2* %5, i32 0, i32 9
  store i32 %23, i32* %24, align 4
  %25 = load i32, i32* @SCTP_SS_CLOSED, align 4
  %26 = getelementptr inbounds %struct.inet_diag_req_v2, %struct.inet_diag_req_v2* %5, i32 0, i32 8
  store i32 %25, i32* %26, align 8
  %27 = load i32, i32* @INET_DIAG_INFO, align 4
  %28 = sub nsw i32 %27, 1
  %29 = shl i32 1, %28
  %30 = getelementptr inbounds %struct.inet_diag_req_v2, %struct.inet_diag_req_v2* %5, i32 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = or i32 %31, %29
  store i32 %32, i32* %30, align 8
  %33 = call i32 @NLMSG_LENGTH(i32 56)
  %34 = getelementptr inbounds %struct.nlmsghdr, %struct.nlmsghdr* %4, i32 0, i32 7
  store i32 %33, i32* %34, align 4
  %35 = load i32, i32* @NLM_F_DUMP, align 4
  %36 = load i32, i32* @NLM_F_REQUEST, align 4
  %37 = or i32 %35, %36
  %38 = getelementptr inbounds %struct.nlmsghdr, %struct.nlmsghdr* %4, i32 0, i32 1
  store i32 %37, i32* %38, align 4
  %39 = load i32, i32* @SOCK_DIAG_BY_FAMILY, align 4
  %40 = getelementptr inbounds %struct.nlmsghdr, %struct.nlmsghdr* %4, i32 0, i32 6
  store i32 %39, i32* %40, align 8
  %41 = bitcast %struct.nlmsghdr* %4 to i8*
  %42 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %7, i64 0, i64 0
  %43 = getelementptr inbounds %struct.iovec, %struct.iovec* %42, i32 0, i32 1
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %7, i64 0, i64 0
  %45 = getelementptr inbounds %struct.iovec, %struct.iovec* %44, i32 0, i32 0
  store i32 56, i32* %45, align 16
  %46 = bitcast %struct.inet_diag_req_v2* %5 to i8*
  %47 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %7, i64 0, i64 1
  %48 = getelementptr inbounds %struct.iovec, %struct.iovec* %47, i32 0, i32 1
  store i8* %46, i8** %48, align 8
  %49 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %7, i64 0, i64 1
  %50 = getelementptr inbounds %struct.iovec, %struct.iovec* %49, i32 0, i32 0
  store i32 56, i32* %50, align 16
  %51 = bitcast %struct.sockaddr_nl* %6 to i8*
  %52 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %3, i32 0, i32 5
  store i8* %51, i8** %52, align 8
  %53 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %3, i32 0, i32 2
  store i32 56, i32* %53, align 8
  %54 = getelementptr inbounds [4 x %struct.iovec], [4 x %struct.iovec]* %7, i64 0, i64 0
  %55 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %3, i32 0, i32 4
  store %struct.iovec* %54, %struct.iovec** %55, align 8
  %56 = load i8*, i8** %10, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %1
  %59 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %3, i32 0, i32 3
  store i32 2, i32* %59, align 4
  br label %62

60:                                               ; preds = %1
  %61 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %3, i32 0, i32 3
  store i32 4, i32* %61, align 4
  br label %62

62:                                               ; preds = %60, %58
  %63 = load i32, i32* %2, align 4
  %64 = bitcast %struct.msghdr* %3 to %struct.sockaddr_nl*
  %65 = call i32 @sendmsg(i32 %63, %struct.sockaddr_nl* %64, i32 0)
  store i32 %65, i32* %8, align 4
  %66 = load i8*, i8** %10, align 8
  %67 = icmp ne i8* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  %69 = load i8*, i8** %10, align 8
  %70 = call i32 @free(i8* %69)
  br label %71

71:                                               ; preds = %68, %62
  %72 = load i32, i32* %8, align 4
  ret i32 %72
}

declare dso_local i32 @memset(%struct.sockaddr_nl*, i32, i32) #1

declare dso_local i32 @NLMSG_LENGTH(i32) #1

declare dso_local i32 @sendmsg(i32, %struct.sockaddr_nl*, i32) #1

declare dso_local i32 @free(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
