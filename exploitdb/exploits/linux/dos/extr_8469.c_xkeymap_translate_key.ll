; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_8469.c_xkeymap_translate_key.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_8469.c_xkeymap_translate_key.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i32, i32, i32, i32 }

@keymap = common dso_local global %struct.TYPE_4__* null, align 8
@KEYMAP_MASK = common dso_local global i64 0, align 8
@MapInhibitMask = common dso_local global i32 0, align 4
@MapLocalStateMask = common dso_local global i32 0, align 4
@ShiftMask = common dso_local global i32 0, align 4
@MapLeftShiftMask = common dso_local global i8* null, align 8
@keymap_loaded = common dso_local global i64 0, align 8
@min_keycode = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local { i64, i64 } @xkeymap_translate_key(i64 %0, i32 %1, i32 %2) #0 {
  %4 = alloca %struct.TYPE_4__, align 4
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i64 %0, i64* %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %8 = bitcast %struct.TYPE_4__* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 16, i1 false)
  %9 = load %struct.TYPE_4__*, %struct.TYPE_4__** @keymap, align 8
  %10 = load i64, i64* %5, align 8
  %11 = load i64, i64* @KEYMAP_MASK, align 8
  %12 = and i64 %10, %11
  %13 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %9, i64 %12
  %14 = bitcast %struct.TYPE_4__* %4 to i8*
  %15 = bitcast %struct.TYPE_4__* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 4 %15, i64 16, i1 false)
  %16 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %4, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = load i32, i32* @MapInhibitMask, align 4
  %19 = and i32 %17, %18
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %3
  %22 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %4, i32 0, i32 1
  store i32 0, i32* %22, align 4
  br label %71

23:                                               ; preds = %3
  %24 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %4, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = load i32, i32* @MapLocalStateMask, align 4
  %27 = and i32 %25, %26
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %29, label %39

29:                                               ; preds = %23
  %30 = load i32, i32* %7, align 4
  %31 = load i32, i32* @ShiftMask, align 4
  %32 = and i32 %30, %31
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %29
  %35 = load i8*, i8** @MapLeftShiftMask, align 8
  %36 = ptrtoint i8* %35 to i32
  %37 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %4, i32 0, i32 0
  store i32 %36, i32* %37, align 4
  br label %38

38:                                               ; preds = %34, %29
  br label %39

39:                                               ; preds = %38, %23
  %40 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %4, i32 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  br label %71

44:                                               ; preds = %39
  %45 = load i64, i64* @keymap_loaded, align 8
  %46 = icmp ne i64 %45, 0
  br i1 %46, label %47, label %70

47:                                               ; preds = %44
  %48 = load i32, i32* %6, align 4
  %49 = load i32, i32* @min_keycode, align 4
  %50 = icmp uge i32 %48, %49
  br i1 %50, label %51, label %68

51:                                               ; preds = %47
  %52 = load i32, i32* %6, align 4
  %53 = icmp ule i32 %52, 96
  br i1 %53, label %54, label %68

54:                                               ; preds = %51
  %55 = load i32, i32* %6, align 4
  %56 = load i32, i32* @min_keycode, align 4
  %57 = sub i32 %55, %56
  %58 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %4, i32 0, i32 1
  store i32 %57, i32* %58, align 4
  %59 = load i32, i32* %7, align 4
  %60 = load i32, i32* @ShiftMask, align 4
  %61 = and i32 %59, %60
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %67

63:                                               ; preds = %54
  %64 = load i8*, i8** @MapLeftShiftMask, align 8
  %65 = ptrtoint i8* %64 to i32
  %66 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %4, i32 0, i32 0
  store i32 %65, i32* %66, align 4
  br label %67

67:                                               ; preds = %63, %54
  br label %69

68:                                               ; preds = %51, %47
  br label %69

69:                                               ; preds = %68, %67
  br label %70

70:                                               ; preds = %69, %44
  br label %71

71:                                               ; preds = %70, %43, %21
  %72 = bitcast %struct.TYPE_4__* %4 to { i64, i64 }*
  %73 = load { i64, i64 }, { i64, i64 }* %72, align 4
  ret { i64, i64 } %73
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
