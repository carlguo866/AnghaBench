; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_45919.c_parse_diag_msg.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_45919.c_parse_diag_msg.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.inet_diag_msg = type { i64 }
%struct.rtattr = type { i64 }
%struct.sctp_info = type { i32 }

@AF_INET = common dso_local global i64 0, align 8
@AF_INET6 = common dso_local global i64 0, align 8
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [16 x i8] c"Unknown family\0A\00", align 1
@INET_DIAG_INFO = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [31 x i8] c"[] sctp_af_inet address : %lx\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @parse_diag_msg(%struct.inet_diag_msg* %0, i32 %1) #0 {
  %3 = alloca %struct.inet_diag_msg*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %struct.rtattr*, align 8
  %6 = alloca %struct.sctp_info*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  store %struct.inet_diag_msg* %0, %struct.inet_diag_msg** %3, align 8
  store i32 %1, i32* %4, align 4
  %9 = load %struct.inet_diag_msg*, %struct.inet_diag_msg** %3, align 8
  %10 = getelementptr inbounds %struct.inet_diag_msg, %struct.inet_diag_msg* %9, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = load i64, i64* @AF_INET, align 8
  %13 = icmp ne i64 %11, %12
  br i1 %13, label %14, label %23

14:                                               ; preds = %2
  %15 = load %struct.inet_diag_msg*, %struct.inet_diag_msg** %3, align 8
  %16 = getelementptr inbounds %struct.inet_diag_msg, %struct.inet_diag_msg* %15, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = load i64, i64* @AF_INET6, align 8
  %19 = icmp ne i64 %17, %18
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = load i32, i32* @stderr, align 4
  %22 = call i32 @fprintf(i32 %21, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0))
  br label %58

23:                                               ; preds = %14, %2
  %24 = load i32, i32* %4, align 4
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %26, label %58

26:                                               ; preds = %23
  %27 = load %struct.inet_diag_msg*, %struct.inet_diag_msg** %3, align 8
  %28 = getelementptr inbounds %struct.inet_diag_msg, %struct.inet_diag_msg* %27, i64 1
  %29 = bitcast %struct.inet_diag_msg* %28 to %struct.rtattr*
  store %struct.rtattr* %29, %struct.rtattr** %5, align 8
  br label %30

30:                                               ; preds = %53, %26
  %31 = load %struct.rtattr*, %struct.rtattr** %5, align 8
  %32 = load i32, i32* %4, align 4
  %33 = call i64 @RTA_OK(%struct.rtattr* %31, i32 %32)
  %34 = icmp ne i64 %33, 0
  br i1 %34, label %35, label %57

35:                                               ; preds = %30
  %36 = load %struct.rtattr*, %struct.rtattr** %5, align 8
  %37 = getelementptr inbounds %struct.rtattr, %struct.rtattr* %36, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = load i64, i64* @INET_DIAG_INFO, align 8
  %40 = icmp eq i64 %38, %39
  br i1 %40, label %41, label %53

41:                                               ; preds = %35
  %42 = load %struct.rtattr*, %struct.rtattr** %5, align 8
  %43 = call i64 @RTA_DATA(%struct.rtattr* %42)
  %44 = inttoptr i64 %43 to %struct.sctp_info*
  store %struct.sctp_info* %44, %struct.sctp_info** %6, align 8
  %45 = load %struct.sctp_info*, %struct.sctp_info** %6, align 8
  %46 = getelementptr inbounds %struct.sctp_info, %struct.sctp_info* %45, i32 0, i32 0
  %47 = bitcast i32* %46 to i8*
  %48 = getelementptr inbounds i8, i8* %47, i64 32
  store i8* %48, i8** %8, align 8
  %49 = load i8*, i8** %8, align 8
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = call i32 @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i64 %51)
  br label %53

53:                                               ; preds = %41, %35
  %54 = load %struct.rtattr*, %struct.rtattr** %5, align 8
  %55 = load i32, i32* %4, align 4
  %56 = call %struct.rtattr* @RTA_NEXT(%struct.rtattr* %54, i32 %55)
  store %struct.rtattr* %56, %struct.rtattr** %5, align 8
  br label %30

57:                                               ; preds = %30
  br label %58

58:                                               ; preds = %20, %57, %23
  ret void
}

declare dso_local i32 @fprintf(i32, i8*) #1

declare dso_local i64 @RTA_OK(%struct.rtattr*, i32) #1

declare dso_local i64 @RTA_DATA(%struct.rtattr*) #1

declare dso_local i32 @printf(i8*, i64) #1

declare dso_local %struct.rtattr* @RTA_NEXT(%struct.rtattr*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
