; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_41350.c_usage.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_41350.c_usage.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [5 x i8] c"%s \0A\00", align 1
@banner = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [62 x i8] c" -U UDP attack \1B[1;37m(\1B[0m\1B[0;31mno options\1B[0m\1B[1;37m)\1B[0m\0A\00", align 1
@.str.2 = private unnamed_addr constant [63 x i8] c" -I ICMP attack \1B[1;37m(\1B[0m\1B[0;31mno options\1B[0m\1B[1;37m)\1B[0m\0A\00", align 1
@.str.3 = private unnamed_addr constant [64 x i8] c" -N Bogus attack \1B[1;37m(\1B[0m\1B[0;31mno options\1B[0m\1B[1;37m)\1B[0m\0A\00", align 1
@.str.4 = private unnamed_addr constant [74 x i8] c" -T TCP attack \1B[1;37m[\1B[0m0:ACK, 1:FIN, 2:RST, 3:SYN, 4:URG\1B[1;37m]\1B[0m\0A\00", align 1
@.str.5 = private unnamed_addr constant [71 x i8] c" -h destination host/ip \1B[1;37m(\1B[0m\1B[0;31mno default\1B[0m\1B[1;37m)\1B[0m\0A\00", align 1
@.str.6 = private unnamed_addr constant [65 x i8] c" -d destination class \1B[1;37m(\1B[0m\1B[0;31mrandom\1B[0m\1B[1;37m)\1B[0m\0A\00", align 1
@.str.7 = private unnamed_addr constant [62 x i8] c" -s source class/ip \1B[1;37m(\1B[m\1B[0;31mrandom\1B[0m\1B[1;37m)\1B[0m\0A\00", align 1
@.str.8 = private unnamed_addr constant [82 x i8] c" -p destination port range [start,end] \1B[1;37m(\1B[0m\1B[0;31mrandom\1B[0m\1B[1;37m)\1B[0m\0A\00", align 1
@.str.9 = private unnamed_addr constant [77 x i8] c" -q source port range [start,end] \1B[1;37m(\1B[0m\1B[0;31mrandom\1B[0m\1B[1;37m)\1B[0m\0A\00", align 1
@.str.10 = private unnamed_addr constant [61 x i8] c" -l pps limiter \1B[1;37m(\1B[0m\1B[0;31mno limit\1B[0m\1B[1;37m)\1B[0m\0A\00", align 1
@.str.11 = private unnamed_addr constant [59 x i8] c" -t timeout \1B[1;37m(\1B[0m\1B[0;31mno default\1B[0m\1B[1;37m)\1B[0m\0A\00", align 1
@.str.12 = private unnamed_addr constant [56 x i8] c"\1B[1musage\1B[0m: %s [-T0 -T1 -T2 -T3 -T4 -U -I -h -p -t]\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i8*)* @usage to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @usage(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** @banner, align 8
  %4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* %3)
  %5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0))
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.2, i64 0, i64 0))
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3, i64 0, i64 0))
  %8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0))
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0))
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.6, i64 0, i64 0))
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.7, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.8, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.9, i64 0, i64 0))
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.10, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0))
  %16 = load i8*, i8** %2, align 8
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.12, i64 0, i64 0), i8* %16)
  %18 = call i32 @exit(i32 -1) #3
  unreachable
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
