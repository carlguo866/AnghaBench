; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_22294.c_iph.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_22294.c_iph.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_7__ = type { %struct.TYPE_6__ }
%struct.TYPE_6__ = type { i32 }
%struct.TYPE_8__ = type { %struct.TYPE_5__ }
%struct.TYPE_5__ = type { i32 }
%struct.iphdr = type { i32, i32, i32, i32, i32, i32, i64, i64, i32, i64, i64 }

@IPHEAD_SIZE = common dso_local global i64 0, align 8
@UDPHEAD_SIZE = common dso_local global i64 0, align 8
@ISAKMPHEAD_SIZE = common dso_local global i64 0, align 8
@ISAKMPGEN_SIZE = common dso_local global i64 0, align 8
@spoof = common dso_local global i64 0, align 8
@saddr = common dso_local global %struct.TYPE_7__ zeroinitializer, align 4
@local = common dso_local global %struct.TYPE_8__ zeroinitializer, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.iphdr* @iph() #0 {
  %1 = alloca %struct.iphdr*, align 8
  %2 = load i64, i64* @IPHEAD_SIZE, align 8
  %3 = call %struct.iphdr* @malloc(i64 %2)
  store %struct.iphdr* %3, %struct.iphdr** %1, align 8
  %4 = load %struct.iphdr*, %struct.iphdr** %1, align 8
  %5 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %4, i32 0, i32 0
  store i32 5, i32* %5, align 8
  %6 = load %struct.iphdr*, %struct.iphdr** %1, align 8
  %7 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %6, i32 0, i32 1
  store i32 4, i32* %7, align 4
  %8 = load %struct.iphdr*, %struct.iphdr** %1, align 8
  %9 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %8, i32 0, i32 10
  store i64 0, i64* %9, align 8
  %10 = load i64, i64* @IPHEAD_SIZE, align 8
  %11 = load i64, i64* @UDPHEAD_SIZE, align 8
  %12 = add nsw i64 %10, %11
  %13 = load i64, i64* @ISAKMPHEAD_SIZE, align 8
  %14 = add nsw i64 %12, %13
  %15 = load i64, i64* @ISAKMPGEN_SIZE, align 8
  %16 = add nsw i64 %14, %15
  %17 = load %struct.iphdr*, %struct.iphdr** %1, align 8
  %18 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %17, i32 0, i32 9
  store i64 %16, i64* %18, align 8
  %19 = call i32 (...) @rand()
  %20 = call i32 @htons(i32 %19)
  %21 = load %struct.iphdr*, %struct.iphdr** %1, align 8
  %22 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %21, i32 0, i32 8
  store i32 %20, i32* %22, align 8
  %23 = load %struct.iphdr*, %struct.iphdr** %1, align 8
  %24 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %23, i32 0, i32 7
  store i64 0, i64* %24, align 8
  %25 = load %struct.iphdr*, %struct.iphdr** %1, align 8
  %26 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %25, i32 0, i32 2
  store i32 225, i32* %26, align 8
  %27 = load %struct.iphdr*, %struct.iphdr** %1, align 8
  %28 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %27, i32 0, i32 3
  store i32 17, i32* %28, align 4
  %29 = load %struct.iphdr*, %struct.iphdr** %1, align 8
  %30 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %29, i32 0, i32 6
  store i64 0, i64* %30, align 8
  %31 = load i64, i64* @spoof, align 8
  %32 = icmp ne i64 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %0
  %34 = load i32, i32* getelementptr inbounds (%struct.TYPE_7__, %struct.TYPE_7__* @saddr, i32 0, i32 0, i32 0), align 4
  %35 = load %struct.iphdr*, %struct.iphdr** %1, align 8
  %36 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %35, i32 0, i32 5
  store i32 %34, i32* %36, align 4
  br label %41

37:                                               ; preds = %0
  %38 = load i32, i32* getelementptr inbounds (%struct.TYPE_8__, %struct.TYPE_8__* @local, i32 0, i32 0, i32 0), align 4
  %39 = load %struct.iphdr*, %struct.iphdr** %1, align 8
  %40 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %39, i32 0, i32 5
  store i32 %38, i32* %40, align 4
  br label %41

41:                                               ; preds = %37, %33
  %42 = load i32, i32* getelementptr inbounds (%struct.TYPE_7__, %struct.TYPE_7__* @saddr, i32 0, i32 0, i32 0), align 4
  %43 = load %struct.iphdr*, %struct.iphdr** %1, align 8
  %44 = getelementptr inbounds %struct.iphdr, %struct.iphdr* %43, i32 0, i32 4
  store i32 %42, i32* %44, align 8
  %45 = load %struct.iphdr*, %struct.iphdr** %1, align 8
  ret %struct.iphdr* %45
}

declare dso_local %struct.iphdr* @malloc(i64) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @rand(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
