; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_43199.c_wait_for_success.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_43199.c_wait_for_success.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.thread_args = type { i64*, i64, i32 }

@MEMESET_VAL = common dso_local global i64 0, align 8
@MAP_SIZE = common dso_local global i32 0, align 4
@MADV_DONTNEED = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @wait_for_success(%struct.thread_args* %0) #0 {
  %2 = alloca %struct.thread_args*, align 8
  store %struct.thread_args* %0, %struct.thread_args** %2, align 8
  br label %3

3:                                                ; preds = %14, %1
  %4 = load %struct.thread_args*, %struct.thread_args** %2, align 8
  %5 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %4, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = load %struct.thread_args*, %struct.thread_args** %2, align 8
  %8 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %7, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds i64, i64* %6, i64 %9
  %11 = load i64, i64* %10, align 8
  %12 = load i64, i64* @MEMESET_VAL, align 8
  %13 = icmp ne i64 %11, %12
  br i1 %13, label %14, label %22

14:                                               ; preds = %3
  %15 = load %struct.thread_args*, %struct.thread_args** %2, align 8
  %16 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %15, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = load i32, i32* @MAP_SIZE, align 4
  %19 = load i32, i32* @MADV_DONTNEED, align 4
  %20 = call i32 @madvise(i64* %17, i32 %18, i32 %19)
  %21 = call i32 (...) @sched_yield()
  br label %3

22:                                               ; preds = %3
  %23 = load %struct.thread_args*, %struct.thread_args** %2, align 8
  %24 = getelementptr inbounds %struct.thread_args, %struct.thread_args* %23, i32 0, i32 2
  store i32 1, i32* %24, align 8
  ret i8* null
}

declare dso_local i32 @madvise(i64*, i32, i32) #1

declare dso_local i32 @sched_yield(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
