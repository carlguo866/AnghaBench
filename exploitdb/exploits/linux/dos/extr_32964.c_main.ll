; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_32964.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_32964.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i8*, i32 }

@.str = private unnamed_addr constant [4 x i8] c"foo\00", align 1
@__const.main.data = private unnamed_addr constant %struct.TYPE_4__ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i32 3 }, align 8
@.str.1 = private unnamed_addr constant [4 x i8] c"bar\00", align 1
@__const.main.sig = private unnamed_addr constant %struct.TYPE_4__ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 3 }, align 8
@dsa_cert_dat = common dso_local global i32 0, align 4
@GNUTLS_X509_FMT_PEM = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [10 x i8] c"success!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.TYPE_4__, align 8
  %4 = alloca %struct.TYPE_4__, align 8
  %5 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %6 = bitcast %struct.TYPE_4__* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 bitcast (%struct.TYPE_4__* @__const.main.data to i8*), i64 16, i1 false)
  %7 = bitcast %struct.TYPE_4__* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 bitcast (%struct.TYPE_4__* @__const.main.sig to i8*), i64 16, i1 false)
  %8 = call i32 (...) @gnutls_global_init()
  %9 = call i32 @gnutls_x509_crt_init(i32* %2)
  store i32 %9, i32* %5, align 4
  %10 = load i32, i32* %5, align 4
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %0
  store i32 1, i32* %1, align 4
  br label %31

13:                                               ; preds = %0
  %14 = load i32, i32* %2, align 4
  %15 = load i32, i32* @GNUTLS_X509_FMT_PEM, align 4
  %16 = call i32 @gnutls_x509_crt_import(i32 %14, i32* @dsa_cert_dat, i32 %15)
  store i32 %16, i32* %5, align 4
  %17 = load i32, i32* %5, align 4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %13
  store i32 1, i32* %1, align 4
  br label %31

20:                                               ; preds = %13
  %21 = load i32, i32* %2, align 4
  %22 = call i32 @gnutls_x509_crt_verify_data(i32 %21, i32 0, %struct.TYPE_4__* %3, %struct.TYPE_4__* %4)
  store i32 %22, i32* %5, align 4
  %23 = load i32, i32* %5, align 4
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %20
  store i32 1, i32* %1, align 4
  br label %31

26:                                               ; preds = %20
  %27 = call i32 @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0))
  %28 = load i32, i32* %2, align 4
  %29 = call i32 @gnutls_x509_crt_deinit(i32 %28)
  %30 = call i32 (...) @gnutls_global_deinit()
  store i32 0, i32* %1, align 4
  br label %31

31:                                               ; preds = %26, %25, %19, %12
  %32 = load i32, i32* %1, align 4
  ret i32 %32
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @gnutls_global_init(...) #2

declare dso_local i32 @gnutls_x509_crt_init(i32*) #2

declare dso_local i32 @gnutls_x509_crt_import(i32, i32*, i32) #2

declare dso_local i32 @gnutls_x509_crt_verify_data(i32, i32, %struct.TYPE_4__*, %struct.TYPE_4__*) #2

declare dso_local i32 @printf(i8*) #2

declare dso_local i32 @gnutls_x509_crt_deinit(i32) #2

declare dso_local i32 @gnutls_global_deinit(...) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
