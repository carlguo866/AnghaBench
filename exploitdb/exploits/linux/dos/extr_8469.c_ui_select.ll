; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_8469.c_ui_select.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_8469.c_ui_select.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_8__ = type { %struct.TYPE_6__ }
%struct.TYPE_6__ = type { i32, i32 }
%struct.TYPE_7__ = type { i32 }

@x_socket = common dso_local global i32 0, align 4
@ix = common dso_local global i32 0, align 4
@True = common dso_local global i64 0, align 8
@RDP_KEYPRESS = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [12 x i8] c"select: %s\0A\00", align 1
@errno = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @ui_select(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.TYPE_8__, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.TYPE_7__, align 4
  %10 = alloca %struct.TYPE_7__, align 4
  store i32 %0, i32* %3, align 4
  %11 = load i32, i32* %3, align 4
  %12 = load i32, i32* @x_socket, align 4
  %13 = icmp sgt i32 %11, %12
  br i1 %13, label %14, label %17

14:                                               ; preds = %1
  %15 = load i32, i32* %3, align 4
  %16 = add nsw i32 %15, 1
  br label %20

17:                                               ; preds = %1
  %18 = load i32, i32* @x_socket, align 4
  %19 = add nsw i32 %18, 1
  br label %20

20:                                               ; preds = %17, %14
  %21 = phi i32 [ %16, %14 ], [ %19, %17 ]
  store i32 %21, i32* %4, align 4
  %22 = load i32, i32* @ix, align 4
  %23 = add nsw i32 %22, -1
  store i32 %23, i32* @ix, align 4
  %24 = icmp sge i32 %22, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %20
  store i32 1, i32* %2, align 4
  br label %78

26:                                               ; preds = %20
  %27 = call i32 @time(i32* null)
  store i32 %27, i32* %8, align 4
  %28 = load i32, i32* %7, align 4
  %29 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %6, i32 0, i32 0
  %30 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %29, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = load i32, i32* %8, align 4
  %33 = load i64, i64* @True, align 8
  %34 = call i32 @handle_special_keys(i32 %28, i32 %31, i32 %32, i64 %33)
  %35 = load i32, i32* %7, align 4
  %36 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %6, i32 0, i32 0
  %37 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %6, i32 0, i32 0
  %40 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %39, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = call i32 @xkeymap_translate_key(i32 %35, i32 %38, i32 %41)
  %43 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %10, i32 0, i32 0
  store i32 %42, i32* %43, align 4
  %44 = bitcast %struct.TYPE_7__* %9 to i8*
  %45 = bitcast %struct.TYPE_7__* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %44, i8* align 4 %45, i64 4, i1 false)
  %46 = load i32, i32* %8, align 4
  %47 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %9, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = call i32 @ensure_remote_modifiers(i32 %46, i32 %48)
  %50 = load i32, i32* %8, align 4
  %51 = load i32, i32* @RDP_KEYPRESS, align 4
  %52 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %9, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = call i32 @rdp_send_scancode(i32 %50, i32 %51, i32 %53)
  %55 = call i32 @FD_ZERO(i32* %5)
  br label %56

56:                                               ; preds = %77, %71, %26
  %57 = load i64, i64* @True, align 8
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %59, label %78

59:                                               ; preds = %56
  %60 = call i32 @FD_ZERO(i32* %5)
  %61 = load i32, i32* %3, align 4
  %62 = call i32 @FD_SET(i32 %61, i32* %5)
  %63 = load i32, i32* @x_socket, align 4
  %64 = call i32 @FD_SET(i32 %63, i32* %5)
  %65 = load i32, i32* %4, align 4
  %66 = call i32 @select(i32 %65, i32* %5, i32* null, i32* null, i32* null)
  switch i32 %66, label %72 [
    i32 -1, label %67
    i32 0, label %71
  ]

67:                                               ; preds = %59
  %68 = load i32, i32* @errno, align 4
  %69 = call i32 @strerror(i32 %68)
  %70 = call i32 @error(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 %69)
  br label %71

71:                                               ; preds = %59, %67
  br label %56

72:                                               ; preds = %59
  %73 = load i32, i32* %3, align 4
  %74 = call i64 @FD_ISSET(i32 %73, i32* %5)
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %72
  store i32 1, i32* %2, align 4
  br label %78

77:                                               ; preds = %72
  br label %56

78:                                               ; preds = %25, %76, %56
  %79 = load i32, i32* %2, align 4
  ret i32 %79
}

declare dso_local i32 @time(i32*) #1

declare dso_local i32 @handle_special_keys(i32, i32, i32, i64) #1

declare dso_local i32 @xkeymap_translate_key(i32, i32, i32) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local i32 @ensure_remote_modifiers(i32, i32) #1

declare dso_local i32 @rdp_send_scancode(i32, i32, i32) #1

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i32 @select(i32, i32*, i32*, i32*, i32*) #1

declare dso_local i32 @error(i8*, i32) #1

declare dso_local i32 @strerror(i32) #1

declare dso_local i64 @FD_ISSET(i32, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
