; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_4893.c_resolve6.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_4893.c_resolve6.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.in6_addr = type { i32 }
%struct.addrinfo = type { i32, i32, i32 }

@AF_INET6 = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [21 x i8] c"getaddrinfo() error\0A\00", align 1
@NI_NUMERICHOST = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [21 x i8] c"getnameinfo() error\0A\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"inet_pton() error\0A\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"malloc() error\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @resolve6(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca %struct.in6_addr, align 4
  %5 = alloca i8*, align 8
  %6 = alloca %struct.addrinfo, align 4
  %7 = alloca %struct.addrinfo*, align 8
  %8 = alloca [64 x i8], align 16
  store i8* %0, i8** %2, align 8
  %9 = bitcast %struct.in6_addr* %4 to i8*
  store i8* %9, i8** %5, align 8
  %10 = call i32 @memset(%struct.addrinfo* %6, i32 0, i32 12)
  %11 = load i32, i32* @AF_INET6, align 4
  %12 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %6, i32 0, i32 2
  store i32 %11, i32* %12, align 4
  %13 = load i8*, i8** %2, align 8
  %14 = call i64 @getaddrinfo(i8* %13, i32* null, %struct.addrinfo* %6, %struct.addrinfo** %7)
  %15 = icmp ne i64 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %1
  %17 = call i32 @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0))
  %18 = call i32 @exit(i32 1) #3
  unreachable

19:                                               ; preds = %1
  %20 = load %struct.addrinfo*, %struct.addrinfo** %7, align 8
  %21 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %20, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = load %struct.addrinfo*, %struct.addrinfo** %7, align 8
  %24 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %23, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %27 = load i32, i32* @NI_NUMERICHOST, align 4
  %28 = call i64 @getnameinfo(i32 %22, i32 %25, i8* %26, i32 64, i32* null, i32 0, i32 %27)
  %29 = icmp ne i64 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %19
  %31 = call i32 @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0))
  %32 = call i32 @exit(i32 1) #3
  unreachable

33:                                               ; preds = %19
  %34 = load i32, i32* @AF_INET6, align 4
  %35 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %36 = load i8*, i8** %5, align 8
  %37 = call i64 @inet_pton(i32 %34, i8* %35, i8* %36)
  %38 = icmp slt i64 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0))
  %41 = call i32 @exit(i32 1) #3
  unreachable

42:                                               ; preds = %33
  %43 = call i8* @malloc(i32 16)
  store i8* %43, i8** %3, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %45, label %48

45:                                               ; preds = %42
  %46 = call i32 @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0))
  %47 = call i32 @exit(i32 1) #3
  unreachable

48:                                               ; preds = %42
  %49 = load i8*, i8** %3, align 8
  %50 = getelementptr inbounds %struct.in6_addr, %struct.in6_addr* %4, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = call i32 @memcpy(i8* %49, i32 %51, i32 16)
  %53 = load i8*, i8** %3, align 8
  ret i8* %53
}

declare dso_local i32 @memset(%struct.addrinfo*, i32, i32) #1

declare dso_local i64 @getaddrinfo(i8*, i32*, %struct.addrinfo*, %struct.addrinfo**) #1

declare dso_local i32 @printf(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i64 @getnameinfo(i32, i32, i8*, i32, i32*, i32, i32) #1

declare dso_local i64 @inet_pton(i32, i8*, i8*) #1

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @memcpy(i8*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
