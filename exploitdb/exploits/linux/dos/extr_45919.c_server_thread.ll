; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_45919.c_server_thread.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_45919.c_server_thread.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sctp_initmsg = type { i32, i32, i32 }
%struct.sctp_sndrcvinfo = type { i32 }
%struct.sockaddr_in = type { i32, %struct.TYPE_2__, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.sockaddr = type { i32 }

@MY_PORT_NUM = common dso_local global i32 0, align 4
@INADDR_ANY = common dso_local global i32 0, align 4
@AF_INET = common dso_local global i32 0, align 4
@__const.server_thread.initmsg = private unnamed_addr constant %struct.sctp_initmsg { i32 5, i32 5, i32 4 }, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@IPPROTO_SCTP = common dso_local global i32 0, align 4
@SCTP_INITMSG = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [27 x i8] c"[] Waiting for connection\0A\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"[] New client connected\0A\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"[] Received data: %s\0A\00", align 1
@servser_stop_flag = common dso_local global i64 0, align 8
@llvm.used = appending global [1 x i8*] [i8* bitcast (i8* (i8*)* @server_thread to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @server_thread(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [1024 x i8], align 16
  %10 = alloca %struct.sctp_sndrcvinfo, align 4
  %11 = alloca %struct.sockaddr_in, align 4
  %12 = alloca %struct.sctp_initmsg, align 4
  store i8* %0, i8** %3, align 8
  %13 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 0
  %14 = load i32, i32* @MY_PORT_NUM, align 4
  %15 = call i32 @htons(i32 %14)
  store i32 %15, i32* %13, align 4
  %16 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 1
  %17 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %16, i32 0, i32 0
  %18 = load i32, i32* @INADDR_ANY, align 4
  %19 = call i32 @htonl(i32 %18)
  store i32 %19, i32* %17, align 4
  %20 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 2
  %21 = load i32, i32* @AF_INET, align 4
  store i32 %21, i32* %20, align 4
  %22 = bitcast %struct.sctp_initmsg* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %22, i8* align 4 bitcast (%struct.sctp_initmsg* @__const.server_thread.initmsg to i8*), i64 12, i1 false)
  %23 = load i32, i32* @AF_INET, align 4
  %24 = load i32, i32* @SOCK_STREAM, align 4
  %25 = load i32, i32* @IPPROTO_SCTP, align 4
  %26 = call i32 @socket(i32 %23, i32 %24, i32 %25)
  store i32 %26, i32* %4, align 4
  %27 = load i32, i32* %4, align 4
  %28 = icmp slt i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %1
  store i8* null, i8** %2, align 8
  br label %79

30:                                               ; preds = %1
  %31 = load i32, i32* %4, align 4
  %32 = bitcast %struct.sockaddr_in* %11 to %struct.sockaddr*
  %33 = call i32 @bind(i32 %31, %struct.sockaddr* %32, i32 12)
  store i32 %33, i32* %7, align 4
  %34 = load i32, i32* %7, align 4
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %30
  store i8* null, i8** %2, align 8
  br label %79

37:                                               ; preds = %30
  %38 = load i32, i32* %4, align 4
  %39 = load i32, i32* @IPPROTO_SCTP, align 4
  %40 = load i32, i32* @SCTP_INITMSG, align 4
  %41 = call i32 @setsockopt(i32 %38, i32 %39, i32 %40, %struct.sctp_initmsg* %12, i32 12)
  store i32 %41, i32* %7, align 4
  %42 = load i32, i32* %7, align 4
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %37
  store i8* null, i8** %2, align 8
  br label %79

45:                                               ; preds = %37
  %46 = load i32, i32* %4, align 4
  %47 = getelementptr inbounds %struct.sctp_initmsg, %struct.sctp_initmsg* %12, i32 0, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = call i32 @listen(i32 %46, i32 %48)
  store i32 %49, i32* %7, align 4
  %50 = load i32, i32* %7, align 4
  %51 = icmp slt i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %45
  store i8* null, i8** %2, align 8
  br label %79

53:                                               ; preds = %45
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0))
  %55 = load i32, i32* %4, align 4
  %56 = call i32 @accept(i32 %55, %struct.sockaddr* null, i32* null)
  store i32 %56, i32* %5, align 4
  %57 = load i32, i32* %5, align 4
  %58 = icmp slt i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %53
  store i8* null, i8** %2, align 8
  br label %79

60:                                               ; preds = %53
  %61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0))
  %62 = load i32, i32* %5, align 4
  %63 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %64 = call i32 @sctp_recvmsg(i32 %62, i8* %63, i32 1024, i32* null, i32 0, %struct.sctp_sndrcvinfo* %10, i32* %6)
  store i32 %64, i32* %8, align 4
  %65 = load i32, i32* %8, align 4
  %66 = icmp sgt i32 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %60
  %68 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i8* %68)
  br label %70

70:                                               ; preds = %67, %60
  br label %71

71:                                               ; preds = %74, %70
  %72 = load i64, i64* @servser_stop_flag, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %71
  %75 = call i32 @sleep(i32 1)
  br label %71

76:                                               ; preds = %71
  %77 = load i32, i32* %5, align 4
  %78 = call i32 @close(i32 %77)
  store i8* null, i8** %2, align 8
  br label %79

79:                                               ; preds = %76, %59, %52, %44, %36, %29
  %80 = load i8*, i8** %2, align 8
  ret i8* %80
}

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @htonl(i32) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @bind(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @setsockopt(i32, i32, i32, %struct.sctp_initmsg*, i32) #1

declare dso_local i32 @listen(i32, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @accept(i32, %struct.sockaddr*, i32*) #1

declare dso_local i32 @sctp_recvmsg(i32, i8*, i32, i32*, i32, %struct.sctp_sndrcvinfo*, i32*) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
