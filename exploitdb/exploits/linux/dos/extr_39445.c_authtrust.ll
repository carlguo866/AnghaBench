; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_39445.c_authtrust.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_39445.c_authtrust.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.savekey = type { i64, %struct.savekey*, i32, i64, i64, i64 }

@key_hash = common dso_local global %struct.savekey** null, align 8
@cache_keyid = common dso_local global i64 0, align 8
@cache_flags = common dso_local global i64 0, align 8
@KEY_TRUSTED = common dso_local global i32 0, align 4
@current_time = common dso_local global i64 0, align 8
@authnumkeys = common dso_local global i32 0, align 4
@authfreekeys = common dso_local global %struct.savekey* null, align 8
@authnumfreekeys = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @authtrust(i64 %0, i64 %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.savekey*, align 8
  %6 = alloca %struct.savekey*, align 8
  store i64 %0, i64* %3, align 8
  store i64 %1, i64* %4, align 8
  %7 = load %struct.savekey**, %struct.savekey*** @key_hash, align 8
  %8 = load i64, i64* %3, align 8
  %9 = call i64 @KEYHASH(i64 %8)
  %10 = getelementptr inbounds %struct.savekey*, %struct.savekey** %7, i64 %9
  %11 = load %struct.savekey*, %struct.savekey** %10, align 8
  store %struct.savekey* %11, %struct.savekey** %5, align 8
  br label %12

12:                                               ; preds = %22, %2
  %13 = load %struct.savekey*, %struct.savekey** %5, align 8
  %14 = icmp ne %struct.savekey* %13, null
  br i1 %14, label %15, label %26

15:                                               ; preds = %12
  %16 = load i64, i64* %3, align 8
  %17 = load %struct.savekey*, %struct.savekey** %5, align 8
  %18 = getelementptr inbounds %struct.savekey, %struct.savekey* %17, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %16, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  br label %26

22:                                               ; preds = %15
  %23 = load %struct.savekey*, %struct.savekey** %5, align 8
  %24 = getelementptr inbounds %struct.savekey, %struct.savekey* %23, i32 0, i32 1
  %25 = load %struct.savekey*, %struct.savekey** %24, align 8
  store %struct.savekey* %25, %struct.savekey** %5, align 8
  br label %12

26:                                               ; preds = %21, %12
  %27 = load %struct.savekey*, %struct.savekey** %5, align 8
  %28 = icmp eq %struct.savekey* %27, null
  br i1 %28, label %29, label %33

29:                                               ; preds = %26
  %30 = load i64, i64* %4, align 8
  %31 = icmp ne i64 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  br label %150

33:                                               ; preds = %29, %26
  %34 = load %struct.savekey*, %struct.savekey** %5, align 8
  %35 = icmp ne %struct.savekey* %34, null
  br i1 %35, label %36, label %111

36:                                               ; preds = %33
  %37 = load i64, i64* @cache_keyid, align 8
  %38 = load i64, i64* %3, align 8
  %39 = icmp eq i64 %37, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %36
  store i64 0, i64* @cache_flags, align 8
  store i64 0, i64* @cache_keyid, align 8
  br label %41

41:                                               ; preds = %40, %36
  %42 = load i64, i64* %4, align 8
  %43 = icmp sgt i64 %42, 0
  br i1 %43, label %44, label %62

44:                                               ; preds = %41
  %45 = load i32, i32* @KEY_TRUSTED, align 4
  %46 = load %struct.savekey*, %struct.savekey** %5, align 8
  %47 = getelementptr inbounds %struct.savekey, %struct.savekey* %46, i32 0, i32 2
  %48 = load i32, i32* %47, align 8
  %49 = or i32 %48, %45
  store i32 %49, i32* %47, align 8
  %50 = load i64, i64* %4, align 8
  %51 = icmp sgt i64 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %44
  %53 = load i64, i64* @current_time, align 8
  %54 = load i64, i64* %4, align 8
  %55 = add nsw i64 %53, %54
  %56 = load %struct.savekey*, %struct.savekey** %5, align 8
  %57 = getelementptr inbounds %struct.savekey, %struct.savekey* %56, i32 0, i32 5
  store i64 %55, i64* %57, align 8
  br label %61

58:                                               ; preds = %44
  %59 = load %struct.savekey*, %struct.savekey** %5, align 8
  %60 = getelementptr inbounds %struct.savekey, %struct.savekey* %59, i32 0, i32 5
  store i64 0, i64* %60, align 8
  br label %61

61:                                               ; preds = %58, %52
  br label %150

62:                                               ; preds = %41
  %63 = load i32, i32* @KEY_TRUSTED, align 4
  %64 = xor i32 %63, -1
  %65 = load %struct.savekey*, %struct.savekey** %5, align 8
  %66 = getelementptr inbounds %struct.savekey, %struct.savekey* %65, i32 0, i32 2
  %67 = load i32, i32* %66, align 8
  %68 = and i32 %67, %64
  store i32 %68, i32* %66, align 8
  %69 = load %struct.savekey**, %struct.savekey*** @key_hash, align 8
  %70 = load i64, i64* %3, align 8
  %71 = call i64 @KEYHASH(i64 %70)
  %72 = getelementptr inbounds %struct.savekey*, %struct.savekey** %69, i64 %71
  %73 = load %struct.savekey*, %struct.savekey** %72, align 8
  store %struct.savekey* %73, %struct.savekey** %6, align 8
  %74 = load %struct.savekey*, %struct.savekey** %6, align 8
  %75 = load %struct.savekey*, %struct.savekey** %5, align 8
  %76 = icmp eq %struct.savekey* %74, %75
  br i1 %76, label %77, label %85

77:                                               ; preds = %62
  %78 = load %struct.savekey*, %struct.savekey** %5, align 8
  %79 = getelementptr inbounds %struct.savekey, %struct.savekey* %78, i32 0, i32 1
  %80 = load %struct.savekey*, %struct.savekey** %79, align 8
  %81 = load %struct.savekey**, %struct.savekey*** @key_hash, align 8
  %82 = load i64, i64* %3, align 8
  %83 = call i64 @KEYHASH(i64 %82)
  %84 = getelementptr inbounds %struct.savekey*, %struct.savekey** %81, i64 %83
  store %struct.savekey* %80, %struct.savekey** %84, align 8
  br label %102

85:                                               ; preds = %62
  br label %86

86:                                               ; preds = %92, %85
  %87 = load %struct.savekey*, %struct.savekey** %6, align 8
  %88 = getelementptr inbounds %struct.savekey, %struct.savekey* %87, i32 0, i32 1
  %89 = load %struct.savekey*, %struct.savekey** %88, align 8
  %90 = load %struct.savekey*, %struct.savekey** %5, align 8
  %91 = icmp ne %struct.savekey* %89, %90
  br i1 %91, label %92, label %96

92:                                               ; preds = %86
  %93 = load %struct.savekey*, %struct.savekey** %6, align 8
  %94 = getelementptr inbounds %struct.savekey, %struct.savekey* %93, i32 0, i32 1
  %95 = load %struct.savekey*, %struct.savekey** %94, align 8
  store %struct.savekey* %95, %struct.savekey** %6, align 8
  br label %86

96:                                               ; preds = %86
  %97 = load %struct.savekey*, %struct.savekey** %5, align 8
  %98 = getelementptr inbounds %struct.savekey, %struct.savekey* %97, i32 0, i32 1
  %99 = load %struct.savekey*, %struct.savekey** %98, align 8
  %100 = load %struct.savekey*, %struct.savekey** %6, align 8
  %101 = getelementptr inbounds %struct.savekey, %struct.savekey* %100, i32 0, i32 1
  store %struct.savekey* %99, %struct.savekey** %101, align 8
  br label %102

102:                                              ; preds = %96, %77
  %103 = load i32, i32* @authnumkeys, align 4
  %104 = add nsw i32 %103, -1
  store i32 %104, i32* @authnumkeys, align 4
  %105 = load %struct.savekey*, %struct.savekey** @authfreekeys, align 8
  %106 = load %struct.savekey*, %struct.savekey** %5, align 8
  %107 = getelementptr inbounds %struct.savekey, %struct.savekey* %106, i32 0, i32 1
  store %struct.savekey* %105, %struct.savekey** %107, align 8
  %108 = load %struct.savekey*, %struct.savekey** %5, align 8
  store %struct.savekey* %108, %struct.savekey** @authfreekeys, align 8
  %109 = load i64, i64* @authnumfreekeys, align 8
  %110 = add nsw i64 %109, 1
  store i64 %110, i64* @authnumfreekeys, align 8
  br label %150

111:                                              ; preds = %33
  %112 = load i64, i64* @authnumfreekeys, align 8
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %119

114:                                              ; preds = %111
  %115 = call i64 (...) @auth_moremem()
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  br label %150

118:                                              ; preds = %114
  br label %119

119:                                              ; preds = %118, %111
  %120 = load %struct.savekey*, %struct.savekey** @authfreekeys, align 8
  store %struct.savekey* %120, %struct.savekey** %5, align 8
  %121 = load %struct.savekey*, %struct.savekey** %5, align 8
  %122 = getelementptr inbounds %struct.savekey, %struct.savekey* %121, i32 0, i32 1
  %123 = load %struct.savekey*, %struct.savekey** %122, align 8
  store %struct.savekey* %123, %struct.savekey** @authfreekeys, align 8
  %124 = load i64, i64* @authnumfreekeys, align 8
  %125 = add nsw i64 %124, -1
  store i64 %125, i64* @authnumfreekeys, align 8
  %126 = load i64, i64* %3, align 8
  %127 = load %struct.savekey*, %struct.savekey** %5, align 8
  %128 = getelementptr inbounds %struct.savekey, %struct.savekey* %127, i32 0, i32 0
  store i64 %126, i64* %128, align 8
  %129 = load %struct.savekey*, %struct.savekey** %5, align 8
  %130 = getelementptr inbounds %struct.savekey, %struct.savekey* %129, i32 0, i32 4
  store i64 0, i64* %130, align 8
  %131 = load %struct.savekey*, %struct.savekey** %5, align 8
  %132 = getelementptr inbounds %struct.savekey, %struct.savekey* %131, i32 0, i32 3
  store i64 0, i64* %132, align 8
  %133 = load i32, i32* @KEY_TRUSTED, align 4
  %134 = load %struct.savekey*, %struct.savekey** %5, align 8
  %135 = getelementptr inbounds %struct.savekey, %struct.savekey* %134, i32 0, i32 2
  store i32 %133, i32* %135, align 8
  %136 = load %struct.savekey**, %struct.savekey*** @key_hash, align 8
  %137 = load i64, i64* %3, align 8
  %138 = call i64 @KEYHASH(i64 %137)
  %139 = getelementptr inbounds %struct.savekey*, %struct.savekey** %136, i64 %138
  %140 = load %struct.savekey*, %struct.savekey** %139, align 8
  %141 = load %struct.savekey*, %struct.savekey** %5, align 8
  %142 = getelementptr inbounds %struct.savekey, %struct.savekey* %141, i32 0, i32 1
  store %struct.savekey* %140, %struct.savekey** %142, align 8
  %143 = load %struct.savekey*, %struct.savekey** %5, align 8
  %144 = load %struct.savekey**, %struct.savekey*** @key_hash, align 8
  %145 = load i64, i64* %3, align 8
  %146 = call i64 @KEYHASH(i64 %145)
  %147 = getelementptr inbounds %struct.savekey*, %struct.savekey** %144, i64 %146
  store %struct.savekey* %143, %struct.savekey** %147, align 8
  %148 = load i32, i32* @authnumkeys, align 4
  %149 = add nsw i32 %148, 1
  store i32 %149, i32* @authnumkeys, align 4
  br label %150

150:                                              ; preds = %119, %117, %102, %61, %32
  ret void
}

declare dso_local i64 @KEYHASH(i64) #1

declare dso_local i64 @auth_moremem(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
