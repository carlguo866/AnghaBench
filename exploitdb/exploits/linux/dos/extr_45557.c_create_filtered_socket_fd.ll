; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_45557.c_create_filtered_socket_fd.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_45557.c_create_filtered_socket_fd.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bpf_insn = type { i32 }

@AF_UNIX = common dso_local global i32 0, align 4
@SOCK_DGRAM = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [11 x i8] c"socketpair\00", align 1
@SOL_SOCKET = common dso_local global i32 0, align 4
@SO_ATTACH_BPF = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [11 x i8] c"setsockopt\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @create_filtered_socket_fd(%struct.bpf_insn* %0, i64 %1) #0 {
  %3 = alloca %struct.bpf_insn*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca [2 x i32], align 4
  store %struct.bpf_insn* %0, %struct.bpf_insn** %3, align 8
  store i64 %1, i64* %4, align 8
  %7 = load %struct.bpf_insn*, %struct.bpf_insn** %3, align 8
  %8 = load i64, i64* %4, align 8
  %9 = call i32 @prog_load(%struct.bpf_insn* %7, i64 %8)
  store i32 %9, i32* %5, align 4
  %10 = load i32, i32* @AF_UNIX, align 4
  %11 = load i32, i32* @SOCK_DGRAM, align 4
  %12 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  %13 = call i64 @socketpair(i32 %10, i32 %11, i32 0, i32* %12)
  %14 = icmp ne i64 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = call i32 @err(i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0))
  br label %17

17:                                               ; preds = %15, %2
  %18 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  %19 = load i32, i32* %18, align 4
  %20 = load i32, i32* @SOL_SOCKET, align 4
  %21 = load i32, i32* @SO_ATTACH_BPF, align 4
  %22 = call i64 @setsockopt(i32 %19, i32 %20, i32 %21, i32* %5, i32 4)
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %17
  %25 = call i32 @err(i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0))
  br label %26

26:                                               ; preds = %24, %17
  %27 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 1
  %28 = load i32, i32* %27, align 4
  ret i32 %28
}

declare dso_local i32 @prog_load(%struct.bpf_insn*, i64) #1

declare dso_local i64 @socketpair(i32, i32, i32, i32*) #1

declare dso_local i32 @err(i32, i8*) #1

declare dso_local i64 @setsockopt(i32, i32, i32, i32*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
