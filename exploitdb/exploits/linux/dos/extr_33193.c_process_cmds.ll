; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_33193.c_process_cmds.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_33193.c_process_cmds.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sigaction = type { i32, i32* }

@SIGINT = common dso_local global i32 0, align 4
@SIG_BLOCK = common dso_local global i32 0, align 4
@sigint_handler = common dso_local global i32 0, align 4
@SA_NODEFER = common dso_local global i32 0, align 4
@SIG_UNBLOCK = common dso_local global i32 0, align 4
@sigint_dest = common dso_local global i32 0, align 4
@stdout = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void ()* @process_cmds to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @process_cmds() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.sigaction, align 8
  %3 = call i32 @sigemptyset(i32* %1)
  %4 = load i32, i32* @SIGINT, align 4
  %5 = call i32 @sigaddset(i32* %1, i32 %4)
  %6 = load i32, i32* @SIG_BLOCK, align 4
  %7 = call i32 @sigprocmask(i32 %6, i32* %1, i32* null)
  %8 = call i32 @memset(%struct.sigaction* %2, i32 16, i32 0)
  %9 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %2, i32 0, i32 1
  store i32* @sigint_handler, i32** %9, align 8
  %10 = load i32, i32* @SA_NODEFER, align 4
  %11 = getelementptr inbounds %struct.sigaction, %struct.sigaction* %2, i32 0, i32 0
  store i32 %10, i32* %11, align 8
  %12 = load i32, i32* @SIGINT, align 4
  %13 = call i32 @sigaction(i32 %12, %struct.sigaction* %2, i32* null)
  %14 = load i32, i32* @SIG_UNBLOCK, align 4
  %15 = call i32 @sigprocmask(i32 %14, i32* %1, i32* null)
  br label %16

16:                                               ; preds = %16, %0
  %17 = call i32 (...) @process_cmd()
  br label %16
}

declare dso_local i32 @sigemptyset(i32*) #1

declare dso_local i32 @sigaddset(i32*, i32) #1

declare dso_local i32 @sigprocmask(i32, i32*, i32*) #1

declare dso_local i32 @memset(%struct.sigaction*, i32, i32) #1

declare dso_local i32 @sigaction(i32, %struct.sigaction*, i32*) #1

declare dso_local i32 @process_cmd(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
