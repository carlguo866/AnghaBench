; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_17769.c_naive_matrix_multiply.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_17769.c_naive_matrix_multiply.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@MATRIX_SIZE = common dso_local global i32 0, align 4
@a = common dso_local global double** null, align 8
@b = common dso_local global double** null, align 8
@c = common dso_local global double** null, align 8
@.str = private unnamed_addr constant [28 x i8] c"Matrix multiply sum: s=%lf\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i32)* @naive_matrix_multiply to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @naive_matrix_multiply(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca double, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  store i32 0, i32* %4, align 4
  br label %7

7:                                                ; preds = %48, %1
  %8 = load i32, i32* %4, align 4
  %9 = load i32, i32* @MATRIX_SIZE, align 4
  %10 = icmp slt i32 %8, %9
  br i1 %10, label %11, label %51

11:                                               ; preds = %7
  store i32 0, i32* %5, align 4
  br label %12

12:                                               ; preds = %44, %11
  %13 = load i32, i32* %5, align 4
  %14 = load i32, i32* @MATRIX_SIZE, align 4
  %15 = icmp slt i32 %13, %14
  br i1 %15, label %16, label %47

16:                                               ; preds = %12
  %17 = load i32, i32* %4, align 4
  %18 = sitofp i32 %17 to double
  %19 = load i32, i32* %5, align 4
  %20 = sitofp i32 %19 to double
  %21 = fmul double %18, %20
  %22 = load double**, double*** @a, align 8
  %23 = load i32, i32* %4, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds double*, double** %22, i64 %24
  %26 = load double*, double** %25, align 8
  %27 = load i32, i32* %5, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds double, double* %26, i64 %28
  store double %21, double* %29, align 8
  %30 = load i32, i32* %4, align 4
  %31 = sitofp i32 %30 to double
  %32 = load i32, i32* %5, align 4
  %33 = add nsw i32 %32, 5
  %34 = sitofp i32 %33 to double
  %35 = fdiv double %31, %34
  %36 = load double**, double*** @b, align 8
  %37 = load i32, i32* %4, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds double*, double** %36, i64 %38
  %40 = load double*, double** %39, align 8
  %41 = load i32, i32* %5, align 4
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds double, double* %40, i64 %42
  store double %35, double* %43, align 8
  br label %44

44:                                               ; preds = %16
  %45 = load i32, i32* %5, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %5, align 4
  br label %12

47:                                               ; preds = %12
  br label %48

48:                                               ; preds = %47
  %49 = load i32, i32* %4, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %4, align 4
  br label %7

51:                                               ; preds = %7
  store i32 0, i32* %5, align 4
  br label %52

52:                                               ; preds = %105, %51
  %53 = load i32, i32* %5, align 4
  %54 = load i32, i32* @MATRIX_SIZE, align 4
  %55 = icmp slt i32 %53, %54
  br i1 %55, label %56, label %108

56:                                               ; preds = %52
  store i32 0, i32* %4, align 4
  br label %57

57:                                               ; preds = %101, %56
  %58 = load i32, i32* %4, align 4
  %59 = load i32, i32* @MATRIX_SIZE, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %61, label %104

61:                                               ; preds = %57
  store double 0.000000e+00, double* %3, align 8
  store i32 0, i32* %6, align 4
  br label %62

62:                                               ; preds = %88, %61
  %63 = load i32, i32* %6, align 4
  %64 = load i32, i32* @MATRIX_SIZE, align 4
  %65 = icmp slt i32 %63, %64
  br i1 %65, label %66, label %91

66:                                               ; preds = %62
  %67 = load double**, double*** @a, align 8
  %68 = load i32, i32* %4, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds double*, double** %67, i64 %69
  %71 = load double*, double** %70, align 8
  %72 = load i32, i32* %6, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds double, double* %71, i64 %73
  %75 = load double, double* %74, align 8
  %76 = load double**, double*** @b, align 8
  %77 = load i32, i32* %6, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds double*, double** %76, i64 %78
  %80 = load double*, double** %79, align 8
  %81 = load i32, i32* %5, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds double, double* %80, i64 %82
  %84 = load double, double* %83, align 8
  %85 = fmul double %75, %84
  %86 = load double, double* %3, align 8
  %87 = fadd double %86, %85
  store double %87, double* %3, align 8
  br label %88

88:                                               ; preds = %66
  %89 = load i32, i32* %6, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %6, align 4
  br label %62

91:                                               ; preds = %62
  %92 = load double, double* %3, align 8
  %93 = load double**, double*** @c, align 8
  %94 = load i32, i32* %4, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds double*, double** %93, i64 %95
  %97 = load double*, double** %96, align 8
  %98 = load i32, i32* %5, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds double, double* %97, i64 %99
  store double %92, double* %100, align 8
  br label %101

101:                                              ; preds = %91
  %102 = load i32, i32* %4, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %4, align 4
  br label %57

104:                                              ; preds = %57
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %5, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %5, align 4
  br label %52

108:                                              ; preds = %52
  store double 0.000000e+00, double* %3, align 8
  store i32 0, i32* %4, align 4
  br label %109

109:                                              ; preds = %134, %108
  %110 = load i32, i32* %4, align 4
  %111 = load i32, i32* @MATRIX_SIZE, align 4
  %112 = icmp slt i32 %110, %111
  br i1 %112, label %113, label %137

113:                                              ; preds = %109
  store i32 0, i32* %5, align 4
  br label %114

114:                                              ; preds = %130, %113
  %115 = load i32, i32* %5, align 4
  %116 = load i32, i32* @MATRIX_SIZE, align 4
  %117 = icmp slt i32 %115, %116
  br i1 %117, label %118, label %133

118:                                              ; preds = %114
  %119 = load double**, double*** @c, align 8
  %120 = load i32, i32* %4, align 4
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds double*, double** %119, i64 %121
  %123 = load double*, double** %122, align 8
  %124 = load i32, i32* %5, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds double, double* %123, i64 %125
  %127 = load double, double* %126, align 8
  %128 = load double, double* %3, align 8
  %129 = fadd double %128, %127
  store double %129, double* %3, align 8
  br label %130

130:                                              ; preds = %118
  %131 = load i32, i32* %5, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %5, align 4
  br label %114

133:                                              ; preds = %114
  br label %134

134:                                              ; preds = %133
  %135 = load i32, i32* %4, align 4
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %4, align 4
  br label %109

137:                                              ; preds = %109
  %138 = load i32, i32* %2, align 4
  %139 = icmp ne i32 %138, 0
  br i1 %139, label %143, label %140

140:                                              ; preds = %137
  %141 = load double, double* %3, align 8
  %142 = call i32 @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0), double %141)
  br label %143

143:                                              ; preds = %140, %137
  ret void
}

declare dso_local i32 @printf(i8*, double) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
