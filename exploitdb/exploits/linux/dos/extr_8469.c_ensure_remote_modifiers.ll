; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_8469.c_ensure_remote_modifiers.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_8469.c_ensure_remote_modifiers.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_3__ = type { i32, i32 }

@MapShiftMask = common dso_local global i32 0, align 4
@remote_modifier_state = common dso_local global i32 0, align 4
@MapLeftShiftMask = common dso_local global i32 0, align 4
@RDP_KEYPRESS = common dso_local global i32 0, align 4
@MapRightShiftMask = common dso_local global i32 0, align 4
@RDP_KEYRELEASE = common dso_local global i32 0, align 4
@MapAltGrMask = common dso_local global i32 0, align 4
@MapNumLockMask = common dso_local global i32 0, align 4
@KBD_FLAG_NUMLOCK = common dso_local global i32 0, align 4
@RDP_INPUT_SYNCHRONIZE = common dso_local global i32 0, align 4
@True = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ensure_remote_modifiers(i32 %0, i64 %1) #0 {
  %3 = alloca %struct.TYPE_3__, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = bitcast %struct.TYPE_3__* %3 to i64*
  store i64 %1, i64* %6, align 4
  store i32 %0, i32* %4, align 4
  %7 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %3, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %10 [
    i32 134, label %9
    i32 129, label %9
    i32 135, label %9
    i32 130, label %9
    i32 136, label %9
    i32 131, label %9
    i32 133, label %9
    i32 128, label %9
    i32 132, label %9
  ]

9:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2
  br label %106

10:                                               ; preds = %2
  br label %11

11:                                               ; preds = %10
  %12 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %3, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = load i32, i32* @MapShiftMask, align 4
  %15 = call i64 @MASK_HAS_BITS(i32 %13, i32 %14)
  %16 = load i32, i32* @remote_modifier_state, align 4
  %17 = load i32, i32* @MapShiftMask, align 4
  %18 = call i64 @MASK_HAS_BITS(i32 %16, i32 %17)
  %19 = icmp ne i64 %15, %18
  br i1 %19, label %20, label %56

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %3, i32 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = load i32, i32* @MapLeftShiftMask, align 4
  %24 = call i64 @MASK_HAS_BITS(i32 %22, i32 %23)
  %25 = icmp ne i64 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %20
  %27 = load i32, i32* %4, align 4
  %28 = load i32, i32* @RDP_KEYPRESS, align 4
  %29 = call i32 @rdp_send_scancode(i32 %27, i32 %28, i32 134)
  br label %55

30:                                               ; preds = %20
  %31 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %3, i32 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = load i32, i32* @MapRightShiftMask, align 4
  %34 = call i64 @MASK_HAS_BITS(i32 %32, i32 %33)
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %30
  %37 = load i32, i32* %4, align 4
  %38 = load i32, i32* @RDP_KEYPRESS, align 4
  %39 = call i32 @rdp_send_scancode(i32 %37, i32 %38, i32 129)
  br label %54

40:                                               ; preds = %30
  %41 = load i32, i32* @remote_modifier_state, align 4
  %42 = load i32, i32* @MapLeftShiftMask, align 4
  %43 = call i64 @MASK_HAS_BITS(i32 %41, i32 %42)
  %44 = icmp ne i64 %43, 0
  br i1 %44, label %45, label %49

45:                                               ; preds = %40
  %46 = load i32, i32* %4, align 4
  %47 = load i32, i32* @RDP_KEYRELEASE, align 4
  %48 = call i32 @rdp_send_scancode(i32 %46, i32 %47, i32 134)
  br label %53

49:                                               ; preds = %40
  %50 = load i32, i32* %4, align 4
  %51 = load i32, i32* @RDP_KEYRELEASE, align 4
  %52 = call i32 @rdp_send_scancode(i32 %50, i32 %51, i32 129)
  br label %53

53:                                               ; preds = %49, %45
  br label %54

54:                                               ; preds = %53, %36
  br label %55

55:                                               ; preds = %54, %26
  br label %56

56:                                               ; preds = %55, %11
  %57 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %3, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = load i32, i32* @MapAltGrMask, align 4
  %60 = call i64 @MASK_HAS_BITS(i32 %58, i32 %59)
  %61 = load i32, i32* @remote_modifier_state, align 4
  %62 = load i32, i32* @MapAltGrMask, align 4
  %63 = call i64 @MASK_HAS_BITS(i32 %61, i32 %62)
  %64 = icmp ne i64 %60, %63
  br i1 %64, label %65, label %80

65:                                               ; preds = %56
  %66 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %3, i32 0, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = load i32, i32* @MapAltGrMask, align 4
  %69 = call i64 @MASK_HAS_BITS(i32 %67, i32 %68)
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %71, label %75

71:                                               ; preds = %65
  %72 = load i32, i32* %4, align 4
  %73 = load i32, i32* @RDP_KEYPRESS, align 4
  %74 = call i32 @rdp_send_scancode(i32 %72, i32 %73, i32 131)
  br label %79

75:                                               ; preds = %65
  %76 = load i32, i32* %4, align 4
  %77 = load i32, i32* @RDP_KEYRELEASE, align 4
  %78 = call i32 @rdp_send_scancode(i32 %76, i32 %77, i32 131)
  br label %79

79:                                               ; preds = %75, %71
  br label %80

80:                                               ; preds = %79, %56
  %81 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %3, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = load i32, i32* @MapNumLockMask, align 4
  %84 = call i64 @MASK_HAS_BITS(i32 %82, i32 %83)
  %85 = load i32, i32* @remote_modifier_state, align 4
  %86 = load i32, i32* @MapNumLockMask, align 4
  %87 = call i64 @MASK_HAS_BITS(i32 %85, i32 %86)
  %88 = icmp ne i64 %84, %87
  br i1 %88, label %89, label %106

89:                                               ; preds = %80
  store i32 0, i32* %5, align 4
  %90 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %3, i32 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = load i32, i32* @MapNumLockMask, align 4
  %93 = call i64 @MASK_HAS_BITS(i32 %91, i32 %92)
  %94 = icmp ne i64 %93, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %89
  %96 = load i32, i32* @KBD_FLAG_NUMLOCK, align 4
  %97 = load i32, i32* %5, align 4
  %98 = or i32 %97, %96
  store i32 %98, i32* %5, align 4
  br label %100

99:                                               ; preds = %89
  br label %100

100:                                              ; preds = %99, %95
  %101 = load i32, i32* @RDP_INPUT_SYNCHRONIZE, align 4
  %102 = load i32, i32* %5, align 4
  %103 = call i32 @rdp_send_input(i32 0, i32 %101, i32 0, i32 %102, i32 0)
  %104 = load i32, i32* @True, align 4
  %105 = call i32 @update_modifier_state(i32 132, i32 %104)
  br label %106

106:                                              ; preds = %9, %100, %80
  ret void
}

declare dso_local i64 @MASK_HAS_BITS(i32, i32) #1

declare dso_local i32 @rdp_send_scancode(i32, i32, i32) #1

declare dso_local i32 @rdp_send_input(i32, i32, i32, i32, i32) #1

declare dso_local i32 @update_modifier_state(i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
