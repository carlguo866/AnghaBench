; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_47236.c_get_scan_seq.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_47236.c_get_scan_seq.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@sched_fd = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [11 x i8] c"read sched\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"numa_scan_seq\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"no numa_scan_seq\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"0123456789\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_scan_seq() #0 {
  %1 = alloca [4096 x i8], align 16
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = load i32, i32* @sched_fd, align 4
  %5 = getelementptr inbounds [4096 x i8], [4096 x i8]* %1, i64 0, i64 0
  %6 = call i32 @pread(i32 %4, i8* %5, i32 4095, i32 0)
  store i32 %6, i32* %2, align 4
  %7 = load i32, i32* %2, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %11

9:                                                ; preds = %0
  %10 = call i32 @err(i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0))
  br label %11

11:                                               ; preds = %9, %0
  %12 = load i32, i32* %2, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds [4096 x i8], [4096 x i8]* %1, i64 0, i64 %13
  store i8 0, i8* %14, align 1
  %15 = getelementptr inbounds [4096 x i8], [4096 x i8]* %1, i64 0, i64 0
  %16 = call i8* @strstr(i8* %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0))
  store i8* %16, i8** %3, align 8
  %17 = load i8*, i8** %3, align 8
  %18 = icmp ne i8* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %11
  %20 = call i32 @errx(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0))
  br label %21

21:                                               ; preds = %19, %11
  %22 = load i8*, i8** %3, align 8
  %23 = call i8* @strchrnul(i8* %22, i8 signext 10)
  store i8 0, i8* %23, align 1
  %24 = load i8*, i8** %3, align 8
  %25 = call i8* @strpbrk(i8* %24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0))
  store i8* %25, i8** %3, align 8
  %26 = load i8*, i8** %3, align 8
  %27 = icmp ne i8* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %21
  %29 = call i32 @errx(i32 1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0))
  br label %30

30:                                               ; preds = %28, %21
  %31 = load i8*, i8** %3, align 8
  %32 = call i32 @atoi(i8* %31)
  ret i32 %32
}

declare dso_local i32 @pread(i32, i8*, i32, i32) #1

declare dso_local i32 @err(i32, i8*) #1

declare dso_local i8* @strstr(i8*, i8*) #1

declare dso_local i32 @errx(i32, i8*) #1

declare dso_local i8* @strchrnul(i8*, i8 signext) #1

declare dso_local i8* @strpbrk(i8*, i8*) #1

declare dso_local i32 @atoi(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
