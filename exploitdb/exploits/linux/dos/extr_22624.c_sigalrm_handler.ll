; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_22624.c_sigalrm_handler.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_22624.c_sigalrm_handler.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [21 x i8] c"\0A -- send() timeout\0A\00", align 1
@sockfd = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [30 x i8] c" -- reconnecting to %s:%d ..\0A\00", align 1
@host = common dso_local global i8* null, align 8
@orig_port = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [35 x i8] c"unable to connect, DoS successful?\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c" -- attacking!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @sigalrm_handler() #0 {
  %1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0))
  %2 = load i32, i32* @sockfd, align 4
  %3 = call i32 @close(i32 %2)
  %4 = load i8*, i8** @host, align 8
  %5 = load i32, i32* @orig_port, align 4
  %6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* %4, i32 %5)
  %7 = load i8*, i8** @host, align 8
  %8 = load i32, i32* @orig_port, align 4
  %9 = call i32 @sockconnect(i8* %7, i32 %8)
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %11, label %13

11:                                               ; preds = %0
  %12 = call i32 @die(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0))
  br label %13

13:                                               ; preds = %11, %0
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (...) @sockattack()
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @sockconnect(i8*, i32) #1

declare dso_local i32 @die(i8*) #1

declare dso_local i32 @sockattack(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
