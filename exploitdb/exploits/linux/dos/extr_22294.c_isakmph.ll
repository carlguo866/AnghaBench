; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_22294.c_isakmph.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_22294.c_isakmph.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.isakmphdr = type { i32*, i32*, i32*, i32, i32, i32, i32 }

@ISAKMPHEAD_SIZE = common dso_local global i64 0, align 8
@ISAKMPGEN_SIZE = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %struct.isakmphdr* @isakmph() #0 {
  %1 = alloca %struct.isakmphdr*, align 8
  %2 = alloca %struct.isakmphdr*, align 8
  %3 = alloca i32, align 4
  %4 = load i64, i64* @ISAKMPHEAD_SIZE, align 8
  %5 = call %struct.isakmphdr* @malloc(i64 %4)
  store %struct.isakmphdr* %5, %struct.isakmphdr** %2, align 8
  %6 = load %struct.isakmphdr*, %struct.isakmphdr** %2, align 8
  %7 = load i64, i64* @ISAKMPHEAD_SIZE, align 8
  %8 = call i32 @bzero(%struct.isakmphdr* %6, i64 %7)
  store i32 0, i32* %3, align 4
  br label %9

9:                                                ; preds = %29, %0
  %10 = load i32, i32* %3, align 4
  %11 = icmp slt i32 %10, 8
  br i1 %11, label %12, label %32

12:                                               ; preds = %9
  %13 = call i32 (...) @rand()
  %14 = srem i32 %13, 256
  %15 = load %struct.isakmphdr*, %struct.isakmphdr** %2, align 8
  %16 = getelementptr inbounds %struct.isakmphdr, %struct.isakmphdr* %15, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = load i32, i32* %3, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  store i32 %14, i32* %20, align 4
  %21 = call i32 (...) @rand()
  %22 = srem i32 %21, 256
  %23 = load %struct.isakmphdr*, %struct.isakmphdr** %2, align 8
  %24 = getelementptr inbounds %struct.isakmphdr, %struct.isakmphdr* %23, i32 0, i32 1
  %25 = load i32*, i32** %24, align 8
  %26 = load i32, i32* %3, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i32, i32* %25, i64 %27
  store i32 %22, i32* %28, align 4
  br label %29

29:                                               ; preds = %12
  %30 = load i32, i32* %3, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %3, align 4
  br label %9

32:                                               ; preds = %9
  store i32 0, i32* %3, align 4
  br label %33

33:                                               ; preds = %45, %32
  %34 = load i32, i32* %3, align 4
  %35 = icmp slt i32 %34, 4
  br i1 %35, label %36, label %48

36:                                               ; preds = %33
  %37 = call i32 (...) @rand()
  %38 = srem i32 %37, 256
  %39 = load %struct.isakmphdr*, %struct.isakmphdr** %2, align 8
  %40 = getelementptr inbounds %struct.isakmphdr, %struct.isakmphdr* %39, i32 0, i32 2
  %41 = load i32*, i32** %40, align 8
  %42 = load i32, i32* %3, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %41, i64 %43
  store i32 %38, i32* %44, align 4
  br label %45

45:                                               ; preds = %36
  %46 = load i32, i32* %3, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %3, align 4
  br label %33

48:                                               ; preds = %33
  %49 = load %struct.isakmphdr*, %struct.isakmphdr** %2, align 8
  %50 = getelementptr inbounds %struct.isakmphdr, %struct.isakmphdr* %49, i32 0, i32 3
  store i32 137, i32* %50, align 8
  %51 = load %struct.isakmphdr*, %struct.isakmphdr** %2, align 8
  %52 = getelementptr inbounds %struct.isakmphdr, %struct.isakmphdr* %51, i32 0, i32 4
  store i32 69, i32* %52, align 4
  %53 = load %struct.isakmphdr*, %struct.isakmphdr** %2, align 8
  %54 = getelementptr inbounds %struct.isakmphdr, %struct.isakmphdr* %53, i32 0, i32 5
  store i32 2, i32* %54, align 8
  %55 = load i64, i64* @ISAKMPHEAD_SIZE, align 8
  %56 = load i64, i64* @ISAKMPGEN_SIZE, align 8
  %57 = add nsw i64 %55, %56
  %58 = call i32 @htonl(i64 %57)
  %59 = load %struct.isakmphdr*, %struct.isakmphdr** %2, align 8
  %60 = getelementptr inbounds %struct.isakmphdr, %struct.isakmphdr* %59, i32 0, i32 6
  store i32 %58, i32* %60, align 4
  %61 = load %struct.isakmphdr*, %struct.isakmphdr** %1, align 8
  ret %struct.isakmphdr* %61
}

declare dso_local %struct.isakmphdr* @malloc(i64) #1

declare dso_local i32 @bzero(%struct.isakmphdr*, i64) #1

declare dso_local i32 @rand(...) #1

declare dso_local i32 @htonl(i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
