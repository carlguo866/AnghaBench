; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_4732.c_put_nmb_name.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux/dos/extr_4732.c_put_nmb_name.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.nmb_name = type { i8*, i8*, i32 }

@.str = private unnamed_addr constant [2 x i8] c"*\00", align 1
@MAX_NETBIOSNAME_LEN = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @put_nmb_name(i8* %0, i32 %1, %struct.nmb_name* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.nmb_name*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store %struct.nmb_name* %2, %struct.nmb_name** %6, align 8
  %11 = load %struct.nmb_name*, %struct.nmb_name** %6, align 8
  %12 = getelementptr inbounds %struct.nmb_name, %struct.nmb_name* %11, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = call i64 @strcmp(i8* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %22

16:                                               ; preds = %3
  %17 = load i32*, i32** %9, align 8
  %18 = load %struct.nmb_name*, %struct.nmb_name** %6, align 8
  %19 = getelementptr inbounds %struct.nmb_name, %struct.nmb_name* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = call i32 @put_name(i32* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8 signext 0, i32 %20)
  br label %31

22:                                               ; preds = %3
  %23 = load i32*, i32** %9, align 8
  %24 = load %struct.nmb_name*, %struct.nmb_name** %6, align 8
  %25 = getelementptr inbounds %struct.nmb_name, %struct.nmb_name* %24, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = load %struct.nmb_name*, %struct.nmb_name** %6, align 8
  %28 = getelementptr inbounds %struct.nmb_name, %struct.nmb_name* %27, i32 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = call i32 @put_name(i32* %23, i8* %26, i8 signext 32, i32 %29)
  br label %31

31:                                               ; preds = %22, %16
  %32 = load i8*, i8** %4, align 8
  %33 = load i32, i32* %5, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %32, i64 %34
  store i8 32, i8* %35, align 1
  store i32 34, i32* %7, align 4
  store i32 0, i32* %8, align 4
  br label %36

36:                                               ; preds = %74, %31
  %37 = load i32, i32* %8, align 4
  %38 = load i32, i32* @MAX_NETBIOSNAME_LEN, align 4
  %39 = icmp slt i32 %37, %38
  br i1 %39, label %40, label %77

40:                                               ; preds = %36
  %41 = load i32*, i32** %9, align 8
  %42 = load i32, i32* %8, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %41, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = ashr i32 %45, 4
  %47 = and i32 %46, 15
  %48 = add nsw i32 65, %47
  %49 = trunc i32 %48 to i8
  %50 = load i8*, i8** %4, align 8
  %51 = load i32, i32* %5, align 4
  %52 = add nsw i32 %51, 1
  %53 = load i32, i32* %8, align 4
  %54 = mul nsw i32 2, %53
  %55 = add nsw i32 %52, %54
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %50, i64 %56
  store i8 %49, i8* %57, align 1
  %58 = load i32*, i32** %9, align 8
  %59 = load i32, i32* %8, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i32, i32* %58, i64 %60
  %62 = load i32, i32* %61, align 4
  %63 = and i32 %62, 15
  %64 = add nsw i32 65, %63
  %65 = trunc i32 %64 to i8
  %66 = load i8*, i8** %4, align 8
  %67 = load i32, i32* %5, align 4
  %68 = add nsw i32 %67, 2
  %69 = load i32, i32* %8, align 4
  %70 = mul nsw i32 2, %69
  %71 = add nsw i32 %68, %70
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %66, i64 %72
  store i8 %65, i8* %73, align 1
  br label %74

74:                                               ; preds = %40
  %75 = load i32, i32* %8, align 4
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %8, align 4
  br label %36

77:                                               ; preds = %36
  %78 = load i32, i32* %5, align 4
  %79 = add nsw i32 %78, 33
  store i32 %79, i32* %5, align 4
  %80 = load i8*, i8** %4, align 8
  %81 = load i32, i32* %5, align 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8, i8* %80, i64 %82
  store i8 0, i8* %83, align 1
  %84 = load %struct.nmb_name*, %struct.nmb_name** %6, align 8
  %85 = getelementptr inbounds %struct.nmb_name, %struct.nmb_name* %84, i32 0, i32 1
  %86 = load i8*, i8** %85, align 8
  %87 = getelementptr inbounds i8, i8* %86, i64 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp ne i8 %88, 0
  br i1 %89, label %90, label %154

90:                                               ; preds = %77
  %91 = load %struct.nmb_name*, %struct.nmb_name** %6, align 8
  %92 = getelementptr inbounds %struct.nmb_name, %struct.nmb_name* %91, i32 0, i32 1
  %93 = load i8*, i8** %92, align 8
  %94 = call i32 @strlen(i8* %93)
  %95 = add nsw i32 %94, 1
  %96 = load i32, i32* %7, align 4
  %97 = add nsw i32 %96, %95
  store i32 %97, i32* %7, align 4
  %98 = load i8*, i8** %4, align 8
  %99 = load i32, i32* %5, align 4
  %100 = add nsw i32 %99, 1
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds i8, i8* %98, i64 %101
  %103 = load %struct.nmb_name*, %struct.nmb_name** %6, align 8
  %104 = getelementptr inbounds %struct.nmb_name, %struct.nmb_name* %103, i32 0, i32 1
  %105 = load i8*, i8** %104, align 8
  %106 = call i32 @safe_strcpy(i8* %102, i8* %105, i32 8)
  %107 = load i8*, i8** %4, align 8
  %108 = load i32, i32* %5, align 4
  %109 = add nsw i32 %108, 1
  %110 = sext i32 %109 to i64
  %111 = getelementptr inbounds i8, i8* %107, i64 %110
  store i8* %111, i8** %10, align 8
  br label %112

112:                                              ; preds = %116, %90
  %113 = load i8*, i8** %10, align 8
  %114 = call i8* @strchr(i8* %113, i8 signext 46)
  store i8* %114, i8** %10, align 8
  %115 = icmp ne i8* %114, null
  br i1 %115, label %116, label %142

116:                                              ; preds = %112
  %117 = load i8*, i8** %10, align 8
  %118 = load i8*, i8** %4, align 8
  %119 = load i32, i32* %5, align 4
  %120 = add nsw i32 %119, 1
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8, i8* %118, i64 %121
  %123 = call signext i8 @PTR_DIFF(i8* %117, i8* %122)
  %124 = load i8*, i8** %4, align 8
  %125 = load i32, i32* %5, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %124, i64 %126
  store i8 %123, i8* %127, align 1
  %128 = load i8*, i8** %4, align 8
  %129 = load i32, i32* %5, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i8, i8* %128, i64 %130
  %132 = load i8, i8* %131, align 1
  %133 = sext i8 %132 to i32
  %134 = add nsw i32 %133, 1
  %135 = load i32, i32* %5, align 4
  %136 = add nsw i32 %135, %134
  store i32 %136, i32* %5, align 4
  %137 = load i8*, i8** %4, align 8
  %138 = load i32, i32* %5, align 4
  %139 = add nsw i32 %138, 1
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8, i8* %137, i64 %140
  store i8* %141, i8** %10, align 8
  br label %112

142:                                              ; preds = %112
  %143 = load i8*, i8** %4, align 8
  %144 = load i32, i32* %5, align 4
  %145 = add nsw i32 %144, 1
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds i8, i8* %143, i64 %146
  %148 = call i32 @strlen(i8* %147)
  %149 = trunc i32 %148 to i8
  %150 = load i8*, i8** %4, align 8
  %151 = load i32, i32* %5, align 4
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds i8, i8* %150, i64 %152
  store i8 %149, i8* %153, align 1
  br label %154

154:                                              ; preds = %142, %77
  %155 = load i32, i32* %7, align 4
  ret i32 %155
}

declare dso_local i64 @strcmp(i8*, i8*) #1

declare dso_local i32 @put_name(i32*, i8*, i8 signext, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @safe_strcpy(i8*, i8*, i32) #1

declare dso_local i8* @strchr(i8*, i8 signext) #1

declare dso_local signext i8 @PTR_DIFF(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
