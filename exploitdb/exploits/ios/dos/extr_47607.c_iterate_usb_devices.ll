; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/ios/dos/extr_47607.c_iterate_usb_devices.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/ios/dos/extr_47607.c_iterate_usb_devices.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@kIOUSBDeviceClassName = common dso_local global i32 0, align 4
@kIOMasterPortDefault = common dso_local global i32 0, align 4
@KERN_SUCCESS = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [41 x i8] c"Skipping device as it has no vid / pid.\0A\00", align 1
@.str.1 = private unnamed_addr constant [57 x i8] c"Skipping device as no handle for it could be retrieved.\0A\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"RET: %s\0A\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (i8*)* @iterate_usb_devices to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @iterate_usb_devices(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32**, align 8
  store i8* %0, i8** %3, align 8
  %9 = load i32, i32* @kIOUSBDeviceClassName, align 4
  %10 = call i32* @IOServiceMatching(i32 %9)
  store i32* %10, i32** %4, align 8
  %11 = load i32*, i32** %4, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %1
  store i32 -1, i32* %2, align 4
  br label %55

14:                                               ; preds = %1
  %15 = load i32, i32* @kIOMasterPortDefault, align 4
  %16 = load i32*, i32** %4, align 8
  %17 = call i64 @IOServiceGetMatchingServices(i32 %15, i32* %16, i32* %5)
  store i64 %17, i64* %6, align 8
  %18 = load i64, i64* %6, align 8
  %19 = load i64, i64* @KERN_SUCCESS, align 8
  %20 = icmp ne i64 %18, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %14
  store i32 -1, i32* %2, align 4
  br label %55

22:                                               ; preds = %14
  br label %23

23:                                               ; preds = %43, %41, %33, %22
  %24 = load i32, i32* %5, align 4
  %25 = call i32 @IOIteratorNext(i32 %24)
  store i32 %25, i32* %7, align 4
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %52

27:                                               ; preds = %23
  %28 = load i32, i32* %7, align 4
  %29 = call i64 @print_usb_device(i32 %28)
  store i64 %29, i64* %6, align 8
  %30 = load i64, i64* %6, align 8
  %31 = load i64, i64* @KERN_SUCCESS, align 8
  %32 = icmp ne i64 %30, %31
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0))
  br label %23

35:                                               ; preds = %27
  store i32** null, i32*** %8, align 8
  %36 = load i32, i32* %7, align 4
  %37 = call i64 @get_usbdevice_handle(i32 %36, i32*** %8)
  store i64 %37, i64* %6, align 8
  %38 = load i64, i64* %6, align 8
  %39 = load i64, i64* @KERN_SUCCESS, align 8
  %40 = icmp ne i64 %38, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %35
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0))
  br label %23

43:                                               ; preds = %35
  %44 = load i32**, i32*** %8, align 8
  %45 = load i8*, i8** %3, align 8
  %46 = call i64 @send_usbusted_pwn_msg(i32** %44, i8* %45)
  store i64 %46, i64* %6, align 8
  %47 = load i64, i64* %6, align 8
  %48 = call i8* @mach_error_string(i64 %47)
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8* %48)
  %50 = load i32, i32* %7, align 4
  %51 = call i32 @IOObjectRelease(i32 %50)
  br label %23

52:                                               ; preds = %23
  %53 = load i32, i32* %5, align 4
  %54 = call i32 @IOObjectRelease(i32 %53)
  store i32 0, i32* %2, align 4
  br label %55

55:                                               ; preds = %52, %21, %13
  %56 = load i32, i32* %2, align 4
  ret i32 %56
}

declare dso_local i32* @IOServiceMatching(i32) #1

declare dso_local i64 @IOServiceGetMatchingServices(i32, i32*, i32*) #1

declare dso_local i32 @IOIteratorNext(i32) #1

declare dso_local i64 @print_usb_device(i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @get_usbdevice_handle(i32, i32***) #1

declare dso_local i64 @send_usbusted_pwn_msg(i32**, i8*) #1

declare dso_local i8* @mach_error_string(i64) #1

declare dso_local i32 @IOObjectRelease(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
