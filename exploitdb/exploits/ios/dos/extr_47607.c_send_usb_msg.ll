; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/ios/dos/extr_47607.c_send_usb_msg.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/ios/dos/extr_47607.c_send_usb_msg.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_6__ = type { i64 (%struct.TYPE_6__**, %struct.TYPE_7__*)* }
%struct.TYPE_7__ = type { i32, i32, i32, i32, i8*, i64, i32 }

@.str = private unnamed_addr constant [25 x i8] c"No device handle given.\0A\00", align 1
@KERN_FAILURE = common dso_local global i32 0, align 4
@defaultMsg = common dso_local global i8* null, align 8
@KERN_SUCCESS = common dso_local global i64 0, align 8
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (%struct.TYPE_6__**, i32, i32, i32, i32, i8*)* @send_usb_msg to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @send_usb_msg(%struct.TYPE_6__** %0, i32 %1, i32 %2, i32 %3, i32 %4, i8* %5) #0 {
  %7 = alloca i32, align 4
  %8 = alloca %struct.TYPE_6__**, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca %struct.TYPE_7__, align 8
  %15 = alloca i64, align 8
  store %struct.TYPE_6__** %0, %struct.TYPE_6__*** %8, align 8
  store i32 %1, i32* %9, align 4
  store i32 %2, i32* %10, align 4
  store i32 %3, i32* %11, align 4
  store i32 %4, i32* %12, align 4
  store i8* %5, i8** %13, align 8
  %16 = load %struct.TYPE_6__**, %struct.TYPE_6__*** %8, align 8
  %17 = icmp ne %struct.TYPE_6__** %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %6
  %19 = call i32 @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0))
  %20 = load i32, i32* @KERN_FAILURE, align 4
  store i32 %20, i32* %7, align 4
  br label %57

21:                                               ; preds = %6
  %22 = load i8*, i8** %13, align 8
  %23 = icmp ne i8* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = load i8*, i8** @defaultMsg, align 8
  store i8* %25, i8** %13, align 8
  br label %26

26:                                               ; preds = %24, %21
  %27 = load i32, i32* %9, align 4
  %28 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %14, i32 0, i32 0
  store i32 %27, i32* %28, align 8
  %29 = load i32, i32* %10, align 4
  %30 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %14, i32 0, i32 1
  store i32 %29, i32* %30, align 4
  %31 = load i32, i32* %11, align 4
  %32 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %14, i32 0, i32 2
  store i32 %31, i32* %32, align 8
  %33 = load i32, i32* %12, align 4
  %34 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %14, i32 0, i32 3
  store i32 %33, i32* %34, align 4
  %35 = load i8*, i8** %13, align 8
  %36 = call i32 @strlen(i8* %35)
  %37 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %14, i32 0, i32 6
  store i32 %36, i32* %37, align 8
  %38 = load i8*, i8** %13, align 8
  %39 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %14, i32 0, i32 4
  store i8* %38, i8** %39, align 8
  %40 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %14, i32 0, i32 5
  store i64 0, i64* %40, align 8
  %41 = load i64, i64* @KERN_SUCCESS, align 8
  store i64 %41, i64* %15, align 8
  %42 = load %struct.TYPE_6__**, %struct.TYPE_6__*** %8, align 8
  %43 = load %struct.TYPE_6__*, %struct.TYPE_6__** %42, align 8
  %44 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %43, i32 0, i32 0
  %45 = load i64 (%struct.TYPE_6__**, %struct.TYPE_7__*)*, i64 (%struct.TYPE_6__**, %struct.TYPE_7__*)** %44, align 8
  %46 = load %struct.TYPE_6__**, %struct.TYPE_6__*** %8, align 8
  %47 = call i64 %45(%struct.TYPE_6__** %46, %struct.TYPE_7__* %14)
  store i64 %47, i64* %15, align 8
  %48 = load i64, i64* %15, align 8
  %49 = load i64, i64* @KERN_SUCCESS, align 8
  %50 = icmp ne i64 %48, %49
  br i1 %50, label %51, label %54

51:                                               ; preds = %26
  %52 = load i64, i64* %15, align 8
  %53 = trunc i64 %52 to i32
  store i32 %53, i32* %7, align 4
  br label %57

54:                                               ; preds = %26
  %55 = load i64, i64* @KERN_SUCCESS, align 8
  %56 = trunc i64 %55 to i32
  store i32 %56, i32* %7, align 4
  br label %57

57:                                               ; preds = %54, %51, %18
  %58 = load i32, i32* %7, align 4
  ret i32 %58
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @strlen(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
