; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_432.c_get_format_vector.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_432.c_get_format_vector.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@JUNK = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32* @get_format_vector(i64 %0, i64 %1, i64 %2) #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 8
  store i64 %0, i64* %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %12 = call i64 @malloc(i32 44)
  %13 = inttoptr i64 %12 to i32*
  store i32* %13, i32** %11, align 8
  %14 = load i32, i32* @JUNK, align 4
  store i32 %14, i32* %9, align 4
  store i32 0, i32* %7, align 4
  br label %15

15:                                               ; preds = %137, %3
  %16 = load i32, i32* %7, align 4
  %17 = icmp slt i32 %16, 2
  br i1 %17, label %18, label %140

18:                                               ; preds = %15
  store i32 0, i32* %8, align 4
  br label %19

19:                                               ; preds = %133, %18
  %20 = load i32, i32* %8, align 4
  %21 = icmp slt i32 %20, 2
  br i1 %21, label %22, label %136

22:                                               ; preds = %19
  %23 = load i64, i64* %4, align 8
  %24 = and i64 %23, 65535
  %25 = load i32, i32* %9, align 4
  %26 = sext i32 %25 to i64
  %27 = sub i64 %24, %26
  %28 = trunc i64 %27 to i32
  %29 = load i32*, i32** %11, align 8
  %30 = load i32, i32* %7, align 4
  %31 = mul nsw i32 2, %30
  %32 = load i32, i32* %8, align 4
  %33 = add nsw i32 %31, %32
  %34 = mul nsw i32 2, %33
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i32, i32* %29, i64 %35
  store i32 %28, i32* %36, align 4
  br label %37

37:                                               ; preds = %48, %22
  %38 = load i32*, i32** %11, align 8
  %39 = load i32, i32* %7, align 4
  %40 = mul nsw i32 2, %39
  %41 = load i32, i32* %8, align 4
  %42 = add nsw i32 %40, %41
  %43 = mul nsw i32 2, %42
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %38, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = icmp sle i32 %46, 12
  br i1 %47, label %48, label %59

48:                                               ; preds = %37
  %49 = load i32*, i32** %11, align 8
  %50 = load i32, i32* %7, align 4
  %51 = mul nsw i32 2, %50
  %52 = load i32, i32* %8, align 4
  %53 = add nsw i32 %51, %52
  %54 = mul nsw i32 2, %53
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* %49, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = add nsw i32 %57, 65536
  store i32 %58, i32* %56, align 4
  br label %37

59:                                               ; preds = %37
  %60 = load i32*, i32** %11, align 8
  %61 = load i32, i32* %7, align 4
  %62 = mul nsw i32 2, %61
  %63 = load i32, i32* %8, align 4
  %64 = add nsw i32 %62, %63
  %65 = mul nsw i32 2, %64
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i32, i32* %60, i64 %66
  %68 = load i32, i32* %67, align 4
  %69 = load i32, i32* %9, align 4
  %70 = add nsw i32 %69, %68
  store i32 %70, i32* %9, align 4
  %71 = load i64, i64* %5, align 8
  %72 = load i32, i32* %7, align 4
  %73 = mul nsw i32 2, %72
  %74 = sext i32 %73 to i64
  %75 = add i64 %71, %74
  %76 = load i32, i32* %8, align 4
  %77 = mul nsw i32 16, %76
  %78 = zext i32 %77 to i64
  %79 = lshr i64 %75, %78
  %80 = and i64 %79, 65535
  %81 = trunc i64 %80 to i32
  store i32 %81, i32* %10, align 4
  %82 = load i32, i32* %10, align 4
  %83 = load i32, i32* %9, align 4
  %84 = sub nsw i32 %82, %83
  %85 = load i32*, i32** %11, align 8
  %86 = load i32, i32* %7, align 4
  %87 = mul nsw i32 2, %86
  %88 = load i32, i32* %8, align 4
  %89 = add nsw i32 %87, %88
  %90 = mul nsw i32 2, %89
  %91 = add nsw i32 %90, 1
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i32, i32* %85, i64 %92
  store i32 %84, i32* %93, align 4
  br label %94

94:                                               ; preds = %106, %59
  %95 = load i32*, i32** %11, align 8
  %96 = load i32, i32* %7, align 4
  %97 = mul nsw i32 2, %96
  %98 = load i32, i32* %8, align 4
  %99 = add nsw i32 %97, %98
  %100 = mul nsw i32 2, %99
  %101 = add nsw i32 %100, 1
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i32, i32* %95, i64 %102
  %104 = load i32, i32* %103, align 4
  %105 = icmp sle i32 %104, 12
  br i1 %105, label %106, label %118

106:                                              ; preds = %94
  %107 = load i32*, i32** %11, align 8
  %108 = load i32, i32* %7, align 4
  %109 = mul nsw i32 2, %108
  %110 = load i32, i32* %8, align 4
  %111 = add nsw i32 %109, %110
  %112 = mul nsw i32 2, %111
  %113 = add nsw i32 %112, 1
  %114 = sext i32 %113 to i64
  %115 = getelementptr inbounds i32, i32* %107, i64 %114
  %116 = load i32, i32* %115, align 4
  %117 = add nsw i32 %116, 65536
  store i32 %117, i32* %115, align 4
  br label %94

118:                                              ; preds = %94
  %119 = load i32*, i32** %11, align 8
  %120 = load i32, i32* %7, align 4
  %121 = mul nsw i32 2, %120
  %122 = load i32, i32* %8, align 4
  %123 = add nsw i32 %121, %122
  %124 = mul nsw i32 2, %123
  %125 = add nsw i32 %124, 1
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i32, i32* %119, i64 %126
  %128 = load i32, i32* %127, align 4
  %129 = load i32, i32* %9, align 4
  %130 = add nsw i32 %129, %128
  store i32 %130, i32* %9, align 4
  %131 = load i64, i64* %4, align 8
  %132 = add i64 %131, 2
  store i64 %132, i64* %4, align 8
  br label %133

133:                                              ; preds = %118
  %134 = load i32, i32* %8, align 4
  %135 = add nsw i32 %134, 1
  store i32 %135, i32* %8, align 4
  br label %19

136:                                              ; preds = %19
  br label %137

137:                                              ; preds = %136
  %138 = load i32, i32* %7, align 4
  %139 = add nsw i32 %138, 1
  store i32 %139, i32* %7, align 4
  br label %15

140:                                              ; preds = %15
  store i32 0, i32* %7, align 4
  br label %141

141:                                              ; preds = %185, %140
  %142 = load i32, i32* %7, align 4
  %143 = icmp slt i32 %142, 2
  br i1 %143, label %144, label %188

144:                                              ; preds = %141
  %145 = load i64, i64* %6, align 8
  %146 = load i32, i32* %7, align 4
  %147 = mul nsw i32 16, %146
  %148 = zext i32 %147 to i64
  %149 = lshr i64 %145, %148
  %150 = and i64 %149, 65535
  %151 = trunc i64 %150 to i32
  store i32 %151, i32* %10, align 4
  %152 = load i32, i32* %10, align 4
  %153 = load i32, i32* %9, align 4
  %154 = sub nsw i32 %152, %153
  %155 = load i32*, i32** %11, align 8
  %156 = load i32, i32* %7, align 4
  %157 = add nsw i32 8, %156
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i32, i32* %155, i64 %158
  store i32 %154, i32* %159, align 4
  br label %160

160:                                              ; preds = %168, %144
  %161 = load i32*, i32** %11, align 8
  %162 = load i32, i32* %7, align 4
  %163 = add nsw i32 8, %162
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i32, i32* %161, i64 %164
  %166 = load i32, i32* %165, align 4
  %167 = icmp sle i32 %166, 12
  br i1 %167, label %168, label %176

168:                                              ; preds = %160
  %169 = load i32*, i32** %11, align 8
  %170 = load i32, i32* %7, align 4
  %171 = add nsw i32 8, %170
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds i32, i32* %169, i64 %172
  %174 = load i32, i32* %173, align 4
  %175 = add nsw i32 %174, 65536
  store i32 %175, i32* %173, align 4
  br label %160

176:                                              ; preds = %160
  %177 = load i32*, i32** %11, align 8
  %178 = load i32, i32* %7, align 4
  %179 = add nsw i32 8, %178
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i32, i32* %177, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = load i32, i32* %9, align 4
  %184 = add nsw i32 %183, %182
  store i32 %184, i32* %9, align 4
  br label %185

185:                                              ; preds = %176
  %186 = load i32, i32* %7, align 4
  %187 = add nsw i32 %186, 1
  store i32 %187, i32* %7, align 4
  br label %141

188:                                              ; preds = %141
  %189 = load i32*, i32** %11, align 8
  ret i32* %189
}

declare dso_local i64 @malloc(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
