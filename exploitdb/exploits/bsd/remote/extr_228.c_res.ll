; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_228.c_res.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_228.c_res.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i32, i32, i32 }
%struct.hostent = type { i32* }

@AF_INET = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @res(i8* %0, %struct.sockaddr_in* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca %struct.sockaddr_in*, align 8
  %6 = alloca %struct.hostent*, align 8
  store i8* %0, i8** %4, align 8
  store %struct.sockaddr_in* %1, %struct.sockaddr_in** %5, align 8
  %7 = load %struct.sockaddr_in*, %struct.sockaddr_in** %5, align 8
  %8 = call i32 @bzero(%struct.sockaddr_in* %7, i32 12)
  %9 = load i32, i32* @AF_INET, align 4
  %10 = load %struct.sockaddr_in*, %struct.sockaddr_in** %5, align 8
  %11 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 2
  store i32 %9, i32* %11, align 4
  %12 = load %struct.sockaddr_in*, %struct.sockaddr_in** %5, align 8
  %13 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %12, i32 0, i32 0
  store i32 12, i32* %13, align 4
  %14 = load i8*, i8** %4, align 8
  %15 = load %struct.sockaddr_in*, %struct.sockaddr_in** %5, align 8
  %16 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %15, i32 0, i32 1
  %17 = call i32 @inet_aton(i8* %14, i32* %16)
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %35, label %19

19:                                               ; preds = %2
  %20 = load i8*, i8** %4, align 8
  %21 = load i32, i32* @AF_INET, align 4
  %22 = call %struct.hostent* @gethostbyname2(i8* %20, i32 %21)
  store %struct.hostent* %22, %struct.hostent** %6, align 8
  %23 = load %struct.hostent*, %struct.hostent** %6, align 8
  %24 = icmp ne %struct.hostent* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %19
  store i32 0, i32* %3, align 4
  br label %36

26:                                               ; preds = %19
  %27 = load %struct.sockaddr_in*, %struct.sockaddr_in** %5, align 8
  %28 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %27, i32 0, i32 1
  %29 = load %struct.hostent*, %struct.hostent** %6, align 8
  %30 = getelementptr inbounds %struct.hostent, %struct.hostent* %29, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds i32, i32* %31, i64 0
  %33 = load i32, i32* %32, align 4
  %34 = call i32 @memcpy(i32* %28, i32 %33, i32 4)
  br label %35

35:                                               ; preds = %26, %2
  store i32 1, i32* %3, align 4
  br label %36

36:                                               ; preds = %35, %25
  %37 = load i32, i32* %3, align 4
  ret i32 %37
}

declare dso_local i32 @bzero(%struct.sockaddr_in*, i32) #1

declare dso_local i32 @inet_aton(i8*, i32*) #1

declare dso_local %struct.hostent* @gethostbyname2(i8*, i32) #1

declare dso_local i32 @memcpy(i32*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
