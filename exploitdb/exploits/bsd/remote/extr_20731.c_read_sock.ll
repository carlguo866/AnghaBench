; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_20731.c_read_sock.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_20731.c_read_sock.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@debug_read = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [6 x i8] c" < %s\00", align 1
@stdout = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @read_sock(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca [8192 x i8], align 16
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  store i8* null, i8** %4, align 8
  store i32 0, i32* %6, align 4
  br label %7

7:                                                ; preds = %52, %1
  %8 = getelementptr inbounds [8192 x i8], [8192 x i8]* %3, i64 0, i64 0
  %9 = call i32 @memset(i8* %8, i32 0, i32 8192)
  %10 = load i32, i32* %2, align 4
  %11 = getelementptr inbounds [8192 x i8], [8192 x i8]* %3, i64 0, i64 0
  %12 = call i32 @sock_readline(i32 %10, i8* %11, i32 8191)
  store i32 %12, i32* %5, align 4
  %13 = load i8*, i8** %4, align 8
  %14 = load i32, i32* %6, align 4
  %15 = getelementptr inbounds [8192 x i8], [8192 x i8]* %3, i64 0, i64 0
  %16 = call i32 @strlen(i8* %15)
  %17 = add i32 %14, %16
  %18 = add i32 %17, 1
  %19 = zext i32 %18 to i64
  %20 = mul i64 %19, 1
  %21 = trunc i64 %20 to i32
  %22 = call i8* @Realloc(i8* %13, i32 %21)
  store i8* %22, i8** %4, align 8
  %23 = load i8*, i8** %4, align 8
  %24 = load i32, i32* %6, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %23, i64 %25
  %27 = getelementptr inbounds [8192 x i8], [8192 x i8]* %3, i64 0, i64 0
  %28 = getelementptr inbounds [8192 x i8], [8192 x i8]* %3, i64 0, i64 0
  %29 = call i32 @strlen(i8* %28)
  %30 = call i32 @memcpy(i8* %26, i8* %27, i32 %29)
  %31 = load i8*, i8** %4, align 8
  %32 = load i32, i32* %6, align 4
  %33 = getelementptr inbounds [8192 x i8], [8192 x i8]* %3, i64 0, i64 0
  %34 = call i32 @strlen(i8* %33)
  %35 = add i32 %32, %34
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %31, i64 %36
  store i8 0, i8* %37, align 1
  %38 = getelementptr inbounds [8192 x i8], [8192 x i8]* %3, i64 0, i64 0
  %39 = call i32 @strlen(i8* %38)
  %40 = load i32, i32* %6, align 4
  %41 = add i32 %40, %39
  store i32 %41, i32* %6, align 4
  %42 = getelementptr inbounds [8192 x i8], [8192 x i8]* %3, i64 0, i64 0
  %43 = call i32 @strlen(i8* %42)
  %44 = icmp slt i32 %43, 4
  br i1 %44, label %45, label %46

45:                                               ; preds = %7
  br label %53

46:                                               ; preds = %7
  %47 = getelementptr inbounds [8192 x i8], [8192 x i8]* %3, i64 0, i64 3
  %48 = load i8, i8* %47, align 1
  %49 = sext i8 %48 to i32
  %50 = icmp ne i32 %49, 45
  br i1 %50, label %51, label %52

51:                                               ; preds = %46
  br label %53

52:                                               ; preds = %46
  br label %7

53:                                               ; preds = %51, %45
  %54 = load i64, i64* @debug_read, align 8
  %55 = icmp ne i64 %54, 0
  br i1 %55, label %56, label %61

56:                                               ; preds = %53
  %57 = load i8*, i8** %4, align 8
  %58 = call i32 @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* %57)
  %59 = load i32, i32* @stdout, align 4
  %60 = call i32 @fflush(i32 %59)
  br label %61

61:                                               ; preds = %56, %53
  %62 = load i8*, i8** %4, align 8
  ret i8* %62
}

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @sock_readline(i32, i8*, i32) #1

declare dso_local i8* @Realloc(i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @printf(i8*, i8*) #1

declare dso_local i32 @fflush(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
