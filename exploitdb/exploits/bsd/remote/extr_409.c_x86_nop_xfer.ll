; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_409.c_x86_nop_xfer.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_409.c_x86_nop_xfer.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [19 x i8] c"on steroids, huh?\0A\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [28 x i8] c"invalid bitwalker: bw = %d\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @x86_nop_xfer(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  store i8* %0, i8** %2, align 8
  store i32 0, i32* %3, align 4
  store i8 0, i8* %4, align 1
  br label %5

5:                                                ; preds = %41, %1
  %6 = load i8*, i8** %2, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %8, label %14

8:                                                ; preds = %5
  %9 = load i8*, i8** %2, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 0
  %11 = load i8, i8* %10, align 1
  %12 = sext i8 %11 to i32
  %13 = icmp ne i32 %12, 0
  br label %14

14:                                               ; preds = %8, %5
  %15 = phi i1 [ false, %5 ], [ %13, %8 ]
  br i1 %15, label %16, label %44

16:                                               ; preds = %14
  %17 = load i8*, i8** %2, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = load i8, i8* %18, align 1
  %20 = sext i8 %19 to i32
  switch i32 %20, label %35 [
    i32 48, label %21
    i32 49, label %25
    i32 114, label %29
    i32 46, label %34
  ]

21:                                               ; preds = %16
  %22 = load i8, i8* %4, align 1
  %23 = load i32, i32* %3, align 4
  %24 = call i32 @BSET(i8 zeroext %22, i32 1, i32 0, i32 %23)
  br label %40

25:                                               ; preds = %16
  %26 = load i8, i8* %4, align 1
  %27 = load i32, i32* %3, align 4
  %28 = call i32 @BSET(i8 zeroext %26, i32 1, i32 1, i32 %27)
  br label %40

29:                                               ; preds = %16
  %30 = load i8, i8* %4, align 1
  %31 = call i32 (...) @x86_nop_rwreg()
  %32 = load i32, i32* %3, align 4
  %33 = call i32 @BSET(i8 zeroext %30, i32 3, i32 %31, i32 %32)
  br label %40

34:                                               ; preds = %16
  br label %40

35:                                               ; preds = %16
  %36 = load i32, i32* @stderr, align 4
  %37 = call i32 (i32, i8*, ...) @fprintf(i32 %36, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0))
  %38 = load i32, i32* @EXIT_FAILURE, align 4
  %39 = call i32 @exit(i32 %38) #3
  unreachable

40:                                               ; preds = %34, %29, %25, %21
  br label %41

41:                                               ; preds = %40
  %42 = load i8*, i8** %2, align 8
  %43 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %43, i8** %2, align 8
  br label %5

44:                                               ; preds = %14
  %45 = load i32, i32* %3, align 4
  %46 = icmp ne i32 %45, 8
  br i1 %46, label %47, label %53

47:                                               ; preds = %44
  %48 = load i32, i32* @stderr, align 4
  %49 = load i32, i32* %3, align 4
  %50 = call i32 (i32, i8*, ...) @fprintf(i32 %48, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i32 %49)
  %51 = load i32, i32* @EXIT_FAILURE, align 4
  %52 = call i32 @exit(i32 %51) #3
  unreachable

53:                                               ; preds = %44
  %54 = load i8, i8* %4, align 1
  %55 = zext i8 %54 to i64
  ret i64 %55
}

declare dso_local i32 @BSET(i8 zeroext, i32, i32, i32) #1

declare dso_local i32 @x86_nop_rwreg(...) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
