; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_234.c_shell.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_234.c_shell.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [45 x i8] c"echo ; echo ; echo HAVE FUN ; id ; uname -a\0A\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"read\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @shell(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [1 x i8], align 1
  %5 = alloca i8*, align 8
  store i32 %0, i32* %2, align 4
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i8** %5, align 8
  %6 = load i32, i32* %2, align 4
  %7 = load i8*, i8** %5, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = call i32 @strlen(i8* %8)
  %10 = call i32 @write(i32 %6, i8* %7, i32 %9)
  br label %11

11:                                               ; preds = %1, %47
  %12 = call i32 @FD_ZERO(i32* %3)
  %13 = call i32 @FD_SET(i32 0, i32* %3)
  %14 = load i32, i32* %2, align 4
  %15 = call i32 @FD_SET(i32 %14, i32* %3)
  %16 = load i32, i32* %2, align 4
  %17 = add nsw i32 %16, 1
  %18 = call i32 @select(i32 %17, i32* %3, i32* null, i32* null, i32* null)
  %19 = call i64 @FD_ISSET(i32 0, i32* %3)
  %20 = icmp ne i64 %19, 0
  br i1 %20, label %21, label %32

21:                                               ; preds = %11
  %22 = getelementptr inbounds [1 x i8], [1 x i8]* %4, i64 0, i64 0
  %23 = call i32 @read(i32 0, i8* %22, i32 1)
  %24 = icmp ne i32 %23, 1
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = call i32 @perror(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  %27 = call i32 @exit(i32 1) #3
  unreachable

28:                                               ; preds = %21
  %29 = load i32, i32* %2, align 4
  %30 = getelementptr inbounds [1 x i8], [1 x i8]* %4, i64 0, i64 0
  %31 = call i32 @write(i32 %29, i8* %30, i32 1)
  br label %32

32:                                               ; preds = %28, %11
  %33 = load i32, i32* %2, align 4
  %34 = call i64 @FD_ISSET(i32 %33, i32* %3)
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %36, label %47

36:                                               ; preds = %32
  %37 = load i32, i32* %2, align 4
  %38 = getelementptr inbounds [1 x i8], [1 x i8]* %4, i64 0, i64 0
  %39 = call i32 @read(i32 %37, i8* %38, i32 1)
  %40 = icmp ne i32 %39, 1
  br i1 %40, label %41, label %44

41:                                               ; preds = %36
  %42 = call i32 @perror(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  %43 = call i32 @exit(i32 1) #3
  unreachable

44:                                               ; preds = %36
  %45 = getelementptr inbounds [1 x i8], [1 x i8]* %4, i64 0, i64 0
  %46 = call i32 @write(i32 1, i8* %45, i32 1)
  br label %47

47:                                               ; preds = %44, %32
  br label %11
}

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i32 @select(i32, i32*, i32*, i32*, i32*) #1

declare dso_local i64 @FD_ISSET(i32, i32*) #1

declare dso_local i32 @read(i32, i8*, i32) #1

declare dso_local i32 @perror(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
