; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_20731.c_ftp_chdir.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/remote/extr_20731.c_ftp_chdir.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [8 x i8] c"CWD %s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @ftp_chdir(i32 %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  %8 = load i8*, i8** %5, align 8
  %9 = call i32 @strlen(i8* %8)
  %10 = add nsw i32 %9, 6
  %11 = sext i32 %10 to i64
  %12 = mul i64 %11, 1
  %13 = trunc i64 %12 to i32
  %14 = call i8* @Malloc(i32 %13)
  store i8* %14, i8** %7, align 8
  %15 = load i8*, i8** %7, align 8
  %16 = load i8*, i8** %5, align 8
  %17 = call i32 @sprintf(i8* %15, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8* %16)
  %18 = load i32, i32* %4, align 4
  %19 = load i8*, i8** %7, align 8
  %20 = call i32 @write_sock(i32 %18, i8* %19)
  %21 = load i32, i32* %4, align 4
  %22 = call i8* @read_sock(i32 %21)
  store i8* %22, i8** %6, align 8
  %23 = load i8*, i8** %7, align 8
  %24 = call i32 @free(i8* %23)
  %25 = load i8*, i8** %6, align 8
  %26 = call i32 @atoi(i8* %25)
  %27 = icmp eq i32 %26, 250
  br i1 %27, label %28, label %31

28:                                               ; preds = %2
  %29 = load i8*, i8** %6, align 8
  %30 = call i32 @free(i8* %29)
  store i32 1, i32* %3, align 4
  br label %34

31:                                               ; preds = %2
  %32 = load i8*, i8** %6, align 8
  %33 = call i32 @free(i8* %32)
  store i32 0, i32* %3, align 4
  br label %34

34:                                               ; preds = %31, %28
  %35 = load i32, i32* %3, align 4
  ret i32 %35
}

declare dso_local i8* @Malloc(i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @write_sock(i32, i8*) #1

declare dso_local i8* @read_sock(i32) #1

declare dso_local i32 @free(i8*) #1

declare dso_local i32 @atoi(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
