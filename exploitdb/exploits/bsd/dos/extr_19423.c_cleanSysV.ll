; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/dos/extr_19423.c_cleanSysV.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/dos/extr_19423.c_cleanSysV.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.shmid_ds = type { i32 }
%struct.shm_info = type { i32 }

@SHM_INFO = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [10 x i8] c"maxid %d\0A\00", align 1
@SHM_STAT = common dso_local global i32 0, align 4
@IPC_RMID = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [7 x i8] c"shmctl\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"id %d has %d attachments\0A\00", align 1
@IPC_SET = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [27 x i8] c"id %d deleted sucessfully\0A\00", align 1
@.str.4 = private unnamed_addr constant [50 x i8] c"Still able to stat id %d, but has no attachments\0A\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"Error, failed to remove id %d!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cleanSysV() #0 {
  %1 = alloca %struct.shmid_ds, align 4
  %2 = alloca %struct.shm_info, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = load i32, i32* @SHM_INFO, align 4
  %8 = bitcast %struct.shm_info* %2 to %struct.shmid_ds*
  %9 = call i32 @shmctl(i32 0, i32 %7, %struct.shmid_ds* %8)
  store i32 %9, i32* %4, align 4
  %10 = load i32, i32* %4, align 4
  %11 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 %10)
  store i32 0, i32* %3, align 4
  br label %12

12:                                               ; preds = %57, %0
  %13 = load i32, i32* %3, align 4
  %14 = load i32, i32* %4, align 4
  %15 = icmp sle i32 %13, %14
  br i1 %15, label %16, label %60

16:                                               ; preds = %12
  %17 = load i32, i32* %3, align 4
  %18 = load i32, i32* @SHM_STAT, align 4
  %19 = call i32 @shmctl(i32 %17, i32 %18, %struct.shmid_ds* %1)
  store i32 %19, i32* %6, align 4
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  br label %57

22:                                               ; preds = %16
  %23 = load i32, i32* %6, align 4
  %24 = load i32, i32* @IPC_RMID, align 4
  %25 = call i32 @shmctl(i32 %23, i32 %24, %struct.shmid_ds* null)
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %22
  %28 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0))
  br label %29

29:                                               ; preds = %27, %22
  %30 = load i32, i32* %6, align 4
  %31 = getelementptr inbounds %struct.shmid_ds, %struct.shmid_ds* %1, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i32 %30, i32 %32)
  %34 = getelementptr inbounds %struct.shmid_ds, %struct.shmid_ds* %1, i32 0, i32 0
  store i32 0, i32* %34, align 4
  %35 = load i32, i32* %6, align 4
  %36 = load i32, i32* @IPC_SET, align 4
  %37 = call i32 @shmctl(i32 %35, i32 %36, %struct.shmid_ds* %1)
  %38 = load i32, i32* %6, align 4
  %39 = load i32, i32* @SHM_STAT, align 4
  %40 = call i32 @shmctl(i32 %38, i32 %39, %struct.shmid_ds* %1)
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %29
  %43 = load i32, i32* %6, align 4
  %44 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i32 %43)
  br label %56

45:                                               ; preds = %29
  %46 = getelementptr inbounds %struct.shmid_ds, %struct.shmid_ds* %1, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %52

49:                                               ; preds = %45
  %50 = load i32, i32* %6, align 4
  %51 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0), i32 %50)
  br label %55

52:                                               ; preds = %45
  %53 = load i32, i32* %6, align 4
  %54 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i32 %53)
  br label %55

55:                                               ; preds = %52, %49
  br label %56

56:                                               ; preds = %55, %42
  br label %57

57:                                               ; preds = %56, %21
  %58 = load i32, i32* %3, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %3, align 4
  br label %12

60:                                               ; preds = %12
  ret void
}

declare dso_local i32 @shmctl(i32, i32, %struct.shmid_ds*) #1

declare dso_local i32 @printf(i8*, i32, ...) #1

declare dso_local i32 @perror(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
