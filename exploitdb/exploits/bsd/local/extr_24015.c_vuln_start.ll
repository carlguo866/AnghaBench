; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/local/extr_24015.c_vuln_start.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/local/extr_24015.c_vuln_start.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@vuln_start.lamemille = internal global i32* null, align 8
@vuln_start.fireupmille = internal global i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i32 0, i32 0), align 8
@.str = private unnamed_addr constant [17 x i8] c"/usr/games/mille\00", align 1
@vuln_start.savefile = internal global [2 x i8] c"s\00", align 1
@buffer = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [3 x i8] c"rw\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@ENTER = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @vuln_start() #0 {
  %1 = alloca i8*, align 8
  %2 = load i8*, i8** @buffer, align 8
  store i8* %2, i8** %1, align 8
  %3 = load i8*, i8** @vuln_start.fireupmille, align 8
  %4 = call i32* @popen(i8* %3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0))
  store i32* %4, i32** @vuln_start.lamemille, align 8
  %5 = load i32*, i32** @vuln_start.lamemille, align 8
  %6 = call i32 @fprintf(i32* %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @vuln_start.savefile, i64 0, i64 0))
  %7 = load i32*, i32** @vuln_start.lamemille, align 8
  %8 = call i32 @fflush(i32* %7)
  %9 = load i32*, i32** @vuln_start.lamemille, align 8
  %10 = load i8*, i8** %1, align 8
  %11 = call i32 @fprintf(i32* %9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %10)
  %12 = load i32*, i32** @vuln_start.lamemille, align 8
  %13 = call i32 @fflush(i32* %12)
  %14 = load i32*, i32** @vuln_start.lamemille, align 8
  %15 = load i8*, i8** @ENTER, align 8
  %16 = call i32 @fprintf(i32* %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %15)
  %17 = load i32*, i32** @vuln_start.lamemille, align 8
  %18 = call i32 @fflush(i32* %17)
  %19 = load i32*, i32** @vuln_start.lamemille, align 8
  %20 = call i32 @pclose(i32* %19)
  ret void
}

declare dso_local i32* @popen(i8*, i8*) #1

declare dso_local i32 @fprintf(i32*, i8*, i8*) #1

declare dso_local i32 @fflush(i32*) #1

declare dso_local i32 @pclose(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
