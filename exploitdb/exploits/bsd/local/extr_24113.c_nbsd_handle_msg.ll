; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/local/extr_24113.c_nbsd_handle_msg.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/local/extr_24113.c_nbsd_handle_msg.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.str_message = type { i32, i32 }
%struct.systrace_answer = type { i32, i32, i32, i64, i32, i32, i32 }

@SYSTR_POLICY_PERMIT = common dso_local global i32 0, align 4
@SYSTR_FLAGS_RESULT = common dso_local global i32 0, align 4
@SYSTR_FLAGS_SETEUID = common dso_local global i32 0, align 4
@STRIOCANSWER = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @nbsd_handle_msg(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.str_message, align 4
  %4 = alloca %struct.systrace_answer, align 8
  %5 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %6 = load i32, i32* %2, align 4
  %7 = call i32 @read(i32 %6, %struct.str_message* %3, i32 8)
  store i32 %7, i32* %5, align 4
  %8 = load i32, i32* %5, align 4
  %9 = sext i32 %8 to i64
  %10 = icmp ne i64 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %1
  %12 = call i32 @exit(i32 1) #3
  unreachable

13:                                               ; preds = %1
  %14 = call i32 @memset(%struct.systrace_answer* %4, i32 0, i32 40)
  %15 = getelementptr inbounds %struct.str_message, %struct.str_message* %3, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.systrace_answer, %struct.systrace_answer* %4, i32 0, i32 6
  store i32 %16, i32* %17, align 8
  %18 = getelementptr inbounds %struct.str_message, %struct.str_message* %3, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %struct.systrace_answer, %struct.systrace_answer* %4, i32 0, i32 5
  store i32 %19, i32* %20, align 4
  %21 = load i32, i32* @SYSTR_POLICY_PERMIT, align 4
  %22 = getelementptr inbounds %struct.systrace_answer, %struct.systrace_answer* %4, i32 0, i32 4
  store i32 %21, i32* %22, align 8
  %23 = load i32, i32* @SYSTR_FLAGS_RESULT, align 4
  %24 = load i32, i32* @SYSTR_FLAGS_SETEUID, align 4
  %25 = or i32 %23, %24
  %26 = load i32, i32* @SYSTR_FLAGS_SETEUID, align 4
  %27 = or i32 %25, %26
  %28 = getelementptr inbounds %struct.systrace_answer, %struct.systrace_answer* %4, i32 0, i32 0
  store i32 %27, i32* %28, align 8
  %29 = getelementptr inbounds %struct.systrace_answer, %struct.systrace_answer* %4, i32 0, i32 3
  store i64 0, i64* %29, align 8
  %30 = call i32 (...) @getuid()
  %31 = getelementptr inbounds %struct.systrace_answer, %struct.systrace_answer* %4, i32 0, i32 2
  store i32 %30, i32* %31, align 8
  %32 = call i32 (...) @getgid()
  %33 = getelementptr inbounds %struct.systrace_answer, %struct.systrace_answer* %4, i32 0, i32 1
  store i32 %32, i32* %33, align 4
  %34 = load i32, i32* %2, align 4
  %35 = load i32, i32* @STRIOCANSWER, align 4
  %36 = call i32 @ioctl(i32 %34, i32 %35, %struct.systrace_answer* %4)
  %37 = icmp eq i32 %36, -1
  br i1 %37, label %38, label %39

38:                                               ; preds = %13
  br label %39

39:                                               ; preds = %38, %13
  ret void
}

declare dso_local i32 @read(i32, %struct.str_message*, i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @memset(%struct.systrace_answer*, i32, i32) #1

declare dso_local i32 @getuid(...) #1

declare dso_local i32 @getgid(...) #1

declare dso_local i32 @ioctl(i32, i32, %struct.systrace_answer*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
