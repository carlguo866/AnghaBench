; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/freebsd/local/extr_28718.c_resolving.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/freebsd/local/extr_28718.c_resolving.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [5 x i8] c"Xdiv\00", align 1
@Xdivp = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"Xdbg\00", align 1
@Xdbgp = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [5 x i8] c"Xbpt\00", align 1
@Xbptp = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [5 x i8] c"Xofl\00", align 1
@Xoflp = common dso_local global i64 0, align 8
@.str.4 = private unnamed_addr constant [5 x i8] c"Xbnd\00", align 1
@Xbndp = common dso_local global i64 0, align 8
@.str.5 = private unnamed_addr constant [5 x i8] c"Xill\00", align 1
@Xillp = common dso_local global i64 0, align 8
@.str.6 = private unnamed_addr constant [5 x i8] c"Xdna\00", align 1
@Xdnap = common dso_local global i64 0, align 8
@.str.7 = private unnamed_addr constant [9 x i8] c"Xfpusegm\00", align 1
@Xfpusegmp = common dso_local global i64 0, align 8
@.str.8 = private unnamed_addr constant [5 x i8] c"Xtss\00", align 1
@Xtssp = common dso_local global i64 0, align 8
@.str.9 = private unnamed_addr constant [9 x i8] c"Xmissing\00", align 1
@Xmissingp = common dso_local global i64 0, align 8
@.str.10 = private unnamed_addr constant [5 x i8] c"Xstk\00", align 1
@Xstkp = common dso_local global i64 0, align 8
@.str.11 = private unnamed_addr constant [6 x i8] c"Xprot\00", align 1
@Xprotp = common dso_local global i64 0, align 8
@.str.12 = private unnamed_addr constant [6 x i8] c"Xpage\00", align 1
@Xpagep = common dso_local global i64 0, align 8
@.str.13 = private unnamed_addr constant [5 x i8] c"Xfpu\00", align 1
@Xfpup = common dso_local global i64 0, align 8
@.str.14 = private unnamed_addr constant [7 x i8] c"Xalign\00", align 1
@Xalignp = common dso_local global i64 0, align 8
@.str.15 = private unnamed_addr constant [6 x i8] c"Xmchk\00", align 1
@Xmchkp = common dso_local global i64 0, align 8
@.str.16 = private unnamed_addr constant [5 x i8] c"Xxmm\00", align 1
@Xxmmp = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @resolving() #0 {
  %1 = call i64 @matchsym(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0))
  store i64 %1, i64* @Xdivp, align 8
  %2 = call i64 @matchsym(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  store i64 %2, i64* @Xdbgp, align 8
  %3 = call i64 @matchsym(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0))
  store i64 %3, i64* @Xbptp, align 8
  %4 = call i64 @matchsym(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0))
  store i64 %4, i64* @Xoflp, align 8
  %5 = call i64 @matchsym(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0))
  store i64 %5, i64* @Xbndp, align 8
  %6 = call i64 @matchsym(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0))
  store i64 %6, i64* @Xillp, align 8
  %7 = call i64 @matchsym(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0))
  store i64 %7, i64* @Xdnap, align 8
  %8 = call i64 @matchsym(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0))
  store i64 %8, i64* @Xfpusegmp, align 8
  %9 = call i64 @matchsym(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0))
  store i64 %9, i64* @Xtssp, align 8
  %10 = call i64 @matchsym(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0))
  store i64 %10, i64* @Xmissingp, align 8
  %11 = call i64 @matchsym(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0))
  store i64 %11, i64* @Xstkp, align 8
  %12 = call i64 @matchsym(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0))
  store i64 %12, i64* @Xprotp, align 8
  %13 = call i64 @matchsym(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0))
  store i64 %13, i64* @Xpagep, align 8
  %14 = call i64 @matchsym(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0))
  store i64 %14, i64* @Xfpup, align 8
  %15 = call i64 @matchsym(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0))
  store i64 %15, i64* @Xalignp, align 8
  %16 = call i64 @matchsym(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0))
  store i64 %16, i64* @Xmchkp, align 8
  %17 = call i64 @matchsym(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0))
  store i64 %17, i64* @Xxmmp, align 8
  ret void
}

declare dso_local i64 @matchsym(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
