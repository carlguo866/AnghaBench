; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/android/dos/extr_39801.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/android/dos/extr_39801.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.WPSProbeRespIe = type opaque

@MAX_SIZE = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca %struct.WPSProbeRespIe*, align 8
  %4 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %5 = load i32, i32* @MAX_SIZE, align 4
  %6 = call i64 @calloc(i32 %5, i32 1)
  %7 = inttoptr i64 %6 to i8*
  store i8* %7, i8** %2, align 8
  %8 = load i8*, i8** %2, align 8
  %9 = call i32 @create_wifi(i8* %8)
  store i32 %9, i32* %4, align 4
  %10 = call i8* (...) @set_wps_probe_response()
  %11 = bitcast i8* %10 to %struct.WPSProbeRespIe*
  store %struct.WPSProbeRespIe* %11, %struct.WPSProbeRespIe** %3, align 8
  %12 = load i8*, i8** %2, align 8
  %13 = load i32, i32* %4, align 4
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %12, i64 %14
  %16 = load %struct.WPSProbeRespIe*, %struct.WPSProbeRespIe** %3, align 8
  %17 = bitcast %struct.WPSProbeRespIe* %16 to i8*
  %18 = call i64 @wtoa(i8* %15, i8* %17)
  %19 = load i32, i32* %4, align 4
  %20 = sext i32 %19 to i64
  %21 = add nsw i64 %20, %18
  %22 = trunc i64 %21 to i32
  store i32 %22, i32* %4, align 4
  %23 = load i8*, i8** %2, align 8
  %24 = load i32, i32* %4, align 4
  %25 = call i32 @broadcast(i8* %23, i32 %24)
  %26 = load %struct.WPSProbeRespIe*, %struct.WPSProbeRespIe** %3, align 8
  %27 = bitcast %struct.WPSProbeRespIe* %26 to i8*
  %28 = call i32 @free(i8* %27)
  %29 = load i8*, i8** %2, align 8
  %30 = call i32 @free(i8* %29)
  ret i32 0
}

declare dso_local i64 @calloc(i32, i32) #1

declare dso_local i32 @create_wifi(i8*) #1

declare dso_local i8* @set_wps_probe_response(...) #1

declare dso_local i64 @wtoa(i8*, i8*) #1

declare dso_local i32 @broadcast(i8*, i32) #1

declare dso_local i32 @free(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
