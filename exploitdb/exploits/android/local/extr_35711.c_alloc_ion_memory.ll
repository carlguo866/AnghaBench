; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/android/local/extr_35711.c_alloc_ion_memory.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/android/local/extr_35711.c_alloc_ion_memory.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ion_handle = type { i32 }
%struct.ion_allocation_data = type { i32, i32, %struct.ion_handle*, i32 }

@ION_HEAP_TYPE_CARVEOUT = common dso_local global i32 0, align 4
@ION_IOC_ALLOC = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [14 x i8] c"ION_IOC_ALLOC\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @alloc_ion_memory(i32 %0, i32 %1, %struct.ion_handle** %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.ion_handle**, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.ion_allocation_data, align 8
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store %struct.ion_handle** %2, %struct.ion_handle*** %6, align 8
  store i32 -1, i32* %7, align 4
  %9 = load i32, i32* %5, align 4
  %10 = getelementptr inbounds %struct.ion_allocation_data, %struct.ion_allocation_data* %8, i32 0, i32 0
  store i32 %9, i32* %10, align 8
  %11 = load i32, i32* %5, align 4
  %12 = getelementptr inbounds %struct.ion_allocation_data, %struct.ion_allocation_data* %8, i32 0, i32 1
  store i32 %11, i32* %12, align 4
  %13 = load i32, i32* @ION_HEAP_TYPE_CARVEOUT, align 4
  %14 = getelementptr inbounds %struct.ion_allocation_data, %struct.ion_allocation_data* %8, i32 0, i32 3
  store i32 %13, i32* %14, align 8
  %15 = load i32, i32* %4, align 4
  %16 = load i32, i32* @ION_IOC_ALLOC, align 4
  %17 = call i32 @ioctl(i32 %15, i32 %16, %struct.ion_allocation_data* %8)
  store i32 %17, i32* %7, align 4
  %18 = load i32, i32* %7, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %3
  %21 = call i32 @perror(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0))
  br label %22

22:                                               ; preds = %20, %3
  %23 = getelementptr inbounds %struct.ion_allocation_data, %struct.ion_allocation_data* %8, i32 0, i32 2
  %24 = load %struct.ion_handle*, %struct.ion_handle** %23, align 8
  %25 = load %struct.ion_handle**, %struct.ion_handle*** %6, align 8
  store %struct.ion_handle* %24, %struct.ion_handle** %25, align 8
  %26 = load i32, i32* %7, align 4
  ret i32 %26
}

declare dso_local i32 @ioctl(i32, i32, %struct.ion_allocation_data*) #1

declare dso_local i32 @perror(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
