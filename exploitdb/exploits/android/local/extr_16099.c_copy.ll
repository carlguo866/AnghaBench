; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/android/local/extr_16099.c_copy.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/android/local/extr_16099.c_copy.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@O_RDONLY = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [9 x i8] c"[-] open\00", align 1
@O_RDWR = common dso_local global i32 0, align 4
@O_CREAT = common dso_local global i32 0, align 4
@O_TRUNC = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [9 x i8] c"[-] read\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"[-] write\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @copy(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [4096 x i8], align 16
  %8 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  store i64 0, i64* %8, align 8
  %9 = load i8*, i8** %3, align 8
  %10 = load i32, i32* @O_RDONLY, align 4
  %11 = call i32 (i8*, i32, ...) @open(i8* %9, i32 %10)
  store i32 %11, i32* %5, align 4
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = call i32 @die(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0))
  br label %15

15:                                               ; preds = %13, %2
  %16 = load i8*, i8** %4, align 8
  %17 = load i32, i32* @O_RDWR, align 4
  %18 = load i32, i32* @O_CREAT, align 4
  %19 = or i32 %17, %18
  %20 = load i32, i32* @O_TRUNC, align 4
  %21 = or i32 %19, %20
  %22 = call i32 (i8*, i32, ...) @open(i8* %16, i32 %21, i32 384)
  store i32 %22, i32* %6, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %15
  %25 = call i32 @die(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0))
  br label %26

26:                                               ; preds = %24, %15
  br label %27

27:                                               ; preds = %48, %26
  %28 = load i32, i32* %5, align 4
  %29 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i64 0, i64 0
  %30 = call i64 @read(i32 %28, i8* %29, i32 4096)
  store i64 %30, i64* %8, align 8
  %31 = load i64, i64* %8, align 8
  %32 = icmp slt i64 %31, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = call i32 @die(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0))
  br label %35

35:                                               ; preds = %33, %27
  %36 = load i64, i64* %8, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  br label %49

39:                                               ; preds = %35
  %40 = load i32, i32* %6, align 4
  %41 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i64 0, i64 0
  %42 = load i64, i64* %8, align 8
  %43 = call i64 @write(i32 %40, i8* %41, i64 %42)
  %44 = load i64, i64* %8, align 8
  %45 = icmp ne i64 %43, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %39
  %47 = call i32 @die(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0))
  br label %48

48:                                               ; preds = %46, %39
  br label %27

49:                                               ; preds = %38
  %50 = load i32, i32* %5, align 4
  %51 = call i32 @close(i32 %50)
  %52 = load i32, i32* %6, align 4
  %53 = call i32 @close(i32 %52)
  %54 = call i32 (...) @sync()
  %55 = call i32 (...) @sync()
  ret void
}

declare dso_local i32 @open(i8*, i32, ...) #1

declare dso_local i32 @die(i8*) #1

declare dso_local i64 @read(i32, i8*, i32) #1

declare dso_local i64 @write(i32, i8*, i64) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @sync(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
