; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/freebsd_x86/dos/extr_42277.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/freebsd_x86/dos/extr_42277.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.rlimit = type { i32 }

@main.core = internal constant %struct.rlimit zeroinitializer, align 4
@RLIMIT_CORE = common dso_local global i32 0, align 4
@SGROWSIZ = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [18 x i8] c"char at %p: %02x\0A\00", align 1
@last_page = common dso_local global i32* null, align 8
@EXIT_SUCCESS = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %2 = load i32, i32* @RLIMIT_CORE, align 4
  %3 = call i64 @setrlimit(i32 %2, %struct.rlimit* @main.core)
  %4 = icmp ne i64 %3, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %0
  %6 = call i32 (...) @die()
  br label %7

7:                                                ; preds = %5, %0
  %8 = call i32 (...) @clash()
  %9 = load i32, i32* @SGROWSIZ, align 4
  %10 = sdiv i32 %9, 2
  %11 = mul nsw i32 %10, 3
  %12 = call i32 @smash_no_jump(i32 %11)
  %13 = load i32*, i32** @last_page, align 8
  %14 = load i32*, i32** @last_page, align 8
  %15 = load i32, i32* %14, align 4
  %16 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32* %13, i32 %15)
  %17 = load i32, i32* @EXIT_SUCCESS, align 4
  %18 = call i32 @exit(i32 %17) #3
  unreachable
}

declare dso_local i64 @setrlimit(i32, %struct.rlimit*) #1

declare dso_local i32 @die(...) #1

declare dso_local i32 @clash(...) #1

declare dso_local i32 @smash_no_jump(i32) #1

declare dso_local i32 @printf(i8*, i32*, i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
