; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/freebsd_x86/dos/extr_42278.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/freebsd_x86/dos/extr_42278.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.rlimit = type { i32 }

@main.core = internal constant %struct.rlimit zeroinitializer, align 4
@RLIMIT_CORE = common dso_local global i32 0, align 4
@RLIMIT_STACK = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [40 x i8] c"char at %p: %02x; final dist %zu (%zu)\0A\00", align 1
@last_page = common dso_local global i32* null, align 8
@SGROWSIZ = common dso_local global i64 0, align 8
@EXIT_SUCCESS = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.rlimit, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i32 0, i32* %1, align 4
  %5 = load i32, i32* @RLIMIT_CORE, align 4
  %6 = call i64 @setrlimit(i32 %5, %struct.rlimit* @main.core)
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %0
  %9 = call i32 (...) @die()
  br label %10

10:                                               ; preds = %8, %0
  %11 = load i32, i32* @RLIMIT_STACK, align 4
  %12 = call i64 @getrlimit(i32 %11, %struct.rlimit* %2)
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  %15 = call i32 (...) @die()
  br label %16

16:                                               ; preds = %14, %10
  %17 = getelementptr inbounds %struct.rlimit, %struct.rlimit* %2, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = sdiv i32 %18, 3
  %20 = mul nsw i32 %19, 2
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %3, align 8
  %22 = call i64 (...) @arc4random()
  %23 = load i64, i64* %3, align 8
  %24 = urem i64 %22, %23
  store i64 %24, i64* %4, align 8
  %25 = bitcast %struct.rlimit* %2 to i8*
  %26 = load i64, i64* %4, align 8
  %27 = sub i64 0, %26
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  %29 = call i32 @alloc(i8* %28)
  %30 = load i64, i64* %3, align 8
  %31 = call i32 @clash_smash_no_jump(i64 %30)
  %32 = load i32*, i32** @last_page, align 8
  %33 = load i32*, i32** @last_page, align 8
  %34 = load i32, i32* %33, align 4
  %35 = load i64, i64* %4, align 8
  %36 = load i64, i64* @SGROWSIZ, align 8
  %37 = urem i64 %35, %36
  %38 = load i64, i64* %4, align 8
  %39 = call i32 @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i32* %32, i32 %34, i64 %37, i64 %38)
  %40 = load i32, i32* @EXIT_SUCCESS, align 4
  %41 = call i32 @exit(i32 %40) #3
  unreachable
}

declare dso_local i64 @setrlimit(i32, %struct.rlimit*) #1

declare dso_local i32 @die(...) #1

declare dso_local i64 @getrlimit(i32, %struct.rlimit*) #1

declare dso_local i64 @arc4random(...) #1

declare dso_local i32 @alloc(i8*) #1

declare dso_local i32 @clash_smash_no_jump(i64) #1

declare dso_local i32 @printf(i8*, i32*, i32, i64, i64) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
