; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows_x86/dos/extr_44600.c_calc_seed.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows_x86/dos/extr_44600.c_calc_seed.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @calc_seed(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca [26 x i8], align 16
  %6 = alloca [300 x i8], align 16
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = bitcast [26 x i8]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %7, i8 0, i64 26, i1 false)
  %8 = bitcast [300 x i8]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %8, i8 0, i64 300, i1 false)
  %9 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 0
  store i8 8, i8* %9, align 16
  %10 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 1
  store i8 14, i8* %10, align 1
  %11 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 2
  store i8 8, i8* %11, align 2
  %12 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 3
  store i8 10, i8* %12, align 1
  %13 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 4
  store i8 2, i8* %13, align 4
  %14 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 5
  store i8 3, i8* %14, align 1
  %15 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 6
  store i8 29, i8* %15, align 2
  %16 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 7
  store i8 23, i8* %16, align 1
  %17 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 8
  store i8 13, i8* %17, align 8
  %18 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 9
  store i8 3, i8* %18, align 1
  %19 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 10
  store i8 15, i8* %19, align 2
  %20 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 11
  store i8 22, i8* %20, align 1
  %21 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 12
  store i8 15, i8* %21, align 4
  %22 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 13
  store i8 7, i8* %22, align 1
  %23 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 14
  store i8 91, i8* %23, align 2
  %24 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 15
  store i8 4, i8* %24, align 1
  %25 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 16
  store i8 18, i8* %25, align 16
  %26 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 17
  store i8 26, i8* %26, align 1
  %27 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 18
  store i8 26, i8* %27, align 2
  %28 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 19
  store i8 3, i8* %28, align 1
  %29 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 20
  store i8 4, i8* %29, align 4
  %30 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 21
  store i8 1, i8* %30, align 1
  %31 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 22
  store i8 15, i8* %31, align 2
  %32 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 23
  store i8 25, i8* %32, align 1
  %33 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 24
  store i8 10, i8* %33, align 8
  %34 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 25
  store i8 13, i8* %34, align 1
  %35 = load i8*, i8** %3, align 8
  %36 = getelementptr inbounds [300 x i8], [300 x i8]* %6, i64 0, i64 0
  %37 = call i32 @sub_12A80(i8* %35, i32 20, i8* %36)
  %38 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 0
  %39 = getelementptr inbounds [300 x i8], [300 x i8]* %6, i64 0, i64 0
  %40 = call i32 @sub_12B60(i8* %38, i32 26, i8* %39)
  %41 = load i8*, i8** %4, align 8
  %42 = getelementptr inbounds [26 x i8], [26 x i8]* %5, i64 0, i64 0
  %43 = call i32 @memcpy(i8* %41, i8* %42, i32 26)
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dso_local i32 @sub_12A80(i8*, i32, i8*) #2

declare dso_local i32 @sub_12B60(i8*, i32, i8*) #2

declare dso_local i32 @memcpy(i8*, i8*, i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
