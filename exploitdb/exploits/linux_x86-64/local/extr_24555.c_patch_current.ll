; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux_x86-64/local/extr_24555.c_patch_current.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux_x86-64/local/extr_24555.c_patch_current.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@ugid = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @patch_current() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i32*, align 8
  %8 = ptrtoint i32* %1 to i64
  %9 = and i64 %8, -8192
  %10 = inttoptr i64 %9 to i8**
  %11 = load i8*, i8** %10, align 8
  store i8* %11, i8** %4, align 8
  %12 = load i8*, i8** %4, align 8
  %13 = ptrtoint i8* %12 to i64
  %14 = ashr i64 %13, 36
  store i64 %14, i64* %5, align 8
  store i32 0, i32* %1, align 4
  br label %15

15:                                               ; preds = %106, %0
  %16 = load i32, i32* %1, align 4
  %17 = icmp slt i32 %16, 4000
  br i1 %17, label %18, label %109

18:                                               ; preds = %15
  %19 = load i8*, i8** %4, align 8
  %20 = load i32, i32* %1, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %19, i64 %21
  %23 = bitcast i8* %22 to i64*
  store i64* %23, i64** %6, align 8
  %24 = load i64*, i64** %6, align 8
  %25 = getelementptr inbounds i64, i64* %24, i64 0
  %26 = load i64, i64* %25, align 8
  %27 = inttoptr i64 %26 to i8*
  %28 = bitcast i8* %27 to i32*
  store i32* %28, i32** %7, align 8
  %29 = load i64*, i64** %6, align 8
  %30 = getelementptr inbounds i64, i64* %29, i64 0
  %31 = load i64, i64* %30, align 8
  %32 = load i64*, i64** %6, align 8
  %33 = getelementptr inbounds i64, i64* %32, i64 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp ne i64 %31, %34
  br i1 %35, label %43, label %36

36:                                               ; preds = %18
  %37 = load i64*, i64** %6, align 8
  %38 = getelementptr inbounds i64, i64* %37, i64 0
  %39 = load i64, i64* %38, align 8
  %40 = ashr i64 %39, 36
  %41 = load i64, i64* %5, align 8
  %42 = icmp ne i64 %40, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %36, %18
  br label %106

44:                                               ; preds = %36
  store i32 0, i32* %2, align 4
  br label %45

45:                                               ; preds = %102, %44
  %46 = load i32, i32* %2, align 4
  %47 = icmp slt i32 %46, 20
  br i1 %47, label %48, label %105

48:                                               ; preds = %45
  store i32 0, i32* %3, align 4
  br label %49

49:                                               ; preds = %68, %48
  %50 = load i32, i32* %3, align 4
  %51 = icmp slt i32 %50, 8
  br i1 %51, label %52, label %71

52:                                               ; preds = %49
  %53 = load i32, i32* %3, align 4
  %54 = srem i32 %53, 2
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i32, i32* @ugid, i64 %55
  %57 = load i32, i32* %56, align 4
  %58 = load i32*, i32** %7, align 8
  %59 = load i32, i32* %2, align 4
  %60 = load i32, i32* %3, align 4
  %61 = add nsw i32 %59, %60
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %58, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp ne i32 %57, %64
  br i1 %65, label %66, label %67

66:                                               ; preds = %52
  br label %101

67:                                               ; preds = %52
  br label %68

68:                                               ; preds = %67
  %69 = load i32, i32* %3, align 4
  %70 = add nsw i32 %69, 1
  store i32 %70, i32* %3, align 4
  br label %49

71:                                               ; preds = %49
  store i32 0, i32* %1, align 4
  br label %72

72:                                               ; preds = %82, %71
  %73 = load i32, i32* %1, align 4
  %74 = icmp slt i32 %73, 8
  br i1 %74, label %75, label %85

75:                                               ; preds = %72
  %76 = load i32*, i32** %7, align 8
  %77 = load i32, i32* %2, align 4
  %78 = load i32, i32* %1, align 4
  %79 = add nsw i32 %77, %78
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %76, i64 %80
  store i32 0, i32* %81, align 4
  br label %82

82:                                               ; preds = %75
  %83 = load i32, i32* %1, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %1, align 4
  br label %72

85:                                               ; preds = %72
  store i32 0, i32* %1, align 4
  br label %86

86:                                               ; preds = %97, %85
  %87 = load i32, i32* %1, align 4
  %88 = icmp slt i32 %87, 10
  br i1 %88, label %89, label %100

89:                                               ; preds = %86
  %90 = load i32*, i32** %7, align 8
  %91 = load i32, i32* %2, align 4
  %92 = add nsw i32 %91, 9
  %93 = load i32, i32* %1, align 4
  %94 = add nsw i32 %92, %93
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i32, i32* %90, i64 %95
  store i32 -1, i32* %96, align 4
  br label %97

97:                                               ; preds = %89
  %98 = load i32, i32* %1, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %1, align 4
  br label %86

100:                                              ; preds = %86
  br label %109

101:                                              ; preds = %66
  br label %102

102:                                              ; preds = %101
  %103 = load i32, i32* %2, align 4
  %104 = add nsw i32 %103, 1
  store i32 %104, i32* %2, align 4
  br label %45

105:                                              ; preds = %45
  br label %106

106:                                              ; preds = %105, %43
  %107 = load i32, i32* %1, align 4
  %108 = add nsw i32 %107, 4
  store i32 %108, i32* %1, align 4
  br label %15

109:                                              ; preds = %100, %15
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
