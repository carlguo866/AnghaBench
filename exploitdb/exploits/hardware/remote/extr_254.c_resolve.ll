; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_254.c_resolve.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_254.c_resolve.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_3__ = type { i64** }

@.str = private unnamed_addr constant [12 x i8] c"%d.%d.%d.%d\00", align 1
@hp = common dso_local global %struct.TYPE_3__* null, align 8
@.str.1 = private unnamed_addr constant [33 x i8] c"%s error on host resolving\0A\1B[0m\0A\00", align 1
@BOX = common dso_local global i8* null, align 8
@host = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local signext i8 @resolve(i8* %0) #0 {
  %2 = alloca i8, align 1
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %8 = load i8*, i8** %3, align 8
  %9 = call i32 @sscanf(i8* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32* %4, i32* %5, i32* %6, i32* %7)
  %10 = icmp ne i32 %9, 4
  br i1 %10, label %11, label %55

11:                                               ; preds = %1
  %12 = load i8*, i8** %3, align 8
  %13 = call %struct.TYPE_3__* @gethostbyname(i8* %12)
  store %struct.TYPE_3__* %13, %struct.TYPE_3__** @hp, align 8
  %14 = load %struct.TYPE_3__*, %struct.TYPE_3__** @hp, align 8
  %15 = icmp eq %struct.TYPE_3__* %14, null
  br i1 %15, label %16, label %20

16:                                               ; preds = %11
  %17 = load i8*, i8** @BOX, align 8
  %18 = call i32 @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i8* %17)
  %19 = call i32 @exit(i32 0) #3
  unreachable

20:                                               ; preds = %11
  %21 = load i32, i32* @host, align 4
  %22 = load %struct.TYPE_3__*, %struct.TYPE_3__** @hp, align 8
  %23 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %22, i32 0, i32 0
  %24 = load i64**, i64*** %23, align 8
  %25 = getelementptr inbounds i64*, i64** %24, i64 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds i64, i64* %26, i64 0
  %28 = load i64, i64* %27, align 8
  %29 = trunc i64 %28 to i8
  %30 = load %struct.TYPE_3__*, %struct.TYPE_3__** @hp, align 8
  %31 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %30, i32 0, i32 0
  %32 = load i64**, i64*** %31, align 8
  %33 = getelementptr inbounds i64*, i64** %32, i64 0
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds i64, i64* %34, i64 1
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %36 to i8
  %38 = load %struct.TYPE_3__*, %struct.TYPE_3__** @hp, align 8
  %39 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %38, i32 0, i32 0
  %40 = load i64**, i64*** %39, align 8
  %41 = getelementptr inbounds i64*, i64** %40, i64 0
  %42 = load i64*, i64** %41, align 8
  %43 = getelementptr inbounds i64, i64* %42, i64 2
  %44 = load i64, i64* %43, align 8
  %45 = trunc i64 %44 to i8
  %46 = load %struct.TYPE_3__*, %struct.TYPE_3__** @hp, align 8
  %47 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %46, i32 0, i32 0
  %48 = load i64**, i64*** %47, align 8
  %49 = getelementptr inbounds i64*, i64** %48, i64 0
  %50 = load i64*, i64** %49, align 8
  %51 = getelementptr inbounds i64, i64* %50, i64 3
  %52 = load i64, i64* %51, align 8
  %53 = trunc i64 %52 to i8
  %54 = call i32 @sprintf(i32 %21, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8 zeroext %29, i8 zeroext %37, i8 zeroext %45, i8 zeroext %53)
  br label %59

55:                                               ; preds = %1
  %56 = load i32, i32* @host, align 4
  %57 = load i8*, i8** %3, align 8
  %58 = call i32 @strncpy(i32 %56, i8* %57, i32 100)
  br label %59

59:                                               ; preds = %55, %20
  %60 = load i8, i8* %2, align 1
  ret i8 %60
}

declare dso_local i32 @sscanf(i8*, i8*, i32*, i32*, i32*, i32*) #1

declare dso_local %struct.TYPE_3__* @gethostbyname(i8*) #1

declare dso_local i32 @printf(i8*, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @sprintf(i32, i8*, i8 zeroext, i8 zeroext, i8 zeroext, i8 zeroext) #1

declare dso_local i32 @strncpy(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
