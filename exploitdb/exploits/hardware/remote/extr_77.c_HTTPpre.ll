; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_77.c_HTTPpre.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_77.c_HTTPpre.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i8* }
%struct.TYPE_3__ = type { i32 }
%struct.sockaddr_in = type { i32, i32, i32, i32 }
%struct.hostent = type { i32, i32 }
%struct.sockaddr = type { i32 }

@__const.HTTPpre.get = private unnamed_addr constant [5 x i8] c"GET \00", align 1
@cfg = common dso_local global %struct.TYPE_4__ zeroinitializer, align 8
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [22 x i8] c"Could not resolve %s\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@PF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@IPPROTO_TCP = common dso_local global i32 0, align 4
@http = common dso_local global %struct.TYPE_3__ zeroinitializer, align 4
@.str.1 = private unnamed_addr constant [19 x i8] c"socket(TCP) error\0A\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c"Connecting to HTTP server on %s ...\0A\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"Failed to connect to HTTP\0A\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"Connected!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @HTTPpre() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [5 x i8], align 1
  %3 = alloca %struct.sockaddr_in, align 4
  %4 = alloca %struct.hostent*, align 8
  %5 = bitcast [5 x i8]* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @__const.HTTPpre.get, i32 0, i32 0), i64 5, i1 false)
  %6 = call i32 @memset(%struct.sockaddr_in* %3, i32 0, i32 16)
  %7 = load i8*, i8** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @cfg, i32 0, i32 0), align 8
  %8 = call %struct.hostent* @gethostbyname(i8* %7)
  store %struct.hostent* %8, %struct.hostent** %4, align 8
  %9 = icmp eq %struct.hostent* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %0
  %11 = load i32, i32* @stderr, align 4
  %12 = load i8*, i8** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @cfg, i32 0, i32 0), align 8
  %13 = call i32 (i32, i8*, ...) @fprintf(i32 %11, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* %12)
  store i32 -1, i32* %1, align 4
  br label %52

14:                                               ; preds = %0
  %15 = load i32, i32* @AF_INET, align 4
  %16 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 3
  store i32 %15, i32* %16, align 4
  %17 = call i32 @htons(i32 80)
  %18 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 2
  store i32 %17, i32* %18, align 4
  %19 = load %struct.hostent*, %struct.hostent** %4, align 8
  %20 = getelementptr inbounds %struct.hostent, %struct.hostent* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 1
  %23 = bitcast i32* %22 to i8*
  %24 = load %struct.hostent*, %struct.hostent** %4, align 8
  %25 = getelementptr inbounds %struct.hostent, %struct.hostent* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = call i32 @bcopy(i32 %21, i8* %23, i32 %26)
  %28 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %3, i32 0, i32 0
  %29 = call i32 @bzero(i32* %28, i32 8)
  %30 = load i32, i32* @PF_INET, align 4
  %31 = load i32, i32* @SOCK_STREAM, align 4
  %32 = load i32, i32* @IPPROTO_TCP, align 4
  %33 = call i32 @socket(i32 %30, i32 %31, i32 %32)
  store i32 %33, i32* getelementptr inbounds (%struct.TYPE_3__, %struct.TYPE_3__* @http, i32 0, i32 0), align 4
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %14
  %36 = load i32, i32* @stderr, align 4
  %37 = call i32 (i32, i8*, ...) @fprintf(i32 %36, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0))
  store i32 -1, i32* %1, align 4
  br label %52

38:                                               ; preds = %14
  %39 = load i8*, i8** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @cfg, i32 0, i32 0), align 8
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0), i8* %39)
  %41 = load i32, i32* getelementptr inbounds (%struct.TYPE_3__, %struct.TYPE_3__* @http, i32 0, i32 0), align 4
  %42 = bitcast %struct.sockaddr_in* %3 to %struct.sockaddr*
  %43 = call i64 @connect(i32 %41, %struct.sockaddr* %42, i32 16)
  %44 = icmp slt i64 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %38
  %46 = load i32, i32* @stderr, align 4
  %47 = call i32 (i32, i8*, ...) @fprintf(i32 %46, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0))
  store i32 -1, i32* %1, align 4
  br label %52

48:                                               ; preds = %38
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0))
  %50 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i64 0, i64 0
  %51 = call i32 @HTTPsend(i8* %50)
  store i32 0, i32* %1, align 4
  br label %52

52:                                               ; preds = %48, %45, %35, %10
  %53 = load i32, i32* %1, align 4
  ret i32 %53
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @memset(%struct.sockaddr_in*, i32, i32) #2

declare dso_local %struct.hostent* @gethostbyname(i8*) #2

declare dso_local i32 @fprintf(i32, i8*, ...) #2

declare dso_local i32 @htons(i32) #2

declare dso_local i32 @bcopy(i32, i8*, i32) #2

declare dso_local i32 @bzero(i32*, i32) #2

declare dso_local i32 @socket(i32, i32, i32) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #2

declare dso_local i32 @HTTPsend(i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
