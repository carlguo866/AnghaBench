; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_39195.c_payload_insert_host.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_39195.c_payload_insert_host.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@DELIM = common dso_local global i8 0, align 1
@UNAME_LEN = common dso_local global i32 0, align 4
@KEY_UNAME = common dso_local global i8* null, align 8
@KEY_PWD = common dso_local global i8* null, align 8
@KEY_DOMAIN_0 = common dso_local global i8* null, align 8
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (i8*, i8*, i32)* @payload_insert_host to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @payload_insert_host(i8* %0, i8* %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i32 %2, i32* %7, align 4
  store i32 0, i32* %8, align 4
  %11 = load i8*, i8** %5, align 8
  %12 = call i32 @strlen(i8* %11)
  store i32 %12, i32* %9, align 4
  store i32 0, i32* %10, align 4
  br label %13

13:                                               ; preds = %30, %3
  %14 = load i32, i32* %8, align 4
  %15 = load i32, i32* %9, align 4
  %16 = icmp ult i32 %14, %15
  br i1 %16, label %17, label %28

17:                                               ; preds = %13
  %18 = load i8*, i8** %6, align 8
  %19 = load i32, i32* %8, align 4
  %20 = add i32 %19, 1
  store i32 %20, i32* %8, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %18, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = sext i8 %23 to i32
  %25 = load i8, i8* @DELIM, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp ne i32 %24, %26
  br label %28

28:                                               ; preds = %17, %13
  %29 = phi i1 [ false, %13 ], [ %27, %17 ]
  br i1 %29, label %30, label %31

30:                                               ; preds = %28
  br label %13

31:                                               ; preds = %28
  %32 = load i32, i32* %8, align 4
  %33 = load i32, i32* @UNAME_LEN, align 4
  %34 = add nsw i32 %33, 1
  %35 = icmp ne i32 %32, %34
  br i1 %35, label %36, label %37

36:                                               ; preds = %31
  store i32 -1, i32* %4, align 4
  br label %98

37:                                               ; preds = %31
  %38 = load i8*, i8** @KEY_UNAME, align 8
  %39 = load i8*, i8** %6, align 8
  %40 = load i32, i32* %7, align 4
  %41 = call i32 @payload_get_offset_by_name(i8* %38, i8* %39, i32 %40)
  store i32 %41, i32* %10, align 4
  %42 = icmp eq i32 %41, -1
  br i1 %42, label %43, label %44

43:                                               ; preds = %37
  store i32 1, i32* %4, align 4
  br label %98

44:                                               ; preds = %37
  %45 = load i8*, i8** %6, align 8
  %46 = load i32, i32* %10, align 4
  %47 = load i8*, i8** @KEY_UNAME, align 8
  %48 = call i32 @strlen(i8* %47)
  %49 = add nsw i32 %46, %48
  %50 = add nsw i32 %49, 1
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %45, i64 %51
  %53 = load i8*, i8** %5, align 8
  %54 = load i32, i32* @UNAME_LEN, align 4
  %55 = call i32 @memmove(i8* %52, i8* %53, i32 %54)
  %56 = load i8*, i8** @KEY_PWD, align 8
  %57 = load i8*, i8** %6, align 8
  %58 = load i32, i32* %7, align 4
  %59 = call i32 @payload_get_offset_by_name(i8* %56, i8* %57, i32 %58)
  store i32 %59, i32* %10, align 4
  %60 = icmp eq i32 %59, -1
  br i1 %60, label %61, label %62

61:                                               ; preds = %44
  store i32 1, i32* %4, align 4
  br label %98

62:                                               ; preds = %44
  %63 = load i8*, i8** %6, align 8
  %64 = load i32, i32* %10, align 4
  %65 = load i8*, i8** @KEY_PWD, align 8
  %66 = call i32 @strlen(i8* %65)
  %67 = add nsw i32 %64, %66
  %68 = add nsw i32 %67, 1
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %63, i64 %69
  %71 = load i8*, i8** %5, align 8
  %72 = load i32, i32* @UNAME_LEN, align 4
  %73 = call i32 @memmove(i8* %70, i8* %71, i32 %72)
  %74 = load i8*, i8** @KEY_DOMAIN_0, align 8
  %75 = load i8*, i8** %6, align 8
  %76 = load i32, i32* %7, align 4
  %77 = call i32 @payload_get_offset_by_name(i8* %74, i8* %75, i32 %76)
  store i32 %77, i32* %10, align 4
  %78 = icmp eq i32 %77, -1
  br i1 %78, label %85, label %79

79:                                               ; preds = %62
  %80 = load i32, i32* %10, align 4
  %81 = load i32, i32* %9, align 4
  %82 = add i32 %80, %81
  %83 = load i32, i32* %7, align 4
  %84 = icmp uge i32 %82, %83
  br i1 %84, label %85, label %86

85:                                               ; preds = %79, %62
  store i32 1, i32* %4, align 4
  br label %98

86:                                               ; preds = %79
  %87 = load i8*, i8** %6, align 8
  %88 = load i32, i32* %10, align 4
  %89 = load i8*, i8** @KEY_DOMAIN_0, align 8
  %90 = call i32 @strlen(i8* %89)
  %91 = add nsw i32 %88, %90
  %92 = add nsw i32 %91, 1
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i8, i8* %87, i64 %93
  %95 = load i8*, i8** %5, align 8
  %96 = load i32, i32* %9, align 4
  %97 = call i32 @memmove(i8* %94, i8* %95, i32 %96)
  store i32 0, i32* %4, align 4
  br label %98

98:                                               ; preds = %86, %85, %61, %43, %36
  %99 = load i32, i32* %4, align 4
  ret i32 %99
}

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @payload_get_offset_by_name(i8*, i8*, i32) #1

declare dso_local i32 @memmove(i8*, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
