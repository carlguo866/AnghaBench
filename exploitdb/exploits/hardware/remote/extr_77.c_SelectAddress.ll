; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_77.c_SelectAddress.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_77.c_SelectAddress.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_6__ = type { i32, i32, i32, %struct.TYPE_5__* }
%struct.TYPE_5__ = type { i32, i32 }
%struct.TYPE_7__ = type { i32 }

@MAXADDRS = common dso_local global i32 0, align 4
@leak = common dso_local global %struct.TYPE_6__ zeroinitializer, align 8
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [50 x i8] c"ERROR: No addresses available. Unable to recover\0A\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c" Address 0x%08X (%u times)\0A\00", align 1
@LOW_COUNT_THR = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [38 x i8] c"Address 0x%08X count below threshold\0A\00", align 1
@cfg = common dso_local global %struct.TYPE_7__ zeroinitializer, align 4
@.str.3 = private unnamed_addr constant [36 x i8] c"Cleaned up, remaining addresses %u\0A\00", align 1
@.str.4 = private unnamed_addr constant [97 x i8] c"ERROR: No addresses left. Unable to recover\0AYou can try to decrease LOW_COUNT_THR in the source\0A\00", align 1
@RAND_MAX = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [54 x i8] c"Use pseudo-randomly selected address 0x%08X (0x%08X)\0A\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"Using last address 0x%08X\0A\00", align 1
@.str.7 = private unnamed_addr constant [40 x i8] c"Using smallest address 0x%08X (0x%08X)\0A\00", align 1
@.str.8 = private unnamed_addr constant [47 x i8] c"Using second smallest address 0x%08X (0x%08X)\0A\00", align 1
@.str.9 = private unnamed_addr constant [46 x i8] c"Using third smallest address 0x%08X (0x%08X)\0A\00", align 1
@.str.10 = private unnamed_addr constant [39 x i8] c"Using highest address 0x%08X (0x%08X)\0A\00", align 1
@.str.11 = private unnamed_addr constant [45 x i8] c"Using most frequent address 0x%08X (0x%08X)\0A\00", align 1
@.str.12 = private unnamed_addr constant [42 x i8] c"ERROR: unknown address strategy selected\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @SelectAddress() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.TYPE_5__, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = load i32, i32* @MAXADDRS, align 4
  %12 = zext i32 %11 to i64
  %13 = call i8* @llvm.stacksave()
  store i8* %13, i8** %7, align 8
  %14 = alloca %struct.TYPE_5__, i64 %12, align 16
  store i64 %12, i64* %8, align 8
  store i32 0, i32* %9, align 4
  %15 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @leak, i32 0, i32 0), align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %0
  %18 = load i32, i32* @stderr, align 4
  %19 = call i32 @fprintf(i32 %18, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0))
  store i32 0, i32* %1, align 4
  store i32 1, i32* %10, align 4
  br label %345

20:                                               ; preds = %0
  store i32 0, i32* %4, align 4
  br label %21

21:                                               ; preds = %39, %20
  %22 = load i32, i32* %4, align 4
  %23 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @leak, i32 0, i32 0), align 8
  %24 = icmp ult i32 %22, %23
  br i1 %24, label %25, label %42

25:                                               ; preds = %21
  %26 = load %struct.TYPE_5__*, %struct.TYPE_5__** getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @leak, i32 0, i32 3), align 8
  %27 = load i32, i32* %4, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %26, i64 %28
  %30 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %29, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = load %struct.TYPE_5__*, %struct.TYPE_5__** getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @leak, i32 0, i32 3), align 8
  %33 = load i32, i32* %4, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %32, i64 %34
  %36 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %35, i32 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i32 %31, i32 %37)
  br label %39

39:                                               ; preds = %25
  %40 = load i32, i32* %4, align 4
  %41 = add i32 %40, 1
  store i32 %41, i32* %4, align 4
  br label %21

42:                                               ; preds = %21
  %43 = bitcast %struct.TYPE_5__* %14 to %struct.TYPE_5__**
  %44 = mul nuw i64 8, %12
  %45 = trunc i64 %44 to i32
  %46 = call i32 @memset(%struct.TYPE_5__** %43, i32 0, i32 %45)
  store i32 0, i32* %4, align 4
  br label %47

47:                                               ; preds = %81, %42
  %48 = load i32, i32* %4, align 4
  %49 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @leak, i32 0, i32 0), align 8
  %50 = icmp ult i32 %48, %49
  br i1 %50, label %51, label %84

51:                                               ; preds = %47
  %52 = load %struct.TYPE_5__*, %struct.TYPE_5__** getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @leak, i32 0, i32 3), align 8
  %53 = load i32, i32* %4, align 4
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %52, i64 %54
  %56 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %55, i32 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = sext i32 %57 to i64
  %59 = load i64, i64* @LOW_COUNT_THR, align 8
  %60 = icmp slt i64 %58, %59
  br i1 %60, label %61, label %69

61:                                               ; preds = %51
  %62 = load %struct.TYPE_5__*, %struct.TYPE_5__** getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @leak, i32 0, i32 3), align 8
  %63 = load i32, i32* %4, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %62, i64 %64
  %66 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %65, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 %67)
  br label %81

69:                                               ; preds = %51
  %70 = load i32, i32* %9, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %71
  %73 = load %struct.TYPE_5__*, %struct.TYPE_5__** getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @leak, i32 0, i32 3), align 8
  %74 = load i32, i32* %4, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %73, i64 %75
  %77 = bitcast %struct.TYPE_5__* %72 to i8*
  %78 = bitcast %struct.TYPE_5__* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 4 %78, i64 8, i1 false)
  %79 = load i32, i32* %9, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %9, align 4
  br label %81

81:                                               ; preds = %69, %61
  %82 = load i32, i32* %4, align 4
  %83 = add i32 %82, 1
  store i32 %83, i32* %4, align 4
  br label %47

84:                                               ; preds = %47
  %85 = load i32, i32* getelementptr inbounds (%struct.TYPE_7__, %struct.TYPE_7__* @cfg, i32 0, i32 0), align 4
  %86 = icmp ne i32 %85, 132
  br i1 %86, label %87, label %144

87:                                               ; preds = %84
  store i32 0, i32* %4, align 4
  br label %88

88:                                               ; preds = %140, %87
  %89 = load i32, i32* %4, align 4
  %90 = load i32, i32* %9, align 4
  %91 = sub i32 %90, 1
  %92 = icmp ult i32 %89, %91
  br i1 %92, label %93, label %143

93:                                               ; preds = %88
  store i32 0, i32* %5, align 4
  br label %94

94:                                               ; preds = %136, %93
  %95 = load i32, i32* %5, align 4
  %96 = load i32, i32* %9, align 4
  %97 = sub i32 %96, 1
  %98 = load i32, i32* %4, align 4
  %99 = sub i32 %97, %98
  %100 = icmp ult i32 %95, %99
  br i1 %100, label %101, label %139

101:                                              ; preds = %94
  %102 = load i32, i32* %5, align 4
  %103 = add i32 %102, 1
  %104 = zext i32 %103 to i64
  %105 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %104
  %106 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %105, i32 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = load i32, i32* %5, align 4
  %109 = zext i32 %108 to i64
  %110 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %109
  %111 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %110, i32 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp ult i32 %107, %112
  br i1 %113, label %114, label %135

114:                                              ; preds = %101
  %115 = load i32, i32* %5, align 4
  %116 = zext i32 %115 to i64
  %117 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %116
  %118 = bitcast %struct.TYPE_5__* %6 to i8*
  %119 = bitcast %struct.TYPE_5__* %117 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %118, i8* align 8 %119, i64 8, i1 false)
  %120 = load i32, i32* %5, align 4
  %121 = zext i32 %120 to i64
  %122 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %121
  %123 = load i32, i32* %5, align 4
  %124 = add i32 %123, 1
  %125 = zext i32 %124 to i64
  %126 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %125
  %127 = bitcast %struct.TYPE_5__* %122 to i8*
  %128 = bitcast %struct.TYPE_5__* %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* align 8 %128, i64 8, i1 false)
  %129 = load i32, i32* %5, align 4
  %130 = add i32 %129, 1
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %131
  %133 = bitcast %struct.TYPE_5__* %132 to i8*
  %134 = bitcast %struct.TYPE_5__* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 4 %134, i64 8, i1 false)
  br label %135

135:                                              ; preds = %114, %101
  br label %136

136:                                              ; preds = %135
  %137 = load i32, i32* %5, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %5, align 4
  br label %94

139:                                              ; preds = %94
  br label %140

140:                                              ; preds = %139
  %141 = load i32, i32* %4, align 4
  %142 = add i32 %141, 1
  store i32 %142, i32* %4, align 4
  br label %88

143:                                              ; preds = %88
  br label %201

144:                                              ; preds = %84
  store i32 0, i32* %4, align 4
  br label %145

145:                                              ; preds = %197, %144
  %146 = load i32, i32* %4, align 4
  %147 = load i32, i32* %9, align 4
  %148 = sub i32 %147, 1
  %149 = icmp ult i32 %146, %148
  br i1 %149, label %150, label %200

150:                                              ; preds = %145
  store i32 0, i32* %5, align 4
  br label %151

151:                                              ; preds = %193, %150
  %152 = load i32, i32* %5, align 4
  %153 = load i32, i32* %9, align 4
  %154 = sub i32 %153, 1
  %155 = load i32, i32* %4, align 4
  %156 = sub i32 %154, %155
  %157 = icmp ult i32 %152, %156
  br i1 %157, label %158, label %196

158:                                              ; preds = %151
  %159 = load i32, i32* %5, align 4
  %160 = add i32 %159, 1
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %161
  %163 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %162, i32 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = load i32, i32* %5, align 4
  %166 = zext i32 %165 to i64
  %167 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %166
  %168 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %167, i32 0, i32 1
  %169 = load i32, i32* %168, align 4
  %170 = icmp slt i32 %164, %169
  br i1 %170, label %171, label %192

171:                                              ; preds = %158
  %172 = load i32, i32* %5, align 4
  %173 = zext i32 %172 to i64
  %174 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %173
  %175 = bitcast %struct.TYPE_5__* %6 to i8*
  %176 = bitcast %struct.TYPE_5__* %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 8 %176, i64 8, i1 false)
  %177 = load i32, i32* %5, align 4
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %178
  %180 = load i32, i32* %5, align 4
  %181 = add i32 %180, 1
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %182
  %184 = bitcast %struct.TYPE_5__* %179 to i8*
  %185 = bitcast %struct.TYPE_5__* %183 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %184, i8* align 8 %185, i64 8, i1 false)
  %186 = load i32, i32* %5, align 4
  %187 = add i32 %186, 1
  %188 = zext i32 %187 to i64
  %189 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %188
  %190 = bitcast %struct.TYPE_5__* %189 to i8*
  %191 = bitcast %struct.TYPE_5__* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %190, i8* align 4 %191, i64 8, i1 false)
  br label %192

192:                                              ; preds = %171, %158
  br label %193

193:                                              ; preds = %192
  %194 = load i32, i32* %5, align 4
  %195 = add i32 %194, 1
  store i32 %195, i32* %5, align 4
  br label %151

196:                                              ; preds = %151
  br label %197

197:                                              ; preds = %196
  %198 = load i32, i32* %4, align 4
  %199 = add i32 %198, 1
  store i32 %199, i32* %4, align 4
  br label %145

200:                                              ; preds = %145
  br label %201

201:                                              ; preds = %200, %143
  %202 = load i32, i32* %9, align 4
  %203 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.3, i64 0, i64 0), i32 %202)
  %204 = load i32, i32* %9, align 4
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %209

206:                                              ; preds = %201
  %207 = load i32, i32* @stderr, align 4
  %208 = call i32 @fprintf(i32 %207, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.4, i64 0, i64 0))
  store i32 0, i32* %1, align 4
  store i32 1, i32* %10, align 4
  br label %345

209:                                              ; preds = %201
  store i32 0, i32* %4, align 4
  br label %210

210:                                              ; preds = %226, %209
  %211 = load i32, i32* %4, align 4
  %212 = load i32, i32* %9, align 4
  %213 = icmp ult i32 %211, %212
  br i1 %213, label %214, label %229

214:                                              ; preds = %210
  %215 = load i32, i32* %4, align 4
  %216 = zext i32 %215 to i64
  %217 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %216
  %218 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %217, i32 0, i32 0
  %219 = load i32, i32* %218, align 8
  %220 = load i32, i32* %4, align 4
  %221 = zext i32 %220 to i64
  %222 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %221
  %223 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %222, i32 0, i32 1
  %224 = load i32, i32* %223, align 4
  %225 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i32 %219, i32 %224)
  br label %226

226:                                              ; preds = %214
  %227 = load i32, i32* %4, align 4
  %228 = add i32 %227, 1
  store i32 %228, i32* %4, align 4
  br label %210

229:                                              ; preds = %210
  %230 = load i32, i32* getelementptr inbounds (%struct.TYPE_7__, %struct.TYPE_7__* @cfg, i32 0, i32 0), align 4
  switch i32 %230, label %340 [
    i32 129, label %231
    i32 130, label %259
    i32 128, label %265
    i32 131, label %306
    i32 132, label %323
  ]

231:                                              ; preds = %229
  %232 = call i64 @time(i32* null)
  %233 = call i32 @srand(i64 %232)
  %234 = load i32, i32* %9, align 4
  %235 = uitofp i32 %234 to float
  %236 = fsub float %235, 1.000000e+00
  %237 = call float (...) @rand()
  %238 = fmul float %236, %237
  %239 = fpext float %238 to double
  %240 = load i32, i32* @RAND_MAX, align 4
  %241 = sitofp i32 %240 to double
  %242 = fadd double %241, 1.000000e+00
  %243 = fdiv double %239, %242
  %244 = fptosi double %243 to i32
  store i32 %244, i32* %3, align 4
  %245 = load i32, i32* %3, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %246
  %248 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %247, i32 0, i32 0
  %249 = load i32, i32* %248, align 8
  %250 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @leak, i32 0, i32 1), align 4
  %251 = add i32 %249, %250
  store i32 %251, i32* %2, align 4
  %252 = load i32, i32* %2, align 4
  %253 = load i32, i32* %3, align 4
  %254 = sext i32 %253 to i64
  %255 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %254
  %256 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %255, i32 0, i32 0
  %257 = load i32, i32* %256, align 8
  %258 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5, i64 0, i64 0), i32 %252, i32 %257)
  br label %343

259:                                              ; preds = %229
  %260 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @leak, i32 0, i32 2), align 8
  %261 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @leak, i32 0, i32 1), align 4
  %262 = add i32 %260, %261
  store i32 %262, i32* %2, align 4
  %263 = load i32, i32* %2, align 4
  %264 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i32 %263)
  br label %343

265:                                              ; preds = %229
  %266 = load i32, i32* %9, align 4
  %267 = icmp eq i32 %266, 1
  br i1 %267, label %268, label %279

268:                                              ; preds = %265
  %269 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 0
  %270 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %269, i32 0, i32 0
  %271 = load i32, i32* %270, align 16
  %272 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @leak, i32 0, i32 1), align 4
  %273 = add i32 %271, %272
  store i32 %273, i32* %2, align 4
  %274 = load i32, i32* %2, align 4
  %275 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 0
  %276 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %275, i32 0, i32 0
  %277 = load i32, i32* %276, align 16
  %278 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.7, i64 0, i64 0), i32 %274, i32 %277)
  br label %305

279:                                              ; preds = %265
  %280 = load i32, i32* %9, align 4
  %281 = icmp eq i32 %280, 2
  br i1 %281, label %282, label %293

282:                                              ; preds = %279
  %283 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 1
  %284 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %283, i32 0, i32 0
  %285 = load i32, i32* %284, align 8
  %286 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @leak, i32 0, i32 1), align 4
  %287 = add i32 %285, %286
  store i32 %287, i32* %2, align 4
  %288 = load i32, i32* %2, align 4
  %289 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 1
  %290 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %289, i32 0, i32 0
  %291 = load i32, i32* %290, align 8
  %292 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.8, i64 0, i64 0), i32 %288, i32 %291)
  br label %304

293:                                              ; preds = %279
  %294 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 2
  %295 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %294, i32 0, i32 0
  %296 = load i32, i32* %295, align 16
  %297 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @leak, i32 0, i32 1), align 4
  %298 = add i32 %296, %297
  store i32 %298, i32* %2, align 4
  %299 = load i32, i32* %2, align 4
  %300 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 2
  %301 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %300, i32 0, i32 0
  %302 = load i32, i32* %301, align 16
  %303 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.9, i64 0, i64 0), i32 %299, i32 %302)
  br label %304

304:                                              ; preds = %293, %282
  br label %305

305:                                              ; preds = %304, %268
  br label %343

306:                                              ; preds = %229
  %307 = load i32, i32* %9, align 4
  %308 = sub i32 %307, 1
  %309 = zext i32 %308 to i64
  %310 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %309
  %311 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %310, i32 0, i32 0
  %312 = load i32, i32* %311, align 8
  %313 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @leak, i32 0, i32 1), align 4
  %314 = add i32 %312, %313
  store i32 %314, i32* %2, align 4
  %315 = load i32, i32* %2, align 4
  %316 = load i32, i32* %9, align 4
  %317 = sub i32 %316, 1
  %318 = zext i32 %317 to i64
  %319 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %318
  %320 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %319, i32 0, i32 0
  %321 = load i32, i32* %320, align 8
  %322 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.10, i64 0, i64 0), i32 %315, i32 %321)
  br label %343

323:                                              ; preds = %229
  %324 = load i32, i32* %9, align 4
  %325 = sub i32 %324, 1
  %326 = zext i32 %325 to i64
  %327 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %326
  %328 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %327, i32 0, i32 0
  %329 = load i32, i32* %328, align 8
  %330 = load i32, i32* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @leak, i32 0, i32 1), align 4
  %331 = add i32 %329, %330
  store i32 %331, i32* %2, align 4
  %332 = load i32, i32* %2, align 4
  %333 = load i32, i32* %9, align 4
  %334 = sub i32 %333, 1
  %335 = zext i32 %334 to i64
  %336 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %14, i64 %335
  %337 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %336, i32 0, i32 0
  %338 = load i32, i32* %337, align 8
  %339 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.11, i64 0, i64 0), i32 %332, i32 %338)
  br label %343

340:                                              ; preds = %229
  %341 = load i32, i32* @stderr, align 4
  %342 = call i32 @fprintf(i32 %341, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.12, i64 0, i64 0))
  store i32 0, i32* %1, align 4
  store i32 1, i32* %10, align 4
  br label %345

343:                                              ; preds = %323, %306, %305, %259, %231
  %344 = load i32, i32* %2, align 4
  store i32 %344, i32* %1, align 4
  store i32 1, i32* %10, align 4
  br label %345

345:                                              ; preds = %343, %340, %206, %17
  %346 = load i8*, i8** %7, align 8
  call void @llvm.stackrestore(i8* %346)
  %347 = load i32, i32* %1, align 4
  ret i32 %347
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @fprintf(i32, i8*) #2

declare dso_local i32 @printf(i8*, i32, ...) #2

declare dso_local i32 @memset(%struct.TYPE_5__**, i32, i32) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local i32 @srand(i64) #2

declare dso_local i64 @time(i32*) #2

declare dso_local float @rand(...) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
