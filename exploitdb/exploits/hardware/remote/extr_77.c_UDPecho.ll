; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_77.c_UDPecho.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_77.c_UDPecho.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_13__ = type { %struct.TYPE_9__ }
%struct.TYPE_9__ = type { i8 }
%struct.TYPE_14__ = type { i8, i32, i32 }
%struct.TYPE_12__ = type { i32, i32, i32, i32, i8*, %struct.TYPE_10__, %struct.TYPE_8__, i32 }
%struct.TYPE_10__ = type { i32 }
%struct.TYPE_8__ = type { i32 }
%struct.TYPE_11__ = type { i8*, i8*, i8* }

@IPPROTO_UDP = common dso_local global i32 0, align 4
@packet_ifconfig = common dso_local global %struct.TYPE_13__ zeroinitializer, align 1
@IP_ADDR_LEN = common dso_local global i32 0, align 4
@cfg = common dso_local global %struct.TYPE_14__ zeroinitializer, align 4
@LOCALPORT = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @UDPecho(i32* %0, i8* %1, i32 %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca %struct.TYPE_12__*, align 8
  %9 = alloca %struct.TYPE_11__*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 %2, i32* %6, align 4
  %13 = load i32, i32* %6, align 4
  %14 = zext i32 %13 to i64
  %15 = add i64 64, %14
  %16 = trunc i64 %15 to i32
  %17 = load i32*, i32** %4, align 8
  store i32 %16, i32* %17, align 4
  %18 = load i32*, i32** %4, align 8
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, 10
  %21 = call i8* @smalloc(i32 %20)
  store i8* %21, i8** %7, align 8
  %22 = load i8*, i8** %7, align 8
  %23 = bitcast i8* %22 to %struct.TYPE_12__*
  store %struct.TYPE_12__* %23, %struct.TYPE_12__** %8, align 8
  %24 = load %struct.TYPE_12__*, %struct.TYPE_12__** %8, align 8
  %25 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %24, i32 0, i32 0
  store i32 4, i32* %25, align 8
  %26 = load %struct.TYPE_12__*, %struct.TYPE_12__** %8, align 8
  %27 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %26, i32 0, i32 1
  store i32 10, i32* %27, align 4
  %28 = load %struct.TYPE_12__*, %struct.TYPE_12__** %8, align 8
  %29 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %28, i32 0, i32 2
  store i32 128, i32* %29, align 8
  %30 = load i32, i32* @IPPROTO_UDP, align 4
  %31 = load %struct.TYPE_12__*, %struct.TYPE_12__** %8, align 8
  %32 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %31, i32 0, i32 7
  store i32 %30, i32* %32, align 8
  %33 = load %struct.TYPE_12__*, %struct.TYPE_12__** %8, align 8
  %34 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %33, i32 0, i32 6
  %35 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %34, i32 0, i32 0
  %36 = load i32, i32* @IP_ADDR_LEN, align 4
  %37 = call i32 @memcpy(i32* %35, i8* getelementptr inbounds (%struct.TYPE_13__, %struct.TYPE_13__* @packet_ifconfig, i32 0, i32 0, i32 0), i32 %36)
  %38 = load %struct.TYPE_12__*, %struct.TYPE_12__** %8, align 8
  %39 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %38, i32 0, i32 5
  %40 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %39, i32 0, i32 0
  %41 = load i32, i32* @IP_ADDR_LEN, align 4
  %42 = call i32 @memcpy(i32* %40, i8* getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @cfg, i32 0, i32 0), i32 %41)
  %43 = load %struct.TYPE_12__*, %struct.TYPE_12__** %8, align 8
  %44 = bitcast %struct.TYPE_12__* %43 to i8*
  %45 = getelementptr i8, i8* %44, i64 40
  %46 = bitcast i8* %45 to %struct.TYPE_11__*
  store %struct.TYPE_11__* %46, %struct.TYPE_11__** %9, align 8
  %47 = load i32, i32* @LOCALPORT, align 4
  %48 = call i8* @htons(i32 %47)
  %49 = load %struct.TYPE_11__*, %struct.TYPE_11__** %9, align 8
  %50 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %49, i32 0, i32 2
  store i8* %48, i8** %50, align 8
  %51 = call i8* @htons(i32 7)
  %52 = load %struct.TYPE_11__*, %struct.TYPE_11__** %9, align 8
  %53 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %52, i32 0, i32 1
  store i8* %51, i8** %53, align 8
  %54 = load i32, i32* getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @cfg, i32 0, i32 1), align 4
  %55 = call i8* @htons(i32 %54)
  %56 = load %struct.TYPE_11__*, %struct.TYPE_11__** %9, align 8
  %57 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %56, i32 0, i32 0
  store i8* %55, i8** %57, align 8
  %58 = load %struct.TYPE_11__*, %struct.TYPE_11__** %9, align 8
  %59 = bitcast %struct.TYPE_11__* %58 to i8*
  %60 = getelementptr i8, i8* %59, i64 24
  %61 = bitcast i8* %60 to i32*
  store i32* %61, i32** %10, align 8
  %62 = load i32*, i32** %10, align 8
  store i32* %62, i32** %11, align 8
  %63 = load i32*, i32** %10, align 8
  %64 = load i8*, i8** %5, align 8
  %65 = load i32, i32* %6, align 4
  %66 = call i32 @memcpy(i32* %63, i8* %64, i32 %65)
  %67 = load i32, i32* %6, align 4
  %68 = load i32*, i32** %11, align 8
  %69 = zext i32 %67 to i64
  %70 = getelementptr inbounds i32, i32* %68, i64 %69
  store i32* %70, i32** %11, align 8
  %71 = load i32*, i32** %4, align 8
  %72 = load i32, i32* %71, align 4
  %73 = call i8* @htons(i32 %72)
  %74 = load %struct.TYPE_12__*, %struct.TYPE_12__** %8, align 8
  %75 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %74, i32 0, i32 4
  store i8* %73, i8** %75, align 8
  %76 = load %struct.TYPE_12__*, %struct.TYPE_12__** %8, align 8
  %77 = bitcast %struct.TYPE_12__* %76 to i32*
  %78 = call i32 @chksum(i32* %77, i32 40)
  store i32 %78, i32* %12, align 4
  %79 = load i32, i32* %12, align 4
  %80 = load %struct.TYPE_12__*, %struct.TYPE_12__** %8, align 8
  %81 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %80, i32 0, i32 3
  store i32 %79, i32* %81, align 4
  %82 = load i32, i32* getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @cfg, i32 0, i32 2), align 4
  %83 = icmp sgt i32 %82, 1
  br i1 %83, label %84, label %89

84:                                               ; preds = %3
  %85 = load i8*, i8** %7, align 8
  %86 = load i32*, i32** %4, align 8
  %87 = load i32, i32* %86, align 4
  %88 = call i32 @hexdump(i8* %85, i32 %87)
  br label %89

89:                                               ; preds = %84, %3
  %90 = load i8*, i8** %7, align 8
  ret i8* %90
}

declare dso_local i8* @smalloc(i32) #1

declare dso_local i32 @memcpy(i32*, i8*, i32) #1

declare dso_local i8* @htons(i32) #1

declare dso_local i32 @chksum(i32*, i32) #1

declare dso_local i32 @hexdump(i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
