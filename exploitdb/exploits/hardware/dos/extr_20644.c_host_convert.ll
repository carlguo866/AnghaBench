; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/hardware/dos/extr_20644.c_host_convert.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/hardware/dos/extr_20644.c_host_convert.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.in_addr = type { i32 }
%struct.hostent = type { i32, i32 }

@host_convert.i = internal global %struct.in_addr zeroinitializer, align 4
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [19 x i8] c"cannot resolve %s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @host_convert(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca %struct.hostent*, align 8
  store i8* %0, i8** %2, align 8
  %4 = load i8*, i8** %2, align 8
  %5 = call i32 @inet_addr(i8* %4)
  store i32 %5, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @host_convert.i, i32 0, i32 0), align 4
  %6 = load i32, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @host_convert.i, i32 0, i32 0), align 4
  %7 = icmp eq i32 %6, -1
  br i1 %7, label %8, label %26

8:                                                ; preds = %1
  %9 = load i8*, i8** %2, align 8
  %10 = call %struct.hostent* @gethostbyname(i8* %9)
  store %struct.hostent* %10, %struct.hostent** %3, align 8
  %11 = load %struct.hostent*, %struct.hostent** %3, align 8
  %12 = icmp eq %struct.hostent* %11, null
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = load i32, i32* @stderr, align 4
  %15 = load i8*, i8** %2, align 8
  %16 = call i32 @fprintf(i32 %14, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* %15)
  %17 = call i32 @exit(i32 0) #3
  unreachable

18:                                               ; preds = %8
  %19 = load %struct.hostent*, %struct.hostent** %3, align 8
  %20 = getelementptr inbounds %struct.hostent, %struct.hostent* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = load %struct.hostent*, %struct.hostent** %3, align 8
  %23 = getelementptr inbounds %struct.hostent, %struct.hostent* %22, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = call i32 @bcopy(i32 %21, i8* bitcast (%struct.in_addr* @host_convert.i to i8*), i32 %24)
  br label %26

26:                                               ; preds = %18, %1
  %27 = load i32, i32* getelementptr inbounds (%struct.in_addr, %struct.in_addr* @host_convert.i, i32 0, i32 0), align 4
  ret i32 %27
}

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

declare dso_local i32 @fprintf(i32, i8*, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @bcopy(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
