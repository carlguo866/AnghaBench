; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/hardware/dos/extr_43317.c_class2ip.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/hardware/dos/extr_43317.c_class2ip.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@class2ip.ip = internal global [16 x i8] zeroinitializer, align 16
@.str = private unnamed_addr constant [12 x i8] c"%s.%d.%d.%d\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"%s.%d.%d\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"%s.%d\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @class2ip(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  store i32 0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %5

5:                                                ; preds = %25, %1
  %6 = load i8*, i8** %2, align 8
  %7 = load i32, i32* %3, align 4
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds i8, i8* %6, i64 %8
  %10 = load i8, i8* %9, align 1
  %11 = sext i8 %10 to i32
  %12 = icmp ne i32 %11, 1481920381
  br i1 %12, label %13, label %28

13:                                               ; preds = %5
  %14 = load i8*, i8** %2, align 8
  %15 = load i32, i32* %3, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp eq i32 %19, 46
  br i1 %20, label %21, label %24

21:                                               ; preds = %13
  %22 = load i32, i32* %4, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* %4, align 4
  br label %24

24:                                               ; preds = %21, %13
  br label %25

25:                                               ; preds = %24
  %26 = load i32, i32* %3, align 4
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* %3, align 4
  br label %5

28:                                               ; preds = %5
  %29 = load i32, i32* %4, align 4
  switch i32 %29, label %45 [
    i32 0, label %30
    i32 1, label %36
    i32 2, label %41
  ]

30:                                               ; preds = %28
  %31 = load i8*, i8** %2, align 8
  %32 = call i32 (...) @RANDOM()
  %33 = call i32 (...) @RANDOM()
  %34 = call i32 (...) @RANDOM()
  %35 = call i32 (i8*, i8*, i8*, i32, ...) @sprintf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @class2ip.ip, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* %31, i32 %32, i32 %33, i32 %34)
  br label %48

36:                                               ; preds = %28
  %37 = load i8*, i8** %2, align 8
  %38 = call i32 (...) @RANDOM()
  %39 = call i32 (...) @RANDOM()
  %40 = call i32 (i8*, i8*, i8*, i32, ...) @sprintf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @class2ip.ip, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i8* %37, i32 %38, i32 %39)
  br label %48

41:                                               ; preds = %28
  %42 = load i8*, i8** %2, align 8
  %43 = call i32 (...) @RANDOM()
  %44 = call i32 (i8*, i8*, i8*, i32, ...) @sprintf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @class2ip.ip, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i8* %42, i32 %43)
  br label %48

45:                                               ; preds = %28
  %46 = load i8*, i8** %2, align 8
  %47 = call i32 @strncpy(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @class2ip.ip, i64 0, i64 0), i8* %46, i32 16)
  br label %48

48:                                               ; preds = %45, %41, %36, %30
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @class2ip.ip, i64 0, i64 0)
}

declare dso_local i32 @sprintf(i8*, i8*, i8*, i32, ...) #1

declare dso_local i32 @RANDOM(...) #1

declare dso_local i32 @strncpy(i8*, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
