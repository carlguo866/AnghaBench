; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/hardware/dos/extr_60.c_in_cksum.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/hardware/dos/extr_60.c_in_cksum.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @in_cksum(i16* %0, i32 %1, i32 %2) #0 {
  %4 = alloca i16*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca i16*, align 8
  %10 = alloca i32, align 4
  store i16* %0, i16** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %11 = load i32, i32* %6, align 4
  store i32 %11, i32* %7, align 4
  store i16 0, i16* %8, align 2
  %12 = load i16*, i16** %4, align 8
  store i16* %12, i16** %9, align 8
  %13 = load i32, i32* %5, align 4
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %17, %3
  %15 = load i32, i32* %10, align 4
  %16 = icmp sgt i32 %15, 1
  br i1 %16, label %17, label %26

17:                                               ; preds = %14
  %18 = load i16*, i16** %9, align 8
  %19 = getelementptr inbounds i16, i16* %18, i32 1
  store i16* %19, i16** %9, align 8
  %20 = load i16, i16* %18, align 2
  %21 = zext i16 %20 to i32
  %22 = load i32, i32* %7, align 4
  %23 = add nsw i32 %22, %21
  store i32 %23, i32* %7, align 4
  %24 = load i32, i32* %10, align 4
  %25 = sub nsw i32 %24, 2
  store i32 %25, i32* %10, align 4
  br label %14

26:                                               ; preds = %14
  %27 = load i32, i32* %10, align 4
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %41

29:                                               ; preds = %26
  %30 = load i16*, i16** %9, align 8
  %31 = bitcast i16* %30 to i8*
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = shl i32 %33, 8
  %35 = trunc i32 %34 to i8
  %36 = call i64 @htons(i8 zeroext %35)
  %37 = load i32, i32* %7, align 4
  %38 = sext i32 %37 to i64
  %39 = add nsw i64 %38, %36
  %40 = trunc i64 %39 to i32
  store i32 %40, i32* %7, align 4
  br label %41

41:                                               ; preds = %29, %26
  %42 = load i32, i32* %7, align 4
  %43 = ashr i32 %42, 16
  %44 = load i32, i32* %7, align 4
  %45 = and i32 %44, 65535
  %46 = add nsw i32 %43, %45
  store i32 %46, i32* %7, align 4
  %47 = load i32, i32* %7, align 4
  %48 = ashr i32 %47, 16
  %49 = load i32, i32* %7, align 4
  %50 = add nsw i32 %49, %48
  store i32 %50, i32* %7, align 4
  %51 = load i32, i32* %7, align 4
  %52 = xor i32 %51, -1
  %53 = trunc i32 %52 to i16
  store i16 %53, i16* %8, align 2
  %54 = load i16, i16* %8, align 2
  %55 = zext i16 %54 to i32
  ret i32 %55
}

declare dso_local i64 @htons(i8 zeroext) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
