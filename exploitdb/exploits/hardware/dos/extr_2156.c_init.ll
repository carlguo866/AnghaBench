; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/hardware/dos/extr_2156.c_init.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/hardware/dos/extr_2156.c_init.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@from = common dso_local global i32 0, align 4
@to = common dso_local global i32 0, align 4
@subject = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @init(i8* %0, i32* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32*, align 8
  store i8* %0, i8** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = getelementptr inbounds i32, i32* %6, i64 1
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %5, i64 %9
  %11 = call i32 @memset(i8* %10, i8 signext 32, i32 56)
  %12 = load i8*, i8** %3, align 8
  %13 = load i32*, i32** %4, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 1
  %15 = load i32, i32* %14, align 4
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, i8* %12, i64 %16
  %18 = load i32, i32* @from, align 4
  %19 = load i32, i32* @from, align 4
  %20 = call i32 @strlen(i32 %19)
  %21 = icmp slt i32 %20, 57
  br i1 %21, label %22, label %25

22:                                               ; preds = %2
  %23 = load i32, i32* @from, align 4
  %24 = call i32 @strlen(i32 %23)
  br label %26

25:                                               ; preds = %2
  br label %26

26:                                               ; preds = %25, %22
  %27 = phi i32 [ %24, %22 ], [ 56, %25 ]
  %28 = call i32 @memcpy(i8* %17, i32 %18, i32 %27)
  %29 = load i8*, i8** %3, align 8
  %30 = load i32*, i32** %4, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 2
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %29, i64 %33
  %35 = call i32 @memset(i8* %34, i8 signext 32, i32 56)
  %36 = load i8*, i8** %3, align 8
  %37 = load i32*, i32** %4, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 2
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %36, i64 %40
  %42 = load i32, i32* @to, align 4
  %43 = load i32, i32* @to, align 4
  %44 = call i32 @strlen(i32 %43)
  %45 = icmp slt i32 %44, 57
  br i1 %45, label %46, label %49

46:                                               ; preds = %26
  %47 = load i32, i32* @to, align 4
  %48 = call i32 @strlen(i32 %47)
  br label %50

49:                                               ; preds = %26
  br label %50

50:                                               ; preds = %49, %46
  %51 = phi i32 [ %48, %46 ], [ 56, %49 ]
  %52 = call i32 @memcpy(i8* %41, i32 %42, i32 %51)
  %53 = load i8*, i8** %3, align 8
  %54 = load i32*, i32** %4, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 3
  %56 = load i32, i32* %55, align 4
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %53, i64 %57
  %59 = call i32 @memset(i8* %58, i8 signext 32, i32 56)
  %60 = load i8*, i8** %3, align 8
  %61 = load i32*, i32** %4, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 3
  %63 = load i32, i32* %62, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8, i8* %60, i64 %64
  %66 = load i32, i32* @subject, align 4
  %67 = load i32, i32* @subject, align 4
  %68 = call i32 @strlen(i32 %67)
  %69 = icmp slt i32 %68, 57
  br i1 %69, label %70, label %73

70:                                               ; preds = %50
  %71 = load i32, i32* @subject, align 4
  %72 = call i32 @strlen(i32 %71)
  br label %74

73:                                               ; preds = %50
  br label %74

74:                                               ; preds = %73, %70
  %75 = phi i32 [ %72, %70 ], [ 56, %73 ]
  %76 = call i32 @memcpy(i8* %65, i32 %66, i32 %75)
  ret void
}

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i32 @memcpy(i8*, i32, i32) #1

declare dso_local i32 @strlen(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
