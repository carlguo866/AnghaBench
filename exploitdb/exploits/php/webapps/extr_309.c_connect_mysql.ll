; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_309.c_connect_mysql.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_309.c_connect_mysql.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i32, i32, i32 }
%struct.hostent = type { i32, i32 }
%struct.sockaddr = type { i32 }

@HOSTNAME = common dso_local global i32 0, align 4
@AF_INET = common dso_local global i32 0, align 4
@MYSQL_PORT = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [9 x i8] c"Socket: \00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"connect()\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @connect_mysql() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.sockaddr_in, align 4
  %3 = alloca %struct.hostent*, align 8
  %4 = load i32, i32* @HOSTNAME, align 4
  %5 = call %struct.hostent* @gethostbyname(i32 %4)
  store %struct.hostent* %5, %struct.hostent** %3, align 8
  %6 = load %struct.hostent*, %struct.hostent** %3, align 8
  %7 = getelementptr inbounds %struct.hostent, %struct.hostent* %6, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %2, i32 0, i32 2
  %10 = bitcast i32* %9 to i8*
  %11 = load %struct.hostent*, %struct.hostent** %3, align 8
  %12 = getelementptr inbounds %struct.hostent, %struct.hostent* %11, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = call i32 @bcopy(i32 %8, i8* %10, i32 %13)
  %15 = load i32, i32* @AF_INET, align 4
  %16 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %2, i32 0, i32 1
  store i32 %15, i32* %16, align 4
  %17 = load i32, i32* @MYSQL_PORT, align 4
  %18 = call i32 @htons(i32 %17)
  %19 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %2, i32 0, i32 0
  store i32 %18, i32* %19, align 4
  %20 = load i32, i32* @AF_INET, align 4
  %21 = load i32, i32* @SOCK_STREAM, align 4
  %22 = call i32 @socket(i32 %20, i32 %21, i32 0)
  store i32 %22, i32* %1, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %0
  %25 = call i32 @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0))
  br label %26

26:                                               ; preds = %24, %0
  %27 = load i32, i32* %1, align 4
  %28 = bitcast %struct.sockaddr_in* %2 to %struct.sockaddr*
  %29 = call i64 @connect(i32 %27, %struct.sockaddr* %28, i32 12)
  %30 = icmp slt i64 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %26
  %32 = call i32 @perror(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0))
  br label %33

33:                                               ; preds = %31, %26
  %34 = load i32, i32* %1, align 4
  ret i32 %34
}

declare dso_local %struct.hostent* @gethostbyname(i32) #1

declare dso_local i32 @bcopy(i32, i8*, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
