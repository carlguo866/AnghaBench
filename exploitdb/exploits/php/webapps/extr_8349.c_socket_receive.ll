; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_8349.c_socket_receive.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_8349.c_socket_receive.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timeval = type { i32, i64 }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @socket_receive(i32 %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca %struct.timeval, align 8
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  %12 = call i32 @FD_ZERO(i32* %6)
  %13 = load i32, i32* %4, align 4
  %14 = call i32 @FD_SET(i32 %13, i32* %6)
  %15 = load i32, i32* %5, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %2
  %18 = load i32, i32* %5, align 4
  %19 = getelementptr inbounds %struct.timeval, %struct.timeval* %11, i32 0, i32 0
  store i32 %18, i32* %19, align 8
  %20 = getelementptr inbounds %struct.timeval, %struct.timeval* %11, i32 0, i32 1
  store i64 0, i64* %20, align 8
  br label %21

21:                                               ; preds = %17, %2
  %22 = load i32, i32* %4, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  store i8* null, i8** %3, align 8
  br label %87

25:                                               ; preds = %21
  %26 = call i64 @calloc(i32 0, i32 1)
  %27 = inttoptr i64 %26 to i8*
  store i8* %27, i8** %9, align 8
  %28 = icmp ne i8* %27, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %25
  store i8* null, i8** %3, align 8
  br label %87

30:                                               ; preds = %25
  br label %31

31:                                               ; preds = %30, %76
  %32 = load i32, i32* %5, align 4
  %33 = icmp sgt i32 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %31
  %35 = load i32, i32* %4, align 4
  %36 = add nsw i32 %35, 1
  %37 = call i32 @select(i32 %36, i32* %6, i32* null, i32* null, %struct.timeval* %11)
  store i32 %37, i32* %7, align 4
  br label %42

38:                                               ; preds = %31
  %39 = load i32, i32* %4, align 4
  %40 = add nsw i32 %39, 1
  %41 = call i32 @select(i32 %40, i32* %6, i32* null, i32* null, %struct.timeval* null)
  store i32 %41, i32* %7, align 4
  br label %42

42:                                               ; preds = %38, %34
  %43 = load i32, i32* %7, align 4
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %42
  br label %85

46:                                               ; preds = %42
  %47 = load i32, i32* %7, align 4
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  store i8* null, i8** %3, align 8
  br label %87

50:                                               ; preds = %46
  %51 = call i64 @calloc(i32 1024, i32 1)
  %52 = inttoptr i64 %51 to i8*
  store i8* %52, i8** %10, align 8
  %53 = icmp ne i8* %52, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %50
  store i8* null, i8** %3, align 8
  br label %87

55:                                               ; preds = %50
  %56 = load i32, i32* %4, align 4
  %57 = load i8*, i8** %10, align 8
  %58 = call i32 @read(i32 %56, i8* %57, i32 1024)
  store i32 %58, i32* %8, align 4
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %55
  store i8* null, i8** %3, align 8
  br label %87

61:                                               ; preds = %55
  %62 = load i32, i32* %8, align 4
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %65, label %64

64:                                               ; preds = %61
  br label %85

65:                                               ; preds = %61
  %66 = load i8*, i8** %9, align 8
  %67 = load i8*, i8** %9, align 8
  %68 = call i64 @strlen(i8* %67)
  %69 = load i8*, i8** %10, align 8
  %70 = call i64 @strlen(i8* %69)
  %71 = add nsw i64 %68, %70
  %72 = call i64 @realloc(i8* %66, i64 %71)
  %73 = inttoptr i64 %72 to i8*
  store i8* %73, i8** %9, align 8
  %74 = icmp ne i8* %73, null
  br i1 %74, label %76, label %75

75:                                               ; preds = %65
  store i8* null, i8** %3, align 8
  br label %87

76:                                               ; preds = %65
  %77 = load i8*, i8** %9, align 8
  %78 = load i8*, i8** %10, align 8
  %79 = load i8*, i8** %9, align 8
  %80 = call i64 @strlen(i8* %79)
  %81 = load i8*, i8** %10, align 8
  %82 = call i64 @strlen(i8* %81)
  %83 = add nsw i64 %80, %82
  %84 = call i32 @strncat(i8* %77, i8* %78, i64 %83)
  br label %31

85:                                               ; preds = %64, %45
  %86 = load i8*, i8** %9, align 8
  store i8* %86, i8** %3, align 8
  br label %87

87:                                               ; preds = %85, %75, %60, %54, %49, %29, %24
  %88 = load i8*, i8** %3, align 8
  ret i8* %88
}

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i64 @calloc(i32, i32) #1

declare dso_local i32 @select(i32, i32*, i32*, i32*, %struct.timeval*) #1

declare dso_local i32 @read(i32, i8*, i32) #1

declare dso_local i64 @realloc(i8*, i64) #1

declare dso_local i64 @strlen(i8*) #1

declare dso_local i32 @strncat(i8*, i8*, i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
