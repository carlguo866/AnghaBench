; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_22521.c_resolve_host.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_22521.c_resolve_host.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr = type { i32 }
%struct.hostent = type { i32, i32, i32 }
%struct.sockaddr_in = type { %struct.TYPE_2__, i32 }
%struct.TYPE_2__ = type { i32 }

@AF_INET = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [18 x i8] c"unknown host: %s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @resolve_host(%struct.sockaddr* %0, i8* %1) #0 {
  %3 = alloca %struct.sockaddr*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.hostent*, align 8
  %6 = alloca %struct.sockaddr_in*, align 8
  store %struct.sockaddr* %0, %struct.sockaddr** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load %struct.sockaddr*, %struct.sockaddr** %3, align 8
  %8 = bitcast %struct.sockaddr* %7 to %struct.sockaddr_in*
  store %struct.sockaddr_in* %8, %struct.sockaddr_in** %6, align 8
  %9 = load %struct.sockaddr_in*, %struct.sockaddr_in** %6, align 8
  %10 = bitcast %struct.sockaddr_in* %9 to i8*
  %11 = call i32 @bzero(i8* %10, i32 8)
  %12 = load i8*, i8** %4, align 8
  %13 = call %struct.hostent* @gethostbyname(i8* %12)
  store %struct.hostent* %13, %struct.hostent** %5, align 8
  %14 = load %struct.hostent*, %struct.hostent** %5, align 8
  %15 = icmp ne %struct.hostent* %14, null
  br i1 %15, label %16, label %31

16:                                               ; preds = %2
  %17 = load %struct.hostent*, %struct.hostent** %5, align 8
  %18 = getelementptr inbounds %struct.hostent, %struct.hostent* %17, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = load %struct.sockaddr_in*, %struct.sockaddr_in** %6, align 8
  %21 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %20, i32 0, i32 1
  store i32 %19, i32* %21, align 4
  %22 = load %struct.sockaddr_in*, %struct.sockaddr_in** %6, align 8
  %23 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %22, i32 0, i32 0
  %24 = load %struct.hostent*, %struct.hostent** %5, align 8
  %25 = getelementptr inbounds %struct.hostent, %struct.hostent* %24, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = load %struct.hostent*, %struct.hostent** %5, align 8
  %28 = getelementptr inbounds %struct.hostent, %struct.hostent* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = call i32 @memcpy(%struct.TYPE_2__* %23, i32 %26, i32 %29)
  br label %50

31:                                               ; preds = %2
  %32 = load i32, i32* @AF_INET, align 4
  %33 = load %struct.sockaddr_in*, %struct.sockaddr_in** %6, align 8
  %34 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %33, i32 0, i32 1
  store i32 %32, i32* %34, align 4
  %35 = load i8*, i8** %4, align 8
  %36 = call i32 @inet_addr(i8* %35)
  %37 = load %struct.sockaddr_in*, %struct.sockaddr_in** %6, align 8
  %38 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %37, i32 0, i32 0
  %39 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %38, i32 0, i32 0
  store i32 %36, i32* %39, align 4
  %40 = load %struct.sockaddr_in*, %struct.sockaddr_in** %6, align 8
  %41 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %40, i32 0, i32 0
  %42 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %41, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, -1
  br i1 %44, label %45, label %49

45:                                               ; preds = %31
  %46 = load i8*, i8** %4, align 8
  %47 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* %46)
  %48 = call i32 @exit(i32 1) #3
  unreachable

49:                                               ; preds = %31
  br label %50

50:                                               ; preds = %49, %16
  ret void
}

declare dso_local i32 @bzero(i8*, i32) #1

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

declare dso_local i32 @memcpy(%struct.TYPE_2__*, i32, i32) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local i32 @printf(i8*, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
