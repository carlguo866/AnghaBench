; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_982.c_filter_f.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_982.c_filter_f.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32 }

@search_va = common dso_local global %struct.TYPE_2__* null, align 8
@.str = private unnamed_addr constant [7 x i8] c"google\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"/search?q=cache:\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"%3F\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@VENDOR = common dso_local global i8* null, align 8
@.str.6 = private unnamed_addr constant [6 x i8] c"yahoo\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"/cache.php?\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"search\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c".html%\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"nate\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"RESULT\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"/search/\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"lycos\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"ref_\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"%3f\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @filter_f(i8* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %6 = load %struct.TYPE_2__*, %struct.TYPE_2__** @search_va, align 8
  %7 = load i32, i32* %5, align 4
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %6, i64 %8
  %10 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %9, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  switch i32 %11, label %167 [
    i32 0, label %12
    i32 1, label %43
    i32 2, label %78
    i32 3, label %113
    i32 4, label %140
  ]

12:                                               ; preds = %2
  %13 = load i8*, i8** %4, align 8
  %14 = call i32 @strstr(i8* %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0))
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %42, label %16

16:                                               ; preds = %12
  %17 = load i8*, i8** %4, align 8
  %18 = call i32 @strstr(i8* %17, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0))
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %42, label %20

20:                                               ; preds = %16
  %21 = load i8*, i8** %4, align 8
  %22 = call i32 @strstr(i8* %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = load i8*, i8** %4, align 8
  %26 = call i32 @strstr(i8* %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %42, label %28

28:                                               ; preds = %24
  %29 = load i8*, i8** %4, align 8
  %30 = call i32 @strstr(i8* %29, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0))
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %42, label %32

32:                                               ; preds = %28
  %33 = load i8*, i8** %4, align 8
  %34 = call i32 @strstr(i8* %33, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0))
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = load i8*, i8** %4, align 8
  %38 = load i8*, i8** @VENDOR, align 8
  %39 = call i32 @strstr(i8* %37, i8* %38)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %36
  store i32 1, i32* %3, align 4
  br label %168

42:                                               ; preds = %36, %32, %28, %24, %20, %16, %12
  store i32 0, i32* %3, align 4
  br label %168

43:                                               ; preds = %2
  %44 = load i8*, i8** %4, align 8
  %45 = call i32 @strstr(i8* %44, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0))
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %77, label %47

47:                                               ; preds = %43
  %48 = load i8*, i8** %4, align 8
  %49 = call i32 @strstr(i8* %48, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0))
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %77, label %51

51:                                               ; preds = %47
  %52 = load i8*, i8** %4, align 8
  %53 = call i32 @strstr(i8* %52, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %77, label %55

55:                                               ; preds = %51
  %56 = load i8*, i8** %4, align 8
  %57 = call i32 @strstr(i8* %56, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %77, label %59

59:                                               ; preds = %55
  %60 = load i8*, i8** %4, align 8
  %61 = call i32 @strstr(i8* %60, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0))
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %77, label %63

63:                                               ; preds = %59
  %64 = load i8*, i8** %4, align 8
  %65 = call i32 @strstr(i8* %64, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0))
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %77, label %67

67:                                               ; preds = %63
  %68 = load i8*, i8** %4, align 8
  %69 = call i32 @strstr(i8* %68, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0))
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %77, label %71

71:                                               ; preds = %67
  %72 = load i8*, i8** %4, align 8
  %73 = load i8*, i8** @VENDOR, align 8
  %74 = call i32 @strstr(i8* %72, i8* %73)
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %71
  store i32 1, i32* %3, align 4
  br label %168

77:                                               ; preds = %71, %67, %63, %59, %55, %51, %47, %43
  store i32 0, i32* %3, align 4
  br label %168

78:                                               ; preds = %2
  %79 = load i8*, i8** %4, align 8
  %80 = call i32 @strstr(i8* %79, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0))
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %112, label %82

82:                                               ; preds = %78
  %83 = load i8*, i8** %4, align 8
  %84 = call i32 @strstr(i8* %83, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0))
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %112, label %86

86:                                               ; preds = %82
  %87 = load i8*, i8** %4, align 8
  %88 = call i32 @strstr(i8* %87, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %89 = icmp ne i32 %88, 0
  br i1 %89, label %112, label %90

90:                                               ; preds = %86
  %91 = load i8*, i8** %4, align 8
  %92 = call i32 @strstr(i8* %91, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %112, label %94

94:                                               ; preds = %90
  %95 = load i8*, i8** %4, align 8
  %96 = call i32 @strstr(i8* %95, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0))
  %97 = icmp ne i32 %96, 0
  br i1 %97, label %112, label %98

98:                                               ; preds = %94
  %99 = load i8*, i8** %4, align 8
  %100 = call i32 @strstr(i8* %99, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0))
  %101 = icmp ne i32 %100, 0
  br i1 %101, label %112, label %102

102:                                              ; preds = %98
  %103 = load i8*, i8** %4, align 8
  %104 = call i32 @strstr(i8* %103, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0))
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %112, label %106

106:                                              ; preds = %102
  %107 = load i8*, i8** %4, align 8
  %108 = load i8*, i8** @VENDOR, align 8
  %109 = call i32 @strstr(i8* %107, i8* %108)
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %112, label %111

111:                                              ; preds = %106
  store i32 1, i32* %3, align 4
  br label %168

112:                                              ; preds = %106, %102, %98, %94, %90, %86, %82, %78
  store i32 0, i32* %3, align 4
  br label %168

113:                                              ; preds = %2
  %114 = load i8*, i8** %4, align 8
  %115 = call i32 @strstr(i8* %114, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0))
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %139, label %117

117:                                              ; preds = %113
  %118 = load i8*, i8** %4, align 8
  %119 = call i32 @strstr(i8* %118, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %139, label %121

121:                                              ; preds = %117
  %122 = load i8*, i8** %4, align 8
  %123 = call i32 @strstr(i8* %122, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %124 = icmp ne i32 %123, 0
  br i1 %124, label %139, label %125

125:                                              ; preds = %121
  %126 = load i8*, i8** %4, align 8
  %127 = call i32 @strstr(i8* %126, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0))
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %139, label %129

129:                                              ; preds = %125
  %130 = load i8*, i8** %4, align 8
  %131 = call i32 @strstr(i8* %130, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0))
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %139, label %133

133:                                              ; preds = %129
  %134 = load i8*, i8** %4, align 8
  %135 = load i8*, i8** @VENDOR, align 8
  %136 = call i32 @strstr(i8* %134, i8* %135)
  %137 = icmp ne i32 %136, 0
  br i1 %137, label %139, label %138

138:                                              ; preds = %133
  store i32 1, i32* %3, align 4
  br label %168

139:                                              ; preds = %133, %129, %125, %121, %117, %113
  store i32 0, i32* %3, align 4
  br label %168

140:                                              ; preds = %2
  %141 = load i8*, i8** %4, align 8
  %142 = call i32 @strstr(i8* %141, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0))
  %143 = icmp ne i32 %142, 0
  br i1 %143, label %166, label %144

144:                                              ; preds = %140
  %145 = load i8*, i8** %4, align 8
  %146 = call i32 @strstr(i8* %145, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %166, label %148

148:                                              ; preds = %144
  %149 = load i8*, i8** %4, align 8
  %150 = call i32 @strstr(i8* %149, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0))
  %151 = icmp ne i32 %150, 0
  br i1 %151, label %166, label %152

152:                                              ; preds = %148
  %153 = load i8*, i8** %4, align 8
  %154 = call i32 @strstr(i8* %153, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0))
  %155 = icmp ne i32 %154, 0
  br i1 %155, label %166, label %156

156:                                              ; preds = %152
  %157 = load i8*, i8** %4, align 8
  %158 = call i32 @strstr(i8* %157, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0))
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %166, label %160

160:                                              ; preds = %156
  %161 = load i8*, i8** %4, align 8
  %162 = load i8*, i8** @VENDOR, align 8
  %163 = call i32 @strstr(i8* %161, i8* %162)
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %166, label %165

165:                                              ; preds = %160
  store i32 1, i32* %3, align 4
  br label %168

166:                                              ; preds = %160, %156, %152, %148, %144, %140
  store i32 0, i32* %3, align 4
  br label %168

167:                                              ; preds = %2
  store i32 0, i32* %3, align 4
  br label %168

168:                                              ; preds = %167, %166, %165, %139, %138, %112, %111, %77, %76, %42, %41
  %169 = load i32, i32* %3, align 4
  ret i32 %169
}

declare dso_local i32 @strstr(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
