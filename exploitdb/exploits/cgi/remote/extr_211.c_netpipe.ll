; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/cgi/remote/extr_211.c_netpipe.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/cgi/remote/extr_211.c_netpipe.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i32, i32, i32 }
%struct.hostent = type { i32* }
%struct.sockaddr = type { i32 }

@host = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [18 x i8] c"Usage: %s <host>\0A\00", align 1
@progname = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [18 x i8] c"%s: Unknown host\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@errno = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [21 x i8] c"Connection refused.\0A\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"Connection timed out.\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"Network unreachable.\0A\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"Unknown error.\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @netpipe(i32* %0, i32* %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca %struct.sockaddr_in, align 4
  %6 = alloca %struct.hostent*, align 8
  %7 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %8 = load i8*, i8** @host, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %2
  %11 = load i8*, i8** @host, align 8
  %12 = load i8, i8* %11, align 1
  %13 = icmp ne i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %10, %2
  %15 = load i8*, i8** @progname, align 8
  %16 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* %15)
  %17 = call i32 @exit(i32 1) #3
  unreachable

18:                                               ; preds = %10
  %19 = load i8*, i8** @host, align 8
  %20 = call %struct.hostent* @gethostbyname(i8* %19)
  store %struct.hostent* %20, %struct.hostent** %6, align 8
  %21 = load %struct.hostent*, %struct.hostent** %6, align 8
  %22 = icmp ne %struct.hostent* %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = load i8*, i8** @host, align 8
  %25 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* %24)
  %26 = call i32 @exit(i32 1) #3
  unreachable

27:                                               ; preds = %18
  %28 = load i32, i32* @AF_INET, align 4
  %29 = load i32, i32* @SOCK_STREAM, align 4
  %30 = call i32 @socket(i32 %28, i32 %29, i32 0)
  store i32 %30, i32* %7, align 4
  %31 = load i32, i32* @AF_INET, align 4
  %32 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %5, i32 0, i32 2
  store i32 %31, i32* %32, align 4
  %33 = call i32 @htons(i32 80)
  %34 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %5, i32 0, i32 1
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %5, i32 0, i32 0
  %36 = load %struct.hostent*, %struct.hostent** %6, align 8
  %37 = getelementptr inbounds %struct.hostent, %struct.hostent* %36, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 0
  %40 = load i32, i32* %39, align 4
  %41 = call i32 @memcpy(i32* %35, i32 %40, i32 4)
  %42 = load i32, i32* %7, align 4
  %43 = bitcast %struct.sockaddr_in* %5 to %struct.sockaddr*
  %44 = call i64 @connect(i32 %42, %struct.sockaddr* %43, i32 12)
  %45 = icmp slt i64 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %27
  %47 = load i32, i32* @errno, align 4
  switch i32 %47, label %54 [
    i32 130, label %48
    i32 128, label %50
    i32 129, label %52
  ]

48:                                               ; preds = %46
  %49 = call i32 @output(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0))
  br label %56

50:                                               ; preds = %46
  %51 = call i32 @output(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0))
  br label %56

52:                                               ; preds = %46
  %53 = call i32 @output(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0))
  br label %56

54:                                               ; preds = %46
  %55 = call i32 @output(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0))
  br label %56

56:                                               ; preds = %54, %52, %50, %48
  %57 = call i32 @exit(i32 1) #3
  unreachable

58:                                               ; preds = %27
  %59 = load i32, i32* %7, align 4
  %60 = load i32*, i32** %4, align 8
  store i32 %59, i32* %60, align 4
  %61 = load i32*, i32** %3, align 8
  store i32 %59, i32* %61, align 4
  ret void
}

declare dso_local i32 @printf(i8*, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @memcpy(i32*, i32, i32) #1

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @output(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
