; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/cgi/remote/extr_1862.c_help.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/cgi/remote/extr_1862.c_help.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [466 x i8] c"ishopcart CGI shopcart buffer overflow exploit by K-sPecial (http://xzziroz.net) of .aware (http://awarenetwork.org)\0ALicense: GPL (5/24/2006)\0A\0A-i <%s>  \09 - specifies the vulnerable host; default 80\0A-p [%hu] \09 - specifies the vulnerable host's port\0A-l <%s>  \09 - specifies the vulnerable CGI location\0A-o [%x]  \09 - forces an explicit offset\0A-1 <%s>  \09 - specifies the connect back ip\0A-2 [%hu] \09 - specifies the connect back port; default 31337\0A-h\09 \09 - shows this help\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @help() #0 {
  %1 = alloca i8*, align 8
  store i8* getelementptr inbounds ([466 x i8], [466 x i8]* @.str, i64 0, i64 0), i8** %1, align 8
  %2 = load i8*, i8** %1, align 8
  %3 = call i32 @puts(i8* %2)
  ret void
}

declare dso_local i32 @puts(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
