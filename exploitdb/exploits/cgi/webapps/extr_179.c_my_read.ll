; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/cgi/webapps/extr_179.c_my_read.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/cgi/webapps/extr_179.c_my_read.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@my_read.read_cnt = internal global i32 0, align 4
@my_read.read_ptr = internal global i8* null, align 8
@my_read.read_buf = internal global [4096 x i8] zeroinitializer, align 16
@errno = common dso_local global i64 0, align 8
@EINTR = common dso_local global i64 0, align 8
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (i32, i8*)* @my_read to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @my_read(i32 %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  store i32 %0, i32* %4, align 4
  store i8* %1, i8** %5, align 8
  %6 = load i32, i32* @my_read.read_cnt, align 4
  %7 = icmp sle i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %2
  br label %9

9:                                                ; preds = %17, %8
  %10 = load i32, i32* %4, align 4
  %11 = call i32 @read(i32 %10, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @my_read.read_buf, i64 0, i64 0), i32 4096)
  store i32 %11, i32* @my_read.read_cnt, align 4
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %9
  %14 = load i64, i64* @errno, align 8
  %15 = load i64, i64* @EINTR, align 8
  %16 = icmp eq i64 %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %13
  br label %9

18:                                               ; preds = %13
  store i32 -1, i32* %3, align 4
  br label %32

19:                                               ; preds = %9
  %20 = load i32, i32* @my_read.read_cnt, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  store i32 0, i32* %3, align 4
  br label %32

23:                                               ; preds = %19
  br label %24

24:                                               ; preds = %23
  store i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @my_read.read_buf, i64 0, i64 0), i8** @my_read.read_ptr, align 8
  br label %25

25:                                               ; preds = %24, %2
  %26 = load i32, i32* @my_read.read_cnt, align 4
  %27 = add nsw i32 %26, -1
  store i32 %27, i32* @my_read.read_cnt, align 4
  %28 = load i8*, i8** @my_read.read_ptr, align 8
  %29 = getelementptr inbounds i8, i8* %28, i32 1
  store i8* %29, i8** @my_read.read_ptr, align 8
  %30 = load i8, i8* %28, align 1
  %31 = load i8*, i8** %5, align 8
  store i8 %30, i8* %31, align 1
  store i32 1, i32* %3, align 4
  br label %32

32:                                               ; preds = %25, %22, %18
  %33 = load i32, i32* %3, align 4
  ret i32 %33
}

declare dso_local i32 @read(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
