; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/cgi/webapps/extr_772.c_urlEncode.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/cgi/webapps/extr_772.c_urlEncode.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @urlEncode(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca [1024 x i8], align 16
  %8 = alloca [3072 x i8], align 16
  store i8* %0, i8** %2, align 8
  store i32 0, i32* %5, align 4
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8** %6, align 8
  %9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %10 = load i8*, i8** %2, align 8
  %11 = load i8*, i8** %2, align 8
  %12 = call i32 @strlen(i8* %11)
  %13 = call i32 @memcpy(i8* %9, i8* %10, i32 %12)
  %14 = load i8*, i8** %2, align 8
  %15 = call i32 @strlen(i8* %14)
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %16
  store i8 0, i8* %17, align 1
  store i32 0, i32* %4, align 4
  br label %18

18:                                               ; preds = %88, %1
  %19 = load i32, i32* %4, align 4
  %20 = load i8*, i8** %2, align 8
  %21 = call i32 @strlen(i8* %20)
  %22 = icmp slt i32 %19, %21
  br i1 %22, label %23, label %91

23:                                               ; preds = %18
  %24 = load i32, i32* %4, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %25
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  store i32 %28, i32* %3, align 4
  %29 = load i32, i32* %3, align 4
  %30 = icmp sle i32 97, %29
  br i1 %30, label %31, label %34

31:                                               ; preds = %23
  %32 = load i32, i32* %3, align 4
  %33 = icmp sle i32 %32, 122
  br i1 %33, label %55, label %34

34:                                               ; preds = %31, %23
  %35 = load i32, i32* %3, align 4
  %36 = icmp sle i32 65, %35
  br i1 %36, label %37, label %40

37:                                               ; preds = %34
  %38 = load i32, i32* %3, align 4
  %39 = icmp sle i32 %38, 90
  br i1 %39, label %55, label %40

40:                                               ; preds = %37, %34
  %41 = load i32, i32* %3, align 4
  %42 = icmp sle i32 48, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %40
  %44 = load i32, i32* %3, align 4
  %45 = icmp sle i32 %44, 57
  br i1 %45, label %55, label %46

46:                                               ; preds = %43, %40
  %47 = load i32, i32* %3, align 4
  %48 = icmp eq i32 %47, 45
  br i1 %48, label %55, label %49

49:                                               ; preds = %46
  %50 = load i32, i32* %3, align 4
  %51 = icmp eq i32 %50, 95
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  %53 = load i32, i32* %3, align 4
  %54 = icmp eq i32 %53, 46
  br i1 %54, label %55, label %62

55:                                               ; preds = %52, %49, %46, %43, %37, %31
  %56 = load i32, i32* %3, align 4
  %57 = trunc i32 %56 to i8
  %58 = load i32, i32* %5, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %5, align 4
  %60 = sext i32 %58 to i64
  %61 = getelementptr inbounds [3072 x i8], [3072 x i8]* %8, i64 0, i64 %60
  store i8 %57, i8* %61, align 1
  br label %87

62:                                               ; preds = %52
  %63 = load i32, i32* %5, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %5, align 4
  %65 = sext i32 %63 to i64
  %66 = getelementptr inbounds [3072 x i8], [3072 x i8]* %8, i64 0, i64 %65
  store i8 37, i8* %66, align 1
  %67 = load i8*, i8** %6, align 8
  %68 = load i32, i32* %3, align 4
  %69 = ashr i32 %68, 4
  %70 = sext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %67, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = load i32, i32* %5, align 4
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %5, align 4
  %75 = sext i32 %73 to i64
  %76 = getelementptr inbounds [3072 x i8], [3072 x i8]* %8, i64 0, i64 %75
  store i8 %72, i8* %76, align 1
  %77 = load i8*, i8** %6, align 8
  %78 = load i32, i32* %3, align 4
  %79 = and i32 %78, 15
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i8, i8* %77, i64 %80
  %82 = load i8, i8* %81, align 1
  %83 = load i32, i32* %5, align 4
  %84 = add nsw i32 %83, 1
  store i32 %84, i32* %5, align 4
  %85 = sext i32 %83 to i64
  %86 = getelementptr inbounds [3072 x i8], [3072 x i8]* %8, i64 0, i64 %85
  store i8 %82, i8* %86, align 1
  br label %87

87:                                               ; preds = %62, %55
  br label %88

88:                                               ; preds = %87
  %89 = load i32, i32* %4, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %4, align 4
  br label %18

91:                                               ; preds = %18
  %92 = getelementptr inbounds [3072 x i8], [3072 x i8]* %8, i64 0, i64 0
  ret i8* %92
}

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
