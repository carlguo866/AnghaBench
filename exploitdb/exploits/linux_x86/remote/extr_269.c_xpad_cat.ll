; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux_x86/remote/extr_269.c_xpad_cat.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux_x86/remote/extr_269.c_xpad_cat.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%c\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @xpad_cat(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  store i32 0, i32* %5, align 4
  br label %7

7:                                                ; preds = %51, %2
  %8 = load i32, i32* %5, align 4
  %9 = icmp sle i32 %8, 3
  br i1 %9, label %10, label %54

10:                                               ; preds = %7
  %11 = load i32, i32* %5, align 4
  switch i32 %11, label %31 [
    i32 0, label %12
    i32 1, label %16
    i32 2, label %21
    i32 3, label %26
  ]

12:                                               ; preds = %10
  %13 = load i64, i64* %4, align 8
  %14 = and i64 %13, 255
  %15 = trunc i64 %14 to i8
  store i8 %15, i8* %6, align 1
  br label %31

16:                                               ; preds = %10
  %17 = load i64, i64* %4, align 8
  %18 = and i64 %17, 65280
  %19 = lshr i64 %18, 8
  %20 = trunc i64 %19 to i8
  store i8 %20, i8* %6, align 1
  br label %31

21:                                               ; preds = %10
  %22 = load i64, i64* %4, align 8
  %23 = and i64 %22, 16711680
  %24 = lshr i64 %23, 16
  %25 = trunc i64 %24 to i8
  store i8 %25, i8* %6, align 1
  br label %31

26:                                               ; preds = %10
  %27 = load i64, i64* %4, align 8
  %28 = and i64 %27, 4278190080
  %29 = lshr i64 %28, 24
  %30 = trunc i64 %29 to i8
  store i8 %30, i8* %6, align 1
  br label %31

31:                                               ; preds = %10, %26, %21, %16, %12
  %32 = load i8, i8* %6, align 1
  %33 = zext i8 %32 to i32
  %34 = icmp eq i32 %33, 255
  br i1 %34, label %35, label %43

35:                                               ; preds = %31
  %36 = load i8*, i8** %3, align 8
  %37 = load i8*, i8** %3, align 8
  %38 = call i32 @strlen(i8* %37)
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %36, i64 %39
  %41 = load i8, i8* %6, align 1
  %42 = call i32 @sprintf(i8* %40, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8 zeroext %41)
  br label %43

43:                                               ; preds = %35, %31
  %44 = load i8*, i8** %3, align 8
  %45 = load i8*, i8** %3, align 8
  %46 = call i32 @strlen(i8* %45)
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %44, i64 %47
  %49 = load i8, i8* %6, align 1
  %50 = call i32 @sprintf(i8* %48, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8 zeroext %49)
  br label %51

51:                                               ; preds = %43
  %52 = load i32, i32* %5, align 4
  %53 = add nsw i32 %52, 1
  store i32 %53, i32* %5, align 4
  br label %7

54:                                               ; preds = %7
  ret void
}

declare dso_local i32 @sprintf(i8*, i8*, i8 zeroext) #1

declare dso_local i32 @strlen(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
