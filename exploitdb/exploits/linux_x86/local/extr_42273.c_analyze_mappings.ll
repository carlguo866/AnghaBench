; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/linux_x86/local/extr_42273.c_analyze_mappings.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/linux_x86/local/extr_42273.c_analyze_mappings.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@EXIT_FAILURE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [16 x i8] c"/proc/self/maps\00", align 1
@O_RDONLY = common dso_local global i32 0, align 4
@analyze_mappings.buf = internal global [4096 x i8] calign 16
@errno = common dso_local global i64 0, align 8
@EAGAIN = common dso_local global i64 0, align 8
@EINTR = common dso_local global i64 0, align 8
@stderr = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [34 x i8] c"Please recompile with -fpie -pie\0A\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"[heap]\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"[stack]\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"CVE-2017-1000370 triggered\0A\00", align 1
@EXIT_SUCCESS = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [28 x i8] c"CVE-2017-1000371 triggered\0A\00", align 1
@STDERR_FILENO = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i8*)* @analyze_mappings to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @analyze_mappings(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %17 = load i8*, i8** %2, align 8
  %18 = icmp ne i8* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %1
  %20 = call i32 (...) @die()
  br label %21

21:                                               ; preds = %19, %1
  %22 = load i8*, i8** %2, align 8
  %23 = call i8* @strchr(i8* %22, i8 signext 32)
  %24 = icmp ne i8* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = call i32 (...) @die()
  br label %27

27:                                               ; preds = %25, %21
  %28 = load i32, i32* @EXIT_FAILURE, align 4
  store i32 %28, i32* %3, align 4
  store i32 0, i32* %4, align 4
  %29 = load i32, i32* @O_RDONLY, align 4
  %30 = call i32 @open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i32 %29)
  store i32 %30, i32* %5, align 4
  %31 = load i32, i32* %5, align 4
  %32 = icmp sle i32 %31, -1
  br i1 %32, label %33, label %35

33:                                               ; preds = %27
  %34 = call i32 (...) @die()
  br label %35

35:                                               ; preds = %33, %27
  store i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @analyze_mappings.buf, i64 0, i64 0), i8** %6, align 8
  br label %36

36:                                               ; preds = %71, %70, %35
  %37 = load i8*, i8** %6, align 8
  %38 = icmp uge i8* %37, getelementptr inbounds (i8, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @analyze_mappings.buf, i64 0, i64 0), i64 4096)
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = call i32 (...) @die()
  br label %41

41:                                               ; preds = %39, %36
  %42 = load i32, i32* %5, align 4
  %43 = load i8*, i8** %6, align 8
  %44 = load i8*, i8** %6, align 8
  %45 = ptrtoint i8* %44 to i64
  %46 = sub i64 ptrtoint (i8* getelementptr inbounds (i8, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @analyze_mappings.buf, i64 0, i64 0), i64 4096) to i64), %45
  %47 = trunc i64 %46 to i32
  %48 = call i32 @read(i32 %42, i8* %43, i32 %47)
  store i32 %48, i32* %7, align 4
  %49 = load i32, i32* %7, align 4
  %50 = icmp sle i32 %49, 0
  br i1 %50, label %51, label %71

51:                                               ; preds = %41
  %52 = load i32, i32* %7, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  br label %76

55:                                               ; preds = %51
  %56 = load i32, i32* %7, align 4
  %57 = icmp ne i32 %56, -1
  br i1 %57, label %58, label %60

58:                                               ; preds = %55
  %59 = call i32 (...) @die()
  br label %60

60:                                               ; preds = %58, %55
  %61 = load i64, i64* @errno, align 8
  %62 = load i64, i64* @EAGAIN, align 8
  %63 = icmp ne i64 %61, %62
  br i1 %63, label %64, label %70

64:                                               ; preds = %60
  %65 = load i64, i64* @errno, align 8
  %66 = load i64, i64* @EINTR, align 8
  %67 = icmp ne i64 %65, %66
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  %69 = call i32 (...) @die()
  br label %70

70:                                               ; preds = %68, %64, %60
  br label %36

71:                                               ; preds = %41
  %72 = load i32, i32* %7, align 4
  %73 = load i8*, i8** %6, align 8
  %74 = sext i32 %72 to i64
  %75 = getelementptr inbounds i8, i8* %73, i64 %74
  store i8* %75, i8** %6, align 8
  br label %36

76:                                               ; preds = %54
  %77 = load i8*, i8** %6, align 8
  store i8 0, i8* %77, align 1
  %78 = call i8* @memchr(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @analyze_mappings.buf, i64 0, i64 0), i8 signext 0, i32 4096)
  %79 = load i8*, i8** %6, align 8
  %80 = icmp ne i8* %78, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  %82 = call i32 (...) @die()
  br label %83

83:                                               ; preds = %81, %76
  store i64 0, i64* %8, align 8
  store i64 0, i64* %9, align 8
  store i64 0, i64* %10, align 8
  store i64 0, i64* %11, align 8
  store i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @analyze_mappings.buf, i64 0, i64 0), i8** %12, align 8
  br label %84

84:                                               ; preds = %207, %83
  %85 = load i8*, i8** %12, align 8
  %86 = call i8* @strchr(i8* %85, i8 signext 10)
  store i8* %86, i8** %13, align 8
  %87 = load i8*, i8** %13, align 8
  %88 = icmp ne i8* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %84
  %90 = call i32 (...) @die()
  br label %91

91:                                               ; preds = %89, %84
  %92 = load i8*, i8** %13, align 8
  store i8 0, i8* %92, align 1
  store i8* null, i8** %6, align 8
  %93 = load i8*, i8** %12, align 8
  %94 = call i64 @strtoul(i8* %93, i8** %6, i32 16)
  store i64 %94, i64* %14, align 8
  %95 = load i8*, i8** %6, align 8
  %96 = load i8*, i8** %12, align 8
  %97 = icmp ule i8* %95, %96
  br i1 %97, label %103, label %98

98:                                               ; preds = %91
  %99 = load i8*, i8** %6, align 8
  %100 = load i8, i8* %99, align 1
  %101 = sext i8 %100 to i32
  %102 = icmp ne i32 %101, 45
  br i1 %102, label %103, label %105

103:                                              ; preds = %98, %91
  %104 = call i32 (...) @die()
  br label %105

105:                                              ; preds = %103, %98
  %106 = load i64, i64* %14, align 8
  %107 = icmp ule i64 %106, 0
  br i1 %107, label %108, label %110

108:                                              ; preds = %105
  %109 = call i32 (...) @die()
  br label %110

110:                                              ; preds = %108, %105
  %111 = load i8*, i8** %6, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 1
  store i8* %112, i8** %12, align 8
  store i8* null, i8** %6, align 8
  %113 = load i8*, i8** %12, align 8
  %114 = call i64 @strtoul(i8* %113, i8** %6, i32 16)
  store i64 %114, i64* %15, align 8
  %115 = load i8*, i8** %6, align 8
  %116 = load i8*, i8** %12, align 8
  %117 = icmp ule i8* %115, %116
  br i1 %117, label %123, label %118

118:                                              ; preds = %110
  %119 = load i8*, i8** %6, align 8
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp ne i32 %121, 32
  br i1 %122, label %123, label %125

123:                                              ; preds = %118, %110
  %124 = call i32 (...) @die()
  br label %125

125:                                              ; preds = %123, %118
  %126 = load i64, i64* %15, align 8
  %127 = load i64, i64* %14, align 8
  %128 = icmp ule i64 %126, %127
  br i1 %128, label %129, label %131

129:                                              ; preds = %125
  %130 = call i32 (...) @die()
  br label %131

131:                                              ; preds = %129, %125
  %132 = load i8*, i8** %6, align 8
  %133 = getelementptr inbounds i8, i8* %132, i64 1
  %134 = call i8* @strrchr(i8* %133, i8 signext 32)
  store i8* %134, i8** %6, align 8
  %135 = load i8*, i8** %6, align 8
  %136 = icmp ne i8* %135, null
  br i1 %136, label %139, label %137

137:                                              ; preds = %131
  %138 = call i32 (...) @die()
  br label %139

139:                                              ; preds = %137, %131
  %140 = load i8*, i8** %6, align 8
  %141 = getelementptr inbounds i8, i8* %140, i32 1
  store i8* %141, i8** %6, align 8
  %142 = load i8*, i8** %6, align 8
  %143 = load i8*, i8** %2, align 8
  %144 = call i32 @strcmp(i8* %142, i8* %143)
  %145 = icmp ne i32 %144, 0
  br i1 %145, label %155, label %146

146:                                              ; preds = %139
  %147 = load i64, i64* %15, align 8
  store i64 %147, i64* %8, align 8
  %148 = load i64, i64* %14, align 8
  %149 = icmp eq i64 %148, 134512640
  br i1 %149, label %150, label %154

150:                                              ; preds = %146
  %151 = load i32, i32* @stderr, align 4
  %152 = call i32 @fprintf(i32 %151, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0))
  %153 = call i32 (...) @die()
  br label %154

154:                                              ; preds = %150, %146
  br label %198

155:                                              ; preds = %139
  %156 = load i8*, i8** %6, align 8
  %157 = call i32 @strcmp(i8* %156, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0))
  %158 = icmp ne i32 %157, 0
  br i1 %158, label %172, label %159

159:                                              ; preds = %155
  %160 = load i64, i64* %10, align 8
  %161 = icmp ne i64 %160, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %159
  %163 = load i64, i64* %14, align 8
  store i64 %163, i64* %10, align 8
  br label %171

164:                                              ; preds = %159
  %165 = load i64, i64* %11, align 8
  %166 = icmp ne i64 %165, 0
  br i1 %166, label %167, label %169

167:                                              ; preds = %164
  %168 = call i32 (...) @die()
  br label %169

169:                                              ; preds = %167, %164
  %170 = load i64, i64* %14, align 8
  store i64 %170, i64* %11, align 8
  store i32 1, i32* %4, align 4
  br label %171

171:                                              ; preds = %169, %162
  br label %197

172:                                              ; preds = %155
  %173 = load i8*, i8** %6, align 8
  %174 = call i32 @strcmp(i8* %173, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0))
  %175 = icmp ne i32 %174, 0
  br i1 %175, label %184, label %176

176:                                              ; preds = %172
  %177 = load i64, i64* %11, align 8
  %178 = icmp ne i64 %177, 0
  br i1 %178, label %181, label %179

179:                                              ; preds = %176
  %180 = load i64, i64* %14, align 8
  store i64 %180, i64* %11, align 8
  br label %183

181:                                              ; preds = %176
  %182 = call i32 (...) @die()
  br label %183

183:                                              ; preds = %181, %179
  br label %196

184:                                              ; preds = %172
  %185 = load i8*, i8** %6, align 8
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %187, 47
  br i1 %188, label %189, label %195

189:                                              ; preds = %184
  %190 = load i64, i64* %9, align 8
  %191 = icmp ne i64 %190, 0
  br i1 %191, label %194, label %192

192:                                              ; preds = %189
  %193 = load i64, i64* %14, align 8
  store i64 %193, i64* %9, align 8
  br label %194

194:                                              ; preds = %192, %189
  br label %195

195:                                              ; preds = %194, %184
  br label %196

196:                                              ; preds = %195, %183
  br label %197

197:                                              ; preds = %196, %171
  br label %198

198:                                              ; preds = %197, %154
  %199 = load i8*, i8** %13, align 8
  store i8 10, i8* %199, align 1
  %200 = load i8*, i8** %13, align 8
  %201 = getelementptr inbounds i8, i8* %200, i64 1
  store i8* %201, i8** %12, align 8
  %202 = load i8*, i8** %12, align 8
  %203 = load i8, i8* %202, align 1
  %204 = sext i8 %203 to i32
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %198
  br label %208

207:                                              ; preds = %198
  br label %84

208:                                              ; preds = %206
  %209 = load i64, i64* %8, align 8
  %210 = icmp ne i64 %209, 0
  br i1 %210, label %213, label %211

211:                                              ; preds = %208
  %212 = call i32 (...) @die()
  br label %213

213:                                              ; preds = %211, %208
  %214 = load i64, i64* %9, align 8
  %215 = icmp ne i64 %214, 0
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = call i32 (...) @die()
  br label %218

218:                                              ; preds = %216, %213
  %219 = load i64, i64* %11, align 8
  %220 = icmp ne i64 %219, 0
  br i1 %220, label %228, label %221

221:                                              ; preds = %218
  %222 = load i64, i64* %10, align 8
  %223 = icmp ne i64 %222, 0
  br i1 %223, label %226, label %224

224:                                              ; preds = %221
  %225 = call i32 (...) @die()
  br label %226

226:                                              ; preds = %224, %221
  %227 = load i64, i64* %10, align 8
  store i64 %227, i64* %11, align 8
  store i64 0, i64* %10, align 8
  br label %228

228:                                              ; preds = %226, %218
  %229 = load i64, i64* %8, align 8
  %230 = load i64, i64* %9, align 8
  %231 = icmp ule i64 %229, %230
  br i1 %231, label %232, label %241

232:                                              ; preds = %228
  %233 = load i64, i64* %9, align 8
  %234 = load i64, i64* %8, align 8
  %235 = sub i64 %233, %234
  %236 = icmp ule i64 %235, 4096
  br i1 %236, label %237, label %241

237:                                              ; preds = %232
  %238 = load i32, i32* @stderr, align 4
  %239 = call i32 @fprintf(i32 %238, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0))
  %240 = load i32, i32* @EXIT_SUCCESS, align 4
  store i32 %240, i32* %3, align 4
  store i32 1, i32* %4, align 4
  br label %241

241:                                              ; preds = %237, %232, %228
  %242 = load i64, i64* %8, align 8
  %243 = load i64, i64* %11, align 8
  %244 = icmp ule i64 %242, %243
  br i1 %244, label %245, label %254

245:                                              ; preds = %241
  %246 = load i64, i64* %11, align 8
  %247 = load i64, i64* %8, align 8
  %248 = sub i64 %246, %247
  %249 = icmp ule i64 %248, 4096
  br i1 %249, label %250, label %254

250:                                              ; preds = %245
  %251 = load i32, i32* @stderr, align 4
  %252 = call i32 @fprintf(i32 %251, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0))
  %253 = load i32, i32* @EXIT_SUCCESS, align 4
  store i32 %253, i32* %3, align 4
  store i32 1, i32* %4, align 4
  br label %254

254:                                              ; preds = %250, %245, %241
  %255 = load i32, i32* %4, align 4
  %256 = icmp ne i32 %255, 0
  br i1 %256, label %257, label %272

257:                                              ; preds = %254
  %258 = call i32 @strlen(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @analyze_mappings.buf, i64 0, i64 0))
  store i32 %258, i32* %16, align 4
  %259 = load i32, i32* %16, align 4
  %260 = icmp sle i32 %259, 0
  br i1 %260, label %261, label %263

261:                                              ; preds = %257
  %262 = call i32 (...) @die()
  br label %263

263:                                              ; preds = %261, %257
  %264 = load i32, i32* @STDERR_FILENO, align 4
  %265 = load i32, i32* %16, align 4
  %266 = call i32 @write(i32 %264, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @analyze_mappings.buf, i64 0, i64 0), i32 %265)
  %267 = load i32, i32* %16, align 4
  %268 = icmp ne i32 %266, %267
  br i1 %268, label %269, label %271

269:                                              ; preds = %263
  %270 = call i32 (...) @die()
  br label %271

271:                                              ; preds = %269, %263
  br label %272

272:                                              ; preds = %271, %254
  %273 = load i32, i32* %5, align 4
  %274 = call i64 @close(i32 %273)
  %275 = icmp ne i64 %274, 0
  br i1 %275, label %276, label %278

276:                                              ; preds = %272
  %277 = call i32 (...) @die()
  br label %278

278:                                              ; preds = %276, %272
  %279 = load i32, i32* %3, align 4
  %280 = call i32 @exit(i32 %279) #3
  unreachable
}

declare dso_local i32 @die(...) #1

declare dso_local i8* @strchr(i8*, i8 signext) #1

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i32 @read(i32, i8*, i32) #1

declare dso_local i8* @memchr(i8*, i8 signext, i32) #1

declare dso_local i64 @strtoul(i8*, i8**, i32) #1

declare dso_local i8* @strrchr(i8*, i8 signext) #1

declare dso_local i32 @strcmp(i8*, i8*) #1

declare dso_local i32 @fprintf(i32, i8*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i64 @close(i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
