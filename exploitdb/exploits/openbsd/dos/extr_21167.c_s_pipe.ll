; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/openbsd/dos/extr_21167.c_s_pipe.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/openbsd/dos/extr_21167.c_s_pipe.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__DEBUG__ = common dso_local global i64 0, align 8
@__SYSLOG__ = common dso_local global i64 0, align 8
@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [30 x i8] c"PID=%-5i PPID=%-5i: pipe(%x)\0A\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"Could not create pipe\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @s_pipe(i32* %0) #0 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i64, i64* @__DEBUG__, align 8
  %4 = icmp ne i64 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = load i64, i64* @__SYSLOG__, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %8, label %15

8:                                                ; preds = %5, %1
  %9 = load i32, i32* @stderr, align 4
  %10 = call i32 (...) @getpid()
  %11 = call i32 (...) @getppid()
  %12 = load i32*, i32** %2, align 8
  %13 = ptrtoint i32* %12 to i32
  %14 = call i32 @s_fprintf(i32 %9, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0), i32 %10, i32 %11, i32 %13)
  br label %15

15:                                               ; preds = %8, %5
  %16 = load i32*, i32** %2, align 8
  %17 = call i32 @pipe(i32* %16)
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = call i32 @s_perror(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0))
  %21 = call i32 @exit(i32 3) #3
  unreachable

22:                                               ; preds = %15
  ret void
}

declare dso_local i32 @s_fprintf(i32, i8*, i32, i32, i32) #1

declare dso_local i32 @getpid(...) #1

declare dso_local i32 @getppid(...) #1

declare dso_local i32 @pipe(i32*) #1

declare dso_local i32 @s_perror(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
