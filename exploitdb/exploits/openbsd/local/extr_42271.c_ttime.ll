; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/openbsd/local/extr_42271.c_ttime.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/openbsd/local/extr_42271.c_ttime.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.tm = type { i32, i32, i32, i32, i32, i32, i32 }

@llvm.used = appending global [1 x i8*] [i8* bitcast (i64 (i8*)* @ttime to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i64 @ttime(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.tm*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %9 = call i64 @time(i64* %3)
  %10 = icmp eq i64 %9, -1
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = call %struct.tm* @localtime(i64* %3)
  store %struct.tm* %12, %struct.tm** %5, align 8
  %13 = icmp eq %struct.tm* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %11, %1
  %15 = call i32 (...) @die()
  br label %16

16:                                               ; preds = %14, %11
  %17 = load i8*, i8** %2, align 8
  store i8* %17, i8** %8, align 8
  store i8* null, i8** %7, align 8
  br label %18

18:                                               ; preds = %41, %16
  %19 = load i8*, i8** %8, align 8
  %20 = load i8, i8* %19, align 1
  %21 = sext i8 %20 to i32
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %44

23:                                               ; preds = %18
  %24 = load i8*, i8** %8, align 8
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %26, 46
  br i1 %27, label %28, label %33

28:                                               ; preds = %23
  %29 = load i8*, i8** %7, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = load i8*, i8** %8, align 8
  store i8* %32, i8** %7, align 8
  br label %40

33:                                               ; preds = %28, %23
  %34 = load i8*, i8** %8, align 8
  %35 = load i8, i8* %34, align 1
  %36 = call i32 @isdigit(i8 zeroext %35)
  %37 = icmp ne i32 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %33
  br label %171

39:                                               ; preds = %33
  br label %40

40:                                               ; preds = %39, %31
  br label %41

41:                                               ; preds = %40
  %42 = load i8*, i8** %8, align 8
  %43 = getelementptr inbounds i8, i8* %42, i32 1
  store i8* %43, i8** %8, align 8
  br label %18

44:                                               ; preds = %18
  %45 = load i8*, i8** %7, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %47, label %50

47:                                               ; preds = %44
  %48 = load %struct.tm*, %struct.tm** %5, align 8
  %49 = getelementptr inbounds %struct.tm, %struct.tm* %48, i32 0, i32 0
  store i32 0, i32* %49, align 4
  br label %68

50:                                               ; preds = %44
  %51 = load i8*, i8** %7, align 8
  %52 = getelementptr inbounds i8, i8* %51, i32 1
  store i8* %52, i8** %7, align 8
  store i8 0, i8* %51, align 1
  %53 = load i8*, i8** %7, align 8
  %54 = call i32 @strlen(i8* %53)
  %55 = icmp ne i32 %54, 2
  br i1 %55, label %56, label %57

56:                                               ; preds = %50
  br label %171

57:                                               ; preds = %50
  %58 = load i8*, i8** %7, align 8
  %59 = call i32 @ATOI2(i8* %58)
  %60 = load %struct.tm*, %struct.tm** %5, align 8
  %61 = getelementptr inbounds %struct.tm, %struct.tm* %60, i32 0, i32 0
  store i32 %59, i32* %61, align 4
  %62 = load %struct.tm*, %struct.tm** %5, align 8
  %63 = getelementptr inbounds %struct.tm, %struct.tm* %62, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %64, 61
  br i1 %65, label %66, label %67

66:                                               ; preds = %57
  br label %171

67:                                               ; preds = %57
  br label %68

68:                                               ; preds = %67, %47
  store i32 0, i32* %6, align 4
  %69 = load i8*, i8** %2, align 8
  %70 = call i32 @strlen(i8* %69)
  switch i32 %70, label %162 [
    i32 12, label %71
    i32 10, label %81
    i32 8, label %107
  ]

71:                                               ; preds = %68
  %72 = load i8*, i8** %2, align 8
  %73 = call i32 @ATOI2(i8* %72)
  %74 = mul nsw i32 %73, 100
  %75 = load %struct.tm*, %struct.tm** %5, align 8
  %76 = getelementptr inbounds %struct.tm, %struct.tm* %75, i32 0, i32 1
  store i32 %74, i32* %76, align 4
  %77 = load %struct.tm*, %struct.tm** %5, align 8
  %78 = getelementptr inbounds %struct.tm, %struct.tm* %77, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = sub nsw i32 %79, 1900
  store i32 %80, i32* %78, align 4
  store i32 1, i32* %6, align 4
  br label %81

81:                                               ; preds = %68, %71
  %82 = load i32, i32* %6, align 4
  %83 = icmp ne i32 %82, 0
  br i1 %83, label %84, label %92

84:                                               ; preds = %81
  %85 = load i8*, i8** %2, align 8
  %86 = call i32 @ATOI2(i8* %85)
  store i32 %86, i32* %6, align 4
  %87 = load i32, i32* %6, align 4
  %88 = load %struct.tm*, %struct.tm** %5, align 8
  %89 = getelementptr inbounds %struct.tm, %struct.tm* %88, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = add nsw i32 %90, %87
  store i32 %91, i32* %89, align 4
  br label %106

92:                                               ; preds = %81
  %93 = load i8*, i8** %2, align 8
  %94 = call i32 @ATOI2(i8* %93)
  store i32 %94, i32* %6, align 4
  %95 = load i32, i32* %6, align 4
  %96 = load %struct.tm*, %struct.tm** %5, align 8
  %97 = getelementptr inbounds %struct.tm, %struct.tm* %96, i32 0, i32 1
  store i32 %95, i32* %97, align 4
  %98 = load i32, i32* %6, align 4
  %99 = icmp slt i32 %98, 69
  br i1 %99, label %100, label %105

100:                                              ; preds = %92
  %101 = load %struct.tm*, %struct.tm** %5, align 8
  %102 = getelementptr inbounds %struct.tm, %struct.tm* %101, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = add nsw i32 %103, 100
  store i32 %104, i32* %102, align 4
  br label %105

105:                                              ; preds = %100, %92
  br label %106

106:                                              ; preds = %105, %84
  br label %107

107:                                              ; preds = %68, %106
  %108 = load i8*, i8** %2, align 8
  %109 = call i32 @ATOI2(i8* %108)
  %110 = load %struct.tm*, %struct.tm** %5, align 8
  %111 = getelementptr inbounds %struct.tm, %struct.tm* %110, i32 0, i32 2
  store i32 %109, i32* %111, align 4
  %112 = load %struct.tm*, %struct.tm** %5, align 8
  %113 = getelementptr inbounds %struct.tm, %struct.tm* %112, i32 0, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = icmp sgt i32 %114, 12
  br i1 %115, label %121, label %116

116:                                              ; preds = %107
  %117 = load %struct.tm*, %struct.tm** %5, align 8
  %118 = getelementptr inbounds %struct.tm, %struct.tm* %117, i32 0, i32 2
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %116, %107
  br label %171

122:                                              ; preds = %116
  %123 = load %struct.tm*, %struct.tm** %5, align 8
  %124 = getelementptr inbounds %struct.tm, %struct.tm* %123, i32 0, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = add nsw i32 %125, -1
  store i32 %126, i32* %124, align 4
  %127 = load i8*, i8** %2, align 8
  %128 = call i32 @ATOI2(i8* %127)
  %129 = load %struct.tm*, %struct.tm** %5, align 8
  %130 = getelementptr inbounds %struct.tm, %struct.tm* %129, i32 0, i32 3
  store i32 %128, i32* %130, align 4
  %131 = load %struct.tm*, %struct.tm** %5, align 8
  %132 = getelementptr inbounds %struct.tm, %struct.tm* %131, i32 0, i32 3
  %133 = load i32, i32* %132, align 4
  %134 = icmp sgt i32 %133, 31
  br i1 %134, label %140, label %135

135:                                              ; preds = %122
  %136 = load %struct.tm*, %struct.tm** %5, align 8
  %137 = getelementptr inbounds %struct.tm, %struct.tm* %136, i32 0, i32 3
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %135, %122
  br label %171

141:                                              ; preds = %135
  %142 = load i8*, i8** %2, align 8
  %143 = call i32 @ATOI2(i8* %142)
  %144 = load %struct.tm*, %struct.tm** %5, align 8
  %145 = getelementptr inbounds %struct.tm, %struct.tm* %144, i32 0, i32 4
  store i32 %143, i32* %145, align 4
  %146 = load %struct.tm*, %struct.tm** %5, align 8
  %147 = getelementptr inbounds %struct.tm, %struct.tm* %146, i32 0, i32 4
  %148 = load i32, i32* %147, align 4
  %149 = icmp sgt i32 %148, 23
  br i1 %149, label %150, label %151

150:                                              ; preds = %141
  br label %171

151:                                              ; preds = %141
  %152 = load i8*, i8** %2, align 8
  %153 = call i32 @ATOI2(i8* %152)
  %154 = load %struct.tm*, %struct.tm** %5, align 8
  %155 = getelementptr inbounds %struct.tm, %struct.tm* %154, i32 0, i32 5
  store i32 %153, i32* %155, align 4
  %156 = load %struct.tm*, %struct.tm** %5, align 8
  %157 = getelementptr inbounds %struct.tm, %struct.tm* %156, i32 0, i32 5
  %158 = load i32, i32* %157, align 4
  %159 = icmp sgt i32 %158, 59
  br i1 %159, label %160, label %161

160:                                              ; preds = %151
  br label %171

161:                                              ; preds = %151
  br label %163

162:                                              ; preds = %68
  br label %171

163:                                              ; preds = %161
  %164 = load %struct.tm*, %struct.tm** %5, align 8
  %165 = getelementptr inbounds %struct.tm, %struct.tm* %164, i32 0, i32 6
  store i32 -1, i32* %165, align 4
  %166 = load %struct.tm*, %struct.tm** %5, align 8
  %167 = call i64 @mktime(%struct.tm* %166)
  store i64 %167, i64* %4, align 8
  %168 = load i64, i64* %4, align 8
  %169 = icmp eq i64 %168, -1
  br i1 %169, label %170, label %173

170:                                              ; preds = %163
  br label %171

171:                                              ; preds = %170, %162, %160, %150, %140, %121, %66, %56, %38
  %172 = call i32 (...) @die()
  br label %173

173:                                              ; preds = %171, %163
  %174 = load i64, i64* %4, align 8
  %175 = load i64, i64* %3, align 8
  %176 = icmp slt i64 %174, %175
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  %178 = call i32 (...) @die()
  br label %179

179:                                              ; preds = %177, %173
  %180 = load i64, i64* %4, align 8
  ret i64 %180
}

declare dso_local i64 @time(i64*) #1

declare dso_local %struct.tm* @localtime(i64*) #1

declare dso_local i32 @die(...) #1

declare dso_local i32 @isdigit(i8 zeroext) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @ATOI2(i8*) #1

declare dso_local i64 @mktime(%struct.tm*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
