; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/local/extr_39675.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/local/extr_39675.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [68 x i8] c" ---------------------------------------------------------------- \0A\00", align 1
@.str.1 = private unnamed_addr constant [61 x i8] c" APPLE MAC MINI AppleIntelHD3000Graphics EXPLOIT OSX 10.11 \0A\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c" by Piotr Bania / CISCO TALOS \0A\00", align 1
@.str.3 = private unnamed_addr constant [70 x i8] c" ---------------------------------------------------------------- \0A\0A\0A\00", align 1
@MEM_SIZE = common dso_local global i32 0, align 4
@mem = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [21 x i8] c"Mapping the kernel \0A\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"Initializing service \0A\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"Gen6Accelerator\00", align 1
@.str.7 = private unnamed_addr constant [21 x i8] c"Commencing stage 1 \0A\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"Commencing stage 2 \0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %2 = call i32 @printf(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0))
  %3 = call i32 @printf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0))
  %4 = call i32 @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0))
  %5 = call i32 @printf(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.3, i64 0, i64 0))
  %6 = call i32 @IOServiceClose(i32 0)
  %7 = call i32 @IOServiceOpen(i32 0, i32 0, i32 0, i32 0)
  %8 = load i32, i32* @MEM_SIZE, align 4
  %9 = call i32 @Alloc(i32 0, i32 %8)
  store i32 %9, i32* @mem, align 4
  %10 = call i32 @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0))
  %11 = call i32 (...) @MapKernel()
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %13, label %14

13:                                               ; preds = %0
  store i32 -1, i32* %1, align 4
  br label %31

14:                                               ; preds = %0
  %15 = call i32 @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0))
  %16 = call i32 @InitService(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0))
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %18, label %19

18:                                               ; preds = %14
  store i32 -1, i32* %1, align 4
  br label %31

19:                                               ; preds = %14
  %20 = call i32 @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0))
  %21 = call i32 (...) @Stage1()
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  store i32 -1, i32* %1, align 4
  br label %31

24:                                               ; preds = %19
  %25 = call i32 (...) @ResolveApi()
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  store i32 -1, i32* %1, align 4
  br label %31

28:                                               ; preds = %24
  %29 = call i32 @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0))
  %30 = call i32 (...) @Stage2()
  store i32 1, i32* %1, align 4
  br label %31

31:                                               ; preds = %28, %27, %23, %18, %13
  %32 = load i32, i32* %1, align 4
  ret i32 %32
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @IOServiceClose(i32) #1

declare dso_local i32 @IOServiceOpen(i32, i32, i32, i32) #1

declare dso_local i32 @Alloc(i32, i32) #1

declare dso_local i32 @MapKernel(...) #1

declare dso_local i32 @InitService(i8*) #1

declare dso_local i32 @Stage1(...) #1

declare dso_local i32 @ResolveApi(...) #1

declare dso_local i32 @Stage2(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
