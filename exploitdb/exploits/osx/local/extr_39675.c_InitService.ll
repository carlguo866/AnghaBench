; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/local/extr_39675.c_InitService.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/local/extr_39675.c_InitService.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [26 x i8] c"InitService: Trying: %s \0A\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"Initservice: IOServiceMatching() failed \0A\00", align 1
@kIOMasterPortDefault = common dso_local global i32 0, align 4
@KERN_SUCCESS = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [51 x i8] c"InitService: IOServiceGetMatchingServices failed \0A\00", align 1
@IO_OBJECT_NULL = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [37 x i8] c"InitService: IOIteratorNext failed \0A\00", align 1
@MACH_PORT_NULL = common dso_local global i32 0, align 4
@conn = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [37 x i8] c"InitService: IOServiceOpen failed! \0A\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"InitService: service ok! \0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @InitService(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %8 = load i8*, i8** %3, align 8
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* %8)
  %10 = load i8*, i8** %3, align 8
  %11 = call i32 @IOServiceMatching(i8* %10)
  store i32 %11, i32* %6, align 4
  %12 = load i32, i32* %6, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %1
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0))
  store i32 -1, i32* %2, align 4
  br label %43

16:                                               ; preds = %1
  %17 = load i32, i32* @kIOMasterPortDefault, align 4
  %18 = load i32, i32* %6, align 4
  %19 = call i64 @IOServiceGetMatchingServices(i32 %17, i32 %18, i32* %7)
  %20 = load i64, i64* @KERN_SUCCESS, align 8
  %21 = icmp ne i64 %19, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %16
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0))
  store i32 -1, i32* %2, align 4
  br label %43

24:                                               ; preds = %16
  %25 = load i32, i32* %7, align 4
  %26 = call i64 @IOIteratorNext(i32 %25)
  store i64 %26, i64* %5, align 8
  %27 = load i64, i64* %5, align 8
  %28 = load i64, i64* @IO_OBJECT_NULL, align 8
  %29 = icmp eq i64 %27, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %24
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0))
  store i32 -1, i32* %2, align 4
  br label %43

32:                                               ; preds = %24
  store i32 0, i32* %4, align 4
  %33 = load i32, i32* @MACH_PORT_NULL, align 4
  store i32 %33, i32* @conn, align 4
  %34 = load i64, i64* %5, align 8
  %35 = call i32 (...) @mach_task_self()
  %36 = call i64 @IOServiceOpen(i64 %34, i32 %35, i32 5, i32* @conn)
  %37 = load i64, i64* @KERN_SUCCESS, align 8
  %38 = icmp ne i64 %36, %37
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0))
  store i32 -1, i32* %2, align 4
  br label %43

41:                                               ; preds = %32
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0))
  store i32 1, i32* %2, align 4
  br label %43

43:                                               ; preds = %41, %39, %30, %22, %14
  %44 = load i32, i32* %2, align 4
  ret i32 %44
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @IOServiceMatching(i8*) #1

declare dso_local i64 @IOServiceGetMatchingServices(i32, i32, i32*) #1

declare dso_local i64 @IOIteratorNext(i32) #1

declare dso_local i64 @IOServiceOpen(i64, i32, i32, i32*) #1

declare dso_local i32 @mach_task_self(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
