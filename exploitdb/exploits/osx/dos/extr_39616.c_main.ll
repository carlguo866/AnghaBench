; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_39616.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_39616.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [14 x i8] c"IOAccelerator\00", align 1
@gl_context = common dso_local global i8* null, align 8
@KERN_SUCCESS = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [30 x i8] c"IOConnectAddClient error: %x\0A\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"added client to the shared UC\0A\00", align 1
@handle = common dso_local global i32 0, align 4
@lock = common dso_local global i32 0, align 4
@go = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [39 x i8] c"called unmap from main process thread\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %9 = call i8* @get_user_client(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1)
  store i8* %9, i8** @gl_context, align 8
  %10 = call i8* @get_user_client(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 6)
  store i8* %10, i8** %6, align 8
  %11 = load i8*, i8** @gl_context, align 8
  %12 = load i8*, i8** %6, align 8
  %13 = call i64 @IOConnectAddClient(i8* %11, i8* %12)
  store i64 %13, i64* %7, align 8
  %14 = load i64, i64* %7, align 8
  %15 = load i64, i64* @KERN_SUCCESS, align 8
  %16 = icmp ne i64 %14, %15
  br i1 %16, label %17, label %20

17:                                               ; preds = %2
  %18 = load i64, i64* %7, align 8
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i64 %18)
  store i32 0, i32* %3, align 4
  br label %36

20:                                               ; preds = %2
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0))
  %22 = load i8*, i8** @gl_context, align 8
  %23 = call i32 @map_user_memory(i8* %22)
  store i32 %23, i32* @handle, align 4
  %24 = call i32 @OSSpinLockLock(i32* @lock)
  %25 = load i64, i64* @go, align 8
  %26 = inttoptr i64 %25 to i8*
  %27 = call i32 @pthread_create(i32* %8, i32* null, i8* %26, i32* null)
  %28 = call i32 @usleep(i32 100000)
  %29 = call i32 @OSSpinLockUnlock(i32* @lock)
  %30 = load i8*, i8** @gl_context, align 8
  %31 = load i32, i32* @handle, align 4
  %32 = call i32 @unmap_user_memory(i8* %30, i32 %31)
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0))
  %34 = load i32, i32* %8, align 4
  %35 = call i32 @pthread_join(i32 %34, i32* null)
  store i32 0, i32* %3, align 4
  br label %36

36:                                               ; preds = %20, %17
  %37 = load i32, i32* %3, align 4
  ret i32 %37
}

declare dso_local i8* @get_user_client(i8*, i32) #1

declare dso_local i64 @IOConnectAddClient(i8*, i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @map_user_memory(i8*) #1

declare dso_local i32 @OSSpinLockLock(i32*) #1

declare !callback !2 dso_local i32 @pthread_create(i32*, i32*, i8*, i32*) #1

declare dso_local i32 @usleep(i32) #1

declare dso_local i32 @OSSpinLockUnlock(i32*) #1

declare dso_local i32 @unmap_user_memory(i8*, i32) #1

declare dso_local i32 @pthread_join(i32, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
!2 = !{!3}
!3 = !{i64 2, i64 3, i1 false}
