; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_40652.c_get_connection.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_40652.c_get_connection.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@kIOMasterPortDefault = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [25 x i8] c"IOBluetoothHCIController\00", align 1
@MACH_PORT_NULL = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [23 x i8] c"unable to get service\0A\00", align 1
@KERN_SUCCESS = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [26 x i8] c"IOServiceOpen failed: %s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @get_connection(i64 %0) #0 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  %7 = load i32, i32* @kIOMasterPortDefault, align 4
  %8 = call i32 @IOServiceMatching(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0))
  %9 = call i64 @IOServiceGetMatchingService(i32 %7, i32 %8)
  store i64 %9, i64* %5, align 8
  %10 = load i64, i64* %5, align 8
  %11 = load i64, i64* @MACH_PORT_NULL, align 8
  %12 = icmp eq i64 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0))
  %15 = load i64, i64* @MACH_PORT_NULL, align 8
  store i64 %15, i64* %2, align 8
  br label %33

16:                                               ; preds = %1
  %17 = load i64, i64* @MACH_PORT_NULL, align 8
  store i64 %17, i64* %6, align 8
  %18 = load i64, i64* %5, align 8
  %19 = load i64, i64* %3, align 8
  %20 = call i64 @IOServiceOpen(i64 %18, i64 %19, i32 0, i64* %6)
  store i64 %20, i64* %4, align 8
  %21 = load i64, i64* %4, align 8
  %22 = load i64, i64* @KERN_SUCCESS, align 8
  %23 = icmp ne i64 %21, %22
  br i1 %23, label %24, label %29

24:                                               ; preds = %16
  %25 = load i64, i64* %4, align 8
  %26 = call i8* @mach_error_string(i64 %25)
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i8* %26)
  %28 = load i64, i64* @MACH_PORT_NULL, align 8
  store i64 %28, i64* %6, align 8
  br label %29

29:                                               ; preds = %24, %16
  %30 = load i64, i64* %5, align 8
  %31 = call i32 @IOObjectRelease(i64 %30)
  %32 = load i64, i64* %6, align 8
  store i64 %32, i64* %2, align 8
  br label %33

33:                                               ; preds = %29, %13
  %34 = load i64, i64* %2, align 8
  ret i64 %34
}

declare dso_local i64 @IOServiceGetMatchingService(i32, i32) #1

declare dso_local i32 @IOServiceMatching(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @IOServiceOpen(i64, i64, i32, i64*) #1

declare dso_local i8* @mach_error_string(i64) #1

declare dso_local i32 @IOObjectRelease(i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
