; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_39607.c_get_user_client.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_39607.c_get_user_client.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [46 x i8] c"unable to create service matching dictionary\0A\00", align 1
@kIOMasterPortDefault = common dso_local global i32 0, align 4
@KERN_SUCCESS = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [12 x i8] c"no matches\0A\00", align 1
@IO_OBJECT_NULL = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [24 x i8] c"unable to find service\0A\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"got service: %x\0A\00", align 1
@MACH_PORT_NULL = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [38 x i8] c"unable to get user client connection\0A\00", align 1
@.str.5 = private unnamed_addr constant [31 x i8] c"got userclient connection: %x\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @get_user_client(i8* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %11 = load i8*, i8** %4, align 8
  %12 = call i32 @IOServiceMatching(i8* %11)
  store i32 %12, i32* %7, align 4
  %13 = load i32, i32* %7, align 4
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %2
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %51

17:                                               ; preds = %2
  %18 = load i32, i32* @kIOMasterPortDefault, align 4
  %19 = load i32, i32* %7, align 4
  %20 = call i64 @IOServiceGetMatchingServices(i32 %18, i32 %19, i32* %8)
  store i64 %20, i64* %6, align 8
  %21 = load i64, i64* %6, align 8
  %22 = load i64, i64* @KERN_SUCCESS, align 8
  %23 = icmp ne i64 %21, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %17
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %51

26:                                               ; preds = %17
  %27 = load i32, i32* %8, align 4
  %28 = call i64 @IOIteratorNext(i32 %27)
  store i64 %28, i64* %9, align 8
  %29 = load i64, i64* %9, align 8
  %30 = load i64, i64* @IO_OBJECT_NULL, align 8
  %31 = icmp eq i64 %29, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %26
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %51

34:                                               ; preds = %26
  %35 = load i64, i64* %9, align 8
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i64 %35)
  %37 = load i32, i32* @MACH_PORT_NULL, align 4
  store i32 %37, i32* %10, align 4
  %38 = load i64, i64* %9, align 8
  %39 = call i32 (...) @mach_task_self()
  %40 = load i32, i32* %5, align 4
  %41 = call i64 @IOServiceOpen(i64 %38, i32 %39, i32 %40, i32* %10)
  store i64 %41, i64* %6, align 8
  %42 = load i64, i64* %6, align 8
  %43 = load i64, i64* @KERN_SUCCESS, align 8
  %44 = icmp ne i64 %42, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %34
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %51

47:                                               ; preds = %34
  %48 = load i32, i32* %10, align 4
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5, i64 0, i64 0), i32 %48)
  %50 = load i32, i32* %10, align 4
  store i32 %50, i32* %3, align 4
  br label %51

51:                                               ; preds = %47, %45, %32, %24, %15
  %52 = load i32, i32* %3, align 4
  ret i32 %52
}

declare dso_local i32 @IOServiceMatching(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @IOServiceGetMatchingServices(i32, i32, i32*) #1

declare dso_local i64 @IOIteratorNext(i32) #1

declare dso_local i64 @IOServiceOpen(i64, i32, i32, i32*) #1

declare dso_local i32 @mach_task_self(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
