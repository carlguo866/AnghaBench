; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_39915.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_39915.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [37 x i8] c"\\Device\\HarddiskVolume2\\ARMADITO.TXT\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"\\Device\\HarddiskVolume2\\Malware.exe\00", align 1
@.str.2 = private unnamed_addr constant [58 x i8] c"\\Device\\HarddiskVolume2\\ARMADITO.TXT-ILoveJeromeNotin.exe\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"Scanning C:\\ARMADITO.txt\0A\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"Scanning C:\\malware.exe\0A\00", align 1
@.str.5 = private unnamed_addr constant [47 x i8] c"Scanning C:\\ARMADITO.txt-ILoveJeromeNotin.exe\0A\00", align 1
@ARMADITO_EINVAL = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"ARMADITO.TXT\00", align 1
@ARMADITO_WHITE_LISTED = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [74 x i8] c"This file is not suspicious. Since it contains ARMADITO.txt ........... \0A\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"Armadito will now scan the file.\0A\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* null, i8** %6, align 8
  store i32 0, i32* %7, align 4
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i8** %8, align 8
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i8** %9, align 8
  store i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.2, i64 0, i64 0), i8** %10, align 8
  store i32 -1, i32* %12, align 4
  store i32 0, i32* %7, align 4
  br label %13

13:                                               ; preds = %52, %2
  %14 = load i32, i32* %7, align 4
  %15 = icmp slt i32 %14, 3
  br i1 %15, label %16, label %55

16:                                               ; preds = %13
  %17 = load i32, i32* %7, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %16
  %20 = call i32 @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0))
  %21 = load i8*, i8** %8, align 8
  %22 = call i8* @ConvertDeviceNameToMsDosName(i8* %21)
  store i8* %22, i8** %6, align 8
  br label %35

23:                                               ; preds = %16
  %24 = load i32, i32* %7, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %30

26:                                               ; preds = %23
  %27 = call i32 @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0))
  %28 = load i8*, i8** %9, align 8
  %29 = call i8* @ConvertDeviceNameToMsDosName(i8* %28)
  store i8* %29, i8** %6, align 8
  br label %34

30:                                               ; preds = %23
  %31 = call i32 @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.5, i64 0, i64 0))
  %32 = load i8*, i8** %10, align 8
  %33 = call i8* @ConvertDeviceNameToMsDosName(i8* %32)
  store i8* %33, i8** %6, align 8
  br label %34

34:                                               ; preds = %30, %26
  br label %35

35:                                               ; preds = %34, %19
  %36 = load i8*, i8** %6, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %35
  %39 = load i32, i32* @ARMADITO_EINVAL, align 4
  store i32 %39, i32* %12, align 4
  br label %50

40:                                               ; preds = %35
  %41 = load i8*, i8** %6, align 8
  %42 = call i32* @strstr(i8* %41, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0))
  %43 = icmp ne i32* %42, null
  br i1 %43, label %44, label %47

44:                                               ; preds = %40
  %45 = load i32, i32* @ARMADITO_WHITE_LISTED, align 4
  store i32 %45, i32* %12, align 4
  %46 = call i32 @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0))
  br label %49

47:                                               ; preds = %40
  %48 = call i32 @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0))
  br label %49

49:                                               ; preds = %47, %44
  br label %50

50:                                               ; preds = %49, %38
  %51 = call i32 @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0))
  br label %52

52:                                               ; preds = %50
  %53 = load i32, i32* %7, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %7, align 4
  br label %13

55:                                               ; preds = %13
  %56 = call i32 (...) @getchar()
  ret i32 0
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i8* @ConvertDeviceNameToMsDosName(i8*) #1

declare dso_local i32* @strstr(i8*, i8*) #1

declare dso_local i32 @getchar(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
