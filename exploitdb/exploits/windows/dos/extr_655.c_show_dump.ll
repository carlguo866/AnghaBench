; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_655.c_show_dump.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_655.c_show_dump.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [17 x i8] c"0123456789abcdef\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @show_dump(i8* %0, i64 %1, i32* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca [68 x i8], align 16
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8** %7, align 8
  %14 = load i8*, i8** %4, align 8
  store i8* %14, i8** %10, align 8
  %15 = load i8*, i8** %4, align 8
  store i8* %15, i8** %11, align 8
  br label %16

16:                                               ; preds = %106, %3
  %17 = load i64, i64* %5, align 8
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %117

19:                                               ; preds = %16
  %20 = getelementptr inbounds [68 x i8], [68 x i8]* %8, i64 0, i64 0
  store i8* %20, i8** %9, align 8
  %21 = load i64, i64* %5, align 8
  %22 = icmp ult i64 %21, 16
  br i1 %22, label %23, label %26

23:                                               ; preds = %19
  %24 = load i64, i64* %5, align 8
  %25 = trunc i64 %24 to i8
  store i8 %25, i8* %13, align 1
  br label %27

26:                                               ; preds = %19
  store i8 16, i8* %13, align 1
  br label %27

27:                                               ; preds = %26, %23
  store i8 0, i8* %12, align 1
  br label %28

28:                                               ; preds = %57, %27
  %29 = load i8, i8* %12, align 1
  %30 = zext i8 %29 to i32
  %31 = load i8, i8* %13, align 1
  %32 = zext i8 %31 to i32
  %33 = icmp slt i32 %30, %32
  br i1 %33, label %34, label %62

34:                                               ; preds = %28
  %35 = load i8*, i8** %7, align 8
  %36 = load i8*, i8** %10, align 8
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = ashr i32 %38, 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %35, i64 %40
  %42 = load i8, i8* %41, align 1
  %43 = load i8*, i8** %9, align 8
  %44 = getelementptr inbounds i8, i8* %43, i32 1
  store i8* %44, i8** %9, align 8
  store i8 %42, i8* %43, align 1
  %45 = load i8*, i8** %7, align 8
  %46 = load i8*, i8** %10, align 8
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = and i32 %48, 15
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %45, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = load i8*, i8** %9, align 8
  %54 = getelementptr inbounds i8, i8* %53, i32 1
  store i8* %54, i8** %9, align 8
  store i8 %52, i8* %53, align 1
  %55 = load i8*, i8** %9, align 8
  %56 = getelementptr inbounds i8, i8* %55, i32 1
  store i8* %56, i8** %9, align 8
  store i8 32, i8* %55, align 1
  br label %57

57:                                               ; preds = %34
  %58 = load i8, i8* %12, align 1
  %59 = add i8 %58, 1
  store i8 %59, i8* %12, align 1
  %60 = load i8*, i8** %10, align 8
  %61 = getelementptr inbounds i8, i8* %60, i32 1
  store i8* %61, i8** %10, align 8
  br label %28

62:                                               ; preds = %28
  %63 = load i8*, i8** %9, align 8
  %64 = getelementptr inbounds [68 x i8], [68 x i8]* %8, i64 0, i64 0
  %65 = ptrtoint i8* %63 to i64
  %66 = ptrtoint i8* %64 to i64
  %67 = sub i64 %65, %66
  %68 = trunc i64 %67 to i8
  store i8 %68, i8* %12, align 1
  br label %69

69:                                               ; preds = %75, %62
  %70 = load i8, i8* %12, align 1
  %71 = zext i8 %70 to i32
  %72 = icmp slt i32 %71, 50
  br i1 %72, label %73, label %80

73:                                               ; preds = %69
  %74 = load i8*, i8** %9, align 8
  store i8 32, i8* %74, align 1
  br label %75

75:                                               ; preds = %73
  %76 = load i8, i8* %12, align 1
  %77 = add i8 %76, 1
  store i8 %77, i8* %12, align 1
  %78 = load i8*, i8** %9, align 8
  %79 = getelementptr inbounds i8, i8* %78, i32 1
  store i8* %79, i8** %9, align 8
  br label %69

80:                                               ; preds = %69
  store i8 0, i8* %12, align 1
  br label %81

81:                                               ; preds = %99, %80
  %82 = load i8, i8* %12, align 1
  %83 = zext i8 %82 to i32
  %84 = load i8, i8* %13, align 1
  %85 = zext i8 %84 to i32
  %86 = icmp slt i32 %83, %85
  br i1 %86, label %87, label %106

87:                                               ; preds = %81
  %88 = load i8*, i8** %11, align 8
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = icmp sge i32 %90, 32
  br i1 %91, label %92, label %96

92:                                               ; preds = %87
  %93 = load i8*, i8** %11, align 8
  %94 = load i8, i8* %93, align 1
  %95 = load i8*, i8** %9, align 8
  store i8 %94, i8* %95, align 1
  br label %98

96:                                               ; preds = %87
  %97 = load i8*, i8** %9, align 8
  store i8 46, i8* %97, align 1
  br label %98

98:                                               ; preds = %96, %92
  br label %99

99:                                               ; preds = %98
  %100 = load i8, i8* %12, align 1
  %101 = add i8 %100, 1
  store i8 %101, i8* %12, align 1
  %102 = load i8*, i8** %11, align 8
  %103 = getelementptr inbounds i8, i8* %102, i32 1
  store i8* %103, i8** %11, align 8
  %104 = load i8*, i8** %9, align 8
  %105 = getelementptr inbounds i8, i8* %104, i32 1
  store i8* %105, i8** %9, align 8
  br label %81

106:                                              ; preds = %81
  %107 = load i8*, i8** %9, align 8
  %108 = getelementptr inbounds i8, i8* %107, i32 1
  store i8* %108, i8** %9, align 8
  store i8 10, i8* %107, align 1
  %109 = load i8*, i8** %9, align 8
  store i8 0, i8* %109, align 1
  %110 = getelementptr inbounds [68 x i8], [68 x i8]* %8, i64 0, i64 0
  %111 = load i32*, i32** %6, align 8
  %112 = call i32 @fputs(i8* %110, i32* %111)
  %113 = load i8, i8* %13, align 1
  %114 = zext i8 %113 to i64
  %115 = load i64, i64* %5, align 8
  %116 = sub i64 %115, %114
  store i64 %116, i64* %5, align 8
  br label %16

117:                                              ; preds = %16
  ret void
}

declare dso_local i32 @fputs(i8*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
