; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_810.c_show_info.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_810.c_show_info.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@stdout = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [19 x i8] c"  Hostname     %s\0A\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"  version      %s\0A\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"  %d players:\0A\00", align 1
@.str.3 = private unnamed_addr constant [19 x i8] c"             - %s\0A\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"  URL          %s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @show_info(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %10 = load i8*, i8** %3, align 8
  %11 = bitcast i8* %10 to i32*
  store i32* %11, i32** %5, align 8
  %12 = load i32, i32* %4, align 4
  %13 = ashr i32 %12, 1
  store i32 %13, i32* %4, align 4
  br label %14

14:                                               ; preds = %23, %2
  %15 = load i32, i32* %4, align 4
  %16 = add nsw i32 %15, -1
  store i32 %16, i32* %4, align 4
  %17 = icmp ne i32 %15, 0
  br i1 %17, label %18, label %26

18:                                               ; preds = %14
  %19 = load i32*, i32** %5, align 8
  %20 = load i32, i32* %19, align 4
  %21 = call i32 @ntohs(i32 %20)
  %22 = load i32*, i32** %5, align 8
  store i32 %21, i32* %22, align 4
  br label %23

23:                                               ; preds = %18
  %24 = load i32*, i32** %5, align 8
  %25 = getelementptr inbounds i32, i32* %24, i32 1
  store i32* %25, i32** %5, align 8
  br label %14

26:                                               ; preds = %14
  %27 = load i32, i32* @stdout, align 4
  %28 = call i32 @fputc(i8 signext 10, i32 %27)
  %29 = load i8*, i8** %3, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 14
  store i8* %30, i8** %3, align 8
  %31 = load i8*, i8** %3, align 8
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %6, align 4
  %34 = load i8*, i8** %3, align 8
  %35 = getelementptr inbounds i8, i8* %34, i64 2
  store i8* %35, i8** %3, align 8
  %36 = load i32, i32* %6, align 4
  %37 = icmp sgt i32 %36, 1
  br i1 %37, label %38, label %41

38:                                               ; preds = %26
  %39 = load i8*, i8** %3, align 8
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* %39)
  br label %41

41:                                               ; preds = %38, %26
  %42 = load i32, i32* %6, align 4
  %43 = load i32, i32* %6, align 4
  %44 = and i32 %43, 1
  %45 = add nsw i32 %42, %44
  %46 = load i8*, i8** %3, align 8
  %47 = sext i32 %45 to i64
  %48 = getelementptr inbounds i8, i8* %46, i64 %47
  store i8* %48, i8** %3, align 8
  %49 = load i8*, i8** %3, align 8
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %50, align 4
  store i32 %51, i32* %7, align 4
  %52 = load i8*, i8** %3, align 8
  %53 = getelementptr inbounds i8, i8* %52, i64 12
  store i8* %53, i8** %3, align 8
  %54 = load i8*, i8** %3, align 8
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 4
  store i32 %56, i32* %6, align 4
  %57 = load i8*, i8** %3, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 2
  store i8* %58, i8** %3, align 8
  %59 = load i32, i32* %6, align 4
  %60 = icmp sgt i32 %59, 1
  br i1 %60, label %61, label %64

61:                                               ; preds = %41
  %62 = load i8*, i8** %3, align 8
  %63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i8* %62)
  br label %64

64:                                               ; preds = %61, %41
  %65 = load i32, i32* %6, align 4
  %66 = load i32, i32* %6, align 4
  %67 = and i32 %66, 1
  %68 = add nsw i32 %65, %67
  %69 = load i8*, i8** %3, align 8
  %70 = sext i32 %68 to i64
  %71 = getelementptr inbounds i8, i8* %69, i64 %70
  store i8* %71, i8** %3, align 8
  %72 = load i8*, i8** %3, align 8
  %73 = getelementptr inbounds i8, i8* %72, i64 4
  store i8* %73, i8** %3, align 8
  %74 = load i8*, i8** %3, align 8
  %75 = bitcast i8* %74 to i32*
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %6, align 4
  %77 = load i8*, i8** %3, align 8
  %78 = getelementptr inbounds i8, i8* %77, i64 2
  store i8* %78, i8** %3, align 8
  %79 = load i32, i32* %7, align 4
  %80 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i32 %79)
  %81 = load i8*, i8** %3, align 8
  store i8* %81, i8** %8, align 8
  br label %82

82:                                               ; preds = %96, %64
  %83 = load i32, i32* %7, align 4
  %84 = add nsw i32 %83, -1
  store i32 %84, i32* %7, align 4
  %85 = icmp ne i32 %83, 0
  br i1 %85, label %86, label %99

86:                                               ; preds = %82
  %87 = load i8*, i8** %8, align 8
  %88 = call i8* @strchr(i8* %87, i8 signext 10)
  store i8* %88, i8** %9, align 8
  %89 = load i8*, i8** %9, align 8
  %90 = icmp ne i8* %89, null
  br i1 %90, label %92, label %91

91:                                               ; preds = %86
  br label %99

92:                                               ; preds = %86
  %93 = load i8*, i8** %9, align 8
  store i8 0, i8* %93, align 1
  %94 = load i8*, i8** %8, align 8
  %95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i8* %94)
  br label %96

96:                                               ; preds = %92
  %97 = load i8*, i8** %9, align 8
  %98 = getelementptr inbounds i8, i8* %97, i64 1
  store i8* %98, i8** %8, align 8
  br label %82

99:                                               ; preds = %91, %82
  %100 = load i32, i32* %6, align 4
  %101 = load i32, i32* %6, align 4
  %102 = and i32 %101, 1
  %103 = add nsw i32 %100, %102
  %104 = add nsw i32 %103, 4
  %105 = load i8*, i8** %3, align 8
  %106 = sext i32 %104 to i64
  %107 = getelementptr inbounds i8, i8* %105, i64 %106
  store i8* %107, i8** %3, align 8
  %108 = load i8*, i8** %3, align 8
  %109 = bitcast i8* %108 to i32*
  %110 = load i32, i32* %109, align 4
  store i32 %110, i32* %6, align 4
  %111 = load i8*, i8** %3, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 2
  store i8* %112, i8** %3, align 8
  %113 = load i32, i32* %6, align 4
  %114 = icmp sgt i32 %113, 1
  br i1 %114, label %115, label %118

115:                                              ; preds = %99
  %116 = load i8*, i8** %3, align 8
  %117 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i8* %116)
  br label %118

118:                                              ; preds = %115, %99
  %119 = load i32, i32* %6, align 4
  %120 = load i32, i32* %6, align 4
  %121 = and i32 %120, 1
  %122 = add nsw i32 %119, %121
  %123 = load i8*, i8** %3, align 8
  %124 = sext i32 %122 to i64
  %125 = getelementptr inbounds i8, i8* %123, i64 %124
  store i8* %125, i8** %3, align 8
  %126 = load i32, i32* @stdout, align 4
  %127 = call i32 @fputc(i8 signext 10, i32 %126)
  ret void
}

declare dso_local i32 @ntohs(i32) #1

declare dso_local i32 @fputc(i8 signext, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i8* @strchr(i8*, i8 signext) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
