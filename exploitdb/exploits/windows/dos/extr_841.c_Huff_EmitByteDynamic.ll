; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_841.c_Huff_EmitByteDynamic.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_841.c_Huff_EmitByteDynamic.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@NOT_REFERENCED = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i8**, i32, i8*)* @Huff_EmitByteDynamic to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @Huff_EmitByteDynamic(i8** %0, i32 %1, i8* %2) #0 {
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8**, align 8
  %8 = alloca i32, align 4
  store i8** %0, i8*** %4, align 8
  store i32 %1, i32* %5, align 4
  store i8* %2, i8** %6, align 8
  %9 = load i8**, i8*** %4, align 8
  %10 = load i32, i32* %5, align 4
  %11 = add nsw i32 %10, 5
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8*, i8** %9, i64 %12
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast i8* %14 to i8**
  store i8** %15, i8*** %7, align 8
  %16 = load i8**, i8*** %7, align 8
  %17 = icmp ne i8** %16, null
  br i1 %17, label %18, label %31

18:                                               ; preds = %3
  %19 = load i8**, i8*** %7, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i64 2
  %21 = load i8*, i8** %20, align 8
  %22 = icmp ne i8* %21, null
  br i1 %22, label %23, label %30

23:                                               ; preds = %18
  %24 = load i8**, i8*** %7, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 2
  %26 = load i8*, i8** %25, align 8
  %27 = load i8**, i8*** %7, align 8
  %28 = load i8*, i8** %6, align 8
  %29 = call i32 @Huff_EmitPathToByte(i8* %26, i8** %27, i8* %28)
  br label %30

30:                                               ; preds = %23, %18
  br label %48

31:                                               ; preds = %3
  %32 = load i8**, i8*** %4, align 8
  %33 = load i32, i32* @NOT_REFERENCED, align 4
  %34 = load i8*, i8** %6, align 8
  call void @Huff_EmitByteDynamic(i8** %32, i32 %33, i8* %34)
  store i32 7, i32* %8, align 4
  br label %35

35:                                               ; preds = %45, %31
  %36 = load i32, i32* %8, align 4
  %37 = icmp sge i32 %36, 0
  br i1 %37, label %38, label %48

38:                                               ; preds = %35
  %39 = load i32, i32* %5, align 4
  %40 = load i32, i32* %8, align 4
  %41 = ashr i32 %39, %40
  %42 = and i32 %41, 1
  %43 = load i8*, i8** %6, align 8
  %44 = call i32 @Huff_EmitBit(i32 %42, i8* %43)
  br label %45

45:                                               ; preds = %38
  %46 = load i32, i32* %8, align 4
  %47 = add nsw i32 %46, -1
  store i32 %47, i32* %8, align 4
  br label %35

48:                                               ; preds = %30, %35
  ret void
}

declare dso_local i32 @Huff_EmitPathToByte(i8*, i8**, i8*) #1

declare dso_local i32 @Huff_EmitBit(i32, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
