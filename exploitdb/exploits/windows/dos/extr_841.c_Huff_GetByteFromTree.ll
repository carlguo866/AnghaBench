; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_841.c_Huff_GetByteFromTree.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_841.c_Huff_GetByteFromTree.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@NODE_NEXT = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @Huff_GetByteFromTree(i8** %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  store i8** %0, i8*** %4, align 8
  store i8* %1, i8** %5, align 8
  %6 = load i8**, i8*** %4, align 8
  %7 = icmp ne i8** %6, null
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  store i32 0, i32* %3, align 4
  br label %40

9:                                                ; preds = %2
  br label %10

10:                                               ; preds = %34, %9
  %11 = load i8**, i8*** %4, align 8
  %12 = getelementptr inbounds i8*, i8** %11, i64 7
  %13 = load i8*, i8** %12, align 8
  %14 = load i8*, i8** @NODE_NEXT, align 8
  %15 = icmp eq i8* %13, %14
  br i1 %15, label %16, label %35

16:                                               ; preds = %10
  %17 = load i8*, i8** %5, align 8
  %18 = call i32 @Huff_GetBit(i8* %17)
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = load i8**, i8*** %4, align 8
  %22 = getelementptr inbounds i8*, i8** %21, i64 0
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast i8* %23 to i8**
  store i8** %24, i8*** %4, align 8
  br label %30

25:                                               ; preds = %16
  %26 = load i8**, i8*** %4, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 1
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast i8* %28 to i8**
  store i8** %29, i8*** %4, align 8
  br label %30

30:                                               ; preds = %25, %20
  %31 = load i8**, i8*** %4, align 8
  %32 = icmp ne i8** %31, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  store i32 0, i32* %3, align 4
  br label %40

34:                                               ; preds = %30
  br label %10

35:                                               ; preds = %10
  %36 = load i8**, i8*** %4, align 8
  %37 = getelementptr inbounds i8*, i8** %36, i64 7
  %38 = load i8*, i8** %37, align 8
  %39 = call i32 @VALUE(i8* %38)
  store i32 %39, i32* %3, align 4
  br label %40

40:                                               ; preds = %35, %33, %8
  %41 = load i32, i32* %3, align 4
  ret i32 %41
}

declare dso_local i32 @Huff_GetBit(i8*) #1

declare dso_local i32 @VALUE(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
