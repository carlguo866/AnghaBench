; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_672.c_write_bits.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_672.c_write_bits.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @write_bits(i64 %0, i64 %1, i8* %2, i64 %3) #0 {
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  store i64 %0, i64* %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  store i64 %3, i64* %9, align 8
  %12 = load i64, i64* %7, align 8
  %13 = icmp ugt i64 %12, 32
  br i1 %13, label %14, label %16

14:                                               ; preds = %4
  %15 = load i64, i64* %9, align 8
  store i64 %15, i64* %5, align 8
  br label %74

16:                                               ; preds = %4
  %17 = load i64, i64* %7, align 8
  %18 = icmp ult i64 %17, 32
  br i1 %18, label %19, label %27

19:                                               ; preds = %16
  %20 = load i64, i64* %7, align 8
  %21 = trunc i64 %20 to i32
  %22 = shl i32 1, %21
  %23 = sub nsw i32 %22, 1
  %24 = sext i32 %23 to i64
  %25 = load i64, i64* %6, align 8
  %26 = and i64 %25, %24
  store i64 %26, i64* %6, align 8
  br label %27

27:                                               ; preds = %19, %16
  br label %28

28:                                               ; preds = %60, %27
  %29 = load i64, i64* %9, align 8
  %30 = and i64 %29, 7
  store i64 %30, i64* %10, align 8
  %31 = load i64, i64* %10, align 8
  %32 = trunc i64 %31 to i32
  %33 = shl i32 1, %32
  %34 = sub nsw i32 %33, 1
  %35 = load i8*, i8** %8, align 8
  %36 = load i64, i64* %9, align 8
  %37 = lshr i64 %36, 3
  %38 = getelementptr inbounds i8, i8* %35, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = and i32 %40, %34
  %42 = trunc i32 %41 to i8
  store i8 %42, i8* %38, align 1
  %43 = load i64, i64* %6, align 8
  %44 = load i64, i64* %10, align 8
  %45 = shl i64 %43, %44
  %46 = load i8*, i8** %8, align 8
  %47 = load i64, i64* %9, align 8
  %48 = lshr i64 %47, 3
  %49 = getelementptr inbounds i8, i8* %46, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i64
  %52 = or i64 %51, %45
  %53 = trunc i64 %52 to i8
  store i8 %53, i8* %49, align 1
  %54 = load i64, i64* %10, align 8
  %55 = sub i64 8, %54
  store i64 %55, i64* %11, align 8
  %56 = load i64, i64* %11, align 8
  %57 = load i64, i64* %7, align 8
  %58 = icmp uge i64 %56, %57
  br i1 %58, label %59, label %60

59:                                               ; preds = %28
  br label %70

60:                                               ; preds = %28
  %61 = load i64, i64* %11, align 8
  %62 = load i64, i64* %9, align 8
  %63 = add i64 %62, %61
  store i64 %63, i64* %9, align 8
  %64 = load i64, i64* %11, align 8
  %65 = load i64, i64* %7, align 8
  %66 = sub i64 %65, %64
  store i64 %66, i64* %7, align 8
  %67 = load i64, i64* %11, align 8
  %68 = load i64, i64* %6, align 8
  %69 = lshr i64 %68, %67
  store i64 %69, i64* %6, align 8
  br label %28

70:                                               ; preds = %59
  %71 = load i64, i64* %9, align 8
  %72 = load i64, i64* %7, align 8
  %73 = add i64 %71, %72
  store i64 %73, i64* %5, align 8
  br label %74

74:                                               ; preds = %70, %14
  %75 = load i64, i64* %5, align 8
  ret i64 %75
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
