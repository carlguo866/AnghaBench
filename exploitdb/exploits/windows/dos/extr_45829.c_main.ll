; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_45829.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_45829.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@TRUE = common dso_local global i64 0, align 8
@pipename = common dso_local global i32 0, align 4
@PIPE_ACCESS_INBOUND = common dso_local global i32 0, align 4
@PIPE_ACCESS_OUTBOUND = common dso_local global i32 0, align 4
@PIPE_WAIT = common dso_local global i32 0, align 4
@INVALID_HANDLE_VALUE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [10 x i8] c"Error: %d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"pipe created\0A\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"%x\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"ok!\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"%s%d\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"WTF\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  br label %3

3:                                                ; preds = %34, %0
  %4 = load i64, i64* @TRUE, align 8
  %5 = icmp ne i64 %4, 0
  br i1 %5, label %6, label %37

6:                                                ; preds = %3
  %7 = load i32, i32* @pipename, align 4
  %8 = load i32, i32* @PIPE_ACCESS_INBOUND, align 4
  %9 = load i32, i32* @PIPE_ACCESS_OUTBOUND, align 4
  %10 = or i32 %8, %9
  %11 = load i32, i32* @PIPE_WAIT, align 4
  %12 = call i32 @CreateNamedPipe(i32 %7, i32 %10, i32 %11, i32 1, i32 1024, i32 1024, i32 120000, i32* null)
  store i32 %12, i32* %2, align 4
  %13 = load i32, i32* %2, align 4
  %14 = load i32, i32* @INVALID_HANDLE_VALUE, align 4
  %15 = icmp eq i32 %13, %14
  br i1 %15, label %16, label %19

16:                                               ; preds = %6
  %17 = call i32 (...) @GetLastError()
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 %17)
  br label %23

19:                                               ; preds = %6
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0))
  %21 = load i32, i32* %2, align 4
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 %21)
  br label %23

23:                                               ; preds = %19, %16
  %24 = load i32, i32* %2, align 4
  %25 = call i32 @ConnectNamedPipe(i32 %24, i32* null)
  %26 = load i32, i32* %2, align 4
  %27 = call i64 @ImpersonateNamedPipeClient(i32 %26)
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0))
  br label %34

31:                                               ; preds = %23
  %32 = call i32 (...) @GetLastError()
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i32 %32)
  br label %34

34:                                               ; preds = %31, %29
  %35 = load i32, i32* %2, align 4
  %36 = call i32 @CloseHandle(i32 %35)
  br label %3

37:                                               ; preds = %3
  ret i32 0
}

declare dso_local i32 @CreateNamedPipe(i32, i32, i32, i32, i32, i32, i32, i32*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @GetLastError(...) #1

declare dso_local i32 @ConnectNamedPipe(i32, i32*) #1

declare dso_local i64 @ImpersonateNamedPipeClient(i32) #1

declare dso_local i32 @CloseHandle(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
