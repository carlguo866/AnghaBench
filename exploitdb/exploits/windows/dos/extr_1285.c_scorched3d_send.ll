; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_1285.c_scorched3d_send.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_1285.c_scorched3d_send.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @scorched3d_send(i32 %0, i8* %1, i32 %2, i8* %3, i32 %4) #0 {
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i8* %1, i8** %7, align 8
  store i32 %2, i32* %8, align 4
  store i8* %3, i8** %9, align 8
  store i32 %4, i32* %10, align 4
  %13 = load i8*, i8** %7, align 8
  %14 = load i32, i32* %8, align 4
  %15 = load i8*, i8** %9, align 8
  %16 = load i32, i32* %10, align 4
  %17 = call i32 @zip(i8* %13, i32 %14, i8* %15, i32 %16)
  store i32 %17, i32* %12, align 4
  %18 = load i32, i32* %12, align 4
  %19 = add nsw i32 %18, 4
  %20 = call i32 @htonl(i32 %19)
  store i32 %20, i32* %11, align 4
  %21 = load i32, i32* %6, align 4
  %22 = bitcast i32* %11 to i8*
  %23 = call i64 @send(i32 %21, i8* %22, i32 4, i32 0)
  %24 = icmp slt i64 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %5
  %26 = call i32 (...) @std_err()
  br label %27

27:                                               ; preds = %25, %5
  %28 = load i32, i32* %8, align 4
  %29 = call i32 @htonl(i32 %28)
  store i32 %29, i32* %11, align 4
  %30 = load i32, i32* %6, align 4
  %31 = bitcast i32* %11 to i8*
  %32 = call i64 @send(i32 %30, i8* %31, i32 4, i32 0)
  %33 = icmp slt i64 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %27
  %35 = call i32 (...) @std_err()
  br label %36

36:                                               ; preds = %34, %27
  %37 = load i32, i32* %6, align 4
  %38 = load i8*, i8** %9, align 8
  %39 = load i32, i32* %12, align 4
  %40 = call i64 @send(i32 %37, i8* %38, i32 %39, i32 0)
  %41 = icmp slt i64 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %36
  %43 = call i32 (...) @std_err()
  br label %44

44:                                               ; preds = %42, %36
  ret void
}

declare dso_local i32 @zip(i8*, i32, i8*, i32) #1

declare dso_local i32 @htonl(i32) #1

declare dso_local i64 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @std_err(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
