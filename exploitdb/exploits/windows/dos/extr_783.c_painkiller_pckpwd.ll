; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_783.c_painkiller_pckpwd.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_783.c_painkiller_pckpwd.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @painkiller_pckpwd(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca [64 x i8], align 16
  %6 = alloca [64 x i8], align 16
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %15 = load i8*, i8** %3, align 8
  store i8* %15, i8** %7, align 8
  br label %16

16:                                               ; preds = %2, %67
  %17 = load i8*, i8** %7, align 8
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = icmp sge i32 %19, 48
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = load i8*, i8** %7, align 8
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = icmp sle i32 %24, 57
  br i1 %25, label %26, label %32

26:                                               ; preds = %21
  %27 = load i8*, i8** %7, align 8
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = sub nsw i32 %29, 48
  %31 = trunc i32 %30 to i8
  store i8 %31, i8* %27, align 1
  br label %67

32:                                               ; preds = %21, %16
  %33 = load i8*, i8** %7, align 8
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = icmp sge i32 %35, 97
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = load i8*, i8** %7, align 8
  %39 = load i8, i8* %38, align 1
  %40 = zext i8 %39 to i32
  %41 = icmp sle i32 %40, 122
  br i1 %41, label %42, label %48

42:                                               ; preds = %37
  %43 = load i8*, i8** %7, align 8
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = sub nsw i32 %45, 87
  %47 = trunc i32 %46 to i8
  store i8 %47, i8* %43, align 1
  br label %66

48:                                               ; preds = %37, %32
  %49 = load i8*, i8** %7, align 8
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = icmp sge i32 %51, 65
  br i1 %52, label %53, label %64

53:                                               ; preds = %48
  %54 = load i8*, i8** %7, align 8
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i32
  %57 = icmp sle i32 %56, 92
  br i1 %57, label %58, label %64

58:                                               ; preds = %53
  %59 = load i8*, i8** %7, align 8
  %60 = load i8, i8* %59, align 1
  %61 = zext i8 %60 to i32
  %62 = sub nsw i32 %61, 29
  %63 = trunc i32 %62 to i8
  store i8 %63, i8* %59, align 1
  br label %65

64:                                               ; preds = %53, %48
  br label %70

65:                                               ; preds = %58
  br label %66

66:                                               ; preds = %65, %42
  br label %67

67:                                               ; preds = %66, %26
  %68 = load i8*, i8** %7, align 8
  %69 = getelementptr inbounds i8, i8* %68, i32 1
  store i8* %69, i8** %7, align 8
  br label %16

70:                                               ; preds = %64
  %71 = load i8*, i8** %7, align 8
  %72 = load i8*, i8** %3, align 8
  %73 = ptrtoint i8* %71 to i64
  %74 = ptrtoint i8* %72 to i64
  %75 = sub i64 %73, %74
  %76 = trunc i64 %75 to i32
  store i32 %76, i32* %9, align 4
  %77 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0
  store i8* %77, i8** %7, align 8
  store i32 0, i32* %10, align 4
  br label %78

78:                                               ; preds = %86, %70
  %79 = load i32, i32* %10, align 4
  %80 = icmp slt i32 %79, 64
  br i1 %80, label %81, label %89

81:                                               ; preds = %78
  %82 = load i32, i32* %10, align 4
  %83 = trunc i32 %82 to i8
  %84 = load i8*, i8** %7, align 8
  %85 = getelementptr inbounds i8, i8* %84, i32 1
  store i8* %85, i8** %7, align 8
  store i8 %83, i8* %84, align 1
  br label %86

86:                                               ; preds = %81
  %87 = load i32, i32* %10, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %10, align 4
  br label %78

89:                                               ; preds = %78
  %90 = load i8*, i8** %4, align 8
  store i8* %90, i8** %7, align 8
  %91 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 0
  store i8* %91, i8** %8, align 8
  store i32 0, i32* %10, align 4
  br label %92

92:                                               ; preds = %107, %89
  %93 = load i32, i32* %10, align 4
  %94 = icmp slt i32 %93, 64
  br i1 %94, label %95, label %110

95:                                               ; preds = %92
  %96 = load i8*, i8** %7, align 8
  %97 = getelementptr inbounds i8, i8* %96, i32 1
  store i8* %97, i8** %7, align 8
  %98 = load i8, i8* %96, align 1
  %99 = load i8*, i8** %8, align 8
  %100 = getelementptr inbounds i8, i8* %99, i32 1
  store i8* %100, i8** %8, align 8
  store i8 %98, i8* %99, align 1
  %101 = load i8*, i8** %7, align 8
  %102 = load i8, i8* %101, align 1
  %103 = icmp ne i8 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %95
  %105 = load i8*, i8** %4, align 8
  store i8* %105, i8** %7, align 8
  br label %106

106:                                              ; preds = %104, %95
  br label %107

107:                                              ; preds = %106
  %108 = load i32, i32* %10, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %10, align 4
  br label %92

110:                                              ; preds = %92
  %111 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0
  store i8* %111, i8** %7, align 8
  %112 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 0
  store i8* %112, i8** %8, align 8
  store i32 0, i32* %13, align 4
  store i32 0, i32* %10, align 4
  br label %113

113:                                              ; preds = %141, %110
  %114 = load i32, i32* %10, align 4
  %115 = icmp slt i32 %114, 64
  br i1 %115, label %116, label %144

116:                                              ; preds = %113
  %117 = load i8*, i8** %7, align 8
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  store i32 %119, i32* %11, align 4
  %120 = load i8*, i8** %8, align 8
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = load i32, i32* %11, align 4
  %124 = add nsw i32 %122, %123
  %125 = load i32, i32* %13, align 4
  %126 = add nsw i32 %124, %125
  %127 = and i32 %126, 63
  store i32 %127, i32* %13, align 4
  %128 = load i32, i32* %13, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 %129
  %131 = load i8, i8* %130, align 1
  %132 = load i8*, i8** %7, align 8
  %133 = getelementptr inbounds i8, i8* %132, i32 1
  store i8* %133, i8** %7, align 8
  store i8 %131, i8* %132, align 1
  %134 = load i32, i32* %11, align 4
  %135 = trunc i32 %134 to i8
  %136 = load i32, i32* %13, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 %137
  store i8 %135, i8* %138, align 1
  %139 = load i8*, i8** %8, align 8
  %140 = getelementptr inbounds i8, i8* %139, i32 1
  store i8* %140, i8** %8, align 8
  br label %141

141:                                              ; preds = %116
  %142 = load i32, i32* %10, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %10, align 4
  br label %113

144:                                              ; preds = %113
  store i32 0, i32* %14, align 4
  store i32 0, i32* %13, align 4
  %145 = load i8*, i8** %3, align 8
  store i8* %145, i8** %7, align 8
  store i32 0, i32* %10, align 4
  br label %146

146:                                              ; preds = %192, %144
  %147 = load i32, i32* %10, align 4
  %148 = load i32, i32* %9, align 4
  %149 = icmp slt i32 %147, %148
  br i1 %149, label %150, label %195

150:                                              ; preds = %146
  %151 = load i32, i32* %13, align 4
  %152 = add nsw i32 %151, 1
  %153 = and i32 %152, 63
  store i32 %153, i32* %13, align 4
  %154 = load i32, i32* %13, align 4
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  store i32 %158, i32* %11, align 4
  %159 = load i32, i32* %11, align 4
  %160 = load i32, i32* %14, align 4
  %161 = add nsw i32 %159, %160
  %162 = and i32 %161, 63
  store i32 %162, i32* %14, align 4
  %163 = load i32, i32* %14, align 4
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = zext i8 %166 to i32
  store i32 %167, i32* %12, align 4
  %168 = load i32, i32* %12, align 4
  %169 = trunc i32 %168 to i8
  %170 = load i32, i32* %13, align 4
  %171 = sext i32 %170 to i64
  %172 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 %171
  store i8 %169, i8* %172, align 1
  %173 = load i32, i32* %11, align 4
  %174 = trunc i32 %173 to i8
  %175 = load i32, i32* %14, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 %176
  store i8 %174, i8* %177, align 1
  %178 = load i32, i32* %12, align 4
  %179 = load i32, i32* %11, align 4
  %180 = add nsw i32 %178, %179
  %181 = and i32 %180, 63
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = load i8*, i8** %7, align 8
  %187 = getelementptr inbounds i8, i8* %186, i32 1
  store i8* %187, i8** %7, align 8
  %188 = load i8, i8* %186, align 1
  %189 = zext i8 %188 to i32
  %190 = xor i32 %189, %185
  %191 = trunc i32 %190 to i8
  store i8 %191, i8* %186, align 1
  br label %192

192:                                              ; preds = %150
  %193 = load i32, i32* %10, align 4
  %194 = add nsw i32 %193, 1
  store i32 %194, i32* %10, align 4
  br label %146

195:                                              ; preds = %146
  %196 = load i8*, i8** %3, align 8
  store i8* %196, i8** %7, align 8
  br label %197

197:                                              ; preds = %235, %195
  %198 = load i32, i32* %9, align 4
  %199 = add nsw i32 %198, -1
  store i32 %199, i32* %9, align 4
  %200 = icmp ne i32 %198, 0
  br i1 %200, label %201, label %238

201:                                              ; preds = %197
  %202 = load i8*, i8** %7, align 8
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i32
  %205 = icmp sle i32 %204, 9
  br i1 %205, label %206, label %212

206:                                              ; preds = %201
  %207 = load i8*, i8** %7, align 8
  %208 = load i8, i8* %207, align 1
  %209 = zext i8 %208 to i32
  %210 = add nsw i32 %209, 48
  %211 = trunc i32 %210 to i8
  store i8 %211, i8* %207, align 1
  br label %235

212:                                              ; preds = %201
  %213 = load i8*, i8** %7, align 8
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i32
  %216 = icmp sge i32 %215, 10
  br i1 %216, label %217, label %228

217:                                              ; preds = %212
  %218 = load i8*, i8** %7, align 8
  %219 = load i8, i8* %218, align 1
  %220 = zext i8 %219 to i32
  %221 = icmp sle i32 %220, 35
  br i1 %221, label %222, label %228

222:                                              ; preds = %217
  %223 = load i8*, i8** %7, align 8
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = add nsw i32 %225, 87
  %227 = trunc i32 %226 to i8
  store i8 %227, i8* %223, align 1
  br label %234

228:                                              ; preds = %217, %212
  %229 = load i8*, i8** %7, align 8
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i32
  %232 = add nsw i32 %231, 29
  %233 = trunc i32 %232 to i8
  store i8 %233, i8* %229, align 1
  br label %234

234:                                              ; preds = %228, %222
  br label %235

235:                                              ; preds = %234, %206
  %236 = load i8*, i8** %7, align 8
  %237 = getelementptr inbounds i8, i8* %236, i32 1
  store i8* %237, i8** %7, align 8
  br label %197

238:                                              ; preds = %197
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
