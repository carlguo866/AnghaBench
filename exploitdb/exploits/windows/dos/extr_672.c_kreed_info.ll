; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_672.c_kreed_info.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_672.c_kreed_info.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@BUFFSZ = common dso_local global i32 0, align 4
@INFO = common dso_local global i32 0, align 4
@AF_INET = common dso_local global i32 0, align 4
@SOCK_DGRAM = common dso_local global i32 0, align 4
@IPPROTO_UDP = common dso_local global i32 0, align 4
@RECVT = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [5 x i8] c"%s\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @kreed_info() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = load i32, i32* @BUFFSZ, align 4
  %5 = call i8* @malloc(i32 %4)
  store i8* %5, i8** %3, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %0
  %9 = call i32 (...) @std_err()
  br label %10

10:                                               ; preds = %8, %0
  %11 = load i8*, i8** %3, align 8
  %12 = load i32, i32* @INFO, align 4
  %13 = call i32 @build_kreed_pck(i8* %11, i32 124, i32 %12)
  store i32 %13, i32* %2, align 4
  %14 = load i32, i32* @AF_INET, align 4
  %15 = load i32, i32* @SOCK_DGRAM, align 4
  %16 = load i32, i32* @IPPROTO_UDP, align 4
  %17 = call i32 @socket(i32 %14, i32 %15, i32 %16)
  store i32 %17, i32* %1, align 4
  %18 = load i32, i32* %1, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %10
  %21 = call i32 (...) @std_err()
  br label %22

22:                                               ; preds = %20, %10
  %23 = load i8*, i8** %3, align 8
  %24 = load i32, i32* %2, align 4
  %25 = call i32 @SEND(i8* %23, i32 %24)
  %26 = load i32, i32* @RECVT, align 4
  %27 = load i32, i32* %1, align 4
  %28 = call i32 @close(i32 %27)
  %29 = load i8*, i8** %3, align 8
  %30 = load i32, i32* %2, align 4
  %31 = call i32 @read_kreed_pck(i8* %29, i32 %30)
  %32 = load i8*, i8** %3, align 8
  %33 = call i32 @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i8* %32)
  %34 = load i8*, i8** %3, align 8
  %35 = call i32 @free(i8* %34)
  ret void
}

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @std_err(...) #1

declare dso_local i32 @build_kreed_pck(i8*, i32, i32) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @SEND(i8*, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @read_kreed_pck(i8*, i32) #1

declare dso_local i32 @printf(i8*, i8*) #1

declare dso_local i32 @free(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
