; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_3204.c_ShowPrinterInfo.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_3204.c_ShowPrinterInfo.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i8*, i8* }

@OPT_UNICODE = common dso_local global i32 0, align 4
@PRINTER_ENUM_NAME = common dso_local global i32 0, align 4
@HEAP_ZERO_MEMORY = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c" %S - \00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c" %S \00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c" %s - \00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c" %s \00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@dst = common dso_local global i64 0, align 8
@RECURSIVE = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [4 x i8] c"---\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @ShowPrinterInfo(i8* %0, i32 %1, i32 %2, i8* %3) #0 {
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca [50 x i8], align 16
  %16 = alloca i64, align 8
  %17 = alloca %struct.TYPE_2__*, align 8
  %18 = alloca i32*, align 8
  store i8* %0, i8** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i8* %3, i8** %9, align 8
  store i64 0, i64* %14, align 8
  %19 = load i32, i32* %8, align 4
  %20 = load i32, i32* @OPT_UNICODE, align 4
  %21 = and i32 %19, %20
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %28

23:                                               ; preds = %4
  %24 = load i32, i32* @PRINTER_ENUM_NAME, align 4
  %25 = load i8*, i8** %6, align 8
  %26 = load i32, i32* %7, align 4
  %27 = call i64 @EnumPrintersW(i32 %24, i8* %25, i32 %26, i32* null, i64 0, i64* %14, i64* %13)
  br label %33

28:                                               ; preds = %4
  %29 = load i32, i32* @PRINTER_ENUM_NAME, align 4
  %30 = load i8*, i8** %6, align 8
  %31 = load i32, i32* %7, align 4
  %32 = call i64 @EnumPrintersA(i32 %29, i8* %30, i32 %31, i32* null, i64 0, i64* %14, i64* %13)
  br label %33

33:                                               ; preds = %28, %23
  %34 = load i64, i64* %14, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  store i64 -1, i64* %5, align 8
  br label %233

37:                                               ; preds = %33
  %38 = call i32 (...) @GetProcessHeap()
  %39 = load i32, i32* @HEAP_ZERO_MEMORY, align 4
  %40 = load i64, i64* %14, align 8
  %41 = call i64 @HeapAlloc(i32 %38, i32 %39, i64 %40)
  %42 = inttoptr i64 %41 to i8*
  store i8* %42, i8** %10, align 8
  %43 = load i8*, i8** %10, align 8
  %44 = icmp ne i8* %43, null
  br i1 %44, label %45, label %232

45:                                               ; preds = %37
  %46 = load i32, i32* %8, align 4
  %47 = load i32, i32* @OPT_UNICODE, align 4
  %48 = and i32 %46, %47
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %50, label %58

50:                                               ; preds = %45
  %51 = load i32, i32* @PRINTER_ENUM_NAME, align 4
  %52 = load i8*, i8** %6, align 8
  %53 = load i32, i32* %7, align 4
  %54 = load i8*, i8** %10, align 8
  %55 = bitcast i8* %54 to i32*
  %56 = load i64, i64* %14, align 8
  %57 = call i64 @EnumPrintersW(i32 %51, i8* %52, i32 %53, i32* %55, i64 %56, i64* %14, i64* %13)
  store i64 %57, i64* %16, align 8
  br label %66

58:                                               ; preds = %45
  %59 = load i32, i32* @PRINTER_ENUM_NAME, align 4
  %60 = load i8*, i8** %6, align 8
  %61 = load i32, i32* %7, align 4
  %62 = load i8*, i8** %10, align 8
  %63 = bitcast i8* %62 to i32*
  %64 = load i64, i64* %14, align 8
  %65 = call i64 @EnumPrintersA(i32 %59, i8* %60, i32 %61, i32* %63, i64 %64, i64* %14, i64* %13)
  store i64 %65, i64* %16, align 8
  br label %66

66:                                               ; preds = %58, %50
  %67 = load i64, i64* %16, align 8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %73

69:                                               ; preds = %66
  %70 = call i32 (...) @GetProcessHeap()
  %71 = load i8*, i8** %10, align 8
  %72 = call i32 @HeapFree(i32 %70, i32 0, i8* %71)
  store i64 0, i64* %5, align 8
  br label %233

73:                                               ; preds = %66
  store i32 0, i32* %11, align 4
  br label %74

74:                                               ; preds = %224, %73
  %75 = load i32, i32* %11, align 4
  %76 = sext i32 %75 to i64
  %77 = load i64, i64* %13, align 8
  %78 = icmp slt i64 %76, %77
  br i1 %78, label %79, label %227

79:                                               ; preds = %74
  %80 = load i8*, i8** %10, align 8
  %81 = bitcast i8* %80 to %struct.TYPE_2__*
  store %struct.TYPE_2__* %81, %struct.TYPE_2__** %17, align 8
  %82 = load i8*, i8** %9, align 8
  %83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8* %82)
  %84 = load i32, i32* %8, align 4
  %85 = load i32, i32* @OPT_UNICODE, align 4
  %86 = and i32 %84, %85
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %88, label %121

88:                                               ; preds = %79
  %89 = load %struct.TYPE_2__*, %struct.TYPE_2__** %17, align 8
  %90 = load i32, i32* %11, align 4
  %91 = sext i32 %90 to i64
  %92 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %89, i64 %91
  %93 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %92, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  %95 = icmp ne i8* %94, null
  br i1 %95, label %96, label %104

96:                                               ; preds = %88
  %97 = load %struct.TYPE_2__*, %struct.TYPE_2__** %17, align 8
  %98 = load i32, i32* %11, align 4
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %97, i64 %99
  %101 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %100, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  %103 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* %102)
  br label %104

104:                                              ; preds = %96, %88
  %105 = load %struct.TYPE_2__*, %struct.TYPE_2__** %17, align 8
  %106 = load i32, i32* %11, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %105, i64 %107
  %109 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %108, i32 0, i32 1
  %110 = load i8*, i8** %109, align 8
  %111 = icmp ne i8* %110, null
  br i1 %111, label %112, label %120

112:                                              ; preds = %104
  %113 = load %struct.TYPE_2__*, %struct.TYPE_2__** %17, align 8
  %114 = load i32, i32* %11, align 4
  %115 = sext i32 %114 to i64
  %116 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %113, i64 %115
  %117 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %116, i32 0, i32 1
  %118 = load i8*, i8** %117, align 8
  %119 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* %118)
  br label %120

120:                                              ; preds = %112, %104
  br label %154

121:                                              ; preds = %79
  %122 = load %struct.TYPE_2__*, %struct.TYPE_2__** %17, align 8
  %123 = load i32, i32* %11, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %122, i64 %124
  %126 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %125, i32 0, i32 0
  %127 = load i8*, i8** %126, align 8
  %128 = icmp ne i8* %127, null
  br i1 %128, label %129, label %137

129:                                              ; preds = %121
  %130 = load %struct.TYPE_2__*, %struct.TYPE_2__** %17, align 8
  %131 = load i32, i32* %11, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %130, i64 %132
  %134 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %133, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  %136 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8* %135)
  br label %137

137:                                              ; preds = %129, %121
  %138 = load %struct.TYPE_2__*, %struct.TYPE_2__** %17, align 8
  %139 = load i32, i32* %11, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %138, i64 %140
  %142 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %141, i32 0, i32 1
  %143 = load i8*, i8** %142, align 8
  %144 = icmp ne i8* %143, null
  br i1 %144, label %145, label %153

145:                                              ; preds = %137
  %146 = load %struct.TYPE_2__*, %struct.TYPE_2__** %17, align 8
  %147 = load i32, i32* %11, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %146, i64 %148
  %150 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %149, i32 0, i32 1
  %151 = load i8*, i8** %150, align 8
  %152 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %151)
  br label %153

153:                                              ; preds = %145, %137
  br label %154

154:                                              ; preds = %153, %120
  %155 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  store i32 0, i32* %12, align 4
  br label %156

156:                                              ; preds = %197, %154
  %157 = load i32, i32* %12, align 4
  %158 = sext i32 %157 to i64
  %159 = icmp ult i64 %158, 1
  br i1 %159, label %160, label %200

160:                                              ; preds = %156
  %161 = load i32, i32* %8, align 4
  %162 = load i32, i32* @OPT_UNICODE, align 4
  %163 = and i32 %161, %162
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %165, label %181

165:                                              ; preds = %160
  %166 = load %struct.TYPE_2__*, %struct.TYPE_2__** %17, align 8
  %167 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %166, i64 0
  %168 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %167, i32 0, i32 0
  %169 = load i8*, i8** %168, align 8
  %170 = load i32, i32* %12, align 4
  %171 = load i32, i32* %8, align 4
  %172 = load i32, i32* @OPT_UNICODE, align 4
  %173 = and i32 %171, %172
  %174 = call i32 @Fuzzer(i8* %169, i32 %170, i32 %173)
  %175 = load i64, i64* @dst, align 8
  %176 = inttoptr i64 %175 to i8*
  %177 = load i32, i32* %7, align 4
  %178 = load i32, i32* @OPT_UNICODE, align 4
  %179 = getelementptr inbounds [50 x i8], [50 x i8]* %15, i64 0, i64 0
  %180 = call i64 @ShowPrinterInfo(i8* %176, i32 %177, i32 %178, i8* %179)
  br label %196

181:                                              ; preds = %160
  %182 = load %struct.TYPE_2__*, %struct.TYPE_2__** %17, align 8
  %183 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %182, i64 0
  %184 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %183, i32 0, i32 0
  %185 = load i8*, i8** %184, align 8
  %186 = load i32, i32* %12, align 4
  %187 = load i32, i32* %8, align 4
  %188 = load i32, i32* @OPT_UNICODE, align 4
  %189 = and i32 %187, %188
  %190 = call i32 @Fuzzer(i8* %185, i32 %186, i32 %189)
  %191 = load i64, i64* @dst, align 8
  %192 = inttoptr i64 %191 to i8*
  %193 = load i32, i32* %7, align 4
  %194 = getelementptr inbounds [50 x i8], [50 x i8]* %15, i64 0, i64 0
  %195 = call i64 @ShowPrinterInfo(i8* %192, i32 %193, i32 0, i8* %194)
  br label %196

196:                                              ; preds = %181, %165
  br label %197

197:                                              ; preds = %196
  %198 = load i32, i32* %12, align 4
  %199 = add nsw i32 %198, 1
  store i32 %199, i32* %12, align 4
  br label %156

200:                                              ; preds = %156
  %201 = load i32, i32* %8, align 4
  %202 = load i32, i32* @RECURSIVE, align 4
  %203 = and i32 %201, %202
  %204 = icmp ne i32 %203, 0
  br i1 %204, label %205, label %222

205:                                              ; preds = %200
  %206 = getelementptr inbounds [50 x i8], [50 x i8]* %15, i64 0, i64 0
  %207 = load i8*, i8** %9, align 8
  %208 = call i32 @strcpy(i8* %206, i8* %207)
  %209 = getelementptr inbounds [50 x i8], [50 x i8]* %15, i64 0, i64 0
  %210 = call i32 @strcat(i8* %209, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0))
  %211 = getelementptr inbounds [50 x i8], [50 x i8]* %15, i64 0, i64 1
  store i8 43, i8* %211, align 1
  %212 = load %struct.TYPE_2__*, %struct.TYPE_2__** %17, align 8
  %213 = load i32, i32* %11, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %212, i64 %214
  %216 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %215, i32 0, i32 0
  %217 = load i8*, i8** %216, align 8
  %218 = load i32, i32* %7, align 4
  %219 = load i32, i32* %8, align 4
  %220 = getelementptr inbounds [50 x i8], [50 x i8]* %15, i64 0, i64 0
  %221 = call i64 @ShowPrinterInfo(i8* %217, i32 %218, i32 %219, i8* %220)
  br label %222

222:                                              ; preds = %205, %200
  %223 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  br label %224

224:                                              ; preds = %222
  %225 = load i32, i32* %11, align 4
  %226 = add nsw i32 %225, 1
  store i32 %226, i32* %11, align 4
  br label %74

227:                                              ; preds = %74
  %228 = call i32 (...) @GetProcessHeap()
  %229 = load i8*, i8** %10, align 8
  %230 = call i32 @HeapFree(i32 %228, i32 0, i8* %229)
  br label %231

231:                                              ; preds = %227
  br label %232

232:                                              ; preds = %231, %37
  store i64 1, i64* %5, align 8
  br label %233

233:                                              ; preds = %232, %69, %36
  %234 = load i64, i64* %5, align 8
  ret i64 %234
}

declare dso_local i64 @EnumPrintersW(i32, i8*, i32, i32*, i64, i64*, i64*) #1

declare dso_local i64 @EnumPrintersA(i32, i8*, i32, i32*, i64, i64*, i64*) #1

declare dso_local i64 @HeapAlloc(i32, i32, i64) #1

declare dso_local i32 @GetProcessHeap(...) #1

declare dso_local i32 @HeapFree(i32, i32, i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @Fuzzer(i8*, i32, i32) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @strcat(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
