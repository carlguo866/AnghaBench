; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_841.c_Huff_EmitPathToByte.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_841.c_Huff_EmitPathToByte.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @Huff_EmitPathToByte(i8** %0, i8** %1, i8* %2) #0 {
  %4 = alloca i8**, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  store i8** %0, i8*** %4, align 8
  store i8** %1, i8*** %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load i8**, i8*** %4, align 8
  %8 = getelementptr inbounds i8*, i8** %7, i64 2
  %9 = load i8*, i8** %8, align 8
  %10 = icmp ne i8* %9, null
  br i1 %10, label %11, label %18

11:                                               ; preds = %3
  %12 = load i8**, i8*** %4, align 8
  %13 = getelementptr inbounds i8*, i8** %12, i64 2
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast i8* %14 to i8**
  %16 = load i8**, i8*** %4, align 8
  %17 = load i8*, i8** %6, align 8
  call void @Huff_EmitPathToByte(i8** %15, i8** %16, i8* %17)
  br label %18

18:                                               ; preds = %11, %3
  %19 = load i8**, i8*** %5, align 8
  %20 = icmp ne i8** %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  br label %35

22:                                               ; preds = %18
  %23 = load i8**, i8*** %4, align 8
  %24 = getelementptr inbounds i8*, i8** %23, i64 1
  %25 = load i8*, i8** %24, align 8
  %26 = load i8**, i8*** %5, align 8
  %27 = bitcast i8** %26 to i8*
  %28 = icmp eq i8* %25, %27
  br i1 %28, label %29, label %32

29:                                               ; preds = %22
  %30 = load i8*, i8** %6, align 8
  %31 = call i32 @Huff_EmitBit(i32 1, i8* %30)
  br label %35

32:                                               ; preds = %22
  %33 = load i8*, i8** %6, align 8
  %34 = call i32 @Huff_EmitBit(i32 0, i8* %33)
  br label %35

35:                                               ; preds = %21, %32, %29
  ret void
}

declare dso_local i32 @Huff_EmitBit(i32, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
