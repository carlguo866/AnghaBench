; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_841.c_Huff_SwapTrees.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_841.c_Huff_SwapTrees.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @Huff_SwapTrees(i8** %0, i8** %1) #0 {
  %3 = alloca i8**, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i8**, align 8
  store i8** %0, i8*** %3, align 8
  store i8** %1, i8*** %4, align 8
  %6 = load i8**, i8*** %3, align 8
  %7 = getelementptr inbounds i8*, i8** %6, i64 3
  %8 = load i8*, i8** %7, align 8
  %9 = bitcast i8* %8 to i8**
  store i8** %9, i8*** %5, align 8
  %10 = load i8**, i8*** %4, align 8
  %11 = getelementptr inbounds i8*, i8** %10, i64 3
  %12 = load i8*, i8** %11, align 8
  %13 = load i8**, i8*** %3, align 8
  %14 = getelementptr inbounds i8*, i8** %13, i64 3
  store i8* %12, i8** %14, align 8
  %15 = load i8**, i8*** %5, align 8
  %16 = bitcast i8** %15 to i8*
  %17 = load i8**, i8*** %4, align 8
  %18 = getelementptr inbounds i8*, i8** %17, i64 3
  store i8* %16, i8** %18, align 8
  %19 = load i8**, i8*** %3, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i64 4
  %21 = load i8*, i8** %20, align 8
  %22 = bitcast i8* %21 to i8**
  store i8** %22, i8*** %5, align 8
  %23 = load i8**, i8*** %4, align 8
  %24 = getelementptr inbounds i8*, i8** %23, i64 4
  %25 = load i8*, i8** %24, align 8
  %26 = load i8**, i8*** %3, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 4
  store i8* %25, i8** %27, align 8
  %28 = load i8**, i8*** %5, align 8
  %29 = bitcast i8** %28 to i8*
  %30 = load i8**, i8*** %4, align 8
  %31 = getelementptr inbounds i8*, i8** %30, i64 4
  store i8* %29, i8** %31, align 8
  %32 = load i8**, i8*** %3, align 8
  %33 = getelementptr inbounds i8*, i8** %32, i64 3
  %34 = load i8*, i8** %33, align 8
  %35 = load i8**, i8*** %3, align 8
  %36 = bitcast i8** %35 to i8*
  %37 = icmp eq i8* %34, %36
  br i1 %37, label %38, label %43

38:                                               ; preds = %2
  %39 = load i8**, i8*** %4, align 8
  %40 = bitcast i8** %39 to i8*
  %41 = load i8**, i8*** %3, align 8
  %42 = getelementptr inbounds i8*, i8** %41, i64 3
  store i8* %40, i8** %42, align 8
  br label %43

43:                                               ; preds = %38, %2
  %44 = load i8**, i8*** %4, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i64 3
  %46 = load i8*, i8** %45, align 8
  %47 = load i8**, i8*** %4, align 8
  %48 = bitcast i8** %47 to i8*
  %49 = icmp eq i8* %46, %48
  br i1 %49, label %50, label %55

50:                                               ; preds = %43
  %51 = load i8**, i8*** %3, align 8
  %52 = bitcast i8** %51 to i8*
  %53 = load i8**, i8*** %4, align 8
  %54 = getelementptr inbounds i8*, i8** %53, i64 3
  store i8* %52, i8** %54, align 8
  br label %55

55:                                               ; preds = %50, %43
  %56 = load i8**, i8*** %3, align 8
  %57 = getelementptr inbounds i8*, i8** %56, i64 3
  %58 = load i8*, i8** %57, align 8
  %59 = bitcast i8* %58 to i8**
  store i8** %59, i8*** %5, align 8
  %60 = load i8**, i8*** %5, align 8
  %61 = icmp ne i8** %60, null
  br i1 %61, label %62, label %67

62:                                               ; preds = %55
  %63 = load i8**, i8*** %3, align 8
  %64 = bitcast i8** %63 to i8*
  %65 = load i8**, i8*** %5, align 8
  %66 = getelementptr inbounds i8*, i8** %65, i64 4
  store i8* %64, i8** %66, align 8
  br label %67

67:                                               ; preds = %62, %55
  %68 = load i8**, i8*** %4, align 8
  %69 = getelementptr inbounds i8*, i8** %68, i64 3
  %70 = load i8*, i8** %69, align 8
  %71 = bitcast i8* %70 to i8**
  store i8** %71, i8*** %5, align 8
  %72 = load i8**, i8*** %5, align 8
  %73 = icmp ne i8** %72, null
  br i1 %73, label %74, label %79

74:                                               ; preds = %67
  %75 = load i8**, i8*** %4, align 8
  %76 = bitcast i8** %75 to i8*
  %77 = load i8**, i8*** %5, align 8
  %78 = getelementptr inbounds i8*, i8** %77, i64 4
  store i8* %76, i8** %78, align 8
  br label %79

79:                                               ; preds = %74, %67
  %80 = load i8**, i8*** %3, align 8
  %81 = getelementptr inbounds i8*, i8** %80, i64 4
  %82 = load i8*, i8** %81, align 8
  %83 = bitcast i8* %82 to i8**
  store i8** %83, i8*** %5, align 8
  %84 = load i8**, i8*** %5, align 8
  %85 = icmp ne i8** %84, null
  br i1 %85, label %86, label %91

86:                                               ; preds = %79
  %87 = load i8**, i8*** %3, align 8
  %88 = bitcast i8** %87 to i8*
  %89 = load i8**, i8*** %5, align 8
  %90 = getelementptr inbounds i8*, i8** %89, i64 3
  store i8* %88, i8** %90, align 8
  br label %91

91:                                               ; preds = %86, %79
  %92 = load i8**, i8*** %4, align 8
  %93 = getelementptr inbounds i8*, i8** %92, i64 4
  %94 = load i8*, i8** %93, align 8
  %95 = bitcast i8* %94 to i8**
  store i8** %95, i8*** %5, align 8
  %96 = load i8**, i8*** %5, align 8
  %97 = icmp ne i8** %96, null
  br i1 %97, label %98, label %103

98:                                               ; preds = %91
  %99 = load i8**, i8*** %4, align 8
  %100 = bitcast i8** %99 to i8*
  %101 = load i8**, i8*** %5, align 8
  %102 = getelementptr inbounds i8*, i8** %101, i64 3
  store i8* %100, i8** %102, align 8
  br label %103

103:                                              ; preds = %98, %91
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
