; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_665.c_read_bits.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_665.c_read_bits.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @read_bits(i64 %0, i8* %1, i64 %2) #0 {
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store i64 %0, i64* %5, align 8
  store i8* %1, i8** %6, align 8
  store i64 %2, i64* %7, align 8
  store i64 0, i64* %10, align 8
  store i64 0, i64* %11, align 8
  store i64 -1, i64* %12, align 8
  %13 = load i64, i64* %5, align 8
  %14 = icmp ugt i64 %13, 32
  br i1 %14, label %15, label %16

15:                                               ; preds = %3
  store i64 0, i64* %4, align 8
  br label %68

16:                                               ; preds = %3
  %17 = load i64, i64* %5, align 8
  %18 = icmp ult i64 %17, 32
  br i1 %18, label %19, label %25

19:                                               ; preds = %16
  %20 = load i64, i64* %5, align 8
  %21 = trunc i64 %20 to i32
  %22 = shl i32 1, %21
  %23 = sub nsw i32 %22, 1
  %24 = sext i32 %23 to i64
  store i64 %24, i64* %12, align 8
  br label %25

25:                                               ; preds = %19, %16
  br label %26

26:                                               ; preds = %51, %25
  %27 = load i64, i64* %7, align 8
  %28 = and i64 %27, 7
  store i64 %28, i64* %8, align 8
  %29 = load i8*, i8** %6, align 8
  %30 = load i64, i64* %7, align 8
  %31 = lshr i64 %30, 3
  %32 = getelementptr inbounds i8, i8* %29, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = load i64, i64* %8, align 8
  %36 = trunc i64 %35 to i32
  %37 = ashr i32 %34, %36
  %38 = sext i32 %37 to i64
  %39 = load i64, i64* %12, align 8
  %40 = and i64 %38, %39
  %41 = load i64, i64* %10, align 8
  %42 = shl i64 %40, %41
  %43 = load i64, i64* %11, align 8
  %44 = or i64 %43, %42
  store i64 %44, i64* %11, align 8
  %45 = load i64, i64* %8, align 8
  %46 = sub i64 8, %45
  store i64 %46, i64* %9, align 8
  %47 = load i64, i64* %9, align 8
  %48 = load i64, i64* %5, align 8
  %49 = icmp uge i64 %47, %48
  br i1 %49, label %50, label %51

50:                                               ; preds = %26
  br label %66

51:                                               ; preds = %26
  %52 = load i64, i64* %9, align 8
  %53 = load i64, i64* %5, align 8
  %54 = sub i64 %53, %52
  store i64 %54, i64* %5, align 8
  %55 = load i64, i64* %9, align 8
  %56 = load i64, i64* %7, align 8
  %57 = add i64 %56, %55
  store i64 %57, i64* %7, align 8
  %58 = load i64, i64* %9, align 8
  %59 = load i64, i64* %10, align 8
  %60 = add i64 %59, %58
  store i64 %60, i64* %10, align 8
  %61 = load i64, i64* %5, align 8
  %62 = trunc i64 %61 to i32
  %63 = shl i32 1, %62
  %64 = sub nsw i32 %63, 1
  %65 = sext i32 %64 to i64
  store i64 %65, i64* %12, align 8
  br label %26

66:                                               ; preds = %50
  %67 = load i64, i64* %11, align 8
  store i64 %67, i64* %4, align 8
  br label %68

68:                                               ; preds = %66, %15
  %69 = load i64, i64* %4, align 8
  ret i64 %69
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
