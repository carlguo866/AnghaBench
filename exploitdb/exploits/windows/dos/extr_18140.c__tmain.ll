; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_18140.c__tmain.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_18140.c__tmain.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i64 }

@.str = private unnamed_addr constant [11 x i8] c"user32.dll\00", align 1
@uStr = common dso_local global %struct.TYPE_4__ zeroinitializer, align 8
@.str.1 = private unnamed_addr constant [8 x i32] [i32 112, i32 51, i32 100, i32 46, i32 100, i32 108, i32 108, i32 0], align 4
@uKerbordname = common dso_local global %struct.TYPE_4__ zeroinitializer, align 8
@.str.2 = private unnamed_addr constant [2 x i32] [i32 65, i32 0], align 4
@.str.3 = private unnamed_addr constant [7 x i8] c"%x,%x\0A\00", align 1
@fakeDll2 = common dso_local global i32* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_tmain(i32 %0, i32** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32**, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i32** %1, i32*** %4, align 8
  %8 = call i32 @LoadLibraryA(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0))
  %9 = call i32 @InitializeUnicodeStr(%struct.TYPE_4__* @uStr, i8* bitcast ([8 x i32]* @.str.1 to i8*))
  %10 = call i32 @InitializeUnicodeStr(%struct.TYPE_4__* @uKerbordname, i8* bitcast ([2 x i32]* @.str.2 to i8*))
  store i64 0, i64* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @uKerbordname, i32 0, i32 0), align 8
  store i32 0, i32* %5, align 4
  br label %11

11:                                               ; preds = %44, %2
  %12 = load i32, i32* %5, align 4
  %13 = icmp sle i32 %12, 2
  br i1 %13, label %14, label %47

14:                                               ; preds = %11
  store i32 0, i32* %6, align 4
  br label %15

15:                                               ; preds = %40, %14
  %16 = load i32, i32* %6, align 4
  %17 = icmp sle i32 %16, 255
  br i1 %17, label %18, label %43

18:                                               ; preds = %15
  store i32 0, i32* %7, align 4
  br label %19

19:                                               ; preds = %36, %18
  %20 = load i32, i32* %7, align 4
  %21 = icmp slt i32 %20, 255
  br i1 %21, label %22, label %39

22:                                               ; preds = %19
  %23 = load i32, i32* %6, align 4
  %24 = load i32, i32* %7, align 4
  %25 = call i32 @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i32 %23, i32 %24)
  %26 = load i32, i32* %6, align 4
  %27 = load i32*, i32** @fakeDll2, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 61
  store i32 %26, i32* %28, align 4
  %29 = load i32, i32* %7, align 4
  %30 = load i32*, i32** @fakeDll2, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 62
  store i32 %29, i32* %31, align 4
  %32 = load i32, i32* %5, align 4
  %33 = load i32*, i32** @fakeDll2, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 63
  store i32 %32, i32* %34, align 4
  %35 = call i32 (...) @boom_loadlayout()
  br label %36

36:                                               ; preds = %22
  %37 = load i32, i32* %7, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %7, align 4
  br label %19

39:                                               ; preds = %19
  br label %40

40:                                               ; preds = %39
  %41 = load i32, i32* %6, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %6, align 4
  br label %15

43:                                               ; preds = %15
  br label %44

44:                                               ; preds = %43
  %45 = load i32, i32* %5, align 4
  %46 = add nsw i32 %45, 1
  store i32 %46, i32* %5, align 4
  br label %11

47:                                               ; preds = %11
  ret i32 0
}

declare dso_local i32 @LoadLibraryA(i8*) #1

declare dso_local i32 @InitializeUnicodeStr(%struct.TYPE_4__*, i8*) #1

declare dso_local i32 @printf(i8*, i32, i32) #1

declare dso_local i32 @boom_loadlayout(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
