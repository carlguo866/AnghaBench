; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_1328.c_get_response.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_1328.c_get_response.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [23 x i8] c"Null Session request 1\00", align 1
@.str.1 = private unnamed_addr constant [37 x i8] c"\1B[0;31mError in %s response\1B[0;39m\0A\0A\00", align 1
@UserID = common dso_local global i16 0, align 2
@.str.2 = private unnamed_addr constant [13 x i8] c"Tree Connect\00", align 1
@TID = common dso_local global i16 0, align 2
@.str.3 = private unnamed_addr constant [14 x i8] c"NT Creat AndX\00", align 1
@FID = common dso_local global i16 0, align 2
@.str.4 = private unnamed_addr constant [27 x i8] c"UPNPMGR upnp_getdevicelist\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"\1B[0;31mnca_s_fault_ndr\1B[0;39m\0A\0A\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"\1B[0;32mOK\1B[0;39m\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @get_response(i32 %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [1496 x i8], align 16
  store i32 %0, i32* %3, align 4
  store i8* %1, i8** %4, align 8
  %7 = load i32, i32* %3, align 4
  %8 = getelementptr inbounds [1496 x i8], [1496 x i8]* %6, i64 0, i64 0
  %9 = call i32 @recv(i32 %7, i8* %8, i32 1496, i32 0)
  store i32 %9, i32* %5, align 4
  %10 = load i8*, i8** %4, align 8
  %11 = call i64 @strcmp(i8* %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0))
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %13, label %26

13:                                               ; preds = %2
  %14 = load i32, i32* %5, align 4
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds [1496 x i8], [1496 x i8]* %6, i64 0, i64 9
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %21, label %25

21:                                               ; preds = %16, %13
  %22 = load i8*, i8** %4, align 8
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.1, i64 0, i64 0), i8* %22)
  %24 = call i32 @exit(i32 -1) #3
  unreachable

25:                                               ; preds = %16
  br label %26

26:                                               ; preds = %25, %2
  %27 = load i8*, i8** %4, align 8
  %28 = call i64 @strcmp(i8* %27, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0))
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds [1496 x i8], [1496 x i8]* %6, i64 0, i64 32
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 16
  store i16 %33, i16* @UserID, align 2
  br label %34

34:                                               ; preds = %30, %26
  %35 = load i8*, i8** %4, align 8
  %36 = call i64 @strcmp(i8* %35, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0))
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %34
  %39 = getelementptr inbounds [1496 x i8], [1496 x i8]* %6, i64 0, i64 28
  %40 = bitcast i8* %39 to i16*
  %41 = load i16, i16* %40, align 4
  store i16 %41, i16* @TID, align 2
  br label %42

42:                                               ; preds = %38, %34
  %43 = load i8*, i8** %4, align 8
  %44 = call i64 @strcmp(i8* %43, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %50

46:                                               ; preds = %42
  %47 = getelementptr inbounds [1496 x i8], [1496 x i8]* %6, i64 0, i64 42
  %48 = bitcast i8* %47 to i16*
  %49 = load i16, i16* %48, align 2
  store i16 %49, i16* @FID, align 2
  br label %50

50:                                               ; preds = %46, %42
  %51 = load i8*, i8** %4, align 8
  %52 = call i64 @strcmp(i8* %51, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0))
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %63

54:                                               ; preds = %50
  %55 = getelementptr inbounds [1496 x i8], [1496 x i8]* %6, i64 0, i64 88
  %56 = load i8, i8* %55, align 8
  %57 = sext i8 %56 to i64
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0))
  %61 = call i32 @exit(i32 -1) #3
  unreachable

62:                                               ; preds = %54
  br label %63

63:                                               ; preds = %62, %50
  %64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0))
  ret void
}

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i64 @strcmp(i8*, i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
