; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_30278.c_getopt.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_30278.c_getopt.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@getopt.next = internal global i8* null, align 8
@optind = common dso_local global i32 0, align 4
@optarg = common dso_local global i8* null, align 8
@EOF = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [3 x i8] c"--\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getopt(i32 %0, i8** %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8*, align 8
  store i32 %0, i32* %5, align 4
  store i8** %1, i8*** %6, align 8
  store i8* %2, i8** %7, align 8
  %10 = load i32, i32* @optind, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %3
  store i8* null, i8** @getopt.next, align 8
  br label %13

13:                                               ; preds = %12, %3
  store i8* null, i8** @optarg, align 8
  %14 = load i8*, i8** @getopt.next, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %13
  %17 = load i8*, i8** @getopt.next, align 8
  %18 = load i8, i8* %17, align 1
  %19 = sext i8 %18 to i32
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %95

21:                                               ; preds = %16, %13
  %22 = load i32, i32* @optind, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  %25 = load i32, i32* @optind, align 4
  %26 = add nsw i32 %25, 1
  store i32 %26, i32* @optind, align 4
  br label %27

27:                                               ; preds = %24, %21
  %28 = load i32, i32* @optind, align 4
  %29 = load i32, i32* %5, align 4
  %30 = icmp sge i32 %28, %29
  br i1 %30, label %51, label %31

31:                                               ; preds = %27
  %32 = load i8**, i8*** %6, align 8
  %33 = load i32, i32* @optind, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i8*, i8** %32, i64 %34
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 0
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i32
  %40 = icmp ne i32 %39, 45
  br i1 %40, label %51, label %41

41:                                               ; preds = %31
  %42 = load i8**, i8*** %6, align 8
  %43 = load i32, i32* @optind, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds i8*, i8** %42, i64 %44
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds i8, i8* %46, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = sext i8 %48 to i32
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %63

51:                                               ; preds = %41, %31, %27
  store i8* null, i8** @optarg, align 8
  %52 = load i32, i32* @optind, align 4
  %53 = load i32, i32* %5, align 4
  %54 = icmp slt i32 %52, %53
  br i1 %54, label %55, label %61

55:                                               ; preds = %51
  %56 = load i8**, i8*** %6, align 8
  %57 = load i32, i32* @optind, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8*, i8** %56, i64 %58
  %60 = load i8*, i8** %59, align 8
  store i8* %60, i8** @optarg, align 8
  br label %61

61:                                               ; preds = %55, %51
  %62 = load i32, i32* @EOF, align 4
  store i32 %62, i32* %4, align 4
  br label %141

63:                                               ; preds = %41
  %64 = load i8**, i8*** %6, align 8
  %65 = load i32, i32* @optind, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8*, i8** %64, i64 %66
  %68 = load i8*, i8** %67, align 8
  %69 = call i64 @strcmp(i8* %68, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %85

71:                                               ; preds = %63
  %72 = load i32, i32* @optind, align 4
  %73 = add nsw i32 %72, 1
  store i32 %73, i32* @optind, align 4
  store i8* null, i8** @optarg, align 8
  %74 = load i32, i32* @optind, align 4
  %75 = load i32, i32* %5, align 4
  %76 = icmp slt i32 %74, %75
  br i1 %76, label %77, label %83

77:                                               ; preds = %71
  %78 = load i8**, i8*** %6, align 8
  %79 = load i32, i32* @optind, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i8*, i8** %78, i64 %80
  %82 = load i8*, i8** %81, align 8
  store i8* %82, i8** @optarg, align 8
  br label %83

83:                                               ; preds = %77, %71
  %84 = load i32, i32* @EOF, align 4
  store i32 %84, i32* %4, align 4
  br label %141

85:                                               ; preds = %63
  %86 = load i8**, i8*** %6, align 8
  %87 = load i32, i32* @optind, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i8*, i8** %86, i64 %88
  %90 = load i8*, i8** %89, align 8
  store i8* %90, i8** @getopt.next, align 8
  %91 = load i8*, i8** @getopt.next, align 8
  %92 = getelementptr inbounds i8, i8* %91, i32 1
  store i8* %92, i8** @getopt.next, align 8
  %93 = load i32, i32* @optind, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* @optind, align 4
  br label %95

95:                                               ; preds = %85, %16
  %96 = load i8*, i8** @getopt.next, align 8
  %97 = getelementptr inbounds i8, i8* %96, i32 1
  store i8* %97, i8** @getopt.next, align 8
  %98 = load i8, i8* %96, align 1
  store i8 %98, i8* %8, align 1
  %99 = load i8*, i8** %7, align 8
  %100 = load i8, i8* %8, align 1
  %101 = call i8* @strchr(i8* %99, i8 signext %100)
  store i8* %101, i8** %9, align 8
  %102 = load i8*, i8** %9, align 8
  %103 = icmp eq i8* %102, null
  br i1 %103, label %108, label %104

104:                                              ; preds = %95
  %105 = load i8, i8* %8, align 1
  %106 = sext i8 %105 to i32
  %107 = icmp eq i32 %106, 58
  br i1 %107, label %108, label %109

108:                                              ; preds = %104, %95
  store i32 63, i32* %4, align 4
  br label %141

109:                                              ; preds = %104
  %110 = load i8*, i8** %9, align 8
  %111 = getelementptr inbounds i8, i8* %110, i32 1
  store i8* %111, i8** %9, align 8
  %112 = load i8*, i8** %9, align 8
  %113 = load i8, i8* %112, align 1
  %114 = sext i8 %113 to i32
  %115 = icmp eq i32 %114, 58
  br i1 %115, label %116, label %138

116:                                              ; preds = %109
  %117 = load i8*, i8** @getopt.next, align 8
  %118 = load i8, i8* %117, align 1
  %119 = sext i8 %118 to i32
  %120 = icmp ne i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  %122 = load i8*, i8** @getopt.next, align 8
  store i8* %122, i8** @optarg, align 8
  store i8* null, i8** @getopt.next, align 8
  br label %137

123:                                              ; preds = %116
  %124 = load i32, i32* @optind, align 4
  %125 = load i32, i32* %5, align 4
  %126 = icmp slt i32 %124, %125
  br i1 %126, label %127, label %135

127:                                              ; preds = %123
  %128 = load i8**, i8*** %6, align 8
  %129 = load i32, i32* @optind, align 4
  %130 = sext i32 %129 to i64
  %131 = getelementptr inbounds i8*, i8** %128, i64 %130
  %132 = load i8*, i8** %131, align 8
  store i8* %132, i8** @optarg, align 8
  %133 = load i32, i32* @optind, align 4
  %134 = add nsw i32 %133, 1
  store i32 %134, i32* @optind, align 4
  br label %136

135:                                              ; preds = %123
  store i32 63, i32* %4, align 4
  br label %141

136:                                              ; preds = %127
  br label %137

137:                                              ; preds = %136, %121
  br label %138

138:                                              ; preds = %137, %109
  %139 = load i8, i8* %8, align 1
  %140 = sext i8 %139 to i32
  store i32 %140, i32* %4, align 4
  br label %141

141:                                              ; preds = %138, %135, %108, %83, %61
  %142 = load i32, i32* %4, align 4
  ret i32 %142
}

declare dso_local i64 @strcmp(i8*, i8*) #1

declare dso_local i8* @strchr(i8*, i8 signext) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
