; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_149.c_shell.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_149.c_shell.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timeval = type { i32, i64 }

@.str = private unnamed_addr constant [24 x i8] c"[-] Connection closed.\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @shell(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [512 x i8], align 16
  %5 = alloca %struct.timeval, align 8
  %6 = alloca [2 x i64], align 16
  store i32 %0, i32* %2, align 4
  %7 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i32 0, i32 0
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds %struct.timeval, %struct.timeval* %5, i32 0, i32 1
  store i64 0, i64* %8, align 8
  br label %9

9:                                                ; preds = %1, %52
  %10 = getelementptr inbounds [2 x i64], [2 x i64]* %6, i64 0, i64 0
  store i64 1, i64* %10, align 16
  %11 = load i32, i32* %2, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [2 x i64], [2 x i64]* %6, i64 0, i64 1
  store i64 %12, i64* %13, align 8
  %14 = bitcast [2 x i64]* %6 to i32*
  %15 = call i32 @select(i32 0, i32* %14, i32* null, i32* null, %struct.timeval* %5)
  store i32 %15, i32* %3, align 4
  %16 = load i32, i32* %3, align 4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %35

18:                                               ; preds = %9
  %19 = load i32, i32* %2, align 4
  %20 = getelementptr inbounds [512 x i8], [512 x i8]* %4, i64 0, i64 0
  %21 = call i32 @recv(i32 %19, i8* %20, i32 512, i32 0)
  store i32 %21, i32* %3, align 4
  %22 = load i32, i32* %3, align 4
  %23 = icmp sle i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %18
  %25 = call i32 @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0))
  br label %53

26:                                               ; preds = %18
  %27 = getelementptr inbounds [512 x i8], [512 x i8]* %4, i64 0, i64 0
  %28 = load i32, i32* %3, align 4
  %29 = call i32 @write(i32 1, i8* %27, i32 %28)
  store i32 %29, i32* %3, align 4
  %30 = load i32, i32* %3, align 4
  %31 = icmp sle i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %26
  %33 = call i32 @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0))
  br label %53

34:                                               ; preds = %26
  br label %52

35:                                               ; preds = %9
  %36 = getelementptr inbounds [512 x i8], [512 x i8]* %4, i64 0, i64 0
  %37 = call i32 @read(i32 0, i8* %36, i32 512)
  store i32 %37, i32* %3, align 4
  %38 = load i32, i32* %3, align 4
  %39 = icmp sle i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  %41 = call i32 @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0))
  br label %53

42:                                               ; preds = %35
  %43 = load i32, i32* %2, align 4
  %44 = getelementptr inbounds [512 x i8], [512 x i8]* %4, i64 0, i64 0
  %45 = load i32, i32* %3, align 4
  %46 = call i32 @send(i32 %43, i8* %44, i32 %45, i32 0)
  store i32 %46, i32* %3, align 4
  %47 = load i32, i32* %3, align 4
  %48 = icmp sle i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %42
  %50 = call i32 @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0))
  br label %53

51:                                               ; preds = %42
  br label %52

52:                                               ; preds = %51, %34
  br label %9

53:                                               ; preds = %49, %40, %32, %24
  ret void
}

declare dso_local i32 @select(i32, i32*, i32*, i32*, %struct.timeval*) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @read(i32, i8*, i32) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
