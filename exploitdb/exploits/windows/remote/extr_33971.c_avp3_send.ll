; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_33971.c_avp3_send.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_33971.c_avp3_send.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@BUFFSZ = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [29 x i8] c"\0AError: data too big (0x%x)\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @avp3_send(i32 %0, i32 %1, i32* %2, i32 %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca [8 x i32], align 16
  store i32 %0, i32* %6, align 4
  store i32 %1, i32* %7, align 4
  store i32* %2, i32** %8, align 8
  store i32 %3, i32* %9, align 4
  %11 = load i32, i32* %9, align 4
  %12 = load i32, i32* @BUFFSZ, align 4
  %13 = icmp sgt i32 %11, %12
  br i1 %13, label %14, label %18

14:                                               ; preds = %4
  %15 = load i32, i32* %9, align 4
  %16 = call i32 @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 %15)
  %17 = call i32 @exit(i32 1) #3
  unreachable

18:                                               ; preds = %4
  %19 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 0
  %20 = load i32, i32* %7, align 4
  %21 = call i32 @putxx(i32* %19, i32 %20, i32 16)
  %22 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 0
  %23 = getelementptr inbounds i32, i32* %22, i64 2
  %24 = load i32, i32* %9, align 4
  %25 = call i32 @putxx(i32* %23, i32 %24, i32 16)
  %26 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 0
  %27 = getelementptr inbounds i32, i32* %26, i64 4
  %28 = load i32*, i32** %8, align 8
  %29 = load i32, i32* %9, align 4
  %30 = call i32 @avp3_crc(i32* %28, i32 %29)
  %31 = call i32 @putxx(i32* %27, i32 %30, i32 32)
  %32 = load i32, i32* %6, align 4
  %33 = getelementptr inbounds [8 x i32], [8 x i32]* %10, i64 0, i64 0
  %34 = call i32 @send(i32 %32, i32* %33, i32 8, i32 0)
  %35 = icmp ne i32 %34, 8
  br i1 %35, label %36, label %37

36:                                               ; preds = %18
  store i32 -1, i32* %5, align 4
  br label %46

37:                                               ; preds = %18
  %38 = load i32, i32* %6, align 4
  %39 = load i32*, i32** %8, align 8
  %40 = load i32, i32* %9, align 4
  %41 = call i32 @send(i32 %38, i32* %39, i32 %40, i32 0)
  %42 = load i32, i32* %9, align 4
  %43 = icmp ne i32 %41, %42
  br i1 %43, label %44, label %45

44:                                               ; preds = %37
  store i32 -1, i32* %5, align 4
  br label %46

45:                                               ; preds = %37
  store i32 0, i32* %5, align 4
  br label %46

46:                                               ; preds = %45, %44, %36
  %47 = load i32, i32* %5, align 4
  ret i32 %47
}

declare dso_local i32 @printf(i8*, i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @putxx(i32*, i32, i32) #1

declare dso_local i32 @avp3_crc(i32*, i32) #1

declare dso_local i32 @send(i32, i32*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
