; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_1028.c_login.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_1028.c_login.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [10 x i8] c"recv: %s\0A\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"USER %s\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"PASS %s\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"230\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @login(i32 %0, i8* %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca [1024 x i8], align 16
  %9 = alloca i8*, align 8
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %10 = load i32, i32* %5, align 4
  %11 = call i8* @fzz_recv(i32 %10)
  store i8* %11, i8** %9, align 8
  %12 = load i8*, i8** %9, align 8
  %13 = call i32 @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* %12)
  %14 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %15 = load i8*, i8** %6, align 8
  %16 = call i32 @sprintf(i8* %14, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8* %15)
  %17 = load i32, i32* %5, align 4
  %18 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %20 = call i32 @strlen(i8* %19)
  %21 = call i32 @send(i32 %17, i8* %18, i32 %20, i32 0)
  %22 = load i32, i32* %5, align 4
  %23 = call i8* @fzz_recv(i32 %22)
  store i8* %23, i8** %9, align 8
  %24 = load i8*, i8** %9, align 8
  %25 = call i32 @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* %24)
  %26 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %27 = load i8*, i8** %7, align 8
  %28 = call i32 @sprintf(i8* %26, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8* %27)
  %29 = load i32, i32* %5, align 4
  %30 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %31 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %32 = call i32 @strlen(i8* %31)
  %33 = call i32 @send(i32 %29, i8* %30, i32 %32, i32 0)
  %34 = load i32, i32* %5, align 4
  %35 = call i8* @fzz_recv(i32 %34)
  store i8* %35, i8** %9, align 8
  %36 = load i8*, i8** %9, align 8
  %37 = call i32 @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* %36)
  %38 = load i8*, i8** %9, align 8
  %39 = call i32* @strcmp(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i8* %38)
  %40 = icmp ne i32* %39, null
  br i1 %40, label %41, label %42

41:                                               ; preds = %3
  store i32 0, i32* %4, align 4
  br label %43

42:                                               ; preds = %3
  store i32 -1, i32* %4, align 4
  br label %43

43:                                               ; preds = %42, %41
  %44 = load i32, i32* %4, align 4
  ret i32 %44
}

declare dso_local i8* @fzz_recv(i32) #1

declare dso_local i32 @printf(i8*, i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32* @strcmp(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
