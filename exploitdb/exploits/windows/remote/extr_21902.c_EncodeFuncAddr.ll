; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_21902.c_EncodeFuncAddr.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_21902.c_EncodeFuncAddr.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @EncodeFuncAddr(i8* %0, i32 %1, i8* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i8* %2, i8** %6, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = load i8*, i8** %6, align 8
  %10 = call i8* @strstr(i8* %8, i8* %9)
  store i8* %10, i8** %7, align 8
  %11 = load i8*, i8** %7, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %40

13:                                               ; preds = %3
  %14 = load i8*, i8** %7, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 4
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i32
  %18 = icmp eq i32 %17, -1
  br i1 %18, label %19, label %22

19:                                               ; preds = %13
  %20 = load i8*, i8** %7, align 8
  %21 = call i32 @memcpy(i8* %20, i32* %5, i32 4)
  br label %39

22:                                               ; preds = %13
  %23 = load i32, i32* %5, align 4
  %24 = and i32 %23, 255
  %25 = icmp sgt i32 %24, 128
  br i1 %25, label %26, label %33

26:                                               ; preds = %22
  %27 = load i8*, i8** %7, align 8
  %28 = call i32 @memcpy(i8* %27, i32* %5, i32 4)
  %29 = load i8*, i8** %7, align 8
  %30 = getelementptr inbounds i8, i8* %29, i64 4
  store i8 -112, i8* %30, align 1
  %31 = load i8*, i8** %7, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 5
  store i8 -112, i8* %32, align 1
  br label %38

33:                                               ; preds = %22
  %34 = load i32, i32* %5, align 4
  %35 = add nsw i32 %34, 120
  store i32 %35, i32* %5, align 4
  %36 = load i8*, i8** %7, align 8
  %37 = call i32 @memcpy(i8* %36, i32* %5, i32 4)
  br label %38

38:                                               ; preds = %33, %26
  br label %39

39:                                               ; preds = %38, %19
  br label %40

40:                                               ; preds = %39, %3
  ret void
}

declare dso_local i8* @strstr(i8*, i8*) #1

declare dso_local i32 @memcpy(i8*, i32*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
