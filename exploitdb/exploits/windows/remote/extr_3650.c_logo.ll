; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_3650.c_logo.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_3650.c_logo.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [75 x i8] c" ####################################################################### \0A\00", align 1
@.str.1 = private unnamed_addr constant [74 x i8] c" #     ____                 __  _                  ______  __    _____ #\0A\00", align 1
@.str.2 = private unnamed_addr constant [74 x i8] c" #    / __ \\________  _____/ /_(_)_________       / __/\\ \\/ /   / _  / #\0A\00", align 1
@.str.3 = private unnamed_addr constant [74 x i8] c" #   / / / / ___/ _ \\/ __ / __/ / ___/ __ / ___  / /    \\  /   / // /  #\0A\00", align 1
@.str.4 = private unnamed_addr constant [74 x i8] c" #  / /_/ / / /  ___/ /_// /_/ / /__/ /_// /__/ / _/    /  \\  / ___/   #\0A\00", align 1
@.str.5 = private unnamed_addr constant [74 x i8] c" # /_____/_/  \\___/ \\_,_/\\__/_/\\___/\\__,_/     /_/     /_/\\_\\/_/       #\0A\00", align 1
@.str.6 = private unnamed_addr constant [74 x i8] c" #                                 crew                                #\0A\00", align 1
@.str.7 = private unnamed_addr constant [75 x i8] c" #  Exploit : Frontbase <= 4.2.7 for Windows (multiple targets)        # \0A\00", align 1
@.str.8 = private unnamed_addr constant [75 x i8] c" #  Tested  : Frontbase 4.1.16 and 4.2.7                               # \0A\00", align 1
@.str.9 = private unnamed_addr constant [75 x i8] c" #  Author  : Heretic2 (heretic2x@gmail.com)                           # \0A\00", align 1
@.str.10 = private unnamed_addr constant [75 x i8] c" #  Version : 2.2                                                      # \0A\00", align 1
@.str.11 = private unnamed_addr constant [75 x i8] c" #  System  : Windows XP SP0-SP2                                       # \0A\00", align 1
@.str.12 = private unnamed_addr constant [75 x i8] c" #  Date    : 02.04.2007                                               # \0A\00", align 1
@.str.13 = private unnamed_addr constant [75 x i8] c" # ------------------------------------------------------------------- # \0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @logo() #0 {
  %1 = call i32 @printf(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str, i64 0, i64 0))
  %2 = call i32 @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0))
  %3 = call i32 @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.2, i64 0, i64 0))
  %4 = call i32 @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.3, i64 0, i64 0))
  %5 = call i32 @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.4, i64 0, i64 0))
  %6 = call i32 @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.5, i64 0, i64 0))
  %7 = call i32 @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.6, i64 0, i64 0))
  %8 = call i32 @printf(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str, i64 0, i64 0))
  %9 = call i32 @printf(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.7, i64 0, i64 0))
  %10 = call i32 @printf(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.8, i64 0, i64 0))
  %11 = call i32 @printf(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.9, i64 0, i64 0))
  %12 = call i32 @printf(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.10, i64 0, i64 0))
  %13 = call i32 @printf(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.11, i64 0, i64 0))
  %14 = call i32 @printf(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.12, i64 0, i64 0))
  %15 = call i32 @printf(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.13, i64 0, i64 0))
  ret void
}

declare dso_local i32 @printf(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
