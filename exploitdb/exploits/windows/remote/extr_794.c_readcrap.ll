; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_794.c_readcrap.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_794.c_readcrap.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timeval = type { i32, i64 }

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @readcrap(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.timeval, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca [1024 x i8], align 16
  store i32 %0, i32* %3, align 4
  %8 = call i32 @FD_ZERO(i32* %5)
  %9 = load i32, i32* %3, align 4
  %10 = call i32 @FD_SET(i32 %9, i32* %5)
  %11 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %12 = call i32 @bzero(i8* %11, i32 1024)
  br label %13

13:                                               ; preds = %1, %34
  %14 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i32 0, i32 0
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds %struct.timeval, %struct.timeval* %4, i32 0, i32 1
  store i64 0, i64* %15, align 8
  %16 = load i32, i32* %3, align 4
  %17 = add nsw i32 %16, 1
  %18 = call i64 @select(i32 %17, i32* %5, i32* null, i32* null, %struct.timeval* %4)
  %19 = icmp slt i64 %18, 0
  %20 = zext i1 %19 to i32
  store i32 %20, i32* %6, align 4
  br i1 %19, label %21, label %22

21:                                               ; preds = %13
  br label %35

22:                                               ; preds = %13
  %23 = load i32, i32* %3, align 4
  %24 = call i64 @FD_ISSET(i32 %23, i32* %5)
  %25 = icmp ne i64 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %22
  %27 = load i32, i32* %3, align 4
  %28 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %29 = call i32 @read(i32 %27, i8* %28, i32 1024, i32 0)
  %30 = icmp slt i32 %29, 1
  br i1 %30, label %31, label %32

31:                                               ; preds = %26
  br label %35

32:                                               ; preds = %26
  br label %34

33:                                               ; preds = %22
  store i32 1, i32* %2, align 4
  br label %36

34:                                               ; preds = %32
  br label %13

35:                                               ; preds = %31, %21
  store i32 0, i32* %2, align 4
  br label %36

36:                                               ; preds = %35, %33
  %37 = load i32, i32* %2, align 4
  ret i32 %37
}

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i32 @bzero(i8*, i32) #1

declare dso_local i64 @select(i32, i32*, i32*, i32*, %struct.timeval*) #1

declare dso_local i64 @FD_ISSET(i32, i32*) #1

declare dso_local i32 @read(i32, i8*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
