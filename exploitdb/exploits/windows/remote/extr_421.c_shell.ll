; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_421.c_shell.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_421.c_shell.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_3__ = type { i32, i64 }

@stdin = common dso_local global i32 0, align 4
@SOCKET_ERROR = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [14 x i8] c"select errorn\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"EOFn\00", align 1
@stdout = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @shell(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca [1024 x i8], align 16
  %4 = alloca i32, align 4
  %5 = alloca %struct.TYPE_3__, align 8
  %6 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %7 = call i32 @FD_ZERO(i32* %4)
  br label %8

8:                                                ; preds = %51, %1
  %9 = call i64 (...) @kbhit()
  %10 = icmp ne i64 %9, 0
  br i1 %10, label %11, label %20

11:                                               ; preds = %8
  %12 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  %13 = load i32, i32* @stdin, align 4
  %14 = call i32 @fgets(i8* %12, i32 1022, i32 %13)
  %15 = load i32, i32* %2, align 4
  %16 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  %17 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  %18 = call i32 @strlen(i8* %17)
  %19 = call i32 @send(i32 %15, i8* %16, i32 %18, i32 0)
  br label %20

20:                                               ; preds = %11, %8
  %21 = call i32 @FD_ZERO(i32* %4)
  %22 = load i32, i32* %2, align 4
  %23 = call i32 @FD_SET(i32 %22, i32* %4)
  %24 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %5, i32 0, i32 1
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %5, i32 0, i32 0
  store i32 50, i32* %25, align 8
  %26 = call i64 @select(i32 0, i32* %4, i32* null, i32* null, %struct.TYPE_3__* %5)
  %27 = load i64, i64* @SOCKET_ERROR, align 8
  %28 = icmp eq i64 %26, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %20
  %30 = call i32 @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0))
  br label %52

31:                                               ; preds = %20
  %32 = load i32, i32* %2, align 4
  %33 = call i64 @FD_ISSET(i32 %32, i32* %4)
  %34 = icmp ne i64 %33, 0
  br i1 %34, label %35, label %51

35:                                               ; preds = %31
  %36 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  %37 = call i32 @ZeroMemory(i8* %36, i32 1024)
  %38 = load i32, i32* %2, align 4
  %39 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  %40 = call i32 @recv(i32 %38, i8* %39, i32 1024, i32 0)
  store i32 %40, i32* %6, align 4
  %41 = icmp sle i32 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %35
  %43 = call i32 @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0))
  %44 = call i32 @exit(i32 0) #3
  unreachable

45:                                               ; preds = %35
  %46 = getelementptr inbounds [1024 x i8], [1024 x i8]* %3, i64 0, i64 0
  %47 = load i32, i32* %6, align 4
  %48 = load i32, i32* @stdout, align 4
  %49 = call i32 @fwrite(i8* %46, i32 1, i32 %47, i32 %48)
  br label %50

50:                                               ; preds = %45
  br label %51

51:                                               ; preds = %50, %31
  br label %8

52:                                               ; preds = %29
  ret void
}

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i64 @kbhit(...) #1

declare dso_local i32 @fgets(i8*, i32, i32) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i64 @select(i32, i32*, i32*, i32*, %struct.TYPE_3__*) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i64 @FD_ISSET(i32, i32*) #1

declare dso_local i32 @ZeroMemory(i8*, i32) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @fwrite(i8*, i32, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
