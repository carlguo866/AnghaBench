; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_23040.c_socket_connect.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_23040.c_socket_connect.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.addrinfo = type { i32, i32, i64, i32, i32, %struct.addrinfo*, i64 }

@PF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@gai_errno = common dso_local global i32 0, align 4
@SOL_SOCKET = common dso_local global i32 0, align 4
@SO_REUSEADDR = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @socket_connect(i8* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.addrinfo, align 8
  %7 = alloca %struct.addrinfo*, align 8
  %8 = alloca %struct.addrinfo*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %11 = load i32, i32* @PF_INET, align 4
  %12 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %6, i32 0, i32 4
  store i32 %11, i32* %12, align 4
  %13 = load i32, i32* @SOCK_STREAM, align 4
  %14 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %6, i32 0, i32 3
  store i32 %13, i32* %14, align 8
  %15 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %6, i32 0, i32 2
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %6, i32 0, i32 6
  store i64 0, i64* %16, align 8
  %17 = load i8*, i8** %4, align 8
  %18 = load i8*, i8** %5, align 8
  %19 = call i32 @getaddrinfo(i8* %17, i8* %18, %struct.addrinfo* %6, %struct.addrinfo** %7)
  store i32 %19, i32* @gai_errno, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %69

21:                                               ; preds = %2
  %22 = load %struct.addrinfo*, %struct.addrinfo** %7, align 8
  store %struct.addrinfo* %22, %struct.addrinfo** %8, align 8
  br label %23

23:                                               ; preds = %62, %21
  %24 = load %struct.addrinfo*, %struct.addrinfo** %8, align 8
  %25 = icmp ne %struct.addrinfo* %24, null
  br i1 %25, label %26, label %66

26:                                               ; preds = %23
  %27 = load %struct.addrinfo*, %struct.addrinfo** %8, align 8
  %28 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %27, i32 0, i32 4
  %29 = load i32, i32* %28, align 4
  %30 = load %struct.addrinfo*, %struct.addrinfo** %8, align 8
  %31 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %30, i32 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = load %struct.addrinfo*, %struct.addrinfo** %8, align 8
  %34 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %33, i32 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = call i32 @socket(i32 %29, i32 %32, i64 %35)
  store i32 %36, i32* %9, align 4
  %37 = load i32, i32* %9, align 4
  %38 = icmp ne i32 %37, -1
  br i1 %38, label %39, label %61

39:                                               ; preds = %26
  store i32 1, i32* %10, align 4
  %40 = load i32, i32* %9, align 4
  %41 = load i32, i32* @SOL_SOCKET, align 4
  %42 = load i32, i32* @SO_REUSEADDR, align 4
  %43 = call i32 @setsockopt(i32 %40, i32 %41, i32 %42, i32* %10, i32 4)
  %44 = load i32, i32* %9, align 4
  %45 = load %struct.addrinfo*, %struct.addrinfo** %8, align 8
  %46 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %45, i32 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = load %struct.addrinfo*, %struct.addrinfo** %8, align 8
  %49 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %48, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = call i64 @connect(i32 %44, i32 %47, i32 %50)
  %52 = icmp ne i64 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %39
  %54 = load i32, i32* %9, align 4
  %55 = call i32 @close(i32 %54)
  br label %60

56:                                               ; preds = %39
  %57 = load %struct.addrinfo*, %struct.addrinfo** %7, align 8
  %58 = call i32 @freeaddrinfo(%struct.addrinfo* %57)
  %59 = load i32, i32* %9, align 4
  store i32 %59, i32* %3, align 4
  br label %70

60:                                               ; preds = %53
  br label %61

61:                                               ; preds = %60, %26
  br label %62

62:                                               ; preds = %61
  %63 = load %struct.addrinfo*, %struct.addrinfo** %8, align 8
  %64 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %63, i32 0, i32 5
  %65 = load %struct.addrinfo*, %struct.addrinfo** %64, align 8
  store %struct.addrinfo* %65, %struct.addrinfo** %8, align 8
  br label %23

66:                                               ; preds = %23
  %67 = load %struct.addrinfo*, %struct.addrinfo** %7, align 8
  %68 = call i32 @freeaddrinfo(%struct.addrinfo* %67)
  br label %69

69:                                               ; preds = %66, %2
  store i32 -1, i32* %3, align 4
  br label %70

70:                                               ; preds = %69, %56
  %71 = load i32, i32* %3, align 4
  ret i32 %71
}

declare dso_local i32 @getaddrinfo(i8*, i8*, %struct.addrinfo*, %struct.addrinfo**) #1

declare dso_local i32 @socket(i32, i32, i64) #1

declare dso_local i32 @setsockopt(i32, i32, i32, i32*, i32) #1

declare dso_local i64 @connect(i32, i32, i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @freeaddrinfo(%struct.addrinfo*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
