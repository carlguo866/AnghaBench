; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_20817.c_separe.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_20817.c_separe.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [2 x i8] c".\00", align 1
@i = common dso_local global i8* null, align 8
@j = common dso_local global i8* null, align 8
@k = common dso_local global i8* null, align 8
@l = common dso_local global i8* null, align 8
@a = common dso_local global i8* null, align 8
@b = common dso_local global i8* null, align 8
@c = common dso_local global i8* null, align 8
@d = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @separe(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  store i8* null, i8** %5, align 8
  store i32 0, i32* %6, align 4
  %7 = load i8*, i8** %3, align 8
  %8 = call i8* @strtok(i8* %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  store i8* %8, i8** %5, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = call i8* @atoi(i8* %9)
  store i8* %10, i8** @i, align 8
  br label %11

11:                                               ; preds = %37, %2
  %12 = load i8*, i8** %5, align 8
  %13 = icmp ne i8* %12, null
  br i1 %13, label %14, label %38

14:                                               ; preds = %11
  %15 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  store i8* %15, i8** %5, align 8
  %16 = load i32, i32* %6, align 4
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %6, align 4
  %18 = load i32, i32* %6, align 4
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = load i8*, i8** %5, align 8
  %22 = call i8* @atoi(i8* %21)
  store i8* %22, i8** @j, align 8
  br label %37

23:                                               ; preds = %14
  %24 = load i32, i32* %6, align 4
  %25 = icmp eq i32 %24, 2
  br i1 %25, label %26, label %29

26:                                               ; preds = %23
  %27 = load i8*, i8** %5, align 8
  %28 = call i8* @atoi(i8* %27)
  store i8* %28, i8** @k, align 8
  br label %36

29:                                               ; preds = %23
  %30 = load i32, i32* %6, align 4
  %31 = icmp eq i32 %30, 3
  br i1 %31, label %32, label %35

32:                                               ; preds = %29
  %33 = load i8*, i8** %5, align 8
  %34 = call i8* @atoi(i8* %33)
  store i8* %34, i8** @l, align 8
  br label %35

35:                                               ; preds = %32, %29
  br label %36

36:                                               ; preds = %35, %26
  br label %37

37:                                               ; preds = %36, %20
  br label %11

38:                                               ; preds = %11
  store i8* null, i8** %5, align 8
  store i32 0, i32* %6, align 4
  %39 = load i8*, i8** %4, align 8
  %40 = call i8* @strtok(i8* %39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  store i8* %40, i8** %5, align 8
  %41 = load i8*, i8** %5, align 8
  %42 = call i8* @atoi(i8* %41)
  store i8* %42, i8** @a, align 8
  br label %43

43:                                               ; preds = %69, %38
  %44 = load i8*, i8** %5, align 8
  %45 = icmp ne i8* %44, null
  br i1 %45, label %46, label %70

46:                                               ; preds = %43
  %47 = call i8* @strtok(i8* null, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  store i8* %47, i8** %5, align 8
  %48 = load i32, i32* %6, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %6, align 4
  %50 = load i32, i32* %6, align 4
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %55

52:                                               ; preds = %46
  %53 = load i8*, i8** %5, align 8
  %54 = call i8* @atoi(i8* %53)
  store i8* %54, i8** @b, align 8
  br label %69

55:                                               ; preds = %46
  %56 = load i32, i32* %6, align 4
  %57 = icmp eq i32 %56, 2
  br i1 %57, label %58, label %61

58:                                               ; preds = %55
  %59 = load i8*, i8** %5, align 8
  %60 = call i8* @atoi(i8* %59)
  store i8* %60, i8** @c, align 8
  br label %68

61:                                               ; preds = %55
  %62 = load i32, i32* %6, align 4
  %63 = icmp eq i32 %62, 3
  br i1 %63, label %64, label %67

64:                                               ; preds = %61
  %65 = load i8*, i8** %5, align 8
  %66 = call i8* @atoi(i8* %65)
  store i8* %66, i8** @d, align 8
  br label %67

67:                                               ; preds = %64, %61
  br label %68

68:                                               ; preds = %67, %58
  br label %69

69:                                               ; preds = %68, %52
  br label %43

70:                                               ; preds = %43
  ret void
}

declare dso_local i8* @strtok(i8*, i8*) #1

declare dso_local i8* @atoi(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
