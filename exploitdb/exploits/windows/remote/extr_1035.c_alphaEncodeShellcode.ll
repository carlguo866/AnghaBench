; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_1035.c_alphaEncodeShellcode.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_1035.c_alphaEncodeShellcode.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [62 x i8] c"0123456789BCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\00", align 1
@ecx_mixedcase_ascii_decoder = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [5 x i8] c"%c%c\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i8* @alphaEncodeShellcode(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  %14 = alloca i8*, align 8
  %15 = alloca [4 x i8], align 1
  %16 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  store i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str, i64 0, i64 0), i8** %13, align 8
  %17 = call i64 @malloc(i32 4)
  %18 = inttoptr i64 %17 to i8*
  store i8* %18, i8** %14, align 8
  %19 = load i8*, i8** %14, align 8
  %20 = load i32, i32* @ecx_mixedcase_ascii_decoder, align 4
  %21 = call i32 @strcpy(i8* %19, i32 %20)
  store i32 0, i32* %16, align 4
  br label %22

22:                                               ; preds = %115, %2
  %23 = load i32, i32* %16, align 4
  %24 = load i32, i32* %4, align 4
  %25 = icmp slt i32 %23, %24
  br i1 %25, label %26, label %118

26:                                               ; preds = %22
  %27 = load i8*, i8** %3, align 8
  %28 = load i32, i32* %16, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %27, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = sext i8 %31 to i32
  %33 = and i32 %32, 240
  %34 = ashr i32 %33, 4
  store i32 %34, i32* %7, align 4
  %35 = load i8*, i8** %3, align 8
  %36 = load i32, i32* %16, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %35, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = and i32 %40, 15
  store i32 %41, i32* %8, align 4
  %42 = load i32, i32* %8, align 4
  store i32 %42, i32* %12, align 4
  %43 = call i32 (...) @rand()
  %44 = load i8*, i8** %13, align 8
  %45 = call i32 @strlen(i8* %44)
  %46 = srem i32 %43, %45
  store i32 %46, i32* %5, align 4
  br label %47

47:                                               ; preds = %57, %26
  %48 = load i8*, i8** %13, align 8
  %49 = load i32, i32* %5, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  %52 = load i8, i8* %51, align 1
  %53 = sext i8 %52 to i32
  %54 = and i32 %53, 15
  %55 = load i32, i32* %12, align 4
  %56 = icmp ne i32 %54, %55
  br i1 %56, label %57, label %63

57:                                               ; preds = %47
  %58 = load i32, i32* %5, align 4
  %59 = add nsw i32 %58, 1
  store i32 %59, i32* %5, align 4
  %60 = load i8*, i8** %13, align 8
  %61 = call i32 @strlen(i8* %60)
  %62 = srem i32 %59, %61
  store i32 %62, i32* %5, align 4
  br label %47

63:                                               ; preds = %47
  %64 = load i8*, i8** %13, align 8
  %65 = load i32, i32* %5, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %64, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = sext i8 %68 to i32
  %70 = ashr i32 %69, 4
  store i32 %70, i32* %11, align 4
  %71 = load i32, i32* %7, align 4
  %72 = load i32, i32* %11, align 4
  %73 = xor i32 %71, %72
  store i32 %73, i32* %10, align 4
  %74 = call i32 (...) @rand()
  %75 = load i8*, i8** %13, align 8
  %76 = call i32 @strlen(i8* %75)
  %77 = srem i32 %74, %76
  store i32 %77, i32* %5, align 4
  br label %78

78:                                               ; preds = %88, %63
  %79 = load i8*, i8** %13, align 8
  %80 = load i32, i32* %5, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i8, i8* %79, i64 %81
  %83 = load i8, i8* %82, align 1
  %84 = sext i8 %83 to i32
  %85 = and i32 %84, 15
  %86 = load i32, i32* %10, align 4
  %87 = icmp ne i32 %85, %86
  br i1 %87, label %88, label %94

88:                                               ; preds = %78
  %89 = load i32, i32* %5, align 4
  %90 = add nsw i32 %89, 1
  store i32 %90, i32* %5, align 4
  %91 = load i8*, i8** %13, align 8
  %92 = call i32 @strlen(i8* %91)
  %93 = srem i32 %90, %92
  store i32 %93, i32* %5, align 4
  br label %78

94:                                               ; preds = %78
  %95 = load i8*, i8** %13, align 8
  %96 = load i32, i32* %5, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, i8* %95, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = sext i8 %99 to i32
  %101 = ashr i32 %100, 4
  store i32 %101, i32* %9, align 4
  %102 = getelementptr inbounds [4 x i8], [4 x i8]* %15, i64 0, i64 0
  %103 = load i32, i32* %9, align 4
  %104 = shl i32 %103, 4
  %105 = load i32, i32* %10, align 4
  %106 = add nsw i32 %104, %105
  %107 = load i32, i32* %11, align 4
  %108 = shl i32 %107, 4
  %109 = load i32, i32* %12, align 4
  %110 = add nsw i32 %108, %109
  %111 = call i32 @sprintf(i8* %102, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i32 %106, i32 %110)
  %112 = load i8*, i8** %14, align 8
  %113 = getelementptr inbounds [4 x i8], [4 x i8]* %15, i64 0, i64 0
  %114 = call i32 @strcat(i8* %112, i8* %113)
  br label %115

115:                                              ; preds = %94
  %116 = load i32, i32* %16, align 4
  %117 = add nsw i32 %116, 1
  store i32 %117, i32* %16, align 4
  br label %22

118:                                              ; preds = %22
  %119 = load i8*, i8** %14, align 8
  ret i8* %119
}

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @strcpy(i8*, i32) #1

declare dso_local i32 @rand(...) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, i32, i32) #1

declare dso_local i32 @strcat(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
