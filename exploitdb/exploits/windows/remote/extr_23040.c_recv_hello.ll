; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_23040.c_recv_hello.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_23040.c_recv_hello.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@MSG_WAITALL = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @recv_hello(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca [256 x i8], align 16
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %7 = load i32, i32* %2, align 4
  %8 = load i32, i32* @MSG_WAITALL, align 4
  %9 = call i32 @recv(i32 %7, i32* %4, i32 4, i32 %8)
  %10 = sext i32 %9 to i64
  %11 = icmp ne i64 %10, 4
  br i1 %11, label %38, label %12

12:                                               ; preds = %1
  %13 = load i32, i32* %4, align 4
  %14 = icmp ne i32 %13, 227
  br i1 %14, label %38, label %15

15:                                               ; preds = %12
  %16 = load i32, i32* %2, align 4
  %17 = load i32, i32* @MSG_WAITALL, align 4
  %18 = call i32 @recv(i32 %16, i32* %6, i32 4, i32 %17)
  %19 = sext i32 %18 to i64
  %20 = icmp ne i64 %19, 4
  br i1 %20, label %38, label %21

21:                                               ; preds = %15
  %22 = load i32, i32* %6, align 4
  %23 = icmp slt i32 %22, 33
  br i1 %23, label %38, label %24

24:                                               ; preds = %21
  %25 = load i32, i32* %6, align 4
  %26 = add nsw i32 %25, -1
  store i32 %26, i32* %6, align 4
  %27 = sext i32 %26 to i64
  %28 = icmp ugt i64 %27, 256
  br i1 %28, label %38, label %29

29:                                               ; preds = %24
  %30 = load i32, i32* %2, align 4
  %31 = load i32, i32* @MSG_WAITALL, align 4
  %32 = call i32 @recv(i32 %30, i32* %5, i32 4, i32 %31)
  %33 = sext i32 %32 to i64
  %34 = icmp ne i64 %33, 4
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = load i32, i32* %5, align 4
  %37 = icmp ne i32 %36, 76
  br label %38

38:                                               ; preds = %35, %29, %24, %21, %15, %12, %1
  %39 = phi i1 [ true, %29 ], [ true, %24 ], [ true, %21 ], [ true, %15 ], [ true, %12 ], [ true, %1 ], [ %37, %35 ]
  %40 = zext i1 %39 to i32
  ret i32 %40
}

declare dso_local i32 @recv(i32, i32*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
