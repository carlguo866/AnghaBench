; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_3650.c_prepare_shellcode.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_3650.c_prepare_shellcode.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i8* }

@shellcodes = common dso_local global %struct.TYPE_2__* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @prepare_shellcode(i8* %0, i32 %1, i8* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca [1000 x i8], align 16
  %8 = alloca [2500 x i8], align 16
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i8* %2, i8** %6, align 8
  %9 = load i8*, i8** %4, align 8
  %10 = load %struct.TYPE_2__*, %struct.TYPE_2__** @shellcodes, align 8
  %11 = load i32, i32* %5, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %10, i64 %12
  %14 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %13, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = load %struct.TYPE_2__*, %struct.TYPE_2__** @shellcodes, align 8
  %17 = load i32, i32* %5, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %16, i64 %18
  %20 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %19, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = call i64 @strlen(i8* %21)
  %23 = call i32 @memcpy(i8* %9, i8* %15, i64 %22)
  %24 = load i32, i32* %5, align 4
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %41

26:                                               ; preds = %3
  %27 = getelementptr inbounds [1000 x i8], [1000 x i8]* %7, i64 0, i64 0
  %28 = load i8*, i8** %6, align 8
  %29 = load i8*, i8** %6, align 8
  %30 = call i64 @strlen(i8* %29)
  %31 = call i32 @memcpy(i8* %27, i8* %28, i64 %30)
  %32 = getelementptr inbounds [1000 x i8], [1000 x i8]* %7, i64 0, i64 0
  %33 = call i64 @strlen(i8* %32)
  %34 = getelementptr inbounds [1000 x i8], [1000 x i8]* %7, i64 0, i64 %33
  store i8 -128, i8* %34, align 1
  %35 = getelementptr inbounds [1000 x i8], [1000 x i8]* %7, i64 0, i64 0
  %36 = getelementptr inbounds [2500 x i8], [2500 x i8]* %8, i64 0, i64 0
  %37 = call i32 @alphanumeric_encoder_thx_to_skylined(i8* %35, i8* %36)
  %38 = load i8*, i8** %4, align 8
  %39 = getelementptr inbounds [2500 x i8], [2500 x i8]* %8, i64 0, i64 0
  %40 = call i32 @strcat(i8* %38, i8* %39)
  br label %41

41:                                               ; preds = %26, %3
  ret void
}

declare dso_local i32 @memcpy(i8*, i8*, i64) #1

declare dso_local i64 @strlen(i8*) #1

declare dso_local i32 @alphanumeric_encoder_thx_to_skylined(i8*, i8*) #1

declare dso_local i32 @strcat(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
