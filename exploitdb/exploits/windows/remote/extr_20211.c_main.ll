; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_20211.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_20211.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i64, i32* }

@Xploiting_ways = common dso_local global %struct.TYPE_2__* null, align 8
@.str = private unnamed_addr constant [81 x i8] c"\0AMobius DocumentDirect for the Internet 1.2 Xploit by wildcoyote@coders-pt.org\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [68 x i8] c"Sintaxe: %s <host> <type number> [bind shell port] [port (server)]\0A\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"\0AFlamez to wildcoyote@coders-pt.org\0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"- Bad Sintaxe -\0A\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"Leaving...\0A\0A\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"- Bad Type Number - [Range 0 - %d]\0A\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"Let's try again... :P heh\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %6, align 4
  br label %7

7:                                                ; preds = %17, %2
  %8 = load %struct.TYPE_2__*, %struct.TYPE_2__** @Xploiting_ways, align 8
  %9 = load i32, i32* %6, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %8, i64 %10
  %12 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %7
  br label %20

16:                                               ; preds = %7
  br label %17

17:                                               ; preds = %16
  %18 = load i32, i32* %6, align 4
  %19 = add nsw i32 %18, 1
  store i32 %19, i32* %6, align 4
  br label %7

20:                                               ; preds = %15
  %21 = load i32, i32* %6, align 4
  %22 = add nsw i32 %21, -1
  store i32 %22, i32* %6, align 4
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str, i64 0, i64 0))
  %24 = load i32, i32* %4, align 4
  %25 = icmp slt i32 %24, 3
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = load i8**, i8*** %5, align 8
  %28 = getelementptr inbounds i8*, i8** %27, i64 0
  %29 = load i8*, i8** %28, align 8
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.1, i64 0, i64 0), i8* %29)
  %31 = call i32 (...) @show_types()
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0))
  br label %172

33:                                               ; preds = %20
  %34 = load i8**, i8*** %5, align 8
  %35 = getelementptr inbounds i8*, i8** %34, i64 2
  %36 = load i8*, i8** %35, align 8
  %37 = call i64 @atoi(i8* %36)
  %38 = load i32, i32* %6, align 4
  %39 = sext i32 %38 to i64
  %40 = icmp ule i64 %37, %39
  br i1 %40, label %41, label %167

41:                                               ; preds = %33
  %42 = load i8**, i8*** %5, align 8
  %43 = getelementptr inbounds i8*, i8** %42, i64 2
  %44 = load i8*, i8** %43, align 8
  %45 = call i64 @atoi(i8* %44)
  %46 = icmp uge i64 %45, 0
  br i1 %46, label %47, label %167

47:                                               ; preds = %41
  %48 = load i32, i32* %4, align 4
  %49 = icmp eq i32 %48, 3
  br i1 %49, label %50, label %69

50:                                               ; preds = %47
  %51 = load i8**, i8*** %5, align 8
  %52 = getelementptr inbounds i8*, i8** %51, i64 2
  %53 = load i8*, i8** %52, align 8
  %54 = call i64 @atoi(i8* %53)
  %55 = icmp ugt i64 %54, 0
  br i1 %55, label %56, label %65

56:                                               ; preds = %50
  %57 = load i8**, i8*** %5, align 8
  %58 = getelementptr inbounds i8*, i8** %57, i64 1
  %59 = load i8*, i8** %58, align 8
  %60 = load i8**, i8*** %5, align 8
  %61 = getelementptr inbounds i8*, i8** %60, i64 2
  %62 = load i8*, i8** %61, align 8
  %63 = call i64 @atoi(i8* %62)
  %64 = call i32 @own_or_DoS(i8* %59, i64 %63, i64 0)
  br label %68

65:                                               ; preds = %50
  %66 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0))
  %67 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0))
  br label %68

68:                                               ; preds = %65, %56
  br label %166

69:                                               ; preds = %47
  %70 = load i32, i32* %4, align 4
  %71 = icmp eq i32 %70, 4
  br i1 %71, label %72, label %101

72:                                               ; preds = %69
  %73 = load i8**, i8*** %5, align 8
  %74 = getelementptr inbounds i8*, i8** %73, i64 2
  %75 = load i8*, i8** %74, align 8
  %76 = call i64 @atoi(i8* %75)
  %77 = icmp ugt i64 %76, 0
  br i1 %77, label %78, label %87

78:                                               ; preds = %72
  %79 = load i8**, i8*** %5, align 8
  %80 = getelementptr inbounds i8*, i8** %79, i64 1
  %81 = load i8*, i8** %80, align 8
  %82 = load i8**, i8*** %5, align 8
  %83 = getelementptr inbounds i8*, i8** %82, i64 2
  %84 = load i8*, i8** %83, align 8
  %85 = call i64 @atoi(i8* %84)
  %86 = call i32 @own_or_DoS(i8* %81, i64 %85, i64 0)
  br label %100

87:                                               ; preds = %72
  %88 = load i8**, i8*** %5, align 8
  %89 = getelementptr inbounds i8*, i8** %88, i64 1
  %90 = load i8*, i8** %89, align 8
  %91 = load i8**, i8*** %5, align 8
  %92 = getelementptr inbounds i8*, i8** %91, i64 2
  %93 = load i8*, i8** %92, align 8
  %94 = call i64 @atoi(i8* %93)
  %95 = load i8**, i8*** %5, align 8
  %96 = getelementptr inbounds i8*, i8** %95, i64 3
  %97 = load i8*, i8** %96, align 8
  %98 = call i64 @atoi(i8* %97)
  %99 = call i32 @own_or_DoS(i8* %90, i64 %94, i64 %98)
  br label %100

100:                                              ; preds = %87, %78
  br label %165

101:                                              ; preds = %69
  %102 = load i8**, i8*** %5, align 8
  %103 = getelementptr inbounds i8*, i8** %102, i64 3
  %104 = load i8*, i8** %103, align 8
  %105 = call i64 @atoi(i8* %104)
  %106 = icmp ugt i64 %105, 0
  br i1 %106, label %107, label %164

107:                                              ; preds = %101
  %108 = load i8**, i8*** %5, align 8
  %109 = getelementptr inbounds i8*, i8** %108, i64 4
  %110 = load i8*, i8** %109, align 8
  %111 = call i64 @atoi(i8* %110)
  %112 = icmp ugt i64 %111, 0
  br i1 %112, label %113, label %164

113:                                              ; preds = %107
  %114 = load i8**, i8*** %5, align 8
  %115 = getelementptr inbounds i8*, i8** %114, i64 4
  %116 = load i8*, i8** %115, align 8
  %117 = call i64 @atoi(i8* %116)
  %118 = load %struct.TYPE_2__*, %struct.TYPE_2__** @Xploiting_ways, align 8
  %119 = load i8**, i8*** %5, align 8
  %120 = getelementptr inbounds i8*, i8** %119, i64 2
  %121 = load i8*, i8** %120, align 8
  %122 = call i64 @atoi(i8* %121)
  %123 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %118, i64 %122
  %124 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %123, i32 0, i32 0
  store i64 %117, i64* %124, align 8
  %125 = load i8**, i8*** %5, align 8
  %126 = getelementptr inbounds i8*, i8** %125, i64 2
  %127 = load i8*, i8** %126, align 8
  %128 = call i64 @atoi(i8* %127)
  %129 = icmp ugt i64 %128, 0
  br i1 %129, label %130, label %139

130:                                              ; preds = %113
  %131 = load i8**, i8*** %5, align 8
  %132 = getelementptr inbounds i8*, i8** %131, i64 1
  %133 = load i8*, i8** %132, align 8
  %134 = load i8**, i8*** %5, align 8
  %135 = getelementptr inbounds i8*, i8** %134, i64 2
  %136 = load i8*, i8** %135, align 8
  %137 = call i64 @atoi(i8* %136)
  %138 = call i32 @own_or_DoS(i8* %133, i64 %137, i64 0)
  br label %152

139:                                              ; preds = %113
  %140 = load i8**, i8*** %5, align 8
  %141 = getelementptr inbounds i8*, i8** %140, i64 1
  %142 = load i8*, i8** %141, align 8
  %143 = load i8**, i8*** %5, align 8
  %144 = getelementptr inbounds i8*, i8** %143, i64 2
  %145 = load i8*, i8** %144, align 8
  %146 = call i64 @atoi(i8* %145)
  %147 = load i8**, i8*** %5, align 8
  %148 = getelementptr inbounds i8*, i8** %147, i64 3
  %149 = load i8*, i8** %148, align 8
  %150 = call i64 @atoi(i8* %149)
  %151 = call i32 @own_or_DoS(i8* %142, i64 %146, i64 %150)
  br label %152

152:                                              ; preds = %139, %130
  %153 = load i8**, i8*** %5, align 8
  %154 = getelementptr inbounds i8*, i8** %153, i64 4
  %155 = load i8*, i8** %154, align 8
  %156 = call i64 @atoi(i8* %155)
  %157 = load %struct.TYPE_2__*, %struct.TYPE_2__** @Xploiting_ways, align 8
  %158 = load i8**, i8*** %5, align 8
  %159 = getelementptr inbounds i8*, i8** %158, i64 2
  %160 = load i8*, i8** %159, align 8
  %161 = call i64 @atoi(i8* %160)
  %162 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %157, i64 %161
  %163 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %162, i32 0, i32 0
  store i64 %156, i64* %163, align 8
  br label %164

164:                                              ; preds = %152, %107, %101
  br label %165

165:                                              ; preds = %164, %100
  br label %166

166:                                              ; preds = %165, %68
  br label %171

167:                                              ; preds = %41, %33
  %168 = load i32, i32* %6, align 4
  %169 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0), i32 %168)
  %170 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0))
  br label %171

171:                                              ; preds = %167, %166
  br label %172

172:                                              ; preds = %171, %26
  %173 = load i32, i32* %3, align 4
  ret i32 %173
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @show_types(...) #1

declare dso_local i64 @atoi(i8*) #1

declare dso_local i32 @own_or_DoS(i8*, i64, i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
