; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_11650.c_createConnection.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_11650.c_createConnection.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_7__ = type { i32, %struct.TYPE_5__, i32, i32 }
%struct.TYPE_5__ = type { i32 }
%struct.TYPE_6__ = type { i32 (...)* }
%struct.sockaddr = type { i32 }

@sockVersion = common dso_local global i32 0, align 4
@wsaData = common dso_local global i32 0, align 4
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@sock = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [17 x i8] c"error: socket()\0A\00", align 1
@rserver = common dso_local global %struct.TYPE_7__ zeroinitializer, align 4
@.str.1 = private unnamed_addr constant [18 x i8] c"error: connect()\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @createConnection(i32 (...)* %0, i32 %1) #0 {
  %3 = alloca %struct.TYPE_6__, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %3, i32 0, i32 0
  store i32 (...)* %0, i32 (...)** %7, align 8
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %5, align 4
  store i32 0, i32* %6, align 4
  %8 = call i32 @MAKEWORD(i32 1, i32 1)
  store i32 %8, i32* @sockVersion, align 4
  %9 = load i32, i32* @sockVersion, align 4
  %10 = call i32 @WSAStartup(i32 %9, i32* @wsaData)
  %11 = load i32, i32* @AF_INET, align 4
  %12 = load i32, i32* @SOCK_STREAM, align 4
  %13 = call i32 @socket(i32 %11, i32 %12, i32 0)
  store i32 %13, i32* @sock, align 4
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = call i32 @perror(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0))
  store i32 1, i32* %5, align 4
  br label %17

17:                                               ; preds = %15, %2
  %18 = load i32, i32* @AF_INET, align 4
  store i32 %18, i32* getelementptr inbounds (%struct.TYPE_7__, %struct.TYPE_7__* @rserver, i32 0, i32 3), align 4
  %19 = load i32, i32* %4, align 4
  %20 = call i32 @htons(i32 %19)
  store i32 %20, i32* getelementptr inbounds (%struct.TYPE_7__, %struct.TYPE_7__* @rserver, i32 0, i32 2), align 4
  %21 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %3, i32 0, i32 0
  %22 = load i32 (...)*, i32 (...)** %21, align 8
  %23 = call i32 (...) %22()
  %24 = call i32 @inet_addr(i32 %23)
  store i32 %24, i32* getelementptr inbounds (%struct.TYPE_7__, %struct.TYPE_7__* @rserver, i32 0, i32 1, i32 0), align 4
  %25 = call i32 @memset(i32* getelementptr inbounds (%struct.TYPE_7__, %struct.TYPE_7__* @rserver, i32 0, i32 0), i32 0, i32 8)
  store i32 4, i32* %6, align 4
  %26 = load i32, i32* @sock, align 4
  %27 = call i32 @connect(i32 %26, %struct.sockaddr* bitcast (%struct.TYPE_7__* @rserver to %struct.sockaddr*), i32 4)
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %29, label %31

29:                                               ; preds = %17
  %30 = call i32 @perror(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0))
  store i32 1, i32* %5, align 4
  br label %31

31:                                               ; preds = %29, %17
  %32 = load i32, i32* %5, align 4
  ret i32 %32
}

declare dso_local i32 @MAKEWORD(i32, i32) #1

declare dso_local i32 @WSAStartup(i32, i32*) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @inet_addr(i32) #1

declare dso_local i32 @memset(i32*, i32, i32) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
