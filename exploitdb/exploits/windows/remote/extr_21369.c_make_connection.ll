; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_21369.c_make_connection.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_21369.c_make_connection.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i64, %struct.TYPE_2__, i8* }
%struct.TYPE_2__ = type { i64 }
%struct.timeval = type { i32, i64 }
%struct.sockaddr = type { i32 }

@AF_INET = common dso_local global i8* null, align 8
@SOCK_STREAM = common dso_local global i32 0, align 4
@INADDR_ANY = common dso_local global i32 0, align 4
@FIONBIO = common dso_local global i32 0, align 4
@SOL_SOCKET = common dso_local global i32 0, align 4
@SO_ERROR = common dso_local global i32 0, align 4
@errno = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @make_connection(i8* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca %struct.sockaddr_in, align 8
  %7 = alloca %struct.sockaddr_in, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.timeval, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %13 = load i8*, i8** @AF_INET, align 8
  %14 = load i32, i32* @SOCK_STREAM, align 4
  %15 = call i32 @socket(i8* %13, i32 %14, i32 0)
  store i32 %15, i32* %8, align 4
  %16 = load i32, i32* %8, align 4
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %2
  store i32 -1, i32* %3, align 4
  br label %90

19:                                               ; preds = %2
  %20 = bitcast %struct.sockaddr_in* %6 to i8*
  %21 = call i32 @memset(i8* %20, i32 0, i32 24)
  %22 = load i8*, i8** @AF_INET, align 8
  %23 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 2
  store i8* %22, i8** %23, align 8
  %24 = load i32, i32* @INADDR_ANY, align 4
  %25 = call i64 @htonl(i32 %24)
  %26 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 1
  %27 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %26, i32 0, i32 0
  store i64 %25, i64* %27, align 8
  %28 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %6, i32 0, i32 0
  store i64 0, i64* %28, align 8
  %29 = load i8*, i8** @AF_INET, align 8
  %30 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 2
  store i8* %29, i8** %30, align 8
  %31 = load i8*, i8** %4, align 8
  %32 = call i64 @resolve(i8* %31)
  %33 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 1
  %34 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %33, i32 0, i32 0
  store i64 %32, i64* %34, align 8
  %35 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 1
  %36 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %35, i32 0, i32 0
  %37 = load i64, i64* %36, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %19
  %40 = load i32, i32* %8, align 4
  %41 = call i32 @close(i32 %40)
  store i32 -2, i32* %3, align 4
  br label %90

42:                                               ; preds = %19
  %43 = load i32, i32* %5, align 4
  %44 = call i64 @htons(i32 %43)
  %45 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %7, i32 0, i32 0
  store i64 %44, i64* %45, align 8
  store i32 1, i32* %10, align 4
  %46 = load i32, i32* %8, align 4
  %47 = load i32, i32* @FIONBIO, align 4
  %48 = call i32 @ioctl(i32 %46, i32 %47, i32* %10)
  %49 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 0
  store i32 10, i32* %49, align 8
  %50 = getelementptr inbounds %struct.timeval, %struct.timeval* %12, i32 0, i32 1
  store i64 0, i64* %50, align 8
  %51 = call i32 @FD_ZERO(i32* %11)
  %52 = load i32, i32* %8, align 4
  %53 = call i32 @FD_SET(i32 %52, i32* %11)
  %54 = load i32, i32* %8, align 4
  %55 = bitcast %struct.sockaddr_in* %7 to %struct.sockaddr*
  %56 = call i32 @connect(i32 %54, %struct.sockaddr* %55, i32 24)
  %57 = load i32, i32* %8, align 4
  %58 = add nsw i32 %57, 1
  %59 = call i32 @select(i32 %58, i32 0, i32* %11, i32 0, %struct.timeval* %12)
  store i32 %59, i32* %9, align 4
  %60 = icmp eq i32 %59, -1
  br i1 %60, label %61, label %64

61:                                               ; preds = %42
  %62 = load i32, i32* %8, align 4
  %63 = call i32 @close(i32 %62)
  store i32 -3, i32* %3, align 4
  br label %90

64:                                               ; preds = %42
  %65 = load i32, i32* %9, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %64
  %68 = load i32, i32* %8, align 4
  %69 = call i32 @close(i32 %68)
  store i32 -4, i32* %3, align 4
  br label %90

70:                                               ; preds = %64
  store i32 4, i32* %9, align 4
  %71 = load i32, i32* %8, align 4
  %72 = load i32, i32* @SOL_SOCKET, align 4
  %73 = load i32, i32* @SO_ERROR, align 4
  %74 = call i32 @getsockopt(i32 %71, i32 %72, i32 %73, i32* %10, i32* %9)
  %75 = load i32, i32* %10, align 4
  %76 = icmp ne i32 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %70
  %78 = load i32, i32* %9, align 4
  %79 = sext i32 %78 to i64
  %80 = icmp ne i64 %79, 4
  br i1 %80, label %81, label %85

81:                                               ; preds = %77, %70
  %82 = load i32, i32* %8, align 4
  %83 = call i32 @close(i32 %82)
  %84 = load i32, i32* %10, align 4
  store i32 %84, i32* @errno, align 4
  store i32 -5, i32* %3, align 4
  br label %90

85:                                               ; preds = %77
  %86 = load i32, i32* %8, align 4
  %87 = load i32, i32* @FIONBIO, align 4
  %88 = call i32 @ioctl(i32 %86, i32 %87, i32* %10)
  %89 = load i32, i32* %8, align 4
  store i32 %89, i32* %3, align 4
  br label %90

90:                                               ; preds = %85, %81, %67, %61, %39, %18
  %91 = load i32, i32* %3, align 4
  ret i32 %91
}

declare dso_local i32 @socket(i8*, i32, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i64 @htonl(i32) #1

declare dso_local i64 @resolve(i8*) #1

declare dso_local i32 @close(i32) #1

declare dso_local i64 @htons(i32) #1

declare dso_local i32 @ioctl(i32, i32, i32*) #1

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @select(i32, i32, i32*, i32, %struct.timeval*) #1

declare dso_local i32 @getsockopt(i32, i32, i32, i32*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
