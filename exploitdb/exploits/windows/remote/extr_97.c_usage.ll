; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_97.c_usage.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_97.c_usage.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [688 x i8] c"Usage: %s [-vqh] [ -t timeout ] <ip address>\0A       %s [-vqh] [ -t timeout ] <ip address>/<cidr-bits>\0A    -v    increase verbosity\0A    -q    quiet, no output, just exit status\0A    -t n  set scan timeout to n seconds, default %d\0A    -h    this help\0A    when scanning one ip, exits with:\0A        0 not vulnerable\0A        1 does not accept DCE RPC protocol (connection refused)\0A        2 no response (filtering DCOM port, or not there)\0A        3 vulnerable to dcom 1 and dcom2\0A        4 vulnerable to dcom 2 (but patched for dcom1)\0A        255 can't tell for some other reason\0A    when scanning an ip range, exits with:\0A        0 nothing was vulnerable\0A        4 one or more were vunerable\0A\00", align 1
@program_name = common dso_local global i8* null, align 8
@d_dcom_scan_timeout = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @usage(i32 %0) #0 {
  %2 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %3 = load i32, i32* @stderr, align 4
  %4 = load i8*, i8** @program_name, align 8
  %5 = load i8*, i8** @program_name, align 8
  %6 = load i32, i32* @d_dcom_scan_timeout, align 4
  %7 = call i32 @fprintf(i32 %3, i8* getelementptr inbounds ([688 x i8], [688 x i8]* @.str, i64 0, i64 0), i8* %4, i8* %5, i32 %6)
  %8 = load i32, i32* %2, align 4
  %9 = call i32 @exit(i32 %8) #3
  unreachable
}

declare dso_local i32 @fprintf(i32, i8*, i8*, i8*, i32) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
