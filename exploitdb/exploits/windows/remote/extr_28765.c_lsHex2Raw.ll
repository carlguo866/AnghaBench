; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_28765.c_lsHex2Raw.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_28765.c_lsHex2Raw.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @lsHex2Raw(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  store i64 0, i64* %6, align 8
  store i64 0, i64* %8, align 8
  %9 = load i8*, i8** %3, align 8
  %10 = call i64 @strlen(i8* %9)
  store i64 %10, i64* %7, align 8
  store i64 0, i64* %5, align 8
  br label %11

11:                                               ; preds = %95, %2
  %12 = load i64, i64* %5, align 8
  %13 = load i64, i64* %7, align 8
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %15, label %98

15:                                               ; preds = %11
  %16 = load i8*, i8** %3, align 8
  %17 = load i64, i64* %5, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = icmp sge i32 %20, 48
  br i1 %21, label %22, label %37

22:                                               ; preds = %15
  %23 = load i8*, i8** %3, align 8
  %24 = load i64, i64* %5, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = icmp sle i32 %27, 57
  br i1 %28, label %29, label %37

29:                                               ; preds = %22
  %30 = load i8*, i8** %3, align 8
  %31 = load i64, i64* %5, align 8
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = sub nsw i32 %34, 48
  %36 = sext i32 %35 to i64
  store i64 %36, i64* %6, align 8
  br label %46

37:                                               ; preds = %22, %15
  %38 = load i8*, i8** %3, align 8
  %39 = load i64, i64* %5, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = sub nsw i32 %42, 97
  %44 = add nsw i32 %43, 10
  %45 = sext i32 %44 to i64
  store i64 %45, i64* %6, align 8
  br label %46

46:                                               ; preds = %37, %29
  %47 = load i64, i64* %6, align 8
  %48 = mul i64 %47, 16
  store i64 %48, i64* %6, align 8
  %49 = load i8*, i8** %3, align 8
  %50 = load i64, i64* %5, align 8
  %51 = add i64 %50, 1
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = icmp sge i32 %54, 48
  br i1 %55, label %56, label %75

56:                                               ; preds = %46
  %57 = load i8*, i8** %3, align 8
  %58 = load i64, i64* %5, align 8
  %59 = add i64 %58, 1
  %60 = getelementptr inbounds i8, i8* %57, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = zext i8 %61 to i32
  %63 = icmp sle i32 %62, 57
  br i1 %63, label %64, label %75

64:                                               ; preds = %56
  %65 = load i8*, i8** %3, align 8
  %66 = load i64, i64* %5, align 8
  %67 = add i64 %66, 1
  %68 = getelementptr inbounds i8, i8* %65, i64 %67
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = sub nsw i32 %70, 48
  %72 = sext i32 %71 to i64
  %73 = load i64, i64* %6, align 8
  %74 = add i64 %73, %72
  store i64 %74, i64* %6, align 8
  br label %87

75:                                               ; preds = %56, %46
  %76 = load i8*, i8** %3, align 8
  %77 = load i64, i64* %5, align 8
  %78 = add i64 %77, 1
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = sub nsw i32 %81, 97
  %83 = add nsw i32 %82, 10
  %84 = sext i32 %83 to i64
  %85 = load i64, i64* %6, align 8
  %86 = add i64 %85, %84
  store i64 %86, i64* %6, align 8
  br label %87

87:                                               ; preds = %75, %64
  %88 = load i64, i64* %6, align 8
  %89 = trunc i64 %88 to i8
  %90 = load i8*, i8** %4, align 8
  %91 = load i64, i64* %8, align 8
  %92 = getelementptr inbounds i8, i8* %90, i64 %91
  store i8 %89, i8* %92, align 1
  %93 = load i64, i64* %8, align 8
  %94 = add i64 %93, 1
  store i64 %94, i64* %8, align 8
  br label %95

95:                                               ; preds = %87
  %96 = load i64, i64* %5, align 8
  %97 = add i64 %96, 2
  store i64 %97, i64* %5, align 8
  br label %11

98:                                               ; preds = %11
  %99 = load i64, i64* %8, align 8
  %100 = trunc i64 %99 to i32
  ret i32 %100
}

declare dso_local i64 @strlen(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
