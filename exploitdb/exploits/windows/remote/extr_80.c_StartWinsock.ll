; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_80.c_StartWinsock.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_80.c_StartWinsock.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.hostent = type { i32, i32* }
%struct.TYPE_6__ = type { %struct.TYPE_7__, i8* }
%struct.TYPE_7__ = type { i8* }
%struct.TYPE_5__ = type { i32 }

@host = common dso_local global i32* null, align 8
@he = common dso_local global %struct.hostent* null, align 8
@INADDR_ANY = common dso_local global i8* null, align 8
@s_sa = common dso_local global %struct.TYPE_6__ zeroinitializer, align 8
@AF_INET = common dso_local global i8* null, align 8
@addr = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @StartWinsock() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.TYPE_5__, align 4
  store i32 0, i32* %2, align 4
  %5 = call i32 @MAKEWORD(i32 2, i32 0)
  store i32 %5, i32* %3, align 4
  %6 = load i32, i32* %3, align 4
  %7 = call i32 @WSAStartup(i32 %6, %struct.TYPE_5__* %4)
  store i32 %7, i32* %2, align 4
  %8 = load i32, i32* %2, align 4
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %0
  store i32 0, i32* %1, align 4
  br label %52

11:                                               ; preds = %0
  %12 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %4, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = call i32 @LOBYTE(i32 %13)
  %15 = icmp ne i32 %14, 2
  br i1 %15, label %21, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %4, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = call i64 @HIBYTE(i32 %18)
  %20 = icmp ne i64 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16, %11
  %22 = call i32 (...) @WSACleanup()
  store i32 0, i32* %1, align 4
  br label %52

23:                                               ; preds = %16
  %24 = load i32*, i32** @host, align 8
  %25 = getelementptr inbounds i32, i32* %24, i64 0
  %26 = load i32, i32* %25, align 4
  %27 = call i64 @isalpha(i32 %26)
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %23
  %30 = load i32*, i32** @host, align 8
  %31 = call %struct.hostent* @gethostbyname(i32* %30)
  store %struct.hostent* %31, %struct.hostent** @he, align 8
  %32 = load i8*, i8** @INADDR_ANY, align 8
  store i8* %32, i8** getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @s_sa, i32 0, i32 0, i32 0), align 8
  %33 = load i8*, i8** @AF_INET, align 8
  store i8* %33, i8** getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @s_sa, i32 0, i32 1), align 8
  %34 = load %struct.hostent*, %struct.hostent** @he, align 8
  %35 = getelementptr inbounds %struct.hostent, %struct.hostent* %34, i32 0, i32 1
  %36 = load i32*, i32** %35, align 8
  %37 = load %struct.hostent*, %struct.hostent** @he, align 8
  %38 = getelementptr inbounds %struct.hostent, %struct.hostent* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = call i32 @memcpy(%struct.TYPE_7__* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @s_sa, i32 0, i32 0), i32* %36, i32 %39)
  br label %47

41:                                               ; preds = %23
  %42 = load i32*, i32** @host, align 8
  %43 = call i32 @inet_addr(i32* %42)
  store i32 %43, i32* @addr, align 4
  %44 = load i8*, i8** @INADDR_ANY, align 8
  store i8* %44, i8** getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @s_sa, i32 0, i32 0, i32 0), align 8
  %45 = load i8*, i8** @AF_INET, align 8
  store i8* %45, i8** getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @s_sa, i32 0, i32 1), align 8
  %46 = call i32 @memcpy(%struct.TYPE_7__* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @s_sa, i32 0, i32 0), i32* @addr, i32 4)
  store %struct.hostent* inttoptr (i64 1 to %struct.hostent*), %struct.hostent** @he, align 8
  br label %47

47:                                               ; preds = %41, %29
  %48 = load %struct.hostent*, %struct.hostent** @he, align 8
  %49 = icmp eq %struct.hostent* %48, null
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  store i32 0, i32* %1, align 4
  br label %52

51:                                               ; preds = %47
  store i32 1, i32* %1, align 4
  br label %52

52:                                               ; preds = %51, %50, %21, %10
  %53 = load i32, i32* %1, align 4
  ret i32 %53
}

declare dso_local i32 @MAKEWORD(i32, i32) #1

declare dso_local i32 @WSAStartup(i32, %struct.TYPE_5__*) #1

declare dso_local i32 @LOBYTE(i32) #1

declare dso_local i64 @HIBYTE(i32) #1

declare dso_local i32 @WSACleanup(...) #1

declare dso_local i64 @isalpha(i32) #1

declare dso_local %struct.hostent* @gethostbyname(i32*) #1

declare dso_local i32 @memcpy(%struct.TYPE_7__*, i32*, i32) #1

declare dso_local i32 @inet_addr(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
