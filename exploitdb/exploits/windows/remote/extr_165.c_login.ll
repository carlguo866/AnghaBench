; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_165.c_login.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_165.c_login.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [25 x i8] c"[+] Logging in as %s...\0A\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"USER %s\0D\0A\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"[-] Failed to log in #1\0A\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"PASS %s\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"[-] Failed to log in #2\0A\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"[-] Failed to log in. Code %3u\0A\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"[+] Logged in\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @login(i32 %0, i8* %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  store i32 %0, i32* %5, align 4
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %9 = load i8*, i8** %6, align 8
  %10 = call i32 (i8*, ...) @msg(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* %9)
  %11 = load i32, i32* %5, align 4
  %12 = load i8*, i8** %6, align 8
  %13 = call i32 @send_cmd(i32 %11, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i8* %12)
  store i32 %13, i32* %8, align 4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %3
  %16 = call i32 (i8*, ...) @msg(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0))
  store i32 0, i32* %4, align 4
  br label %36

17:                                               ; preds = %3
  %18 = load i32, i32* %8, align 4
  %19 = icmp eq i32 %18, 331
  br i1 %19, label %20, label %28

20:                                               ; preds = %17
  %21 = load i32, i32* %5, align 4
  %22 = load i8*, i8** %7, align 8
  %23 = call i32 @send_cmd(i32 %21, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* %22)
  store i32 %23, i32* %8, align 4
  %24 = icmp slt i32 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %20
  %26 = call i32 (i8*, ...) @msg(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0))
  store i32 0, i32* %4, align 4
  br label %36

27:                                               ; preds = %20
  br label %28

28:                                               ; preds = %27, %17
  %29 = load i32, i32* %8, align 4
  %30 = icmp ne i32 %29, 230
  br i1 %30, label %31, label %34

31:                                               ; preds = %28
  %32 = load i32, i32* %8, align 4
  %33 = call i32 (i8*, ...) @msg(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0), i32 %32)
  store i32 0, i32* %4, align 4
  br label %36

34:                                               ; preds = %28
  %35 = call i32 (i8*, ...) @msg(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0))
  store i32 1, i32* %4, align 4
  br label %36

36:                                               ; preds = %34, %31, %25, %15
  %37 = load i32, i32* %4, align 4
  ret i32 %37
}

declare dso_local i32 @msg(i8*, ...) #1

declare dso_local i32 @send_cmd(i32, i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
