; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_4934.c_Make_Connection.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_4934.c_Make_Connection.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.sockaddr_in = type { i32, %struct.TYPE_2__, i32 }
%struct.TYPE_2__ = type { i64 }
%struct.timeval = type { i32, i64 }
%struct.sockaddr = type { i32 }

@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@FIONBIO = common dso_local global i32 0, align 4
@SOL_SOCKET = common dso_local global i32 0, align 4
@SO_ERROR = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @Make_Connection(i8* %0, i32 %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.sockaddr_in, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %struct.timeval, align 8
  store i8* %0, i8** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %14 = load i32, i32* @AF_INET, align 4
  %15 = load i32, i32* @SOCK_STREAM, align 4
  %16 = call i64 @socket(i32 %14, i32 %15, i32 0)
  store i64 %16, i64* %9, align 8
  %17 = load i64, i64* %9, align 8
  %18 = icmp slt i64 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %3
  store i32 -1, i32* %4, align 4
  br label %85

20:                                               ; preds = %3
  %21 = load i32, i32* @AF_INET, align 4
  %22 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 2
  store i32 %21, i32* %22, align 8
  %23 = load i8*, i8** %5, align 8
  %24 = call i64 @inet_addr(i8* %23)
  %25 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 1
  %26 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %25, i32 0, i32 0
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 1
  %28 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %27, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %20
  %32 = load i64, i64* %9, align 8
  %33 = call i32 @closesocket(i64 %32)
  store i32 -2, i32* %4, align 4
  br label %85

34:                                               ; preds = %20
  %35 = load i32, i32* %6, align 4
  %36 = trunc i32 %35 to i16
  %37 = call i32 @htons(i16 signext %36)
  %38 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %8, i32 0, i32 0
  store i32 %37, i32* %38, align 8
  store i32 1, i32* %11, align 4
  %39 = load i64, i64* %9, align 8
  %40 = load i32, i32* @FIONBIO, align 4
  %41 = call i32 @ioctlsocket(i64 %39, i32 %40, i32* %11)
  %42 = load i32, i32* %7, align 4
  %43 = getelementptr inbounds %struct.timeval, %struct.timeval* %13, i32 0, i32 0
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %struct.timeval, %struct.timeval* %13, i32 0, i32 1
  store i64 0, i64* %44, align 8
  %45 = call i32 @FD_ZERO(i32* %12)
  %46 = load i64, i64* %9, align 8
  %47 = call i32 @FD_SET(i64 %46, i32* %12)
  %48 = load i64, i64* %9, align 8
  %49 = bitcast %struct.sockaddr_in* %8 to %struct.sockaddr*
  %50 = call i32 @connect(i64 %48, %struct.sockaddr* %49, i32 24)
  %51 = load i64, i64* %9, align 8
  %52 = add nsw i64 %51, 1
  %53 = call i32 @select(i64 %52, i32 0, i32* %12, i32 0, %struct.timeval* %13)
  store i32 %53, i32* %10, align 4
  %54 = icmp eq i32 %53, -1
  br i1 %54, label %55, label %58

55:                                               ; preds = %34
  %56 = load i64, i64* %9, align 8
  %57 = call i32 @closesocket(i64 %56)
  store i32 -3, i32* %4, align 4
  br label %85

58:                                               ; preds = %34
  %59 = load i32, i32* %10, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %58
  %62 = load i64, i64* %9, align 8
  %63 = call i32 @closesocket(i64 %62)
  store i32 -4, i32* %4, align 4
  br label %85

64:                                               ; preds = %58
  store i32 4, i32* %10, align 4
  %65 = load i64, i64* %9, align 8
  %66 = load i32, i32* @SOL_SOCKET, align 4
  %67 = load i32, i32* @SO_ERROR, align 4
  %68 = bitcast i32* %11 to i8*
  %69 = call i32 @getsockopt(i64 %65, i32 %66, i32 %67, i8* %68, i32* %10)
  %70 = load i32, i32* %11, align 4
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %64
  %73 = load i32, i32* %10, align 4
  %74 = sext i32 %73 to i64
  %75 = icmp ne i64 %74, 4
  br i1 %75, label %76, label %79

76:                                               ; preds = %72, %64
  %77 = load i64, i64* %9, align 8
  %78 = call i32 @closesocket(i64 %77)
  store i32 -5, i32* %4, align 4
  br label %85

79:                                               ; preds = %72
  %80 = load i64, i64* %9, align 8
  %81 = load i32, i32* @FIONBIO, align 4
  %82 = call i32 @ioctlsocket(i64 %80, i32 %81, i32* %11)
  %83 = load i64, i64* %9, align 8
  %84 = trunc i64 %83 to i32
  store i32 %84, i32* %4, align 4
  br label %85

85:                                               ; preds = %79, %76, %61, %55, %31, %19
  %86 = load i32, i32* %4, align 4
  ret i32 %86
}

declare dso_local i64 @socket(i32, i32, i32) #1

declare dso_local i64 @inet_addr(i8*) #1

declare dso_local i32 @closesocket(i64) #1

declare dso_local i32 @htons(i16 signext) #1

declare dso_local i32 @ioctlsocket(i64, i32, i32*) #1

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i64, i32*) #1

declare dso_local i32 @connect(i64, %struct.sockaddr*, i32) #1

declare dso_local i32 @select(i64, i32, i32*, i32, %struct.timeval*) #1

declare dso_local i32 @getsockopt(i64, i32, i32, i8*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
