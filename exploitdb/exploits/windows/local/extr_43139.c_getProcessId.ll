; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_43139.c_getProcessId.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_43139.c_getProcessId.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i32, i32, i32 }

@TH32CS_SNAPPROCESS = common dso_local global i32 0, align 4
@INVALID_HANDLE_VALUE = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [58 x i8] c"\0A[-] Failed to create handle CreateToolhelp32Snapshot()\0A\0A\00", align 1
@FALSE = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [39 x i8] c"\0A[-] Failed to call Process32First()\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @getProcessId(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %struct.TYPE_4__, align 4
  %6 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  %7 = load i32, i32* @TH32CS_SNAPPROCESS, align 4
  %8 = call i64 @CreateToolhelp32Snapshot(i32 %7, i32 0)
  store i64 %8, i64* %4, align 8
  %9 = load i64, i64* %4, align 8
  %10 = load i64, i64* @INVALID_HANDLE_VALUE, align 8
  %11 = icmp eq i64 %9, %10
  br i1 %11, label %12, label %14

12:                                               ; preds = %1
  %13 = call i32 @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0))
  store i32 -1, i32* %2, align 4
  br label %41

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %5, i32 0, i32 0
  store i32 12, i32* %15, align 4
  %16 = load i64, i64* %4, align 8
  %17 = call i64 @Process32First(i64 %16, %struct.TYPE_4__* %5)
  %18 = load i64, i64* @FALSE, align 8
  %19 = icmp eq i64 %17, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %14
  %21 = call i32 @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1, i64 0, i64 0))
  store i32 -1, i32* %2, align 4
  br label %41

22:                                               ; preds = %14
  br label %23

23:                                               ; preds = %34, %22
  %24 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %5, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = load i8*, i8** %3, align 8
  %27 = call i64 @stricmp(i32 %25, i8* %26)
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %23
  %30 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %5, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %6, align 4
  %32 = load i32, i32* %6, align 4
  store i32 %32, i32* %2, align 4
  br label %41

33:                                               ; preds = %23
  br label %34

34:                                               ; preds = %33
  %35 = load i64, i64* %4, align 8
  %36 = call i64 @Process32Next(i64 %35, %struct.TYPE_4__* %5)
  %37 = icmp ne i64 %36, 0
  br i1 %37, label %23, label %38

38:                                               ; preds = %34
  %39 = load i64, i64* %4, align 8
  %40 = call i32 @CloseHandle(i64 %39)
  store i32 0, i32* %2, align 4
  br label %41

41:                                               ; preds = %38, %29, %20, %12
  %42 = load i32, i32* %2, align 4
  ret i32 %42
}

declare dso_local i64 @CreateToolhelp32Snapshot(i32, i32) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i64 @Process32First(i64, %struct.TYPE_4__*) #1

declare dso_local i64 @stricmp(i32, i8*) #1

declare dso_local i64 @Process32Next(i64, %struct.TYPE_4__*) #1

declare dso_local i32 @CloseHandle(i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
