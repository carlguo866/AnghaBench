; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_8983.c_fixup_ring0_shell.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_8983.c_fixup_ring0_shell.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@stderr = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [35 x i8] c"* GetVersion, unsupported version\0A\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@winxp_ring0_shell = common dso_local global i32* null, align 8
@win2k3_ring0_shell = common dso_local global i32* null, align 8
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32* (i32, i32*)* @fixup_ring0_shell to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32* @fixup_ring0_shell(i32 %0, i32* %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32* %1, i32** %5, align 8
  %9 = call i32 (...) @GetVersion()
  store i32 %9, i32* %6, align 4
  %10 = load i32, i32* %6, align 4
  %11 = call i32 @LOWORD(i32 %10)
  %12 = call i64 @LOBYTE(i32 %11)
  %13 = trunc i64 %12 to i32
  store i32 %13, i32* %7, align 4
  %14 = load i32, i32* %6, align 4
  %15 = call i32 @LOWORD(i32 %14)
  %16 = call i64 @HIBYTE(i32 %15)
  %17 = trunc i64 %16 to i32
  store i32 %17, i32* %8, align 4
  %18 = load i32, i32* %7, align 4
  %19 = icmp ne i32 %18, 5
  br i1 %19, label %20, label %25

20:                                               ; preds = %2
  %21 = load i32, i32* @stderr, align 4
  %22 = call i32 @fprintf(i32 %21, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0))
  %23 = load i32, i32* @EXIT_FAILURE, align 4
  %24 = call i32 @exit(i32 %23) #3
  unreachable

25:                                               ; preds = %2
  %26 = load i32, i32* %8, align 4
  switch i32 %26, label %39 [
    i32 1, label %27
    i32 2, label %33
  ]

27:                                               ; preds = %25
  %28 = load i32*, i32** %5, align 8
  store i32 7, i32* %28, align 4
  %29 = load i32, i32* %4, align 4
  %30 = load i32*, i32** @winxp_ring0_shell, align 8
  %31 = getelementptr inbounds i32, i32* %30, i64 55
  store i32 %29, i32* %31, align 4
  %32 = load i32*, i32** @winxp_ring0_shell, align 8
  store i32* %32, i32** %3, align 8
  br label %44

33:                                               ; preds = %25
  %34 = load i32*, i32** %5, align 8
  store i32 7, i32* %34, align 4
  %35 = load i32, i32* %4, align 4
  %36 = load i32*, i32** @win2k3_ring0_shell, align 8
  %37 = getelementptr inbounds i32, i32* %36, i64 58
  store i32 %35, i32* %37, align 4
  %38 = load i32*, i32** @win2k3_ring0_shell, align 8
  store i32* %38, i32** %3, align 8
  br label %44

39:                                               ; preds = %25
  %40 = load i32, i32* @stderr, align 4
  %41 = call i32 @fprintf(i32 %40, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0))
  %42 = load i32, i32* @EXIT_FAILURE, align 4
  %43 = call i32 @exit(i32 %42) #3
  unreachable

44:                                               ; preds = %33, %27
  %45 = load i32*, i32** %3, align 8
  ret i32* %45
}

declare dso_local i32 @GetVersion(...) #1

declare dso_local i64 @LOBYTE(i32) #1

declare dso_local i32 @LOWORD(i32) #1

declare dso_local i64 @HIBYTE(i32) #1

declare dso_local i32 @fprintf(i32, i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
