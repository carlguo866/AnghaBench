; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_9492.c_GetPidByName.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_9492.c_GetPidByName.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i32, i8*, i32 }

@TH32CS_SNAPPROCESS = common dso_local global i32 0, align 4
@INVALID_HANDLE_VALUE = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [59 x i8] c"\0AError ==> CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0)\00", align 1
@.str.1 = private unnamed_addr constant [44 x i8] c"\0AError ==> Process32First(hTool32, &PEntry)\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"===> Found : %s : %d\0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"\0A%s n'a pas ete trouve.\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @GetPidByName(i8* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 8
  %4 = alloca %struct.TYPE_4__, align 8
  %5 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  %6 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %4, i32 0, i32 0
  store i32 24, i32* %6, align 8
  %7 = load i32, i32* @TH32CS_SNAPPROCESS, align 4
  %8 = call i64 @CreateToolhelp32Snapshot(i32 %7, i32 0)
  store i64 %8, i64* %5, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i64, i64* @INVALID_HANDLE_VALUE, align 8
  %11 = icmp eq i64 %9, %10
  br i1 %11, label %12, label %16

12:                                               ; preds = %1
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0))
  %14 = call i32 (...) @getch()
  %15 = call i32 @exit(i32 0) #3
  unreachable

16:                                               ; preds = %1
  %17 = load i64, i64* %5, align 8
  %18 = call i32 @Process32First(i64 %17, %struct.TYPE_4__* %4)
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0))
  %22 = call i32 (...) @getch()
  %23 = call i32 @exit(i32 0) #3
  unreachable

24:                                               ; preds = %16
  %25 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %4, i32 0, i32 1
  %26 = load i8*, i8** %25, align 8
  %27 = load i8*, i8** %3, align 8
  %28 = call i64 @strcasecmp(i8* %26, i8* %27)
  %29 = icmp ne i64 %28, 0
  br i1 %29, label %38, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %4, i32 0, i32 1
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %4, i32 0, i32 2
  %34 = load i32, i32* %33, align 8
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %32, i32 %34)
  %36 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %4, i32 0, i32 2
  %37 = load i32, i32* %36, align 8
  store i32 %37, i32* %2, align 4
  br label %65

38:                                               ; preds = %24
  br label %39

39:                                               ; preds = %59, %38
  %40 = load i64, i64* %5, align 8
  %41 = call i64 @Process32Next(i64 %40, %struct.TYPE_4__* %4)
  %42 = icmp ne i64 %41, 0
  br i1 %42, label %43, label %60

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %4, i32 0, i32 1
  %45 = load i8*, i8** %44, align 8
  %46 = load i8*, i8** %3, align 8
  %47 = call i64 @strcasecmp(i8* %45, i8* %46)
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %59

49:                                               ; preds = %43
  %50 = load i64, i64* %5, align 8
  %51 = call i32 @CloseHandle(i64 %50)
  %52 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %4, i32 0, i32 1
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %4, i32 0, i32 2
  %55 = load i32, i32* %54, align 8
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* %53, i32 %55)
  %57 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %4, i32 0, i32 2
  %58 = load i32, i32* %57, align 8
  store i32 %58, i32* %2, align 4
  br label %65

59:                                               ; preds = %43
  br label %39

60:                                               ; preds = %39
  %61 = load i8*, i8** %3, align 8
  %62 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i8* %61)
  %63 = call i32 (...) @getch()
  %64 = call i32 @exit(i32 0) #3
  unreachable

65:                                               ; preds = %49, %30
  %66 = load i32, i32* %2, align 4
  ret i32 %66
}

declare dso_local i64 @CreateToolhelp32Snapshot(i32, i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @getch(...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @Process32First(i64, %struct.TYPE_4__*) #1

declare dso_local i64 @strcasecmp(i8*, i8*) #1

declare dso_local i64 @Process32Next(i64, %struct.TYPE_4__*) #1

declare dso_local i32 @CloseHandle(i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
