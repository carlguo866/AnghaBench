; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_11174.c_reverseInt.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_11174.c_reverseInt.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @reverseInt(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  store i32 %0, i32* %3, align 4
  %8 = call i64 (...) @is_bigendian()
  %9 = icmp ne i64 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %1
  %11 = load i32, i32* %3, align 4
  store i32 %11, i32* %2, align 4
  br label %42

12:                                               ; preds = %1
  %13 = load i32, i32* %3, align 4
  %14 = and i32 %13, 255
  %15 = trunc i32 %14 to i8
  store i8 %15, i8* %4, align 1
  %16 = load i32, i32* %3, align 4
  %17 = lshr i32 %16, 8
  %18 = and i32 %17, 255
  %19 = trunc i32 %18 to i8
  store i8 %19, i8* %5, align 1
  %20 = load i32, i32* %3, align 4
  %21 = lshr i32 %20, 16
  %22 = and i32 %21, 255
  %23 = trunc i32 %22 to i8
  store i8 %23, i8* %6, align 1
  %24 = load i32, i32* %3, align 4
  %25 = lshr i32 %24, 24
  %26 = and i32 %25, 255
  %27 = trunc i32 %26 to i8
  store i8 %27, i8* %7, align 1
  %28 = load i8, i8* %4, align 1
  %29 = zext i8 %28 to i32
  %30 = shl i32 %29, 24
  %31 = load i8, i8* %5, align 1
  %32 = zext i8 %31 to i32
  %33 = shl i32 %32, 16
  %34 = add nsw i32 %30, %33
  %35 = load i8, i8* %6, align 1
  %36 = zext i8 %35 to i32
  %37 = shl i32 %36, 8
  %38 = add nsw i32 %34, %37
  %39 = load i8, i8* %7, align 1
  %40 = zext i8 %39 to i32
  %41 = add nsw i32 %38, %40
  store i32 %41, i32* %2, align 4
  br label %42

42:                                               ; preds = %12, %10
  %43 = load i32, i32* %2, align 4
  ret i32 %43
}

declare dso_local i64 @is_bigendian(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
