; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_355.c_cmdshell.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_355.c_cmdshell.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@EXIT_SHELL = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [7 x i8] c"exit\0D\0A\00", align 1
@.str.1 = private unnamed_addr constant [24 x i8] c"[i] Connection closed.\0A\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"[i] Connection successfully exited.\0D\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @cmdshell(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [1024 x i8], align 16
  store i32 %0, i32* %2, align 4
  store i32 666, i32* %3, align 4
  br label %5

5:                                                ; preds = %33, %1
  %6 = load i32, i32* %3, align 4
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %34

8:                                                ; preds = %5
  %9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %10 = call i32 @read(i32 0, i8* %9, i32 1024)
  store i32 %10, i32* %3, align 4
  %11 = load i32, i32* %3, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 %12
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %15 = load i32, i32* @EXIT_SHELL, align 4
  %16 = load i32, i32* @EXIT_SHELL, align 4
  %17 = call i32 @strlen(i32 %16)
  %18 = call i32 @strncmp(i8* %14, i32 %15, i32 %17)
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %8
  %21 = load i32, i32* %2, align 4
  %22 = call i32 @send(i32 %21, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 6, i32 0)
  br label %34

23:                                               ; preds = %8
  %24 = load i32, i32* %2, align 4
  %25 = getelementptr inbounds [1024 x i8], [1024 x i8]* %4, i64 0, i64 0
  %26 = load i32, i32* %3, align 4
  %27 = call i32 @send(i32 %24, i8* %25, i32 %26, i32 0)
  store i32 %27, i32* %3, align 4
  %28 = load i32, i32* %3, align 4
  %29 = icmp sle i32 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %23
  %31 = call i32 @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i64 0, i64 0))
  %32 = call i32 @exit(i32 0) #3
  unreachable

33:                                               ; preds = %23
  br label %5

34:                                               ; preds = %20, %5
  %35 = call i32 @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0))
  %36 = call i32 @exit(i32 0) #3
  unreachable
}

declare dso_local i32 @read(i32, i8*, i32) #1

declare dso_local i32 @strncmp(i8*, i32, i32) #1

declare dso_local i32 @strlen(i32) #1

declare dso_local i32 @send(i32, i8*, i32, i32) #1

declare dso_local i32 @printf(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
