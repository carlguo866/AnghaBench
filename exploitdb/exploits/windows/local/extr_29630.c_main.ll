; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_29630.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_29630.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i8*, i32, i32, i32 }

@.str = private unnamed_addr constant [329 x i8] c"Usage: %s <directory_path>\0A Monitor directory changes with all subdirectories\0A For any files, including ones you have no access\0A (as on January, 2007)\0A(c) Vladimir Dubrovin, 3APA3A\0A http://securityvulns.com\0A http://securityvulns.ru\0AThis approach is not reliable and should not be used for audit and another critical operations.\0A\00", align 1
@FILE_LIST_DIRECTORY = common dso_local global i32 0, align 4
@FILE_SHARE_READ = common dso_local global i32 0, align 4
@FILE_SHARE_DELETE = common dso_local global i32 0, align 4
@OPEN_EXISTING = common dso_local global i32 0, align 4
@FILE_FLAG_BACKUP_SEMANTICS = common dso_local global i32 0, align 4
@INVALID_HANDLE_VALUE = common dso_local global i64 0, align 8
@stdout = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [20 x i8] c"Failed to open dir\0A\00", align 1
@FILE_NOTIFY_CHANGE_DIR_NAME = common dso_local global i32 0, align 4
@FILE_NOTIFY_CHANGE_FILE_NAME = common dso_local global i32 0, align 4
@FILE_NOTIFY_CHANGE_LAST_ACCESS = common dso_local global i32 0, align 4
@FILE_NOTIFY_CHANGE_ATTRIBUTES = common dso_local global i32 0, align 4
@FILE_NOTIFY_CHANGE_SIZE = common dso_local global i32 0, align 4
@FILE_NOTIFY_CHANGE_LAST_WRITE = common dso_local global i32 0, align 4
@FILE_NOTIFY_CHANGE_CREATION = common dso_local global i32 0, align 4
@FILE_NOTIFY_CHANGE_SECURITY = common dso_local global i32 0, align 4
@stderr = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [34 x i8] c"Failed to read directory changes\0A\00", align 1
@.str.3 = private unnamed_addr constant [6 x i32] [i32 97, i32 100, i32 100, i32 101, i32 100, i32 0], align 4
@.str.4 = private unnamed_addr constant [8 x i32] [i32 114, i32 101, i32 109, i32 111, i32 118, i32 101, i32 100, i32 0], align 4
@.str.5 = private unnamed_addr constant [18 x i32] [i32 97, i32 99, i32 99, i32 101, i32 115, i32 115, i32 101, i32 100, i32 47, i32 109, i32 111, i32 100, i32 105, i32 102, i32 105, i32 101, i32 100, i32 0], align 4
@.str.6 = private unnamed_addr constant [19 x i32] [i32 114, i32 101, i32 110, i32 97, i32 109, i32 101, i32 100, i32 32, i32 40, i32 111, i32 108, i32 100, i32 32, i32 110, i32 97, i32 109, i32 101, i32 41, i32 0], align 4
@.str.7 = private unnamed_addr constant [19 x i32] [i32 114, i32 101, i32 110, i32 97, i32 109, i32 101, i32 100, i32 32, i32 40, i32 110, i32 101, i32 119, i32 32, i32 110, i32 97, i32 109, i32 101, i32 41, i32 0], align 4
@.str.8 = private unnamed_addr constant [10 x i32] [i32 40, i32 117, i32 110, i32 107, i32 110, i32 111, i32 119, i32 110, i32 41, i32 0], align 4
@.str.9 = private unnamed_addr constant [13 x i32] [i32 70, i32 105, i32 108, i32 101, i32 32, i32 37, i32 115, i32 58, i32 32, i32 37, i32 115, i32 10, i32 0], align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i64, align 8
  %7 = alloca [1024 x i8], align 16
  %8 = alloca %struct.TYPE_2__*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8* null, i8** %10, align 8
  %11 = load i32, i32* %4, align 4
  %12 = icmp ne i32 %11, 2
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = load i8**, i8*** %5, align 8
  %15 = getelementptr inbounds i8*, i8** %14, i64 0
  %16 = load i8*, i8** %15, align 8
  %17 = call i32 @printf(i8* getelementptr inbounds ([329 x i8], [329 x i8]* @.str, i64 0, i64 0), i8* %16)
  store i32 1, i32* %3, align 4
  br label %107

18:                                               ; preds = %2
  %19 = load i8**, i8*** %5, align 8
  %20 = getelementptr inbounds i8*, i8** %19, i64 1
  %21 = load i8*, i8** %20, align 8
  %22 = call i32 @CreateDirectory(i8* %21, i32 0)
  %23 = load i8**, i8*** %5, align 8
  %24 = getelementptr inbounds i8*, i8** %23, i64 1
  %25 = load i8*, i8** %24, align 8
  %26 = load i32, i32* @FILE_LIST_DIRECTORY, align 4
  %27 = load i32, i32* @FILE_SHARE_READ, align 4
  %28 = load i32, i32* @FILE_SHARE_DELETE, align 4
  %29 = or i32 %27, %28
  %30 = load i32, i32* @OPEN_EXISTING, align 4
  %31 = load i32, i32* @FILE_FLAG_BACKUP_SEMANTICS, align 4
  %32 = call i64 @CreateFile(i8* %25, i32 %26, i32 %29, i32* null, i32 %30, i32 %31, i32* null)
  store i64 %32, i64* %6, align 8
  %33 = load i64, i64* %6, align 8
  %34 = load i64, i64* @INVALID_HANDLE_VALUE, align 8
  %35 = icmp eq i64 %33, %34
  br i1 %35, label %36, label %39

36:                                               ; preds = %18
  %37 = load i32, i32* @stdout, align 4
  %38 = call i32 @fprintf(i32 %37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0))
  store i32 2, i32* %3, align 4
  br label %107

39:                                               ; preds = %18
  br label %40

40:                                               ; preds = %105, %39
  %41 = load i64, i64* %6, align 8
  %42 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %43 = load i32, i32* @FILE_NOTIFY_CHANGE_DIR_NAME, align 4
  %44 = load i32, i32* @FILE_NOTIFY_CHANGE_FILE_NAME, align 4
  %45 = or i32 %43, %44
  %46 = load i32, i32* @FILE_NOTIFY_CHANGE_LAST_ACCESS, align 4
  %47 = or i32 %45, %46
  %48 = load i32, i32* @FILE_NOTIFY_CHANGE_ATTRIBUTES, align 4
  %49 = or i32 %47, %48
  %50 = load i32, i32* @FILE_NOTIFY_CHANGE_SIZE, align 4
  %51 = or i32 %49, %50
  %52 = load i32, i32* @FILE_NOTIFY_CHANGE_LAST_WRITE, align 4
  %53 = or i32 %51, %52
  %54 = load i32, i32* @FILE_NOTIFY_CHANGE_CREATION, align 4
  %55 = or i32 %53, %54
  %56 = load i32, i32* @FILE_NOTIFY_CHANGE_SECURITY, align 4
  %57 = or i32 %55, %56
  %58 = call i32 @ReadDirectoryChangesW(i64 %41, i8* %42, i32 1022, i32 1, i32 %57, i32* %9, i32* null, i32* null)
  %59 = icmp ne i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %40
  %61 = load i32, i32* @stderr, align 4
  %62 = call i32 @fprintf(i32 %61, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0))
  br label %106

63:                                               ; preds = %40
  %64 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 0
  %65 = bitcast i8* %64 to %struct.TYPE_2__*
  store %struct.TYPE_2__* %65, %struct.TYPE_2__** %8, align 8
  br label %66

66:                                               ; preds = %96, %63
  %67 = load %struct.TYPE_2__*, %struct.TYPE_2__** %8, align 8
  %68 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %67, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = load %struct.TYPE_2__*, %struct.TYPE_2__** %8, align 8
  %71 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %70, i32 0, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = sdiv i32 %72, 2
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, i8* %69, i64 %74
  store i8 0, i8* %75, align 1
  %76 = load %struct.TYPE_2__*, %struct.TYPE_2__** %8, align 8
  %77 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %76, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  switch i32 %78, label %84 [
    i32 132, label %79
    i32 130, label %80
    i32 131, label %81
    i32 128, label %82
    i32 129, label %83
  ]

79:                                               ; preds = %66
  store i8* bitcast ([6 x i32]* @.str.3 to i8*), i8** %10, align 8
  br label %85

80:                                               ; preds = %66
  store i8* bitcast ([8 x i32]* @.str.4 to i8*), i8** %10, align 8
  br label %85

81:                                               ; preds = %66
  store i8* bitcast ([18 x i32]* @.str.5 to i8*), i8** %10, align 8
  br label %85

82:                                               ; preds = %66
  store i8* bitcast ([19 x i32]* @.str.6 to i8*), i8** %10, align 8
  br label %85

83:                                               ; preds = %66
  store i8* bitcast ([19 x i32]* @.str.7 to i8*), i8** %10, align 8
  br label %85

84:                                               ; preds = %66
  store i8* bitcast ([10 x i32]* @.str.8 to i8*), i8** %10, align 8
  br label %85

85:                                               ; preds = %84, %83, %82, %81, %80, %79
  %86 = load i8*, i8** %10, align 8
  %87 = load %struct.TYPE_2__*, %struct.TYPE_2__** %8, align 8
  %88 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %87, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = call i32 @wprintf(i8* bitcast ([13 x i32]* @.str.9 to i8*), i8* %86, i8* %89)
  %91 = load %struct.TYPE_2__*, %struct.TYPE_2__** %8, align 8
  %92 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %91, i32 0, i32 3
  %93 = load i32, i32* %92, align 8
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %96, label %95

95:                                               ; preds = %85
  br label %105

96:                                               ; preds = %85
  %97 = load %struct.TYPE_2__*, %struct.TYPE_2__** %8, align 8
  %98 = bitcast %struct.TYPE_2__* %97 to i8*
  %99 = load %struct.TYPE_2__*, %struct.TYPE_2__** %8, align 8
  %100 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %99, i32 0, i32 3
  %101 = load i32, i32* %100, align 8
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds i8, i8* %98, i64 %102
  %104 = bitcast i8* %103 to %struct.TYPE_2__*
  store %struct.TYPE_2__* %104, %struct.TYPE_2__** %8, align 8
  br label %66

105:                                              ; preds = %95
  br label %40

106:                                              ; preds = %60
  store i32 0, i32* %3, align 4
  br label %107

107:                                              ; preds = %106, %36, %13
  %108 = load i32, i32* %3, align 4
  ret i32 %108
}

declare dso_local i32 @printf(i8*, i8*) #1

declare dso_local i32 @CreateDirectory(i8*, i32) #1

declare dso_local i64 @CreateFile(i8*, i32, i32, i32*, i32, i32, i32*) #1

declare dso_local i32 @fprintf(i32, i8*) #1

declare dso_local i32 @ReadDirectoryChangesW(i64, i8*, i32, i32, i32, i32*, i32*, i32*) #1

declare dso_local i32 @wprintf(i8*, i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
