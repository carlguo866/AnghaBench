; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_4345.c_xpltOpenNvc0a.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_4345.c_xpltOpenNvc0a.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [28 x i8] c"(*)Opening NvcOa device...\0A\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"\\\\.\\NvcOa\00", align 1
@GENERIC_READ = common dso_local global i64 0, align 8
@GENERIC_WRITE = common dso_local global i64 0, align 8
@INVALID_HANDLE_VALUE = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [31 x i8] c"(+)Successfully opened NvcOa.\0A\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"(-)Unable to open NvcOa. Sorry.\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @xpltOpenNvc0a() #0 {
  %1 = alloca i64, align 8
  %2 = call i32 @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i64 0, i64 0))
  %3 = load i64, i64* @GENERIC_READ, align 8
  %4 = load i64, i64* @GENERIC_WRITE, align 8
  %5 = add nsw i64 %3, %4
  %6 = call i64 @OpenDevice(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0), i64 %5, i32 0)
  store i64 %6, i64* %1, align 8
  %7 = load i64, i64* @INVALID_HANDLE_VALUE, align 8
  %8 = load i64, i64* %1, align 8
  %9 = icmp ne i64 %7, %8
  br i1 %9, label %10, label %12

10:                                               ; preds = %0
  %11 = call i32 @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0))
  br label %14

12:                                               ; preds = %0
  %13 = call i32 @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0))
  br label %14

14:                                               ; preds = %12, %10
  %15 = load i64, i64* %1, align 8
  ret i64 %15
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i64 @OpenDevice(i8*, i64, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
