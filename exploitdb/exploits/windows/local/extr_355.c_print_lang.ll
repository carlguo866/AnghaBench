; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_355.c_print_lang.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_355.c_print_lang.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [8 x i8] c"Neutral\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Arabic\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"Bulgarian\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"Catalan\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"Chinese\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"Czech\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"Danish\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"German\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"Greek\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"English\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"Spanish\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"Finnish\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"French\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"Hebrew\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"Hungarian\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"Icelandic\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"italian\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c"Japanese\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"Korean\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"Dutch\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"Norwegian\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"Polish\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"Portuguese\00", align 1
@.str.23 = private unnamed_addr constant [9 x i8] c"Romanian\00", align 1
@.str.24 = private unnamed_addr constant [8 x i8] c"Russian\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"Croatian\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"Serbian\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"Slovak\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"Albanian\00", align 1
@.str.29 = private unnamed_addr constant [8 x i8] c"Swedish\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"Thai\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"Turkish\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"Urdu\00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"Indonesian\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"Ukrainian\00", align 1
@.str.35 = private unnamed_addr constant [11 x i8] c"Belarusian\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"Slovenian\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"Estonian\00", align 1
@.str.38 = private unnamed_addr constant [8 x i8] c"Latvian\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"Lithuanian\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"Farsi\00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"Vietnamese\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"Armenian\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"Azeri\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"Basque\00", align 1
@.str.45 = private unnamed_addr constant [16 x i8] c"FYRO Macedonian\00", align 1
@.str.46 = private unnamed_addr constant [10 x i8] c"Afrikaans\00", align 1
@.str.47 = private unnamed_addr constant [9 x i8] c"Georgian\00", align 1
@.str.48 = private unnamed_addr constant [9 x i8] c"Faeroese\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"Hindi\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"Malay\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"Kazak\00", align 1
@.str.52 = private unnamed_addr constant [7 x i8] c"Kyrgyz\00", align 1
@.str.53 = private unnamed_addr constant [8 x i8] c"Swahili\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c"Uzbek\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c"Tatar\00", align 1
@.str.56 = private unnamed_addr constant [14 x i8] c"Not supported\00", align 1
@.str.57 = private unnamed_addr constant [8 x i8] c"Punjabi\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"Gujarati\00", align 1
@.str.59 = private unnamed_addr constant [6 x i8] c"Tamil\00", align 1
@.str.60 = private unnamed_addr constant [7 x i8] c"Telugu\00", align 1
@.str.61 = private unnamed_addr constant [8 x i8] c"Kannada\00", align 1
@.str.62 = private unnamed_addr constant [8 x i8] c"Marathi\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"Sanskrit\00", align 1
@.str.64 = private unnamed_addr constant [10 x i8] c"Mongolian\00", align 1
@.str.65 = private unnamed_addr constant [21 x i8] c"Galician the best ;)\00", align 1
@.str.66 = private unnamed_addr constant [8 x i8] c"Konkani\00", align 1
@.str.67 = private unnamed_addr constant [7 x i8] c"Syriac\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"Divehi\00", align 1
@.str.69 = private unnamed_addr constant [10 x i8] c"Invariant\00", align 1
@__const.print_lang.lang_list = private unnamed_addr constant [77 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i32 0, i32 0)], align 16
@.str.70 = private unnamed_addr constant [5 x i8] c"%s\0D\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @print_lang(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca [77 x i8*], align 16
  store i32 %0, i32* %2, align 4
  %4 = bitcast [77 x i8*]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %4, i8* align 16 bitcast ([77 x i8*]* @__const.print_lang.lang_list to i8*), i64 616, i1 false)
  %5 = load i32, i32* %2, align 4
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds [77 x i8*], [77 x i8*]* %3, i64 0, i64 %6
  %8 = load i8*, i8** %7, align 8
  %9 = call i32 @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i64 0, i64 0), i8* %8)
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @printf(i8*, i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
