; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_4345.c_GetWindowsVersionBase.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_4345.c_GetWindowsVersionBase.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_5__ = type { i32, i32 }

@FALSE = common dso_local global i64 0, align 8
@OS_VERSION_UNKNOWN = common dso_local global i32 0, align 4
@OS_VERSION_WIN32S = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @GetWindowsVersionBase(i64* %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i64*, align 8
  %4 = alloca %struct.TYPE_5__, align 4
  %5 = alloca i32, align 4
  store i64* %0, i64** %3, align 8
  %6 = load i64*, i64** %3, align 8
  %7 = icmp ne i64* %6, null
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = load i64*, i64** %3, align 8
  store i64 0, i64* %9, align 8
  br label %10

10:                                               ; preds = %8, %1
  %11 = call i32 @memset(%struct.TYPE_5__* %4, i32 0, i32 8)
  %12 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %4, i32 0, i32 0
  store i32 8, i32* %12, align 4
  %13 = load i64, i64* @FALSE, align 8
  %14 = ptrtoint %struct.TYPE_5__* %4 to i32
  %15 = call i64 @GetVersionExA(i32 %14)
  %16 = icmp eq i64 %13, %15
  br i1 %16, label %17, label %25

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %4, i32 0, i32 0
  store i32 4, i32* %18, align 4
  %19 = ptrtoint %struct.TYPE_5__* %4 to i32
  %20 = call i64 @GetVersionExA(i32 %19)
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = load i32, i32* @OS_VERSION_UNKNOWN, align 4
  store i32 %23, i32* %2, align 4
  br label %39

24:                                               ; preds = %17
  br label %25

25:                                               ; preds = %24, %10
  %26 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %4, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  switch i32 %27, label %35 [
    i32 130, label %28
    i32 129, label %31
    i32 128, label %33
  ]

28:                                               ; preds = %25
  %29 = load i64*, i64** %3, align 8
  %30 = call i32 @GetWindowsNtVersion(%struct.TYPE_5__* %4, i64* %29)
  store i32 %30, i32* %5, align 4
  br label %37

31:                                               ; preds = %25
  %32 = call i32 @GetWindows9xVersion(%struct.TYPE_5__* %4)
  store i32 %32, i32* %5, align 4
  br label %37

33:                                               ; preds = %25
  %34 = load i32, i32* @OS_VERSION_WIN32S, align 4
  store i32 %34, i32* %5, align 4
  br label %37

35:                                               ; preds = %25
  %36 = load i32, i32* @OS_VERSION_UNKNOWN, align 4
  store i32 %36, i32* %5, align 4
  br label %37

37:                                               ; preds = %35, %33, %31, %28
  %38 = load i32, i32* %5, align 4
  store i32 %38, i32* %2, align 4
  br label %39

39:                                               ; preds = %37, %22
  %40 = load i32, i32* %2, align 4
  ret i32 %40
}

declare dso_local i32 @memset(%struct.TYPE_5__*, i32, i32) #1

declare dso_local i64 @GetVersionExA(i32) #1

declare dso_local i32 @GetWindowsNtVersion(%struct.TYPE_5__*, i64*) #1

declare dso_local i32 @GetWindows9xVersion(%struct.TYPE_5__*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
