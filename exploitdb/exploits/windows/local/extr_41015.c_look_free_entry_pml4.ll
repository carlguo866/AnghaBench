; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_41015.c_look_free_entry_pml4.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_41015.c_look_free_entry_pml4.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@PML4_BASE = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @look_free_entry_pml4() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i64, align 8
  store i32 3840, i32* %1, align 4
  %3 = load i64, i64* @PML4_BASE, align 8
  %4 = load i32, i32* %1, align 4
  %5 = sext i32 %4 to i64
  %6 = add nsw i64 %3, %5
  store i64 %6, i64* %2, align 8
  br label %7

7:                                                ; preds = %16, %0
  %8 = load i32, i32* %1, align 4
  %9 = icmp slt i32 %8, 4088
  br i1 %9, label %10, label %23

10:                                               ; preds = %7
  %11 = load i64, i64* %2, align 8
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  br label %23

16:                                               ; preds = %10
  %17 = load i32, i32* %1, align 4
  %18 = add nsw i32 %17, 8
  store i32 %18, i32* %1, align 4
  %19 = load i64, i64* @PML4_BASE, align 8
  %20 = load i32, i32* %1, align 4
  %21 = sext i32 %20 to i64
  %22 = add nsw i64 %19, %21
  store i64 %22, i64* %2, align 8
  br label %7

23:                                               ; preds = %15, %7
  %24 = load i64, i64* %2, align 8
  ret i64 %24
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
