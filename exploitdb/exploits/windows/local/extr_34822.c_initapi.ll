; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_34822.c_initapi.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_34822.c_initapi.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [10 x i8] c"ntdll.dll\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"LoadLibrary failed:%d\0A\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"NtReplyWaitReceivePort\00", align 1
@NtReplyWaitReceivePort = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [13 x i8] c"NtCreatePort\00", align 1
@NtCreatePort = common dso_local global i64 0, align 8
@.str.4 = private unnamed_addr constant [12 x i8] c"NtReplyPort\00", align 1
@NtReplyPort = common dso_local global i64 0, align 8
@.str.5 = private unnamed_addr constant [24 x i8] c"NtSetInformationProcess\00", align 1
@NtSetInformationProcess = common dso_local global i64 0, align 8
@.str.6 = private unnamed_addr constant [23 x i8] c"NtRequestWaitReplyPort\00", align 1
@NtRequestWaitReplyPort = common dso_local global i64 0, align 8
@.str.7 = private unnamed_addr constant [14 x i8] c"NtConnectPort\00", align 1
@NtConnectPort = common dso_local global i64 0, align 8
@.str.8 = private unnamed_addr constant [22 x i8] c"NtCompleteConnectPort\00", align 1
@NtCompleteConnectPort = common dso_local global i64 0, align 8
@.str.9 = private unnamed_addr constant [20 x i8] c"NtAcceptConnectPort\00", align 1
@NtAcceptConnectPort = common dso_local global i64 0, align 8
@.str.10 = private unnamed_addr constant [21 x i8] c"RtlInitUnicodeString\00", align 1
@RtlInitUnicodeString = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @initapi() #0 {
  %1 = alloca i32*, align 8
  %2 = call i32* @LoadLibrary(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0))
  store i32* %2, i32** %1, align 8
  %3 = load i32*, i32** %1, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %0
  %6 = call i32 (...) @GetLastError()
  %7 = call i32 @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i32 %6)
  br label %8

8:                                                ; preds = %5, %0
  %9 = load i32*, i32** %1, align 8
  %10 = call i64 @GetProcAddress(i32* %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0))
  store i64 %10, i64* @NtReplyWaitReceivePort, align 8
  %11 = load i32*, i32** %1, align 8
  %12 = call i64 @GetProcAddress(i32* %11, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0))
  store i64 %12, i64* @NtCreatePort, align 8
  %13 = load i32*, i32** %1, align 8
  %14 = call i64 @GetProcAddress(i32* %13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0))
  store i64 %14, i64* @NtReplyPort, align 8
  %15 = load i32*, i32** %1, align 8
  %16 = call i64 @GetProcAddress(i32* %15, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0))
  store i64 %16, i64* @NtSetInformationProcess, align 8
  %17 = load i32*, i32** %1, align 8
  %18 = call i64 @GetProcAddress(i32* %17, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0))
  store i64 %18, i64* @NtRequestWaitReplyPort, align 8
  %19 = load i32*, i32** %1, align 8
  %20 = call i64 @GetProcAddress(i32* %19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0))
  store i64 %20, i64* @NtConnectPort, align 8
  %21 = load i32*, i32** %1, align 8
  %22 = call i64 @GetProcAddress(i32* %21, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i64 0, i64 0))
  store i64 %22, i64* @NtCompleteConnectPort, align 8
  %23 = load i32*, i32** %1, align 8
  %24 = call i64 @GetProcAddress(i32* %23, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0))
  store i64 %24, i64* @NtAcceptConnectPort, align 8
  %25 = load i32*, i32** %1, align 8
  %26 = call i64 @GetProcAddress(i32* %25, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0))
  store i64 %26, i64* @RtlInitUnicodeString, align 8
  ret void
}

declare dso_local i32* @LoadLibrary(i8*) #1

declare dso_local i32 @printf(i8*, i32) #1

declare dso_local i32 @GetLastError(...) #1

declare dso_local i64 @GetProcAddress(i32*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
