; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_3071.c_w.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_3071.c_w.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_3__ = type { i32 }

@aaa = common dso_local global i8* null, align 8
@bbb = common dso_local global i8* null, align 8
@e1 = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [9 x i8] c"erasmus1\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"notepad\00", align 1
@cps = common dso_local global i32 0, align 4
@cpi = common dso_local global %struct.TYPE_3__ zeroinitializer, align 4
@WM_CLOSE = common dso_local global i32 0, align 4
@e2 = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [9 x i8] c"erasmus2\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @w(i8* %0, i8* %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load i8*, i8** %4, align 8
  store i8* %6, i8** @aaa, align 8
  %7 = load i8*, i8** %3, align 8
  store i8* %7, i8** @bbb, align 8
  %8 = load i32, i32* @e1, align 4
  %9 = call i32 @SetEvent(i32 %8)
  br label %10

10:                                               ; preds = %12, %2
  %11 = call i64 @FindWindow(i32* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0))
  store i64 %11, i64* %5, align 8
  br label %12

12:                                               ; preds = %10
  %13 = load i64, i64* %5, align 8
  %14 = icmp ne i64 %13, 0
  %15 = xor i1 %14, true
  br i1 %15, label %10, label %16

16:                                               ; preds = %12
  %17 = call i32 @CreateProcess(i32* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i32* null, i32* null, i32 0, i32 0, i32* null, i32* null, i32* @cps, %struct.TYPE_3__* @cpi)
  %18 = call i32 @Sleep(i32 100)
  %19 = load i64, i64* %5, align 8
  %20 = load i32, i32* @WM_CLOSE, align 4
  %21 = call i32 @SendMessage(i64 %19, i32 %20, i32 0, i32 0)
  %22 = call i32 @Sleep(i32 100)
  %23 = load i32, i32* @e2, align 4
  %24 = call i32 @SetEvent(i32 %23)
  br label %25

25:                                               ; preds = %27, %16
  %26 = call i64 @FindWindow(i32* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0))
  store i64 %26, i64* %5, align 8
  br label %27

27:                                               ; preds = %25
  %28 = load i64, i64* %5, align 8
  %29 = icmp ne i64 %28, 0
  %30 = xor i1 %29, true
  br i1 %30, label %25, label %31

31:                                               ; preds = %27
  %32 = load i32, i32* getelementptr inbounds (%struct.TYPE_3__, %struct.TYPE_3__* @cpi, i32 0, i32 0), align 4
  %33 = call i32 @TerminateThread(i32 %32, i32 0)
  %34 = call i32 @Sleep(i32 100)
  %35 = call i32 @CreateProcess(i32* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i32* null, i32* null, i32 0, i32 0, i32* null, i32* null, i32* @cps, %struct.TYPE_3__* @cpi)
  %36 = call i32 @Sleep(i32 100)
  %37 = load i64, i64* %5, align 8
  %38 = load i32, i32* @WM_CLOSE, align 4
  %39 = call i32 @SendMessage(i64 %37, i32 %38, i32 0, i32 0)
  %40 = call i32 @Sleep(i32 100)
  ret void
}

declare dso_local i32 @SetEvent(i32) #1

declare dso_local i64 @FindWindow(i32*, i8*) #1

declare dso_local i32 @CreateProcess(i32*, i8*, i32*, i32*, i32, i32, i32*, i32*, i32*, %struct.TYPE_3__*) #1

declare dso_local i32 @Sleep(i32) #1

declare dso_local i32 @SendMessage(i64, i32, i32, i32) #1

declare dso_local i32 @TerminateThread(i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
