; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_15461.c_fixup_ring0_shell.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_15461.c_fixup_ring0_shell.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [39 x i8] c"dwMajorVersion = %d dwMinorVersion %d\0A\00", align 1
@winxp_ring0_shell = common dso_local global i32* null, align 8
@win2k3_ring0_shell = common dso_local global i32* null, align 8
@.str.1 = private unnamed_addr constant [33 x i8] c"GetVersion, unsupported version\0A\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@winvista_ring0_shell = common dso_local global i32* null, align 8
@win7_ring0_shell = common dso_local global i32* null, align 8
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32* (i32, i32*)* @fixup_ring0_shell to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32* @fixup_ring0_shell(i32 %0, i32* %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32* %1, i32** %5, align 8
  %9 = call i32 (...) @GetVersion()
  store i32 %9, i32* %6, align 4
  %10 = load i32, i32* %6, align 4
  %11 = call i32 @LOWORD(i32 %10)
  %12 = call i64 @LOBYTE(i32 %11)
  %13 = trunc i64 %12 to i32
  store i32 %13, i32* %7, align 4
  %14 = load i32, i32* %6, align 4
  %15 = call i32 @LOWORD(i32 %14)
  %16 = call i64 @HIBYTE(i32 %15)
  %17 = trunc i64 %16 to i32
  store i32 %17, i32* %8, align 4
  %18 = load i32, i32* %7, align 4
  %19 = load i32, i32* %8, align 4
  %20 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 %18, i32 %19)
  %21 = load i32, i32* %7, align 4
  switch i32 %21, label %58 [
    i32 5, label %22
    i32 6, label %40
  ]

22:                                               ; preds = %2
  %23 = load i32, i32* %8, align 4
  switch i32 %23, label %36 [
    i32 1, label %24
    i32 2, label %30
  ]

24:                                               ; preds = %22
  %25 = load i32*, i32** %5, align 8
  store i32 7, i32* %25, align 4
  %26 = load i32, i32* %4, align 4
  %27 = load i32*, i32** @winxp_ring0_shell, align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 55
  store i32 %26, i32* %28, align 4
  %29 = load i32*, i32** @winxp_ring0_shell, align 8
  store i32* %29, i32** %3, align 8
  br label %62

30:                                               ; preds = %22
  %31 = load i32*, i32** %5, align 8
  store i32 7, i32* %31, align 4
  %32 = load i32, i32* %4, align 4
  %33 = load i32*, i32** @win2k3_ring0_shell, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 58
  store i32 %32, i32* %34, align 4
  %35 = load i32*, i32** @win2k3_ring0_shell, align 8
  store i32* %35, i32** %3, align 8
  br label %62

36:                                               ; preds = %22
  %37 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0))
  %38 = load i32, i32* @EXIT_FAILURE, align 4
  %39 = call i32 @exit(i32 %38) #3
  unreachable

40:                                               ; preds = %2
  %41 = load i32, i32* %8, align 4
  switch i32 %41, label %54 [
    i32 0, label %42
    i32 1, label %48
  ]

42:                                               ; preds = %40
  %43 = load i32*, i32** %5, align 8
  store i32 7, i32* %43, align 4
  %44 = load i32, i32* %4, align 4
  %45 = load i32*, i32** @winvista_ring0_shell, align 8
  %46 = getelementptr inbounds i32, i32* %45, i64 54
  store i32 %44, i32* %46, align 4
  %47 = load i32*, i32** @winvista_ring0_shell, align 8
  store i32* %47, i32** %3, align 8
  br label %62

48:                                               ; preds = %40
  %49 = load i32*, i32** %5, align 8
  store i32 7, i32* %49, align 4
  %50 = load i32, i32* %4, align 4
  %51 = load i32*, i32** @win7_ring0_shell, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 54
  store i32 %50, i32* %52, align 4
  %53 = load i32*, i32** @win7_ring0_shell, align 8
  store i32* %53, i32** %3, align 8
  br label %62

54:                                               ; preds = %40
  %55 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0))
  %56 = load i32, i32* @EXIT_FAILURE, align 4
  %57 = call i32 @exit(i32 %56) #3
  unreachable

58:                                               ; preds = %2
  %59 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0))
  %60 = load i32, i32* @EXIT_FAILURE, align 4
  %61 = call i32 @exit(i32 %60) #3
  unreachable

62:                                               ; preds = %48, %42, %30, %24
  %63 = load i32*, i32** %3, align 8
  ret i32* %63
}

declare dso_local i32 @GetVersion(...) #1

declare dso_local i64 @LOBYTE(i32) #1

declare dso_local i32 @LOWORD(i32) #1

declare dso_local i64 @HIBYTE(i32) #1

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
