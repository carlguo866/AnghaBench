; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_35964.c_spawnShell.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_35964.c_spawnShell.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_6__ = type { i32, i32, i32, i32, i32 }

@STARTF_USESHOWWINDOW = common dso_local global i32 0, align 4
@SW_SHOWNORMAL = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [8 x i8] c"cmd.exe\00", align 1
@TRUE = common dso_local global i32 0, align 4
@CREATE_NEW_CONSOLE = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [33 x i8] c"\0A[-] CreateProcess failed (%d)\0A\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @spawnShell() #0 {
  %1 = alloca %struct.TYPE_6__, align 4
  %2 = alloca %struct.TYPE_6__, align 4
  %3 = call i32 @ZeroMemory(%struct.TYPE_6__* %2, i32 20)
  %4 = call i32 @ZeroMemory(%struct.TYPE_6__* %1, i32 20)
  %5 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %1, i32 0, i32 0
  store i32 20, i32* %5, align 4
  %6 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %1, i32 0, i32 0
  store i32 20, i32* %6, align 4
  %7 = load i32, i32* @STARTF_USESHOWWINDOW, align 4
  %8 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %1, i32 0, i32 4
  store i32 %7, i32* %8, align 4
  %9 = load i32, i32* @SW_SHOWNORMAL, align 4
  %10 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %1, i32 0, i32 3
  store i32 %9, i32* %10, align 4
  %11 = load i32, i32* @TRUE, align 4
  %12 = load i32, i32* @CREATE_NEW_CONSOLE, align 4
  %13 = call i32 @CreateProcess(i32* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32* null, i32* null, i32 %11, i32 %12, i32* null, i32* null, %struct.TYPE_6__* %1, %struct.TYPE_6__* %2)
  %14 = icmp ne i32 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %0
  %16 = call i32 (...) @GetLastError()
  %17 = call i32 @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i32 %16)
  br label %25

18:                                               ; preds = %0
  %19 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %2, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = call i32 @CloseHandle(i32 %20)
  %22 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %2, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = call i32 @CloseHandle(i32 %23)
  br label %25

25:                                               ; preds = %18, %15
  ret void
}

declare dso_local i32 @ZeroMemory(%struct.TYPE_6__*, i32) #1

declare dso_local i32 @CreateProcess(i32*, i8*, i32*, i32*, i32, i32, i32*, i32*, %struct.TYPE_6__*, %struct.TYPE_6__*) #1

declare dso_local i32 @printf(i8*, i32) #1

declare dso_local i32 @GetLastError(...) #1

declare dso_local i32 @CloseHandle(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
