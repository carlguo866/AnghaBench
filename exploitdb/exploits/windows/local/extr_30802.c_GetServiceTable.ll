; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_30802.c_GetServiceTable.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_30802.c_GetServiceTable.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_6__ = type { %struct.TYPE_5__ }
%struct.TYPE_5__ = type { i64 }
%struct.TYPE_8__ = type { i64, i32 }
%struct.TYPE_7__ = type { i64, i64 }

@FALSE = common dso_local global i32 0, align 4
@IMAGE_DIRECTORY_ENTRY_BASERELOC = common dso_local global i32 0, align 4
@IMAGE_REL_BASED_HIGHLOW = common dso_local global i64 0, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i64 @GetServiceTable(i64 %0, i64 %1) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca %struct.TYPE_6__*, align 8
  %7 = alloca %struct.TYPE_8__*, align 8
  %8 = alloca %struct.TYPE_7__*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store i64 %0, i64* %4, align 8
  store i64 %1, i64* %5, align 8
  store i64 0, i64* %9, align 8
  %14 = load i64, i64* %5, align 8
  %15 = load i64, i64* %4, align 8
  %16 = sub nsw i64 %14, %15
  store i64 %16, i64* %10, align 8
  %17 = load i64, i64* %4, align 8
  %18 = call i64 @RtlImageNtHeader(i64 %17)
  %19 = inttoptr i64 %18 to %struct.TYPE_6__*
  store %struct.TYPE_6__* %19, %struct.TYPE_6__** %6, align 8
  %20 = load i64, i64* %4, align 8
  %21 = load i32, i32* @FALSE, align 4
  %22 = load i32, i32* @IMAGE_DIRECTORY_ENTRY_BASERELOC, align 4
  %23 = call i64 @RtlImageDirectoryEntryToData(i64 %20, i32 %21, i32 %22, i64* %9)
  %24 = inttoptr i64 %23 to %struct.TYPE_8__*
  store %struct.TYPE_8__* %24, %struct.TYPE_8__** %7, align 8
  %25 = load %struct.TYPE_8__*, %struct.TYPE_8__** %7, align 8
  %26 = icmp eq %struct.TYPE_8__* %25, null
  br i1 %26, label %27, label %28

27:                                               ; preds = %2
  store i64 0, i64* %3, align 8
  br label %113

28:                                               ; preds = %2
  br label %29

29:                                               ; preds = %107, %28
  %30 = load %struct.TYPE_8__*, %struct.TYPE_8__** %7, align 8
  %31 = ptrtoint %struct.TYPE_8__* %30 to i64
  %32 = add i64 %31, 4
  %33 = inttoptr i64 %32 to %struct.TYPE_7__*
  store %struct.TYPE_7__* %33, %struct.TYPE_7__** %8, align 8
  %34 = load %struct.TYPE_8__*, %struct.TYPE_8__** %7, align 8
  %35 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = sub i64 %37, 4
  %39 = lshr i64 %38, 1
  store i64 %39, i64* %9, align 8
  store i64 0, i64* %11, align 8
  br label %40

40:                                               ; preds = %94, %29
  %41 = load i64, i64* %11, align 8
  %42 = load i64, i64* %9, align 8
  %43 = icmp slt i64 %41, %42
  br i1 %43, label %44, label %99

44:                                               ; preds = %40
  %45 = load %struct.TYPE_7__*, %struct.TYPE_7__** %8, align 8
  %46 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %45, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = load i64, i64* @IMAGE_REL_BASED_HIGHLOW, align 8
  %49 = icmp eq i64 %47, %48
  br i1 %49, label %50, label %93

50:                                               ; preds = %44
  %51 = load %struct.TYPE_8__*, %struct.TYPE_8__** %7, align 8
  %52 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %51, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = load %struct.TYPE_7__*, %struct.TYPE_7__** %8, align 8
  %55 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %54, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = add nsw i64 %53, %56
  store i64 %57, i64* %12, align 8
  %58 = load i64, i64* %4, align 8
  %59 = load i64, i64* %12, align 8
  %60 = add nsw i64 %58, %59
  %61 = inttoptr i64 %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = load %struct.TYPE_6__*, %struct.TYPE_6__** %6, align 8
  %64 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %63, i32 0, i32 0
  %65 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %64, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = sub nsw i64 %62, %66
  store i64 %67, i64* %13, align 8
  %68 = load i64, i64* %13, align 8
  %69 = load i64, i64* %10, align 8
  %70 = icmp eq i64 %68, %69
  br i1 %70, label %71, label %92

71:                                               ; preds = %50
  %72 = load i64, i64* %4, align 8
  %73 = load i64, i64* %12, align 8
  %74 = add nsw i64 %72, %73
  %75 = sub nsw i64 %74, 2
  %76 = inttoptr i64 %75 to i32*
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 1479
  br i1 %78, label %79, label %91

79:                                               ; preds = %71
  %80 = load i64, i64* %4, align 8
  %81 = load i64, i64* %12, align 8
  %82 = add nsw i64 %80, %81
  %83 = add nsw i64 %82, 4
  %84 = inttoptr i64 %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = load %struct.TYPE_6__*, %struct.TYPE_6__** %6, align 8
  %87 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %86, i32 0, i32 0
  %88 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %87, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = sub nsw i64 %85, %89
  store i64 %90, i64* %3, align 8
  br label %113

91:                                               ; preds = %71
  br label %92

92:                                               ; preds = %91, %50
  br label %93

93:                                               ; preds = %92, %44
  br label %94

94:                                               ; preds = %93
  %95 = load i64, i64* %11, align 8
  %96 = add nsw i64 %95, 1
  store i64 %96, i64* %11, align 8
  %97 = load %struct.TYPE_7__*, %struct.TYPE_7__** %8, align 8
  %98 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %97, i32 1
  store %struct.TYPE_7__* %98, %struct.TYPE_7__** %8, align 8
  br label %40

99:                                               ; preds = %40
  %100 = load %struct.TYPE_8__*, %struct.TYPE_8__** %7, align 8
  %101 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %100, i32 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = sext i32 %102 to i64
  %104 = bitcast %struct.TYPE_8__** %7 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = add nsw i64 %105, %103
  store i64 %106, i64* %104, align 8
  br label %107

107:                                              ; preds = %99
  %108 = load %struct.TYPE_8__*, %struct.TYPE_8__** %7, align 8
  %109 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %108, i32 0, i32 0
  %110 = load i64, i64* %109, align 8
  %111 = icmp ne i64 %110, 0
  br i1 %111, label %29, label %112

112:                                              ; preds = %107
  store i64 0, i64* %3, align 8
  br label %113

113:                                              ; preds = %112, %79, %27
  %114 = load i64, i64* %3, align 8
  ret i64 %114
}

declare dso_local i64 @RtlImageNtHeader(i64) #1

declare dso_local i64 @RtlImageDirectoryEntryToData(i64, i32, i32, i64*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
