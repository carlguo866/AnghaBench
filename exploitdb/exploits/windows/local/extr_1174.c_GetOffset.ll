; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_1174.c_GetOffset.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_1174.c_GetOffset.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@SEEK_SET = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @GetOffset(i8* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8, align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32, align 4
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store i32 0, i32* %7, align 4
  store i32 -1, i32* %8, align 4
  %11 = load i8*, i8** %4, align 8
  %12 = call i32* @fopen(i8* %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0))
  store i32* %12, i32** %9, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %2
  %15 = load i32*, i32** %9, align 8
  %16 = call i32 @fclose(i32* %15)
  store i32 -1, i32* %3, align 4
  br label %76

17:                                               ; preds = %2
  br label %18

18:                                               ; preds = %72, %17
  %19 = load i32*, i32** %9, align 8
  %20 = call i32 @feof(i32* %19)
  %21 = icmp ne i32 %20, 0
  %22 = xor i1 %21, true
  br i1 %22, label %23, label %73

23:                                               ; preds = %18
  %24 = load i32, i32* %7, align 4
  %25 = add nsw i32 %24, 1
  store i32 %25, i32* %7, align 4
  store i32 0, i32* %10, align 4
  br label %26

26:                                               ; preds = %69, %23
  %27 = load i32, i32* %10, align 4
  %28 = load i8*, i8** %5, align 8
  %29 = call i32 @strlen(i8* %28)
  %30 = icmp slt i32 %27, %29
  br i1 %30, label %31, label %72

31:                                               ; preds = %26
  %32 = load i32*, i32** %9, align 8
  %33 = call signext i8 @getc(i32* %32)
  store i8 %33, i8* %6, align 1
  %34 = load i8, i8* %6, align 1
  %35 = sext i8 %34 to i32
  %36 = load i8*, i8** %5, align 8
  %37 = load i32, i32* %10, align 4
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %36, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = sext i8 %40 to i32
  %42 = icmp ne i32 %35, %41
  br i1 %42, label %43, label %53

43:                                               ; preds = %31
  %44 = load i32, i32* %10, align 4
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %43
  %47 = load i32*, i32** %9, align 8
  %48 = load i32, i32* %7, align 4
  %49 = add nsw i32 %48, 1
  %50 = load i32, i32* @SEEK_SET, align 4
  %51 = call i32 @fseek(i32* %47, i32 %49, i32 %50)
  br label %52

52:                                               ; preds = %46, %43
  br label %72

53:                                               ; preds = %31
  %54 = load i32, i32* %10, align 4
  %55 = load i8*, i8** %5, align 8
  %56 = call i32 @strlen(i8* %55)
  %57 = sub nsw i32 %56, 2
  %58 = icmp sgt i32 %54, %57
  br i1 %58, label %59, label %68

59:                                               ; preds = %53
  %60 = load i32*, i32** %9, align 8
  %61 = call i32 @ftell(i32* %60)
  %62 = load i8*, i8** %5, align 8
  %63 = call i32 @strlen(i8* %62)
  %64 = sub nsw i32 %61, %63
  store i32 %64, i32* %8, align 4
  %65 = load i32*, i32** %9, align 8
  %66 = call i32 @fclose(i32* %65)
  %67 = load i32, i32* %8, align 4
  store i32 %67, i32* %3, align 4
  br label %76

68:                                               ; preds = %53
  br label %69

69:                                               ; preds = %68
  %70 = load i32, i32* %10, align 4
  %71 = add nsw i32 %70, 1
  store i32 %71, i32* %10, align 4
  br label %26

72:                                               ; preds = %52, %26
  br label %18

73:                                               ; preds = %18
  %74 = load i32*, i32** %9, align 8
  %75 = call i32 @fclose(i32* %74)
  store i32 -1, i32* %3, align 4
  br label %76

76:                                               ; preds = %73, %59, %14
  %77 = load i32, i32* %3, align 4
  ret i32 %77
}

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @fclose(i32*) #1

declare dso_local i32 @feof(i32*) #1

declare dso_local i32 @strlen(i8*) #1

declare dso_local signext i8 @getc(i32*) #1

declare dso_local i32 @fseek(i32*, i32, i32) #1

declare dso_local i32 @ftell(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
