; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_21781.c_strBeginsWith.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_21781.c_strBeginsWith.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@FALSE = common dso_local global i32 0, align 4
@TRUE = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @strBeginsWith(i8* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16, align 2
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = call signext i16 @strlen(i8* %7)
  %9 = sext i16 %8 to i32
  %10 = load i8*, i8** %5, align 8
  %11 = call signext i16 @strlen(i8* %10)
  %12 = sext i16 %11 to i32
  %13 = icmp sgt i32 %9, %12
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i32, i32* @FALSE, align 4
  store i32 %15, i32* %3, align 4
  br label %46

16:                                               ; preds = %2
  store i16 0, i16* %6, align 2
  br label %17

17:                                               ; preds = %41, %16
  %18 = load i16, i16* %6, align 2
  %19 = sext i16 %18 to i32
  %20 = load i8*, i8** %4, align 8
  %21 = call signext i16 @strlen(i8* %20)
  %22 = sext i16 %21 to i32
  %23 = icmp slt i32 %19, %22
  br i1 %23, label %24, label %44

24:                                               ; preds = %17
  %25 = load i8*, i8** %4, align 8
  %26 = load i16, i16* %6, align 2
  %27 = sext i16 %26 to i64
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = sext i8 %29 to i32
  %31 = load i8*, i8** %5, align 8
  %32 = load i16, i16* %6, align 2
  %33 = sext i16 %32 to i64
  %34 = getelementptr inbounds i8, i8* %31, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = sext i8 %35 to i32
  %37 = icmp ne i32 %30, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %24
  %39 = load i32, i32* @FALSE, align 4
  store i32 %39, i32* %3, align 4
  br label %46

40:                                               ; preds = %24
  br label %41

41:                                               ; preds = %40
  %42 = load i16, i16* %6, align 2
  %43 = add i16 %42, 1
  store i16 %43, i16* %6, align 2
  br label %17

44:                                               ; preds = %17
  %45 = load i32, i32* @TRUE, align 4
  store i32 %45, i32* %3, align 4
  br label %46

46:                                               ; preds = %44, %38, %14
  %47 = load i32, i32* %3, align 4
  ret i32 %47
}

declare dso_local signext i16 @strlen(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
