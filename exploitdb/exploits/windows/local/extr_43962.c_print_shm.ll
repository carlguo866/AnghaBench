; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_43962.c_print_shm.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_43962.c_print_shm.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.shmid_ds = type { i32, i32, i32, i32, i32, i32, i32, %struct.TYPE_2__ }
%struct.TYPE_2__ = type { i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [19 x i8] c"\0AThe USER ID = %p\0A\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"The GROUP ID = %p\0A\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"The creator's ID = %p\0A\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"The creator's group ID = %p\0A\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"The operation permissions = 0%o\0A\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"The slot usage sequence\0A\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"The segment size = %p\0A\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"The pid of last shmop = %p\0A\00", align 1
@.str.8 = private unnamed_addr constant [25 x i8] c"The pid of creator = %p\0A\00", align 1
@.str.9 = private unnamed_addr constant [29 x i8] c"The current # attached = %p\0A\00", align 1
@.str.10 = private unnamed_addr constant [26 x i8] c"The last shmat time = %p\0A\00", align 1
@.str.11 = private unnamed_addr constant [26 x i8] c"The last shmdt time = %p\0A\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"The last change time = %p\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @print_shm(%struct.shmid_ds* %0) #0 {
  %2 = alloca %struct.shmid_ds*, align 8
  store %struct.shmid_ds* %0, %struct.shmid_ds** %2, align 8
  %3 = load %struct.shmid_ds*, %struct.shmid_ds** %2, align 8
  %4 = getelementptr inbounds %struct.shmid_ds, %struct.shmid_ds* %3, i32 0, i32 7
  %5 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %4, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i32 %6)
  %8 = load %struct.shmid_ds*, %struct.shmid_ds** %2, align 8
  %9 = getelementptr inbounds %struct.shmid_ds, %struct.shmid_ds* %8, i32 0, i32 7
  %10 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0), i32 %11)
  %13 = load %struct.shmid_ds*, %struct.shmid_ds** %2, align 8
  %14 = getelementptr inbounds %struct.shmid_ds, %struct.shmid_ds* %13, i32 0, i32 7
  %15 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %14, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 %16)
  %18 = load %struct.shmid_ds*, %struct.shmid_ds** %2, align 8
  %19 = getelementptr inbounds %struct.shmid_ds, %struct.shmid_ds* %18, i32 0, i32 7
  %20 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %19, i32 0, i32 3
  %21 = load i32, i32* %20, align 4
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 %21)
  %23 = load %struct.shmid_ds*, %struct.shmid_ds** %2, align 8
  %24 = getelementptr inbounds %struct.shmid_ds, %struct.shmid_ds* %23, i32 0, i32 7
  %25 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %24, i32 0, i32 4
  %26 = load i32, i32* %25, align 4
  %27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 %26)
  %28 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0))
  %29 = load %struct.shmid_ds*, %struct.shmid_ds** %2, align 8
  %30 = getelementptr inbounds %struct.shmid_ds, %struct.shmid_ds* %29, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i32 %31)
  %33 = load %struct.shmid_ds*, %struct.shmid_ds** %2, align 8
  %34 = getelementptr inbounds %struct.shmid_ds, %struct.shmid_ds* %33, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i32 %35)
  %37 = load %struct.shmid_ds*, %struct.shmid_ds** %2, align 8
  %38 = getelementptr inbounds %struct.shmid_ds, %struct.shmid_ds* %37, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.8, i64 0, i64 0), i32 %39)
  %41 = load %struct.shmid_ds*, %struct.shmid_ds** %2, align 8
  %42 = getelementptr inbounds %struct.shmid_ds, %struct.shmid_ds* %41, i32 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.9, i64 0, i64 0), i32 %43)
  %45 = load %struct.shmid_ds*, %struct.shmid_ds** %2, align 8
  %46 = getelementptr inbounds %struct.shmid_ds, %struct.shmid_ds* %45, i32 0, i32 4
  %47 = load i32, i32* %46, align 4
  %48 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10, i64 0, i64 0), i32 %47)
  %49 = load %struct.shmid_ds*, %struct.shmid_ds** %2, align 8
  %50 = getelementptr inbounds %struct.shmid_ds, %struct.shmid_ds* %49, i32 0, i32 5
  %51 = load i32, i32* %50, align 4
  %52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0), i32 %51)
  %53 = load %struct.shmid_ds*, %struct.shmid_ds** %2, align 8
  %54 = getelementptr inbounds %struct.shmid_ds, %struct.shmid_ds* %53, i32 0, i32 6
  %55 = load i32, i32* %54, align 4
  %56 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0), i32 %55)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
