; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_3024.c_GetCsrssThread.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_3024.c_GetCsrssThread.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_6__ = type { i64, %struct.TYPE_5__*, %struct.TYPE_4__ }
%struct.TYPE_5__ = type { i32 }
%struct.TYPE_4__ = type { i32* }

@.str = private unnamed_addr constant [10 x i8] c"ntdll.dll\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"NtQuerySystemInformation\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"Not enough memory\0A\00", align 1
@SystemProcessesAndThreadsInformation = common dso_local global i32 0, align 4
@STATUS_INFO_LENGTH_MISMATCH = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [33 x i8] c"NtQuerySystemInformation Error! \00", align 1
@.str.4 = private unnamed_addr constant [10 x i32] [i32 99, i32 115, i32 114, i32 115, i32 115, i32 46, i32 101, i32 120, i32 101, i32 0], align 4
@.str.5 = private unnamed_addr constant [11 x i8] c"\0A[%ws]  \0A\0A\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"5 addresses for testing purposes\0A\0A\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"Thread %d -> 0x%x\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @GetCsrssThread() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64 (i32, i32*, i32, i32*)*, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.TYPE_6__*, align 8
  store i32 20480, i32* %1, align 4
  store i32* null, i32** %3, align 8
  store i32 0, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %13 = call i32 @LoadLibrary(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0))
  %14 = call i64 @GetProcAddress(i32 %13, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0))
  %15 = inttoptr i64 %14 to i64 (i32, i32*, i32, i32*)*
  store i64 (i32, i32*, i32, i32*)* %15, i64 (i32, i32*, i32, i32*)** %10, align 8
  br label %16

16:                                               ; preds = %47, %0
  %17 = load i32, i32* %1, align 4
  %18 = call i32* @malloc(i32 %17)
  store i32* %18, i32** %3, align 8
  %19 = load i32*, i32** %3, align 8
  %20 = icmp eq i32* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0))
  br label %51

23:                                               ; preds = %16
  %24 = load i64 (i32, i32*, i32, i32*)*, i64 (i32, i32*, i32, i32*)** %10, align 8
  %25 = load i32, i32* @SystemProcessesAndThreadsInformation, align 4
  %26 = load i32*, i32** %3, align 8
  %27 = load i32, i32* %1, align 4
  %28 = call i64 %24(i32 %25, i32* %26, i32 %27, i32* null)
  store i64 %28, i64* %4, align 8
  %29 = load i64, i64* %4, align 8
  %30 = load i64, i64* @STATUS_INFO_LENGTH_MISMATCH, align 8
  %31 = icmp eq i64 %29, %30
  br i1 %31, label %32, label %37

32:                                               ; preds = %23
  %33 = load i32*, i32** %3, align 8
  %34 = call i32 @free(i32* %33)
  %35 = load i32, i32* %1, align 4
  %36 = mul nsw i32 %35, 2
  store i32 %36, i32* %1, align 4
  br label %46

37:                                               ; preds = %23
  %38 = load i64, i64* %4, align 8
  %39 = call i32 @NT_SUCCESS(i64 %38)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %45, label %41

41:                                               ; preds = %37
  %42 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0))
  %43 = load i32*, i32** %3, align 8
  %44 = call i32 @free(i32* %43)
  br label %45

45:                                               ; preds = %41, %37
  br label %46

46:                                               ; preds = %45, %32
  br label %47

47:                                               ; preds = %46
  %48 = load i64, i64* %4, align 8
  %49 = load i64, i64* @STATUS_INFO_LENGTH_MISMATCH, align 8
  %50 = icmp eq i64 %48, %49
  br i1 %50, label %16, label %51

51:                                               ; preds = %47, %21
  %52 = load i32*, i32** %3, align 8
  %53 = bitcast i32* %52 to %struct.TYPE_6__*
  store %struct.TYPE_6__* %53, %struct.TYPE_6__** %12, align 8
  br label %54

54:                                               ; preds = %104, %51
  %55 = load %struct.TYPE_6__*, %struct.TYPE_6__** %12, align 8
  %56 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %55, i32 0, i32 0
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %54
  br label %112

60:                                               ; preds = %54
  %61 = load %struct.TYPE_6__*, %struct.TYPE_6__** %12, align 8
  %62 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %61, i32 0, i32 2
  %63 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %62, i32 0, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = icmp ne i32* %64, null
  br i1 %65, label %66, label %104

66:                                               ; preds = %60
  %67 = load %struct.TYPE_6__*, %struct.TYPE_6__** %12, align 8
  %68 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %67, i32 0, i32 2
  %69 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %68, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = call i32 @wcsicmp(i32* %70, i8* bitcast ([10 x i32]* @.str.4 to i8*))
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %104, label %73

73:                                               ; preds = %66
  %74 = load %struct.TYPE_6__*, %struct.TYPE_6__** %12, align 8
  %75 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %74, i32 0, i32 2
  %76 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %75, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  %78 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i32* %77)
  %79 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0))
  store i32 0, i32* %9, align 4
  br label %80

80:                                               ; preds = %94, %73
  %81 = load i32, i32* %9, align 4
  %82 = icmp slt i32 %81, 5
  br i1 %82, label %83, label %97

83:                                               ; preds = %80
  %84 = load i32, i32* %9, align 4
  %85 = load %struct.TYPE_6__*, %struct.TYPE_6__** %12, align 8
  %86 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %85, i32 0, i32 1
  %87 = load %struct.TYPE_5__*, %struct.TYPE_5__** %86, align 8
  %88 = load i32, i32* %9, align 4
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %87, i64 %89
  %91 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %90, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0), i32 %84, i32 %92)
  br label %94

94:                                               ; preds = %83
  %95 = load i32, i32* %9, align 4
  %96 = add nsw i32 %95, 1
  store i32 %96, i32* %9, align 4
  br label %80

97:                                               ; preds = %80
  %98 = load %struct.TYPE_6__*, %struct.TYPE_6__** %12, align 8
  %99 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %98, i32 0, i32 1
  %100 = load %struct.TYPE_5__*, %struct.TYPE_5__** %99, align 8
  %101 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %100, i64 1
  %102 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %101, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  store i32 %103, i32* %2, align 4
  br label %104

104:                                              ; preds = %97, %66, %60
  %105 = load %struct.TYPE_6__*, %struct.TYPE_6__** %12, align 8
  %106 = ptrtoint %struct.TYPE_6__* %105 to i64
  %107 = load %struct.TYPE_6__*, %struct.TYPE_6__** %12, align 8
  %108 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %107, i32 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = add nsw i64 %106, %109
  %111 = inttoptr i64 %110 to %struct.TYPE_6__*
  store %struct.TYPE_6__* %111, %struct.TYPE_6__** %12, align 8
  br label %54

112:                                              ; preds = %59
  %113 = load i32*, i32** %3, align 8
  %114 = call i32 @free(i32* %113)
  %115 = load i32, i32* %2, align 4
  ret i32 %115
}

declare dso_local i64 @GetProcAddress(i32, i8*) #1

declare dso_local i32 @LoadLibrary(i8*) #1

declare dso_local i32* @malloc(i32) #1

declare dso_local i32 @printf(i8*, ...) #1

declare dso_local i32 @free(i32*) #1

declare dso_local i32 @NT_SUCCESS(i64) #1

declare dso_local i32 @wcsicmp(i32*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
