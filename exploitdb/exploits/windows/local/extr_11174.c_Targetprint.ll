; ModuleID = '/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_11174.c_Targetprint.c'
source_filename = "/home/carl/AnghaBench/exploitdb/exploits/windows/local/extr_11174.c_Targetprint.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i8*, i32 }

@.str = private unnamed_addr constant [13 x i8] c"Targets are:\00", align 1
@t = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [21 x i8] c"[!]%s - [0x%d] - %d\0A\00", align 1
@RET = common dso_local global %struct.TYPE_2__* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @Targetprint() #0 {
  %1 = alloca i32, align 4
  %2 = call i32 @print(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0))
  store i32 0, i32* @t, align 4
  br label %3

3:                                                ; preds = %21, %0
  %4 = load i32, i32* @t, align 4
  %5 = icmp slt i32 %4, 5
  br i1 %5, label %6, label %24

6:                                                ; preds = %3
  %7 = load %struct.TYPE_2__*, %struct.TYPE_2__** @RET, align 8
  %8 = load i32, i32* @t, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %7, i64 %9
  %11 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %10, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = load %struct.TYPE_2__*, %struct.TYPE_2__** @RET, align 8
  %14 = load i32, i32* @t, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %13, i64 %15
  %17 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %16, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = load i32, i32* @t, align 4
  %20 = call i32 @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8* %12, i32 %18, i32 %19)
  br label %21

21:                                               ; preds = %6
  %22 = load i32, i32* @t, align 4
  %23 = add nsw i32 %22, 1
  store i32 %23, i32* @t, align 4
  br label %3

24:                                               ; preds = %3
  %25 = load i32, i32* %1, align 4
  ret i32 %25
}

declare dso_local i32 @print(i8*) #1

declare dso_local i32 @printf(i8*, i8*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
