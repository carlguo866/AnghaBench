; ModuleID = '/home/carl/AnghaBench/poco/Data/SQLite/src/extr_sqlite3.c_keywordCode.c'
source_filename = "/home/carl/AnghaBench/poco/Data/SQLite/src/extr_sqlite3.c_keywordCode.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@aKWHash = common dso_local global i64* null, align 8
@aKWLen = common dso_local global i32* null, align 8
@zKWText = common dso_local global i8* null, align 8
@aKWOffset = common dso_local global i64* null, align 8
@aKWCode = common dso_local global i32* null, align 8
@aKWNext = common dso_local global i64* null, align 8
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (i8*, i32, i32*)* @keywordCode to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @keywordCode(i8* %0, i32 %1, i32* %2) #0 {
  %4 = alloca i8*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32* %2, i32** %6, align 8
  %10 = load i32, i32* %5, align 4
  %11 = icmp sge i32 %10, 2
  br i1 %11, label %12, label %637

12:                                               ; preds = %3
  %13 = load i8*, i8** %4, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 0
  %15 = load i8, i8* %14, align 1
  %16 = call i32 @charMap(i8 signext %15)
  %17 = mul nsw i32 %16, 4
  %18 = load i8*, i8** %4, align 8
  %19 = load i32, i32* %5, align 4
  %20 = sub nsw i32 %19, 1
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %18, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = call i32 @charMap(i8 signext %23)
  %25 = mul nsw i32 %24, 3
  %26 = xor i32 %17, %25
  %27 = load i32, i32* %5, align 4
  %28 = xor i32 %26, %27
  %29 = srem i32 %28, 127
  store i32 %29, i32* %7, align 4
  %30 = load i64*, i64** @aKWHash, align 8
  %31 = load i32, i32* %7, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i64, i64* %30, i64 %32
  %34 = load i64, i64* %33, align 8
  %35 = trunc i64 %34 to i32
  %36 = sub nsw i32 %35, 1
  store i32 %36, i32* %7, align 4
  br label %37

37:                                               ; preds = %628, %12
  %38 = load i32, i32* %7, align 4
  %39 = icmp sge i32 %38, 0
  br i1 %39, label %40, label %636

40:                                               ; preds = %37
  %41 = load i32*, i32** @aKWLen, align 8
  %42 = load i32, i32* %7, align 4
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i32, i32* %41, i64 %43
  %45 = load i32, i32* %44, align 4
  %46 = load i32, i32* %5, align 4
  %47 = icmp ne i32 %45, %46
  br i1 %47, label %48, label %49

48:                                               ; preds = %40
  br label %628

49:                                               ; preds = %40
  store i32 0, i32* %8, align 4
  %50 = load i8*, i8** @zKWText, align 8
  %51 = load i64*, i64** @aKWOffset, align 8
  %52 = load i32, i32* %7, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i64, i64* %51, i64 %53
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds i8, i8* %50, i64 %55
  store i8* %56, i8** %9, align 8
  %57 = load i32, i32* %8, align 4
  %58 = load i32, i32* %5, align 4
  %59 = icmp slt i32 %57, %58
  br i1 %59, label %60, label %61

60:                                               ; preds = %49
  br label %628

61:                                               ; preds = %49
  %62 = load i32, i32* %7, align 4
  %63 = icmp eq i32 %62, 0
  %64 = zext i1 %63 to i32
  %65 = call i32 @testcase(i32 %64)
  %66 = load i32, i32* %7, align 4
  %67 = icmp eq i32 %66, 1
  %68 = zext i1 %67 to i32
  %69 = call i32 @testcase(i32 %68)
  %70 = load i32, i32* %7, align 4
  %71 = icmp eq i32 %70, 2
  %72 = zext i1 %71 to i32
  %73 = call i32 @testcase(i32 %72)
  %74 = load i32, i32* %7, align 4
  %75 = icmp eq i32 %74, 3
  %76 = zext i1 %75 to i32
  %77 = call i32 @testcase(i32 %76)
  %78 = load i32, i32* %7, align 4
  %79 = icmp eq i32 %78, 4
  %80 = zext i1 %79 to i32
  %81 = call i32 @testcase(i32 %80)
  %82 = load i32, i32* %7, align 4
  %83 = icmp eq i32 %82, 5
  %84 = zext i1 %83 to i32
  %85 = call i32 @testcase(i32 %84)
  %86 = load i32, i32* %7, align 4
  %87 = icmp eq i32 %86, 6
  %88 = zext i1 %87 to i32
  %89 = call i32 @testcase(i32 %88)
  %90 = load i32, i32* %7, align 4
  %91 = icmp eq i32 %90, 7
  %92 = zext i1 %91 to i32
  %93 = call i32 @testcase(i32 %92)
  %94 = load i32, i32* %7, align 4
  %95 = icmp eq i32 %94, 8
  %96 = zext i1 %95 to i32
  %97 = call i32 @testcase(i32 %96)
  %98 = load i32, i32* %7, align 4
  %99 = icmp eq i32 %98, 9
  %100 = zext i1 %99 to i32
  %101 = call i32 @testcase(i32 %100)
  %102 = load i32, i32* %7, align 4
  %103 = icmp eq i32 %102, 10
  %104 = zext i1 %103 to i32
  %105 = call i32 @testcase(i32 %104)
  %106 = load i32, i32* %7, align 4
  %107 = icmp eq i32 %106, 11
  %108 = zext i1 %107 to i32
  %109 = call i32 @testcase(i32 %108)
  %110 = load i32, i32* %7, align 4
  %111 = icmp eq i32 %110, 12
  %112 = zext i1 %111 to i32
  %113 = call i32 @testcase(i32 %112)
  %114 = load i32, i32* %7, align 4
  %115 = icmp eq i32 %114, 13
  %116 = zext i1 %115 to i32
  %117 = call i32 @testcase(i32 %116)
  %118 = load i32, i32* %7, align 4
  %119 = icmp eq i32 %118, 14
  %120 = zext i1 %119 to i32
  %121 = call i32 @testcase(i32 %120)
  %122 = load i32, i32* %7, align 4
  %123 = icmp eq i32 %122, 15
  %124 = zext i1 %123 to i32
  %125 = call i32 @testcase(i32 %124)
  %126 = load i32, i32* %7, align 4
  %127 = icmp eq i32 %126, 16
  %128 = zext i1 %127 to i32
  %129 = call i32 @testcase(i32 %128)
  %130 = load i32, i32* %7, align 4
  %131 = icmp eq i32 %130, 17
  %132 = zext i1 %131 to i32
  %133 = call i32 @testcase(i32 %132)
  %134 = load i32, i32* %7, align 4
  %135 = icmp eq i32 %134, 18
  %136 = zext i1 %135 to i32
  %137 = call i32 @testcase(i32 %136)
  %138 = load i32, i32* %7, align 4
  %139 = icmp eq i32 %138, 19
  %140 = zext i1 %139 to i32
  %141 = call i32 @testcase(i32 %140)
  %142 = load i32, i32* %7, align 4
  %143 = icmp eq i32 %142, 20
  %144 = zext i1 %143 to i32
  %145 = call i32 @testcase(i32 %144)
  %146 = load i32, i32* %7, align 4
  %147 = icmp eq i32 %146, 21
  %148 = zext i1 %147 to i32
  %149 = call i32 @testcase(i32 %148)
  %150 = load i32, i32* %7, align 4
  %151 = icmp eq i32 %150, 22
  %152 = zext i1 %151 to i32
  %153 = call i32 @testcase(i32 %152)
  %154 = load i32, i32* %7, align 4
  %155 = icmp eq i32 %154, 23
  %156 = zext i1 %155 to i32
  %157 = call i32 @testcase(i32 %156)
  %158 = load i32, i32* %7, align 4
  %159 = icmp eq i32 %158, 24
  %160 = zext i1 %159 to i32
  %161 = call i32 @testcase(i32 %160)
  %162 = load i32, i32* %7, align 4
  %163 = icmp eq i32 %162, 25
  %164 = zext i1 %163 to i32
  %165 = call i32 @testcase(i32 %164)
  %166 = load i32, i32* %7, align 4
  %167 = icmp eq i32 %166, 26
  %168 = zext i1 %167 to i32
  %169 = call i32 @testcase(i32 %168)
  %170 = load i32, i32* %7, align 4
  %171 = icmp eq i32 %170, 27
  %172 = zext i1 %171 to i32
  %173 = call i32 @testcase(i32 %172)
  %174 = load i32, i32* %7, align 4
  %175 = icmp eq i32 %174, 28
  %176 = zext i1 %175 to i32
  %177 = call i32 @testcase(i32 %176)
  %178 = load i32, i32* %7, align 4
  %179 = icmp eq i32 %178, 29
  %180 = zext i1 %179 to i32
  %181 = call i32 @testcase(i32 %180)
  %182 = load i32, i32* %7, align 4
  %183 = icmp eq i32 %182, 30
  %184 = zext i1 %183 to i32
  %185 = call i32 @testcase(i32 %184)
  %186 = load i32, i32* %7, align 4
  %187 = icmp eq i32 %186, 31
  %188 = zext i1 %187 to i32
  %189 = call i32 @testcase(i32 %188)
  %190 = load i32, i32* %7, align 4
  %191 = icmp eq i32 %190, 32
  %192 = zext i1 %191 to i32
  %193 = call i32 @testcase(i32 %192)
  %194 = load i32, i32* %7, align 4
  %195 = icmp eq i32 %194, 33
  %196 = zext i1 %195 to i32
  %197 = call i32 @testcase(i32 %196)
  %198 = load i32, i32* %7, align 4
  %199 = icmp eq i32 %198, 34
  %200 = zext i1 %199 to i32
  %201 = call i32 @testcase(i32 %200)
  %202 = load i32, i32* %7, align 4
  %203 = icmp eq i32 %202, 35
  %204 = zext i1 %203 to i32
  %205 = call i32 @testcase(i32 %204)
  %206 = load i32, i32* %7, align 4
  %207 = icmp eq i32 %206, 36
  %208 = zext i1 %207 to i32
  %209 = call i32 @testcase(i32 %208)
  %210 = load i32, i32* %7, align 4
  %211 = icmp eq i32 %210, 37
  %212 = zext i1 %211 to i32
  %213 = call i32 @testcase(i32 %212)
  %214 = load i32, i32* %7, align 4
  %215 = icmp eq i32 %214, 38
  %216 = zext i1 %215 to i32
  %217 = call i32 @testcase(i32 %216)
  %218 = load i32, i32* %7, align 4
  %219 = icmp eq i32 %218, 39
  %220 = zext i1 %219 to i32
  %221 = call i32 @testcase(i32 %220)
  %222 = load i32, i32* %7, align 4
  %223 = icmp eq i32 %222, 40
  %224 = zext i1 %223 to i32
  %225 = call i32 @testcase(i32 %224)
  %226 = load i32, i32* %7, align 4
  %227 = icmp eq i32 %226, 41
  %228 = zext i1 %227 to i32
  %229 = call i32 @testcase(i32 %228)
  %230 = load i32, i32* %7, align 4
  %231 = icmp eq i32 %230, 42
  %232 = zext i1 %231 to i32
  %233 = call i32 @testcase(i32 %232)
  %234 = load i32, i32* %7, align 4
  %235 = icmp eq i32 %234, 43
  %236 = zext i1 %235 to i32
  %237 = call i32 @testcase(i32 %236)
  %238 = load i32, i32* %7, align 4
  %239 = icmp eq i32 %238, 44
  %240 = zext i1 %239 to i32
  %241 = call i32 @testcase(i32 %240)
  %242 = load i32, i32* %7, align 4
  %243 = icmp eq i32 %242, 45
  %244 = zext i1 %243 to i32
  %245 = call i32 @testcase(i32 %244)
  %246 = load i32, i32* %7, align 4
  %247 = icmp eq i32 %246, 46
  %248 = zext i1 %247 to i32
  %249 = call i32 @testcase(i32 %248)
  %250 = load i32, i32* %7, align 4
  %251 = icmp eq i32 %250, 47
  %252 = zext i1 %251 to i32
  %253 = call i32 @testcase(i32 %252)
  %254 = load i32, i32* %7, align 4
  %255 = icmp eq i32 %254, 48
  %256 = zext i1 %255 to i32
  %257 = call i32 @testcase(i32 %256)
  %258 = load i32, i32* %7, align 4
  %259 = icmp eq i32 %258, 49
  %260 = zext i1 %259 to i32
  %261 = call i32 @testcase(i32 %260)
  %262 = load i32, i32* %7, align 4
  %263 = icmp eq i32 %262, 50
  %264 = zext i1 %263 to i32
  %265 = call i32 @testcase(i32 %264)
  %266 = load i32, i32* %7, align 4
  %267 = icmp eq i32 %266, 51
  %268 = zext i1 %267 to i32
  %269 = call i32 @testcase(i32 %268)
  %270 = load i32, i32* %7, align 4
  %271 = icmp eq i32 %270, 52
  %272 = zext i1 %271 to i32
  %273 = call i32 @testcase(i32 %272)
  %274 = load i32, i32* %7, align 4
  %275 = icmp eq i32 %274, 53
  %276 = zext i1 %275 to i32
  %277 = call i32 @testcase(i32 %276)
  %278 = load i32, i32* %7, align 4
  %279 = icmp eq i32 %278, 54
  %280 = zext i1 %279 to i32
  %281 = call i32 @testcase(i32 %280)
  %282 = load i32, i32* %7, align 4
  %283 = icmp eq i32 %282, 55
  %284 = zext i1 %283 to i32
  %285 = call i32 @testcase(i32 %284)
  %286 = load i32, i32* %7, align 4
  %287 = icmp eq i32 %286, 56
  %288 = zext i1 %287 to i32
  %289 = call i32 @testcase(i32 %288)
  %290 = load i32, i32* %7, align 4
  %291 = icmp eq i32 %290, 57
  %292 = zext i1 %291 to i32
  %293 = call i32 @testcase(i32 %292)
  %294 = load i32, i32* %7, align 4
  %295 = icmp eq i32 %294, 58
  %296 = zext i1 %295 to i32
  %297 = call i32 @testcase(i32 %296)
  %298 = load i32, i32* %7, align 4
  %299 = icmp eq i32 %298, 59
  %300 = zext i1 %299 to i32
  %301 = call i32 @testcase(i32 %300)
  %302 = load i32, i32* %7, align 4
  %303 = icmp eq i32 %302, 60
  %304 = zext i1 %303 to i32
  %305 = call i32 @testcase(i32 %304)
  %306 = load i32, i32* %7, align 4
  %307 = icmp eq i32 %306, 61
  %308 = zext i1 %307 to i32
  %309 = call i32 @testcase(i32 %308)
  %310 = load i32, i32* %7, align 4
  %311 = icmp eq i32 %310, 62
  %312 = zext i1 %311 to i32
  %313 = call i32 @testcase(i32 %312)
  %314 = load i32, i32* %7, align 4
  %315 = icmp eq i32 %314, 63
  %316 = zext i1 %315 to i32
  %317 = call i32 @testcase(i32 %316)
  %318 = load i32, i32* %7, align 4
  %319 = icmp eq i32 %318, 64
  %320 = zext i1 %319 to i32
  %321 = call i32 @testcase(i32 %320)
  %322 = load i32, i32* %7, align 4
  %323 = icmp eq i32 %322, 65
  %324 = zext i1 %323 to i32
  %325 = call i32 @testcase(i32 %324)
  %326 = load i32, i32* %7, align 4
  %327 = icmp eq i32 %326, 66
  %328 = zext i1 %327 to i32
  %329 = call i32 @testcase(i32 %328)
  %330 = load i32, i32* %7, align 4
  %331 = icmp eq i32 %330, 67
  %332 = zext i1 %331 to i32
  %333 = call i32 @testcase(i32 %332)
  %334 = load i32, i32* %7, align 4
  %335 = icmp eq i32 %334, 68
  %336 = zext i1 %335 to i32
  %337 = call i32 @testcase(i32 %336)
  %338 = load i32, i32* %7, align 4
  %339 = icmp eq i32 %338, 69
  %340 = zext i1 %339 to i32
  %341 = call i32 @testcase(i32 %340)
  %342 = load i32, i32* %7, align 4
  %343 = icmp eq i32 %342, 70
  %344 = zext i1 %343 to i32
  %345 = call i32 @testcase(i32 %344)
  %346 = load i32, i32* %7, align 4
  %347 = icmp eq i32 %346, 71
  %348 = zext i1 %347 to i32
  %349 = call i32 @testcase(i32 %348)
  %350 = load i32, i32* %7, align 4
  %351 = icmp eq i32 %350, 72
  %352 = zext i1 %351 to i32
  %353 = call i32 @testcase(i32 %352)
  %354 = load i32, i32* %7, align 4
  %355 = icmp eq i32 %354, 73
  %356 = zext i1 %355 to i32
  %357 = call i32 @testcase(i32 %356)
  %358 = load i32, i32* %7, align 4
  %359 = icmp eq i32 %358, 74
  %360 = zext i1 %359 to i32
  %361 = call i32 @testcase(i32 %360)
  %362 = load i32, i32* %7, align 4
  %363 = icmp eq i32 %362, 75
  %364 = zext i1 %363 to i32
  %365 = call i32 @testcase(i32 %364)
  %366 = load i32, i32* %7, align 4
  %367 = icmp eq i32 %366, 76
  %368 = zext i1 %367 to i32
  %369 = call i32 @testcase(i32 %368)
  %370 = load i32, i32* %7, align 4
  %371 = icmp eq i32 %370, 77
  %372 = zext i1 %371 to i32
  %373 = call i32 @testcase(i32 %372)
  %374 = load i32, i32* %7, align 4
  %375 = icmp eq i32 %374, 78
  %376 = zext i1 %375 to i32
  %377 = call i32 @testcase(i32 %376)
  %378 = load i32, i32* %7, align 4
  %379 = icmp eq i32 %378, 79
  %380 = zext i1 %379 to i32
  %381 = call i32 @testcase(i32 %380)
  %382 = load i32, i32* %7, align 4
  %383 = icmp eq i32 %382, 80
  %384 = zext i1 %383 to i32
  %385 = call i32 @testcase(i32 %384)
  %386 = load i32, i32* %7, align 4
  %387 = icmp eq i32 %386, 81
  %388 = zext i1 %387 to i32
  %389 = call i32 @testcase(i32 %388)
  %390 = load i32, i32* %7, align 4
  %391 = icmp eq i32 %390, 82
  %392 = zext i1 %391 to i32
  %393 = call i32 @testcase(i32 %392)
  %394 = load i32, i32* %7, align 4
  %395 = icmp eq i32 %394, 83
  %396 = zext i1 %395 to i32
  %397 = call i32 @testcase(i32 %396)
  %398 = load i32, i32* %7, align 4
  %399 = icmp eq i32 %398, 84
  %400 = zext i1 %399 to i32
  %401 = call i32 @testcase(i32 %400)
  %402 = load i32, i32* %7, align 4
  %403 = icmp eq i32 %402, 85
  %404 = zext i1 %403 to i32
  %405 = call i32 @testcase(i32 %404)
  %406 = load i32, i32* %7, align 4
  %407 = icmp eq i32 %406, 86
  %408 = zext i1 %407 to i32
  %409 = call i32 @testcase(i32 %408)
  %410 = load i32, i32* %7, align 4
  %411 = icmp eq i32 %410, 87
  %412 = zext i1 %411 to i32
  %413 = call i32 @testcase(i32 %412)
  %414 = load i32, i32* %7, align 4
  %415 = icmp eq i32 %414, 88
  %416 = zext i1 %415 to i32
  %417 = call i32 @testcase(i32 %416)
  %418 = load i32, i32* %7, align 4
  %419 = icmp eq i32 %418, 89
  %420 = zext i1 %419 to i32
  %421 = call i32 @testcase(i32 %420)
  %422 = load i32, i32* %7, align 4
  %423 = icmp eq i32 %422, 90
  %424 = zext i1 %423 to i32
  %425 = call i32 @testcase(i32 %424)
  %426 = load i32, i32* %7, align 4
  %427 = icmp eq i32 %426, 91
  %428 = zext i1 %427 to i32
  %429 = call i32 @testcase(i32 %428)
  %430 = load i32, i32* %7, align 4
  %431 = icmp eq i32 %430, 92
  %432 = zext i1 %431 to i32
  %433 = call i32 @testcase(i32 %432)
  %434 = load i32, i32* %7, align 4
  %435 = icmp eq i32 %434, 93
  %436 = zext i1 %435 to i32
  %437 = call i32 @testcase(i32 %436)
  %438 = load i32, i32* %7, align 4
  %439 = icmp eq i32 %438, 94
  %440 = zext i1 %439 to i32
  %441 = call i32 @testcase(i32 %440)
  %442 = load i32, i32* %7, align 4
  %443 = icmp eq i32 %442, 95
  %444 = zext i1 %443 to i32
  %445 = call i32 @testcase(i32 %444)
  %446 = load i32, i32* %7, align 4
  %447 = icmp eq i32 %446, 96
  %448 = zext i1 %447 to i32
  %449 = call i32 @testcase(i32 %448)
  %450 = load i32, i32* %7, align 4
  %451 = icmp eq i32 %450, 97
  %452 = zext i1 %451 to i32
  %453 = call i32 @testcase(i32 %452)
  %454 = load i32, i32* %7, align 4
  %455 = icmp eq i32 %454, 98
  %456 = zext i1 %455 to i32
  %457 = call i32 @testcase(i32 %456)
  %458 = load i32, i32* %7, align 4
  %459 = icmp eq i32 %458, 99
  %460 = zext i1 %459 to i32
  %461 = call i32 @testcase(i32 %460)
  %462 = load i32, i32* %7, align 4
  %463 = icmp eq i32 %462, 100
  %464 = zext i1 %463 to i32
  %465 = call i32 @testcase(i32 %464)
  %466 = load i32, i32* %7, align 4
  %467 = icmp eq i32 %466, 101
  %468 = zext i1 %467 to i32
  %469 = call i32 @testcase(i32 %468)
  %470 = load i32, i32* %7, align 4
  %471 = icmp eq i32 %470, 102
  %472 = zext i1 %471 to i32
  %473 = call i32 @testcase(i32 %472)
  %474 = load i32, i32* %7, align 4
  %475 = icmp eq i32 %474, 103
  %476 = zext i1 %475 to i32
  %477 = call i32 @testcase(i32 %476)
  %478 = load i32, i32* %7, align 4
  %479 = icmp eq i32 %478, 104
  %480 = zext i1 %479 to i32
  %481 = call i32 @testcase(i32 %480)
  %482 = load i32, i32* %7, align 4
  %483 = icmp eq i32 %482, 105
  %484 = zext i1 %483 to i32
  %485 = call i32 @testcase(i32 %484)
  %486 = load i32, i32* %7, align 4
  %487 = icmp eq i32 %486, 106
  %488 = zext i1 %487 to i32
  %489 = call i32 @testcase(i32 %488)
  %490 = load i32, i32* %7, align 4
  %491 = icmp eq i32 %490, 107
  %492 = zext i1 %491 to i32
  %493 = call i32 @testcase(i32 %492)
  %494 = load i32, i32* %7, align 4
  %495 = icmp eq i32 %494, 108
  %496 = zext i1 %495 to i32
  %497 = call i32 @testcase(i32 %496)
  %498 = load i32, i32* %7, align 4
  %499 = icmp eq i32 %498, 109
  %500 = zext i1 %499 to i32
  %501 = call i32 @testcase(i32 %500)
  %502 = load i32, i32* %7, align 4
  %503 = icmp eq i32 %502, 110
  %504 = zext i1 %503 to i32
  %505 = call i32 @testcase(i32 %504)
  %506 = load i32, i32* %7, align 4
  %507 = icmp eq i32 %506, 111
  %508 = zext i1 %507 to i32
  %509 = call i32 @testcase(i32 %508)
  %510 = load i32, i32* %7, align 4
  %511 = icmp eq i32 %510, 112
  %512 = zext i1 %511 to i32
  %513 = call i32 @testcase(i32 %512)
  %514 = load i32, i32* %7, align 4
  %515 = icmp eq i32 %514, 113
  %516 = zext i1 %515 to i32
  %517 = call i32 @testcase(i32 %516)
  %518 = load i32, i32* %7, align 4
  %519 = icmp eq i32 %518, 114
  %520 = zext i1 %519 to i32
  %521 = call i32 @testcase(i32 %520)
  %522 = load i32, i32* %7, align 4
  %523 = icmp eq i32 %522, 115
  %524 = zext i1 %523 to i32
  %525 = call i32 @testcase(i32 %524)
  %526 = load i32, i32* %7, align 4
  %527 = icmp eq i32 %526, 116
  %528 = zext i1 %527 to i32
  %529 = call i32 @testcase(i32 %528)
  %530 = load i32, i32* %7, align 4
  %531 = icmp eq i32 %530, 117
  %532 = zext i1 %531 to i32
  %533 = call i32 @testcase(i32 %532)
  %534 = load i32, i32* %7, align 4
  %535 = icmp eq i32 %534, 118
  %536 = zext i1 %535 to i32
  %537 = call i32 @testcase(i32 %536)
  %538 = load i32, i32* %7, align 4
  %539 = icmp eq i32 %538, 119
  %540 = zext i1 %539 to i32
  %541 = call i32 @testcase(i32 %540)
  %542 = load i32, i32* %7, align 4
  %543 = icmp eq i32 %542, 120
  %544 = zext i1 %543 to i32
  %545 = call i32 @testcase(i32 %544)
  %546 = load i32, i32* %7, align 4
  %547 = icmp eq i32 %546, 121
  %548 = zext i1 %547 to i32
  %549 = call i32 @testcase(i32 %548)
  %550 = load i32, i32* %7, align 4
  %551 = icmp eq i32 %550, 122
  %552 = zext i1 %551 to i32
  %553 = call i32 @testcase(i32 %552)
  %554 = load i32, i32* %7, align 4
  %555 = icmp eq i32 %554, 123
  %556 = zext i1 %555 to i32
  %557 = call i32 @testcase(i32 %556)
  %558 = load i32, i32* %7, align 4
  %559 = icmp eq i32 %558, 124
  %560 = zext i1 %559 to i32
  %561 = call i32 @testcase(i32 %560)
  %562 = load i32, i32* %7, align 4
  %563 = icmp eq i32 %562, 125
  %564 = zext i1 %563 to i32
  %565 = call i32 @testcase(i32 %564)
  %566 = load i32, i32* %7, align 4
  %567 = icmp eq i32 %566, 126
  %568 = zext i1 %567 to i32
  %569 = call i32 @testcase(i32 %568)
  %570 = load i32, i32* %7, align 4
  %571 = icmp eq i32 %570, 127
  %572 = zext i1 %571 to i32
  %573 = call i32 @testcase(i32 %572)
  %574 = load i32, i32* %7, align 4
  %575 = icmp eq i32 %574, 128
  %576 = zext i1 %575 to i32
  %577 = call i32 @testcase(i32 %576)
  %578 = load i32, i32* %7, align 4
  %579 = icmp eq i32 %578, 129
  %580 = zext i1 %579 to i32
  %581 = call i32 @testcase(i32 %580)
  %582 = load i32, i32* %7, align 4
  %583 = icmp eq i32 %582, 130
  %584 = zext i1 %583 to i32
  %585 = call i32 @testcase(i32 %584)
  %586 = load i32, i32* %7, align 4
  %587 = icmp eq i32 %586, 131
  %588 = zext i1 %587 to i32
  %589 = call i32 @testcase(i32 %588)
  %590 = load i32, i32* %7, align 4
  %591 = icmp eq i32 %590, 132
  %592 = zext i1 %591 to i32
  %593 = call i32 @testcase(i32 %592)
  %594 = load i32, i32* %7, align 4
  %595 = icmp eq i32 %594, 133
  %596 = zext i1 %595 to i32
  %597 = call i32 @testcase(i32 %596)
  %598 = load i32, i32* %7, align 4
  %599 = icmp eq i32 %598, 134
  %600 = zext i1 %599 to i32
  %601 = call i32 @testcase(i32 %600)
  %602 = load i32, i32* %7, align 4
  %603 = icmp eq i32 %602, 135
  %604 = zext i1 %603 to i32
  %605 = call i32 @testcase(i32 %604)
  %606 = load i32, i32* %7, align 4
  %607 = icmp eq i32 %606, 136
  %608 = zext i1 %607 to i32
  %609 = call i32 @testcase(i32 %608)
  %610 = load i32, i32* %7, align 4
  %611 = icmp eq i32 %610, 137
  %612 = zext i1 %611 to i32
  %613 = call i32 @testcase(i32 %612)
  %614 = load i32, i32* %7, align 4
  %615 = icmp eq i32 %614, 138
  %616 = zext i1 %615 to i32
  %617 = call i32 @testcase(i32 %616)
  %618 = load i32, i32* %7, align 4
  %619 = icmp eq i32 %618, 139
  %620 = zext i1 %619 to i32
  %621 = call i32 @testcase(i32 %620)
  %622 = load i32*, i32** @aKWCode, align 8
  %623 = load i32, i32* %7, align 4
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds i32, i32* %622, i64 %624
  %626 = load i32, i32* %625, align 4
  %627 = load i32*, i32** %6, align 8
  store i32 %626, i32* %627, align 4
  br label %636

628:                                              ; preds = %60, %48
  %629 = load i64*, i64** @aKWNext, align 8
  %630 = load i32, i32* %7, align 4
  %631 = sext i32 %630 to i64
  %632 = getelementptr inbounds i64, i64* %629, i64 %631
  %633 = load i64, i64* %632, align 8
  %634 = trunc i64 %633 to i32
  %635 = sub nsw i32 %634, 1
  store i32 %635, i32* %7, align 4
  br label %37

636:                                              ; preds = %61, %37
  br label %637

637:                                              ; preds = %636, %3
  %638 = load i32, i32* %5, align 4
  ret i32 %638
}

declare dso_local i32 @charMap(i8 signext) #1

declare dso_local i32 @testcase(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
