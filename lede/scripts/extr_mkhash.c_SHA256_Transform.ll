; ModuleID = '/home/carl/AnghaBench/lede/scripts/extr_mkhash.c_SHA256_Transform.c'
source_filename = "/home/carl/AnghaBench/lede/scripts/extr_mkhash.c_SHA256_Transform.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SHA256_Transform.K = internal constant [64 x i32] [i32 1116352408, i32 1899447441, i32 -1245643825, i32 -373957723, i32 961987163, i32 1508970993, i32 -1841331548, i32 -1424204075, i32 -670586216, i32 310598401, i32 607225278, i32 1426881987, i32 1925078388, i32 -2132889090, i32 -1680079193, i32 -1046744716, i32 -459576895, i32 -272742522, i32 264347078, i32 604807628, i32 770255983, i32 1249150122, i32 1555081692, i32 1996064986, i32 -1740746414, i32 -1473132947, i32 -1341970488, i32 -1084653625, i32 -958395405, i32 -710438585, i32 113926993, i32 338241895, i32 666307205, i32 773529912, i32 1294757372, i32 1396182291, i32 1695183700, i32 1986661051, i32 -2117940946, i32 -1838011259, i32 -1564481375, i32 -1474664885, i32 -1035236496, i32 -949202525, i32 -778901479, i32 -694614492, i32 -200395387, i32 275423344, i32 430227734, i32 506948616, i32 659060556, i32 883997877, i32 958139571, i32 1322822218, i32 1537002063, i32 1747873779, i32 1955562222, i32 2024104815, i32 -2067236844, i32 -1933114872, i32 -1866530822, i32 -1538233109, i32 -1090935817, i32 -965641998], align 16
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i32*, i8*)* @SHA256_Transform to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @SHA256_Transform(i32* %0, i8* %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca [64 x i32], align 16
  %6 = alloca [8 x i32], align 16
  %7 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i8* %1, i8** %4, align 8
  %8 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 0
  %9 = load i8*, i8** %4, align 8
  %10 = call i32 @be32dec_vect(i32* %8, i8* %9, i32 64)
  %11 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %12 = load i32*, i32** %3, align 8
  %13 = call i32 @memcpy(i32* %11, i32* %12, i32 32)
  store i32 0, i32* %7, align 4
  br label %14

14:                                               ; preds = %2038, %2
  %15 = load i32, i32* %7, align 4
  %16 = icmp slt i32 %15, 64
  br i1 %16, label %17, label %2041

17:                                               ; preds = %14
  %18 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %19 = load i32, i32* %18, align 16
  %20 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %19, i32 6)
  %21 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %22 = load i32, i32* %21, align 16
  %23 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %22, i32 11)
  %24 = xor i32 %20, %23
  %25 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %26 = load i32, i32* %25, align 16
  %27 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %26, i32 25)
  %28 = xor i32 %24, %27
  %29 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %30 = load i32, i32* %29, align 16
  %31 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %34 = load i32, i32* %33, align 8
  %35 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Ch to i32 (i32, i32, i32, ...)*)(i32 %30, i32 %32, i32 %34)
  %36 = add nsw i32 %28, %35
  %37 = load i32, i32* %7, align 4
  %38 = add nsw i32 0, %37
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = add nsw i32 %36, %41
  %43 = load i32, i32* %7, align 4
  %44 = add nsw i32 0, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds [64 x i32], [64 x i32]* @SHA256_Transform.K, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = add nsw i32 %42, %47
  %49 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %50 = load i32, i32* %49, align 4
  %51 = add nsw i32 %50, %48
  store i32 %51, i32* %49, align 4
  %52 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %55 = load i32, i32* %54, align 4
  %56 = add nsw i32 %55, %53
  store i32 %56, i32* %54, align 4
  %57 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %58 = load i32, i32* %57, align 16
  %59 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %58, i32 2)
  %60 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %61 = load i32, i32* %60, align 16
  %62 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %61, i32 13)
  %63 = xor i32 %59, %62
  %64 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %65 = load i32, i32* %64, align 16
  %66 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %65, i32 22)
  %67 = xor i32 %63, %66
  %68 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %69 = load i32, i32* %68, align 16
  %70 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %73 = load i32, i32* %72, align 8
  %74 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Maj to i32 (i32, i32, i32, ...)*)(i32 %69, i32 %71, i32 %73)
  %75 = add nsw i32 %67, %74
  %76 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %77 = load i32, i32* %76, align 4
  %78 = add nsw i32 %77, %75
  store i32 %78, i32* %76, align 4
  %79 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %80 = load i32, i32* %79, align 4
  %81 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %80, i32 6)
  %82 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %83 = load i32, i32* %82, align 4
  %84 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %83, i32 11)
  %85 = xor i32 %81, %84
  %86 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %87 = load i32, i32* %86, align 4
  %88 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %87, i32 25)
  %89 = xor i32 %85, %88
  %90 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %93 = load i32, i32* %92, align 16
  %94 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %95 = load i32, i32* %94, align 4
  %96 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Ch to i32 (i32, i32, i32, ...)*)(i32 %91, i32 %93, i32 %95)
  %97 = add nsw i32 %89, %96
  %98 = load i32, i32* %7, align 4
  %99 = add nsw i32 1, %98
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %100
  %102 = load i32, i32* %101, align 4
  %103 = add nsw i32 %97, %102
  %104 = load i32, i32* %7, align 4
  %105 = add nsw i32 1, %104
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds [64 x i32], [64 x i32]* @SHA256_Transform.K, i64 0, i64 %106
  %108 = load i32, i32* %107, align 4
  %109 = add nsw i32 %103, %108
  %110 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %111 = load i32, i32* %110, align 8
  %112 = add nsw i32 %111, %109
  store i32 %112, i32* %110, align 8
  %113 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %114 = load i32, i32* %113, align 8
  %115 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %116 = load i32, i32* %115, align 8
  %117 = add nsw i32 %116, %114
  store i32 %117, i32* %115, align 8
  %118 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %119 = load i32, i32* %118, align 4
  %120 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %119, i32 2)
  %121 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %122 = load i32, i32* %121, align 4
  %123 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %122, i32 13)
  %124 = xor i32 %120, %123
  %125 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %126 = load i32, i32* %125, align 4
  %127 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %126, i32 22)
  %128 = xor i32 %124, %127
  %129 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %132 = load i32, i32* %131, align 16
  %133 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %134 = load i32, i32* %133, align 4
  %135 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Maj to i32 (i32, i32, i32, ...)*)(i32 %130, i32 %132, i32 %134)
  %136 = add nsw i32 %128, %135
  %137 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %138 = load i32, i32* %137, align 8
  %139 = add nsw i32 %138, %136
  store i32 %139, i32* %137, align 8
  %140 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %141 = load i32, i32* %140, align 8
  %142 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %141, i32 6)
  %143 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %144 = load i32, i32* %143, align 8
  %145 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %144, i32 11)
  %146 = xor i32 %142, %145
  %147 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %148 = load i32, i32* %147, align 8
  %149 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %148, i32 25)
  %150 = xor i32 %146, %149
  %151 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %152 = load i32, i32* %151, align 8
  %153 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %156 = load i32, i32* %155, align 16
  %157 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Ch to i32 (i32, i32, i32, ...)*)(i32 %152, i32 %154, i32 %156)
  %158 = add nsw i32 %150, %157
  %159 = load i32, i32* %7, align 4
  %160 = add nsw i32 2, %159
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %161
  %163 = load i32, i32* %162, align 4
  %164 = add nsw i32 %158, %163
  %165 = load i32, i32* %7, align 4
  %166 = add nsw i32 2, %165
  %167 = sext i32 %166 to i64
  %168 = getelementptr inbounds [64 x i32], [64 x i32]* @SHA256_Transform.K, i64 0, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = add nsw i32 %164, %169
  %171 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %172 = load i32, i32* %171, align 4
  %173 = add nsw i32 %172, %170
  store i32 %173, i32* %171, align 4
  %174 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %175 = load i32, i32* %174, align 4
  %176 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %177 = load i32, i32* %176, align 4
  %178 = add nsw i32 %177, %175
  store i32 %178, i32* %176, align 4
  %179 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %180 = load i32, i32* %179, align 8
  %181 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %180, i32 2)
  %182 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %183 = load i32, i32* %182, align 8
  %184 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %183, i32 13)
  %185 = xor i32 %181, %184
  %186 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %187 = load i32, i32* %186, align 8
  %188 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %187, i32 22)
  %189 = xor i32 %185, %188
  %190 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %191 = load i32, i32* %190, align 8
  %192 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %193 = load i32, i32* %192, align 4
  %194 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %195 = load i32, i32* %194, align 16
  %196 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Maj to i32 (i32, i32, i32, ...)*)(i32 %191, i32 %193, i32 %195)
  %197 = add nsw i32 %189, %196
  %198 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %199 = load i32, i32* %198, align 4
  %200 = add nsw i32 %199, %197
  store i32 %200, i32* %198, align 4
  %201 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %202 = load i32, i32* %201, align 4
  %203 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %202, i32 6)
  %204 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %205 = load i32, i32* %204, align 4
  %206 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %205, i32 11)
  %207 = xor i32 %203, %206
  %208 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %209 = load i32, i32* %208, align 4
  %210 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %209, i32 25)
  %211 = xor i32 %207, %210
  %212 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %213 = load i32, i32* %212, align 4
  %214 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %215 = load i32, i32* %214, align 8
  %216 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %217 = load i32, i32* %216, align 4
  %218 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Ch to i32 (i32, i32, i32, ...)*)(i32 %213, i32 %215, i32 %217)
  %219 = add nsw i32 %211, %218
  %220 = load i32, i32* %7, align 4
  %221 = add nsw i32 3, %220
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %222
  %224 = load i32, i32* %223, align 4
  %225 = add nsw i32 %219, %224
  %226 = load i32, i32* %7, align 4
  %227 = add nsw i32 3, %226
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds [64 x i32], [64 x i32]* @SHA256_Transform.K, i64 0, i64 %228
  %230 = load i32, i32* %229, align 4
  %231 = add nsw i32 %225, %230
  %232 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %233 = load i32, i32* %232, align 16
  %234 = add nsw i32 %233, %231
  store i32 %234, i32* %232, align 16
  %235 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %236 = load i32, i32* %235, align 16
  %237 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %238 = load i32, i32* %237, align 16
  %239 = add nsw i32 %238, %236
  store i32 %239, i32* %237, align 16
  %240 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %241 = load i32, i32* %240, align 4
  %242 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %241, i32 2)
  %243 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %244 = load i32, i32* %243, align 4
  %245 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %244, i32 13)
  %246 = xor i32 %242, %245
  %247 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %248 = load i32, i32* %247, align 4
  %249 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %248, i32 22)
  %250 = xor i32 %246, %249
  %251 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %252 = load i32, i32* %251, align 4
  %253 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %254 = load i32, i32* %253, align 8
  %255 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %256 = load i32, i32* %255, align 4
  %257 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Maj to i32 (i32, i32, i32, ...)*)(i32 %252, i32 %254, i32 %256)
  %258 = add nsw i32 %250, %257
  %259 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %260 = load i32, i32* %259, align 16
  %261 = add nsw i32 %260, %258
  store i32 %261, i32* %259, align 16
  %262 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %263 = load i32, i32* %262, align 16
  %264 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %263, i32 6)
  %265 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %266 = load i32, i32* %265, align 16
  %267 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %266, i32 11)
  %268 = xor i32 %264, %267
  %269 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %270 = load i32, i32* %269, align 16
  %271 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %270, i32 25)
  %272 = xor i32 %268, %271
  %273 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %274 = load i32, i32* %273, align 16
  %275 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %276 = load i32, i32* %275, align 4
  %277 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %278 = load i32, i32* %277, align 8
  %279 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Ch to i32 (i32, i32, i32, ...)*)(i32 %274, i32 %276, i32 %278)
  %280 = add nsw i32 %272, %279
  %281 = load i32, i32* %7, align 4
  %282 = add nsw i32 4, %281
  %283 = sext i32 %282 to i64
  %284 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %283
  %285 = load i32, i32* %284, align 4
  %286 = add nsw i32 %280, %285
  %287 = load i32, i32* %7, align 4
  %288 = add nsw i32 4, %287
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds [64 x i32], [64 x i32]* @SHA256_Transform.K, i64 0, i64 %289
  %291 = load i32, i32* %290, align 4
  %292 = add nsw i32 %286, %291
  %293 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %294 = load i32, i32* %293, align 4
  %295 = add nsw i32 %294, %292
  store i32 %295, i32* %293, align 4
  %296 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %297 = load i32, i32* %296, align 4
  %298 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %299 = load i32, i32* %298, align 4
  %300 = add nsw i32 %299, %297
  store i32 %300, i32* %298, align 4
  %301 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %302 = load i32, i32* %301, align 16
  %303 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %302, i32 2)
  %304 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %305 = load i32, i32* %304, align 16
  %306 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %305, i32 13)
  %307 = xor i32 %303, %306
  %308 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %309 = load i32, i32* %308, align 16
  %310 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %309, i32 22)
  %311 = xor i32 %307, %310
  %312 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %313 = load i32, i32* %312, align 16
  %314 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %315 = load i32, i32* %314, align 4
  %316 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %317 = load i32, i32* %316, align 8
  %318 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Maj to i32 (i32, i32, i32, ...)*)(i32 %313, i32 %315, i32 %317)
  %319 = add nsw i32 %311, %318
  %320 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %321 = load i32, i32* %320, align 4
  %322 = add nsw i32 %321, %319
  store i32 %322, i32* %320, align 4
  %323 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %324 = load i32, i32* %323, align 4
  %325 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %324, i32 6)
  %326 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %327 = load i32, i32* %326, align 4
  %328 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %327, i32 11)
  %329 = xor i32 %325, %328
  %330 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %331 = load i32, i32* %330, align 4
  %332 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %331, i32 25)
  %333 = xor i32 %329, %332
  %334 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %335 = load i32, i32* %334, align 4
  %336 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %337 = load i32, i32* %336, align 16
  %338 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %339 = load i32, i32* %338, align 4
  %340 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Ch to i32 (i32, i32, i32, ...)*)(i32 %335, i32 %337, i32 %339)
  %341 = add nsw i32 %333, %340
  %342 = load i32, i32* %7, align 4
  %343 = add nsw i32 5, %342
  %344 = sext i32 %343 to i64
  %345 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %344
  %346 = load i32, i32* %345, align 4
  %347 = add nsw i32 %341, %346
  %348 = load i32, i32* %7, align 4
  %349 = add nsw i32 5, %348
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds [64 x i32], [64 x i32]* @SHA256_Transform.K, i64 0, i64 %350
  %352 = load i32, i32* %351, align 4
  %353 = add nsw i32 %347, %352
  %354 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %355 = load i32, i32* %354, align 8
  %356 = add nsw i32 %355, %353
  store i32 %356, i32* %354, align 8
  %357 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %358 = load i32, i32* %357, align 8
  %359 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %360 = load i32, i32* %359, align 8
  %361 = add nsw i32 %360, %358
  store i32 %361, i32* %359, align 8
  %362 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %363 = load i32, i32* %362, align 4
  %364 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %363, i32 2)
  %365 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %366 = load i32, i32* %365, align 4
  %367 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %366, i32 13)
  %368 = xor i32 %364, %367
  %369 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %370 = load i32, i32* %369, align 4
  %371 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %370, i32 22)
  %372 = xor i32 %368, %371
  %373 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %374 = load i32, i32* %373, align 4
  %375 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %376 = load i32, i32* %375, align 16
  %377 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %378 = load i32, i32* %377, align 4
  %379 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Maj to i32 (i32, i32, i32, ...)*)(i32 %374, i32 %376, i32 %378)
  %380 = add nsw i32 %372, %379
  %381 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %382 = load i32, i32* %381, align 8
  %383 = add nsw i32 %382, %380
  store i32 %383, i32* %381, align 8
  %384 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %385 = load i32, i32* %384, align 8
  %386 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %385, i32 6)
  %387 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %388 = load i32, i32* %387, align 8
  %389 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %388, i32 11)
  %390 = xor i32 %386, %389
  %391 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %392 = load i32, i32* %391, align 8
  %393 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %392, i32 25)
  %394 = xor i32 %390, %393
  %395 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %396 = load i32, i32* %395, align 8
  %397 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %398 = load i32, i32* %397, align 4
  %399 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %400 = load i32, i32* %399, align 16
  %401 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Ch to i32 (i32, i32, i32, ...)*)(i32 %396, i32 %398, i32 %400)
  %402 = add nsw i32 %394, %401
  %403 = load i32, i32* %7, align 4
  %404 = add nsw i32 6, %403
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %405
  %407 = load i32, i32* %406, align 4
  %408 = add nsw i32 %402, %407
  %409 = load i32, i32* %7, align 4
  %410 = add nsw i32 6, %409
  %411 = sext i32 %410 to i64
  %412 = getelementptr inbounds [64 x i32], [64 x i32]* @SHA256_Transform.K, i64 0, i64 %411
  %413 = load i32, i32* %412, align 4
  %414 = add nsw i32 %408, %413
  %415 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %416 = load i32, i32* %415, align 4
  %417 = add nsw i32 %416, %414
  store i32 %417, i32* %415, align 4
  %418 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %419 = load i32, i32* %418, align 4
  %420 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %421 = load i32, i32* %420, align 4
  %422 = add nsw i32 %421, %419
  store i32 %422, i32* %420, align 4
  %423 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %424 = load i32, i32* %423, align 8
  %425 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %424, i32 2)
  %426 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %427 = load i32, i32* %426, align 8
  %428 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %427, i32 13)
  %429 = xor i32 %425, %428
  %430 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %431 = load i32, i32* %430, align 8
  %432 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %431, i32 22)
  %433 = xor i32 %429, %432
  %434 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %435 = load i32, i32* %434, align 8
  %436 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %437 = load i32, i32* %436, align 4
  %438 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %439 = load i32, i32* %438, align 16
  %440 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Maj to i32 (i32, i32, i32, ...)*)(i32 %435, i32 %437, i32 %439)
  %441 = add nsw i32 %433, %440
  %442 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %443 = load i32, i32* %442, align 4
  %444 = add nsw i32 %443, %441
  store i32 %444, i32* %442, align 4
  %445 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %446 = load i32, i32* %445, align 4
  %447 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %446, i32 6)
  %448 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %449 = load i32, i32* %448, align 4
  %450 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %449, i32 11)
  %451 = xor i32 %447, %450
  %452 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %453 = load i32, i32* %452, align 4
  %454 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %453, i32 25)
  %455 = xor i32 %451, %454
  %456 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %457 = load i32, i32* %456, align 4
  %458 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %459 = load i32, i32* %458, align 8
  %460 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %461 = load i32, i32* %460, align 4
  %462 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Ch to i32 (i32, i32, i32, ...)*)(i32 %457, i32 %459, i32 %461)
  %463 = add nsw i32 %455, %462
  %464 = load i32, i32* %7, align 4
  %465 = add nsw i32 7, %464
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %466
  %468 = load i32, i32* %467, align 4
  %469 = add nsw i32 %463, %468
  %470 = load i32, i32* %7, align 4
  %471 = add nsw i32 7, %470
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds [64 x i32], [64 x i32]* @SHA256_Transform.K, i64 0, i64 %472
  %474 = load i32, i32* %473, align 4
  %475 = add nsw i32 %469, %474
  %476 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %477 = load i32, i32* %476, align 16
  %478 = add nsw i32 %477, %475
  store i32 %478, i32* %476, align 16
  %479 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %480 = load i32, i32* %479, align 16
  %481 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %482 = load i32, i32* %481, align 16
  %483 = add nsw i32 %482, %480
  store i32 %483, i32* %481, align 16
  %484 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %485 = load i32, i32* %484, align 4
  %486 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %485, i32 2)
  %487 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %488 = load i32, i32* %487, align 4
  %489 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %488, i32 13)
  %490 = xor i32 %486, %489
  %491 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %492 = load i32, i32* %491, align 4
  %493 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %492, i32 22)
  %494 = xor i32 %490, %493
  %495 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %496 = load i32, i32* %495, align 4
  %497 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %498 = load i32, i32* %497, align 8
  %499 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %500 = load i32, i32* %499, align 4
  %501 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Maj to i32 (i32, i32, i32, ...)*)(i32 %496, i32 %498, i32 %500)
  %502 = add nsw i32 %494, %501
  %503 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %504 = load i32, i32* %503, align 16
  %505 = add nsw i32 %504, %502
  store i32 %505, i32* %503, align 16
  %506 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %507 = load i32, i32* %506, align 16
  %508 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %507, i32 6)
  %509 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %510 = load i32, i32* %509, align 16
  %511 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %510, i32 11)
  %512 = xor i32 %508, %511
  %513 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %514 = load i32, i32* %513, align 16
  %515 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %514, i32 25)
  %516 = xor i32 %512, %515
  %517 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %518 = load i32, i32* %517, align 16
  %519 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %520 = load i32, i32* %519, align 4
  %521 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %522 = load i32, i32* %521, align 8
  %523 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Ch to i32 (i32, i32, i32, ...)*)(i32 %518, i32 %520, i32 %522)
  %524 = add nsw i32 %516, %523
  %525 = load i32, i32* %7, align 4
  %526 = add nsw i32 8, %525
  %527 = sext i32 %526 to i64
  %528 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %527
  %529 = load i32, i32* %528, align 4
  %530 = add nsw i32 %524, %529
  %531 = load i32, i32* %7, align 4
  %532 = add nsw i32 8, %531
  %533 = sext i32 %532 to i64
  %534 = getelementptr inbounds [64 x i32], [64 x i32]* @SHA256_Transform.K, i64 0, i64 %533
  %535 = load i32, i32* %534, align 4
  %536 = add nsw i32 %530, %535
  %537 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %538 = load i32, i32* %537, align 4
  %539 = add nsw i32 %538, %536
  store i32 %539, i32* %537, align 4
  %540 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %541 = load i32, i32* %540, align 4
  %542 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %543 = load i32, i32* %542, align 4
  %544 = add nsw i32 %543, %541
  store i32 %544, i32* %542, align 4
  %545 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %546 = load i32, i32* %545, align 16
  %547 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %546, i32 2)
  %548 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %549 = load i32, i32* %548, align 16
  %550 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %549, i32 13)
  %551 = xor i32 %547, %550
  %552 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %553 = load i32, i32* %552, align 16
  %554 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %553, i32 22)
  %555 = xor i32 %551, %554
  %556 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %557 = load i32, i32* %556, align 16
  %558 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %559 = load i32, i32* %558, align 4
  %560 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %561 = load i32, i32* %560, align 8
  %562 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Maj to i32 (i32, i32, i32, ...)*)(i32 %557, i32 %559, i32 %561)
  %563 = add nsw i32 %555, %562
  %564 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %565 = load i32, i32* %564, align 4
  %566 = add nsw i32 %565, %563
  store i32 %566, i32* %564, align 4
  %567 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %568 = load i32, i32* %567, align 4
  %569 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %568, i32 6)
  %570 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %571 = load i32, i32* %570, align 4
  %572 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %571, i32 11)
  %573 = xor i32 %569, %572
  %574 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %575 = load i32, i32* %574, align 4
  %576 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %575, i32 25)
  %577 = xor i32 %573, %576
  %578 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %579 = load i32, i32* %578, align 4
  %580 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %581 = load i32, i32* %580, align 16
  %582 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %583 = load i32, i32* %582, align 4
  %584 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Ch to i32 (i32, i32, i32, ...)*)(i32 %579, i32 %581, i32 %583)
  %585 = add nsw i32 %577, %584
  %586 = load i32, i32* %7, align 4
  %587 = add nsw i32 9, %586
  %588 = sext i32 %587 to i64
  %589 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %588
  %590 = load i32, i32* %589, align 4
  %591 = add nsw i32 %585, %590
  %592 = load i32, i32* %7, align 4
  %593 = add nsw i32 9, %592
  %594 = sext i32 %593 to i64
  %595 = getelementptr inbounds [64 x i32], [64 x i32]* @SHA256_Transform.K, i64 0, i64 %594
  %596 = load i32, i32* %595, align 4
  %597 = add nsw i32 %591, %596
  %598 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %599 = load i32, i32* %598, align 8
  %600 = add nsw i32 %599, %597
  store i32 %600, i32* %598, align 8
  %601 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %602 = load i32, i32* %601, align 8
  %603 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %604 = load i32, i32* %603, align 8
  %605 = add nsw i32 %604, %602
  store i32 %605, i32* %603, align 8
  %606 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %607 = load i32, i32* %606, align 4
  %608 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %607, i32 2)
  %609 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %610 = load i32, i32* %609, align 4
  %611 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %610, i32 13)
  %612 = xor i32 %608, %611
  %613 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %614 = load i32, i32* %613, align 4
  %615 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %614, i32 22)
  %616 = xor i32 %612, %615
  %617 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %618 = load i32, i32* %617, align 4
  %619 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %620 = load i32, i32* %619, align 16
  %621 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %622 = load i32, i32* %621, align 4
  %623 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Maj to i32 (i32, i32, i32, ...)*)(i32 %618, i32 %620, i32 %622)
  %624 = add nsw i32 %616, %623
  %625 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %626 = load i32, i32* %625, align 8
  %627 = add nsw i32 %626, %624
  store i32 %627, i32* %625, align 8
  %628 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %629 = load i32, i32* %628, align 8
  %630 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %629, i32 6)
  %631 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %632 = load i32, i32* %631, align 8
  %633 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %632, i32 11)
  %634 = xor i32 %630, %633
  %635 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %636 = load i32, i32* %635, align 8
  %637 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %636, i32 25)
  %638 = xor i32 %634, %637
  %639 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %640 = load i32, i32* %639, align 8
  %641 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %642 = load i32, i32* %641, align 4
  %643 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %644 = load i32, i32* %643, align 16
  %645 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Ch to i32 (i32, i32, i32, ...)*)(i32 %640, i32 %642, i32 %644)
  %646 = add nsw i32 %638, %645
  %647 = load i32, i32* %7, align 4
  %648 = add nsw i32 10, %647
  %649 = sext i32 %648 to i64
  %650 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %649
  %651 = load i32, i32* %650, align 4
  %652 = add nsw i32 %646, %651
  %653 = load i32, i32* %7, align 4
  %654 = add nsw i32 10, %653
  %655 = sext i32 %654 to i64
  %656 = getelementptr inbounds [64 x i32], [64 x i32]* @SHA256_Transform.K, i64 0, i64 %655
  %657 = load i32, i32* %656, align 4
  %658 = add nsw i32 %652, %657
  %659 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %660 = load i32, i32* %659, align 4
  %661 = add nsw i32 %660, %658
  store i32 %661, i32* %659, align 4
  %662 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %663 = load i32, i32* %662, align 4
  %664 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %665 = load i32, i32* %664, align 4
  %666 = add nsw i32 %665, %663
  store i32 %666, i32* %664, align 4
  %667 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %668 = load i32, i32* %667, align 8
  %669 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %668, i32 2)
  %670 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %671 = load i32, i32* %670, align 8
  %672 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %671, i32 13)
  %673 = xor i32 %669, %672
  %674 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %675 = load i32, i32* %674, align 8
  %676 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %675, i32 22)
  %677 = xor i32 %673, %676
  %678 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %679 = load i32, i32* %678, align 8
  %680 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %681 = load i32, i32* %680, align 4
  %682 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %683 = load i32, i32* %682, align 16
  %684 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Maj to i32 (i32, i32, i32, ...)*)(i32 %679, i32 %681, i32 %683)
  %685 = add nsw i32 %677, %684
  %686 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %687 = load i32, i32* %686, align 4
  %688 = add nsw i32 %687, %685
  store i32 %688, i32* %686, align 4
  %689 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %690 = load i32, i32* %689, align 4
  %691 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %690, i32 6)
  %692 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %693 = load i32, i32* %692, align 4
  %694 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %693, i32 11)
  %695 = xor i32 %691, %694
  %696 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %697 = load i32, i32* %696, align 4
  %698 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %697, i32 25)
  %699 = xor i32 %695, %698
  %700 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %701 = load i32, i32* %700, align 4
  %702 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %703 = load i32, i32* %702, align 8
  %704 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %705 = load i32, i32* %704, align 4
  %706 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Ch to i32 (i32, i32, i32, ...)*)(i32 %701, i32 %703, i32 %705)
  %707 = add nsw i32 %699, %706
  %708 = load i32, i32* %7, align 4
  %709 = add nsw i32 11, %708
  %710 = sext i32 %709 to i64
  %711 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %710
  %712 = load i32, i32* %711, align 4
  %713 = add nsw i32 %707, %712
  %714 = load i32, i32* %7, align 4
  %715 = add nsw i32 11, %714
  %716 = sext i32 %715 to i64
  %717 = getelementptr inbounds [64 x i32], [64 x i32]* @SHA256_Transform.K, i64 0, i64 %716
  %718 = load i32, i32* %717, align 4
  %719 = add nsw i32 %713, %718
  %720 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %721 = load i32, i32* %720, align 16
  %722 = add nsw i32 %721, %719
  store i32 %722, i32* %720, align 16
  %723 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %724 = load i32, i32* %723, align 16
  %725 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %726 = load i32, i32* %725, align 16
  %727 = add nsw i32 %726, %724
  store i32 %727, i32* %725, align 16
  %728 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %729 = load i32, i32* %728, align 4
  %730 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %729, i32 2)
  %731 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %732 = load i32, i32* %731, align 4
  %733 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %732, i32 13)
  %734 = xor i32 %730, %733
  %735 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %736 = load i32, i32* %735, align 4
  %737 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %736, i32 22)
  %738 = xor i32 %734, %737
  %739 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %740 = load i32, i32* %739, align 4
  %741 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %742 = load i32, i32* %741, align 8
  %743 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %744 = load i32, i32* %743, align 4
  %745 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Maj to i32 (i32, i32, i32, ...)*)(i32 %740, i32 %742, i32 %744)
  %746 = add nsw i32 %738, %745
  %747 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %748 = load i32, i32* %747, align 16
  %749 = add nsw i32 %748, %746
  store i32 %749, i32* %747, align 16
  %750 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %751 = load i32, i32* %750, align 16
  %752 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %751, i32 6)
  %753 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %754 = load i32, i32* %753, align 16
  %755 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %754, i32 11)
  %756 = xor i32 %752, %755
  %757 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %758 = load i32, i32* %757, align 16
  %759 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %758, i32 25)
  %760 = xor i32 %756, %759
  %761 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %762 = load i32, i32* %761, align 16
  %763 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %764 = load i32, i32* %763, align 4
  %765 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %766 = load i32, i32* %765, align 8
  %767 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Ch to i32 (i32, i32, i32, ...)*)(i32 %762, i32 %764, i32 %766)
  %768 = add nsw i32 %760, %767
  %769 = load i32, i32* %7, align 4
  %770 = add nsw i32 12, %769
  %771 = sext i32 %770 to i64
  %772 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %771
  %773 = load i32, i32* %772, align 4
  %774 = add nsw i32 %768, %773
  %775 = load i32, i32* %7, align 4
  %776 = add nsw i32 12, %775
  %777 = sext i32 %776 to i64
  %778 = getelementptr inbounds [64 x i32], [64 x i32]* @SHA256_Transform.K, i64 0, i64 %777
  %779 = load i32, i32* %778, align 4
  %780 = add nsw i32 %774, %779
  %781 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %782 = load i32, i32* %781, align 4
  %783 = add nsw i32 %782, %780
  store i32 %783, i32* %781, align 4
  %784 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %785 = load i32, i32* %784, align 4
  %786 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %787 = load i32, i32* %786, align 4
  %788 = add nsw i32 %787, %785
  store i32 %788, i32* %786, align 4
  %789 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %790 = load i32, i32* %789, align 16
  %791 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %790, i32 2)
  %792 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %793 = load i32, i32* %792, align 16
  %794 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %793, i32 13)
  %795 = xor i32 %791, %794
  %796 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %797 = load i32, i32* %796, align 16
  %798 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %797, i32 22)
  %799 = xor i32 %795, %798
  %800 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %801 = load i32, i32* %800, align 16
  %802 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %803 = load i32, i32* %802, align 4
  %804 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %805 = load i32, i32* %804, align 8
  %806 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Maj to i32 (i32, i32, i32, ...)*)(i32 %801, i32 %803, i32 %805)
  %807 = add nsw i32 %799, %806
  %808 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %809 = load i32, i32* %808, align 4
  %810 = add nsw i32 %809, %807
  store i32 %810, i32* %808, align 4
  %811 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %812 = load i32, i32* %811, align 4
  %813 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %812, i32 6)
  %814 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %815 = load i32, i32* %814, align 4
  %816 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %815, i32 11)
  %817 = xor i32 %813, %816
  %818 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %819 = load i32, i32* %818, align 4
  %820 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %819, i32 25)
  %821 = xor i32 %817, %820
  %822 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %823 = load i32, i32* %822, align 4
  %824 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %825 = load i32, i32* %824, align 16
  %826 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %827 = load i32, i32* %826, align 4
  %828 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Ch to i32 (i32, i32, i32, ...)*)(i32 %823, i32 %825, i32 %827)
  %829 = add nsw i32 %821, %828
  %830 = load i32, i32* %7, align 4
  %831 = add nsw i32 13, %830
  %832 = sext i32 %831 to i64
  %833 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %832
  %834 = load i32, i32* %833, align 4
  %835 = add nsw i32 %829, %834
  %836 = load i32, i32* %7, align 4
  %837 = add nsw i32 13, %836
  %838 = sext i32 %837 to i64
  %839 = getelementptr inbounds [64 x i32], [64 x i32]* @SHA256_Transform.K, i64 0, i64 %838
  %840 = load i32, i32* %839, align 4
  %841 = add nsw i32 %835, %840
  %842 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %843 = load i32, i32* %842, align 8
  %844 = add nsw i32 %843, %841
  store i32 %844, i32* %842, align 8
  %845 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %846 = load i32, i32* %845, align 8
  %847 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %848 = load i32, i32* %847, align 8
  %849 = add nsw i32 %848, %846
  store i32 %849, i32* %847, align 8
  %850 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %851 = load i32, i32* %850, align 4
  %852 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %851, i32 2)
  %853 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %854 = load i32, i32* %853, align 4
  %855 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %854, i32 13)
  %856 = xor i32 %852, %855
  %857 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %858 = load i32, i32* %857, align 4
  %859 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %858, i32 22)
  %860 = xor i32 %856, %859
  %861 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %862 = load i32, i32* %861, align 4
  %863 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %864 = load i32, i32* %863, align 16
  %865 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %866 = load i32, i32* %865, align 4
  %867 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Maj to i32 (i32, i32, i32, ...)*)(i32 %862, i32 %864, i32 %866)
  %868 = add nsw i32 %860, %867
  %869 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %870 = load i32, i32* %869, align 8
  %871 = add nsw i32 %870, %868
  store i32 %871, i32* %869, align 8
  %872 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %873 = load i32, i32* %872, align 8
  %874 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %873, i32 6)
  %875 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %876 = load i32, i32* %875, align 8
  %877 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %876, i32 11)
  %878 = xor i32 %874, %877
  %879 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %880 = load i32, i32* %879, align 8
  %881 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %880, i32 25)
  %882 = xor i32 %878, %881
  %883 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %884 = load i32, i32* %883, align 8
  %885 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %886 = load i32, i32* %885, align 4
  %887 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %888 = load i32, i32* %887, align 16
  %889 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Ch to i32 (i32, i32, i32, ...)*)(i32 %884, i32 %886, i32 %888)
  %890 = add nsw i32 %882, %889
  %891 = load i32, i32* %7, align 4
  %892 = add nsw i32 14, %891
  %893 = sext i32 %892 to i64
  %894 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %893
  %895 = load i32, i32* %894, align 4
  %896 = add nsw i32 %890, %895
  %897 = load i32, i32* %7, align 4
  %898 = add nsw i32 14, %897
  %899 = sext i32 %898 to i64
  %900 = getelementptr inbounds [64 x i32], [64 x i32]* @SHA256_Transform.K, i64 0, i64 %899
  %901 = load i32, i32* %900, align 4
  %902 = add nsw i32 %896, %901
  %903 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %904 = load i32, i32* %903, align 4
  %905 = add nsw i32 %904, %902
  store i32 %905, i32* %903, align 4
  %906 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %907 = load i32, i32* %906, align 4
  %908 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %909 = load i32, i32* %908, align 4
  %910 = add nsw i32 %909, %907
  store i32 %910, i32* %908, align 4
  %911 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %912 = load i32, i32* %911, align 8
  %913 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %912, i32 2)
  %914 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %915 = load i32, i32* %914, align 8
  %916 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %915, i32 13)
  %917 = xor i32 %913, %916
  %918 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %919 = load i32, i32* %918, align 8
  %920 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %919, i32 22)
  %921 = xor i32 %917, %920
  %922 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %923 = load i32, i32* %922, align 8
  %924 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %925 = load i32, i32* %924, align 4
  %926 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %927 = load i32, i32* %926, align 16
  %928 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Maj to i32 (i32, i32, i32, ...)*)(i32 %923, i32 %925, i32 %927)
  %929 = add nsw i32 %921, %928
  %930 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %931 = load i32, i32* %930, align 4
  %932 = add nsw i32 %931, %929
  store i32 %932, i32* %930, align 4
  %933 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %934 = load i32, i32* %933, align 4
  %935 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %934, i32 6)
  %936 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %937 = load i32, i32* %936, align 4
  %938 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %937, i32 11)
  %939 = xor i32 %935, %938
  %940 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %941 = load i32, i32* %940, align 4
  %942 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %941, i32 25)
  %943 = xor i32 %939, %942
  %944 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 5
  %945 = load i32, i32* %944, align 4
  %946 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 6
  %947 = load i32, i32* %946, align 8
  %948 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 7
  %949 = load i32, i32* %948, align 4
  %950 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Ch to i32 (i32, i32, i32, ...)*)(i32 %945, i32 %947, i32 %949)
  %951 = add nsw i32 %943, %950
  %952 = load i32, i32* %7, align 4
  %953 = add nsw i32 15, %952
  %954 = sext i32 %953 to i64
  %955 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %954
  %956 = load i32, i32* %955, align 4
  %957 = add nsw i32 %951, %956
  %958 = load i32, i32* %7, align 4
  %959 = add nsw i32 15, %958
  %960 = sext i32 %959 to i64
  %961 = getelementptr inbounds [64 x i32], [64 x i32]* @SHA256_Transform.K, i64 0, i64 %960
  %962 = load i32, i32* %961, align 4
  %963 = add nsw i32 %957, %962
  %964 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %965 = load i32, i32* %964, align 16
  %966 = add nsw i32 %965, %963
  store i32 %966, i32* %964, align 16
  %967 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %968 = load i32, i32* %967, align 16
  %969 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 4
  %970 = load i32, i32* %969, align 16
  %971 = add nsw i32 %970, %968
  store i32 %971, i32* %969, align 16
  %972 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %973 = load i32, i32* %972, align 4
  %974 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %973, i32 2)
  %975 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %976 = load i32, i32* %975, align 4
  %977 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %976, i32 13)
  %978 = xor i32 %974, %977
  %979 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %980 = load i32, i32* %979, align 4
  %981 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %980, i32 22)
  %982 = xor i32 %978, %981
  %983 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 1
  %984 = load i32, i32* %983, align 4
  %985 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 2
  %986 = load i32, i32* %985, align 8
  %987 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 3
  %988 = load i32, i32* %987, align 4
  %989 = call i32 (i32, i32, i32, ...) bitcast (i32 (...)* @Maj to i32 (i32, i32, i32, ...)*)(i32 %984, i32 %986, i32 %988)
  %990 = add nsw i32 %982, %989
  %991 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 0
  %992 = load i32, i32* %991, align 16
  %993 = add nsw i32 %992, %990
  store i32 %993, i32* %991, align 16
  %994 = load i32, i32* %7, align 4
  %995 = icmp eq i32 %994, 48
  br i1 %995, label %996, label %997

996:                                              ; preds = %17
  br label %2041

997:                                              ; preds = %17
  %998 = load i32, i32* %7, align 4
  %999 = add nsw i32 %998, 0
  %1000 = add nsw i32 %999, 14
  %1001 = sext i32 %1000 to i64
  %1002 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1001
  %1003 = load i32, i32* %1002, align 4
  %1004 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1003, i32 17)
  %1005 = load i32, i32* %7, align 4
  %1006 = add nsw i32 %1005, 0
  %1007 = add nsw i32 %1006, 14
  %1008 = sext i32 %1007 to i64
  %1009 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1008
  %1010 = load i32, i32* %1009, align 4
  %1011 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1010, i32 19)
  %1012 = xor i32 %1004, %1011
  %1013 = load i32, i32* %7, align 4
  %1014 = add nsw i32 %1013, 0
  %1015 = add nsw i32 %1014, 14
  %1016 = sext i32 %1015 to i64
  %1017 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1016
  %1018 = load i32, i32* %1017, align 4
  %1019 = ashr i32 %1018, 10
  %1020 = xor i32 %1012, %1019
  %1021 = load i32, i32* %7, align 4
  %1022 = add nsw i32 %1021, 0
  %1023 = add nsw i32 %1022, 9
  %1024 = sext i32 %1023 to i64
  %1025 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1024
  %1026 = load i32, i32* %1025, align 4
  %1027 = add nsw i32 %1020, %1026
  %1028 = load i32, i32* %7, align 4
  %1029 = add nsw i32 %1028, 0
  %1030 = add nsw i32 %1029, 1
  %1031 = sext i32 %1030 to i64
  %1032 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1031
  %1033 = load i32, i32* %1032, align 4
  %1034 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1033, i32 7)
  %1035 = load i32, i32* %7, align 4
  %1036 = add nsw i32 %1035, 0
  %1037 = add nsw i32 %1036, 1
  %1038 = sext i32 %1037 to i64
  %1039 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1038
  %1040 = load i32, i32* %1039, align 4
  %1041 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1040, i32 18)
  %1042 = xor i32 %1034, %1041
  %1043 = load i32, i32* %7, align 4
  %1044 = add nsw i32 %1043, 0
  %1045 = add nsw i32 %1044, 1
  %1046 = sext i32 %1045 to i64
  %1047 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1046
  %1048 = load i32, i32* %1047, align 4
  %1049 = ashr i32 %1048, 3
  %1050 = xor i32 %1042, %1049
  %1051 = add nsw i32 %1027, %1050
  %1052 = load i32, i32* %7, align 4
  %1053 = add nsw i32 %1052, 0
  %1054 = sext i32 %1053 to i64
  %1055 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1054
  %1056 = load i32, i32* %1055, align 4
  %1057 = add nsw i32 %1051, %1056
  %1058 = load i32, i32* %7, align 4
  %1059 = add nsw i32 %1058, 0
  %1060 = add nsw i32 %1059, 16
  %1061 = sext i32 %1060 to i64
  %1062 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1061
  store i32 %1057, i32* %1062, align 4
  %1063 = load i32, i32* %7, align 4
  %1064 = add nsw i32 %1063, 1
  %1065 = add nsw i32 %1064, 14
  %1066 = sext i32 %1065 to i64
  %1067 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1066
  %1068 = load i32, i32* %1067, align 4
  %1069 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1068, i32 17)
  %1070 = load i32, i32* %7, align 4
  %1071 = add nsw i32 %1070, 1
  %1072 = add nsw i32 %1071, 14
  %1073 = sext i32 %1072 to i64
  %1074 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1073
  %1075 = load i32, i32* %1074, align 4
  %1076 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1075, i32 19)
  %1077 = xor i32 %1069, %1076
  %1078 = load i32, i32* %7, align 4
  %1079 = add nsw i32 %1078, 1
  %1080 = add nsw i32 %1079, 14
  %1081 = sext i32 %1080 to i64
  %1082 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1081
  %1083 = load i32, i32* %1082, align 4
  %1084 = ashr i32 %1083, 10
  %1085 = xor i32 %1077, %1084
  %1086 = load i32, i32* %7, align 4
  %1087 = add nsw i32 %1086, 1
  %1088 = add nsw i32 %1087, 9
  %1089 = sext i32 %1088 to i64
  %1090 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1089
  %1091 = load i32, i32* %1090, align 4
  %1092 = add nsw i32 %1085, %1091
  %1093 = load i32, i32* %7, align 4
  %1094 = add nsw i32 %1093, 1
  %1095 = add nsw i32 %1094, 1
  %1096 = sext i32 %1095 to i64
  %1097 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1096
  %1098 = load i32, i32* %1097, align 4
  %1099 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1098, i32 7)
  %1100 = load i32, i32* %7, align 4
  %1101 = add nsw i32 %1100, 1
  %1102 = add nsw i32 %1101, 1
  %1103 = sext i32 %1102 to i64
  %1104 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1103
  %1105 = load i32, i32* %1104, align 4
  %1106 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1105, i32 18)
  %1107 = xor i32 %1099, %1106
  %1108 = load i32, i32* %7, align 4
  %1109 = add nsw i32 %1108, 1
  %1110 = add nsw i32 %1109, 1
  %1111 = sext i32 %1110 to i64
  %1112 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1111
  %1113 = load i32, i32* %1112, align 4
  %1114 = ashr i32 %1113, 3
  %1115 = xor i32 %1107, %1114
  %1116 = add nsw i32 %1092, %1115
  %1117 = load i32, i32* %7, align 4
  %1118 = add nsw i32 %1117, 1
  %1119 = sext i32 %1118 to i64
  %1120 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1119
  %1121 = load i32, i32* %1120, align 4
  %1122 = add nsw i32 %1116, %1121
  %1123 = load i32, i32* %7, align 4
  %1124 = add nsw i32 %1123, 1
  %1125 = add nsw i32 %1124, 16
  %1126 = sext i32 %1125 to i64
  %1127 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1126
  store i32 %1122, i32* %1127, align 4
  %1128 = load i32, i32* %7, align 4
  %1129 = add nsw i32 %1128, 2
  %1130 = add nsw i32 %1129, 14
  %1131 = sext i32 %1130 to i64
  %1132 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1131
  %1133 = load i32, i32* %1132, align 4
  %1134 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1133, i32 17)
  %1135 = load i32, i32* %7, align 4
  %1136 = add nsw i32 %1135, 2
  %1137 = add nsw i32 %1136, 14
  %1138 = sext i32 %1137 to i64
  %1139 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1138
  %1140 = load i32, i32* %1139, align 4
  %1141 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1140, i32 19)
  %1142 = xor i32 %1134, %1141
  %1143 = load i32, i32* %7, align 4
  %1144 = add nsw i32 %1143, 2
  %1145 = add nsw i32 %1144, 14
  %1146 = sext i32 %1145 to i64
  %1147 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1146
  %1148 = load i32, i32* %1147, align 4
  %1149 = ashr i32 %1148, 10
  %1150 = xor i32 %1142, %1149
  %1151 = load i32, i32* %7, align 4
  %1152 = add nsw i32 %1151, 2
  %1153 = add nsw i32 %1152, 9
  %1154 = sext i32 %1153 to i64
  %1155 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1154
  %1156 = load i32, i32* %1155, align 4
  %1157 = add nsw i32 %1150, %1156
  %1158 = load i32, i32* %7, align 4
  %1159 = add nsw i32 %1158, 2
  %1160 = add nsw i32 %1159, 1
  %1161 = sext i32 %1160 to i64
  %1162 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1161
  %1163 = load i32, i32* %1162, align 4
  %1164 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1163, i32 7)
  %1165 = load i32, i32* %7, align 4
  %1166 = add nsw i32 %1165, 2
  %1167 = add nsw i32 %1166, 1
  %1168 = sext i32 %1167 to i64
  %1169 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1168
  %1170 = load i32, i32* %1169, align 4
  %1171 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1170, i32 18)
  %1172 = xor i32 %1164, %1171
  %1173 = load i32, i32* %7, align 4
  %1174 = add nsw i32 %1173, 2
  %1175 = add nsw i32 %1174, 1
  %1176 = sext i32 %1175 to i64
  %1177 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1176
  %1178 = load i32, i32* %1177, align 4
  %1179 = ashr i32 %1178, 3
  %1180 = xor i32 %1172, %1179
  %1181 = add nsw i32 %1157, %1180
  %1182 = load i32, i32* %7, align 4
  %1183 = add nsw i32 %1182, 2
  %1184 = sext i32 %1183 to i64
  %1185 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1184
  %1186 = load i32, i32* %1185, align 4
  %1187 = add nsw i32 %1181, %1186
  %1188 = load i32, i32* %7, align 4
  %1189 = add nsw i32 %1188, 2
  %1190 = add nsw i32 %1189, 16
  %1191 = sext i32 %1190 to i64
  %1192 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1191
  store i32 %1187, i32* %1192, align 4
  %1193 = load i32, i32* %7, align 4
  %1194 = add nsw i32 %1193, 3
  %1195 = add nsw i32 %1194, 14
  %1196 = sext i32 %1195 to i64
  %1197 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1196
  %1198 = load i32, i32* %1197, align 4
  %1199 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1198, i32 17)
  %1200 = load i32, i32* %7, align 4
  %1201 = add nsw i32 %1200, 3
  %1202 = add nsw i32 %1201, 14
  %1203 = sext i32 %1202 to i64
  %1204 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1203
  %1205 = load i32, i32* %1204, align 4
  %1206 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1205, i32 19)
  %1207 = xor i32 %1199, %1206
  %1208 = load i32, i32* %7, align 4
  %1209 = add nsw i32 %1208, 3
  %1210 = add nsw i32 %1209, 14
  %1211 = sext i32 %1210 to i64
  %1212 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1211
  %1213 = load i32, i32* %1212, align 4
  %1214 = ashr i32 %1213, 10
  %1215 = xor i32 %1207, %1214
  %1216 = load i32, i32* %7, align 4
  %1217 = add nsw i32 %1216, 3
  %1218 = add nsw i32 %1217, 9
  %1219 = sext i32 %1218 to i64
  %1220 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1219
  %1221 = load i32, i32* %1220, align 4
  %1222 = add nsw i32 %1215, %1221
  %1223 = load i32, i32* %7, align 4
  %1224 = add nsw i32 %1223, 3
  %1225 = add nsw i32 %1224, 1
  %1226 = sext i32 %1225 to i64
  %1227 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1226
  %1228 = load i32, i32* %1227, align 4
  %1229 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1228, i32 7)
  %1230 = load i32, i32* %7, align 4
  %1231 = add nsw i32 %1230, 3
  %1232 = add nsw i32 %1231, 1
  %1233 = sext i32 %1232 to i64
  %1234 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1233
  %1235 = load i32, i32* %1234, align 4
  %1236 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1235, i32 18)
  %1237 = xor i32 %1229, %1236
  %1238 = load i32, i32* %7, align 4
  %1239 = add nsw i32 %1238, 3
  %1240 = add nsw i32 %1239, 1
  %1241 = sext i32 %1240 to i64
  %1242 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1241
  %1243 = load i32, i32* %1242, align 4
  %1244 = ashr i32 %1243, 3
  %1245 = xor i32 %1237, %1244
  %1246 = add nsw i32 %1222, %1245
  %1247 = load i32, i32* %7, align 4
  %1248 = add nsw i32 %1247, 3
  %1249 = sext i32 %1248 to i64
  %1250 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1249
  %1251 = load i32, i32* %1250, align 4
  %1252 = add nsw i32 %1246, %1251
  %1253 = load i32, i32* %7, align 4
  %1254 = add nsw i32 %1253, 3
  %1255 = add nsw i32 %1254, 16
  %1256 = sext i32 %1255 to i64
  %1257 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1256
  store i32 %1252, i32* %1257, align 4
  %1258 = load i32, i32* %7, align 4
  %1259 = add nsw i32 %1258, 4
  %1260 = add nsw i32 %1259, 14
  %1261 = sext i32 %1260 to i64
  %1262 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1261
  %1263 = load i32, i32* %1262, align 4
  %1264 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1263, i32 17)
  %1265 = load i32, i32* %7, align 4
  %1266 = add nsw i32 %1265, 4
  %1267 = add nsw i32 %1266, 14
  %1268 = sext i32 %1267 to i64
  %1269 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1268
  %1270 = load i32, i32* %1269, align 4
  %1271 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1270, i32 19)
  %1272 = xor i32 %1264, %1271
  %1273 = load i32, i32* %7, align 4
  %1274 = add nsw i32 %1273, 4
  %1275 = add nsw i32 %1274, 14
  %1276 = sext i32 %1275 to i64
  %1277 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1276
  %1278 = load i32, i32* %1277, align 4
  %1279 = ashr i32 %1278, 10
  %1280 = xor i32 %1272, %1279
  %1281 = load i32, i32* %7, align 4
  %1282 = add nsw i32 %1281, 4
  %1283 = add nsw i32 %1282, 9
  %1284 = sext i32 %1283 to i64
  %1285 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1284
  %1286 = load i32, i32* %1285, align 4
  %1287 = add nsw i32 %1280, %1286
  %1288 = load i32, i32* %7, align 4
  %1289 = add nsw i32 %1288, 4
  %1290 = add nsw i32 %1289, 1
  %1291 = sext i32 %1290 to i64
  %1292 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1291
  %1293 = load i32, i32* %1292, align 4
  %1294 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1293, i32 7)
  %1295 = load i32, i32* %7, align 4
  %1296 = add nsw i32 %1295, 4
  %1297 = add nsw i32 %1296, 1
  %1298 = sext i32 %1297 to i64
  %1299 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1298
  %1300 = load i32, i32* %1299, align 4
  %1301 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1300, i32 18)
  %1302 = xor i32 %1294, %1301
  %1303 = load i32, i32* %7, align 4
  %1304 = add nsw i32 %1303, 4
  %1305 = add nsw i32 %1304, 1
  %1306 = sext i32 %1305 to i64
  %1307 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1306
  %1308 = load i32, i32* %1307, align 4
  %1309 = ashr i32 %1308, 3
  %1310 = xor i32 %1302, %1309
  %1311 = add nsw i32 %1287, %1310
  %1312 = load i32, i32* %7, align 4
  %1313 = add nsw i32 %1312, 4
  %1314 = sext i32 %1313 to i64
  %1315 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1314
  %1316 = load i32, i32* %1315, align 4
  %1317 = add nsw i32 %1311, %1316
  %1318 = load i32, i32* %7, align 4
  %1319 = add nsw i32 %1318, 4
  %1320 = add nsw i32 %1319, 16
  %1321 = sext i32 %1320 to i64
  %1322 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1321
  store i32 %1317, i32* %1322, align 4
  %1323 = load i32, i32* %7, align 4
  %1324 = add nsw i32 %1323, 5
  %1325 = add nsw i32 %1324, 14
  %1326 = sext i32 %1325 to i64
  %1327 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1326
  %1328 = load i32, i32* %1327, align 4
  %1329 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1328, i32 17)
  %1330 = load i32, i32* %7, align 4
  %1331 = add nsw i32 %1330, 5
  %1332 = add nsw i32 %1331, 14
  %1333 = sext i32 %1332 to i64
  %1334 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1333
  %1335 = load i32, i32* %1334, align 4
  %1336 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1335, i32 19)
  %1337 = xor i32 %1329, %1336
  %1338 = load i32, i32* %7, align 4
  %1339 = add nsw i32 %1338, 5
  %1340 = add nsw i32 %1339, 14
  %1341 = sext i32 %1340 to i64
  %1342 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1341
  %1343 = load i32, i32* %1342, align 4
  %1344 = ashr i32 %1343, 10
  %1345 = xor i32 %1337, %1344
  %1346 = load i32, i32* %7, align 4
  %1347 = add nsw i32 %1346, 5
  %1348 = add nsw i32 %1347, 9
  %1349 = sext i32 %1348 to i64
  %1350 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1349
  %1351 = load i32, i32* %1350, align 4
  %1352 = add nsw i32 %1345, %1351
  %1353 = load i32, i32* %7, align 4
  %1354 = add nsw i32 %1353, 5
  %1355 = add nsw i32 %1354, 1
  %1356 = sext i32 %1355 to i64
  %1357 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1356
  %1358 = load i32, i32* %1357, align 4
  %1359 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1358, i32 7)
  %1360 = load i32, i32* %7, align 4
  %1361 = add nsw i32 %1360, 5
  %1362 = add nsw i32 %1361, 1
  %1363 = sext i32 %1362 to i64
  %1364 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1363
  %1365 = load i32, i32* %1364, align 4
  %1366 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1365, i32 18)
  %1367 = xor i32 %1359, %1366
  %1368 = load i32, i32* %7, align 4
  %1369 = add nsw i32 %1368, 5
  %1370 = add nsw i32 %1369, 1
  %1371 = sext i32 %1370 to i64
  %1372 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1371
  %1373 = load i32, i32* %1372, align 4
  %1374 = ashr i32 %1373, 3
  %1375 = xor i32 %1367, %1374
  %1376 = add nsw i32 %1352, %1375
  %1377 = load i32, i32* %7, align 4
  %1378 = add nsw i32 %1377, 5
  %1379 = sext i32 %1378 to i64
  %1380 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1379
  %1381 = load i32, i32* %1380, align 4
  %1382 = add nsw i32 %1376, %1381
  %1383 = load i32, i32* %7, align 4
  %1384 = add nsw i32 %1383, 5
  %1385 = add nsw i32 %1384, 16
  %1386 = sext i32 %1385 to i64
  %1387 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1386
  store i32 %1382, i32* %1387, align 4
  %1388 = load i32, i32* %7, align 4
  %1389 = add nsw i32 %1388, 6
  %1390 = add nsw i32 %1389, 14
  %1391 = sext i32 %1390 to i64
  %1392 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1391
  %1393 = load i32, i32* %1392, align 4
  %1394 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1393, i32 17)
  %1395 = load i32, i32* %7, align 4
  %1396 = add nsw i32 %1395, 6
  %1397 = add nsw i32 %1396, 14
  %1398 = sext i32 %1397 to i64
  %1399 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1398
  %1400 = load i32, i32* %1399, align 4
  %1401 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1400, i32 19)
  %1402 = xor i32 %1394, %1401
  %1403 = load i32, i32* %7, align 4
  %1404 = add nsw i32 %1403, 6
  %1405 = add nsw i32 %1404, 14
  %1406 = sext i32 %1405 to i64
  %1407 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1406
  %1408 = load i32, i32* %1407, align 4
  %1409 = ashr i32 %1408, 10
  %1410 = xor i32 %1402, %1409
  %1411 = load i32, i32* %7, align 4
  %1412 = add nsw i32 %1411, 6
  %1413 = add nsw i32 %1412, 9
  %1414 = sext i32 %1413 to i64
  %1415 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1414
  %1416 = load i32, i32* %1415, align 4
  %1417 = add nsw i32 %1410, %1416
  %1418 = load i32, i32* %7, align 4
  %1419 = add nsw i32 %1418, 6
  %1420 = add nsw i32 %1419, 1
  %1421 = sext i32 %1420 to i64
  %1422 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1421
  %1423 = load i32, i32* %1422, align 4
  %1424 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1423, i32 7)
  %1425 = load i32, i32* %7, align 4
  %1426 = add nsw i32 %1425, 6
  %1427 = add nsw i32 %1426, 1
  %1428 = sext i32 %1427 to i64
  %1429 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1428
  %1430 = load i32, i32* %1429, align 4
  %1431 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1430, i32 18)
  %1432 = xor i32 %1424, %1431
  %1433 = load i32, i32* %7, align 4
  %1434 = add nsw i32 %1433, 6
  %1435 = add nsw i32 %1434, 1
  %1436 = sext i32 %1435 to i64
  %1437 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1436
  %1438 = load i32, i32* %1437, align 4
  %1439 = ashr i32 %1438, 3
  %1440 = xor i32 %1432, %1439
  %1441 = add nsw i32 %1417, %1440
  %1442 = load i32, i32* %7, align 4
  %1443 = add nsw i32 %1442, 6
  %1444 = sext i32 %1443 to i64
  %1445 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1444
  %1446 = load i32, i32* %1445, align 4
  %1447 = add nsw i32 %1441, %1446
  %1448 = load i32, i32* %7, align 4
  %1449 = add nsw i32 %1448, 6
  %1450 = add nsw i32 %1449, 16
  %1451 = sext i32 %1450 to i64
  %1452 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1451
  store i32 %1447, i32* %1452, align 4
  %1453 = load i32, i32* %7, align 4
  %1454 = add nsw i32 %1453, 7
  %1455 = add nsw i32 %1454, 14
  %1456 = sext i32 %1455 to i64
  %1457 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1456
  %1458 = load i32, i32* %1457, align 4
  %1459 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1458, i32 17)
  %1460 = load i32, i32* %7, align 4
  %1461 = add nsw i32 %1460, 7
  %1462 = add nsw i32 %1461, 14
  %1463 = sext i32 %1462 to i64
  %1464 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1463
  %1465 = load i32, i32* %1464, align 4
  %1466 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1465, i32 19)
  %1467 = xor i32 %1459, %1466
  %1468 = load i32, i32* %7, align 4
  %1469 = add nsw i32 %1468, 7
  %1470 = add nsw i32 %1469, 14
  %1471 = sext i32 %1470 to i64
  %1472 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1471
  %1473 = load i32, i32* %1472, align 4
  %1474 = ashr i32 %1473, 10
  %1475 = xor i32 %1467, %1474
  %1476 = load i32, i32* %7, align 4
  %1477 = add nsw i32 %1476, 7
  %1478 = add nsw i32 %1477, 9
  %1479 = sext i32 %1478 to i64
  %1480 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1479
  %1481 = load i32, i32* %1480, align 4
  %1482 = add nsw i32 %1475, %1481
  %1483 = load i32, i32* %7, align 4
  %1484 = add nsw i32 %1483, 7
  %1485 = add nsw i32 %1484, 1
  %1486 = sext i32 %1485 to i64
  %1487 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1486
  %1488 = load i32, i32* %1487, align 4
  %1489 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1488, i32 7)
  %1490 = load i32, i32* %7, align 4
  %1491 = add nsw i32 %1490, 7
  %1492 = add nsw i32 %1491, 1
  %1493 = sext i32 %1492 to i64
  %1494 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1493
  %1495 = load i32, i32* %1494, align 4
  %1496 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1495, i32 18)
  %1497 = xor i32 %1489, %1496
  %1498 = load i32, i32* %7, align 4
  %1499 = add nsw i32 %1498, 7
  %1500 = add nsw i32 %1499, 1
  %1501 = sext i32 %1500 to i64
  %1502 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1501
  %1503 = load i32, i32* %1502, align 4
  %1504 = ashr i32 %1503, 3
  %1505 = xor i32 %1497, %1504
  %1506 = add nsw i32 %1482, %1505
  %1507 = load i32, i32* %7, align 4
  %1508 = add nsw i32 %1507, 7
  %1509 = sext i32 %1508 to i64
  %1510 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1509
  %1511 = load i32, i32* %1510, align 4
  %1512 = add nsw i32 %1506, %1511
  %1513 = load i32, i32* %7, align 4
  %1514 = add nsw i32 %1513, 7
  %1515 = add nsw i32 %1514, 16
  %1516 = sext i32 %1515 to i64
  %1517 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1516
  store i32 %1512, i32* %1517, align 4
  %1518 = load i32, i32* %7, align 4
  %1519 = add nsw i32 %1518, 8
  %1520 = add nsw i32 %1519, 14
  %1521 = sext i32 %1520 to i64
  %1522 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1521
  %1523 = load i32, i32* %1522, align 4
  %1524 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1523, i32 17)
  %1525 = load i32, i32* %7, align 4
  %1526 = add nsw i32 %1525, 8
  %1527 = add nsw i32 %1526, 14
  %1528 = sext i32 %1527 to i64
  %1529 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1528
  %1530 = load i32, i32* %1529, align 4
  %1531 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1530, i32 19)
  %1532 = xor i32 %1524, %1531
  %1533 = load i32, i32* %7, align 4
  %1534 = add nsw i32 %1533, 8
  %1535 = add nsw i32 %1534, 14
  %1536 = sext i32 %1535 to i64
  %1537 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1536
  %1538 = load i32, i32* %1537, align 4
  %1539 = ashr i32 %1538, 10
  %1540 = xor i32 %1532, %1539
  %1541 = load i32, i32* %7, align 4
  %1542 = add nsw i32 %1541, 8
  %1543 = add nsw i32 %1542, 9
  %1544 = sext i32 %1543 to i64
  %1545 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1544
  %1546 = load i32, i32* %1545, align 4
  %1547 = add nsw i32 %1540, %1546
  %1548 = load i32, i32* %7, align 4
  %1549 = add nsw i32 %1548, 8
  %1550 = add nsw i32 %1549, 1
  %1551 = sext i32 %1550 to i64
  %1552 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1551
  %1553 = load i32, i32* %1552, align 4
  %1554 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1553, i32 7)
  %1555 = load i32, i32* %7, align 4
  %1556 = add nsw i32 %1555, 8
  %1557 = add nsw i32 %1556, 1
  %1558 = sext i32 %1557 to i64
  %1559 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1558
  %1560 = load i32, i32* %1559, align 4
  %1561 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1560, i32 18)
  %1562 = xor i32 %1554, %1561
  %1563 = load i32, i32* %7, align 4
  %1564 = add nsw i32 %1563, 8
  %1565 = add nsw i32 %1564, 1
  %1566 = sext i32 %1565 to i64
  %1567 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1566
  %1568 = load i32, i32* %1567, align 4
  %1569 = ashr i32 %1568, 3
  %1570 = xor i32 %1562, %1569
  %1571 = add nsw i32 %1547, %1570
  %1572 = load i32, i32* %7, align 4
  %1573 = add nsw i32 %1572, 8
  %1574 = sext i32 %1573 to i64
  %1575 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1574
  %1576 = load i32, i32* %1575, align 4
  %1577 = add nsw i32 %1571, %1576
  %1578 = load i32, i32* %7, align 4
  %1579 = add nsw i32 %1578, 8
  %1580 = add nsw i32 %1579, 16
  %1581 = sext i32 %1580 to i64
  %1582 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1581
  store i32 %1577, i32* %1582, align 4
  %1583 = load i32, i32* %7, align 4
  %1584 = add nsw i32 %1583, 9
  %1585 = add nsw i32 %1584, 14
  %1586 = sext i32 %1585 to i64
  %1587 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1586
  %1588 = load i32, i32* %1587, align 4
  %1589 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1588, i32 17)
  %1590 = load i32, i32* %7, align 4
  %1591 = add nsw i32 %1590, 9
  %1592 = add nsw i32 %1591, 14
  %1593 = sext i32 %1592 to i64
  %1594 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1593
  %1595 = load i32, i32* %1594, align 4
  %1596 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1595, i32 19)
  %1597 = xor i32 %1589, %1596
  %1598 = load i32, i32* %7, align 4
  %1599 = add nsw i32 %1598, 9
  %1600 = add nsw i32 %1599, 14
  %1601 = sext i32 %1600 to i64
  %1602 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1601
  %1603 = load i32, i32* %1602, align 4
  %1604 = ashr i32 %1603, 10
  %1605 = xor i32 %1597, %1604
  %1606 = load i32, i32* %7, align 4
  %1607 = add nsw i32 %1606, 9
  %1608 = add nsw i32 %1607, 9
  %1609 = sext i32 %1608 to i64
  %1610 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1609
  %1611 = load i32, i32* %1610, align 4
  %1612 = add nsw i32 %1605, %1611
  %1613 = load i32, i32* %7, align 4
  %1614 = add nsw i32 %1613, 9
  %1615 = add nsw i32 %1614, 1
  %1616 = sext i32 %1615 to i64
  %1617 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1616
  %1618 = load i32, i32* %1617, align 4
  %1619 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1618, i32 7)
  %1620 = load i32, i32* %7, align 4
  %1621 = add nsw i32 %1620, 9
  %1622 = add nsw i32 %1621, 1
  %1623 = sext i32 %1622 to i64
  %1624 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1623
  %1625 = load i32, i32* %1624, align 4
  %1626 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1625, i32 18)
  %1627 = xor i32 %1619, %1626
  %1628 = load i32, i32* %7, align 4
  %1629 = add nsw i32 %1628, 9
  %1630 = add nsw i32 %1629, 1
  %1631 = sext i32 %1630 to i64
  %1632 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1631
  %1633 = load i32, i32* %1632, align 4
  %1634 = ashr i32 %1633, 3
  %1635 = xor i32 %1627, %1634
  %1636 = add nsw i32 %1612, %1635
  %1637 = load i32, i32* %7, align 4
  %1638 = add nsw i32 %1637, 9
  %1639 = sext i32 %1638 to i64
  %1640 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1639
  %1641 = load i32, i32* %1640, align 4
  %1642 = add nsw i32 %1636, %1641
  %1643 = load i32, i32* %7, align 4
  %1644 = add nsw i32 %1643, 9
  %1645 = add nsw i32 %1644, 16
  %1646 = sext i32 %1645 to i64
  %1647 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1646
  store i32 %1642, i32* %1647, align 4
  %1648 = load i32, i32* %7, align 4
  %1649 = add nsw i32 %1648, 10
  %1650 = add nsw i32 %1649, 14
  %1651 = sext i32 %1650 to i64
  %1652 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1651
  %1653 = load i32, i32* %1652, align 4
  %1654 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1653, i32 17)
  %1655 = load i32, i32* %7, align 4
  %1656 = add nsw i32 %1655, 10
  %1657 = add nsw i32 %1656, 14
  %1658 = sext i32 %1657 to i64
  %1659 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1658
  %1660 = load i32, i32* %1659, align 4
  %1661 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1660, i32 19)
  %1662 = xor i32 %1654, %1661
  %1663 = load i32, i32* %7, align 4
  %1664 = add nsw i32 %1663, 10
  %1665 = add nsw i32 %1664, 14
  %1666 = sext i32 %1665 to i64
  %1667 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1666
  %1668 = load i32, i32* %1667, align 4
  %1669 = ashr i32 %1668, 10
  %1670 = xor i32 %1662, %1669
  %1671 = load i32, i32* %7, align 4
  %1672 = add nsw i32 %1671, 10
  %1673 = add nsw i32 %1672, 9
  %1674 = sext i32 %1673 to i64
  %1675 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1674
  %1676 = load i32, i32* %1675, align 4
  %1677 = add nsw i32 %1670, %1676
  %1678 = load i32, i32* %7, align 4
  %1679 = add nsw i32 %1678, 10
  %1680 = add nsw i32 %1679, 1
  %1681 = sext i32 %1680 to i64
  %1682 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1681
  %1683 = load i32, i32* %1682, align 4
  %1684 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1683, i32 7)
  %1685 = load i32, i32* %7, align 4
  %1686 = add nsw i32 %1685, 10
  %1687 = add nsw i32 %1686, 1
  %1688 = sext i32 %1687 to i64
  %1689 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1688
  %1690 = load i32, i32* %1689, align 4
  %1691 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1690, i32 18)
  %1692 = xor i32 %1684, %1691
  %1693 = load i32, i32* %7, align 4
  %1694 = add nsw i32 %1693, 10
  %1695 = add nsw i32 %1694, 1
  %1696 = sext i32 %1695 to i64
  %1697 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1696
  %1698 = load i32, i32* %1697, align 4
  %1699 = ashr i32 %1698, 3
  %1700 = xor i32 %1692, %1699
  %1701 = add nsw i32 %1677, %1700
  %1702 = load i32, i32* %7, align 4
  %1703 = add nsw i32 %1702, 10
  %1704 = sext i32 %1703 to i64
  %1705 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1704
  %1706 = load i32, i32* %1705, align 4
  %1707 = add nsw i32 %1701, %1706
  %1708 = load i32, i32* %7, align 4
  %1709 = add nsw i32 %1708, 10
  %1710 = add nsw i32 %1709, 16
  %1711 = sext i32 %1710 to i64
  %1712 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1711
  store i32 %1707, i32* %1712, align 4
  %1713 = load i32, i32* %7, align 4
  %1714 = add nsw i32 %1713, 11
  %1715 = add nsw i32 %1714, 14
  %1716 = sext i32 %1715 to i64
  %1717 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1716
  %1718 = load i32, i32* %1717, align 4
  %1719 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1718, i32 17)
  %1720 = load i32, i32* %7, align 4
  %1721 = add nsw i32 %1720, 11
  %1722 = add nsw i32 %1721, 14
  %1723 = sext i32 %1722 to i64
  %1724 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1723
  %1725 = load i32, i32* %1724, align 4
  %1726 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1725, i32 19)
  %1727 = xor i32 %1719, %1726
  %1728 = load i32, i32* %7, align 4
  %1729 = add nsw i32 %1728, 11
  %1730 = add nsw i32 %1729, 14
  %1731 = sext i32 %1730 to i64
  %1732 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1731
  %1733 = load i32, i32* %1732, align 4
  %1734 = ashr i32 %1733, 10
  %1735 = xor i32 %1727, %1734
  %1736 = load i32, i32* %7, align 4
  %1737 = add nsw i32 %1736, 11
  %1738 = add nsw i32 %1737, 9
  %1739 = sext i32 %1738 to i64
  %1740 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1739
  %1741 = load i32, i32* %1740, align 4
  %1742 = add nsw i32 %1735, %1741
  %1743 = load i32, i32* %7, align 4
  %1744 = add nsw i32 %1743, 11
  %1745 = add nsw i32 %1744, 1
  %1746 = sext i32 %1745 to i64
  %1747 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1746
  %1748 = load i32, i32* %1747, align 4
  %1749 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1748, i32 7)
  %1750 = load i32, i32* %7, align 4
  %1751 = add nsw i32 %1750, 11
  %1752 = add nsw i32 %1751, 1
  %1753 = sext i32 %1752 to i64
  %1754 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1753
  %1755 = load i32, i32* %1754, align 4
  %1756 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1755, i32 18)
  %1757 = xor i32 %1749, %1756
  %1758 = load i32, i32* %7, align 4
  %1759 = add nsw i32 %1758, 11
  %1760 = add nsw i32 %1759, 1
  %1761 = sext i32 %1760 to i64
  %1762 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1761
  %1763 = load i32, i32* %1762, align 4
  %1764 = ashr i32 %1763, 3
  %1765 = xor i32 %1757, %1764
  %1766 = add nsw i32 %1742, %1765
  %1767 = load i32, i32* %7, align 4
  %1768 = add nsw i32 %1767, 11
  %1769 = sext i32 %1768 to i64
  %1770 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1769
  %1771 = load i32, i32* %1770, align 4
  %1772 = add nsw i32 %1766, %1771
  %1773 = load i32, i32* %7, align 4
  %1774 = add nsw i32 %1773, 11
  %1775 = add nsw i32 %1774, 16
  %1776 = sext i32 %1775 to i64
  %1777 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1776
  store i32 %1772, i32* %1777, align 4
  %1778 = load i32, i32* %7, align 4
  %1779 = add nsw i32 %1778, 12
  %1780 = add nsw i32 %1779, 14
  %1781 = sext i32 %1780 to i64
  %1782 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1781
  %1783 = load i32, i32* %1782, align 4
  %1784 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1783, i32 17)
  %1785 = load i32, i32* %7, align 4
  %1786 = add nsw i32 %1785, 12
  %1787 = add nsw i32 %1786, 14
  %1788 = sext i32 %1787 to i64
  %1789 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1788
  %1790 = load i32, i32* %1789, align 4
  %1791 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1790, i32 19)
  %1792 = xor i32 %1784, %1791
  %1793 = load i32, i32* %7, align 4
  %1794 = add nsw i32 %1793, 12
  %1795 = add nsw i32 %1794, 14
  %1796 = sext i32 %1795 to i64
  %1797 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1796
  %1798 = load i32, i32* %1797, align 4
  %1799 = ashr i32 %1798, 10
  %1800 = xor i32 %1792, %1799
  %1801 = load i32, i32* %7, align 4
  %1802 = add nsw i32 %1801, 12
  %1803 = add nsw i32 %1802, 9
  %1804 = sext i32 %1803 to i64
  %1805 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1804
  %1806 = load i32, i32* %1805, align 4
  %1807 = add nsw i32 %1800, %1806
  %1808 = load i32, i32* %7, align 4
  %1809 = add nsw i32 %1808, 12
  %1810 = add nsw i32 %1809, 1
  %1811 = sext i32 %1810 to i64
  %1812 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1811
  %1813 = load i32, i32* %1812, align 4
  %1814 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1813, i32 7)
  %1815 = load i32, i32* %7, align 4
  %1816 = add nsw i32 %1815, 12
  %1817 = add nsw i32 %1816, 1
  %1818 = sext i32 %1817 to i64
  %1819 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1818
  %1820 = load i32, i32* %1819, align 4
  %1821 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1820, i32 18)
  %1822 = xor i32 %1814, %1821
  %1823 = load i32, i32* %7, align 4
  %1824 = add nsw i32 %1823, 12
  %1825 = add nsw i32 %1824, 1
  %1826 = sext i32 %1825 to i64
  %1827 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1826
  %1828 = load i32, i32* %1827, align 4
  %1829 = ashr i32 %1828, 3
  %1830 = xor i32 %1822, %1829
  %1831 = add nsw i32 %1807, %1830
  %1832 = load i32, i32* %7, align 4
  %1833 = add nsw i32 %1832, 12
  %1834 = sext i32 %1833 to i64
  %1835 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1834
  %1836 = load i32, i32* %1835, align 4
  %1837 = add nsw i32 %1831, %1836
  %1838 = load i32, i32* %7, align 4
  %1839 = add nsw i32 %1838, 12
  %1840 = add nsw i32 %1839, 16
  %1841 = sext i32 %1840 to i64
  %1842 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1841
  store i32 %1837, i32* %1842, align 4
  %1843 = load i32, i32* %7, align 4
  %1844 = add nsw i32 %1843, 13
  %1845 = add nsw i32 %1844, 14
  %1846 = sext i32 %1845 to i64
  %1847 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1846
  %1848 = load i32, i32* %1847, align 4
  %1849 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1848, i32 17)
  %1850 = load i32, i32* %7, align 4
  %1851 = add nsw i32 %1850, 13
  %1852 = add nsw i32 %1851, 14
  %1853 = sext i32 %1852 to i64
  %1854 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1853
  %1855 = load i32, i32* %1854, align 4
  %1856 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1855, i32 19)
  %1857 = xor i32 %1849, %1856
  %1858 = load i32, i32* %7, align 4
  %1859 = add nsw i32 %1858, 13
  %1860 = add nsw i32 %1859, 14
  %1861 = sext i32 %1860 to i64
  %1862 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1861
  %1863 = load i32, i32* %1862, align 4
  %1864 = ashr i32 %1863, 10
  %1865 = xor i32 %1857, %1864
  %1866 = load i32, i32* %7, align 4
  %1867 = add nsw i32 %1866, 13
  %1868 = add nsw i32 %1867, 9
  %1869 = sext i32 %1868 to i64
  %1870 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1869
  %1871 = load i32, i32* %1870, align 4
  %1872 = add nsw i32 %1865, %1871
  %1873 = load i32, i32* %7, align 4
  %1874 = add nsw i32 %1873, 13
  %1875 = add nsw i32 %1874, 1
  %1876 = sext i32 %1875 to i64
  %1877 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1876
  %1878 = load i32, i32* %1877, align 4
  %1879 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1878, i32 7)
  %1880 = load i32, i32* %7, align 4
  %1881 = add nsw i32 %1880, 13
  %1882 = add nsw i32 %1881, 1
  %1883 = sext i32 %1882 to i64
  %1884 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1883
  %1885 = load i32, i32* %1884, align 4
  %1886 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1885, i32 18)
  %1887 = xor i32 %1879, %1886
  %1888 = load i32, i32* %7, align 4
  %1889 = add nsw i32 %1888, 13
  %1890 = add nsw i32 %1889, 1
  %1891 = sext i32 %1890 to i64
  %1892 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1891
  %1893 = load i32, i32* %1892, align 4
  %1894 = ashr i32 %1893, 3
  %1895 = xor i32 %1887, %1894
  %1896 = add nsw i32 %1872, %1895
  %1897 = load i32, i32* %7, align 4
  %1898 = add nsw i32 %1897, 13
  %1899 = sext i32 %1898 to i64
  %1900 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1899
  %1901 = load i32, i32* %1900, align 4
  %1902 = add nsw i32 %1896, %1901
  %1903 = load i32, i32* %7, align 4
  %1904 = add nsw i32 %1903, 13
  %1905 = add nsw i32 %1904, 16
  %1906 = sext i32 %1905 to i64
  %1907 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1906
  store i32 %1902, i32* %1907, align 4
  %1908 = load i32, i32* %7, align 4
  %1909 = add nsw i32 %1908, 14
  %1910 = add nsw i32 %1909, 14
  %1911 = sext i32 %1910 to i64
  %1912 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1911
  %1913 = load i32, i32* %1912, align 4
  %1914 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1913, i32 17)
  %1915 = load i32, i32* %7, align 4
  %1916 = add nsw i32 %1915, 14
  %1917 = add nsw i32 %1916, 14
  %1918 = sext i32 %1917 to i64
  %1919 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1918
  %1920 = load i32, i32* %1919, align 4
  %1921 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1920, i32 19)
  %1922 = xor i32 %1914, %1921
  %1923 = load i32, i32* %7, align 4
  %1924 = add nsw i32 %1923, 14
  %1925 = add nsw i32 %1924, 14
  %1926 = sext i32 %1925 to i64
  %1927 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1926
  %1928 = load i32, i32* %1927, align 4
  %1929 = ashr i32 %1928, 10
  %1930 = xor i32 %1922, %1929
  %1931 = load i32, i32* %7, align 4
  %1932 = add nsw i32 %1931, 14
  %1933 = add nsw i32 %1932, 9
  %1934 = sext i32 %1933 to i64
  %1935 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1934
  %1936 = load i32, i32* %1935, align 4
  %1937 = add nsw i32 %1930, %1936
  %1938 = load i32, i32* %7, align 4
  %1939 = add nsw i32 %1938, 14
  %1940 = add nsw i32 %1939, 1
  %1941 = sext i32 %1940 to i64
  %1942 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1941
  %1943 = load i32, i32* %1942, align 4
  %1944 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1943, i32 7)
  %1945 = load i32, i32* %7, align 4
  %1946 = add nsw i32 %1945, 14
  %1947 = add nsw i32 %1946, 1
  %1948 = sext i32 %1947 to i64
  %1949 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1948
  %1950 = load i32, i32* %1949, align 4
  %1951 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1950, i32 18)
  %1952 = xor i32 %1944, %1951
  %1953 = load i32, i32* %7, align 4
  %1954 = add nsw i32 %1953, 14
  %1955 = add nsw i32 %1954, 1
  %1956 = sext i32 %1955 to i64
  %1957 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1956
  %1958 = load i32, i32* %1957, align 4
  %1959 = ashr i32 %1958, 3
  %1960 = xor i32 %1952, %1959
  %1961 = add nsw i32 %1937, %1960
  %1962 = load i32, i32* %7, align 4
  %1963 = add nsw i32 %1962, 14
  %1964 = sext i32 %1963 to i64
  %1965 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1964
  %1966 = load i32, i32* %1965, align 4
  %1967 = add nsw i32 %1961, %1966
  %1968 = load i32, i32* %7, align 4
  %1969 = add nsw i32 %1968, 14
  %1970 = add nsw i32 %1969, 16
  %1971 = sext i32 %1970 to i64
  %1972 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1971
  store i32 %1967, i32* %1972, align 4
  %1973 = load i32, i32* %7, align 4
  %1974 = add nsw i32 %1973, 15
  %1975 = add nsw i32 %1974, 14
  %1976 = sext i32 %1975 to i64
  %1977 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1976
  %1978 = load i32, i32* %1977, align 4
  %1979 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1978, i32 17)
  %1980 = load i32, i32* %7, align 4
  %1981 = add nsw i32 %1980, 15
  %1982 = add nsw i32 %1981, 14
  %1983 = sext i32 %1982 to i64
  %1984 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1983
  %1985 = load i32, i32* %1984, align 4
  %1986 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %1985, i32 19)
  %1987 = xor i32 %1979, %1986
  %1988 = load i32, i32* %7, align 4
  %1989 = add nsw i32 %1988, 15
  %1990 = add nsw i32 %1989, 14
  %1991 = sext i32 %1990 to i64
  %1992 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1991
  %1993 = load i32, i32* %1992, align 4
  %1994 = ashr i32 %1993, 10
  %1995 = xor i32 %1987, %1994
  %1996 = load i32, i32* %7, align 4
  %1997 = add nsw i32 %1996, 15
  %1998 = add nsw i32 %1997, 9
  %1999 = sext i32 %1998 to i64
  %2000 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %1999
  %2001 = load i32, i32* %2000, align 4
  %2002 = add nsw i32 %1995, %2001
  %2003 = load i32, i32* %7, align 4
  %2004 = add nsw i32 %2003, 15
  %2005 = add nsw i32 %2004, 1
  %2006 = sext i32 %2005 to i64
  %2007 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %2006
  %2008 = load i32, i32* %2007, align 4
  %2009 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %2008, i32 7)
  %2010 = load i32, i32* %7, align 4
  %2011 = add nsw i32 %2010, 15
  %2012 = add nsw i32 %2011, 1
  %2013 = sext i32 %2012 to i64
  %2014 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %2013
  %2015 = load i32, i32* %2014, align 4
  %2016 = call i32 (i32, i32, ...) bitcast (i32 (...)* @ROTR to i32 (i32, i32, ...)*)(i32 %2015, i32 18)
  %2017 = xor i32 %2009, %2016
  %2018 = load i32, i32* %7, align 4
  %2019 = add nsw i32 %2018, 15
  %2020 = add nsw i32 %2019, 1
  %2021 = sext i32 %2020 to i64
  %2022 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %2021
  %2023 = load i32, i32* %2022, align 4
  %2024 = ashr i32 %2023, 3
  %2025 = xor i32 %2017, %2024
  %2026 = add nsw i32 %2002, %2025
  %2027 = load i32, i32* %7, align 4
  %2028 = add nsw i32 %2027, 15
  %2029 = sext i32 %2028 to i64
  %2030 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %2029
  %2031 = load i32, i32* %2030, align 4
  %2032 = add nsw i32 %2026, %2031
  %2033 = load i32, i32* %7, align 4
  %2034 = add nsw i32 %2033, 15
  %2035 = add nsw i32 %2034, 16
  %2036 = sext i32 %2035 to i64
  %2037 = getelementptr inbounds [64 x i32], [64 x i32]* %5, i64 0, i64 %2036
  store i32 %2032, i32* %2037, align 4
  br label %2038

2038:                                             ; preds = %997
  %2039 = load i32, i32* %7, align 4
  %2040 = add nsw i32 %2039, 16
  store i32 %2040, i32* %7, align 4
  br label %14

2041:                                             ; preds = %996, %14
  store i32 0, i32* %7, align 4
  br label %2042

2042:                                             ; preds = %2056, %2041
  %2043 = load i32, i32* %7, align 4
  %2044 = icmp slt i32 %2043, 8
  br i1 %2044, label %2045, label %2059

2045:                                             ; preds = %2042
  %2046 = load i32, i32* %7, align 4
  %2047 = sext i32 %2046 to i64
  %2048 = getelementptr inbounds [8 x i32], [8 x i32]* %6, i64 0, i64 %2047
  %2049 = load i32, i32* %2048, align 4
  %2050 = load i32*, i32** %3, align 8
  %2051 = load i32, i32* %7, align 4
  %2052 = sext i32 %2051 to i64
  %2053 = getelementptr inbounds i32, i32* %2050, i64 %2052
  %2054 = load i32, i32* %2053, align 4
  %2055 = add nsw i32 %2054, %2049
  store i32 %2055, i32* %2053, align 4
  br label %2056

2056:                                             ; preds = %2045
  %2057 = load i32, i32* %7, align 4
  %2058 = add nsw i32 %2057, 1
  store i32 %2058, i32* %7, align 4
  br label %2042

2059:                                             ; preds = %2042
  ret void
}

declare dso_local i32 @be32dec_vect(i32*, i8*, i32) #1

declare dso_local i32 @memcpy(i32*, i32*, i32) #1

declare dso_local i32 @ROTR(...) #1

declare dso_local i32 @Ch(...) #1

declare dso_local i32 @Maj(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
