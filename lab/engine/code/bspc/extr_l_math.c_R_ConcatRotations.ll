; ModuleID = '/home/carl/AnghaBench/lab/engine/code/bspc/extr_l_math.c_R_ConcatRotations.c'
source_filename = "/home/carl/AnghaBench/lab/engine/code/bspc/extr_l_math.c_R_ConcatRotations.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @R_ConcatRotations([3 x float]* %0, [3 x float]* %1, [3 x float]* %2) #0 {
  %4 = alloca [3 x float]*, align 8
  %5 = alloca [3 x float]*, align 8
  %6 = alloca [3 x float]*, align 8
  store [3 x float]* %0, [3 x float]** %4, align 8
  store [3 x float]* %1, [3 x float]** %5, align 8
  store [3 x float]* %2, [3 x float]** %6, align 8
  %7 = load [3 x float]*, [3 x float]** %4, align 8
  %8 = getelementptr inbounds [3 x float], [3 x float]* %7, i64 0
  %9 = getelementptr inbounds [3 x float], [3 x float]* %8, i64 0, i64 0
  %10 = load float, float* %9, align 4
  %11 = load [3 x float]*, [3 x float]** %5, align 8
  %12 = getelementptr inbounds [3 x float], [3 x float]* %11, i64 0
  %13 = getelementptr inbounds [3 x float], [3 x float]* %12, i64 0, i64 0
  %14 = load float, float* %13, align 4
  %15 = fmul float %10, %14
  %16 = load [3 x float]*, [3 x float]** %4, align 8
  %17 = getelementptr inbounds [3 x float], [3 x float]* %16, i64 0
  %18 = getelementptr inbounds [3 x float], [3 x float]* %17, i64 0, i64 1
  %19 = load float, float* %18, align 4
  %20 = load [3 x float]*, [3 x float]** %5, align 8
  %21 = getelementptr inbounds [3 x float], [3 x float]* %20, i64 1
  %22 = getelementptr inbounds [3 x float], [3 x float]* %21, i64 0, i64 0
  %23 = load float, float* %22, align 4
  %24 = fmul float %19, %23
  %25 = fadd float %15, %24
  %26 = load [3 x float]*, [3 x float]** %4, align 8
  %27 = getelementptr inbounds [3 x float], [3 x float]* %26, i64 0
  %28 = getelementptr inbounds [3 x float], [3 x float]* %27, i64 0, i64 2
  %29 = load float, float* %28, align 4
  %30 = load [3 x float]*, [3 x float]** %5, align 8
  %31 = getelementptr inbounds [3 x float], [3 x float]* %30, i64 2
  %32 = getelementptr inbounds [3 x float], [3 x float]* %31, i64 0, i64 0
  %33 = load float, float* %32, align 4
  %34 = fmul float %29, %33
  %35 = fadd float %25, %34
  %36 = load [3 x float]*, [3 x float]** %6, align 8
  %37 = getelementptr inbounds [3 x float], [3 x float]* %36, i64 0
  %38 = getelementptr inbounds [3 x float], [3 x float]* %37, i64 0, i64 0
  store float %35, float* %38, align 4
  %39 = load [3 x float]*, [3 x float]** %4, align 8
  %40 = getelementptr inbounds [3 x float], [3 x float]* %39, i64 0
  %41 = getelementptr inbounds [3 x float], [3 x float]* %40, i64 0, i64 0
  %42 = load float, float* %41, align 4
  %43 = load [3 x float]*, [3 x float]** %5, align 8
  %44 = getelementptr inbounds [3 x float], [3 x float]* %43, i64 0
  %45 = getelementptr inbounds [3 x float], [3 x float]* %44, i64 0, i64 1
  %46 = load float, float* %45, align 4
  %47 = fmul float %42, %46
  %48 = load [3 x float]*, [3 x float]** %4, align 8
  %49 = getelementptr inbounds [3 x float], [3 x float]* %48, i64 0
  %50 = getelementptr inbounds [3 x float], [3 x float]* %49, i64 0, i64 1
  %51 = load float, float* %50, align 4
  %52 = load [3 x float]*, [3 x float]** %5, align 8
  %53 = getelementptr inbounds [3 x float], [3 x float]* %52, i64 1
  %54 = getelementptr inbounds [3 x float], [3 x float]* %53, i64 0, i64 1
  %55 = load float, float* %54, align 4
  %56 = fmul float %51, %55
  %57 = fadd float %47, %56
  %58 = load [3 x float]*, [3 x float]** %4, align 8
  %59 = getelementptr inbounds [3 x float], [3 x float]* %58, i64 0
  %60 = getelementptr inbounds [3 x float], [3 x float]* %59, i64 0, i64 2
  %61 = load float, float* %60, align 4
  %62 = load [3 x float]*, [3 x float]** %5, align 8
  %63 = getelementptr inbounds [3 x float], [3 x float]* %62, i64 2
  %64 = getelementptr inbounds [3 x float], [3 x float]* %63, i64 0, i64 1
  %65 = load float, float* %64, align 4
  %66 = fmul float %61, %65
  %67 = fadd float %57, %66
  %68 = load [3 x float]*, [3 x float]** %6, align 8
  %69 = getelementptr inbounds [3 x float], [3 x float]* %68, i64 0
  %70 = getelementptr inbounds [3 x float], [3 x float]* %69, i64 0, i64 1
  store float %67, float* %70, align 4
  %71 = load [3 x float]*, [3 x float]** %4, align 8
  %72 = getelementptr inbounds [3 x float], [3 x float]* %71, i64 0
  %73 = getelementptr inbounds [3 x float], [3 x float]* %72, i64 0, i64 0
  %74 = load float, float* %73, align 4
  %75 = load [3 x float]*, [3 x float]** %5, align 8
  %76 = getelementptr inbounds [3 x float], [3 x float]* %75, i64 0
  %77 = getelementptr inbounds [3 x float], [3 x float]* %76, i64 0, i64 2
  %78 = load float, float* %77, align 4
  %79 = fmul float %74, %78
  %80 = load [3 x float]*, [3 x float]** %4, align 8
  %81 = getelementptr inbounds [3 x float], [3 x float]* %80, i64 0
  %82 = getelementptr inbounds [3 x float], [3 x float]* %81, i64 0, i64 1
  %83 = load float, float* %82, align 4
  %84 = load [3 x float]*, [3 x float]** %5, align 8
  %85 = getelementptr inbounds [3 x float], [3 x float]* %84, i64 1
  %86 = getelementptr inbounds [3 x float], [3 x float]* %85, i64 0, i64 2
  %87 = load float, float* %86, align 4
  %88 = fmul float %83, %87
  %89 = fadd float %79, %88
  %90 = load [3 x float]*, [3 x float]** %4, align 8
  %91 = getelementptr inbounds [3 x float], [3 x float]* %90, i64 0
  %92 = getelementptr inbounds [3 x float], [3 x float]* %91, i64 0, i64 2
  %93 = load float, float* %92, align 4
  %94 = load [3 x float]*, [3 x float]** %5, align 8
  %95 = getelementptr inbounds [3 x float], [3 x float]* %94, i64 2
  %96 = getelementptr inbounds [3 x float], [3 x float]* %95, i64 0, i64 2
  %97 = load float, float* %96, align 4
  %98 = fmul float %93, %97
  %99 = fadd float %89, %98
  %100 = load [3 x float]*, [3 x float]** %6, align 8
  %101 = getelementptr inbounds [3 x float], [3 x float]* %100, i64 0
  %102 = getelementptr inbounds [3 x float], [3 x float]* %101, i64 0, i64 2
  store float %99, float* %102, align 4
  %103 = load [3 x float]*, [3 x float]** %4, align 8
  %104 = getelementptr inbounds [3 x float], [3 x float]* %103, i64 1
  %105 = getelementptr inbounds [3 x float], [3 x float]* %104, i64 0, i64 0
  %106 = load float, float* %105, align 4
  %107 = load [3 x float]*, [3 x float]** %5, align 8
  %108 = getelementptr inbounds [3 x float], [3 x float]* %107, i64 0
  %109 = getelementptr inbounds [3 x float], [3 x float]* %108, i64 0, i64 0
  %110 = load float, float* %109, align 4
  %111 = fmul float %106, %110
  %112 = load [3 x float]*, [3 x float]** %4, align 8
  %113 = getelementptr inbounds [3 x float], [3 x float]* %112, i64 1
  %114 = getelementptr inbounds [3 x float], [3 x float]* %113, i64 0, i64 1
  %115 = load float, float* %114, align 4
  %116 = load [3 x float]*, [3 x float]** %5, align 8
  %117 = getelementptr inbounds [3 x float], [3 x float]* %116, i64 1
  %118 = getelementptr inbounds [3 x float], [3 x float]* %117, i64 0, i64 0
  %119 = load float, float* %118, align 4
  %120 = fmul float %115, %119
  %121 = fadd float %111, %120
  %122 = load [3 x float]*, [3 x float]** %4, align 8
  %123 = getelementptr inbounds [3 x float], [3 x float]* %122, i64 1
  %124 = getelementptr inbounds [3 x float], [3 x float]* %123, i64 0, i64 2
  %125 = load float, float* %124, align 4
  %126 = load [3 x float]*, [3 x float]** %5, align 8
  %127 = getelementptr inbounds [3 x float], [3 x float]* %126, i64 2
  %128 = getelementptr inbounds [3 x float], [3 x float]* %127, i64 0, i64 0
  %129 = load float, float* %128, align 4
  %130 = fmul float %125, %129
  %131 = fadd float %121, %130
  %132 = load [3 x float]*, [3 x float]** %6, align 8
  %133 = getelementptr inbounds [3 x float], [3 x float]* %132, i64 1
  %134 = getelementptr inbounds [3 x float], [3 x float]* %133, i64 0, i64 0
  store float %131, float* %134, align 4
  %135 = load [3 x float]*, [3 x float]** %4, align 8
  %136 = getelementptr inbounds [3 x float], [3 x float]* %135, i64 1
  %137 = getelementptr inbounds [3 x float], [3 x float]* %136, i64 0, i64 0
  %138 = load float, float* %137, align 4
  %139 = load [3 x float]*, [3 x float]** %5, align 8
  %140 = getelementptr inbounds [3 x float], [3 x float]* %139, i64 0
  %141 = getelementptr inbounds [3 x float], [3 x float]* %140, i64 0, i64 1
  %142 = load float, float* %141, align 4
  %143 = fmul float %138, %142
  %144 = load [3 x float]*, [3 x float]** %4, align 8
  %145 = getelementptr inbounds [3 x float], [3 x float]* %144, i64 1
  %146 = getelementptr inbounds [3 x float], [3 x float]* %145, i64 0, i64 1
  %147 = load float, float* %146, align 4
  %148 = load [3 x float]*, [3 x float]** %5, align 8
  %149 = getelementptr inbounds [3 x float], [3 x float]* %148, i64 1
  %150 = getelementptr inbounds [3 x float], [3 x float]* %149, i64 0, i64 1
  %151 = load float, float* %150, align 4
  %152 = fmul float %147, %151
  %153 = fadd float %143, %152
  %154 = load [3 x float]*, [3 x float]** %4, align 8
  %155 = getelementptr inbounds [3 x float], [3 x float]* %154, i64 1
  %156 = getelementptr inbounds [3 x float], [3 x float]* %155, i64 0, i64 2
  %157 = load float, float* %156, align 4
  %158 = load [3 x float]*, [3 x float]** %5, align 8
  %159 = getelementptr inbounds [3 x float], [3 x float]* %158, i64 2
  %160 = getelementptr inbounds [3 x float], [3 x float]* %159, i64 0, i64 1
  %161 = load float, float* %160, align 4
  %162 = fmul float %157, %161
  %163 = fadd float %153, %162
  %164 = load [3 x float]*, [3 x float]** %6, align 8
  %165 = getelementptr inbounds [3 x float], [3 x float]* %164, i64 1
  %166 = getelementptr inbounds [3 x float], [3 x float]* %165, i64 0, i64 1
  store float %163, float* %166, align 4
  %167 = load [3 x float]*, [3 x float]** %4, align 8
  %168 = getelementptr inbounds [3 x float], [3 x float]* %167, i64 1
  %169 = getelementptr inbounds [3 x float], [3 x float]* %168, i64 0, i64 0
  %170 = load float, float* %169, align 4
  %171 = load [3 x float]*, [3 x float]** %5, align 8
  %172 = getelementptr inbounds [3 x float], [3 x float]* %171, i64 0
  %173 = getelementptr inbounds [3 x float], [3 x float]* %172, i64 0, i64 2
  %174 = load float, float* %173, align 4
  %175 = fmul float %170, %174
  %176 = load [3 x float]*, [3 x float]** %4, align 8
  %177 = getelementptr inbounds [3 x float], [3 x float]* %176, i64 1
  %178 = getelementptr inbounds [3 x float], [3 x float]* %177, i64 0, i64 1
  %179 = load float, float* %178, align 4
  %180 = load [3 x float]*, [3 x float]** %5, align 8
  %181 = getelementptr inbounds [3 x float], [3 x float]* %180, i64 1
  %182 = getelementptr inbounds [3 x float], [3 x float]* %181, i64 0, i64 2
  %183 = load float, float* %182, align 4
  %184 = fmul float %179, %183
  %185 = fadd float %175, %184
  %186 = load [3 x float]*, [3 x float]** %4, align 8
  %187 = getelementptr inbounds [3 x float], [3 x float]* %186, i64 1
  %188 = getelementptr inbounds [3 x float], [3 x float]* %187, i64 0, i64 2
  %189 = load float, float* %188, align 4
  %190 = load [3 x float]*, [3 x float]** %5, align 8
  %191 = getelementptr inbounds [3 x float], [3 x float]* %190, i64 2
  %192 = getelementptr inbounds [3 x float], [3 x float]* %191, i64 0, i64 2
  %193 = load float, float* %192, align 4
  %194 = fmul float %189, %193
  %195 = fadd float %185, %194
  %196 = load [3 x float]*, [3 x float]** %6, align 8
  %197 = getelementptr inbounds [3 x float], [3 x float]* %196, i64 1
  %198 = getelementptr inbounds [3 x float], [3 x float]* %197, i64 0, i64 2
  store float %195, float* %198, align 4
  %199 = load [3 x float]*, [3 x float]** %4, align 8
  %200 = getelementptr inbounds [3 x float], [3 x float]* %199, i64 2
  %201 = getelementptr inbounds [3 x float], [3 x float]* %200, i64 0, i64 0
  %202 = load float, float* %201, align 4
  %203 = load [3 x float]*, [3 x float]** %5, align 8
  %204 = getelementptr inbounds [3 x float], [3 x float]* %203, i64 0
  %205 = getelementptr inbounds [3 x float], [3 x float]* %204, i64 0, i64 0
  %206 = load float, float* %205, align 4
  %207 = fmul float %202, %206
  %208 = load [3 x float]*, [3 x float]** %4, align 8
  %209 = getelementptr inbounds [3 x float], [3 x float]* %208, i64 2
  %210 = getelementptr inbounds [3 x float], [3 x float]* %209, i64 0, i64 1
  %211 = load float, float* %210, align 4
  %212 = load [3 x float]*, [3 x float]** %5, align 8
  %213 = getelementptr inbounds [3 x float], [3 x float]* %212, i64 1
  %214 = getelementptr inbounds [3 x float], [3 x float]* %213, i64 0, i64 0
  %215 = load float, float* %214, align 4
  %216 = fmul float %211, %215
  %217 = fadd float %207, %216
  %218 = load [3 x float]*, [3 x float]** %4, align 8
  %219 = getelementptr inbounds [3 x float], [3 x float]* %218, i64 2
  %220 = getelementptr inbounds [3 x float], [3 x float]* %219, i64 0, i64 2
  %221 = load float, float* %220, align 4
  %222 = load [3 x float]*, [3 x float]** %5, align 8
  %223 = getelementptr inbounds [3 x float], [3 x float]* %222, i64 2
  %224 = getelementptr inbounds [3 x float], [3 x float]* %223, i64 0, i64 0
  %225 = load float, float* %224, align 4
  %226 = fmul float %221, %225
  %227 = fadd float %217, %226
  %228 = load [3 x float]*, [3 x float]** %6, align 8
  %229 = getelementptr inbounds [3 x float], [3 x float]* %228, i64 2
  %230 = getelementptr inbounds [3 x float], [3 x float]* %229, i64 0, i64 0
  store float %227, float* %230, align 4
  %231 = load [3 x float]*, [3 x float]** %4, align 8
  %232 = getelementptr inbounds [3 x float], [3 x float]* %231, i64 2
  %233 = getelementptr inbounds [3 x float], [3 x float]* %232, i64 0, i64 0
  %234 = load float, float* %233, align 4
  %235 = load [3 x float]*, [3 x float]** %5, align 8
  %236 = getelementptr inbounds [3 x float], [3 x float]* %235, i64 0
  %237 = getelementptr inbounds [3 x float], [3 x float]* %236, i64 0, i64 1
  %238 = load float, float* %237, align 4
  %239 = fmul float %234, %238
  %240 = load [3 x float]*, [3 x float]** %4, align 8
  %241 = getelementptr inbounds [3 x float], [3 x float]* %240, i64 2
  %242 = getelementptr inbounds [3 x float], [3 x float]* %241, i64 0, i64 1
  %243 = load float, float* %242, align 4
  %244 = load [3 x float]*, [3 x float]** %5, align 8
  %245 = getelementptr inbounds [3 x float], [3 x float]* %244, i64 1
  %246 = getelementptr inbounds [3 x float], [3 x float]* %245, i64 0, i64 1
  %247 = load float, float* %246, align 4
  %248 = fmul float %243, %247
  %249 = fadd float %239, %248
  %250 = load [3 x float]*, [3 x float]** %4, align 8
  %251 = getelementptr inbounds [3 x float], [3 x float]* %250, i64 2
  %252 = getelementptr inbounds [3 x float], [3 x float]* %251, i64 0, i64 2
  %253 = load float, float* %252, align 4
  %254 = load [3 x float]*, [3 x float]** %5, align 8
  %255 = getelementptr inbounds [3 x float], [3 x float]* %254, i64 2
  %256 = getelementptr inbounds [3 x float], [3 x float]* %255, i64 0, i64 1
  %257 = load float, float* %256, align 4
  %258 = fmul float %253, %257
  %259 = fadd float %249, %258
  %260 = load [3 x float]*, [3 x float]** %6, align 8
  %261 = getelementptr inbounds [3 x float], [3 x float]* %260, i64 2
  %262 = getelementptr inbounds [3 x float], [3 x float]* %261, i64 0, i64 1
  store float %259, float* %262, align 4
  %263 = load [3 x float]*, [3 x float]** %4, align 8
  %264 = getelementptr inbounds [3 x float], [3 x float]* %263, i64 2
  %265 = getelementptr inbounds [3 x float], [3 x float]* %264, i64 0, i64 0
  %266 = load float, float* %265, align 4
  %267 = load [3 x float]*, [3 x float]** %5, align 8
  %268 = getelementptr inbounds [3 x float], [3 x float]* %267, i64 0
  %269 = getelementptr inbounds [3 x float], [3 x float]* %268, i64 0, i64 2
  %270 = load float, float* %269, align 4
  %271 = fmul float %266, %270
  %272 = load [3 x float]*, [3 x float]** %4, align 8
  %273 = getelementptr inbounds [3 x float], [3 x float]* %272, i64 2
  %274 = getelementptr inbounds [3 x float], [3 x float]* %273, i64 0, i64 1
  %275 = load float, float* %274, align 4
  %276 = load [3 x float]*, [3 x float]** %5, align 8
  %277 = getelementptr inbounds [3 x float], [3 x float]* %276, i64 1
  %278 = getelementptr inbounds [3 x float], [3 x float]* %277, i64 0, i64 2
  %279 = load float, float* %278, align 4
  %280 = fmul float %275, %279
  %281 = fadd float %271, %280
  %282 = load [3 x float]*, [3 x float]** %4, align 8
  %283 = getelementptr inbounds [3 x float], [3 x float]* %282, i64 2
  %284 = getelementptr inbounds [3 x float], [3 x float]* %283, i64 0, i64 2
  %285 = load float, float* %284, align 4
  %286 = load [3 x float]*, [3 x float]** %5, align 8
  %287 = getelementptr inbounds [3 x float], [3 x float]* %286, i64 2
  %288 = getelementptr inbounds [3 x float], [3 x float]* %287, i64 0, i64 2
  %289 = load float, float* %288, align 4
  %290 = fmul float %285, %289
  %291 = fadd float %281, %290
  %292 = load [3 x float]*, [3 x float]** %6, align 8
  %293 = getelementptr inbounds [3 x float], [3 x float]* %292, i64 2
  %294 = getelementptr inbounds [3 x float], [3 x float]* %293, i64 0, i64 2
  store float %291, float* %294, align 4
  ret void
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
