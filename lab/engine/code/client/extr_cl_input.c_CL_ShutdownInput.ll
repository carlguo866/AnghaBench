; ModuleID = '/home/carl/AnghaBench/lab/engine/code/client/extr_cl_input.c_CL_ShutdownInput.c'
source_filename = "/home/carl/AnghaBench/lab/engine/code/client/extr_cl_input.c_CL_ShutdownInput.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [11 x i8] c"centerview\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"+moveup\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"-moveup\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"+movedown\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"-movedown\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"+left\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"-left\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"+right\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"-right\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"+forward\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"-forward\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"+back\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"-back\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"+lookup\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"-lookup\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"+lookdown\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"-lookdown\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"+strafe\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"-strafe\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"+moveleft\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"-moveleft\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"+moveright\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"-moveright\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"+speed\00", align 1
@.str.24 = private unnamed_addr constant [7 x i8] c"-speed\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"+attack\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"-attack\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"+button0\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"-button0\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"+button1\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"-button1\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"+button2\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"-button2\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"+button3\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"-button3\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"+button4\00", align 1
@.str.36 = private unnamed_addr constant [9 x i8] c"-button4\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"+button5\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"-button5\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"+button6\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"-button6\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"+button7\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"-button7\00", align 1
@.str.43 = private unnamed_addr constant [9 x i8] c"+button8\00", align 1
@.str.44 = private unnamed_addr constant [9 x i8] c"-button8\00", align 1
@.str.45 = private unnamed_addr constant [9 x i8] c"+button9\00", align 1
@.str.46 = private unnamed_addr constant [9 x i8] c"-button9\00", align 1
@.str.47 = private unnamed_addr constant [10 x i8] c"+button10\00", align 1
@.str.48 = private unnamed_addr constant [10 x i8] c"-button10\00", align 1
@.str.49 = private unnamed_addr constant [10 x i8] c"+button11\00", align 1
@.str.50 = private unnamed_addr constant [10 x i8] c"-button11\00", align 1
@.str.51 = private unnamed_addr constant [10 x i8] c"+button12\00", align 1
@.str.52 = private unnamed_addr constant [10 x i8] c"-button12\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"+button13\00", align 1
@.str.54 = private unnamed_addr constant [10 x i8] c"-button13\00", align 1
@.str.55 = private unnamed_addr constant [10 x i8] c"+button14\00", align 1
@.str.56 = private unnamed_addr constant [10 x i8] c"-button14\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"+mlook\00", align 1
@.str.58 = private unnamed_addr constant [7 x i8] c"-mlook\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CL_ShutdownInput() #0 {
  %1 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0))
  %2 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0))
  %3 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0))
  %4 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0))
  %5 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0))
  %6 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0))
  %7 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0))
  %8 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0))
  %9 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0))
  %10 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0))
  %11 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0))
  %12 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0))
  %13 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0))
  %14 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0))
  %15 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0))
  %16 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0))
  %17 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0))
  %18 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0))
  %19 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0))
  %20 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0))
  %21 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0))
  %22 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0))
  %23 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0))
  %24 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0))
  %25 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0))
  %26 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0))
  %27 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i64 0, i64 0))
  %28 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0))
  %29 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0))
  %30 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0))
  %31 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0))
  %32 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i64 0, i64 0))
  %33 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0))
  %34 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0))
  %35 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i64 0, i64 0))
  %36 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i64 0, i64 0))
  %37 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0))
  %38 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0))
  %39 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0))
  %40 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i64 0, i64 0))
  %41 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i64 0, i64 0))
  %42 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i64 0, i64 0))
  %43 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0))
  %44 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0))
  %45 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i64 0, i64 0))
  %46 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i64 0, i64 0))
  %47 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46, i64 0, i64 0))
  %48 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i64 0, i64 0))
  %49 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i64 0, i64 0))
  %50 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i64 0, i64 0))
  %51 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i64 0, i64 0))
  %52 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51, i64 0, i64 0))
  %53 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i64 0, i64 0))
  %54 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i64 0, i64 0))
  %55 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.54, i64 0, i64 0))
  %56 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.55, i64 0, i64 0))
  %57 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i64 0, i64 0))
  %58 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i64 0, i64 0))
  %59 = call i32 @Cmd_RemoveCommand(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i64 0, i64 0))
  ret void
}

declare dso_local i32 @Cmd_RemoveCommand(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
