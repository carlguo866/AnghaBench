; ModuleID = '/home/carl/AnghaBench/vlc/modules/control/extr_rc.c_Help.c'
source_filename = "/home/carl/AnghaBench/vlc/modules/control/extr_rc.c_Help.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"+----[ Remote control commands ]\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"| \00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"| add XYZ  . . . . . . . . . . . . add XYZ to playlist\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"| enqueue XYZ  . . . . . . . . . queue XYZ to playlist\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"| playlist . . . . .  show items currently in playlist\00", align 1
@.str.6 = private unnamed_addr constant [55 x i8] c"| play . . . . . . . . . . . . . . . . . . play stream\00", align 1
@.str.7 = private unnamed_addr constant [55 x i8] c"| stop . . . . . . . . . . . . . . . . . . stop stream\00", align 1
@.str.8 = private unnamed_addr constant [55 x i8] c"| next . . . . . . . . . . . . . .  next playlist item\00", align 1
@.str.9 = private unnamed_addr constant [55 x i8] c"| prev . . . . . . . . . . . .  previous playlist item\00", align 1
@.str.10 = private unnamed_addr constant [55 x i8] c"| goto . . . . . . . . . . . . . .  goto item at index\00", align 1
@.str.11 = private unnamed_addr constant [55 x i8] c"| repeat [on|off] . . . .  toggle playlist item repeat\00", align 1
@.str.12 = private unnamed_addr constant [55 x i8] c"| loop [on|off] . . . . . . . . . toggle playlist loop\00", align 1
@.str.13 = private unnamed_addr constant [55 x i8] c"| random [on|off] . . . . . . .  toggle random jumping\00", align 1
@.str.14 = private unnamed_addr constant [55 x i8] c"| clear . . . . . . . . . . . . . . clear the playlist\00", align 1
@.str.15 = private unnamed_addr constant [55 x i8] c"| status . . . . . . . . . . . current playlist status\00", align 1
@.str.16 = private unnamed_addr constant [55 x i8] c"| title [X]  . . . . . . set/get title in current item\00", align 1
@.str.17 = private unnamed_addr constant [55 x i8] c"| title_n  . . . . . . . .  next title in current item\00", align 1
@.str.18 = private unnamed_addr constant [55 x i8] c"| title_p  . . . . . .  previous title in current item\00", align 1
@.str.19 = private unnamed_addr constant [55 x i8] c"| chapter [X]  . . . . set/get chapter in current item\00", align 1
@.str.20 = private unnamed_addr constant [55 x i8] c"| chapter_n  . . . . . .  next chapter in current item\00", align 1
@.str.21 = private unnamed_addr constant [55 x i8] c"| chapter_p  . . . .  previous chapter in current item\00", align 1
@.str.22 = private unnamed_addr constant [55 x i8] c"| seek X . . . seek in seconds, for instance `seek 12'\00", align 1
@.str.23 = private unnamed_addr constant [55 x i8] c"| pause  . . . . . . . . . . . . . . . .  toggle pause\00", align 1
@.str.24 = private unnamed_addr constant [55 x i8] c"| fastforward  . . . . . . . .  .  set to maximum rate\00", align 1
@.str.25 = private unnamed_addr constant [55 x i8] c"| rewind  . . . . . . . . . . . .  set to minimum rate\00", align 1
@.str.26 = private unnamed_addr constant [55 x i8] c"| faster . . . . . . . . . .  faster playing of stream\00", align 1
@.str.27 = private unnamed_addr constant [55 x i8] c"| slower . . . . . . . . . .  slower playing of stream\00", align 1
@.str.28 = private unnamed_addr constant [55 x i8] c"| normal . . . . . . . . . .  normal playing of stream\00", align 1
@.str.29 = private unnamed_addr constant [48 x i8] c"| frame. . . . . . . . . .  play frame by frame\00", align 1
@.str.30 = private unnamed_addr constant [55 x i8] c"| f [on|off] . . . . . . . . . . . . toggle fullscreen\00", align 1
@.str.31 = private unnamed_addr constant [55 x i8] c"| info . . . . .  information about the current stream\00", align 1
@.str.32 = private unnamed_addr constant [55 x i8] c"| stats  . . . . . . . .  show statistical information\00", align 1
@.str.33 = private unnamed_addr constant [56 x i8] c"| get_time . . seconds elapsed since stream's beginning\00", align 1
@.str.34 = private unnamed_addr constant [55 x i8] c"| is_playing . . . .  1 if a stream plays, 0 otherwise\00", align 1
@.str.35 = private unnamed_addr constant [55 x i8] c"| get_title . . . . .  the title of the current stream\00", align 1
@.str.36 = private unnamed_addr constant [55 x i8] c"| get_length . . . .  the length of the current stream\00", align 1
@.str.37 = private unnamed_addr constant [55 x i8] c"| volume [X] . . . . . . . . . .  set/get audio volume\00", align 1
@.str.38 = private unnamed_addr constant [55 x i8] c"| volup [X]  . . . . . . .  raise audio volume X steps\00", align 1
@.str.39 = private unnamed_addr constant [55 x i8] c"| voldown [X]  . . . . . .  lower audio volume X steps\00", align 1
@.str.40 = private unnamed_addr constant [55 x i8] c"| adev [device]  . . . . . . . .  set/get audio device\00", align 1
@.str.41 = private unnamed_addr constant [55 x i8] c"| achan [X]. . . . . . . . . .  set/get audio channels\00", align 1
@.str.42 = private unnamed_addr constant [55 x i8] c"| atrack [X] . . . . . . . . . . . set/get audio track\00", align 1
@.str.43 = private unnamed_addr constant [55 x i8] c"| vtrack [X] . . . . . . . . . . . set/get video track\00", align 1
@.str.44 = private unnamed_addr constant [55 x i8] c"| vratio [X]  . . . . . . . set/get video aspect ratio\00", align 1
@.str.45 = private unnamed_addr constant [55 x i8] c"| vcrop [X]  . . . . . . . . . . .  set/get video crop\00", align 1
@.str.46 = private unnamed_addr constant [55 x i8] c"| vzoom [X]  . . . . . . . . . . .  set/get video zoom\00", align 1
@.str.47 = private unnamed_addr constant [55 x i8] c"| snapshot . . . . . . . . . . . . take video snapshot\00", align 1
@.str.48 = private unnamed_addr constant [55 x i8] c"| record [on|off] . . . . . . . . . . toggle recording\00", align 1
@.str.49 = private unnamed_addr constant [55 x i8] c"| strack [X] . . . . . . . . .  set/get subtitle track\00", align 1
@.str.50 = private unnamed_addr constant [55 x i8] c"| key [hotkey name] . . . . . .  simulate hotkey press\00", align 1
@.str.51 = private unnamed_addr constant [55 x i8] c"| help . . . . . . . . . . . . . . . this help message\00", align 1
@.str.52 = private unnamed_addr constant [55 x i8] c"| logout . . . . . . .  exit (if in socket connection)\00", align 1
@.str.53 = private unnamed_addr constant [55 x i8] c"| quit . . . . . . . . . . . . . . . . . . .  quit vlc\00", align 1
@.str.54 = private unnamed_addr constant [21 x i8] c"+----[ end of help ]\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i32*)* @Help to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @Help(i32* %0) #0 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = call i32 @_(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0))
  %4 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %3)
  %5 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  %6 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0))
  %7 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %6)
  %8 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0))
  %9 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %8)
  %10 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0))
  %11 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %10)
  %12 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0))
  %13 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %12)
  %14 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0))
  %15 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %14)
  %16 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.8, i64 0, i64 0))
  %17 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %16)
  %18 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.9, i64 0, i64 0))
  %19 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %18)
  %20 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0))
  %21 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %20)
  %22 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11, i64 0, i64 0))
  %23 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %22)
  %24 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.12, i64 0, i64 0))
  %25 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %24)
  %26 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.13, i64 0, i64 0))
  %27 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %26)
  %28 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.14, i64 0, i64 0))
  %29 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %28)
  %30 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.15, i64 0, i64 0))
  %31 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %30)
  %32 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.16, i64 0, i64 0))
  %33 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %32)
  %34 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.17, i64 0, i64 0))
  %35 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %34)
  %36 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0))
  %37 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %36)
  %38 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0))
  %39 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %38)
  %40 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.20, i64 0, i64 0))
  %41 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %40)
  %42 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.21, i64 0, i64 0))
  %43 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %42)
  %44 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  %45 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.22, i64 0, i64 0))
  %46 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %45)
  %47 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.23, i64 0, i64 0))
  %48 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %47)
  %49 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0))
  %50 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %49)
  %51 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0))
  %52 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %51)
  %53 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0))
  %54 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %53)
  %55 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.27, i64 0, i64 0))
  %56 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %55)
  %57 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.28, i64 0, i64 0))
  %58 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %57)
  %59 = call i32 @_(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.29, i64 0, i64 0))
  %60 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %59)
  %61 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.30, i64 0, i64 0))
  %62 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %61)
  %63 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.31, i64 0, i64 0))
  %64 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %63)
  %65 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.32, i64 0, i64 0))
  %66 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %65)
  %67 = call i32 @_(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.33, i64 0, i64 0))
  %68 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %67)
  %69 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.34, i64 0, i64 0))
  %70 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %69)
  %71 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.35, i64 0, i64 0))
  %72 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %71)
  %73 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.36, i64 0, i64 0))
  %74 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %73)
  %75 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  %76 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.37, i64 0, i64 0))
  %77 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %76)
  %78 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.38, i64 0, i64 0))
  %79 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %78)
  %80 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.39, i64 0, i64 0))
  %81 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %80)
  %82 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.40, i64 0, i64 0))
  %83 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %82)
  %84 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.41, i64 0, i64 0))
  %85 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %84)
  %86 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.42, i64 0, i64 0))
  %87 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %86)
  %88 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.43, i64 0, i64 0))
  %89 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %88)
  %90 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.44, i64 0, i64 0))
  %91 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %90)
  %92 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.45, i64 0, i64 0))
  %93 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %92)
  %94 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.46, i64 0, i64 0))
  %95 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %94)
  %96 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.47, i64 0, i64 0))
  %97 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %96)
  %98 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.48, i64 0, i64 0))
  %99 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %98)
  %100 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.49, i64 0, i64 0))
  %101 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %100)
  %102 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.50, i64 0, i64 0))
  %103 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %102)
  %104 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  %105 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.51, i64 0, i64 0))
  %106 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %105)
  %107 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.52, i64 0, i64 0))
  %108 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %107)
  %109 = call i32 @_(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0))
  %110 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %109)
  %111 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0))
  %112 = call i32 @_(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.54, i64 0, i64 0))
  %113 = call i32 (i8*, ...) @msg_rc(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %112)
  ret void
}

declare dso_local i32 @msg_rc(i8*, ...) #1

declare dso_local i32 @_(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
