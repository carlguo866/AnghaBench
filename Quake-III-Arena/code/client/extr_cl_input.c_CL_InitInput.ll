; ModuleID = '/home/carl/AnghaBench/Quake-III-Arena/code/client/extr_cl_input.c_CL_InitInput.c'
source_filename = "/home/carl/AnghaBench/Quake-III-Arena/code/client/extr_cl_input.c_CL_InitInput.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [11 x i8] c"centerview\00", align 1
@IN_CenterView = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [8 x i8] c"+moveup\00", align 1
@IN_UpDown = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [8 x i8] c"-moveup\00", align 1
@IN_UpUp = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [10 x i8] c"+movedown\00", align 1
@IN_DownDown = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [10 x i8] c"-movedown\00", align 1
@IN_DownUp = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [6 x i8] c"+left\00", align 1
@IN_LeftDown = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [6 x i8] c"-left\00", align 1
@IN_LeftUp = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [7 x i8] c"+right\00", align 1
@IN_RightDown = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [7 x i8] c"-right\00", align 1
@IN_RightUp = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [9 x i8] c"+forward\00", align 1
@IN_ForwardDown = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [9 x i8] c"-forward\00", align 1
@IN_ForwardUp = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [6 x i8] c"+back\00", align 1
@IN_BackDown = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [6 x i8] c"-back\00", align 1
@IN_BackUp = common dso_local global i32 0, align 4
@.str.13 = private unnamed_addr constant [8 x i8] c"+lookup\00", align 1
@IN_LookupDown = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [8 x i8] c"-lookup\00", align 1
@IN_LookupUp = common dso_local global i32 0, align 4
@.str.15 = private unnamed_addr constant [10 x i8] c"+lookdown\00", align 1
@IN_LookdownDown = common dso_local global i32 0, align 4
@.str.16 = private unnamed_addr constant [10 x i8] c"-lookdown\00", align 1
@IN_LookdownUp = common dso_local global i32 0, align 4
@.str.17 = private unnamed_addr constant [8 x i8] c"+strafe\00", align 1
@IN_StrafeDown = common dso_local global i32 0, align 4
@.str.18 = private unnamed_addr constant [8 x i8] c"-strafe\00", align 1
@IN_StrafeUp = common dso_local global i32 0, align 4
@.str.19 = private unnamed_addr constant [10 x i8] c"+moveleft\00", align 1
@IN_MoveleftDown = common dso_local global i32 0, align 4
@.str.20 = private unnamed_addr constant [10 x i8] c"-moveleft\00", align 1
@IN_MoveleftUp = common dso_local global i32 0, align 4
@.str.21 = private unnamed_addr constant [11 x i8] c"+moveright\00", align 1
@IN_MoverightDown = common dso_local global i32 0, align 4
@.str.22 = private unnamed_addr constant [11 x i8] c"-moveright\00", align 1
@IN_MoverightUp = common dso_local global i32 0, align 4
@.str.23 = private unnamed_addr constant [7 x i8] c"+speed\00", align 1
@IN_SpeedDown = common dso_local global i32 0, align 4
@.str.24 = private unnamed_addr constant [7 x i8] c"-speed\00", align 1
@IN_SpeedUp = common dso_local global i32 0, align 4
@.str.25 = private unnamed_addr constant [8 x i8] c"+attack\00", align 1
@IN_Button0Down = common dso_local global i32 0, align 4
@.str.26 = private unnamed_addr constant [8 x i8] c"-attack\00", align 1
@IN_Button0Up = common dso_local global i32 0, align 4
@.str.27 = private unnamed_addr constant [9 x i8] c"+button0\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"-button0\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"+button1\00", align 1
@IN_Button1Down = common dso_local global i32 0, align 4
@.str.30 = private unnamed_addr constant [9 x i8] c"-button1\00", align 1
@IN_Button1Up = common dso_local global i32 0, align 4
@.str.31 = private unnamed_addr constant [9 x i8] c"+button2\00", align 1
@IN_Button2Down = common dso_local global i32 0, align 4
@.str.32 = private unnamed_addr constant [9 x i8] c"-button2\00", align 1
@IN_Button2Up = common dso_local global i32 0, align 4
@.str.33 = private unnamed_addr constant [9 x i8] c"+button3\00", align 1
@IN_Button3Down = common dso_local global i32 0, align 4
@.str.34 = private unnamed_addr constant [9 x i8] c"-button3\00", align 1
@IN_Button3Up = common dso_local global i32 0, align 4
@.str.35 = private unnamed_addr constant [9 x i8] c"+button4\00", align 1
@IN_Button4Down = common dso_local global i32 0, align 4
@.str.36 = private unnamed_addr constant [9 x i8] c"-button4\00", align 1
@IN_Button4Up = common dso_local global i32 0, align 4
@.str.37 = private unnamed_addr constant [9 x i8] c"+button5\00", align 1
@IN_Button5Down = common dso_local global i32 0, align 4
@.str.38 = private unnamed_addr constant [9 x i8] c"-button5\00", align 1
@IN_Button5Up = common dso_local global i32 0, align 4
@.str.39 = private unnamed_addr constant [9 x i8] c"+button6\00", align 1
@IN_Button6Down = common dso_local global i32 0, align 4
@.str.40 = private unnamed_addr constant [9 x i8] c"-button6\00", align 1
@IN_Button6Up = common dso_local global i32 0, align 4
@.str.41 = private unnamed_addr constant [9 x i8] c"+button7\00", align 1
@IN_Button7Down = common dso_local global i32 0, align 4
@.str.42 = private unnamed_addr constant [9 x i8] c"-button7\00", align 1
@IN_Button7Up = common dso_local global i32 0, align 4
@.str.43 = private unnamed_addr constant [9 x i8] c"+button8\00", align 1
@IN_Button8Down = common dso_local global i32 0, align 4
@.str.44 = private unnamed_addr constant [9 x i8] c"-button8\00", align 1
@IN_Button8Up = common dso_local global i32 0, align 4
@.str.45 = private unnamed_addr constant [9 x i8] c"+button9\00", align 1
@IN_Button9Down = common dso_local global i32 0, align 4
@.str.46 = private unnamed_addr constant [9 x i8] c"-button9\00", align 1
@IN_Button9Up = common dso_local global i32 0, align 4
@.str.47 = private unnamed_addr constant [10 x i8] c"+button10\00", align 1
@IN_Button10Down = common dso_local global i32 0, align 4
@.str.48 = private unnamed_addr constant [10 x i8] c"-button10\00", align 1
@IN_Button10Up = common dso_local global i32 0, align 4
@.str.49 = private unnamed_addr constant [10 x i8] c"+button11\00", align 1
@IN_Button11Down = common dso_local global i32 0, align 4
@.str.50 = private unnamed_addr constant [10 x i8] c"-button11\00", align 1
@IN_Button11Up = common dso_local global i32 0, align 4
@.str.51 = private unnamed_addr constant [10 x i8] c"+button12\00", align 1
@IN_Button12Down = common dso_local global i32 0, align 4
@.str.52 = private unnamed_addr constant [10 x i8] c"-button12\00", align 1
@IN_Button12Up = common dso_local global i32 0, align 4
@.str.53 = private unnamed_addr constant [10 x i8] c"+button13\00", align 1
@IN_Button13Down = common dso_local global i32 0, align 4
@.str.54 = private unnamed_addr constant [10 x i8] c"-button13\00", align 1
@IN_Button13Up = common dso_local global i32 0, align 4
@.str.55 = private unnamed_addr constant [10 x i8] c"+button14\00", align 1
@IN_Button14Down = common dso_local global i32 0, align 4
@.str.56 = private unnamed_addr constant [10 x i8] c"-button14\00", align 1
@IN_Button14Up = common dso_local global i32 0, align 4
@.str.57 = private unnamed_addr constant [7 x i8] c"+mlook\00", align 1
@IN_MLookDown = common dso_local global i32 0, align 4
@.str.58 = private unnamed_addr constant [7 x i8] c"-mlook\00", align 1
@IN_MLookUp = common dso_local global i32 0, align 4
@.str.59 = private unnamed_addr constant [11 x i8] c"cl_nodelta\00", align 1
@.str.60 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@cl_nodelta = common dso_local global i8* null, align 8
@.str.61 = private unnamed_addr constant [13 x i8] c"cl_debugMove\00", align 1
@cl_debugMove = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @CL_InitInput() #0 {
  %1 = load i32, i32* @IN_CenterView, align 4
  %2 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i32 %1)
  %3 = load i32, i32* @IN_UpDown, align 4
  %4 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i32 %3)
  %5 = load i32, i32* @IN_UpUp, align 4
  %6 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i32 %5)
  %7 = load i32, i32* @IN_DownDown, align 4
  %8 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i32 %7)
  %9 = load i32, i32* @IN_DownUp, align 4
  %10 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i32 %9)
  %11 = load i32, i32* @IN_LeftDown, align 4
  %12 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i32 %11)
  %13 = load i32, i32* @IN_LeftUp, align 4
  %14 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i32 %13)
  %15 = load i32, i32* @IN_RightDown, align 4
  %16 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i32 %15)
  %17 = load i32, i32* @IN_RightUp, align 4
  %18 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i32 %17)
  %19 = load i32, i32* @IN_ForwardDown, align 4
  %20 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i64 0, i64 0), i32 %19)
  %21 = load i32, i32* @IN_ForwardUp, align 4
  %22 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i32 %21)
  %23 = load i32, i32* @IN_BackDown, align 4
  %24 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i32 %23)
  %25 = load i32, i32* @IN_BackUp, align 4
  %26 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i32 %25)
  %27 = load i32, i32* @IN_LookupDown, align 4
  %28 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i32 %27)
  %29 = load i32, i32* @IN_LookupUp, align 4
  %30 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i32 %29)
  %31 = load i32, i32* @IN_LookdownDown, align 4
  %32 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i32 %31)
  %33 = load i32, i32* @IN_LookdownUp, align 4
  %34 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0), i32 %33)
  %35 = load i32, i32* @IN_StrafeDown, align 4
  %36 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i32 %35)
  %37 = load i32, i32* @IN_StrafeUp, align 4
  %38 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i32 %37)
  %39 = load i32, i32* @IN_MoveleftDown, align 4
  %40 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0), i32 %39)
  %41 = load i32, i32* @IN_MoveleftUp, align 4
  %42 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), i32 %41)
  %43 = load i32, i32* @IN_MoverightDown, align 4
  %44 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 %43)
  %45 = load i32, i32* @IN_MoverightUp, align 4
  %46 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i32 %45)
  %47 = load i32, i32* @IN_SpeedDown, align 4
  %48 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i32 %47)
  %49 = load i32, i32* @IN_SpeedUp, align 4
  %50 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.24, i64 0, i64 0), i32 %49)
  %51 = load i32, i32* @IN_Button0Down, align 4
  %52 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i32 %51)
  %53 = load i32, i32* @IN_Button0Up, align 4
  %54 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i64 0, i64 0), i32 %53)
  %55 = load i32, i32* @IN_Button0Down, align 4
  %56 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0), i32 %55)
  %57 = load i32, i32* @IN_Button0Up, align 4
  %58 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i32 %57)
  %59 = load i32, i32* @IN_Button1Down, align 4
  %60 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0), i32 %59)
  %61 = load i32, i32* @IN_Button1Up, align 4
  %62 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0), i32 %61)
  %63 = load i32, i32* @IN_Button2Down, align 4
  %64 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i64 0, i64 0), i32 %63)
  %65 = load i32, i32* @IN_Button2Up, align 4
  %66 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0), i32 %65)
  %67 = load i32, i32* @IN_Button3Down, align 4
  %68 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i64 0, i64 0), i32 %67)
  %69 = load i32, i32* @IN_Button3Up, align 4
  %70 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i64 0, i64 0), i32 %69)
  %71 = load i32, i32* @IN_Button4Down, align 4
  %72 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i64 0, i64 0), i32 %71)
  %73 = load i32, i32* @IN_Button4Up, align 4
  %74 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.36, i64 0, i64 0), i32 %73)
  %75 = load i32, i32* @IN_Button5Down, align 4
  %76 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0), i32 %75)
  %77 = load i32, i32* @IN_Button5Up, align 4
  %78 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0), i32 %77)
  %79 = load i32, i32* @IN_Button6Down, align 4
  %80 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i64 0, i64 0), i32 %79)
  %81 = load i32, i32* @IN_Button6Up, align 4
  %82 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i64 0, i64 0), i32 %81)
  %83 = load i32, i32* @IN_Button7Down, align 4
  %84 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i64 0, i64 0), i32 %83)
  %85 = load i32, i32* @IN_Button7Up, align 4
  %86 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0), i32 %85)
  %87 = load i32, i32* @IN_Button8Down, align 4
  %88 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), i32 %87)
  %89 = load i32, i32* @IN_Button8Up, align 4
  %90 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.44, i64 0, i64 0), i32 %89)
  %91 = load i32, i32* @IN_Button9Down, align 4
  %92 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i64 0, i64 0), i32 %91)
  %93 = load i32, i32* @IN_Button9Up, align 4
  %94 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.46, i64 0, i64 0), i32 %93)
  %95 = load i32, i32* @IN_Button10Down, align 4
  %96 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i64 0, i64 0), i32 %95)
  %97 = load i32, i32* @IN_Button10Up, align 4
  %98 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i64 0, i64 0), i32 %97)
  %99 = load i32, i32* @IN_Button11Down, align 4
  %100 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.49, i64 0, i64 0), i32 %99)
  %101 = load i32, i32* @IN_Button11Up, align 4
  %102 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.50, i64 0, i64 0), i32 %101)
  %103 = load i32, i32* @IN_Button12Down, align 4
  %104 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.51, i64 0, i64 0), i32 %103)
  %105 = load i32, i32* @IN_Button12Up, align 4
  %106 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.52, i64 0, i64 0), i32 %105)
  %107 = load i32, i32* @IN_Button13Down, align 4
  %108 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i64 0, i64 0), i32 %107)
  %109 = load i32, i32* @IN_Button13Up, align 4
  %110 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.54, i64 0, i64 0), i32 %109)
  %111 = load i32, i32* @IN_Button14Down, align 4
  %112 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.55, i64 0, i64 0), i32 %111)
  %113 = load i32, i32* @IN_Button14Up, align 4
  %114 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.56, i64 0, i64 0), i32 %113)
  %115 = load i32, i32* @IN_MLookDown, align 4
  %116 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i64 0, i64 0), i32 %115)
  %117 = load i32, i32* @IN_MLookUp, align 4
  %118 = call i32 @Cmd_AddCommand(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.58, i64 0, i64 0), i32 %117)
  %119 = call i8* @Cvar_Get(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.60, i64 0, i64 0), i32 0)
  store i8* %119, i8** @cl_nodelta, align 8
  %120 = call i8* @Cvar_Get(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.60, i64 0, i64 0), i32 0)
  store i8* %120, i8** @cl_debugMove, align 8
  ret void
}

declare dso_local i32 @Cmd_AddCommand(i8*, i32) #1

declare dso_local i8* @Cvar_Get(i8*, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
