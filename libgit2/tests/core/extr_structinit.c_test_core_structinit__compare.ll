; ModuleID = '/home/carl/AnghaBench/libgit2/tests/core/extr_structinit.c_test_core_structinit__compare.c'
source_filename = "/home/carl/AnghaBench/libgit2/tests/core/extr_structinit.c_test_core_structinit__compare.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@git_apply_options = common dso_local global i32 0, align 4
@GIT_APPLY_OPTIONS_VERSION = common dso_local global i32 0, align 4
@GIT_APPLY_OPTIONS_INIT = common dso_local global i32 0, align 4
@git_apply_options_init = common dso_local global i32 0, align 4
@git_blame_options = common dso_local global i32 0, align 4
@GIT_BLAME_OPTIONS_VERSION = common dso_local global i32 0, align 4
@GIT_BLAME_OPTIONS_INIT = common dso_local global i32 0, align 4
@git_blame_options_init = common dso_local global i32 0, align 4
@git_checkout_options = common dso_local global i32 0, align 4
@GIT_CHECKOUT_OPTIONS_VERSION = common dso_local global i32 0, align 4
@GIT_CHECKOUT_OPTIONS_INIT = common dso_local global i32 0, align 4
@git_checkout_options_init = common dso_local global i32 0, align 4
@git_clone_options = common dso_local global i32 0, align 4
@GIT_CLONE_OPTIONS_VERSION = common dso_local global i32 0, align 4
@GIT_CLONE_OPTIONS_INIT = common dso_local global i32 0, align 4
@git_clone_options_init = common dso_local global i32 0, align 4
@git_diff_options = common dso_local global i32 0, align 4
@GIT_DIFF_OPTIONS_VERSION = common dso_local global i32 0, align 4
@GIT_DIFF_OPTIONS_INIT = common dso_local global i32 0, align 4
@git_diff_options_init = common dso_local global i32 0, align 4
@git_diff_find_options = common dso_local global i32 0, align 4
@GIT_DIFF_FIND_OPTIONS_VERSION = common dso_local global i32 0, align 4
@GIT_DIFF_FIND_OPTIONS_INIT = common dso_local global i32 0, align 4
@git_diff_find_options_init = common dso_local global i32 0, align 4
@git_filter = common dso_local global i32 0, align 4
@GIT_FILTER_VERSION = common dso_local global i32 0, align 4
@GIT_FILTER_INIT = common dso_local global i32 0, align 4
@git_filter_init = common dso_local global i32 0, align 4
@git_merge_file_input = common dso_local global i32 0, align 4
@GIT_MERGE_FILE_INPUT_VERSION = common dso_local global i32 0, align 4
@GIT_MERGE_FILE_INPUT_INIT = common dso_local global i32 0, align 4
@git_merge_file_input_init = common dso_local global i32 0, align 4
@git_merge_file_options = common dso_local global i32 0, align 4
@GIT_MERGE_FILE_OPTIONS_VERSION = common dso_local global i32 0, align 4
@GIT_MERGE_FILE_OPTIONS_INIT = common dso_local global i32 0, align 4
@git_merge_file_options_init = common dso_local global i32 0, align 4
@git_merge_options = common dso_local global i32 0, align 4
@GIT_MERGE_OPTIONS_VERSION = common dso_local global i32 0, align 4
@GIT_MERGE_OPTIONS_INIT = common dso_local global i32 0, align 4
@git_merge_options_init = common dso_local global i32 0, align 4
@git_push_options = common dso_local global i32 0, align 4
@GIT_PUSH_OPTIONS_VERSION = common dso_local global i32 0, align 4
@GIT_PUSH_OPTIONS_INIT = common dso_local global i32 0, align 4
@git_push_options_init = common dso_local global i32 0, align 4
@git_remote_callbacks = common dso_local global i32 0, align 4
@GIT_REMOTE_CALLBACKS_VERSION = common dso_local global i32 0, align 4
@GIT_REMOTE_CALLBACKS_INIT = common dso_local global i32 0, align 4
@git_remote_init_callbacks = common dso_local global i32 0, align 4
@git_repository_init_options = common dso_local global i32 0, align 4
@GIT_REPOSITORY_INIT_OPTIONS_VERSION = common dso_local global i32 0, align 4
@GIT_REPOSITORY_INIT_OPTIONS_INIT = common dso_local global i32 0, align 4
@git_repository_init_options_init = common dso_local global i32 0, align 4
@git_revert_options = common dso_local global i32 0, align 4
@GIT_REVERT_OPTIONS_VERSION = common dso_local global i32 0, align 4
@GIT_REVERT_OPTIONS_INIT = common dso_local global i32 0, align 4
@git_revert_options_init = common dso_local global i32 0, align 4
@git_stash_apply_options = common dso_local global i32 0, align 4
@GIT_STASH_APPLY_OPTIONS_VERSION = common dso_local global i32 0, align 4
@GIT_STASH_APPLY_OPTIONS_INIT = common dso_local global i32 0, align 4
@git_stash_apply_options_init = common dso_local global i32 0, align 4
@git_status_options = common dso_local global i32 0, align 4
@GIT_STATUS_OPTIONS_VERSION = common dso_local global i32 0, align 4
@GIT_STATUS_OPTIONS_INIT = common dso_local global i32 0, align 4
@git_status_options_init = common dso_local global i32 0, align 4
@git_transport = common dso_local global i32 0, align 4
@GIT_TRANSPORT_VERSION = common dso_local global i32 0, align 4
@GIT_TRANSPORT_INIT = common dso_local global i32 0, align 4
@git_transport_init = common dso_local global i32 0, align 4
@git_config_backend = common dso_local global i32 0, align 4
@GIT_CONFIG_BACKEND_VERSION = common dso_local global i32 0, align 4
@GIT_CONFIG_BACKEND_INIT = common dso_local global i32 0, align 4
@git_config_init_backend = common dso_local global i32 0, align 4
@git_odb_backend = common dso_local global i32 0, align 4
@GIT_ODB_BACKEND_VERSION = common dso_local global i32 0, align 4
@GIT_ODB_BACKEND_INIT = common dso_local global i32 0, align 4
@git_odb_init_backend = common dso_local global i32 0, align 4
@git_refdb_backend = common dso_local global i32 0, align 4
@GIT_REFDB_BACKEND_VERSION = common dso_local global i32 0, align 4
@GIT_REFDB_BACKEND_INIT = common dso_local global i32 0, align 4
@git_refdb_init_backend = common dso_local global i32 0, align 4
@git_submodule_update_options = common dso_local global i32 0, align 4
@GIT_SUBMODULE_UPDATE_OPTIONS_VERSION = common dso_local global i32 0, align 4
@GIT_SUBMODULE_UPDATE_OPTIONS_INIT = common dso_local global i32 0, align 4
@git_submodule_update_options_init = common dso_local global i32 0, align 4
@git_proxy_options = common dso_local global i32 0, align 4
@GIT_PROXY_OPTIONS_VERSION = common dso_local global i32 0, align 4
@GIT_PROXY_OPTIONS_INIT = common dso_local global i32 0, align 4
@git_proxy_options_init = common dso_local global i32 0, align 4
@git_diff_patchid_options = common dso_local global i32 0, align 4
@GIT_DIFF_PATCHID_OPTIONS_VERSION = common dso_local global i32 0, align 4
@GIT_DIFF_PATCHID_OPTIONS_INIT = common dso_local global i32 0, align 4
@git_diff_patchid_options_init = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @test_core_structinit__compare() #0 {
  %1 = call i32 (...) @clar__skip()
  %2 = load i32, i32* @git_apply_options, align 4
  %3 = load i32, i32* @GIT_APPLY_OPTIONS_VERSION, align 4
  %4 = load i32, i32* @GIT_APPLY_OPTIONS_INIT, align 4
  %5 = load i32, i32* @git_apply_options_init, align 4
  %6 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %2, i32 %3, i32 %4, i32 %5)
  %7 = load i32, i32* @git_blame_options, align 4
  %8 = load i32, i32* @GIT_BLAME_OPTIONS_VERSION, align 4
  %9 = load i32, i32* @GIT_BLAME_OPTIONS_INIT, align 4
  %10 = load i32, i32* @git_blame_options_init, align 4
  %11 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %7, i32 %8, i32 %9, i32 %10)
  %12 = load i32, i32* @git_checkout_options, align 4
  %13 = load i32, i32* @GIT_CHECKOUT_OPTIONS_VERSION, align 4
  %14 = load i32, i32* @GIT_CHECKOUT_OPTIONS_INIT, align 4
  %15 = load i32, i32* @git_checkout_options_init, align 4
  %16 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %12, i32 %13, i32 %14, i32 %15)
  %17 = load i32, i32* @git_clone_options, align 4
  %18 = load i32, i32* @GIT_CLONE_OPTIONS_VERSION, align 4
  %19 = load i32, i32* @GIT_CLONE_OPTIONS_INIT, align 4
  %20 = load i32, i32* @git_clone_options_init, align 4
  %21 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %17, i32 %18, i32 %19, i32 %20)
  %22 = load i32, i32* @git_diff_options, align 4
  %23 = load i32, i32* @GIT_DIFF_OPTIONS_VERSION, align 4
  %24 = load i32, i32* @GIT_DIFF_OPTIONS_INIT, align 4
  %25 = load i32, i32* @git_diff_options_init, align 4
  %26 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %22, i32 %23, i32 %24, i32 %25)
  %27 = load i32, i32* @git_diff_find_options, align 4
  %28 = load i32, i32* @GIT_DIFF_FIND_OPTIONS_VERSION, align 4
  %29 = load i32, i32* @GIT_DIFF_FIND_OPTIONS_INIT, align 4
  %30 = load i32, i32* @git_diff_find_options_init, align 4
  %31 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %27, i32 %28, i32 %29, i32 %30)
  %32 = load i32, i32* @git_filter, align 4
  %33 = load i32, i32* @GIT_FILTER_VERSION, align 4
  %34 = load i32, i32* @GIT_FILTER_INIT, align 4
  %35 = load i32, i32* @git_filter_init, align 4
  %36 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %32, i32 %33, i32 %34, i32 %35)
  %37 = load i32, i32* @git_merge_file_input, align 4
  %38 = load i32, i32* @GIT_MERGE_FILE_INPUT_VERSION, align 4
  %39 = load i32, i32* @GIT_MERGE_FILE_INPUT_INIT, align 4
  %40 = load i32, i32* @git_merge_file_input_init, align 4
  %41 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %37, i32 %38, i32 %39, i32 %40)
  %42 = load i32, i32* @git_merge_file_options, align 4
  %43 = load i32, i32* @GIT_MERGE_FILE_OPTIONS_VERSION, align 4
  %44 = load i32, i32* @GIT_MERGE_FILE_OPTIONS_INIT, align 4
  %45 = load i32, i32* @git_merge_file_options_init, align 4
  %46 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %42, i32 %43, i32 %44, i32 %45)
  %47 = load i32, i32* @git_merge_options, align 4
  %48 = load i32, i32* @GIT_MERGE_OPTIONS_VERSION, align 4
  %49 = load i32, i32* @GIT_MERGE_OPTIONS_INIT, align 4
  %50 = load i32, i32* @git_merge_options_init, align 4
  %51 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %47, i32 %48, i32 %49, i32 %50)
  %52 = load i32, i32* @git_push_options, align 4
  %53 = load i32, i32* @GIT_PUSH_OPTIONS_VERSION, align 4
  %54 = load i32, i32* @GIT_PUSH_OPTIONS_INIT, align 4
  %55 = load i32, i32* @git_push_options_init, align 4
  %56 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %52, i32 %53, i32 %54, i32 %55)
  %57 = load i32, i32* @git_remote_callbacks, align 4
  %58 = load i32, i32* @GIT_REMOTE_CALLBACKS_VERSION, align 4
  %59 = load i32, i32* @GIT_REMOTE_CALLBACKS_INIT, align 4
  %60 = load i32, i32* @git_remote_init_callbacks, align 4
  %61 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %57, i32 %58, i32 %59, i32 %60)
  %62 = load i32, i32* @git_repository_init_options, align 4
  %63 = load i32, i32* @GIT_REPOSITORY_INIT_OPTIONS_VERSION, align 4
  %64 = load i32, i32* @GIT_REPOSITORY_INIT_OPTIONS_INIT, align 4
  %65 = load i32, i32* @git_repository_init_options_init, align 4
  %66 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %62, i32 %63, i32 %64, i32 %65)
  %67 = load i32, i32* @git_revert_options, align 4
  %68 = load i32, i32* @GIT_REVERT_OPTIONS_VERSION, align 4
  %69 = load i32, i32* @GIT_REVERT_OPTIONS_INIT, align 4
  %70 = load i32, i32* @git_revert_options_init, align 4
  %71 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %67, i32 %68, i32 %69, i32 %70)
  %72 = load i32, i32* @git_stash_apply_options, align 4
  %73 = load i32, i32* @GIT_STASH_APPLY_OPTIONS_VERSION, align 4
  %74 = load i32, i32* @GIT_STASH_APPLY_OPTIONS_INIT, align 4
  %75 = load i32, i32* @git_stash_apply_options_init, align 4
  %76 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %72, i32 %73, i32 %74, i32 %75)
  %77 = load i32, i32* @git_status_options, align 4
  %78 = load i32, i32* @GIT_STATUS_OPTIONS_VERSION, align 4
  %79 = load i32, i32* @GIT_STATUS_OPTIONS_INIT, align 4
  %80 = load i32, i32* @git_status_options_init, align 4
  %81 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %77, i32 %78, i32 %79, i32 %80)
  %82 = load i32, i32* @git_transport, align 4
  %83 = load i32, i32* @GIT_TRANSPORT_VERSION, align 4
  %84 = load i32, i32* @GIT_TRANSPORT_INIT, align 4
  %85 = load i32, i32* @git_transport_init, align 4
  %86 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %82, i32 %83, i32 %84, i32 %85)
  %87 = load i32, i32* @git_config_backend, align 4
  %88 = load i32, i32* @GIT_CONFIG_BACKEND_VERSION, align 4
  %89 = load i32, i32* @GIT_CONFIG_BACKEND_INIT, align 4
  %90 = load i32, i32* @git_config_init_backend, align 4
  %91 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %87, i32 %88, i32 %89, i32 %90)
  %92 = load i32, i32* @git_odb_backend, align 4
  %93 = load i32, i32* @GIT_ODB_BACKEND_VERSION, align 4
  %94 = load i32, i32* @GIT_ODB_BACKEND_INIT, align 4
  %95 = load i32, i32* @git_odb_init_backend, align 4
  %96 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %92, i32 %93, i32 %94, i32 %95)
  %97 = load i32, i32* @git_refdb_backend, align 4
  %98 = load i32, i32* @GIT_REFDB_BACKEND_VERSION, align 4
  %99 = load i32, i32* @GIT_REFDB_BACKEND_INIT, align 4
  %100 = load i32, i32* @git_refdb_init_backend, align 4
  %101 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %97, i32 %98, i32 %99, i32 %100)
  %102 = load i32, i32* @git_submodule_update_options, align 4
  %103 = load i32, i32* @GIT_SUBMODULE_UPDATE_OPTIONS_VERSION, align 4
  %104 = load i32, i32* @GIT_SUBMODULE_UPDATE_OPTIONS_INIT, align 4
  %105 = load i32, i32* @git_submodule_update_options_init, align 4
  %106 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %102, i32 %103, i32 %104, i32 %105)
  %107 = load i32, i32* @git_proxy_options, align 4
  %108 = load i32, i32* @GIT_PROXY_OPTIONS_VERSION, align 4
  %109 = load i32, i32* @GIT_PROXY_OPTIONS_INIT, align 4
  %110 = load i32, i32* @git_proxy_options_init, align 4
  %111 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %107, i32 %108, i32 %109, i32 %110)
  %112 = load i32, i32* @git_diff_patchid_options, align 4
  %113 = load i32, i32* @GIT_DIFF_PATCHID_OPTIONS_VERSION, align 4
  %114 = load i32, i32* @GIT_DIFF_PATCHID_OPTIONS_INIT, align 4
  %115 = load i32, i32* @git_diff_patchid_options_init, align 4
  %116 = call i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32 %112, i32 %113, i32 %114, i32 %115)
  ret void
}

declare dso_local i32 @clar__skip(...) #1

declare dso_local i32 @CHECK_MACRO_FUNC_INIT_EQUAL(i32, i32, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
