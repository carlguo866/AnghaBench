; ModuleID = '/home/carl/AnghaBench/esp-idf/components/wpa_supplicant/src/crypto/extr_md4-internal.c_MD4Transform.c'
source_filename = "/home/carl/AnghaBench/esp-idf/components/wpa_supplicant/src/crypto/extr_md4-internal.c_MD4Transform.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@MD4_BLOCK_LENGTH = common dso_local global i32 0, align 4
@F1 = common dso_local global i32 0, align 4
@F2 = common dso_local global i32 0, align 4
@F3 = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i64*, i32*)* @MD4Transform to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @MD4Transform(i64* %0, i32* %1) #0 {
  %3 = alloca i64*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  store i64* %0, i64** %3, align 8
  store i32* %1, i32** %4, align 8
  %11 = load i32, i32* @MD4_BLOCK_LENGTH, align 4
  %12 = zext i32 %11 to i64
  %13 = load i32, i32* @MD4_BLOCK_LENGTH, align 4
  %14 = sdiv i32 %13, 4
  %15 = zext i32 %14 to i64
  %16 = call i8* @llvm.stacksave()
  store i8* %16, i8** %9, align 8
  %17 = alloca i64, i64 %15, align 16
  store i64 %15, i64* %10, align 8
  %18 = load i32*, i32** %4, align 8
  %19 = mul nuw i64 8, %15
  %20 = trunc i64 %19 to i32
  %21 = call i32 @os_memcpy(i64* %17, i32* %18, i32 %20)
  %22 = load i64*, i64** %3, align 8
  %23 = getelementptr inbounds i64, i64* %22, i64 0
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %5, align 8
  %25 = load i64*, i64** %3, align 8
  %26 = getelementptr inbounds i64, i64* %25, i64 1
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %6, align 8
  %28 = load i64*, i64** %3, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 2
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %7, align 8
  %31 = load i64*, i64** %3, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 3
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %8, align 8
  %34 = load i32, i32* @F1, align 4
  %35 = load i64, i64* %5, align 8
  %36 = load i64, i64* %6, align 8
  %37 = load i64, i64* %7, align 8
  %38 = load i64, i64* %8, align 8
  %39 = getelementptr inbounds i64, i64* %17, i64 0
  %40 = load i64, i64* %39, align 16
  %41 = call i32 @MD4SETP(i32 %34, i64 %35, i64 %36, i64 %37, i64 %38, i64 %40, i32 3)
  %42 = load i32, i32* @F1, align 4
  %43 = load i64, i64* %8, align 8
  %44 = load i64, i64* %5, align 8
  %45 = load i64, i64* %6, align 8
  %46 = load i64, i64* %7, align 8
  %47 = getelementptr inbounds i64, i64* %17, i64 1
  %48 = load i64, i64* %47, align 8
  %49 = call i32 @MD4SETP(i32 %42, i64 %43, i64 %44, i64 %45, i64 %46, i64 %48, i32 7)
  %50 = load i32, i32* @F1, align 4
  %51 = load i64, i64* %7, align 8
  %52 = load i64, i64* %8, align 8
  %53 = load i64, i64* %5, align 8
  %54 = load i64, i64* %6, align 8
  %55 = getelementptr inbounds i64, i64* %17, i64 2
  %56 = load i64, i64* %55, align 16
  %57 = call i32 @MD4SETP(i32 %50, i64 %51, i64 %52, i64 %53, i64 %54, i64 %56, i32 11)
  %58 = load i32, i32* @F1, align 4
  %59 = load i64, i64* %6, align 8
  %60 = load i64, i64* %7, align 8
  %61 = load i64, i64* %8, align 8
  %62 = load i64, i64* %5, align 8
  %63 = getelementptr inbounds i64, i64* %17, i64 3
  %64 = load i64, i64* %63, align 8
  %65 = call i32 @MD4SETP(i32 %58, i64 %59, i64 %60, i64 %61, i64 %62, i64 %64, i32 19)
  %66 = load i32, i32* @F1, align 4
  %67 = load i64, i64* %5, align 8
  %68 = load i64, i64* %6, align 8
  %69 = load i64, i64* %7, align 8
  %70 = load i64, i64* %8, align 8
  %71 = getelementptr inbounds i64, i64* %17, i64 4
  %72 = load i64, i64* %71, align 16
  %73 = call i32 @MD4SETP(i32 %66, i64 %67, i64 %68, i64 %69, i64 %70, i64 %72, i32 3)
  %74 = load i32, i32* @F1, align 4
  %75 = load i64, i64* %8, align 8
  %76 = load i64, i64* %5, align 8
  %77 = load i64, i64* %6, align 8
  %78 = load i64, i64* %7, align 8
  %79 = getelementptr inbounds i64, i64* %17, i64 5
  %80 = load i64, i64* %79, align 8
  %81 = call i32 @MD4SETP(i32 %74, i64 %75, i64 %76, i64 %77, i64 %78, i64 %80, i32 7)
  %82 = load i32, i32* @F1, align 4
  %83 = load i64, i64* %7, align 8
  %84 = load i64, i64* %8, align 8
  %85 = load i64, i64* %5, align 8
  %86 = load i64, i64* %6, align 8
  %87 = getelementptr inbounds i64, i64* %17, i64 6
  %88 = load i64, i64* %87, align 16
  %89 = call i32 @MD4SETP(i32 %82, i64 %83, i64 %84, i64 %85, i64 %86, i64 %88, i32 11)
  %90 = load i32, i32* @F1, align 4
  %91 = load i64, i64* %6, align 8
  %92 = load i64, i64* %7, align 8
  %93 = load i64, i64* %8, align 8
  %94 = load i64, i64* %5, align 8
  %95 = getelementptr inbounds i64, i64* %17, i64 7
  %96 = load i64, i64* %95, align 8
  %97 = call i32 @MD4SETP(i32 %90, i64 %91, i64 %92, i64 %93, i64 %94, i64 %96, i32 19)
  %98 = load i32, i32* @F1, align 4
  %99 = load i64, i64* %5, align 8
  %100 = load i64, i64* %6, align 8
  %101 = load i64, i64* %7, align 8
  %102 = load i64, i64* %8, align 8
  %103 = getelementptr inbounds i64, i64* %17, i64 8
  %104 = load i64, i64* %103, align 16
  %105 = call i32 @MD4SETP(i32 %98, i64 %99, i64 %100, i64 %101, i64 %102, i64 %104, i32 3)
  %106 = load i32, i32* @F1, align 4
  %107 = load i64, i64* %8, align 8
  %108 = load i64, i64* %5, align 8
  %109 = load i64, i64* %6, align 8
  %110 = load i64, i64* %7, align 8
  %111 = getelementptr inbounds i64, i64* %17, i64 9
  %112 = load i64, i64* %111, align 8
  %113 = call i32 @MD4SETP(i32 %106, i64 %107, i64 %108, i64 %109, i64 %110, i64 %112, i32 7)
  %114 = load i32, i32* @F1, align 4
  %115 = load i64, i64* %7, align 8
  %116 = load i64, i64* %8, align 8
  %117 = load i64, i64* %5, align 8
  %118 = load i64, i64* %6, align 8
  %119 = getelementptr inbounds i64, i64* %17, i64 10
  %120 = load i64, i64* %119, align 16
  %121 = call i32 @MD4SETP(i32 %114, i64 %115, i64 %116, i64 %117, i64 %118, i64 %120, i32 11)
  %122 = load i32, i32* @F1, align 4
  %123 = load i64, i64* %6, align 8
  %124 = load i64, i64* %7, align 8
  %125 = load i64, i64* %8, align 8
  %126 = load i64, i64* %5, align 8
  %127 = getelementptr inbounds i64, i64* %17, i64 11
  %128 = load i64, i64* %127, align 8
  %129 = call i32 @MD4SETP(i32 %122, i64 %123, i64 %124, i64 %125, i64 %126, i64 %128, i32 19)
  %130 = load i32, i32* @F1, align 4
  %131 = load i64, i64* %5, align 8
  %132 = load i64, i64* %6, align 8
  %133 = load i64, i64* %7, align 8
  %134 = load i64, i64* %8, align 8
  %135 = getelementptr inbounds i64, i64* %17, i64 12
  %136 = load i64, i64* %135, align 16
  %137 = call i32 @MD4SETP(i32 %130, i64 %131, i64 %132, i64 %133, i64 %134, i64 %136, i32 3)
  %138 = load i32, i32* @F1, align 4
  %139 = load i64, i64* %8, align 8
  %140 = load i64, i64* %5, align 8
  %141 = load i64, i64* %6, align 8
  %142 = load i64, i64* %7, align 8
  %143 = getelementptr inbounds i64, i64* %17, i64 13
  %144 = load i64, i64* %143, align 8
  %145 = call i32 @MD4SETP(i32 %138, i64 %139, i64 %140, i64 %141, i64 %142, i64 %144, i32 7)
  %146 = load i32, i32* @F1, align 4
  %147 = load i64, i64* %7, align 8
  %148 = load i64, i64* %8, align 8
  %149 = load i64, i64* %5, align 8
  %150 = load i64, i64* %6, align 8
  %151 = getelementptr inbounds i64, i64* %17, i64 14
  %152 = load i64, i64* %151, align 16
  %153 = call i32 @MD4SETP(i32 %146, i64 %147, i64 %148, i64 %149, i64 %150, i64 %152, i32 11)
  %154 = load i32, i32* @F1, align 4
  %155 = load i64, i64* %6, align 8
  %156 = load i64, i64* %7, align 8
  %157 = load i64, i64* %8, align 8
  %158 = load i64, i64* %5, align 8
  %159 = getelementptr inbounds i64, i64* %17, i64 15
  %160 = load i64, i64* %159, align 8
  %161 = call i32 @MD4SETP(i32 %154, i64 %155, i64 %156, i64 %157, i64 %158, i64 %160, i32 19)
  %162 = load i32, i32* @F2, align 4
  %163 = load i64, i64* %5, align 8
  %164 = load i64, i64* %6, align 8
  %165 = load i64, i64* %7, align 8
  %166 = load i64, i64* %8, align 8
  %167 = getelementptr inbounds i64, i64* %17, i64 0
  %168 = load i64, i64* %167, align 16
  %169 = add nsw i64 %168, 1518500249
  %170 = call i32 @MD4SETP(i32 %162, i64 %163, i64 %164, i64 %165, i64 %166, i64 %169, i32 3)
  %171 = load i32, i32* @F2, align 4
  %172 = load i64, i64* %8, align 8
  %173 = load i64, i64* %5, align 8
  %174 = load i64, i64* %6, align 8
  %175 = load i64, i64* %7, align 8
  %176 = getelementptr inbounds i64, i64* %17, i64 4
  %177 = load i64, i64* %176, align 16
  %178 = add nsw i64 %177, 1518500249
  %179 = call i32 @MD4SETP(i32 %171, i64 %172, i64 %173, i64 %174, i64 %175, i64 %178, i32 5)
  %180 = load i32, i32* @F2, align 4
  %181 = load i64, i64* %7, align 8
  %182 = load i64, i64* %8, align 8
  %183 = load i64, i64* %5, align 8
  %184 = load i64, i64* %6, align 8
  %185 = getelementptr inbounds i64, i64* %17, i64 8
  %186 = load i64, i64* %185, align 16
  %187 = add nsw i64 %186, 1518500249
  %188 = call i32 @MD4SETP(i32 %180, i64 %181, i64 %182, i64 %183, i64 %184, i64 %187, i32 9)
  %189 = load i32, i32* @F2, align 4
  %190 = load i64, i64* %6, align 8
  %191 = load i64, i64* %7, align 8
  %192 = load i64, i64* %8, align 8
  %193 = load i64, i64* %5, align 8
  %194 = getelementptr inbounds i64, i64* %17, i64 12
  %195 = load i64, i64* %194, align 16
  %196 = add nsw i64 %195, 1518500249
  %197 = call i32 @MD4SETP(i32 %189, i64 %190, i64 %191, i64 %192, i64 %193, i64 %196, i32 13)
  %198 = load i32, i32* @F2, align 4
  %199 = load i64, i64* %5, align 8
  %200 = load i64, i64* %6, align 8
  %201 = load i64, i64* %7, align 8
  %202 = load i64, i64* %8, align 8
  %203 = getelementptr inbounds i64, i64* %17, i64 1
  %204 = load i64, i64* %203, align 8
  %205 = add nsw i64 %204, 1518500249
  %206 = call i32 @MD4SETP(i32 %198, i64 %199, i64 %200, i64 %201, i64 %202, i64 %205, i32 3)
  %207 = load i32, i32* @F2, align 4
  %208 = load i64, i64* %8, align 8
  %209 = load i64, i64* %5, align 8
  %210 = load i64, i64* %6, align 8
  %211 = load i64, i64* %7, align 8
  %212 = getelementptr inbounds i64, i64* %17, i64 5
  %213 = load i64, i64* %212, align 8
  %214 = add nsw i64 %213, 1518500249
  %215 = call i32 @MD4SETP(i32 %207, i64 %208, i64 %209, i64 %210, i64 %211, i64 %214, i32 5)
  %216 = load i32, i32* @F2, align 4
  %217 = load i64, i64* %7, align 8
  %218 = load i64, i64* %8, align 8
  %219 = load i64, i64* %5, align 8
  %220 = load i64, i64* %6, align 8
  %221 = getelementptr inbounds i64, i64* %17, i64 9
  %222 = load i64, i64* %221, align 8
  %223 = add nsw i64 %222, 1518500249
  %224 = call i32 @MD4SETP(i32 %216, i64 %217, i64 %218, i64 %219, i64 %220, i64 %223, i32 9)
  %225 = load i32, i32* @F2, align 4
  %226 = load i64, i64* %6, align 8
  %227 = load i64, i64* %7, align 8
  %228 = load i64, i64* %8, align 8
  %229 = load i64, i64* %5, align 8
  %230 = getelementptr inbounds i64, i64* %17, i64 13
  %231 = load i64, i64* %230, align 8
  %232 = add nsw i64 %231, 1518500249
  %233 = call i32 @MD4SETP(i32 %225, i64 %226, i64 %227, i64 %228, i64 %229, i64 %232, i32 13)
  %234 = load i32, i32* @F2, align 4
  %235 = load i64, i64* %5, align 8
  %236 = load i64, i64* %6, align 8
  %237 = load i64, i64* %7, align 8
  %238 = load i64, i64* %8, align 8
  %239 = getelementptr inbounds i64, i64* %17, i64 2
  %240 = load i64, i64* %239, align 16
  %241 = add nsw i64 %240, 1518500249
  %242 = call i32 @MD4SETP(i32 %234, i64 %235, i64 %236, i64 %237, i64 %238, i64 %241, i32 3)
  %243 = load i32, i32* @F2, align 4
  %244 = load i64, i64* %8, align 8
  %245 = load i64, i64* %5, align 8
  %246 = load i64, i64* %6, align 8
  %247 = load i64, i64* %7, align 8
  %248 = getelementptr inbounds i64, i64* %17, i64 6
  %249 = load i64, i64* %248, align 16
  %250 = add nsw i64 %249, 1518500249
  %251 = call i32 @MD4SETP(i32 %243, i64 %244, i64 %245, i64 %246, i64 %247, i64 %250, i32 5)
  %252 = load i32, i32* @F2, align 4
  %253 = load i64, i64* %7, align 8
  %254 = load i64, i64* %8, align 8
  %255 = load i64, i64* %5, align 8
  %256 = load i64, i64* %6, align 8
  %257 = getelementptr inbounds i64, i64* %17, i64 10
  %258 = load i64, i64* %257, align 16
  %259 = add nsw i64 %258, 1518500249
  %260 = call i32 @MD4SETP(i32 %252, i64 %253, i64 %254, i64 %255, i64 %256, i64 %259, i32 9)
  %261 = load i32, i32* @F2, align 4
  %262 = load i64, i64* %6, align 8
  %263 = load i64, i64* %7, align 8
  %264 = load i64, i64* %8, align 8
  %265 = load i64, i64* %5, align 8
  %266 = getelementptr inbounds i64, i64* %17, i64 14
  %267 = load i64, i64* %266, align 16
  %268 = add nsw i64 %267, 1518500249
  %269 = call i32 @MD4SETP(i32 %261, i64 %262, i64 %263, i64 %264, i64 %265, i64 %268, i32 13)
  %270 = load i32, i32* @F2, align 4
  %271 = load i64, i64* %5, align 8
  %272 = load i64, i64* %6, align 8
  %273 = load i64, i64* %7, align 8
  %274 = load i64, i64* %8, align 8
  %275 = getelementptr inbounds i64, i64* %17, i64 3
  %276 = load i64, i64* %275, align 8
  %277 = add nsw i64 %276, 1518500249
  %278 = call i32 @MD4SETP(i32 %270, i64 %271, i64 %272, i64 %273, i64 %274, i64 %277, i32 3)
  %279 = load i32, i32* @F2, align 4
  %280 = load i64, i64* %8, align 8
  %281 = load i64, i64* %5, align 8
  %282 = load i64, i64* %6, align 8
  %283 = load i64, i64* %7, align 8
  %284 = getelementptr inbounds i64, i64* %17, i64 7
  %285 = load i64, i64* %284, align 8
  %286 = add nsw i64 %285, 1518500249
  %287 = call i32 @MD4SETP(i32 %279, i64 %280, i64 %281, i64 %282, i64 %283, i64 %286, i32 5)
  %288 = load i32, i32* @F2, align 4
  %289 = load i64, i64* %7, align 8
  %290 = load i64, i64* %8, align 8
  %291 = load i64, i64* %5, align 8
  %292 = load i64, i64* %6, align 8
  %293 = getelementptr inbounds i64, i64* %17, i64 11
  %294 = load i64, i64* %293, align 8
  %295 = add nsw i64 %294, 1518500249
  %296 = call i32 @MD4SETP(i32 %288, i64 %289, i64 %290, i64 %291, i64 %292, i64 %295, i32 9)
  %297 = load i32, i32* @F2, align 4
  %298 = load i64, i64* %6, align 8
  %299 = load i64, i64* %7, align 8
  %300 = load i64, i64* %8, align 8
  %301 = load i64, i64* %5, align 8
  %302 = getelementptr inbounds i64, i64* %17, i64 15
  %303 = load i64, i64* %302, align 8
  %304 = add nsw i64 %303, 1518500249
  %305 = call i32 @MD4SETP(i32 %297, i64 %298, i64 %299, i64 %300, i64 %301, i64 %304, i32 13)
  %306 = load i32, i32* @F3, align 4
  %307 = load i64, i64* %5, align 8
  %308 = load i64, i64* %6, align 8
  %309 = load i64, i64* %7, align 8
  %310 = load i64, i64* %8, align 8
  %311 = getelementptr inbounds i64, i64* %17, i64 0
  %312 = load i64, i64* %311, align 16
  %313 = add nsw i64 %312, 1859775393
  %314 = call i32 @MD4SETP(i32 %306, i64 %307, i64 %308, i64 %309, i64 %310, i64 %313, i32 3)
  %315 = load i32, i32* @F3, align 4
  %316 = load i64, i64* %8, align 8
  %317 = load i64, i64* %5, align 8
  %318 = load i64, i64* %6, align 8
  %319 = load i64, i64* %7, align 8
  %320 = getelementptr inbounds i64, i64* %17, i64 8
  %321 = load i64, i64* %320, align 16
  %322 = add nsw i64 %321, 1859775393
  %323 = call i32 @MD4SETP(i32 %315, i64 %316, i64 %317, i64 %318, i64 %319, i64 %322, i32 9)
  %324 = load i32, i32* @F3, align 4
  %325 = load i64, i64* %7, align 8
  %326 = load i64, i64* %8, align 8
  %327 = load i64, i64* %5, align 8
  %328 = load i64, i64* %6, align 8
  %329 = getelementptr inbounds i64, i64* %17, i64 4
  %330 = load i64, i64* %329, align 16
  %331 = add nsw i64 %330, 1859775393
  %332 = call i32 @MD4SETP(i32 %324, i64 %325, i64 %326, i64 %327, i64 %328, i64 %331, i32 11)
  %333 = load i32, i32* @F3, align 4
  %334 = load i64, i64* %6, align 8
  %335 = load i64, i64* %7, align 8
  %336 = load i64, i64* %8, align 8
  %337 = load i64, i64* %5, align 8
  %338 = getelementptr inbounds i64, i64* %17, i64 12
  %339 = load i64, i64* %338, align 16
  %340 = add nsw i64 %339, 1859775393
  %341 = call i32 @MD4SETP(i32 %333, i64 %334, i64 %335, i64 %336, i64 %337, i64 %340, i32 15)
  %342 = load i32, i32* @F3, align 4
  %343 = load i64, i64* %5, align 8
  %344 = load i64, i64* %6, align 8
  %345 = load i64, i64* %7, align 8
  %346 = load i64, i64* %8, align 8
  %347 = getelementptr inbounds i64, i64* %17, i64 2
  %348 = load i64, i64* %347, align 16
  %349 = add nsw i64 %348, 1859775393
  %350 = call i32 @MD4SETP(i32 %342, i64 %343, i64 %344, i64 %345, i64 %346, i64 %349, i32 3)
  %351 = load i32, i32* @F3, align 4
  %352 = load i64, i64* %8, align 8
  %353 = load i64, i64* %5, align 8
  %354 = load i64, i64* %6, align 8
  %355 = load i64, i64* %7, align 8
  %356 = getelementptr inbounds i64, i64* %17, i64 10
  %357 = load i64, i64* %356, align 16
  %358 = add nsw i64 %357, 1859775393
  %359 = call i32 @MD4SETP(i32 %351, i64 %352, i64 %353, i64 %354, i64 %355, i64 %358, i32 9)
  %360 = load i32, i32* @F3, align 4
  %361 = load i64, i64* %7, align 8
  %362 = load i64, i64* %8, align 8
  %363 = load i64, i64* %5, align 8
  %364 = load i64, i64* %6, align 8
  %365 = getelementptr inbounds i64, i64* %17, i64 6
  %366 = load i64, i64* %365, align 16
  %367 = add nsw i64 %366, 1859775393
  %368 = call i32 @MD4SETP(i32 %360, i64 %361, i64 %362, i64 %363, i64 %364, i64 %367, i32 11)
  %369 = load i32, i32* @F3, align 4
  %370 = load i64, i64* %6, align 8
  %371 = load i64, i64* %7, align 8
  %372 = load i64, i64* %8, align 8
  %373 = load i64, i64* %5, align 8
  %374 = getelementptr inbounds i64, i64* %17, i64 14
  %375 = load i64, i64* %374, align 16
  %376 = add nsw i64 %375, 1859775393
  %377 = call i32 @MD4SETP(i32 %369, i64 %370, i64 %371, i64 %372, i64 %373, i64 %376, i32 15)
  %378 = load i32, i32* @F3, align 4
  %379 = load i64, i64* %5, align 8
  %380 = load i64, i64* %6, align 8
  %381 = load i64, i64* %7, align 8
  %382 = load i64, i64* %8, align 8
  %383 = getelementptr inbounds i64, i64* %17, i64 1
  %384 = load i64, i64* %383, align 8
  %385 = add nsw i64 %384, 1859775393
  %386 = call i32 @MD4SETP(i32 %378, i64 %379, i64 %380, i64 %381, i64 %382, i64 %385, i32 3)
  %387 = load i32, i32* @F3, align 4
  %388 = load i64, i64* %8, align 8
  %389 = load i64, i64* %5, align 8
  %390 = load i64, i64* %6, align 8
  %391 = load i64, i64* %7, align 8
  %392 = getelementptr inbounds i64, i64* %17, i64 9
  %393 = load i64, i64* %392, align 8
  %394 = add nsw i64 %393, 1859775393
  %395 = call i32 @MD4SETP(i32 %387, i64 %388, i64 %389, i64 %390, i64 %391, i64 %394, i32 9)
  %396 = load i32, i32* @F3, align 4
  %397 = load i64, i64* %7, align 8
  %398 = load i64, i64* %8, align 8
  %399 = load i64, i64* %5, align 8
  %400 = load i64, i64* %6, align 8
  %401 = getelementptr inbounds i64, i64* %17, i64 5
  %402 = load i64, i64* %401, align 8
  %403 = add nsw i64 %402, 1859775393
  %404 = call i32 @MD4SETP(i32 %396, i64 %397, i64 %398, i64 %399, i64 %400, i64 %403, i32 11)
  %405 = load i32, i32* @F3, align 4
  %406 = load i64, i64* %6, align 8
  %407 = load i64, i64* %7, align 8
  %408 = load i64, i64* %8, align 8
  %409 = load i64, i64* %5, align 8
  %410 = getelementptr inbounds i64, i64* %17, i64 13
  %411 = load i64, i64* %410, align 8
  %412 = add nsw i64 %411, 1859775393
  %413 = call i32 @MD4SETP(i32 %405, i64 %406, i64 %407, i64 %408, i64 %409, i64 %412, i32 15)
  %414 = load i32, i32* @F3, align 4
  %415 = load i64, i64* %5, align 8
  %416 = load i64, i64* %6, align 8
  %417 = load i64, i64* %7, align 8
  %418 = load i64, i64* %8, align 8
  %419 = getelementptr inbounds i64, i64* %17, i64 3
  %420 = load i64, i64* %419, align 8
  %421 = add nsw i64 %420, 1859775393
  %422 = call i32 @MD4SETP(i32 %414, i64 %415, i64 %416, i64 %417, i64 %418, i64 %421, i32 3)
  %423 = load i32, i32* @F3, align 4
  %424 = load i64, i64* %8, align 8
  %425 = load i64, i64* %5, align 8
  %426 = load i64, i64* %6, align 8
  %427 = load i64, i64* %7, align 8
  %428 = getelementptr inbounds i64, i64* %17, i64 11
  %429 = load i64, i64* %428, align 8
  %430 = add nsw i64 %429, 1859775393
  %431 = call i32 @MD4SETP(i32 %423, i64 %424, i64 %425, i64 %426, i64 %427, i64 %430, i32 9)
  %432 = load i32, i32* @F3, align 4
  %433 = load i64, i64* %7, align 8
  %434 = load i64, i64* %8, align 8
  %435 = load i64, i64* %5, align 8
  %436 = load i64, i64* %6, align 8
  %437 = getelementptr inbounds i64, i64* %17, i64 7
  %438 = load i64, i64* %437, align 8
  %439 = add nsw i64 %438, 1859775393
  %440 = call i32 @MD4SETP(i32 %432, i64 %433, i64 %434, i64 %435, i64 %436, i64 %439, i32 11)
  %441 = load i32, i32* @F3, align 4
  %442 = load i64, i64* %6, align 8
  %443 = load i64, i64* %7, align 8
  %444 = load i64, i64* %8, align 8
  %445 = load i64, i64* %5, align 8
  %446 = getelementptr inbounds i64, i64* %17, i64 15
  %447 = load i64, i64* %446, align 8
  %448 = add nsw i64 %447, 1859775393
  %449 = call i32 @MD4SETP(i32 %441, i64 %442, i64 %443, i64 %444, i64 %445, i64 %448, i32 15)
  %450 = load i64, i64* %5, align 8
  %451 = load i64*, i64** %3, align 8
  %452 = getelementptr inbounds i64, i64* %451, i64 0
  %453 = load i64, i64* %452, align 8
  %454 = add nsw i64 %453, %450
  store i64 %454, i64* %452, align 8
  %455 = load i64, i64* %6, align 8
  %456 = load i64*, i64** %3, align 8
  %457 = getelementptr inbounds i64, i64* %456, i64 1
  %458 = load i64, i64* %457, align 8
  %459 = add nsw i64 %458, %455
  store i64 %459, i64* %457, align 8
  %460 = load i64, i64* %7, align 8
  %461 = load i64*, i64** %3, align 8
  %462 = getelementptr inbounds i64, i64* %461, i64 2
  %463 = load i64, i64* %462, align 8
  %464 = add nsw i64 %463, %460
  store i64 %464, i64* %462, align 8
  %465 = load i64, i64* %8, align 8
  %466 = load i64*, i64** %3, align 8
  %467 = getelementptr inbounds i64, i64* %466, i64 3
  %468 = load i64, i64* %467, align 8
  %469 = add nsw i64 %468, %465
  store i64 %469, i64* %467, align 8
  %470 = load i8*, i8** %9, align 8
  call void @llvm.stackrestore(i8* %470)
  ret void
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @os_memcpy(i64*, i32*, i32) #2

declare dso_local i32 @MD4SETP(i32, i64, i64, i64, i64, i64, i32) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
