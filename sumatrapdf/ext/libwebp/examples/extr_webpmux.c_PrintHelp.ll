; ModuleID = '/home/carl/AnghaBench/sumatrapdf/ext/libwebp/examples/extr_webpmux.c_PrintHelp.c'
source_filename = "/home/carl/AnghaBench/sumatrapdf/ext/libwebp/examples/extr_webpmux.c_PrintHelp.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [49 x i8] c"Usage: webpmux -get GET_OPTIONS INPUT -o OUTPUT\0A\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"       webpmux -set SET_OPTIONS INPUT -o OUTPUT\0A\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"       webpmux -duration DURATION_OPTIONS [-duration ...]\0A\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"               INPUT -o OUTPUT\0A\00", align 1
@.str.4 = private unnamed_addr constant [53 x i8] c"       webpmux -strip STRIP_OPTIONS INPUT -o OUTPUT\0A\00", align 1
@.str.5 = private unnamed_addr constant [68 x i8] c"       webpmux -frame FRAME_OPTIONS [-frame...] [-loop LOOP_COUNT]\0A\00", align 1
@.str.6 = private unnamed_addr constant [54 x i8] c"               [-bgcolor BACKGROUND_COLOR] -o OUTPUT\0A\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"       webpmux -info INPUT\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"       webpmux [-h|-help]\0A\00", align 1
@.str.9 = private unnamed_addr constant [25 x i8] c"       webpmux -version\0A\00", align 1
@.str.10 = private unnamed_addr constant [35 x i8] c"       webpmux argument_file_name\0A\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.12 = private unnamed_addr constant [14 x i8] c"GET_OPTIONS:\0A\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c" Extract relevant data:\0A\00", align 1
@.str.14 = private unnamed_addr constant [30 x i8] c"   icc       get ICC profile\0A\00", align 1
@.str.15 = private unnamed_addr constant [32 x i8] c"   exif      get EXIF metadata\0A\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"   xmp       get XMP metadata\0A\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"   frame n   get nth frame\0A\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"SET_OPTIONS:\0A\00", align 1
@.str.19 = private unnamed_addr constant [30 x i8] c" Set color profile/metadata:\0A\00", align 1
@.str.20 = private unnamed_addr constant [38 x i8] c"   icc  file.icc     set ICC profile\0A\00", align 1
@.str.21 = private unnamed_addr constant [40 x i8] c"   exif file.exif    set EXIF metadata\0A\00", align 1
@.str.22 = private unnamed_addr constant [39 x i8] c"   xmp  file.xmp     set XMP metadata\0A\00", align 1
@.str.23 = private unnamed_addr constant [61 x i8] c"   where:    'file.icc' contains the ICC profile to be set,\0A\00", align 1
@.str.24 = private unnamed_addr constant [63 x i8] c"             'file.exif' contains the EXIF metadata to be set\0A\00", align 1
@.str.25 = private unnamed_addr constant [61 x i8] c"             'file.xmp' contains the XMP metadata to be set\0A\00", align 1
@.str.26 = private unnamed_addr constant [19 x i8] c"DURATION_OPTIONS:\0A\00", align 1
@.str.27 = private unnamed_addr constant [35 x i8] c" Set duration of selected frames:\0A\00", align 1
@.str.28 = private unnamed_addr constant [53 x i8] c"   duration            set duration for each frames\0A\00", align 1
@.str.29 = private unnamed_addr constant [59 x i8] c"   duration,frame      set duration of a particular frame\0A\00", align 1
@.str.30 = private unnamed_addr constant [54 x i8] c"   duration,start,end  set duration of frames in the\0A\00", align 1
@.str.31 = private unnamed_addr constant [47 x i8] c"                        interval [start,end])\0A\00", align 1
@.str.32 = private unnamed_addr constant [54 x i8] c"   where: 'duration' is the duration in milliseconds\0A\00", align 1
@.str.33 = private unnamed_addr constant [44 x i8] c"          'start' is the start frame index\0A\00", align 1
@.str.34 = private unnamed_addr constant [50 x i8] c"          'end' is the inclusive end frame index\0A\00", align 1
@.str.35 = private unnamed_addr constant [59 x i8] c"           The special 'end' value '0' means: last frame.\0A\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"STRIP_OPTIONS:\0A\00", align 1
@.str.37 = private unnamed_addr constant [32 x i8] c" Strip color profile/metadata:\0A\00", align 1
@.str.38 = private unnamed_addr constant [32 x i8] c"   icc       strip ICC profile\0A\00", align 1
@.str.39 = private unnamed_addr constant [34 x i8] c"   exif      strip EXIF metadata\0A\00", align 1
@.str.40 = private unnamed_addr constant [33 x i8] c"   xmp       strip XMP metadata\0A\00", align 1
@.str.41 = private unnamed_addr constant [19 x i8] c"FRAME_OPTIONS(i):\0A\00", align 1
@.str.42 = private unnamed_addr constant [20 x i8] c" Create animation:\0A\00", align 1
@.str.43 = private unnamed_addr constant [32 x i8] c"   file_i +di+[xi+yi[+mi[bi]]]\0A\00", align 1
@.str.44 = private unnamed_addr constant [66 x i8] c"   where:    'file_i' is the i'th animation frame (WebP format),\0A\00", align 1
@.str.45 = private unnamed_addr constant [60 x i8] c"             'di' is the pause duration before next frame,\0A\00", align 1
@.str.46 = private unnamed_addr constant [65 x i8] c"             'xi','yi' specify the image offset for this frame,\0A\00", align 1
@.str.47 = private unnamed_addr constant [66 x i8] c"             'mi' is the dispose method for this frame (0 or 1),\0A\00", align 1
@.str.48 = private unnamed_addr constant [68 x i8] c"             'bi' is the blending method for this frame (+b or -b)\0A\00", align 1
@.str.49 = private unnamed_addr constant [13 x i8] c"LOOP_COUNT:\0A\00", align 1
@.str.50 = private unnamed_addr constant [43 x i8] c" Number of times to repeat the animation.\0A\00", align 1
@.str.51 = private unnamed_addr constant [53 x i8] c" Valid range is 0 to 65535 [Default: 0 (infinite)].\0A\00", align 1
@.str.52 = private unnamed_addr constant [19 x i8] c"BACKGROUND_COLOR:\0A\00", align 1
@.str.53 = private unnamed_addr constant [34 x i8] c" Background color of the canvas.\0A\00", align 1
@.str.54 = private unnamed_addr constant [11 x i8] c"  A,R,G,B\0A\00", align 1
@.str.55 = private unnamed_addr constant [81 x i8] c"  where:    'A', 'R', 'G' and 'B' are integers in the range 0 to 255 specifying\0A\00", align 1
@.str.56 = private unnamed_addr constant [74 x i8] c"            the Alpha, Red, Green and Blue component values respectively\0A\00", align 1
@.str.57 = private unnamed_addr constant [40 x i8] c"            [Default: 255,255,255,255]\0A\00", align 1
@.str.58 = private unnamed_addr constant [37 x i8] c"\0AINPUT & OUTPUT are in WebP format.\0A\00", align 1
@.str.59 = private unnamed_addr constant [59 x i8] c"\0ANote: The nature of EXIF, XMP and ICC data is not checked\00", align 1
@.str.60 = private unnamed_addr constant [30 x i8] c" and is assumed to be\0Avalid.\0A\00", align 1
@.str.61 = private unnamed_addr constant [79 x i8] c"\0ANote: if a single file name is passed as the argument, the arguments will be\0A\00", align 1
@.str.62 = private unnamed_addr constant [80 x i8] c"tokenized from this file. The file name must not start with the character '-'.\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void ()* @PrintHelp to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @PrintHelp() #0 {
  %1 = call i32 @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0))
  %2 = call i32 @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0))
  %3 = call i32 @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0))
  %4 = call i32 @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0))
  %5 = call i32 @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.4, i64 0, i64 0))
  %6 = call i32 @printf(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0))
  %7 = call i32 @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.6, i64 0, i64 0))
  %8 = call i32 @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0))
  %9 = call i32 @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0))
  %10 = call i32 @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.9, i64 0, i64 0))
  %11 = call i32 @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0))
  %12 = call i32 @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0))
  %13 = call i32 @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0))
  %14 = call i32 @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0))
  %15 = call i32 @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i64 0, i64 0))
  %16 = call i32 @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i64 0, i64 0))
  %17 = call i32 @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0))
  %18 = call i32 @printf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0))
  %19 = call i32 @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0))
  %20 = call i32 @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0))
  %21 = call i32 @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19, i64 0, i64 0))
  %22 = call i32 @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i64 0, i64 0))
  %23 = call i32 @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.21, i64 0, i64 0))
  %24 = call i32 @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.22, i64 0, i64 0))
  %25 = call i32 @printf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.23, i64 0, i64 0))
  %26 = call i32 @printf(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.24, i64 0, i64 0))
  %27 = call i32 @printf(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.25, i64 0, i64 0))
  %28 = call i32 @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0))
  %29 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i64 0, i64 0))
  %30 = call i32 @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.27, i64 0, i64 0))
  %31 = call i32 @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.28, i64 0, i64 0))
  %32 = call i32 @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.29, i64 0, i64 0))
  %33 = call i32 @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.30, i64 0, i64 0))
  %34 = call i32 @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.31, i64 0, i64 0))
  %35 = call i32 @printf(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.32, i64 0, i64 0))
  %36 = call i32 @printf(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.33, i64 0, i64 0))
  %37 = call i32 @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.34, i64 0, i64 0))
  %38 = call i32 @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.35, i64 0, i64 0))
  %39 = call i32 @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0))
  %40 = call i32 @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i64 0, i64 0))
  %41 = call i32 @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37, i64 0, i64 0))
  %42 = call i32 @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.38, i64 0, i64 0))
  %43 = call i32 @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.39, i64 0, i64 0))
  %44 = call i32 @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.40, i64 0, i64 0))
  %45 = call i32 @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0))
  %46 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.41, i64 0, i64 0))
  %47 = call i32 @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.42, i64 0, i64 0))
  %48 = call i32 @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.43, i64 0, i64 0))
  %49 = call i32 @printf(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.44, i64 0, i64 0))
  %50 = call i32 @printf(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.45, i64 0, i64 0))
  %51 = call i32 @printf(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.46, i64 0, i64 0))
  %52 = call i32 @printf(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.47, i64 0, i64 0))
  %53 = call i32 @printf(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.48, i64 0, i64 0))
  %54 = call i32 @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0))
  %55 = call i32 @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i64 0, i64 0))
  %56 = call i32 @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.50, i64 0, i64 0))
  %57 = call i32 @printf(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.51, i64 0, i64 0))
  %58 = call i32 @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0))
  %59 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.52, i64 0, i64 0))
  %60 = call i32 @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0))
  %61 = call i32 @printf(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i64 0, i64 0))
  %62 = call i32 @printf(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.55, i64 0, i64 0))
  %63 = call i32 @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.56, i64 0, i64 0))
  %64 = call i32 @printf(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.57, i64 0, i64 0))
  %65 = call i32 @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.58, i64 0, i64 0))
  %66 = call i32 @printf(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.59, i64 0, i64 0))
  %67 = call i32 @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.60, i64 0, i64 0))
  %68 = call i32 @printf(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.61, i64 0, i64 0))
  %69 = call i32 @printf(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.62, i64 0, i64 0))
  ret void
}

declare dso_local i32 @printf(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
