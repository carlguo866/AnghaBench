; ModuleID = '/home/carl/AnghaBench/openssl/crypto/ec/extr_ecp_nistp521.c_felem_square.c'
source_filename = "/home/carl/AnghaBench/openssl/crypto/ec/extr_ecp_nistp521.c_felem_square.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i32*, i32*)* @felem_square to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @felem_square(i32* %0, i32* %1) #0 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %7 = load i32*, i32** %5, align 8
  %8 = load i32*, i32** %4, align 8
  %9 = call i32 @felem_scalar(i32* %7, i32* %8, i32 2)
  %10 = load i32*, i32** %6, align 8
  %11 = load i32*, i32** %4, align 8
  %12 = call i32 @felem_scalar(i32* %10, i32* %11, i32 4)
  %13 = load i32*, i32** %4, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 0
  %15 = load i32, i32* %14, align 4
  %16 = load i32*, i32** %4, align 8
  %17 = getelementptr inbounds i32, i32* %16, i64 0
  %18 = load i32, i32* %17, align 4
  %19 = mul nsw i32 %15, %18
  %20 = load i32*, i32** %3, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 0
  store i32 %19, i32* %21, align 4
  %22 = load i32*, i32** %4, align 8
  %23 = getelementptr inbounds i32, i32* %22, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = load i32*, i32** %5, align 8
  %26 = getelementptr inbounds i32, i32* %25, i64 1
  %27 = load i32, i32* %26, align 4
  %28 = mul nsw i32 %24, %27
  %29 = load i32*, i32** %3, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 1
  store i32 %28, i32* %30, align 4
  %31 = load i32*, i32** %4, align 8
  %32 = getelementptr inbounds i32, i32* %31, i64 0
  %33 = load i32, i32* %32, align 4
  %34 = load i32*, i32** %5, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 2
  %36 = load i32, i32* %35, align 4
  %37 = mul nsw i32 %33, %36
  %38 = load i32*, i32** %4, align 8
  %39 = getelementptr inbounds i32, i32* %38, i64 1
  %40 = load i32, i32* %39, align 4
  %41 = load i32*, i32** %4, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 1
  %43 = load i32, i32* %42, align 4
  %44 = mul nsw i32 %40, %43
  %45 = add nsw i32 %37, %44
  %46 = load i32*, i32** %3, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 2
  store i32 %45, i32* %47, align 4
  %48 = load i32*, i32** %4, align 8
  %49 = getelementptr inbounds i32, i32* %48, i64 0
  %50 = load i32, i32* %49, align 4
  %51 = load i32*, i32** %5, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 3
  %53 = load i32, i32* %52, align 4
  %54 = mul nsw i32 %50, %53
  %55 = load i32*, i32** %4, align 8
  %56 = getelementptr inbounds i32, i32* %55, i64 1
  %57 = load i32, i32* %56, align 4
  %58 = load i32*, i32** %5, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 2
  %60 = load i32, i32* %59, align 4
  %61 = mul nsw i32 %57, %60
  %62 = add nsw i32 %54, %61
  %63 = load i32*, i32** %3, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 3
  store i32 %62, i32* %64, align 4
  %65 = load i32*, i32** %4, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 0
  %67 = load i32, i32* %66, align 4
  %68 = load i32*, i32** %5, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 4
  %70 = load i32, i32* %69, align 4
  %71 = mul nsw i32 %67, %70
  %72 = load i32*, i32** %4, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 1
  %74 = load i32, i32* %73, align 4
  %75 = load i32*, i32** %5, align 8
  %76 = getelementptr inbounds i32, i32* %75, i64 3
  %77 = load i32, i32* %76, align 4
  %78 = mul nsw i32 %74, %77
  %79 = add nsw i32 %71, %78
  %80 = load i32*, i32** %4, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 2
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %4, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 2
  %85 = load i32, i32* %84, align 4
  %86 = mul nsw i32 %82, %85
  %87 = add nsw i32 %79, %86
  %88 = load i32*, i32** %3, align 8
  %89 = getelementptr inbounds i32, i32* %88, i64 4
  store i32 %87, i32* %89, align 4
  %90 = load i32*, i32** %4, align 8
  %91 = getelementptr inbounds i32, i32* %90, i64 0
  %92 = load i32, i32* %91, align 4
  %93 = load i32*, i32** %5, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 5
  %95 = load i32, i32* %94, align 4
  %96 = mul nsw i32 %92, %95
  %97 = load i32*, i32** %4, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 1
  %99 = load i32, i32* %98, align 4
  %100 = load i32*, i32** %5, align 8
  %101 = getelementptr inbounds i32, i32* %100, i64 4
  %102 = load i32, i32* %101, align 4
  %103 = mul nsw i32 %99, %102
  %104 = add nsw i32 %96, %103
  %105 = load i32*, i32** %4, align 8
  %106 = getelementptr inbounds i32, i32* %105, i64 2
  %107 = load i32, i32* %106, align 4
  %108 = load i32*, i32** %5, align 8
  %109 = getelementptr inbounds i32, i32* %108, i64 3
  %110 = load i32, i32* %109, align 4
  %111 = mul nsw i32 %107, %110
  %112 = add nsw i32 %104, %111
  %113 = load i32*, i32** %3, align 8
  %114 = getelementptr inbounds i32, i32* %113, i64 5
  store i32 %112, i32* %114, align 4
  %115 = load i32*, i32** %4, align 8
  %116 = getelementptr inbounds i32, i32* %115, i64 0
  %117 = load i32, i32* %116, align 4
  %118 = load i32*, i32** %5, align 8
  %119 = getelementptr inbounds i32, i32* %118, i64 6
  %120 = load i32, i32* %119, align 4
  %121 = mul nsw i32 %117, %120
  %122 = load i32*, i32** %4, align 8
  %123 = getelementptr inbounds i32, i32* %122, i64 1
  %124 = load i32, i32* %123, align 4
  %125 = load i32*, i32** %5, align 8
  %126 = getelementptr inbounds i32, i32* %125, i64 5
  %127 = load i32, i32* %126, align 4
  %128 = mul nsw i32 %124, %127
  %129 = add nsw i32 %121, %128
  %130 = load i32*, i32** %4, align 8
  %131 = getelementptr inbounds i32, i32* %130, i64 2
  %132 = load i32, i32* %131, align 4
  %133 = load i32*, i32** %5, align 8
  %134 = getelementptr inbounds i32, i32* %133, i64 4
  %135 = load i32, i32* %134, align 4
  %136 = mul nsw i32 %132, %135
  %137 = add nsw i32 %129, %136
  %138 = load i32*, i32** %4, align 8
  %139 = getelementptr inbounds i32, i32* %138, i64 3
  %140 = load i32, i32* %139, align 4
  %141 = load i32*, i32** %4, align 8
  %142 = getelementptr inbounds i32, i32* %141, i64 3
  %143 = load i32, i32* %142, align 4
  %144 = mul nsw i32 %140, %143
  %145 = add nsw i32 %137, %144
  %146 = load i32*, i32** %3, align 8
  %147 = getelementptr inbounds i32, i32* %146, i64 6
  store i32 %145, i32* %147, align 4
  %148 = load i32*, i32** %4, align 8
  %149 = getelementptr inbounds i32, i32* %148, i64 0
  %150 = load i32, i32* %149, align 4
  %151 = load i32*, i32** %5, align 8
  %152 = getelementptr inbounds i32, i32* %151, i64 7
  %153 = load i32, i32* %152, align 4
  %154 = mul nsw i32 %150, %153
  %155 = load i32*, i32** %4, align 8
  %156 = getelementptr inbounds i32, i32* %155, i64 1
  %157 = load i32, i32* %156, align 4
  %158 = load i32*, i32** %5, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 6
  %160 = load i32, i32* %159, align 4
  %161 = mul nsw i32 %157, %160
  %162 = add nsw i32 %154, %161
  %163 = load i32*, i32** %4, align 8
  %164 = getelementptr inbounds i32, i32* %163, i64 2
  %165 = load i32, i32* %164, align 4
  %166 = load i32*, i32** %5, align 8
  %167 = getelementptr inbounds i32, i32* %166, i64 5
  %168 = load i32, i32* %167, align 4
  %169 = mul nsw i32 %165, %168
  %170 = add nsw i32 %162, %169
  %171 = load i32*, i32** %4, align 8
  %172 = getelementptr inbounds i32, i32* %171, i64 3
  %173 = load i32, i32* %172, align 4
  %174 = load i32*, i32** %5, align 8
  %175 = getelementptr inbounds i32, i32* %174, i64 4
  %176 = load i32, i32* %175, align 4
  %177 = mul nsw i32 %173, %176
  %178 = add nsw i32 %170, %177
  %179 = load i32*, i32** %3, align 8
  %180 = getelementptr inbounds i32, i32* %179, i64 7
  store i32 %178, i32* %180, align 4
  %181 = load i32*, i32** %4, align 8
  %182 = getelementptr inbounds i32, i32* %181, i64 0
  %183 = load i32, i32* %182, align 4
  %184 = load i32*, i32** %5, align 8
  %185 = getelementptr inbounds i32, i32* %184, i64 8
  %186 = load i32, i32* %185, align 4
  %187 = mul nsw i32 %183, %186
  %188 = load i32*, i32** %4, align 8
  %189 = getelementptr inbounds i32, i32* %188, i64 1
  %190 = load i32, i32* %189, align 4
  %191 = load i32*, i32** %5, align 8
  %192 = getelementptr inbounds i32, i32* %191, i64 7
  %193 = load i32, i32* %192, align 4
  %194 = mul nsw i32 %190, %193
  %195 = add nsw i32 %187, %194
  %196 = load i32*, i32** %4, align 8
  %197 = getelementptr inbounds i32, i32* %196, i64 2
  %198 = load i32, i32* %197, align 4
  %199 = load i32*, i32** %5, align 8
  %200 = getelementptr inbounds i32, i32* %199, i64 6
  %201 = load i32, i32* %200, align 4
  %202 = mul nsw i32 %198, %201
  %203 = add nsw i32 %195, %202
  %204 = load i32*, i32** %4, align 8
  %205 = getelementptr inbounds i32, i32* %204, i64 3
  %206 = load i32, i32* %205, align 4
  %207 = load i32*, i32** %5, align 8
  %208 = getelementptr inbounds i32, i32* %207, i64 5
  %209 = load i32, i32* %208, align 4
  %210 = mul nsw i32 %206, %209
  %211 = add nsw i32 %203, %210
  %212 = load i32*, i32** %4, align 8
  %213 = getelementptr inbounds i32, i32* %212, i64 4
  %214 = load i32, i32* %213, align 4
  %215 = load i32*, i32** %4, align 8
  %216 = getelementptr inbounds i32, i32* %215, i64 4
  %217 = load i32, i32* %216, align 4
  %218 = mul nsw i32 %214, %217
  %219 = add nsw i32 %211, %218
  %220 = load i32*, i32** %3, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 8
  store i32 %219, i32* %221, align 4
  %222 = load i32*, i32** %4, align 8
  %223 = getelementptr inbounds i32, i32* %222, i64 1
  %224 = load i32, i32* %223, align 4
  %225 = load i32*, i32** %6, align 8
  %226 = getelementptr inbounds i32, i32* %225, i64 8
  %227 = load i32, i32* %226, align 4
  %228 = mul nsw i32 %224, %227
  %229 = load i32*, i32** %4, align 8
  %230 = getelementptr inbounds i32, i32* %229, i64 2
  %231 = load i32, i32* %230, align 4
  %232 = load i32*, i32** %6, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 7
  %234 = load i32, i32* %233, align 4
  %235 = mul nsw i32 %231, %234
  %236 = add nsw i32 %228, %235
  %237 = load i32*, i32** %4, align 8
  %238 = getelementptr inbounds i32, i32* %237, i64 3
  %239 = load i32, i32* %238, align 4
  %240 = load i32*, i32** %6, align 8
  %241 = getelementptr inbounds i32, i32* %240, i64 6
  %242 = load i32, i32* %241, align 4
  %243 = mul nsw i32 %239, %242
  %244 = add nsw i32 %236, %243
  %245 = load i32*, i32** %4, align 8
  %246 = getelementptr inbounds i32, i32* %245, i64 4
  %247 = load i32, i32* %246, align 4
  %248 = load i32*, i32** %6, align 8
  %249 = getelementptr inbounds i32, i32* %248, i64 5
  %250 = load i32, i32* %249, align 4
  %251 = mul nsw i32 %247, %250
  %252 = add nsw i32 %244, %251
  %253 = load i32*, i32** %3, align 8
  %254 = getelementptr inbounds i32, i32* %253, i64 0
  %255 = load i32, i32* %254, align 4
  %256 = add nsw i32 %255, %252
  store i32 %256, i32* %254, align 4
  %257 = load i32*, i32** %4, align 8
  %258 = getelementptr inbounds i32, i32* %257, i64 2
  %259 = load i32, i32* %258, align 4
  %260 = load i32*, i32** %6, align 8
  %261 = getelementptr inbounds i32, i32* %260, i64 8
  %262 = load i32, i32* %261, align 4
  %263 = mul nsw i32 %259, %262
  %264 = load i32*, i32** %4, align 8
  %265 = getelementptr inbounds i32, i32* %264, i64 3
  %266 = load i32, i32* %265, align 4
  %267 = load i32*, i32** %6, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 7
  %269 = load i32, i32* %268, align 4
  %270 = mul nsw i32 %266, %269
  %271 = add nsw i32 %263, %270
  %272 = load i32*, i32** %4, align 8
  %273 = getelementptr inbounds i32, i32* %272, i64 4
  %274 = load i32, i32* %273, align 4
  %275 = load i32*, i32** %6, align 8
  %276 = getelementptr inbounds i32, i32* %275, i64 6
  %277 = load i32, i32* %276, align 4
  %278 = mul nsw i32 %274, %277
  %279 = add nsw i32 %271, %278
  %280 = load i32*, i32** %4, align 8
  %281 = getelementptr inbounds i32, i32* %280, i64 5
  %282 = load i32, i32* %281, align 4
  %283 = load i32*, i32** %5, align 8
  %284 = getelementptr inbounds i32, i32* %283, i64 5
  %285 = load i32, i32* %284, align 4
  %286 = mul nsw i32 %282, %285
  %287 = add nsw i32 %279, %286
  %288 = load i32*, i32** %3, align 8
  %289 = getelementptr inbounds i32, i32* %288, i64 1
  %290 = load i32, i32* %289, align 4
  %291 = add nsw i32 %290, %287
  store i32 %291, i32* %289, align 4
  %292 = load i32*, i32** %4, align 8
  %293 = getelementptr inbounds i32, i32* %292, i64 3
  %294 = load i32, i32* %293, align 4
  %295 = load i32*, i32** %6, align 8
  %296 = getelementptr inbounds i32, i32* %295, i64 8
  %297 = load i32, i32* %296, align 4
  %298 = mul nsw i32 %294, %297
  %299 = load i32*, i32** %4, align 8
  %300 = getelementptr inbounds i32, i32* %299, i64 4
  %301 = load i32, i32* %300, align 4
  %302 = load i32*, i32** %6, align 8
  %303 = getelementptr inbounds i32, i32* %302, i64 7
  %304 = load i32, i32* %303, align 4
  %305 = mul nsw i32 %301, %304
  %306 = add nsw i32 %298, %305
  %307 = load i32*, i32** %4, align 8
  %308 = getelementptr inbounds i32, i32* %307, i64 5
  %309 = load i32, i32* %308, align 4
  %310 = load i32*, i32** %6, align 8
  %311 = getelementptr inbounds i32, i32* %310, i64 6
  %312 = load i32, i32* %311, align 4
  %313 = mul nsw i32 %309, %312
  %314 = add nsw i32 %306, %313
  %315 = load i32*, i32** %3, align 8
  %316 = getelementptr inbounds i32, i32* %315, i64 2
  %317 = load i32, i32* %316, align 4
  %318 = add nsw i32 %317, %314
  store i32 %318, i32* %316, align 4
  %319 = load i32*, i32** %4, align 8
  %320 = getelementptr inbounds i32, i32* %319, i64 4
  %321 = load i32, i32* %320, align 4
  %322 = load i32*, i32** %6, align 8
  %323 = getelementptr inbounds i32, i32* %322, i64 8
  %324 = load i32, i32* %323, align 4
  %325 = mul nsw i32 %321, %324
  %326 = load i32*, i32** %4, align 8
  %327 = getelementptr inbounds i32, i32* %326, i64 5
  %328 = load i32, i32* %327, align 4
  %329 = load i32*, i32** %6, align 8
  %330 = getelementptr inbounds i32, i32* %329, i64 7
  %331 = load i32, i32* %330, align 4
  %332 = mul nsw i32 %328, %331
  %333 = add nsw i32 %325, %332
  %334 = load i32*, i32** %4, align 8
  %335 = getelementptr inbounds i32, i32* %334, i64 6
  %336 = load i32, i32* %335, align 4
  %337 = load i32*, i32** %5, align 8
  %338 = getelementptr inbounds i32, i32* %337, i64 6
  %339 = load i32, i32* %338, align 4
  %340 = mul nsw i32 %336, %339
  %341 = add nsw i32 %333, %340
  %342 = load i32*, i32** %3, align 8
  %343 = getelementptr inbounds i32, i32* %342, i64 3
  %344 = load i32, i32* %343, align 4
  %345 = add nsw i32 %344, %341
  store i32 %345, i32* %343, align 4
  %346 = load i32*, i32** %4, align 8
  %347 = getelementptr inbounds i32, i32* %346, i64 5
  %348 = load i32, i32* %347, align 4
  %349 = load i32*, i32** %6, align 8
  %350 = getelementptr inbounds i32, i32* %349, i64 8
  %351 = load i32, i32* %350, align 4
  %352 = mul nsw i32 %348, %351
  %353 = load i32*, i32** %4, align 8
  %354 = getelementptr inbounds i32, i32* %353, i64 6
  %355 = load i32, i32* %354, align 4
  %356 = load i32*, i32** %6, align 8
  %357 = getelementptr inbounds i32, i32* %356, i64 7
  %358 = load i32, i32* %357, align 4
  %359 = mul nsw i32 %355, %358
  %360 = add nsw i32 %352, %359
  %361 = load i32*, i32** %3, align 8
  %362 = getelementptr inbounds i32, i32* %361, i64 4
  %363 = load i32, i32* %362, align 4
  %364 = add nsw i32 %363, %360
  store i32 %364, i32* %362, align 4
  %365 = load i32*, i32** %4, align 8
  %366 = getelementptr inbounds i32, i32* %365, i64 6
  %367 = load i32, i32* %366, align 4
  %368 = load i32*, i32** %6, align 8
  %369 = getelementptr inbounds i32, i32* %368, i64 8
  %370 = load i32, i32* %369, align 4
  %371 = mul nsw i32 %367, %370
  %372 = load i32*, i32** %4, align 8
  %373 = getelementptr inbounds i32, i32* %372, i64 7
  %374 = load i32, i32* %373, align 4
  %375 = load i32*, i32** %5, align 8
  %376 = getelementptr inbounds i32, i32* %375, i64 7
  %377 = load i32, i32* %376, align 4
  %378 = mul nsw i32 %374, %377
  %379 = add nsw i32 %371, %378
  %380 = load i32*, i32** %3, align 8
  %381 = getelementptr inbounds i32, i32* %380, i64 5
  %382 = load i32, i32* %381, align 4
  %383 = add nsw i32 %382, %379
  store i32 %383, i32* %381, align 4
  %384 = load i32*, i32** %4, align 8
  %385 = getelementptr inbounds i32, i32* %384, i64 7
  %386 = load i32, i32* %385, align 4
  %387 = load i32*, i32** %6, align 8
  %388 = getelementptr inbounds i32, i32* %387, i64 8
  %389 = load i32, i32* %388, align 4
  %390 = mul nsw i32 %386, %389
  %391 = load i32*, i32** %3, align 8
  %392 = getelementptr inbounds i32, i32* %391, i64 6
  %393 = load i32, i32* %392, align 4
  %394 = add nsw i32 %393, %390
  store i32 %394, i32* %392, align 4
  %395 = load i32*, i32** %4, align 8
  %396 = getelementptr inbounds i32, i32* %395, i64 8
  %397 = load i32, i32* %396, align 4
  %398 = load i32*, i32** %5, align 8
  %399 = getelementptr inbounds i32, i32* %398, i64 8
  %400 = load i32, i32* %399, align 4
  %401 = mul nsw i32 %397, %400
  %402 = load i32*, i32** %3, align 8
  %403 = getelementptr inbounds i32, i32* %402, i64 7
  %404 = load i32, i32* %403, align 4
  %405 = add nsw i32 %404, %401
  store i32 %405, i32* %403, align 4
  ret void
}

declare dso_local i32 @felem_scalar(i32*, i32*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
