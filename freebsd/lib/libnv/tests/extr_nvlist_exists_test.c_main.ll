; ModuleID = '/home/carl/AnghaBench/freebsd/lib/libnv/tests/extr_nvlist_exists_test.c_main.c'
source_filename = "/home/carl/AnghaBench/freebsd/lib/libnv/tests/extr_nvlist_exists_test.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [8 x i8] c"1..232\0A\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"nvlist/null\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"nvlist/bool\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"nvlist/number\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"nvlist/string\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"nvlist/nvlist\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"nvlist/descriptor\00", align 1
@STDERR_FILENO = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [14 x i8] c"nvlist/binary\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  %2 = alloca i32*, align 8
  store i32 0, i32* %1, align 4
  %3 = call i32 @printf(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0))
  %4 = call i32* @nvlist_create(i32 0)
  store i32* %4, i32** %2, align 8
  %5 = load i32*, i32** %2, align 8
  %6 = call i32 @nvlist_exists(i32* %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %7 = icmp ne i32 %6, 0
  %8 = xor i1 %7, true
  %9 = zext i1 %8 to i32
  %10 = call i32 @CHECK(i32 %9)
  %11 = load i32*, i32** %2, align 8
  %12 = call i32 @nvlist_exists_null(i32* %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %13 = icmp ne i32 %12, 0
  %14 = xor i1 %13, true
  %15 = zext i1 %14 to i32
  %16 = call i32 @CHECK(i32 %15)
  %17 = load i32*, i32** %2, align 8
  %18 = call i32 @nvlist_exists_bool(i32* %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %19 = icmp ne i32 %18, 0
  %20 = xor i1 %19, true
  %21 = zext i1 %20 to i32
  %22 = call i32 @CHECK(i32 %21)
  %23 = load i32*, i32** %2, align 8
  %24 = call i32 @nvlist_exists_number(i32* %23, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %25 = icmp ne i32 %24, 0
  %26 = xor i1 %25, true
  %27 = zext i1 %26 to i32
  %28 = call i32 @CHECK(i32 %27)
  %29 = load i32*, i32** %2, align 8
  %30 = call i32 @nvlist_exists_string(i32* %29, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %31 = icmp ne i32 %30, 0
  %32 = xor i1 %31, true
  %33 = zext i1 %32 to i32
  %34 = call i32 @CHECK(i32 %33)
  %35 = load i32*, i32** %2, align 8
  %36 = call i32 @nvlist_exists_nvlist(i32* %35, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %37 = icmp ne i32 %36, 0
  %38 = xor i1 %37, true
  %39 = zext i1 %38 to i32
  %40 = call i32 @CHECK(i32 %39)
  %41 = load i32*, i32** %2, align 8
  %42 = call i32 @nvlist_exists_descriptor(i32* %41, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %43 = icmp ne i32 %42, 0
  %44 = xor i1 %43, true
  %45 = zext i1 %44 to i32
  %46 = call i32 @CHECK(i32 %45)
  %47 = load i32*, i32** %2, align 8
  %48 = call i32 @nvlist_exists_binary(i32* %47, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %49 = icmp ne i32 %48, 0
  %50 = xor i1 %49, true
  %51 = zext i1 %50 to i32
  %52 = call i32 @CHECK(i32 %51)
  %53 = load i32*, i32** %2, align 8
  %54 = call i32 @nvlist_add_null(i32* %53, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %55 = load i32*, i32** %2, align 8
  %56 = call i64 @nvlist_error(i32* %55)
  %57 = icmp eq i64 %56, 0
  %58 = zext i1 %57 to i32
  %59 = call i32 @CHECK(i32 %58)
  %60 = load i32*, i32** %2, align 8
  %61 = call i32 @nvlist_exists(i32* %60, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %62 = call i32 @CHECK(i32 %61)
  %63 = load i32*, i32** %2, align 8
  %64 = call i32 @nvlist_exists_null(i32* %63, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %65 = call i32 @CHECK(i32 %64)
  %66 = load i32*, i32** %2, align 8
  %67 = call i32 @nvlist_exists_bool(i32* %66, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %68 = icmp ne i32 %67, 0
  %69 = xor i1 %68, true
  %70 = zext i1 %69 to i32
  %71 = call i32 @CHECK(i32 %70)
  %72 = load i32*, i32** %2, align 8
  %73 = call i32 @nvlist_exists_number(i32* %72, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %74 = icmp ne i32 %73, 0
  %75 = xor i1 %74, true
  %76 = zext i1 %75 to i32
  %77 = call i32 @CHECK(i32 %76)
  %78 = load i32*, i32** %2, align 8
  %79 = call i32 @nvlist_exists_string(i32* %78, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %80 = icmp ne i32 %79, 0
  %81 = xor i1 %80, true
  %82 = zext i1 %81 to i32
  %83 = call i32 @CHECK(i32 %82)
  %84 = load i32*, i32** %2, align 8
  %85 = call i32 @nvlist_exists_nvlist(i32* %84, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %86 = icmp ne i32 %85, 0
  %87 = xor i1 %86, true
  %88 = zext i1 %87 to i32
  %89 = call i32 @CHECK(i32 %88)
  %90 = load i32*, i32** %2, align 8
  %91 = call i32 @nvlist_exists_descriptor(i32* %90, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %92 = icmp ne i32 %91, 0
  %93 = xor i1 %92, true
  %94 = zext i1 %93 to i32
  %95 = call i32 @CHECK(i32 %94)
  %96 = load i32*, i32** %2, align 8
  %97 = call i32 @nvlist_exists_binary(i32* %96, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %98 = icmp ne i32 %97, 0
  %99 = xor i1 %98, true
  %100 = zext i1 %99 to i32
  %101 = call i32 @CHECK(i32 %100)
  %102 = load i32*, i32** %2, align 8
  %103 = call i32 @nvlist_exists(i32* %102, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %104 = icmp ne i32 %103, 0
  %105 = xor i1 %104, true
  %106 = zext i1 %105 to i32
  %107 = call i32 @CHECK(i32 %106)
  %108 = load i32*, i32** %2, align 8
  %109 = call i32 @nvlist_exists_null(i32* %108, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %110 = icmp ne i32 %109, 0
  %111 = xor i1 %110, true
  %112 = zext i1 %111 to i32
  %113 = call i32 @CHECK(i32 %112)
  %114 = load i32*, i32** %2, align 8
  %115 = call i32 @nvlist_exists_bool(i32* %114, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %116 = icmp ne i32 %115, 0
  %117 = xor i1 %116, true
  %118 = zext i1 %117 to i32
  %119 = call i32 @CHECK(i32 %118)
  %120 = load i32*, i32** %2, align 8
  %121 = call i32 @nvlist_exists_number(i32* %120, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %122 = icmp ne i32 %121, 0
  %123 = xor i1 %122, true
  %124 = zext i1 %123 to i32
  %125 = call i32 @CHECK(i32 %124)
  %126 = load i32*, i32** %2, align 8
  %127 = call i32 @nvlist_exists_string(i32* %126, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %128 = icmp ne i32 %127, 0
  %129 = xor i1 %128, true
  %130 = zext i1 %129 to i32
  %131 = call i32 @CHECK(i32 %130)
  %132 = load i32*, i32** %2, align 8
  %133 = call i32 @nvlist_exists_nvlist(i32* %132, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %134 = icmp ne i32 %133, 0
  %135 = xor i1 %134, true
  %136 = zext i1 %135 to i32
  %137 = call i32 @CHECK(i32 %136)
  %138 = load i32*, i32** %2, align 8
  %139 = call i32 @nvlist_exists_descriptor(i32* %138, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %140 = icmp ne i32 %139, 0
  %141 = xor i1 %140, true
  %142 = zext i1 %141 to i32
  %143 = call i32 @CHECK(i32 %142)
  %144 = load i32*, i32** %2, align 8
  %145 = call i32 @nvlist_exists_binary(i32* %144, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %146 = icmp ne i32 %145, 0
  %147 = xor i1 %146, true
  %148 = zext i1 %147 to i32
  %149 = call i32 @CHECK(i32 %148)
  %150 = load i32*, i32** %2, align 8
  %151 = call i32 @nvlist_add_bool(i32* %150, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32 1)
  %152 = load i32*, i32** %2, align 8
  %153 = call i64 @nvlist_error(i32* %152)
  %154 = icmp eq i64 %153, 0
  %155 = zext i1 %154 to i32
  %156 = call i32 @CHECK(i32 %155)
  %157 = load i32*, i32** %2, align 8
  %158 = call i32 @nvlist_exists(i32* %157, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %159 = call i32 @CHECK(i32 %158)
  %160 = load i32*, i32** %2, align 8
  %161 = call i32 @nvlist_exists_null(i32* %160, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %162 = icmp ne i32 %161, 0
  %163 = xor i1 %162, true
  %164 = zext i1 %163 to i32
  %165 = call i32 @CHECK(i32 %164)
  %166 = load i32*, i32** %2, align 8
  %167 = call i32 @nvlist_exists_bool(i32* %166, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %168 = call i32 @CHECK(i32 %167)
  %169 = load i32*, i32** %2, align 8
  %170 = call i32 @nvlist_exists_number(i32* %169, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %171 = icmp ne i32 %170, 0
  %172 = xor i1 %171, true
  %173 = zext i1 %172 to i32
  %174 = call i32 @CHECK(i32 %173)
  %175 = load i32*, i32** %2, align 8
  %176 = call i32 @nvlist_exists_string(i32* %175, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %177 = icmp ne i32 %176, 0
  %178 = xor i1 %177, true
  %179 = zext i1 %178 to i32
  %180 = call i32 @CHECK(i32 %179)
  %181 = load i32*, i32** %2, align 8
  %182 = call i32 @nvlist_exists_nvlist(i32* %181, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %183 = icmp ne i32 %182, 0
  %184 = xor i1 %183, true
  %185 = zext i1 %184 to i32
  %186 = call i32 @CHECK(i32 %185)
  %187 = load i32*, i32** %2, align 8
  %188 = call i32 @nvlist_exists_descriptor(i32* %187, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %189 = icmp ne i32 %188, 0
  %190 = xor i1 %189, true
  %191 = zext i1 %190 to i32
  %192 = call i32 @CHECK(i32 %191)
  %193 = load i32*, i32** %2, align 8
  %194 = call i32 @nvlist_exists_binary(i32* %193, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %195 = icmp ne i32 %194, 0
  %196 = xor i1 %195, true
  %197 = zext i1 %196 to i32
  %198 = call i32 @CHECK(i32 %197)
  %199 = load i32*, i32** %2, align 8
  %200 = call i32 @nvlist_exists(i32* %199, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %201 = icmp ne i32 %200, 0
  %202 = xor i1 %201, true
  %203 = zext i1 %202 to i32
  %204 = call i32 @CHECK(i32 %203)
  %205 = load i32*, i32** %2, align 8
  %206 = call i32 @nvlist_exists_null(i32* %205, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %207 = icmp ne i32 %206, 0
  %208 = xor i1 %207, true
  %209 = zext i1 %208 to i32
  %210 = call i32 @CHECK(i32 %209)
  %211 = load i32*, i32** %2, align 8
  %212 = call i32 @nvlist_exists_bool(i32* %211, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %213 = icmp ne i32 %212, 0
  %214 = xor i1 %213, true
  %215 = zext i1 %214 to i32
  %216 = call i32 @CHECK(i32 %215)
  %217 = load i32*, i32** %2, align 8
  %218 = call i32 @nvlist_exists_number(i32* %217, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %219 = icmp ne i32 %218, 0
  %220 = xor i1 %219, true
  %221 = zext i1 %220 to i32
  %222 = call i32 @CHECK(i32 %221)
  %223 = load i32*, i32** %2, align 8
  %224 = call i32 @nvlist_exists_string(i32* %223, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %225 = icmp ne i32 %224, 0
  %226 = xor i1 %225, true
  %227 = zext i1 %226 to i32
  %228 = call i32 @CHECK(i32 %227)
  %229 = load i32*, i32** %2, align 8
  %230 = call i32 @nvlist_exists_nvlist(i32* %229, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %231 = icmp ne i32 %230, 0
  %232 = xor i1 %231, true
  %233 = zext i1 %232 to i32
  %234 = call i32 @CHECK(i32 %233)
  %235 = load i32*, i32** %2, align 8
  %236 = call i32 @nvlist_exists_descriptor(i32* %235, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %237 = icmp ne i32 %236, 0
  %238 = xor i1 %237, true
  %239 = zext i1 %238 to i32
  %240 = call i32 @CHECK(i32 %239)
  %241 = load i32*, i32** %2, align 8
  %242 = call i32 @nvlist_exists_binary(i32* %241, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %243 = icmp ne i32 %242, 0
  %244 = xor i1 %243, true
  %245 = zext i1 %244 to i32
  %246 = call i32 @CHECK(i32 %245)
  %247 = load i32*, i32** %2, align 8
  %248 = call i32 @nvlist_add_number(i32* %247, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i32 0)
  %249 = load i32*, i32** %2, align 8
  %250 = call i64 @nvlist_error(i32* %249)
  %251 = icmp eq i64 %250, 0
  %252 = zext i1 %251 to i32
  %253 = call i32 @CHECK(i32 %252)
  %254 = load i32*, i32** %2, align 8
  %255 = call i32 @nvlist_exists(i32* %254, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %256 = call i32 @CHECK(i32 %255)
  %257 = load i32*, i32** %2, align 8
  %258 = call i32 @nvlist_exists_null(i32* %257, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %259 = icmp ne i32 %258, 0
  %260 = xor i1 %259, true
  %261 = zext i1 %260 to i32
  %262 = call i32 @CHECK(i32 %261)
  %263 = load i32*, i32** %2, align 8
  %264 = call i32 @nvlist_exists_bool(i32* %263, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %265 = icmp ne i32 %264, 0
  %266 = xor i1 %265, true
  %267 = zext i1 %266 to i32
  %268 = call i32 @CHECK(i32 %267)
  %269 = load i32*, i32** %2, align 8
  %270 = call i32 @nvlist_exists_number(i32* %269, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %271 = call i32 @CHECK(i32 %270)
  %272 = load i32*, i32** %2, align 8
  %273 = call i32 @nvlist_exists_string(i32* %272, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %274 = icmp ne i32 %273, 0
  %275 = xor i1 %274, true
  %276 = zext i1 %275 to i32
  %277 = call i32 @CHECK(i32 %276)
  %278 = load i32*, i32** %2, align 8
  %279 = call i32 @nvlist_exists_nvlist(i32* %278, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %280 = icmp ne i32 %279, 0
  %281 = xor i1 %280, true
  %282 = zext i1 %281 to i32
  %283 = call i32 @CHECK(i32 %282)
  %284 = load i32*, i32** %2, align 8
  %285 = call i32 @nvlist_exists_descriptor(i32* %284, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %286 = icmp ne i32 %285, 0
  %287 = xor i1 %286, true
  %288 = zext i1 %287 to i32
  %289 = call i32 @CHECK(i32 %288)
  %290 = load i32*, i32** %2, align 8
  %291 = call i32 @nvlist_exists_binary(i32* %290, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %292 = icmp ne i32 %291, 0
  %293 = xor i1 %292, true
  %294 = zext i1 %293 to i32
  %295 = call i32 @CHECK(i32 %294)
  %296 = load i32*, i32** %2, align 8
  %297 = call i32 @nvlist_exists(i32* %296, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %298 = icmp ne i32 %297, 0
  %299 = xor i1 %298, true
  %300 = zext i1 %299 to i32
  %301 = call i32 @CHECK(i32 %300)
  %302 = load i32*, i32** %2, align 8
  %303 = call i32 @nvlist_exists_null(i32* %302, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %304 = icmp ne i32 %303, 0
  %305 = xor i1 %304, true
  %306 = zext i1 %305 to i32
  %307 = call i32 @CHECK(i32 %306)
  %308 = load i32*, i32** %2, align 8
  %309 = call i32 @nvlist_exists_bool(i32* %308, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %310 = icmp ne i32 %309, 0
  %311 = xor i1 %310, true
  %312 = zext i1 %311 to i32
  %313 = call i32 @CHECK(i32 %312)
  %314 = load i32*, i32** %2, align 8
  %315 = call i32 @nvlist_exists_number(i32* %314, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %316 = icmp ne i32 %315, 0
  %317 = xor i1 %316, true
  %318 = zext i1 %317 to i32
  %319 = call i32 @CHECK(i32 %318)
  %320 = load i32*, i32** %2, align 8
  %321 = call i32 @nvlist_exists_string(i32* %320, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %322 = icmp ne i32 %321, 0
  %323 = xor i1 %322, true
  %324 = zext i1 %323 to i32
  %325 = call i32 @CHECK(i32 %324)
  %326 = load i32*, i32** %2, align 8
  %327 = call i32 @nvlist_exists_nvlist(i32* %326, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %328 = icmp ne i32 %327, 0
  %329 = xor i1 %328, true
  %330 = zext i1 %329 to i32
  %331 = call i32 @CHECK(i32 %330)
  %332 = load i32*, i32** %2, align 8
  %333 = call i32 @nvlist_exists_descriptor(i32* %332, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %334 = icmp ne i32 %333, 0
  %335 = xor i1 %334, true
  %336 = zext i1 %335 to i32
  %337 = call i32 @CHECK(i32 %336)
  %338 = load i32*, i32** %2, align 8
  %339 = call i32 @nvlist_exists_binary(i32* %338, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %340 = icmp ne i32 %339, 0
  %341 = xor i1 %340, true
  %342 = zext i1 %341 to i32
  %343 = call i32 @CHECK(i32 %342)
  %344 = load i32*, i32** %2, align 8
  %345 = call i32 @nvlist_add_string(i32* %344, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0))
  %346 = load i32*, i32** %2, align 8
  %347 = call i64 @nvlist_error(i32* %346)
  %348 = icmp eq i64 %347, 0
  %349 = zext i1 %348 to i32
  %350 = call i32 @CHECK(i32 %349)
  %351 = load i32*, i32** %2, align 8
  %352 = call i32 @nvlist_exists(i32* %351, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %353 = call i32 @CHECK(i32 %352)
  %354 = load i32*, i32** %2, align 8
  %355 = call i32 @nvlist_exists_null(i32* %354, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %356 = icmp ne i32 %355, 0
  %357 = xor i1 %356, true
  %358 = zext i1 %357 to i32
  %359 = call i32 @CHECK(i32 %358)
  %360 = load i32*, i32** %2, align 8
  %361 = call i32 @nvlist_exists_bool(i32* %360, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %362 = icmp ne i32 %361, 0
  %363 = xor i1 %362, true
  %364 = zext i1 %363 to i32
  %365 = call i32 @CHECK(i32 %364)
  %366 = load i32*, i32** %2, align 8
  %367 = call i32 @nvlist_exists_number(i32* %366, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %368 = icmp ne i32 %367, 0
  %369 = xor i1 %368, true
  %370 = zext i1 %369 to i32
  %371 = call i32 @CHECK(i32 %370)
  %372 = load i32*, i32** %2, align 8
  %373 = call i32 @nvlist_exists_string(i32* %372, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %374 = call i32 @CHECK(i32 %373)
  %375 = load i32*, i32** %2, align 8
  %376 = call i32 @nvlist_exists_nvlist(i32* %375, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %377 = icmp ne i32 %376, 0
  %378 = xor i1 %377, true
  %379 = zext i1 %378 to i32
  %380 = call i32 @CHECK(i32 %379)
  %381 = load i32*, i32** %2, align 8
  %382 = call i32 @nvlist_exists_descriptor(i32* %381, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %383 = icmp ne i32 %382, 0
  %384 = xor i1 %383, true
  %385 = zext i1 %384 to i32
  %386 = call i32 @CHECK(i32 %385)
  %387 = load i32*, i32** %2, align 8
  %388 = call i32 @nvlist_exists_binary(i32* %387, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %389 = icmp ne i32 %388, 0
  %390 = xor i1 %389, true
  %391 = zext i1 %390 to i32
  %392 = call i32 @CHECK(i32 %391)
  %393 = load i32*, i32** %2, align 8
  %394 = call i32 @nvlist_exists(i32* %393, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %395 = icmp ne i32 %394, 0
  %396 = xor i1 %395, true
  %397 = zext i1 %396 to i32
  %398 = call i32 @CHECK(i32 %397)
  %399 = load i32*, i32** %2, align 8
  %400 = call i32 @nvlist_exists_null(i32* %399, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %401 = icmp ne i32 %400, 0
  %402 = xor i1 %401, true
  %403 = zext i1 %402 to i32
  %404 = call i32 @CHECK(i32 %403)
  %405 = load i32*, i32** %2, align 8
  %406 = call i32 @nvlist_exists_bool(i32* %405, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %407 = icmp ne i32 %406, 0
  %408 = xor i1 %407, true
  %409 = zext i1 %408 to i32
  %410 = call i32 @CHECK(i32 %409)
  %411 = load i32*, i32** %2, align 8
  %412 = call i32 @nvlist_exists_number(i32* %411, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %413 = icmp ne i32 %412, 0
  %414 = xor i1 %413, true
  %415 = zext i1 %414 to i32
  %416 = call i32 @CHECK(i32 %415)
  %417 = load i32*, i32** %2, align 8
  %418 = call i32 @nvlist_exists_string(i32* %417, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %419 = icmp ne i32 %418, 0
  %420 = xor i1 %419, true
  %421 = zext i1 %420 to i32
  %422 = call i32 @CHECK(i32 %421)
  %423 = load i32*, i32** %2, align 8
  %424 = call i32 @nvlist_exists_nvlist(i32* %423, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %425 = icmp ne i32 %424, 0
  %426 = xor i1 %425, true
  %427 = zext i1 %426 to i32
  %428 = call i32 @CHECK(i32 %427)
  %429 = load i32*, i32** %2, align 8
  %430 = call i32 @nvlist_exists_descriptor(i32* %429, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %431 = icmp ne i32 %430, 0
  %432 = xor i1 %431, true
  %433 = zext i1 %432 to i32
  %434 = call i32 @CHECK(i32 %433)
  %435 = load i32*, i32** %2, align 8
  %436 = call i32 @nvlist_exists_binary(i32* %435, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %437 = icmp ne i32 %436, 0
  %438 = xor i1 %437, true
  %439 = zext i1 %438 to i32
  %440 = call i32 @CHECK(i32 %439)
  %441 = load i32*, i32** %2, align 8
  %442 = load i32*, i32** %2, align 8
  %443 = call i32 @nvlist_add_nvlist(i32* %441, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i32* %442)
  %444 = load i32*, i32** %2, align 8
  %445 = call i64 @nvlist_error(i32* %444)
  %446 = icmp eq i64 %445, 0
  %447 = zext i1 %446 to i32
  %448 = call i32 @CHECK(i32 %447)
  %449 = load i32*, i32** %2, align 8
  %450 = call i32 @nvlist_exists(i32* %449, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %451 = call i32 @CHECK(i32 %450)
  %452 = load i32*, i32** %2, align 8
  %453 = call i32 @nvlist_exists_null(i32* %452, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %454 = icmp ne i32 %453, 0
  %455 = xor i1 %454, true
  %456 = zext i1 %455 to i32
  %457 = call i32 @CHECK(i32 %456)
  %458 = load i32*, i32** %2, align 8
  %459 = call i32 @nvlist_exists_bool(i32* %458, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %460 = icmp ne i32 %459, 0
  %461 = xor i1 %460, true
  %462 = zext i1 %461 to i32
  %463 = call i32 @CHECK(i32 %462)
  %464 = load i32*, i32** %2, align 8
  %465 = call i32 @nvlist_exists_number(i32* %464, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %466 = icmp ne i32 %465, 0
  %467 = xor i1 %466, true
  %468 = zext i1 %467 to i32
  %469 = call i32 @CHECK(i32 %468)
  %470 = load i32*, i32** %2, align 8
  %471 = call i32 @nvlist_exists_string(i32* %470, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %472 = icmp ne i32 %471, 0
  %473 = xor i1 %472, true
  %474 = zext i1 %473 to i32
  %475 = call i32 @CHECK(i32 %474)
  %476 = load i32*, i32** %2, align 8
  %477 = call i32 @nvlist_exists_nvlist(i32* %476, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %478 = call i32 @CHECK(i32 %477)
  %479 = load i32*, i32** %2, align 8
  %480 = call i32 @nvlist_exists_descriptor(i32* %479, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %481 = icmp ne i32 %480, 0
  %482 = xor i1 %481, true
  %483 = zext i1 %482 to i32
  %484 = call i32 @CHECK(i32 %483)
  %485 = load i32*, i32** %2, align 8
  %486 = call i32 @nvlist_exists_binary(i32* %485, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %487 = icmp ne i32 %486, 0
  %488 = xor i1 %487, true
  %489 = zext i1 %488 to i32
  %490 = call i32 @CHECK(i32 %489)
  %491 = load i32*, i32** %2, align 8
  %492 = call i32 @nvlist_exists(i32* %491, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %493 = icmp ne i32 %492, 0
  %494 = xor i1 %493, true
  %495 = zext i1 %494 to i32
  %496 = call i32 @CHECK(i32 %495)
  %497 = load i32*, i32** %2, align 8
  %498 = call i32 @nvlist_exists_null(i32* %497, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %499 = icmp ne i32 %498, 0
  %500 = xor i1 %499, true
  %501 = zext i1 %500 to i32
  %502 = call i32 @CHECK(i32 %501)
  %503 = load i32*, i32** %2, align 8
  %504 = call i32 @nvlist_exists_bool(i32* %503, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %505 = icmp ne i32 %504, 0
  %506 = xor i1 %505, true
  %507 = zext i1 %506 to i32
  %508 = call i32 @CHECK(i32 %507)
  %509 = load i32*, i32** %2, align 8
  %510 = call i32 @nvlist_exists_number(i32* %509, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %511 = icmp ne i32 %510, 0
  %512 = xor i1 %511, true
  %513 = zext i1 %512 to i32
  %514 = call i32 @CHECK(i32 %513)
  %515 = load i32*, i32** %2, align 8
  %516 = call i32 @nvlist_exists_string(i32* %515, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %517 = icmp ne i32 %516, 0
  %518 = xor i1 %517, true
  %519 = zext i1 %518 to i32
  %520 = call i32 @CHECK(i32 %519)
  %521 = load i32*, i32** %2, align 8
  %522 = call i32 @nvlist_exists_nvlist(i32* %521, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %523 = icmp ne i32 %522, 0
  %524 = xor i1 %523, true
  %525 = zext i1 %524 to i32
  %526 = call i32 @CHECK(i32 %525)
  %527 = load i32*, i32** %2, align 8
  %528 = call i32 @nvlist_exists_descriptor(i32* %527, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %529 = icmp ne i32 %528, 0
  %530 = xor i1 %529, true
  %531 = zext i1 %530 to i32
  %532 = call i32 @CHECK(i32 %531)
  %533 = load i32*, i32** %2, align 8
  %534 = call i32 @nvlist_exists_binary(i32* %533, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %535 = icmp ne i32 %534, 0
  %536 = xor i1 %535, true
  %537 = zext i1 %536 to i32
  %538 = call i32 @CHECK(i32 %537)
  %539 = load i32*, i32** %2, align 8
  %540 = load i32, i32* @STDERR_FILENO, align 4
  %541 = call i32 @nvlist_add_descriptor(i32* %539, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 %540)
  %542 = load i32*, i32** %2, align 8
  %543 = call i64 @nvlist_error(i32* %542)
  %544 = icmp eq i64 %543, 0
  %545 = zext i1 %544 to i32
  %546 = call i32 @CHECK(i32 %545)
  %547 = load i32*, i32** %2, align 8
  %548 = call i32 @nvlist_exists(i32* %547, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %549 = call i32 @CHECK(i32 %548)
  %550 = load i32*, i32** %2, align 8
  %551 = call i32 @nvlist_exists_null(i32* %550, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %552 = icmp ne i32 %551, 0
  %553 = xor i1 %552, true
  %554 = zext i1 %553 to i32
  %555 = call i32 @CHECK(i32 %554)
  %556 = load i32*, i32** %2, align 8
  %557 = call i32 @nvlist_exists_bool(i32* %556, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %558 = icmp ne i32 %557, 0
  %559 = xor i1 %558, true
  %560 = zext i1 %559 to i32
  %561 = call i32 @CHECK(i32 %560)
  %562 = load i32*, i32** %2, align 8
  %563 = call i32 @nvlist_exists_number(i32* %562, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %564 = icmp ne i32 %563, 0
  %565 = xor i1 %564, true
  %566 = zext i1 %565 to i32
  %567 = call i32 @CHECK(i32 %566)
  %568 = load i32*, i32** %2, align 8
  %569 = call i32 @nvlist_exists_string(i32* %568, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %570 = icmp ne i32 %569, 0
  %571 = xor i1 %570, true
  %572 = zext i1 %571 to i32
  %573 = call i32 @CHECK(i32 %572)
  %574 = load i32*, i32** %2, align 8
  %575 = call i32 @nvlist_exists_nvlist(i32* %574, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %576 = icmp ne i32 %575, 0
  %577 = xor i1 %576, true
  %578 = zext i1 %577 to i32
  %579 = call i32 @CHECK(i32 %578)
  %580 = load i32*, i32** %2, align 8
  %581 = call i32 @nvlist_exists_descriptor(i32* %580, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %582 = call i32 @CHECK(i32 %581)
  %583 = load i32*, i32** %2, align 8
  %584 = call i32 @nvlist_exists_binary(i32* %583, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %585 = icmp ne i32 %584, 0
  %586 = xor i1 %585, true
  %587 = zext i1 %586 to i32
  %588 = call i32 @CHECK(i32 %587)
  %589 = load i32*, i32** %2, align 8
  %590 = call i32 @nvlist_exists(i32* %589, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %591 = icmp ne i32 %590, 0
  %592 = xor i1 %591, true
  %593 = zext i1 %592 to i32
  %594 = call i32 @CHECK(i32 %593)
  %595 = load i32*, i32** %2, align 8
  %596 = call i32 @nvlist_exists_null(i32* %595, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %597 = icmp ne i32 %596, 0
  %598 = xor i1 %597, true
  %599 = zext i1 %598 to i32
  %600 = call i32 @CHECK(i32 %599)
  %601 = load i32*, i32** %2, align 8
  %602 = call i32 @nvlist_exists_bool(i32* %601, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %603 = icmp ne i32 %602, 0
  %604 = xor i1 %603, true
  %605 = zext i1 %604 to i32
  %606 = call i32 @CHECK(i32 %605)
  %607 = load i32*, i32** %2, align 8
  %608 = call i32 @nvlist_exists_number(i32* %607, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %609 = icmp ne i32 %608, 0
  %610 = xor i1 %609, true
  %611 = zext i1 %610 to i32
  %612 = call i32 @CHECK(i32 %611)
  %613 = load i32*, i32** %2, align 8
  %614 = call i32 @nvlist_exists_string(i32* %613, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %615 = icmp ne i32 %614, 0
  %616 = xor i1 %615, true
  %617 = zext i1 %616 to i32
  %618 = call i32 @CHECK(i32 %617)
  %619 = load i32*, i32** %2, align 8
  %620 = call i32 @nvlist_exists_nvlist(i32* %619, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %621 = icmp ne i32 %620, 0
  %622 = xor i1 %621, true
  %623 = zext i1 %622 to i32
  %624 = call i32 @CHECK(i32 %623)
  %625 = load i32*, i32** %2, align 8
  %626 = call i32 @nvlist_exists_descriptor(i32* %625, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %627 = icmp ne i32 %626, 0
  %628 = xor i1 %627, true
  %629 = zext i1 %628 to i32
  %630 = call i32 @CHECK(i32 %629)
  %631 = load i32*, i32** %2, align 8
  %632 = call i32 @nvlist_exists_binary(i32* %631, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %633 = icmp ne i32 %632, 0
  %634 = xor i1 %633, true
  %635 = zext i1 %634 to i32
  %636 = call i32 @CHECK(i32 %635)
  %637 = load i32*, i32** %2, align 8
  %638 = call i32 @nvlist_add_binary(i32* %637, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i32 4)
  %639 = load i32*, i32** %2, align 8
  %640 = call i64 @nvlist_error(i32* %639)
  %641 = icmp eq i64 %640, 0
  %642 = zext i1 %641 to i32
  %643 = call i32 @CHECK(i32 %642)
  %644 = load i32*, i32** %2, align 8
  %645 = call i32 @nvlist_exists(i32* %644, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %646 = call i32 @CHECK(i32 %645)
  %647 = load i32*, i32** %2, align 8
  %648 = call i32 @nvlist_exists_null(i32* %647, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %649 = icmp ne i32 %648, 0
  %650 = xor i1 %649, true
  %651 = zext i1 %650 to i32
  %652 = call i32 @CHECK(i32 %651)
  %653 = load i32*, i32** %2, align 8
  %654 = call i32 @nvlist_exists_bool(i32* %653, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %655 = icmp ne i32 %654, 0
  %656 = xor i1 %655, true
  %657 = zext i1 %656 to i32
  %658 = call i32 @CHECK(i32 %657)
  %659 = load i32*, i32** %2, align 8
  %660 = call i32 @nvlist_exists_number(i32* %659, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %661 = icmp ne i32 %660, 0
  %662 = xor i1 %661, true
  %663 = zext i1 %662 to i32
  %664 = call i32 @CHECK(i32 %663)
  %665 = load i32*, i32** %2, align 8
  %666 = call i32 @nvlist_exists_string(i32* %665, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %667 = icmp ne i32 %666, 0
  %668 = xor i1 %667, true
  %669 = zext i1 %668 to i32
  %670 = call i32 @CHECK(i32 %669)
  %671 = load i32*, i32** %2, align 8
  %672 = call i32 @nvlist_exists_nvlist(i32* %671, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %673 = icmp ne i32 %672, 0
  %674 = xor i1 %673, true
  %675 = zext i1 %674 to i32
  %676 = call i32 @CHECK(i32 %675)
  %677 = load i32*, i32** %2, align 8
  %678 = call i32 @nvlist_exists_descriptor(i32* %677, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %679 = icmp ne i32 %678, 0
  %680 = xor i1 %679, true
  %681 = zext i1 %680 to i32
  %682 = call i32 @CHECK(i32 %681)
  %683 = load i32*, i32** %2, align 8
  %684 = call i32 @nvlist_exists_binary(i32* %683, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %685 = call i32 @CHECK(i32 %684)
  %686 = load i32*, i32** %2, align 8
  %687 = call i32 @nvlist_exists(i32* %686, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %688 = call i32 @CHECK(i32 %687)
  %689 = load i32*, i32** %2, align 8
  %690 = call i32 @nvlist_exists(i32* %689, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %691 = call i32 @CHECK(i32 %690)
  %692 = load i32*, i32** %2, align 8
  %693 = call i32 @nvlist_exists(i32* %692, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %694 = call i32 @CHECK(i32 %693)
  %695 = load i32*, i32** %2, align 8
  %696 = call i32 @nvlist_exists(i32* %695, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %697 = call i32 @CHECK(i32 %696)
  %698 = load i32*, i32** %2, align 8
  %699 = call i32 @nvlist_exists(i32* %698, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %700 = call i32 @CHECK(i32 %699)
  %701 = load i32*, i32** %2, align 8
  %702 = call i32 @nvlist_exists(i32* %701, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %703 = call i32 @CHECK(i32 %702)
  %704 = load i32*, i32** %2, align 8
  %705 = call i32 @nvlist_exists(i32* %704, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %706 = call i32 @CHECK(i32 %705)
  %707 = load i32*, i32** %2, align 8
  %708 = call i32 @nvlist_exists_null(i32* %707, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %709 = call i32 @CHECK(i32 %708)
  %710 = load i32*, i32** %2, align 8
  %711 = call i32 @nvlist_exists_bool(i32* %710, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %712 = call i32 @CHECK(i32 %711)
  %713 = load i32*, i32** %2, align 8
  %714 = call i32 @nvlist_exists_number(i32* %713, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %715 = call i32 @CHECK(i32 %714)
  %716 = load i32*, i32** %2, align 8
  %717 = call i32 @nvlist_exists_string(i32* %716, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %718 = call i32 @CHECK(i32 %717)
  %719 = load i32*, i32** %2, align 8
  %720 = call i32 @nvlist_exists_nvlist(i32* %719, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %721 = call i32 @CHECK(i32 %720)
  %722 = load i32*, i32** %2, align 8
  %723 = call i32 @nvlist_exists_descriptor(i32* %722, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %724 = call i32 @CHECK(i32 %723)
  %725 = load i32*, i32** %2, align 8
  %726 = call i32 @nvlist_exists_binary(i32* %725, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %727 = call i32 @CHECK(i32 %726)
  %728 = load i32*, i32** %2, align 8
  %729 = call i32 @nvlist_free_null(i32* %728, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %730 = load i32*, i32** %2, align 8
  %731 = call i32 @nvlist_exists(i32* %730, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %732 = icmp ne i32 %731, 0
  %733 = xor i1 %732, true
  %734 = zext i1 %733 to i32
  %735 = call i32 @CHECK(i32 %734)
  %736 = load i32*, i32** %2, align 8
  %737 = call i32 @nvlist_exists(i32* %736, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %738 = call i32 @CHECK(i32 %737)
  %739 = load i32*, i32** %2, align 8
  %740 = call i32 @nvlist_exists(i32* %739, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %741 = call i32 @CHECK(i32 %740)
  %742 = load i32*, i32** %2, align 8
  %743 = call i32 @nvlist_exists(i32* %742, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %744 = call i32 @CHECK(i32 %743)
  %745 = load i32*, i32** %2, align 8
  %746 = call i32 @nvlist_exists(i32* %745, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %747 = call i32 @CHECK(i32 %746)
  %748 = load i32*, i32** %2, align 8
  %749 = call i32 @nvlist_exists(i32* %748, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %750 = call i32 @CHECK(i32 %749)
  %751 = load i32*, i32** %2, align 8
  %752 = call i32 @nvlist_exists(i32* %751, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %753 = call i32 @CHECK(i32 %752)
  %754 = load i32*, i32** %2, align 8
  %755 = call i32 @nvlist_exists_null(i32* %754, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %756 = icmp ne i32 %755, 0
  %757 = xor i1 %756, true
  %758 = zext i1 %757 to i32
  %759 = call i32 @CHECK(i32 %758)
  %760 = load i32*, i32** %2, align 8
  %761 = call i32 @nvlist_exists_bool(i32* %760, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %762 = call i32 @CHECK(i32 %761)
  %763 = load i32*, i32** %2, align 8
  %764 = call i32 @nvlist_exists_number(i32* %763, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %765 = call i32 @CHECK(i32 %764)
  %766 = load i32*, i32** %2, align 8
  %767 = call i32 @nvlist_exists_string(i32* %766, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %768 = call i32 @CHECK(i32 %767)
  %769 = load i32*, i32** %2, align 8
  %770 = call i32 @nvlist_exists_nvlist(i32* %769, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %771 = call i32 @CHECK(i32 %770)
  %772 = load i32*, i32** %2, align 8
  %773 = call i32 @nvlist_exists_descriptor(i32* %772, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %774 = call i32 @CHECK(i32 %773)
  %775 = load i32*, i32** %2, align 8
  %776 = call i32 @nvlist_exists_binary(i32* %775, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %777 = call i32 @CHECK(i32 %776)
  %778 = load i32*, i32** %2, align 8
  %779 = call i32 @nvlist_free_bool(i32* %778, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %780 = load i32*, i32** %2, align 8
  %781 = call i32 @nvlist_exists(i32* %780, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %782 = icmp ne i32 %781, 0
  %783 = xor i1 %782, true
  %784 = zext i1 %783 to i32
  %785 = call i32 @CHECK(i32 %784)
  %786 = load i32*, i32** %2, align 8
  %787 = call i32 @nvlist_exists(i32* %786, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %788 = icmp ne i32 %787, 0
  %789 = xor i1 %788, true
  %790 = zext i1 %789 to i32
  %791 = call i32 @CHECK(i32 %790)
  %792 = load i32*, i32** %2, align 8
  %793 = call i32 @nvlist_exists(i32* %792, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %794 = call i32 @CHECK(i32 %793)
  %795 = load i32*, i32** %2, align 8
  %796 = call i32 @nvlist_exists(i32* %795, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %797 = call i32 @CHECK(i32 %796)
  %798 = load i32*, i32** %2, align 8
  %799 = call i32 @nvlist_exists(i32* %798, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %800 = call i32 @CHECK(i32 %799)
  %801 = load i32*, i32** %2, align 8
  %802 = call i32 @nvlist_exists(i32* %801, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %803 = call i32 @CHECK(i32 %802)
  %804 = load i32*, i32** %2, align 8
  %805 = call i32 @nvlist_exists(i32* %804, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %806 = call i32 @CHECK(i32 %805)
  %807 = load i32*, i32** %2, align 8
  %808 = call i32 @nvlist_exists_null(i32* %807, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %809 = icmp ne i32 %808, 0
  %810 = xor i1 %809, true
  %811 = zext i1 %810 to i32
  %812 = call i32 @CHECK(i32 %811)
  %813 = load i32*, i32** %2, align 8
  %814 = call i32 @nvlist_exists_bool(i32* %813, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %815 = icmp ne i32 %814, 0
  %816 = xor i1 %815, true
  %817 = zext i1 %816 to i32
  %818 = call i32 @CHECK(i32 %817)
  %819 = load i32*, i32** %2, align 8
  %820 = call i32 @nvlist_exists_number(i32* %819, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %821 = call i32 @CHECK(i32 %820)
  %822 = load i32*, i32** %2, align 8
  %823 = call i32 @nvlist_exists_string(i32* %822, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %824 = call i32 @CHECK(i32 %823)
  %825 = load i32*, i32** %2, align 8
  %826 = call i32 @nvlist_exists_nvlist(i32* %825, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %827 = call i32 @CHECK(i32 %826)
  %828 = load i32*, i32** %2, align 8
  %829 = call i32 @nvlist_exists_descriptor(i32* %828, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %830 = call i32 @CHECK(i32 %829)
  %831 = load i32*, i32** %2, align 8
  %832 = call i32 @nvlist_exists_binary(i32* %831, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %833 = call i32 @CHECK(i32 %832)
  %834 = load i32*, i32** %2, align 8
  %835 = call i32 @nvlist_free_number(i32* %834, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %836 = load i32*, i32** %2, align 8
  %837 = call i32 @nvlist_exists(i32* %836, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %838 = icmp ne i32 %837, 0
  %839 = xor i1 %838, true
  %840 = zext i1 %839 to i32
  %841 = call i32 @CHECK(i32 %840)
  %842 = load i32*, i32** %2, align 8
  %843 = call i32 @nvlist_exists(i32* %842, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %844 = icmp ne i32 %843, 0
  %845 = xor i1 %844, true
  %846 = zext i1 %845 to i32
  %847 = call i32 @CHECK(i32 %846)
  %848 = load i32*, i32** %2, align 8
  %849 = call i32 @nvlist_exists(i32* %848, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %850 = icmp ne i32 %849, 0
  %851 = xor i1 %850, true
  %852 = zext i1 %851 to i32
  %853 = call i32 @CHECK(i32 %852)
  %854 = load i32*, i32** %2, align 8
  %855 = call i32 @nvlist_exists(i32* %854, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %856 = call i32 @CHECK(i32 %855)
  %857 = load i32*, i32** %2, align 8
  %858 = call i32 @nvlist_exists(i32* %857, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %859 = call i32 @CHECK(i32 %858)
  %860 = load i32*, i32** %2, align 8
  %861 = call i32 @nvlist_exists(i32* %860, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %862 = call i32 @CHECK(i32 %861)
  %863 = load i32*, i32** %2, align 8
  %864 = call i32 @nvlist_exists(i32* %863, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %865 = call i32 @CHECK(i32 %864)
  %866 = load i32*, i32** %2, align 8
  %867 = call i32 @nvlist_exists_null(i32* %866, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %868 = icmp ne i32 %867, 0
  %869 = xor i1 %868, true
  %870 = zext i1 %869 to i32
  %871 = call i32 @CHECK(i32 %870)
  %872 = load i32*, i32** %2, align 8
  %873 = call i32 @nvlist_exists_bool(i32* %872, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %874 = icmp ne i32 %873, 0
  %875 = xor i1 %874, true
  %876 = zext i1 %875 to i32
  %877 = call i32 @CHECK(i32 %876)
  %878 = load i32*, i32** %2, align 8
  %879 = call i32 @nvlist_exists_number(i32* %878, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %880 = icmp ne i32 %879, 0
  %881 = xor i1 %880, true
  %882 = zext i1 %881 to i32
  %883 = call i32 @CHECK(i32 %882)
  %884 = load i32*, i32** %2, align 8
  %885 = call i32 @nvlist_exists_string(i32* %884, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %886 = call i32 @CHECK(i32 %885)
  %887 = load i32*, i32** %2, align 8
  %888 = call i32 @nvlist_exists_nvlist(i32* %887, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %889 = call i32 @CHECK(i32 %888)
  %890 = load i32*, i32** %2, align 8
  %891 = call i32 @nvlist_exists_descriptor(i32* %890, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %892 = call i32 @CHECK(i32 %891)
  %893 = load i32*, i32** %2, align 8
  %894 = call i32 @nvlist_exists_binary(i32* %893, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %895 = call i32 @CHECK(i32 %894)
  %896 = load i32*, i32** %2, align 8
  %897 = call i32 @nvlist_free_string(i32* %896, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %898 = load i32*, i32** %2, align 8
  %899 = call i32 @nvlist_exists(i32* %898, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %900 = icmp ne i32 %899, 0
  %901 = xor i1 %900, true
  %902 = zext i1 %901 to i32
  %903 = call i32 @CHECK(i32 %902)
  %904 = load i32*, i32** %2, align 8
  %905 = call i32 @nvlist_exists(i32* %904, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %906 = icmp ne i32 %905, 0
  %907 = xor i1 %906, true
  %908 = zext i1 %907 to i32
  %909 = call i32 @CHECK(i32 %908)
  %910 = load i32*, i32** %2, align 8
  %911 = call i32 @nvlist_exists(i32* %910, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %912 = icmp ne i32 %911, 0
  %913 = xor i1 %912, true
  %914 = zext i1 %913 to i32
  %915 = call i32 @CHECK(i32 %914)
  %916 = load i32*, i32** %2, align 8
  %917 = call i32 @nvlist_exists(i32* %916, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %918 = icmp ne i32 %917, 0
  %919 = xor i1 %918, true
  %920 = zext i1 %919 to i32
  %921 = call i32 @CHECK(i32 %920)
  %922 = load i32*, i32** %2, align 8
  %923 = call i32 @nvlist_exists(i32* %922, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %924 = call i32 @CHECK(i32 %923)
  %925 = load i32*, i32** %2, align 8
  %926 = call i32 @nvlist_exists(i32* %925, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %927 = call i32 @CHECK(i32 %926)
  %928 = load i32*, i32** %2, align 8
  %929 = call i32 @nvlist_exists(i32* %928, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %930 = call i32 @CHECK(i32 %929)
  %931 = load i32*, i32** %2, align 8
  %932 = call i32 @nvlist_exists_null(i32* %931, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %933 = icmp ne i32 %932, 0
  %934 = xor i1 %933, true
  %935 = zext i1 %934 to i32
  %936 = call i32 @CHECK(i32 %935)
  %937 = load i32*, i32** %2, align 8
  %938 = call i32 @nvlist_exists_bool(i32* %937, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %939 = icmp ne i32 %938, 0
  %940 = xor i1 %939, true
  %941 = zext i1 %940 to i32
  %942 = call i32 @CHECK(i32 %941)
  %943 = load i32*, i32** %2, align 8
  %944 = call i32 @nvlist_exists_number(i32* %943, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %945 = icmp ne i32 %944, 0
  %946 = xor i1 %945, true
  %947 = zext i1 %946 to i32
  %948 = call i32 @CHECK(i32 %947)
  %949 = load i32*, i32** %2, align 8
  %950 = call i32 @nvlist_exists_string(i32* %949, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %951 = icmp ne i32 %950, 0
  %952 = xor i1 %951, true
  %953 = zext i1 %952 to i32
  %954 = call i32 @CHECK(i32 %953)
  %955 = load i32*, i32** %2, align 8
  %956 = call i32 @nvlist_exists_nvlist(i32* %955, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %957 = call i32 @CHECK(i32 %956)
  %958 = load i32*, i32** %2, align 8
  %959 = call i32 @nvlist_exists_descriptor(i32* %958, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %960 = call i32 @CHECK(i32 %959)
  %961 = load i32*, i32** %2, align 8
  %962 = call i32 @nvlist_exists_binary(i32* %961, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %963 = call i32 @CHECK(i32 %962)
  %964 = load i32*, i32** %2, align 8
  %965 = call i32 @nvlist_free_nvlist(i32* %964, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %966 = load i32*, i32** %2, align 8
  %967 = call i32 @nvlist_exists(i32* %966, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %968 = icmp ne i32 %967, 0
  %969 = xor i1 %968, true
  %970 = zext i1 %969 to i32
  %971 = call i32 @CHECK(i32 %970)
  %972 = load i32*, i32** %2, align 8
  %973 = call i32 @nvlist_exists(i32* %972, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %974 = icmp ne i32 %973, 0
  %975 = xor i1 %974, true
  %976 = zext i1 %975 to i32
  %977 = call i32 @CHECK(i32 %976)
  %978 = load i32*, i32** %2, align 8
  %979 = call i32 @nvlist_exists(i32* %978, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %980 = icmp ne i32 %979, 0
  %981 = xor i1 %980, true
  %982 = zext i1 %981 to i32
  %983 = call i32 @CHECK(i32 %982)
  %984 = load i32*, i32** %2, align 8
  %985 = call i32 @nvlist_exists(i32* %984, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %986 = icmp ne i32 %985, 0
  %987 = xor i1 %986, true
  %988 = zext i1 %987 to i32
  %989 = call i32 @CHECK(i32 %988)
  %990 = load i32*, i32** %2, align 8
  %991 = call i32 @nvlist_exists(i32* %990, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %992 = icmp ne i32 %991, 0
  %993 = xor i1 %992, true
  %994 = zext i1 %993 to i32
  %995 = call i32 @CHECK(i32 %994)
  %996 = load i32*, i32** %2, align 8
  %997 = call i32 @nvlist_exists(i32* %996, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %998 = call i32 @CHECK(i32 %997)
  %999 = load i32*, i32** %2, align 8
  %1000 = call i32 @nvlist_exists(i32* %999, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %1001 = call i32 @CHECK(i32 %1000)
  %1002 = load i32*, i32** %2, align 8
  %1003 = call i32 @nvlist_exists_null(i32* %1002, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %1004 = icmp ne i32 %1003, 0
  %1005 = xor i1 %1004, true
  %1006 = zext i1 %1005 to i32
  %1007 = call i32 @CHECK(i32 %1006)
  %1008 = load i32*, i32** %2, align 8
  %1009 = call i32 @nvlist_exists_bool(i32* %1008, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %1010 = icmp ne i32 %1009, 0
  %1011 = xor i1 %1010, true
  %1012 = zext i1 %1011 to i32
  %1013 = call i32 @CHECK(i32 %1012)
  %1014 = load i32*, i32** %2, align 8
  %1015 = call i32 @nvlist_exists_number(i32* %1014, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %1016 = icmp ne i32 %1015, 0
  %1017 = xor i1 %1016, true
  %1018 = zext i1 %1017 to i32
  %1019 = call i32 @CHECK(i32 %1018)
  %1020 = load i32*, i32** %2, align 8
  %1021 = call i32 @nvlist_exists_string(i32* %1020, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %1022 = icmp ne i32 %1021, 0
  %1023 = xor i1 %1022, true
  %1024 = zext i1 %1023 to i32
  %1025 = call i32 @CHECK(i32 %1024)
  %1026 = load i32*, i32** %2, align 8
  %1027 = call i32 @nvlist_exists_nvlist(i32* %1026, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %1028 = icmp ne i32 %1027, 0
  %1029 = xor i1 %1028, true
  %1030 = zext i1 %1029 to i32
  %1031 = call i32 @CHECK(i32 %1030)
  %1032 = load i32*, i32** %2, align 8
  %1033 = call i32 @nvlist_exists_descriptor(i32* %1032, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %1034 = call i32 @CHECK(i32 %1033)
  %1035 = load i32*, i32** %2, align 8
  %1036 = call i32 @nvlist_exists_binary(i32* %1035, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %1037 = call i32 @CHECK(i32 %1036)
  %1038 = load i32*, i32** %2, align 8
  %1039 = call i32 @nvlist_free_descriptor(i32* %1038, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %1040 = load i32*, i32** %2, align 8
  %1041 = call i32 @nvlist_exists(i32* %1040, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %1042 = icmp ne i32 %1041, 0
  %1043 = xor i1 %1042, true
  %1044 = zext i1 %1043 to i32
  %1045 = call i32 @CHECK(i32 %1044)
  %1046 = load i32*, i32** %2, align 8
  %1047 = call i32 @nvlist_exists(i32* %1046, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %1048 = icmp ne i32 %1047, 0
  %1049 = xor i1 %1048, true
  %1050 = zext i1 %1049 to i32
  %1051 = call i32 @CHECK(i32 %1050)
  %1052 = load i32*, i32** %2, align 8
  %1053 = call i32 @nvlist_exists(i32* %1052, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %1054 = icmp ne i32 %1053, 0
  %1055 = xor i1 %1054, true
  %1056 = zext i1 %1055 to i32
  %1057 = call i32 @CHECK(i32 %1056)
  %1058 = load i32*, i32** %2, align 8
  %1059 = call i32 @nvlist_exists(i32* %1058, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %1060 = icmp ne i32 %1059, 0
  %1061 = xor i1 %1060, true
  %1062 = zext i1 %1061 to i32
  %1063 = call i32 @CHECK(i32 %1062)
  %1064 = load i32*, i32** %2, align 8
  %1065 = call i32 @nvlist_exists(i32* %1064, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %1066 = icmp ne i32 %1065, 0
  %1067 = xor i1 %1066, true
  %1068 = zext i1 %1067 to i32
  %1069 = call i32 @CHECK(i32 %1068)
  %1070 = load i32*, i32** %2, align 8
  %1071 = call i32 @nvlist_exists(i32* %1070, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %1072 = icmp ne i32 %1071, 0
  %1073 = xor i1 %1072, true
  %1074 = zext i1 %1073 to i32
  %1075 = call i32 @CHECK(i32 %1074)
  %1076 = load i32*, i32** %2, align 8
  %1077 = call i32 @nvlist_exists(i32* %1076, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %1078 = call i32 @CHECK(i32 %1077)
  %1079 = load i32*, i32** %2, align 8
  %1080 = call i32 @nvlist_exists_null(i32* %1079, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %1081 = icmp ne i32 %1080, 0
  %1082 = xor i1 %1081, true
  %1083 = zext i1 %1082 to i32
  %1084 = call i32 @CHECK(i32 %1083)
  %1085 = load i32*, i32** %2, align 8
  %1086 = call i32 @nvlist_exists_bool(i32* %1085, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %1087 = icmp ne i32 %1086, 0
  %1088 = xor i1 %1087, true
  %1089 = zext i1 %1088 to i32
  %1090 = call i32 @CHECK(i32 %1089)
  %1091 = load i32*, i32** %2, align 8
  %1092 = call i32 @nvlist_exists_number(i32* %1091, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %1093 = icmp ne i32 %1092, 0
  %1094 = xor i1 %1093, true
  %1095 = zext i1 %1094 to i32
  %1096 = call i32 @CHECK(i32 %1095)
  %1097 = load i32*, i32** %2, align 8
  %1098 = call i32 @nvlist_exists_string(i32* %1097, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %1099 = icmp ne i32 %1098, 0
  %1100 = xor i1 %1099, true
  %1101 = zext i1 %1100 to i32
  %1102 = call i32 @CHECK(i32 %1101)
  %1103 = load i32*, i32** %2, align 8
  %1104 = call i32 @nvlist_exists_nvlist(i32* %1103, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %1105 = icmp ne i32 %1104, 0
  %1106 = xor i1 %1105, true
  %1107 = zext i1 %1106 to i32
  %1108 = call i32 @CHECK(i32 %1107)
  %1109 = load i32*, i32** %2, align 8
  %1110 = call i32 @nvlist_exists_descriptor(i32* %1109, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %1111 = icmp ne i32 %1110, 0
  %1112 = xor i1 %1111, true
  %1113 = zext i1 %1112 to i32
  %1114 = call i32 @CHECK(i32 %1113)
  %1115 = load i32*, i32** %2, align 8
  %1116 = call i32 @nvlist_exists_binary(i32* %1115, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %1117 = call i32 @CHECK(i32 %1116)
  %1118 = load i32*, i32** %2, align 8
  %1119 = call i32 @nvlist_free_binary(i32* %1118, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %1120 = load i32*, i32** %2, align 8
  %1121 = call i32 @nvlist_exists(i32* %1120, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %1122 = icmp ne i32 %1121, 0
  %1123 = xor i1 %1122, true
  %1124 = zext i1 %1123 to i32
  %1125 = call i32 @CHECK(i32 %1124)
  %1126 = load i32*, i32** %2, align 8
  %1127 = call i32 @nvlist_exists(i32* %1126, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %1128 = icmp ne i32 %1127, 0
  %1129 = xor i1 %1128, true
  %1130 = zext i1 %1129 to i32
  %1131 = call i32 @CHECK(i32 %1130)
  %1132 = load i32*, i32** %2, align 8
  %1133 = call i32 @nvlist_exists(i32* %1132, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %1134 = icmp ne i32 %1133, 0
  %1135 = xor i1 %1134, true
  %1136 = zext i1 %1135 to i32
  %1137 = call i32 @CHECK(i32 %1136)
  %1138 = load i32*, i32** %2, align 8
  %1139 = call i32 @nvlist_exists(i32* %1138, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %1140 = icmp ne i32 %1139, 0
  %1141 = xor i1 %1140, true
  %1142 = zext i1 %1141 to i32
  %1143 = call i32 @CHECK(i32 %1142)
  %1144 = load i32*, i32** %2, align 8
  %1145 = call i32 @nvlist_exists(i32* %1144, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %1146 = icmp ne i32 %1145, 0
  %1147 = xor i1 %1146, true
  %1148 = zext i1 %1147 to i32
  %1149 = call i32 @CHECK(i32 %1148)
  %1150 = load i32*, i32** %2, align 8
  %1151 = call i32 @nvlist_exists(i32* %1150, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %1152 = icmp ne i32 %1151, 0
  %1153 = xor i1 %1152, true
  %1154 = zext i1 %1153 to i32
  %1155 = call i32 @CHECK(i32 %1154)
  %1156 = load i32*, i32** %2, align 8
  %1157 = call i32 @nvlist_exists(i32* %1156, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %1158 = icmp ne i32 %1157, 0
  %1159 = xor i1 %1158, true
  %1160 = zext i1 %1159 to i32
  %1161 = call i32 @CHECK(i32 %1160)
  %1162 = load i32*, i32** %2, align 8
  %1163 = call i32 @nvlist_exists_null(i32* %1162, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0))
  %1164 = icmp ne i32 %1163, 0
  %1165 = xor i1 %1164, true
  %1166 = zext i1 %1165 to i32
  %1167 = call i32 @CHECK(i32 %1166)
  %1168 = load i32*, i32** %2, align 8
  %1169 = call i32 @nvlist_exists_bool(i32* %1168, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0))
  %1170 = icmp ne i32 %1169, 0
  %1171 = xor i1 %1170, true
  %1172 = zext i1 %1171 to i32
  %1173 = call i32 @CHECK(i32 %1172)
  %1174 = load i32*, i32** %2, align 8
  %1175 = call i32 @nvlist_exists_number(i32* %1174, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0))
  %1176 = icmp ne i32 %1175, 0
  %1177 = xor i1 %1176, true
  %1178 = zext i1 %1177 to i32
  %1179 = call i32 @CHECK(i32 %1178)
  %1180 = load i32*, i32** %2, align 8
  %1181 = call i32 @nvlist_exists_string(i32* %1180, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0))
  %1182 = icmp ne i32 %1181, 0
  %1183 = xor i1 %1182, true
  %1184 = zext i1 %1183 to i32
  %1185 = call i32 @CHECK(i32 %1184)
  %1186 = load i32*, i32** %2, align 8
  %1187 = call i32 @nvlist_exists_nvlist(i32* %1186, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0))
  %1188 = icmp ne i32 %1187, 0
  %1189 = xor i1 %1188, true
  %1190 = zext i1 %1189 to i32
  %1191 = call i32 @CHECK(i32 %1190)
  %1192 = load i32*, i32** %2, align 8
  %1193 = call i32 @nvlist_exists_descriptor(i32* %1192, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %1194 = icmp ne i32 %1193, 0
  %1195 = xor i1 %1194, true
  %1196 = zext i1 %1195 to i32
  %1197 = call i32 @CHECK(i32 %1196)
  %1198 = load i32*, i32** %2, align 8
  %1199 = call i32 @nvlist_exists_binary(i32* %1198, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0))
  %1200 = icmp ne i32 %1199, 0
  %1201 = xor i1 %1200, true
  %1202 = zext i1 %1201 to i32
  %1203 = call i32 @CHECK(i32 %1202)
  %1204 = load i32*, i32** %2, align 8
  %1205 = call i32 @nvlist_empty(i32* %1204)
  %1206 = call i32 @CHECK(i32 %1205)
  %1207 = load i32*, i32** %2, align 8
  %1208 = call i32 @nvlist_destroy(i32* %1207)
  ret i32 0
}

declare dso_local i32 @printf(i8*) #1

declare dso_local i32* @nvlist_create(i32) #1

declare dso_local i32 @CHECK(i32) #1

declare dso_local i32 @nvlist_exists(i32*, i8*) #1

declare dso_local i32 @nvlist_exists_null(i32*, i8*) #1

declare dso_local i32 @nvlist_exists_bool(i32*, i8*) #1

declare dso_local i32 @nvlist_exists_number(i32*, i8*) #1

declare dso_local i32 @nvlist_exists_string(i32*, i8*) #1

declare dso_local i32 @nvlist_exists_nvlist(i32*, i8*) #1

declare dso_local i32 @nvlist_exists_descriptor(i32*, i8*) #1

declare dso_local i32 @nvlist_exists_binary(i32*, i8*) #1

declare dso_local i32 @nvlist_add_null(i32*, i8*) #1

declare dso_local i64 @nvlist_error(i32*) #1

declare dso_local i32 @nvlist_add_bool(i32*, i8*, i32) #1

declare dso_local i32 @nvlist_add_number(i32*, i8*, i32) #1

declare dso_local i32 @nvlist_add_string(i32*, i8*, i8*) #1

declare dso_local i32 @nvlist_add_nvlist(i32*, i8*, i32*) #1

declare dso_local i32 @nvlist_add_descriptor(i32*, i8*, i32) #1

declare dso_local i32 @nvlist_add_binary(i32*, i8*, i8*, i32) #1

declare dso_local i32 @nvlist_free_null(i32*, i8*) #1

declare dso_local i32 @nvlist_free_bool(i32*, i8*) #1

declare dso_local i32 @nvlist_free_number(i32*, i8*) #1

declare dso_local i32 @nvlist_free_string(i32*, i8*) #1

declare dso_local i32 @nvlist_free_nvlist(i32*, i8*) #1

declare dso_local i32 @nvlist_free_descriptor(i32*, i8*) #1

declare dso_local i32 @nvlist_free_binary(i32*, i8*) #1

declare dso_local i32 @nvlist_empty(i32*) #1

declare dso_local i32 @nvlist_destroy(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
