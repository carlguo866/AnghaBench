; ModuleID = '/home/carl/AnghaBench/freebsd/sys/cddl/contrib/opensolaris/common/zfs/extr_zfs_prop.c_zfs_prop_init.c'
source_filename = "/home/carl/AnghaBench/freebsd/sys/cddl/contrib/opensolaris/common/zfs/extr_zfs_prop.c_zfs_prop_init.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_3__ = type { i8*, i32 }

@zfs_prop_init.checksum_table = internal global [9 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 147 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 148 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i32 151 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0), i32 150 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i32 146 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i32 0, i32 0), i32 149 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), i32 145 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i32 144 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str = private unnamed_addr constant [3 x i8] c"on\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"off\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"fletcher2\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"fletcher4\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"sha256\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"noparity\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"sha512\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"skein\00", align 1
@zfs_prop_init.dedup_table = internal global [10 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 147 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 148 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i32 0, i32 0), i32 159 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i32 146 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i32 0, i32 0), i32 159 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), i32 145 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i32 0, i32 0), i32 159 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i32 144 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i32 0, i32 0), i32 159 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str.8 = private unnamed_addr constant [7 x i8] c"verify\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"sha256,verify\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"sha512,verify\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"skein,verify\00", align 1
@zfs_prop_init.compress_table = internal global [16 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 130 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 131 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i32 132 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i32 137 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i32 0, i32 0), i32 142 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i32 0, i32 0), i32 141 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i32 0, i32 0), i32 140 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0), i32 139 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i32 0), i32 138 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.19, i32 0, i32 0), i32 137 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i32 0, i32 0), i32 136 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i32 0, i32 0), i32 135 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i32 0, i32 0), i32 134 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i32 0, i32 0), i32 129 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i32 0, i32 0), i32 133 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str.12 = private unnamed_addr constant [5 x i8] c"lzjb\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"gzip\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"gzip-1\00", align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"gzip-2\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"gzip-3\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"gzip-4\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"gzip-5\00", align 1
@.str.19 = private unnamed_addr constant [7 x i8] c"gzip-6\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"gzip-7\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"gzip-8\00", align 1
@.str.22 = private unnamed_addr constant [7 x i8] c"gzip-9\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"zle\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"lz4\00", align 1
@zfs_prop_init.snapdir_table = internal global [3 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.25, i32 0, i32 0), i32 161 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.26, i32 0, i32 0), i32 160 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str.25 = private unnamed_addr constant [7 x i8] c"hidden\00", align 1
@.str.26 = private unnamed_addr constant [8 x i8] c"visible\00", align 1
@zfs_prop_init.acl_mode_table = internal global [5 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i32 0, i32 0), i32 187 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i32 186 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i32 0, i32 0), i32 184 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), i32 182 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str.27 = private unnamed_addr constant [8 x i8] c"discard\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"groupmask\00", align 1
@.str.29 = private unnamed_addr constant [12 x i8] c"passthrough\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"restricted\00", align 1
@zfs_prop_init.acl_inherit_table = internal global [7 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i32 0, i32 0), i32 187 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i32 0, i32 0), i32 185 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), i32 182 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i32 0, i32 0), i32 184 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i32 0, i32 0), i32 182 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i32 0, i32 0), i32 183 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str.31 = private unnamed_addr constant [8 x i8] c"noallow\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"secure\00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"passthrough-x\00", align 1
@zfs_prop_init.case_table = internal global [4 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i32 173 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i32 0, i32 0), i32 175 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i32 0, i32 0), i32 174 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str.34 = private unnamed_addr constant [10 x i8] c"sensitive\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"insensitive\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"mixed\00", align 1
@zfs_prop_init.copies_table = internal global [4 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i32 0, i32 0), i32 1 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i32 0, i32 0), i32 2 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i32 0, i32 0), i32 3 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str.37 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.38 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.39 = private unnamed_addr constant [2 x i8] c"3\00", align 1
@zfs_prop_init.normalize_table = internal global [6 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i32 0, i32 0), i32 0 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i32 0, i32 0), i32 190 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i32 0, i32 0), i32 189 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i32 0, i32 0), i32 191 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i32 0, i32 0), i32 188 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str.40 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"formD\00", align 1
@.str.42 = private unnamed_addr constant [7 x i8] c"formKC\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"formC\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"formKD\00", align 1
@zfs_prop_init.version_table = internal global [7 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i32 0, i32 0), i32 1 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i32 0, i32 0), i32 2 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i32 0, i32 0), i32 3 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.45, i32 0, i32 0), i32 4 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.46, i32 0, i32 0), i32 5 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i32 0, i32 0), i32 128 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str.45 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@.str.46 = private unnamed_addr constant [2 x i8] c"5\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"current\00", align 1
@zfs_prop_init.boolean_table = internal global [3 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 0 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 1 }, %struct.TYPE_3__ zeroinitializer], align 16
@zfs_prop_init.logbias_table = internal global [3 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.48, i32 0, i32 0), i32 165 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.49, i32 0, i32 0), i32 164 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str.48 = private unnamed_addr constant [8 x i8] c"latency\00", align 1
@.str.49 = private unnamed_addr constant [11 x i8] c"throughput\00", align 1
@zfs_prop_init.canmount_table = internal global [4 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0), i32 177 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 176 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i32 0, i32 0), i32 178 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str.50 = private unnamed_addr constant [7 x i8] c"noauto\00", align 1
@zfs_prop_init.cache_table = internal global [4 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i32 0, i32 0), i32 179 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i32 0, i32 0), i32 180 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i32 0, i32 0), i32 181 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str.51 = private unnamed_addr constant [9 x i8] c"metadata\00", align 1
@.str.52 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@zfs_prop_init.sync_table = internal global [4 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i32 0, i32 0), i32 157 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.54, i32 0, i32 0), i32 159 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.55, i32 0, i32 0), i32 158 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str.53 = private unnamed_addr constant [9 x i8] c"standard\00", align 1
@.str.54 = private unnamed_addr constant [7 x i8] c"always\00", align 1
@.str.55 = private unnamed_addr constant [9 x i8] c"disabled\00", align 1
@zfs_prop_init.volmode_table = internal global [5 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.56, i32 0, i32 0), i32 156 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i32 0, i32 0), i32 154 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i32 0, i32 0), i32 155 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.40, i32 0, i32 0), i32 153 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str.56 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"geom\00", align 1
@.str.58 = private unnamed_addr constant [4 x i8] c"dev\00", align 1
@zfs_prop_init.dnsize_table = internal global [8 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.59, i32 0, i32 0), i32 166 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.60, i32 0, i32 0), i32 167 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i32 171 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0), i32 170 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.63, i32 0, i32 0), i32 169 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.64, i32 0, i32 0), i32 168 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.65, i32 0, i32 0), i32 172 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str.59 = private unnamed_addr constant [7 x i8] c"legacy\00", align 1
@.str.60 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.61 = private unnamed_addr constant [3 x i8] c"1k\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"2k\00", align 1
@.str.63 = private unnamed_addr constant [3 x i8] c"4k\00", align 1
@.str.64 = private unnamed_addr constant [3 x i8] c"8k\00", align 1
@.str.65 = private unnamed_addr constant [4 x i8] c"16k\00", align 1
@zfs_prop_init.redundant_metadata_table = internal global [3 x %struct.TYPE_3__] [%struct.TYPE_3__ { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.52, i32 0, i32 0), i32 163 }, %struct.TYPE_3__ { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.66, i32 0, i32 0), i32 162 }, %struct.TYPE_3__ zeroinitializer], align 16
@.str.66 = private unnamed_addr constant [5 x i8] c"most\00", align 1
@ZFS_PROP_REDUNDANT_METADATA = common dso_local global i32 0, align 4
@.str.67 = private unnamed_addr constant [19 x i8] c"redundant_metadata\00", align 1
@PROP_INHERIT = common dso_local global i32 0, align 4
@ZFS_TYPE_FILESYSTEM = common dso_local global i32 0, align 4
@ZFS_TYPE_VOLUME = common dso_local global i32 0, align 4
@.str.68 = private unnamed_addr constant [11 x i8] c"all | most\00", align 1
@.str.69 = private unnamed_addr constant [10 x i8] c"REDUND_MD\00", align 1
@ZFS_PROP_SYNC = common dso_local global i32 0, align 4
@.str.70 = private unnamed_addr constant [5 x i8] c"sync\00", align 1
@.str.71 = private unnamed_addr constant [29 x i8] c"standard | always | disabled\00", align 1
@.str.72 = private unnamed_addr constant [5 x i8] c"SYNC\00", align 1
@ZFS_PROP_CHECKSUM = common dso_local global i32 0, align 4
@.str.73 = private unnamed_addr constant [9 x i8] c"checksum\00", align 1
@ZIO_CHECKSUM_DEFAULT = common dso_local global i32 0, align 4
@.str.74 = private unnamed_addr constant [59 x i8] c"on | off | fletcher2 | fletcher4 | sha256 | sha512 | skein\00", align 1
@.str.75 = private unnamed_addr constant [9 x i8] c"CHECKSUM\00", align 1
@ZFS_PROP_DEDUP = common dso_local global i32 0, align 4
@.str.76 = private unnamed_addr constant [6 x i8] c"dedup\00", align 1
@.str.77 = private unnamed_addr constant [69 x i8] c"on | off | verify | sha256[,verify], sha512[,verify], skein[,verify]\00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"DEDUP\00", align 1
@ZFS_PROP_COMPRESSION = common dso_local global i32 0, align 4
@.str.79 = private unnamed_addr constant [12 x i8] c"compression\00", align 1
@ZIO_COMPRESS_DEFAULT = common dso_local global i32 0, align 4
@.str.80 = private unnamed_addr constant [48 x i8] c"on | off | lzjb | gzip | gzip-[1-9] | zle | lz4\00", align 1
@.str.81 = private unnamed_addr constant [9 x i8] c"COMPRESS\00", align 1
@ZFS_PROP_SNAPDIR = common dso_local global i32 0, align 4
@.str.82 = private unnamed_addr constant [8 x i8] c"snapdir\00", align 1
@.str.83 = private unnamed_addr constant [17 x i8] c"hidden | visible\00", align 1
@.str.84 = private unnamed_addr constant [8 x i8] c"SNAPDIR\00", align 1
@ZFS_PROP_ACLMODE = common dso_local global i32 0, align 4
@.str.85 = private unnamed_addr constant [8 x i8] c"aclmode\00", align 1
@.str.86 = private unnamed_addr constant [47 x i8] c"discard | groupmask | passthrough | restricted\00", align 1
@.str.87 = private unnamed_addr constant [8 x i8] c"ACLMODE\00", align 1
@ZFS_PROP_ACLINHERIT = common dso_local global i32 0, align 4
@.str.88 = private unnamed_addr constant [11 x i8] c"aclinherit\00", align 1
@.str.89 = private unnamed_addr constant [61 x i8] c"discard | noallow | restricted | passthrough | passthrough-x\00", align 1
@.str.90 = private unnamed_addr constant [11 x i8] c"ACLINHERIT\00", align 1
@ZFS_PROP_COPIES = common dso_local global i32 0, align 4
@.str.91 = private unnamed_addr constant [7 x i8] c"copies\00", align 1
@.str.92 = private unnamed_addr constant [10 x i8] c"1 | 2 | 3\00", align 1
@.str.93 = private unnamed_addr constant [7 x i8] c"COPIES\00", align 1
@ZFS_PROP_PRIMARYCACHE = common dso_local global i32 0, align 4
@.str.94 = private unnamed_addr constant [13 x i8] c"primarycache\00", align 1
@ZFS_TYPE_SNAPSHOT = common dso_local global i32 0, align 4
@.str.95 = private unnamed_addr constant [22 x i8] c"all | none | metadata\00", align 1
@.str.96 = private unnamed_addr constant [13 x i8] c"PRIMARYCACHE\00", align 1
@ZFS_PROP_SECONDARYCACHE = common dso_local global i32 0, align 4
@.str.97 = private unnamed_addr constant [15 x i8] c"secondarycache\00", align 1
@.str.98 = private unnamed_addr constant [15 x i8] c"SECONDARYCACHE\00", align 1
@ZFS_PROP_LOGBIAS = common dso_local global i32 0, align 4
@.str.99 = private unnamed_addr constant [8 x i8] c"logbias\00", align 1
@.str.100 = private unnamed_addr constant [21 x i8] c"latency | throughput\00", align 1
@.str.101 = private unnamed_addr constant [8 x i8] c"LOGBIAS\00", align 1
@ZFS_PROP_VOLMODE = common dso_local global i32 0, align 4
@.str.102 = private unnamed_addr constant [8 x i8] c"volmode\00", align 1
@.str.103 = private unnamed_addr constant [28 x i8] c"default | geom | dev | none\00", align 1
@.str.104 = private unnamed_addr constant [8 x i8] c"VOLMODE\00", align 1
@ZFS_PROP_DNODESIZE = common dso_local global i32 0, align 4
@.str.105 = private unnamed_addr constant [10 x i8] c"dnodesize\00", align 1
@.str.106 = private unnamed_addr constant [40 x i8] c"legacy | auto | 1k | 2k | 4k | 8k | 16k\00", align 1
@.str.107 = private unnamed_addr constant [7 x i8] c"DNSIZE\00", align 1
@ZFS_PROP_ATIME = common dso_local global i32 0, align 4
@.str.108 = private unnamed_addr constant [6 x i8] c"atime\00", align 1
@.str.109 = private unnamed_addr constant [9 x i8] c"on | off\00", align 1
@.str.110 = private unnamed_addr constant [6 x i8] c"ATIME\00", align 1
@ZFS_PROP_DEVICES = common dso_local global i32 0, align 4
@.str.111 = private unnamed_addr constant [8 x i8] c"devices\00", align 1
@.str.112 = private unnamed_addr constant [8 x i8] c"DEVICES\00", align 1
@ZFS_PROP_EXEC = common dso_local global i32 0, align 4
@.str.113 = private unnamed_addr constant [5 x i8] c"exec\00", align 1
@.str.114 = private unnamed_addr constant [5 x i8] c"EXEC\00", align 1
@ZFS_PROP_SETUID = common dso_local global i32 0, align 4
@.str.115 = private unnamed_addr constant [7 x i8] c"setuid\00", align 1
@.str.116 = private unnamed_addr constant [7 x i8] c"SETUID\00", align 1
@ZFS_PROP_READONLY = common dso_local global i32 0, align 4
@.str.117 = private unnamed_addr constant [9 x i8] c"readonly\00", align 1
@.str.118 = private unnamed_addr constant [7 x i8] c"RDONLY\00", align 1
@ZFS_PROP_ZONED = common dso_local global i32 0, align 4
@.str.119 = private unnamed_addr constant [7 x i8] c"jailed\00", align 1
@.str.120 = private unnamed_addr constant [7 x i8] c"JAILED\00", align 1
@ZFS_PROP_XATTR = common dso_local global i32 0, align 4
@.str.121 = private unnamed_addr constant [6 x i8] c"xattr\00", align 1
@.str.122 = private unnamed_addr constant [6 x i8] c"XATTR\00", align 1
@ZFS_PROP_VSCAN = common dso_local global i32 0, align 4
@.str.123 = private unnamed_addr constant [6 x i8] c"vscan\00", align 1
@.str.124 = private unnamed_addr constant [6 x i8] c"VSCAN\00", align 1
@ZFS_PROP_NBMAND = common dso_local global i32 0, align 4
@.str.125 = private unnamed_addr constant [7 x i8] c"nbmand\00", align 1
@.str.126 = private unnamed_addr constant [7 x i8] c"NBMAND\00", align 1
@ZFS_PROP_VERSION = common dso_local global i32 0, align 4
@.str.127 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@PROP_DEFAULT = common dso_local global i32 0, align 4
@.str.128 = private unnamed_addr constant [28 x i8] c"1 | 2 | 3 | 4 | 5 | current\00", align 1
@.str.129 = private unnamed_addr constant [8 x i8] c"VERSION\00", align 1
@ZFS_PROP_CANMOUNT = common dso_local global i32 0, align 4
@.str.130 = private unnamed_addr constant [9 x i8] c"canmount\00", align 1
@.str.131 = private unnamed_addr constant [18 x i8] c"on | off | noauto\00", align 1
@.str.132 = private unnamed_addr constant [9 x i8] c"CANMOUNT\00", align 1
@ZFS_PROP_MOUNTED = common dso_local global i32 0, align 4
@.str.133 = private unnamed_addr constant [8 x i8] c"mounted\00", align 1
@PROP_READONLY = common dso_local global i32 0, align 4
@.str.134 = private unnamed_addr constant [9 x i8] c"yes | no\00", align 1
@.str.135 = private unnamed_addr constant [8 x i8] c"MOUNTED\00", align 1
@ZFS_PROP_DEFER_DESTROY = common dso_local global i32 0, align 4
@.str.136 = private unnamed_addr constant [14 x i8] c"defer_destroy\00", align 1
@.str.137 = private unnamed_addr constant [14 x i8] c"DEFER_DESTROY\00", align 1
@ZFS_PROP_NORMALIZE = common dso_local global i32 0, align 4
@.str.138 = private unnamed_addr constant [14 x i8] c"normalization\00", align 1
@PROP_ONETIME = common dso_local global i32 0, align 4
@.str.139 = private unnamed_addr constant [39 x i8] c"none | formC | formD | formKC | formKD\00", align 1
@.str.140 = private unnamed_addr constant [14 x i8] c"NORMALIZATION\00", align 1
@ZFS_PROP_CASE = common dso_local global i32 0, align 4
@.str.141 = private unnamed_addr constant [16 x i8] c"casesensitivity\00", align 1
@.str.142 = private unnamed_addr constant [32 x i8] c"sensitive | insensitive | mixed\00", align 1
@.str.143 = private unnamed_addr constant [5 x i8] c"CASE\00", align 1
@ZFS_PROP_UTF8ONLY = common dso_local global i32 0, align 4
@.str.144 = private unnamed_addr constant [9 x i8] c"utf8only\00", align 1
@.str.145 = private unnamed_addr constant [9 x i8] c"UTF8ONLY\00", align 1
@ZFS_PROP_ORIGIN = common dso_local global i32 0, align 4
@.str.146 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.147 = private unnamed_addr constant [11 x i8] c"<snapshot>\00", align 1
@.str.148 = private unnamed_addr constant [7 x i8] c"ORIGIN\00", align 1
@ZFS_PROP_CLONES = common dso_local global i32 0, align 4
@.str.149 = private unnamed_addr constant [7 x i8] c"clones\00", align 1
@.str.150 = private unnamed_addr constant [16 x i8] c"<dataset>[,...]\00", align 1
@.str.151 = private unnamed_addr constant [7 x i8] c"CLONES\00", align 1
@ZFS_PROP_MOUNTPOINT = common dso_local global i32 0, align 4
@.str.152 = private unnamed_addr constant [11 x i8] c"mountpoint\00", align 1
@.str.153 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.154 = private unnamed_addr constant [23 x i8] c"<path> | legacy | none\00", align 1
@.str.155 = private unnamed_addr constant [11 x i8] c"MOUNTPOINT\00", align 1
@ZFS_PROP_SHARENFS = common dso_local global i32 0, align 4
@.str.156 = private unnamed_addr constant [9 x i8] c"sharenfs\00", align 1
@.str.157 = private unnamed_addr constant [29 x i8] c"on | off | share(1M) options\00", align 1
@.str.158 = private unnamed_addr constant [9 x i8] c"SHARENFS\00", align 1
@ZFS_PROP_TYPE = common dso_local global i32 0, align 4
@.str.159 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@ZFS_TYPE_DATASET = common dso_local global i32 0, align 4
@ZFS_TYPE_BOOKMARK = common dso_local global i32 0, align 4
@.str.160 = private unnamed_addr constant [42 x i8] c"filesystem | volume | snapshot | bookmark\00", align 1
@.str.161 = private unnamed_addr constant [5 x i8] c"TYPE\00", align 1
@ZFS_PROP_SHARESMB = common dso_local global i32 0, align 4
@.str.162 = private unnamed_addr constant [9 x i8] c"sharesmb\00", align 1
@.str.163 = private unnamed_addr constant [32 x i8] c"on | off | sharemgr(1M) options\00", align 1
@.str.164 = private unnamed_addr constant [9 x i8] c"SHARESMB\00", align 1
@ZFS_PROP_MLSLABEL = common dso_local global i32 0, align 4
@.str.165 = private unnamed_addr constant [9 x i8] c"mlslabel\00", align 1
@ZFS_MLSLABEL_DEFAULT = common dso_local global i8* null, align 8
@.str.166 = private unnamed_addr constant [20 x i8] c"<sensitivity label>\00", align 1
@.str.167 = private unnamed_addr constant [9 x i8] c"MLSLABEL\00", align 1
@ZFS_PROP_RECEIVE_RESUME_TOKEN = common dso_local global i32 0, align 4
@.str.168 = private unnamed_addr constant [21 x i8] c"receive_resume_token\00", align 1
@.str.169 = private unnamed_addr constant [15 x i8] c"<string token>\00", align 1
@.str.170 = private unnamed_addr constant [10 x i8] c"RESUMETOK\00", align 1
@ZFS_PROP_USED = common dso_local global i32 0, align 4
@.str.171 = private unnamed_addr constant [5 x i8] c"used\00", align 1
@.str.172 = private unnamed_addr constant [7 x i8] c"<size>\00", align 1
@.str.173 = private unnamed_addr constant [5 x i8] c"USED\00", align 1
@ZFS_PROP_AVAILABLE = common dso_local global i32 0, align 4
@.str.174 = private unnamed_addr constant [10 x i8] c"available\00", align 1
@.str.175 = private unnamed_addr constant [6 x i8] c"AVAIL\00", align 1
@ZFS_PROP_REFERENCED = common dso_local global i32 0, align 4
@.str.176 = private unnamed_addr constant [11 x i8] c"referenced\00", align 1
@.str.177 = private unnamed_addr constant [6 x i8] c"REFER\00", align 1
@ZFS_PROP_COMPRESSRATIO = common dso_local global i32 0, align 4
@.str.178 = private unnamed_addr constant [14 x i8] c"compressratio\00", align 1
@.str.179 = private unnamed_addr constant [32 x i8] c"<1.00x or higher if compressed>\00", align 1
@.str.180 = private unnamed_addr constant [6 x i8] c"RATIO\00", align 1
@ZFS_PROP_REFRATIO = common dso_local global i32 0, align 4
@.str.181 = private unnamed_addr constant [17 x i8] c"refcompressratio\00", align 1
@.str.182 = private unnamed_addr constant [9 x i8] c"REFRATIO\00", align 1
@ZFS_PROP_VOLBLOCKSIZE = common dso_local global i32 0, align 4
@.str.183 = private unnamed_addr constant [13 x i8] c"volblocksize\00", align 1
@ZVOL_DEFAULT_BLOCKSIZE = common dso_local global i32 0, align 4
@.str.184 = private unnamed_addr constant [24 x i8] c"512 to 128k, power of 2\00", align 1
@.str.185 = private unnamed_addr constant [9 x i8] c"VOLBLOCK\00", align 1
@ZFS_PROP_USEDSNAP = common dso_local global i32 0, align 4
@.str.186 = private unnamed_addr constant [16 x i8] c"usedbysnapshots\00", align 1
@.str.187 = private unnamed_addr constant [9 x i8] c"USEDSNAP\00", align 1
@ZFS_PROP_USEDDS = common dso_local global i32 0, align 4
@.str.188 = private unnamed_addr constant [14 x i8] c"usedbydataset\00", align 1
@.str.189 = private unnamed_addr constant [7 x i8] c"USEDDS\00", align 1
@ZFS_PROP_USEDCHILD = common dso_local global i32 0, align 4
@.str.190 = private unnamed_addr constant [15 x i8] c"usedbychildren\00", align 1
@.str.191 = private unnamed_addr constant [10 x i8] c"USEDCHILD\00", align 1
@ZFS_PROP_USEDREFRESERV = common dso_local global i32 0, align 4
@.str.192 = private unnamed_addr constant [21 x i8] c"usedbyrefreservation\00", align 1
@.str.193 = private unnamed_addr constant [14 x i8] c"USEDREFRESERV\00", align 1
@ZFS_PROP_USERREFS = common dso_local global i32 0, align 4
@.str.194 = private unnamed_addr constant [9 x i8] c"userrefs\00", align 1
@.str.195 = private unnamed_addr constant [8 x i8] c"<count>\00", align 1
@.str.196 = private unnamed_addr constant [9 x i8] c"USERREFS\00", align 1
@ZFS_PROP_WRITTEN = common dso_local global i32 0, align 4
@.str.197 = private unnamed_addr constant [8 x i8] c"written\00", align 1
@.str.198 = private unnamed_addr constant [8 x i8] c"WRITTEN\00", align 1
@ZFS_PROP_LOGICALUSED = common dso_local global i32 0, align 4
@.str.199 = private unnamed_addr constant [12 x i8] c"logicalused\00", align 1
@.str.200 = private unnamed_addr constant [6 x i8] c"LUSED\00", align 1
@ZFS_PROP_LOGICALREFERENCED = common dso_local global i32 0, align 4
@.str.201 = private unnamed_addr constant [18 x i8] c"logicalreferenced\00", align 1
@.str.202 = private unnamed_addr constant [7 x i8] c"LREFER\00", align 1
@ZFS_PROP_QUOTA = common dso_local global i32 0, align 4
@.str.203 = private unnamed_addr constant [6 x i8] c"quota\00", align 1
@.str.204 = private unnamed_addr constant [14 x i8] c"<size> | none\00", align 1
@.str.205 = private unnamed_addr constant [6 x i8] c"QUOTA\00", align 1
@ZFS_PROP_RESERVATION = common dso_local global i32 0, align 4
@.str.206 = private unnamed_addr constant [12 x i8] c"reservation\00", align 1
@.str.207 = private unnamed_addr constant [7 x i8] c"RESERV\00", align 1
@ZFS_PROP_VOLSIZE = common dso_local global i32 0, align 4
@.str.208 = private unnamed_addr constant [8 x i8] c"volsize\00", align 1
@.str.209 = private unnamed_addr constant [8 x i8] c"VOLSIZE\00", align 1
@ZFS_PROP_REFQUOTA = common dso_local global i32 0, align 4
@.str.210 = private unnamed_addr constant [9 x i8] c"refquota\00", align 1
@.str.211 = private unnamed_addr constant [9 x i8] c"REFQUOTA\00", align 1
@ZFS_PROP_REFRESERVATION = common dso_local global i32 0, align 4
@.str.212 = private unnamed_addr constant [15 x i8] c"refreservation\00", align 1
@.str.213 = private unnamed_addr constant [10 x i8] c"REFRESERV\00", align 1
@ZFS_PROP_FILESYSTEM_LIMIT = common dso_local global i32 0, align 4
@.str.214 = private unnamed_addr constant [17 x i8] c"filesystem_limit\00", align 1
@UINT64_MAX = common dso_local global i32 0, align 4
@.str.215 = private unnamed_addr constant [15 x i8] c"<count> | none\00", align 1
@.str.216 = private unnamed_addr constant [8 x i8] c"FSLIMIT\00", align 1
@ZFS_PROP_SNAPSHOT_LIMIT = common dso_local global i32 0, align 4
@.str.217 = private unnamed_addr constant [15 x i8] c"snapshot_limit\00", align 1
@.str.218 = private unnamed_addr constant [8 x i8] c"SSLIMIT\00", align 1
@ZFS_PROP_FILESYSTEM_COUNT = common dso_local global i32 0, align 4
@.str.219 = private unnamed_addr constant [17 x i8] c"filesystem_count\00", align 1
@.str.220 = private unnamed_addr constant [8 x i8] c"FSCOUNT\00", align 1
@ZFS_PROP_SNAPSHOT_COUNT = common dso_local global i32 0, align 4
@.str.221 = private unnamed_addr constant [15 x i8] c"snapshot_count\00", align 1
@.str.222 = private unnamed_addr constant [8 x i8] c"SSCOUNT\00", align 1
@ZFS_PROP_GUID = common dso_local global i32 0, align 4
@.str.223 = private unnamed_addr constant [5 x i8] c"guid\00", align 1
@.str.224 = private unnamed_addr constant [9 x i8] c"<uint64>\00", align 1
@.str.225 = private unnamed_addr constant [5 x i8] c"GUID\00", align 1
@ZFS_PROP_CREATETXG = common dso_local global i32 0, align 4
@.str.226 = private unnamed_addr constant [10 x i8] c"createtxg\00", align 1
@.str.227 = private unnamed_addr constant [10 x i8] c"CREATETXG\00", align 1
@ZFS_PROP_RECORDSIZE = common dso_local global i32 0, align 4
@.str.228 = private unnamed_addr constant [11 x i8] c"recordsize\00", align 1
@SPA_OLD_MAXBLOCKSIZE = common dso_local global i32 0, align 4
@.str.229 = private unnamed_addr constant [22 x i8] c"512 to 1M, power of 2\00", align 1
@.str.230 = private unnamed_addr constant [8 x i8] c"RECSIZE\00", align 1
@ZFS_PROP_REMAPTXG = common dso_local global i32 0, align 4
@.str.231 = private unnamed_addr constant [9 x i8] c"remaptxg\00", align 1
@PROP_TYPE_NUMBER = common dso_local global i32 0, align 4
@.str.232 = private unnamed_addr constant [9 x i8] c"REMAPTXG\00", align 1
@ZFS_PROP_NUMCLONES = common dso_local global i32 0, align 4
@.str.233 = private unnamed_addr constant [10 x i8] c"numclones\00", align 1
@.str.234 = private unnamed_addr constant [10 x i8] c"NUMCLONES\00", align 1
@ZFS_PROP_NAME = common dso_local global i32 0, align 4
@.str.235 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@PROP_TYPE_STRING = common dso_local global i32 0, align 4
@.str.236 = private unnamed_addr constant [5 x i8] c"NAME\00", align 1
@ZFS_PROP_ISCSIOPTIONS = common dso_local global i32 0, align 4
@.str.237 = private unnamed_addr constant [13 x i8] c"iscsioptions\00", align 1
@.str.238 = private unnamed_addr constant [13 x i8] c"ISCSIOPTIONS\00", align 1
@ZFS_PROP_STMF_SHAREINFO = common dso_local global i32 0, align 4
@.str.239 = private unnamed_addr constant [12 x i8] c"stmf_sbd_lu\00", align 1
@.str.240 = private unnamed_addr constant [12 x i8] c"STMF_SBD_LU\00", align 1
@ZFS_PROP_USERACCOUNTING = common dso_local global i32 0, align 4
@.str.241 = private unnamed_addr constant [15 x i8] c"useraccounting\00", align 1
@.str.242 = private unnamed_addr constant [15 x i8] c"USERACCOUNTING\00", align 1
@ZFS_PROP_UNIQUE = common dso_local global i32 0, align 4
@.str.243 = private unnamed_addr constant [7 x i8] c"unique\00", align 1
@.str.244 = private unnamed_addr constant [7 x i8] c"UNIQUE\00", align 1
@ZFS_PROP_OBJSETID = common dso_local global i32 0, align 4
@.str.245 = private unnamed_addr constant [9 x i8] c"objsetid\00", align 1
@.str.246 = private unnamed_addr constant [9 x i8] c"OBJSETID\00", align 1
@ZFS_PROP_INCONSISTENT = common dso_local global i32 0, align 4
@.str.247 = private unnamed_addr constant [13 x i8] c"inconsistent\00", align 1
@.str.248 = private unnamed_addr constant [13 x i8] c"INCONSISTENT\00", align 1
@ZFS_PROP_PREV_SNAP = common dso_local global i32 0, align 4
@.str.249 = private unnamed_addr constant [9 x i8] c"prevsnap\00", align 1
@.str.250 = private unnamed_addr constant [9 x i8] c"PREVSNAP\00", align 1
@ZFS_PROP_CREATION = common dso_local global i32 0, align 4
@.str.251 = private unnamed_addr constant [9 x i8] c"creation\00", align 1
@.str.252 = private unnamed_addr constant [7 x i8] c"<date>\00", align 1
@.str.253 = private unnamed_addr constant [9 x i8] c"CREATION\00", align 1
@B_FALSE = common dso_local global i32 0, align 4
@B_TRUE = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @zfs_prop_init() #0 {
  %1 = load i32, i32* @ZFS_PROP_REDUNDANT_METADATA, align 4
  %2 = load i32, i32* @PROP_INHERIT, align 4
  %3 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %4 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %5 = or i32 %3, %4
  %6 = call i32 @zprop_register_index(i32 %1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.67, i64 0, i64 0), i32 163, i32 %2, i32 %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.69, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zfs_prop_init.redundant_metadata_table, i64 0, i64 0))
  %7 = load i32, i32* @ZFS_PROP_SYNC, align 4
  %8 = load i32, i32* @PROP_INHERIT, align 4
  %9 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %10 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %11 = or i32 %9, %10
  %12 = call i32 @zprop_register_index(i32 %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.70, i64 0, i64 0), i32 157, i32 %8, i32 %11, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.72, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([4 x %struct.TYPE_3__], [4 x %struct.TYPE_3__]* @zfs_prop_init.sync_table, i64 0, i64 0))
  %13 = load i32, i32* @ZFS_PROP_CHECKSUM, align 4
  %14 = load i32, i32* @ZIO_CHECKSUM_DEFAULT, align 4
  %15 = load i32, i32* @PROP_INHERIT, align 4
  %16 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %17 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %18 = or i32 %16, %17
  %19 = call i32 @zprop_register_index(i32 %13, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.73, i64 0, i64 0), i32 %14, i32 %15, i32 %18, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([9 x %struct.TYPE_3__], [9 x %struct.TYPE_3__]* @zfs_prop_init.checksum_table, i64 0, i64 0))
  %20 = load i32, i32* @ZFS_PROP_DEDUP, align 4
  %21 = load i32, i32* @PROP_INHERIT, align 4
  %22 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %23 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %24 = or i32 %22, %23
  %25 = call i32 @zprop_register_index(i32 %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.76, i64 0, i64 0), i32 148, i32 %21, i32 %24, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([10 x %struct.TYPE_3__], [10 x %struct.TYPE_3__]* @zfs_prop_init.dedup_table, i64 0, i64 0))
  %26 = load i32, i32* @ZFS_PROP_COMPRESSION, align 4
  %27 = load i32, i32* @ZIO_COMPRESS_DEFAULT, align 4
  %28 = load i32, i32* @PROP_INHERIT, align 4
  %29 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %30 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %31 = or i32 %29, %30
  %32 = call i32 @zprop_register_index(i32 %26, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.79, i64 0, i64 0), i32 %27, i32 %28, i32 %31, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([16 x %struct.TYPE_3__], [16 x %struct.TYPE_3__]* @zfs_prop_init.compress_table, i64 0, i64 0))
  %33 = load i32, i32* @ZFS_PROP_SNAPDIR, align 4
  %34 = load i32, i32* @PROP_INHERIT, align 4
  %35 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %36 = call i32 @zprop_register_index(i32 %33, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.82, i64 0, i64 0), i32 161, i32 %34, i32 %35, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zfs_prop_init.snapdir_table, i64 0, i64 0))
  %37 = load i32, i32* @ZFS_PROP_ACLMODE, align 4
  %38 = load i32, i32* @PROP_INHERIT, align 4
  %39 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %40 = call i32 @zprop_register_index(i32 %37, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i64 0, i64 0), i32 187, i32 %38, i32 %39, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.86, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.87, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([5 x %struct.TYPE_3__], [5 x %struct.TYPE_3__]* @zfs_prop_init.acl_mode_table, i64 0, i64 0))
  %41 = load i32, i32* @ZFS_PROP_ACLINHERIT, align 4
  %42 = load i32, i32* @PROP_INHERIT, align 4
  %43 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %44 = call i32 @zprop_register_index(i32 %41, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.88, i64 0, i64 0), i32 182, i32 %42, i32 %43, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.90, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([7 x %struct.TYPE_3__], [7 x %struct.TYPE_3__]* @zfs_prop_init.acl_inherit_table, i64 0, i64 0))
  %45 = load i32, i32* @ZFS_PROP_COPIES, align 4
  %46 = load i32, i32* @PROP_INHERIT, align 4
  %47 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %48 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %49 = or i32 %47, %48
  %50 = call i32 @zprop_register_index(i32 %45, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.91, i64 0, i64 0), i32 1, i32 %46, i32 %49, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.92, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.93, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([4 x %struct.TYPE_3__], [4 x %struct.TYPE_3__]* @zfs_prop_init.copies_table, i64 0, i64 0))
  %51 = load i32, i32* @ZFS_PROP_PRIMARYCACHE, align 4
  %52 = load i32, i32* @PROP_INHERIT, align 4
  %53 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %54 = load i32, i32* @ZFS_TYPE_SNAPSHOT, align 4
  %55 = or i32 %53, %54
  %56 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %57 = or i32 %55, %56
  %58 = call i32 @zprop_register_index(i32 %51, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.94, i64 0, i64 0), i32 181, i32 %52, i32 %57, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.96, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([4 x %struct.TYPE_3__], [4 x %struct.TYPE_3__]* @zfs_prop_init.cache_table, i64 0, i64 0))
  %59 = load i32, i32* @ZFS_PROP_SECONDARYCACHE, align 4
  %60 = load i32, i32* @PROP_INHERIT, align 4
  %61 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %62 = load i32, i32* @ZFS_TYPE_SNAPSHOT, align 4
  %63 = or i32 %61, %62
  %64 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %65 = or i32 %63, %64
  %66 = call i32 @zprop_register_index(i32 %59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.97, i64 0, i64 0), i32 181, i32 %60, i32 %65, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.98, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([4 x %struct.TYPE_3__], [4 x %struct.TYPE_3__]* @zfs_prop_init.cache_table, i64 0, i64 0))
  %67 = load i32, i32* @ZFS_PROP_LOGBIAS, align 4
  %68 = load i32, i32* @PROP_INHERIT, align 4
  %69 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %70 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %71 = or i32 %69, %70
  %72 = call i32 @zprop_register_index(i32 %67, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.99, i64 0, i64 0), i32 165, i32 %68, i32 %71, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.100, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.101, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zfs_prop_init.logbias_table, i64 0, i64 0))
  %73 = load i32, i32* @ZFS_PROP_VOLMODE, align 4
  %74 = load i32, i32* @PROP_INHERIT, align 4
  %75 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %76 = load i32, i32* @ZFS_TYPE_SNAPSHOT, align 4
  %77 = or i32 %75, %76
  %78 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %79 = or i32 %77, %78
  %80 = call i32 @zprop_register_index(i32 %73, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.102, i64 0, i64 0), i32 156, i32 %74, i32 %79, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.104, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([5 x %struct.TYPE_3__], [5 x %struct.TYPE_3__]* @zfs_prop_init.volmode_table, i64 0, i64 0))
  %81 = load i32, i32* @ZFS_PROP_DNODESIZE, align 4
  %82 = load i32, i32* @PROP_INHERIT, align 4
  %83 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %84 = call i32 @zprop_register_index(i32 %81, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.105, i64 0, i64 0), i32 166, i32 %82, i32 %83, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.107, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([8 x %struct.TYPE_3__], [8 x %struct.TYPE_3__]* @zfs_prop_init.dnsize_table, i64 0, i64 0))
  %85 = load i32, i32* @ZFS_PROP_ATIME, align 4
  %86 = load i32, i32* @PROP_INHERIT, align 4
  %87 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %88 = call i32 @zprop_register_index(i32 %85, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.108, i64 0, i64 0), i32 1, i32 %86, i32 %87, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.110, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zfs_prop_init.boolean_table, i64 0, i64 0))
  %89 = load i32, i32* @ZFS_PROP_DEVICES, align 4
  %90 = load i32, i32* @PROP_INHERIT, align 4
  %91 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %92 = load i32, i32* @ZFS_TYPE_SNAPSHOT, align 4
  %93 = or i32 %91, %92
  %94 = call i32 @zprop_register_index(i32 %89, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.111, i64 0, i64 0), i32 1, i32 %90, i32 %93, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.112, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zfs_prop_init.boolean_table, i64 0, i64 0))
  %95 = load i32, i32* @ZFS_PROP_EXEC, align 4
  %96 = load i32, i32* @PROP_INHERIT, align 4
  %97 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %98 = load i32, i32* @ZFS_TYPE_SNAPSHOT, align 4
  %99 = or i32 %97, %98
  %100 = call i32 @zprop_register_index(i32 %95, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.113, i64 0, i64 0), i32 1, i32 %96, i32 %99, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.114, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zfs_prop_init.boolean_table, i64 0, i64 0))
  %101 = load i32, i32* @ZFS_PROP_SETUID, align 4
  %102 = load i32, i32* @PROP_INHERIT, align 4
  %103 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %104 = load i32, i32* @ZFS_TYPE_SNAPSHOT, align 4
  %105 = or i32 %103, %104
  %106 = call i32 @zprop_register_index(i32 %101, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.115, i64 0, i64 0), i32 1, i32 %102, i32 %105, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.116, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zfs_prop_init.boolean_table, i64 0, i64 0))
  %107 = load i32, i32* @ZFS_PROP_READONLY, align 4
  %108 = load i32, i32* @PROP_INHERIT, align 4
  %109 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %110 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %111 = or i32 %109, %110
  %112 = call i32 @zprop_register_index(i32 %107, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.117, i64 0, i64 0), i32 0, i32 %108, i32 %111, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.118, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zfs_prop_init.boolean_table, i64 0, i64 0))
  %113 = load i32, i32* @ZFS_PROP_ZONED, align 4
  %114 = load i32, i32* @PROP_INHERIT, align 4
  %115 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %116 = call i32 @zprop_register_index(i32 %113, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.119, i64 0, i64 0), i32 0, i32 %114, i32 %115, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.120, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zfs_prop_init.boolean_table, i64 0, i64 0))
  %117 = load i32, i32* @ZFS_PROP_XATTR, align 4
  %118 = load i32, i32* @PROP_INHERIT, align 4
  %119 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %120 = load i32, i32* @ZFS_TYPE_SNAPSHOT, align 4
  %121 = or i32 %119, %120
  %122 = call i32 @zprop_register_index(i32 %117, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.121, i64 0, i64 0), i32 1, i32 %118, i32 %121, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.122, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zfs_prop_init.boolean_table, i64 0, i64 0))
  %123 = load i32, i32* @ZFS_PROP_VSCAN, align 4
  %124 = load i32, i32* @PROP_INHERIT, align 4
  %125 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %126 = call i32 @zprop_register_index(i32 %123, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.123, i64 0, i64 0), i32 0, i32 %124, i32 %125, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.124, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zfs_prop_init.boolean_table, i64 0, i64 0))
  %127 = load i32, i32* @ZFS_PROP_NBMAND, align 4
  %128 = load i32, i32* @PROP_INHERIT, align 4
  %129 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %130 = load i32, i32* @ZFS_TYPE_SNAPSHOT, align 4
  %131 = or i32 %129, %130
  %132 = call i32 @zprop_register_index(i32 %127, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.125, i64 0, i64 0), i32 0, i32 %128, i32 %131, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.126, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zfs_prop_init.boolean_table, i64 0, i64 0))
  %133 = load i32, i32* @ZFS_PROP_VERSION, align 4
  %134 = load i32, i32* @PROP_DEFAULT, align 4
  %135 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %136 = load i32, i32* @ZFS_TYPE_SNAPSHOT, align 4
  %137 = or i32 %135, %136
  %138 = call i32 @zprop_register_index(i32 %133, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.127, i64 0, i64 0), i32 0, i32 %134, i32 %137, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.128, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.129, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([7 x %struct.TYPE_3__], [7 x %struct.TYPE_3__]* @zfs_prop_init.version_table, i64 0, i64 0))
  %139 = load i32, i32* @ZFS_PROP_CANMOUNT, align 4
  %140 = load i32, i32* @PROP_DEFAULT, align 4
  %141 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %142 = call i32 @zprop_register_index(i32 %139, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.130, i64 0, i64 0), i32 176, i32 %140, i32 %141, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.131, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.132, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([4 x %struct.TYPE_3__], [4 x %struct.TYPE_3__]* @zfs_prop_init.canmount_table, i64 0, i64 0))
  %143 = load i32, i32* @ZFS_PROP_MOUNTED, align 4
  %144 = load i32, i32* @PROP_READONLY, align 4
  %145 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %146 = call i32 @zprop_register_index(i32 %143, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.133, i64 0, i64 0), i32 0, i32 %144, i32 %145, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.135, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zfs_prop_init.boolean_table, i64 0, i64 0))
  %147 = load i32, i32* @ZFS_PROP_DEFER_DESTROY, align 4
  %148 = load i32, i32* @PROP_READONLY, align 4
  %149 = load i32, i32* @ZFS_TYPE_SNAPSHOT, align 4
  %150 = call i32 @zprop_register_index(i32 %147, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.136, i64 0, i64 0), i32 0, i32 %148, i32 %149, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.134, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.137, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zfs_prop_init.boolean_table, i64 0, i64 0))
  %151 = load i32, i32* @ZFS_PROP_NORMALIZE, align 4
  %152 = load i32, i32* @PROP_ONETIME, align 4
  %153 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %154 = load i32, i32* @ZFS_TYPE_SNAPSHOT, align 4
  %155 = or i32 %153, %154
  %156 = call i32 @zprop_register_index(i32 %151, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.138, i64 0, i64 0), i32 0, i32 %152, i32 %155, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.139, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.140, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([6 x %struct.TYPE_3__], [6 x %struct.TYPE_3__]* @zfs_prop_init.normalize_table, i64 0, i64 0))
  %157 = load i32, i32* @ZFS_PROP_CASE, align 4
  %158 = load i32, i32* @PROP_ONETIME, align 4
  %159 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %160 = load i32, i32* @ZFS_TYPE_SNAPSHOT, align 4
  %161 = or i32 %159, %160
  %162 = call i32 @zprop_register_index(i32 %157, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.141, i64 0, i64 0), i32 173, i32 %158, i32 %161, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.143, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([4 x %struct.TYPE_3__], [4 x %struct.TYPE_3__]* @zfs_prop_init.case_table, i64 0, i64 0))
  %163 = load i32, i32* @ZFS_PROP_UTF8ONLY, align 4
  %164 = load i32, i32* @PROP_ONETIME, align 4
  %165 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %166 = load i32, i32* @ZFS_TYPE_SNAPSHOT, align 4
  %167 = or i32 %165, %166
  %168 = call i32 @zprop_register_index(i32 %163, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.144, i64 0, i64 0), i32 0, i32 %164, i32 %167, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.145, i64 0, i64 0), %struct.TYPE_3__* getelementptr inbounds ([3 x %struct.TYPE_3__], [3 x %struct.TYPE_3__]* @zfs_prop_init.boolean_table, i64 0, i64 0))
  %169 = load i32, i32* @ZFS_PROP_ORIGIN, align 4
  %170 = load i32, i32* @PROP_READONLY, align 4
  %171 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %172 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %173 = or i32 %171, %172
  %174 = call i32 @zprop_register_string(i32 %169, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.146, i64 0, i64 0), i8* null, i32 %170, i32 %173, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.148, i64 0, i64 0))
  %175 = load i32, i32* @ZFS_PROP_CLONES, align 4
  %176 = load i32, i32* @PROP_READONLY, align 4
  %177 = load i32, i32* @ZFS_TYPE_SNAPSHOT, align 4
  %178 = call i32 @zprop_register_string(i32 %175, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.149, i64 0, i64 0), i8* null, i32 %176, i32 %177, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.151, i64 0, i64 0))
  %179 = load i32, i32* @ZFS_PROP_MOUNTPOINT, align 4
  %180 = load i32, i32* @PROP_INHERIT, align 4
  %181 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %182 = call i32 @zprop_register_string(i32 %179, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.152, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.153, i64 0, i64 0), i32 %180, i32 %181, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.154, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.155, i64 0, i64 0))
  %183 = load i32, i32* @ZFS_PROP_SHARENFS, align 4
  %184 = load i32, i32* @PROP_INHERIT, align 4
  %185 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %186 = call i32 @zprop_register_string(i32 %183, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.156, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %184, i32 %185, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.158, i64 0, i64 0))
  %187 = load i32, i32* @ZFS_PROP_TYPE, align 4
  %188 = load i32, i32* @PROP_READONLY, align 4
  %189 = load i32, i32* @ZFS_TYPE_DATASET, align 4
  %190 = load i32, i32* @ZFS_TYPE_BOOKMARK, align 4
  %191 = or i32 %189, %190
  %192 = call i32 @zprop_register_string(i32 %187, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.159, i64 0, i64 0), i8* null, i32 %188, i32 %191, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.160, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.161, i64 0, i64 0))
  %193 = load i32, i32* @ZFS_PROP_SHARESMB, align 4
  %194 = load i32, i32* @PROP_INHERIT, align 4
  %195 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %196 = call i32 @zprop_register_string(i32 %193, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.162, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i32 %194, i32 %195, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.163, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.164, i64 0, i64 0))
  %197 = load i32, i32* @ZFS_PROP_MLSLABEL, align 4
  %198 = load i8*, i8** @ZFS_MLSLABEL_DEFAULT, align 8
  %199 = load i32, i32* @PROP_INHERIT, align 4
  %200 = load i32, i32* @ZFS_TYPE_DATASET, align 4
  %201 = call i32 @zprop_register_string(i32 %197, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.165, i64 0, i64 0), i8* %198, i32 %199, i32 %200, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.166, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.167, i64 0, i64 0))
  %202 = load i32, i32* @ZFS_PROP_RECEIVE_RESUME_TOKEN, align 4
  %203 = load i32, i32* @PROP_READONLY, align 4
  %204 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %205 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %206 = or i32 %204, %205
  %207 = call i32 @zprop_register_string(i32 %202, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.168, i64 0, i64 0), i8* null, i32 %203, i32 %206, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.170, i64 0, i64 0))
  %208 = load i32, i32* @ZFS_PROP_USED, align 4
  %209 = load i32, i32* @PROP_READONLY, align 4
  %210 = load i32, i32* @ZFS_TYPE_DATASET, align 4
  %211 = call i32 @zprop_register_number(i32 %208, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.171, i64 0, i64 0), i32 0, i32 %209, i32 %210, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.173, i64 0, i64 0))
  %212 = load i32, i32* @ZFS_PROP_AVAILABLE, align 4
  %213 = load i32, i32* @PROP_READONLY, align 4
  %214 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %215 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %216 = or i32 %214, %215
  %217 = call i32 @zprop_register_number(i32 %212, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.174, i64 0, i64 0), i32 0, i32 %213, i32 %216, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.175, i64 0, i64 0))
  %218 = load i32, i32* @ZFS_PROP_REFERENCED, align 4
  %219 = load i32, i32* @PROP_READONLY, align 4
  %220 = load i32, i32* @ZFS_TYPE_DATASET, align 4
  %221 = call i32 @zprop_register_number(i32 %218, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.176, i64 0, i64 0), i32 0, i32 %219, i32 %220, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.177, i64 0, i64 0))
  %222 = load i32, i32* @ZFS_PROP_COMPRESSRATIO, align 4
  %223 = load i32, i32* @PROP_READONLY, align 4
  %224 = load i32, i32* @ZFS_TYPE_DATASET, align 4
  %225 = call i32 @zprop_register_number(i32 %222, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.178, i64 0, i64 0), i32 0, i32 %223, i32 %224, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.179, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.180, i64 0, i64 0))
  %226 = load i32, i32* @ZFS_PROP_REFRATIO, align 4
  %227 = load i32, i32* @PROP_READONLY, align 4
  %228 = load i32, i32* @ZFS_TYPE_DATASET, align 4
  %229 = call i32 @zprop_register_number(i32 %226, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.181, i64 0, i64 0), i32 0, i32 %227, i32 %228, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.179, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.182, i64 0, i64 0))
  %230 = load i32, i32* @ZFS_PROP_VOLBLOCKSIZE, align 4
  %231 = load i32, i32* @ZVOL_DEFAULT_BLOCKSIZE, align 4
  %232 = load i32, i32* @PROP_ONETIME, align 4
  %233 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %234 = call i32 @zprop_register_number(i32 %230, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.183, i64 0, i64 0), i32 %231, i32 %232, i32 %233, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.184, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.185, i64 0, i64 0))
  %235 = load i32, i32* @ZFS_PROP_USEDSNAP, align 4
  %236 = load i32, i32* @PROP_READONLY, align 4
  %237 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %238 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %239 = or i32 %237, %238
  %240 = call i32 @zprop_register_number(i32 %235, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.186, i64 0, i64 0), i32 0, i32 %236, i32 %239, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.187, i64 0, i64 0))
  %241 = load i32, i32* @ZFS_PROP_USEDDS, align 4
  %242 = load i32, i32* @PROP_READONLY, align 4
  %243 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %244 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %245 = or i32 %243, %244
  %246 = call i32 @zprop_register_number(i32 %241, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.188, i64 0, i64 0), i32 0, i32 %242, i32 %245, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.189, i64 0, i64 0))
  %247 = load i32, i32* @ZFS_PROP_USEDCHILD, align 4
  %248 = load i32, i32* @PROP_READONLY, align 4
  %249 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %250 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %251 = or i32 %249, %250
  %252 = call i32 @zprop_register_number(i32 %247, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.190, i64 0, i64 0), i32 0, i32 %248, i32 %251, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.191, i64 0, i64 0))
  %253 = load i32, i32* @ZFS_PROP_USEDREFRESERV, align 4
  %254 = load i32, i32* @PROP_READONLY, align 4
  %255 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %256 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %257 = or i32 %255, %256
  %258 = call i32 @zprop_register_number(i32 %253, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.192, i64 0, i64 0), i32 0, i32 %254, i32 %257, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.193, i64 0, i64 0))
  %259 = load i32, i32* @ZFS_PROP_USERREFS, align 4
  %260 = load i32, i32* @PROP_READONLY, align 4
  %261 = load i32, i32* @ZFS_TYPE_SNAPSHOT, align 4
  %262 = call i32 @zprop_register_number(i32 %259, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.194, i64 0, i64 0), i32 0, i32 %260, i32 %261, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.195, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.196, i64 0, i64 0))
  %263 = load i32, i32* @ZFS_PROP_WRITTEN, align 4
  %264 = load i32, i32* @PROP_READONLY, align 4
  %265 = load i32, i32* @ZFS_TYPE_DATASET, align 4
  %266 = call i32 @zprop_register_number(i32 %263, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.197, i64 0, i64 0), i32 0, i32 %264, i32 %265, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.198, i64 0, i64 0))
  %267 = load i32, i32* @ZFS_PROP_LOGICALUSED, align 4
  %268 = load i32, i32* @PROP_READONLY, align 4
  %269 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %270 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %271 = or i32 %269, %270
  %272 = call i32 @zprop_register_number(i32 %267, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.199, i64 0, i64 0), i32 0, i32 %268, i32 %271, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.200, i64 0, i64 0))
  %273 = load i32, i32* @ZFS_PROP_LOGICALREFERENCED, align 4
  %274 = load i32, i32* @PROP_READONLY, align 4
  %275 = load i32, i32* @ZFS_TYPE_DATASET, align 4
  %276 = call i32 @zprop_register_number(i32 %273, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.201, i64 0, i64 0), i32 0, i32 %274, i32 %275, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.202, i64 0, i64 0))
  %277 = load i32, i32* @ZFS_PROP_QUOTA, align 4
  %278 = load i32, i32* @PROP_DEFAULT, align 4
  %279 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %280 = call i32 @zprop_register_number(i32 %277, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.203, i64 0, i64 0), i32 0, i32 %278, i32 %279, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.204, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.205, i64 0, i64 0))
  %281 = load i32, i32* @ZFS_PROP_RESERVATION, align 4
  %282 = load i32, i32* @PROP_DEFAULT, align 4
  %283 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %284 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %285 = or i32 %283, %284
  %286 = call i32 @zprop_register_number(i32 %281, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.206, i64 0, i64 0), i32 0, i32 %282, i32 %285, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.204, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.207, i64 0, i64 0))
  %287 = load i32, i32* @ZFS_PROP_VOLSIZE, align 4
  %288 = load i32, i32* @PROP_DEFAULT, align 4
  %289 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %290 = call i32 @zprop_register_number(i32 %287, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.208, i64 0, i64 0), i32 0, i32 %288, i32 %289, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.209, i64 0, i64 0))
  %291 = load i32, i32* @ZFS_PROP_REFQUOTA, align 4
  %292 = load i32, i32* @PROP_DEFAULT, align 4
  %293 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %294 = call i32 @zprop_register_number(i32 %291, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.210, i64 0, i64 0), i32 0, i32 %292, i32 %293, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.204, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.211, i64 0, i64 0))
  %295 = load i32, i32* @ZFS_PROP_REFRESERVATION, align 4
  %296 = load i32, i32* @PROP_DEFAULT, align 4
  %297 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %298 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %299 = or i32 %297, %298
  %300 = call i32 @zprop_register_number(i32 %295, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.212, i64 0, i64 0), i32 0, i32 %296, i32 %299, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.204, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.213, i64 0, i64 0))
  %301 = load i32, i32* @ZFS_PROP_FILESYSTEM_LIMIT, align 4
  %302 = load i32, i32* @UINT64_MAX, align 4
  %303 = load i32, i32* @PROP_DEFAULT, align 4
  %304 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %305 = call i32 @zprop_register_number(i32 %301, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.214, i64 0, i64 0), i32 %302, i32 %303, i32 %304, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.215, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.216, i64 0, i64 0))
  %306 = load i32, i32* @ZFS_PROP_SNAPSHOT_LIMIT, align 4
  %307 = load i32, i32* @UINT64_MAX, align 4
  %308 = load i32, i32* @PROP_DEFAULT, align 4
  %309 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %310 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %311 = or i32 %309, %310
  %312 = call i32 @zprop_register_number(i32 %306, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.217, i64 0, i64 0), i32 %307, i32 %308, i32 %311, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.215, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.218, i64 0, i64 0))
  %313 = load i32, i32* @ZFS_PROP_FILESYSTEM_COUNT, align 4
  %314 = load i32, i32* @UINT64_MAX, align 4
  %315 = load i32, i32* @PROP_DEFAULT, align 4
  %316 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %317 = call i32 @zprop_register_number(i32 %313, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.219, i64 0, i64 0), i32 %314, i32 %315, i32 %316, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.195, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.220, i64 0, i64 0))
  %318 = load i32, i32* @ZFS_PROP_SNAPSHOT_COUNT, align 4
  %319 = load i32, i32* @UINT64_MAX, align 4
  %320 = load i32, i32* @PROP_DEFAULT, align 4
  %321 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %322 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %323 = or i32 %321, %322
  %324 = call i32 @zprop_register_number(i32 %318, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.221, i64 0, i64 0), i32 %319, i32 %320, i32 %323, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.195, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.222, i64 0, i64 0))
  %325 = load i32, i32* @ZFS_PROP_GUID, align 4
  %326 = load i32, i32* @PROP_READONLY, align 4
  %327 = load i32, i32* @ZFS_TYPE_DATASET, align 4
  %328 = load i32, i32* @ZFS_TYPE_BOOKMARK, align 4
  %329 = or i32 %327, %328
  %330 = call i32 @zprop_register_number(i32 %325, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.223, i64 0, i64 0), i32 0, i32 %326, i32 %329, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.224, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.225, i64 0, i64 0))
  %331 = load i32, i32* @ZFS_PROP_CREATETXG, align 4
  %332 = load i32, i32* @PROP_READONLY, align 4
  %333 = load i32, i32* @ZFS_TYPE_DATASET, align 4
  %334 = load i32, i32* @ZFS_TYPE_BOOKMARK, align 4
  %335 = or i32 %333, %334
  %336 = call i32 @zprop_register_number(i32 %331, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.226, i64 0, i64 0), i32 0, i32 %332, i32 %335, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.224, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.227, i64 0, i64 0))
  %337 = load i32, i32* @ZFS_PROP_RECORDSIZE, align 4
  %338 = load i32, i32* @SPA_OLD_MAXBLOCKSIZE, align 4
  %339 = load i32, i32* @PROP_INHERIT, align 4
  %340 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %341 = call i32 @zprop_register_number(i32 %337, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.228, i64 0, i64 0), i32 %338, i32 %339, i32 %340, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.229, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.230, i64 0, i64 0))
  %342 = load i32, i32* @ZFS_PROP_REMAPTXG, align 4
  %343 = load i32, i32* @PROP_TYPE_NUMBER, align 4
  %344 = load i32, i32* @PROP_READONLY, align 4
  %345 = load i32, i32* @ZFS_TYPE_DATASET, align 4
  %346 = call i32 @zprop_register_hidden(i32 %342, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.231, i64 0, i64 0), i32 %343, i32 %344, i32 %345, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.232, i64 0, i64 0))
  %347 = load i32, i32* @ZFS_PROP_NUMCLONES, align 4
  %348 = load i32, i32* @PROP_TYPE_NUMBER, align 4
  %349 = load i32, i32* @PROP_READONLY, align 4
  %350 = load i32, i32* @ZFS_TYPE_SNAPSHOT, align 4
  %351 = call i32 @zprop_register_hidden(i32 %347, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.233, i64 0, i64 0), i32 %348, i32 %349, i32 %350, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.234, i64 0, i64 0))
  %352 = load i32, i32* @ZFS_PROP_NAME, align 4
  %353 = load i32, i32* @PROP_TYPE_STRING, align 4
  %354 = load i32, i32* @PROP_READONLY, align 4
  %355 = load i32, i32* @ZFS_TYPE_DATASET, align 4
  %356 = load i32, i32* @ZFS_TYPE_BOOKMARK, align 4
  %357 = or i32 %355, %356
  %358 = call i32 @zprop_register_hidden(i32 %352, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.235, i64 0, i64 0), i32 %353, i32 %354, i32 %357, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.236, i64 0, i64 0))
  %359 = load i32, i32* @ZFS_PROP_ISCSIOPTIONS, align 4
  %360 = load i32, i32* @PROP_TYPE_STRING, align 4
  %361 = load i32, i32* @PROP_INHERIT, align 4
  %362 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %363 = call i32 @zprop_register_hidden(i32 %359, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.237, i64 0, i64 0), i32 %360, i32 %361, i32 %362, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.238, i64 0, i64 0))
  %364 = load i32, i32* @ZFS_PROP_STMF_SHAREINFO, align 4
  %365 = load i32, i32* @PROP_TYPE_STRING, align 4
  %366 = load i32, i32* @PROP_INHERIT, align 4
  %367 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %368 = call i32 @zprop_register_hidden(i32 %364, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.239, i64 0, i64 0), i32 %365, i32 %366, i32 %367, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.240, i64 0, i64 0))
  %369 = load i32, i32* @ZFS_PROP_USERACCOUNTING, align 4
  %370 = load i32, i32* @PROP_TYPE_NUMBER, align 4
  %371 = load i32, i32* @PROP_READONLY, align 4
  %372 = load i32, i32* @ZFS_TYPE_DATASET, align 4
  %373 = call i32 @zprop_register_hidden(i32 %369, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.241, i64 0, i64 0), i32 %370, i32 %371, i32 %372, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.242, i64 0, i64 0))
  %374 = load i32, i32* @ZFS_PROP_UNIQUE, align 4
  %375 = load i32, i32* @PROP_TYPE_NUMBER, align 4
  %376 = load i32, i32* @PROP_READONLY, align 4
  %377 = load i32, i32* @ZFS_TYPE_DATASET, align 4
  %378 = call i32 @zprop_register_hidden(i32 %374, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.243, i64 0, i64 0), i32 %375, i32 %376, i32 %377, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.244, i64 0, i64 0))
  %379 = load i32, i32* @ZFS_PROP_OBJSETID, align 4
  %380 = load i32, i32* @PROP_TYPE_NUMBER, align 4
  %381 = load i32, i32* @PROP_READONLY, align 4
  %382 = load i32, i32* @ZFS_TYPE_DATASET, align 4
  %383 = call i32 @zprop_register_hidden(i32 %379, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.245, i64 0, i64 0), i32 %380, i32 %381, i32 %382, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.246, i64 0, i64 0))
  %384 = load i32, i32* @ZFS_PROP_INCONSISTENT, align 4
  %385 = load i32, i32* @PROP_TYPE_NUMBER, align 4
  %386 = load i32, i32* @PROP_READONLY, align 4
  %387 = load i32, i32* @ZFS_TYPE_DATASET, align 4
  %388 = call i32 @zprop_register_hidden(i32 %384, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.247, i64 0, i64 0), i32 %385, i32 %386, i32 %387, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.248, i64 0, i64 0))
  %389 = load i32, i32* @ZFS_PROP_PREV_SNAP, align 4
  %390 = load i32, i32* @PROP_TYPE_STRING, align 4
  %391 = load i32, i32* @PROP_READONLY, align 4
  %392 = load i32, i32* @ZFS_TYPE_FILESYSTEM, align 4
  %393 = load i32, i32* @ZFS_TYPE_VOLUME, align 4
  %394 = or i32 %392, %393
  %395 = call i32 @zprop_register_hidden(i32 %389, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.249, i64 0, i64 0), i32 %390, i32 %391, i32 %394, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.250, i64 0, i64 0))
  %396 = load i32, i32* @ZFS_PROP_CREATION, align 4
  %397 = load i32, i32* @PROP_TYPE_NUMBER, align 4
  %398 = load i32, i32* @PROP_READONLY, align 4
  %399 = load i32, i32* @ZFS_TYPE_DATASET, align 4
  %400 = load i32, i32* @ZFS_TYPE_BOOKMARK, align 4
  %401 = or i32 %399, %400
  %402 = load i32, i32* @B_FALSE, align 4
  %403 = load i32, i32* @B_TRUE, align 4
  %404 = call i32 @zprop_register_impl(i32 %396, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.251, i64 0, i64 0), i32 %397, i32 0, i32* null, i32 %398, i32 %401, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.252, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.253, i64 0, i64 0), i32 %402, i32 %403, i32* null)
  ret void
}

declare dso_local i32 @zprop_register_index(i32, i8*, i32, i32, i32, i8*, i8*, %struct.TYPE_3__*) #1

declare dso_local i32 @zprop_register_string(i32, i8*, i8*, i32, i32, i8*, i8*) #1

declare dso_local i32 @zprop_register_number(i32, i8*, i32, i32, i32, i8*, i8*) #1

declare dso_local i32 @zprop_register_hidden(i32, i8*, i32, i32, i32, i8*) #1

declare dso_local i32 @zprop_register_impl(i32, i8*, i32, i32, i32*, i32, i32, i8*, i8*, i32, i32, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
