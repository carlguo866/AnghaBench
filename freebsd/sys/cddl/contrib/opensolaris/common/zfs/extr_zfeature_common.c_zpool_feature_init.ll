; ModuleID = '/home/carl/AnghaBench/freebsd/sys/cddl/contrib/opensolaris/common/zfs/extr_zfeature_common.c_zpool_feature_init.c'
source_filename = "/home/carl/AnghaBench/freebsd/sys/cddl/contrib/opensolaris/common/zfs/extr_zfeature_common.c_zpool_feature_init.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@SPA_FEATURE_ASYNC_DESTROY = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [26 x i8] c"com.delphix:async_destroy\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"async_destroy\00", align 1
@.str.2 = private unnamed_addr constant [36 x i8] c"Destroy filesystems asynchronously.\00", align 1
@ZFEATURE_FLAG_READONLY_COMPAT = common dso_local global i32 0, align 4
@SPA_FEATURE_EMPTY_BPOBJ = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [24 x i8] c"com.delphix:empty_bpobj\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"empty_bpobj\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"Snapshots use less space.\00", align 1
@SPA_FEATURE_LZ4_COMPRESS = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [25 x i8] c"org.illumos:lz4_compress\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"lz4_compress\00", align 1
@.str.8 = private unnamed_addr constant [35 x i8] c"LZ4 compression algorithm support.\00", align 1
@ZFEATURE_FLAG_ACTIVATE_ON_ENABLE = common dso_local global i32 0, align 4
@SPA_FEATURE_MULTI_VDEV_CRASH_DUMP = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [33 x i8] c"com.joyent:multi_vdev_crash_dump\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"multi_vdev_crash_dump\00", align 1
@.str.11 = private unnamed_addr constant [36 x i8] c"Crash dumps to multiple vdev pools.\00", align 1
@SPA_FEATURE_SPACEMAP_HISTOGRAM = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [31 x i8] c"com.delphix:spacemap_histogram\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"spacemap_histogram\00", align 1
@.str.14 = private unnamed_addr constant [37 x i8] c"Spacemaps maintain space histograms.\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"com.delphix:enabled_txg\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"enabled_txg\00", align 1
@.str.17 = private unnamed_addr constant [41 x i8] c"Record txg at which a feature is enabled\00", align 1
@zpool_feature_init.hole_birth_deps = internal constant [2 x i32] [i32 130, i32 128], align 4
@SPA_FEATURE_HOLE_BIRTH = common dso_local global i32 0, align 4
@.str.18 = private unnamed_addr constant [23 x i8] c"com.delphix:hole_birth\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"hole_birth\00", align 1
@.str.20 = private unnamed_addr constant [48 x i8] c"Retain hole birth txg for more precise zfs send\00", align 1
@ZFEATURE_FLAG_MOS = common dso_local global i32 0, align 4
@.str.21 = private unnamed_addr constant [31 x i8] c"com.delphix:extensible_dataset\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"extensible_dataset\00", align 1
@.str.23 = private unnamed_addr constant [56 x i8] c"Enhanced dataset functionality, used by other features.\00", align 1
@zpool_feature_init.bookmarks_deps = internal constant [2 x i32] [i32 129, i32 128], align 4
@SPA_FEATURE_BOOKMARKS = common dso_local global i32 0, align 4
@.str.24 = private unnamed_addr constant [22 x i8] c"com.delphix:bookmarks\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c"bookmarks\00", align 1
@.str.26 = private unnamed_addr constant [23 x i8] c"\22zfs bookmark\22 command\00", align 1
@zpool_feature_init.filesystem_limits_deps = internal constant [2 x i32] [i32 129, i32 128], align 4
@SPA_FEATURE_FS_SS_LIMIT = common dso_local global i32 0, align 4
@.str.27 = private unnamed_addr constant [29 x i8] c"com.joyent:filesystem_limits\00", align 1
@.str.28 = private unnamed_addr constant [18 x i8] c"filesystem_limits\00", align 1
@.str.29 = private unnamed_addr constant [32 x i8] c"Filesystem and snapshot limits.\00", align 1
@SPA_FEATURE_EMBEDDED_DATA = common dso_local global i32 0, align 4
@.str.30 = private unnamed_addr constant [26 x i8] c"com.delphix:embedded_data\00", align 1
@.str.31 = private unnamed_addr constant [14 x i8] c"embedded_data\00", align 1
@.str.32 = private unnamed_addr constant [53 x i8] c"Blocks which compress very well use even less space.\00", align 1
@SPA_FEATURE_POOL_CHECKPOINT = common dso_local global i32 0, align 4
@.str.33 = private unnamed_addr constant [29 x i8] c"com.delphix:zpool_checkpoint\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"zpool_checkpoint\00", align 1
@.str.35 = private unnamed_addr constant [55 x i8] c"Pool state can be checkpointed, allowing rewind later.\00", align 1
@SPA_FEATURE_SPACEMAP_V2 = common dso_local global i32 0, align 4
@.str.36 = private unnamed_addr constant [24 x i8] c"com.delphix:spacemap_v2\00", align 1
@.str.37 = private unnamed_addr constant [12 x i8] c"spacemap_v2\00", align 1
@.str.38 = private unnamed_addr constant [59 x i8] c"Space maps representing large segments are more efficient.\00", align 1
@zpool_feature_init.large_blocks_deps = internal constant [2 x i32] [i32 129, i32 128], align 4
@SPA_FEATURE_LARGE_BLOCKS = common dso_local global i32 0, align 4
@.str.39 = private unnamed_addr constant [26 x i8] c"org.open-zfs:large_blocks\00", align 1
@.str.40 = private unnamed_addr constant [13 x i8] c"large_blocks\00", align 1
@.str.41 = private unnamed_addr constant [38 x i8] c"Support for blocks larger than 128KB.\00", align 1
@ZFEATURE_FLAG_PER_DATASET = common dso_local global i32 0, align 4
@zpool_feature_init.large_dnode_deps = internal constant [2 x i32] [i32 129, i32 128], align 4
@SPA_FEATURE_LARGE_DNODE = common dso_local global i32 0, align 4
@.str.42 = private unnamed_addr constant [27 x i8] c"org.zfsonlinux:large_dnode\00", align 1
@.str.43 = private unnamed_addr constant [12 x i8] c"large_dnode\00", align 1
@.str.44 = private unnamed_addr constant [33 x i8] c"Variable on-disk size of dnodes.\00", align 1
@zpool_feature_init.sha512_deps = internal constant [2 x i32] [i32 129, i32 128], align 4
@SPA_FEATURE_SHA512 = common dso_local global i32 0, align 4
@.str.45 = private unnamed_addr constant [19 x i8] c"org.illumos:sha512\00", align 1
@.str.46 = private unnamed_addr constant [7 x i8] c"sha512\00", align 1
@.str.47 = private unnamed_addr constant [28 x i8] c"SHA-512/256 hash algorithm.\00", align 1
@zpool_feature_init.skein_deps = internal constant [2 x i32] [i32 129, i32 128], align 4
@SPA_FEATURE_SKEIN = common dso_local global i32 0, align 4
@.str.48 = private unnamed_addr constant [18 x i8] c"org.illumos:skein\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"skein\00", align 1
@.str.50 = private unnamed_addr constant [22 x i8] c"Skein hash algorithm.\00", align 1
@.str.51 = private unnamed_addr constant [27 x i8] c"com.delphix:device_removal\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"device_removal\00", align 1
@.str.53 = private unnamed_addr constant [60 x i8] c"Top-level vdevs can be removed, reducing logical pool size.\00", align 1
@zpool_feature_init.obsolete_counts_deps = internal constant [3 x i32] [i32 129, i32 131, i32 128], align 4
@SPA_FEATURE_OBSOLETE_COUNTS = common dso_local global i32 0, align 4
@.str.54 = private unnamed_addr constant [28 x i8] c"com.delphix:obsolete_counts\00", align 1
@.str.55 = private unnamed_addr constant [16 x i8] c"obsolete_counts\00", align 1
@.str.56 = private unnamed_addr constant [79 x i8] c"Reduce memory used by removed devices when their blocks are freed or remapped.\00", align 1
@SPA_FEATURE_EDONR = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @zpool_feature_init() #0 {
  %1 = load i32, i32* @SPA_FEATURE_ASYNC_DESTROY, align 4
  %2 = load i32, i32* @ZFEATURE_FLAG_READONLY_COMPAT, align 4
  %3 = call i32 @zfeature_register(i32 %1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.2, i64 0, i64 0), i32 %2, i32* null)
  %4 = load i32, i32* @SPA_FEATURE_EMPTY_BPOBJ, align 4
  %5 = load i32, i32* @ZFEATURE_FLAG_READONLY_COMPAT, align 4
  %6 = call i32 @zfeature_register(i32 %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i32 %5, i32* null)
  %7 = load i32, i32* @SPA_FEATURE_LZ4_COMPRESS, align 4
  %8 = load i32, i32* @ZFEATURE_FLAG_ACTIVATE_ON_ENABLE, align 4
  %9 = call i32 @zfeature_register(i32 %7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8, i64 0, i64 0), i32 %8, i32* null)
  %10 = load i32, i32* @SPA_FEATURE_MULTI_VDEV_CRASH_DUMP, align 4
  %11 = call i32 @zfeature_register(i32 %10, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.11, i64 0, i64 0), i32 0, i32* null)
  %12 = load i32, i32* @SPA_FEATURE_SPACEMAP_HISTOGRAM, align 4
  %13 = load i32, i32* @ZFEATURE_FLAG_READONLY_COMPAT, align 4
  %14 = call i32 @zfeature_register(i32 %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.14, i64 0, i64 0), i32 %13, i32* null)
  %15 = load i32, i32* @ZFEATURE_FLAG_READONLY_COMPAT, align 4
  %16 = call i32 @zfeature_register(i32 130, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.17, i64 0, i64 0), i32 %15, i32* null)
  %17 = load i32, i32* @SPA_FEATURE_HOLE_BIRTH, align 4
  %18 = load i32, i32* @ZFEATURE_FLAG_MOS, align 4
  %19 = load i32, i32* @ZFEATURE_FLAG_ACTIVATE_ON_ENABLE, align 4
  %20 = or i32 %18, %19
  %21 = call i32 @zfeature_register(i32 %17, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.20, i64 0, i64 0), i32 %20, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @zpool_feature_init.hole_birth_deps, i64 0, i64 0))
  %22 = call i32 @zfeature_register(i32 129, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.23, i64 0, i64 0), i32 0, i32* null)
  %23 = load i32, i32* @SPA_FEATURE_BOOKMARKS, align 4
  %24 = load i32, i32* @ZFEATURE_FLAG_READONLY_COMPAT, align 4
  %25 = call i32 @zfeature_register(i32 %23, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0), i32 %24, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @zpool_feature_init.bookmarks_deps, i64 0, i64 0))
  %26 = load i32, i32* @SPA_FEATURE_FS_SS_LIMIT, align 4
  %27 = load i32, i32* @ZFEATURE_FLAG_READONLY_COMPAT, align 4
  %28 = call i32 @zfeature_register(i32 %26, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.29, i64 0, i64 0), i32 %27, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @zpool_feature_init.filesystem_limits_deps, i64 0, i64 0))
  %29 = load i32, i32* @SPA_FEATURE_EMBEDDED_DATA, align 4
  %30 = load i32, i32* @ZFEATURE_FLAG_MOS, align 4
  %31 = load i32, i32* @ZFEATURE_FLAG_ACTIVATE_ON_ENABLE, align 4
  %32 = or i32 %30, %31
  %33 = call i32 @zfeature_register(i32 %29, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.32, i64 0, i64 0), i32 %32, i32* null)
  %34 = load i32, i32* @SPA_FEATURE_POOL_CHECKPOINT, align 4
  %35 = load i32, i32* @ZFEATURE_FLAG_READONLY_COMPAT, align 4
  %36 = call i32 @zfeature_register(i32 %34, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.35, i64 0, i64 0), i32 %35, i32* null)
  %37 = load i32, i32* @SPA_FEATURE_SPACEMAP_V2, align 4
  %38 = load i32, i32* @ZFEATURE_FLAG_READONLY_COMPAT, align 4
  %39 = load i32, i32* @ZFEATURE_FLAG_ACTIVATE_ON_ENABLE, align 4
  %40 = or i32 %38, %39
  %41 = call i32 @zfeature_register(i32 %37, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.38, i64 0, i64 0), i32 %40, i32* null)
  %42 = load i32, i32* @SPA_FEATURE_LARGE_BLOCKS, align 4
  %43 = load i32, i32* @ZFEATURE_FLAG_PER_DATASET, align 4
  %44 = call i32 @zfeature_register(i32 %42, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0), i32 %43, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @zpool_feature_init.large_blocks_deps, i64 0, i64 0))
  %45 = load i32, i32* @SPA_FEATURE_LARGE_DNODE, align 4
  %46 = load i32, i32* @ZFEATURE_FLAG_PER_DATASET, align 4
  %47 = call i32 @zfeature_register(i32 %45, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.44, i64 0, i64 0), i32 %46, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @zpool_feature_init.large_dnode_deps, i64 0, i64 0))
  %48 = load i32, i32* @SPA_FEATURE_SHA512, align 4
  %49 = load i32, i32* @ZFEATURE_FLAG_PER_DATASET, align 4
  %50 = call i32 @zfeature_register(i32 %48, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.47, i64 0, i64 0), i32 %49, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @zpool_feature_init.sha512_deps, i64 0, i64 0))
  %51 = load i32, i32* @SPA_FEATURE_SKEIN, align 4
  %52 = load i32, i32* @ZFEATURE_FLAG_PER_DATASET, align 4
  %53 = call i32 @zfeature_register(i32 %51, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.50, i64 0, i64 0), i32 %52, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @zpool_feature_init.skein_deps, i64 0, i64 0))
  %54 = load i32, i32* @ZFEATURE_FLAG_MOS, align 4
  %55 = call i32 @zfeature_register(i32 131, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.53, i64 0, i64 0), i32 %54, i32* null)
  %56 = load i32, i32* @SPA_FEATURE_OBSOLETE_COUNTS, align 4
  %57 = load i32, i32* @ZFEATURE_FLAG_READONLY_COMPAT, align 4
  %58 = call i32 @zfeature_register(i32 %56, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.56, i64 0, i64 0), i32 %57, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @zpool_feature_init.obsolete_counts_deps, i64 0, i64 0))
  ret void
}

declare dso_local i32 @zfeature_register(i32, i8*, i8*, i8*, i32, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
