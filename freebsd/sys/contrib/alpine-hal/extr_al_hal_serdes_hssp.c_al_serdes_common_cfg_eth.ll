; ModuleID = '/home/carl/AnghaBench/freebsd/sys/contrib/alpine-hal/extr_al_hal_serdes_hssp.c_al_serdes_common_cfg_eth.c'
source_filename = "/home/carl/AnghaBench/freebsd/sys/contrib/alpine-hal/extr_al_hal_serdes_hssp.c_al_serdes_common_cfg_eth.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.al_serdes_grp_obj = type { i32 }

@AL_SRDS_REG_PAGE_4_COMMON = common dso_local global i32 0, align 4
@AL_SRDS_REG_TYPE_PMA = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_LOOKUP_CODE_EN_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_LOOKUP_CODE_EN_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_LOOKUP_CODE_EN_SHIFT = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_LOOKUP_LASTCODE_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_LOOKUP_LASTCODE_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_LOOKUP_LASTCODE_SHIFT = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_COARSE_RUN1_MASK_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_COARSE_RUN1_MASK_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_COARSE_RUN1_MASK_SHIFT = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_COARSE_RUN2_MASK_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_COARSE_RUN2_MASK_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_COARSE_RUN2_MASK_SHIFT = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_COARSE_STEP_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_COARSE_STEP_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_COARSE_STEP_SHIFT = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_COARSE_ITER_NUM_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_COARSE_ITER_NUM_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_COARSE_ITER_NUM_SHIFT = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_FINE_RUN1_MASK_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_FINE_RUN1_MASK_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_FINE_RUN1_MASK_SHIFT = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_FINE_RUN2_MASK_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_FINE_RUN2_MASK_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_FINE_RUN2_MASK_SHIFT = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_FINE_STEP_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_FINE_STEP_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_FINE_STEP_SHIFT = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_FINE_ITER_NUM_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_FINE_ITER_NUM_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXEQ_FINE_ITER_NUM_SHIFT = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_BERTHRESHOLD1_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_BERTHRESHOLD1_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_BERTHRESHOLD1_SHIFT = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_BERTHRESHOLD2_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_BERTHRESHOLD2_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_BERTHRESHOLD2_SHIFT = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_XVALCOARSE_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_XVALCOARSE_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_XVALCOARSE_SHIFT = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_XVALFINE_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_XVALFINE_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_XVALFINE_SHIFT = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_YVALCOARSE_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_YVALCOARSE_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_YVALCOARSE_SHIFT = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_YVALFINE_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_YVALFINE_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_RXCALEYEDIAGFSM_YVALFINE_SHIFT = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_EYE_DIAG_SAMPLE_CNT_MSB_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_EYE_DIAG_SAMPLE_CNT_MSB_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_EYE_DIAG_SAMPLE_CNT_MSB_SHIFT = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_EYE_DIAG_SAMPLE_CNT_LSB_REG_NUM = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_EYE_DIAG_SAMPLE_CNT_LSB_MASK = common dso_local global i32 0, align 4
@SERDES_IREG_FLD_EYE_DIAG_SAMPLE_CNT_LSB_SHIFT = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.al_serdes_grp_obj*)* @al_serdes_common_cfg_eth to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @al_serdes_common_cfg_eth(%struct.al_serdes_grp_obj* %0) #0 {
  %2 = alloca %struct.al_serdes_grp_obj*, align 8
  store %struct.al_serdes_grp_obj* %0, %struct.al_serdes_grp_obj** %2, align 8
  %3 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %4 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %5 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %6 = load i32, i32* @SERDES_IREG_FLD_RXEQ_LOOKUP_CODE_EN_REG_NUM, align 4
  %7 = load i32, i32* @SERDES_IREG_FLD_RXEQ_LOOKUP_CODE_EN_MASK, align 4
  %8 = load i32, i32* @SERDES_IREG_FLD_RXEQ_LOOKUP_CODE_EN_SHIFT, align 4
  %9 = shl i32 1, %8
  %10 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %3, i32 %4, i32 %5, i32 %6, i32 %7, i32 %9)
  %11 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %12 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %13 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %14 = load i32, i32* @SERDES_IREG_FLD_RXEQ_LOOKUP_LASTCODE_REG_NUM, align 4
  %15 = load i32, i32* @SERDES_IREG_FLD_RXEQ_LOOKUP_LASTCODE_MASK, align 4
  %16 = load i32, i32* @SERDES_IREG_FLD_RXEQ_LOOKUP_LASTCODE_SHIFT, align 4
  %17 = shl i32 0, %16
  %18 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %11, i32 %12, i32 %13, i32 %14, i32 %15, i32 %17)
  %19 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %20 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %21 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %22 = load i32, i32* @SERDES_IREG_FLD_RXEQ_COARSE_RUN1_MASK_REG_NUM, align 4
  %23 = load i32, i32* @SERDES_IREG_FLD_RXEQ_COARSE_RUN1_MASK_MASK, align 4
  %24 = load i32, i32* @SERDES_IREG_FLD_RXEQ_COARSE_RUN1_MASK_SHIFT, align 4
  %25 = shl i32 2, %24
  %26 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %19, i32 %20, i32 %21, i32 %22, i32 %23, i32 %25)
  %27 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %28 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %29 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %30 = load i32, i32* @SERDES_IREG_FLD_RXEQ_COARSE_RUN2_MASK_REG_NUM, align 4
  %31 = load i32, i32* @SERDES_IREG_FLD_RXEQ_COARSE_RUN2_MASK_MASK, align 4
  %32 = load i32, i32* @SERDES_IREG_FLD_RXEQ_COARSE_RUN2_MASK_SHIFT, align 4
  %33 = shl i32 0, %32
  %34 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %27, i32 %28, i32 %29, i32 %30, i32 %31, i32 %33)
  %35 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %36 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %37 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %38 = load i32, i32* @SERDES_IREG_FLD_RXEQ_COARSE_STEP_REG_NUM, align 4
  %39 = load i32, i32* @SERDES_IREG_FLD_RXEQ_COARSE_STEP_MASK, align 4
  %40 = load i32, i32* @SERDES_IREG_FLD_RXEQ_COARSE_STEP_SHIFT, align 4
  %41 = shl i32 1, %40
  %42 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %35, i32 %36, i32 %37, i32 %38, i32 %39, i32 %41)
  %43 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %44 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %45 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %46 = load i32, i32* @SERDES_IREG_FLD_RXEQ_COARSE_ITER_NUM_REG_NUM, align 4
  %47 = load i32, i32* @SERDES_IREG_FLD_RXEQ_COARSE_ITER_NUM_MASK, align 4
  %48 = load i32, i32* @SERDES_IREG_FLD_RXEQ_COARSE_ITER_NUM_SHIFT, align 4
  %49 = shl i32 1, %48
  %50 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %43, i32 %44, i32 %45, i32 %46, i32 %47, i32 %49)
  %51 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %52 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %53 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %54 = load i32, i32* @SERDES_IREG_FLD_RXEQ_FINE_RUN1_MASK_REG_NUM, align 4
  %55 = load i32, i32* @SERDES_IREG_FLD_RXEQ_FINE_RUN1_MASK_MASK, align 4
  %56 = load i32, i32* @SERDES_IREG_FLD_RXEQ_FINE_RUN1_MASK_SHIFT, align 4
  %57 = shl i32 240, %56
  %58 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %51, i32 %52, i32 %53, i32 %54, i32 %55, i32 %57)
  %59 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %60 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %61 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %62 = load i32, i32* @SERDES_IREG_FLD_RXEQ_FINE_RUN2_MASK_REG_NUM, align 4
  %63 = load i32, i32* @SERDES_IREG_FLD_RXEQ_FINE_RUN2_MASK_MASK, align 4
  %64 = load i32, i32* @SERDES_IREG_FLD_RXEQ_FINE_RUN2_MASK_SHIFT, align 4
  %65 = shl i32 0, %64
  %66 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %59, i32 %60, i32 %61, i32 %62, i32 %63, i32 %65)
  %67 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %68 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %69 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %70 = load i32, i32* @SERDES_IREG_FLD_RXEQ_FINE_STEP_REG_NUM, align 4
  %71 = load i32, i32* @SERDES_IREG_FLD_RXEQ_FINE_STEP_MASK, align 4
  %72 = load i32, i32* @SERDES_IREG_FLD_RXEQ_FINE_STEP_SHIFT, align 4
  %73 = shl i32 1, %72
  %74 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %67, i32 %68, i32 %69, i32 %70, i32 %71, i32 %73)
  %75 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %76 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %77 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %78 = load i32, i32* @SERDES_IREG_FLD_RXEQ_FINE_ITER_NUM_REG_NUM, align 4
  %79 = load i32, i32* @SERDES_IREG_FLD_RXEQ_FINE_ITER_NUM_MASK, align 4
  %80 = load i32, i32* @SERDES_IREG_FLD_RXEQ_FINE_ITER_NUM_SHIFT, align 4
  %81 = shl i32 8, %80
  %82 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %75, i32 %76, i32 %77, i32 %78, i32 %79, i32 %81)
  %83 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %84 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %85 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %86 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_BERTHRESHOLD1_REG_NUM, align 4
  %87 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_BERTHRESHOLD1_MASK, align 4
  %88 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_BERTHRESHOLD1_SHIFT, align 4
  %89 = shl i32 0, %88
  %90 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %83, i32 %84, i32 %85, i32 %86, i32 %87, i32 %89)
  %91 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %92 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %93 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %94 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_BERTHRESHOLD2_REG_NUM, align 4
  %95 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_BERTHRESHOLD2_MASK, align 4
  %96 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_BERTHRESHOLD2_SHIFT, align 4
  %97 = shl i32 100, %96
  %98 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %91, i32 %92, i32 %93, i32 %94, i32 %95, i32 %97)
  %99 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %100 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %101 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %102 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_XVALCOARSE_REG_NUM, align 4
  %103 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_XVALCOARSE_MASK, align 4
  %104 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_XVALCOARSE_SHIFT, align 4
  %105 = shl i32 3, %104
  %106 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %99, i32 %100, i32 %101, i32 %102, i32 %103, i32 %105)
  %107 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %108 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %109 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %110 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_XVALFINE_REG_NUM, align 4
  %111 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_XVALFINE_MASK, align 4
  %112 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_XVALFINE_SHIFT, align 4
  %113 = shl i32 1, %112
  %114 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %107, i32 %108, i32 %109, i32 %110, i32 %111, i32 %113)
  %115 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %116 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %117 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %118 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_YVALCOARSE_REG_NUM, align 4
  %119 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_YVALCOARSE_MASK, align 4
  %120 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_YVALCOARSE_SHIFT, align 4
  %121 = shl i32 3, %120
  %122 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %115, i32 %116, i32 %117, i32 %118, i32 %119, i32 %121)
  %123 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %124 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %125 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %126 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_YVALFINE_REG_NUM, align 4
  %127 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_YVALFINE_MASK, align 4
  %128 = load i32, i32* @SERDES_IREG_FLD_RXCALEYEDIAGFSM_YVALFINE_SHIFT, align 4
  %129 = shl i32 1, %128
  %130 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %123, i32 %124, i32 %125, i32 %126, i32 %127, i32 %129)
  %131 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %132 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %133 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %134 = load i32, i32* @SERDES_IREG_FLD_EYE_DIAG_SAMPLE_CNT_MSB_REG_NUM, align 4
  %135 = load i32, i32* @SERDES_IREG_FLD_EYE_DIAG_SAMPLE_CNT_MSB_MASK, align 4
  %136 = load i32, i32* @SERDES_IREG_FLD_EYE_DIAG_SAMPLE_CNT_MSB_SHIFT, align 4
  %137 = shl i32 12, %136
  %138 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %131, i32 %132, i32 %133, i32 %134, i32 %135, i32 %137)
  %139 = load %struct.al_serdes_grp_obj*, %struct.al_serdes_grp_obj** %2, align 8
  %140 = load i32, i32* @AL_SRDS_REG_PAGE_4_COMMON, align 4
  %141 = load i32, i32* @AL_SRDS_REG_TYPE_PMA, align 4
  %142 = load i32, i32* @SERDES_IREG_FLD_EYE_DIAG_SAMPLE_CNT_LSB_REG_NUM, align 4
  %143 = load i32, i32* @SERDES_IREG_FLD_EYE_DIAG_SAMPLE_CNT_LSB_MASK, align 4
  %144 = load i32, i32* @SERDES_IREG_FLD_EYE_DIAG_SAMPLE_CNT_LSB_SHIFT, align 4
  %145 = shl i32 204, %144
  %146 = call i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj* %139, i32 %140, i32 %141, i32 %142, i32 %143, i32 %145)
  ret void
}

declare dso_local i32 @al_serdes_grp_reg_masked_write(%struct.al_serdes_grp_obj*, i32, i32, i32, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
