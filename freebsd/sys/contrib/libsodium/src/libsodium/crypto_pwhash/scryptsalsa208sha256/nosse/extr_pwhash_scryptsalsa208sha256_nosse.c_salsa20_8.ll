; ModuleID = '/home/carl/AnghaBench/freebsd/sys/contrib/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/extr_pwhash_scryptsalsa208sha256_nosse.c_salsa20_8.c'
source_filename = "/home/carl/AnghaBench/freebsd/sys/contrib/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/extr_pwhash_scryptsalsa208sha256_nosse.c_salsa20_8.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { i32* }

@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i32*)* @salsa20_8 to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @salsa20_8(i32* %0) #0 {
  %2 = alloca i32*, align 8
  %3 = alloca %struct.TYPE_4__, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  store i32* %0, i32** %2, align 8
  %6 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %3, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  store i32* %7, i32** %4, align 8
  %8 = load i32*, i32** %2, align 8
  %9 = bitcast i32* %8 to %struct.TYPE_4__*
  %10 = call i32 @blkcpy_64(%struct.TYPE_4__* %3, %struct.TYPE_4__* %9)
  store i64 0, i64* %5, align 8
  br label %11

11:                                               ; preds = %687, %1
  %12 = load i64, i64* %5, align 8
  %13 = icmp ult i64 %12, 8
  br i1 %13, label %14, label %690

14:                                               ; preds = %11
  %15 = load i32*, i32** %4, align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 0
  %17 = load i32, i32* %16, align 4
  %18 = load i32*, i32** %4, align 8
  %19 = getelementptr inbounds i32, i32* %18, i64 12
  %20 = load i32, i32* %19, align 4
  %21 = add nsw i32 %17, %20
  %22 = shl i32 %21, 7
  %23 = load i32*, i32** %4, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 0
  %25 = load i32, i32* %24, align 4
  %26 = load i32*, i32** %4, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 12
  %28 = load i32, i32* %27, align 4
  %29 = add nsw i32 %25, %28
  %30 = ashr i32 %29, 25
  %31 = or i32 %22, %30
  %32 = load i32*, i32** %4, align 8
  %33 = getelementptr inbounds i32, i32* %32, i64 4
  %34 = load i32, i32* %33, align 4
  %35 = xor i32 %34, %31
  store i32 %35, i32* %33, align 4
  %36 = load i32*, i32** %4, align 8
  %37 = getelementptr inbounds i32, i32* %36, i64 4
  %38 = load i32, i32* %37, align 4
  %39 = load i32*, i32** %4, align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 0
  %41 = load i32, i32* %40, align 4
  %42 = add nsw i32 %38, %41
  %43 = shl i32 %42, 9
  %44 = load i32*, i32** %4, align 8
  %45 = getelementptr inbounds i32, i32* %44, i64 4
  %46 = load i32, i32* %45, align 4
  %47 = load i32*, i32** %4, align 8
  %48 = getelementptr inbounds i32, i32* %47, i64 0
  %49 = load i32, i32* %48, align 4
  %50 = add nsw i32 %46, %49
  %51 = ashr i32 %50, 23
  %52 = or i32 %43, %51
  %53 = load i32*, i32** %4, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 8
  %55 = load i32, i32* %54, align 4
  %56 = xor i32 %55, %52
  store i32 %56, i32* %54, align 4
  %57 = load i32*, i32** %4, align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 8
  %59 = load i32, i32* %58, align 4
  %60 = load i32*, i32** %4, align 8
  %61 = getelementptr inbounds i32, i32* %60, i64 4
  %62 = load i32, i32* %61, align 4
  %63 = add nsw i32 %59, %62
  %64 = shl i32 %63, 13
  %65 = load i32*, i32** %4, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 8
  %67 = load i32, i32* %66, align 4
  %68 = load i32*, i32** %4, align 8
  %69 = getelementptr inbounds i32, i32* %68, i64 4
  %70 = load i32, i32* %69, align 4
  %71 = add nsw i32 %67, %70
  %72 = ashr i32 %71, 19
  %73 = or i32 %64, %72
  %74 = load i32*, i32** %4, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 12
  %76 = load i32, i32* %75, align 4
  %77 = xor i32 %76, %73
  store i32 %77, i32* %75, align 4
  %78 = load i32*, i32** %4, align 8
  %79 = getelementptr inbounds i32, i32* %78, i64 12
  %80 = load i32, i32* %79, align 4
  %81 = load i32*, i32** %4, align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 8
  %83 = load i32, i32* %82, align 4
  %84 = add nsw i32 %80, %83
  %85 = shl i32 %84, 18
  %86 = load i32*, i32** %4, align 8
  %87 = getelementptr inbounds i32, i32* %86, i64 12
  %88 = load i32, i32* %87, align 4
  %89 = load i32*, i32** %4, align 8
  %90 = getelementptr inbounds i32, i32* %89, i64 8
  %91 = load i32, i32* %90, align 4
  %92 = add nsw i32 %88, %91
  %93 = ashr i32 %92, 14
  %94 = or i32 %85, %93
  %95 = load i32*, i32** %4, align 8
  %96 = getelementptr inbounds i32, i32* %95, i64 0
  %97 = load i32, i32* %96, align 4
  %98 = xor i32 %97, %94
  store i32 %98, i32* %96, align 4
  %99 = load i32*, i32** %4, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 5
  %101 = load i32, i32* %100, align 4
  %102 = load i32*, i32** %4, align 8
  %103 = getelementptr inbounds i32, i32* %102, i64 1
  %104 = load i32, i32* %103, align 4
  %105 = add nsw i32 %101, %104
  %106 = shl i32 %105, 7
  %107 = load i32*, i32** %4, align 8
  %108 = getelementptr inbounds i32, i32* %107, i64 5
  %109 = load i32, i32* %108, align 4
  %110 = load i32*, i32** %4, align 8
  %111 = getelementptr inbounds i32, i32* %110, i64 1
  %112 = load i32, i32* %111, align 4
  %113 = add nsw i32 %109, %112
  %114 = ashr i32 %113, 25
  %115 = or i32 %106, %114
  %116 = load i32*, i32** %4, align 8
  %117 = getelementptr inbounds i32, i32* %116, i64 9
  %118 = load i32, i32* %117, align 4
  %119 = xor i32 %118, %115
  store i32 %119, i32* %117, align 4
  %120 = load i32*, i32** %4, align 8
  %121 = getelementptr inbounds i32, i32* %120, i64 9
  %122 = load i32, i32* %121, align 4
  %123 = load i32*, i32** %4, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 5
  %125 = load i32, i32* %124, align 4
  %126 = add nsw i32 %122, %125
  %127 = shl i32 %126, 9
  %128 = load i32*, i32** %4, align 8
  %129 = getelementptr inbounds i32, i32* %128, i64 9
  %130 = load i32, i32* %129, align 4
  %131 = load i32*, i32** %4, align 8
  %132 = getelementptr inbounds i32, i32* %131, i64 5
  %133 = load i32, i32* %132, align 4
  %134 = add nsw i32 %130, %133
  %135 = ashr i32 %134, 23
  %136 = or i32 %127, %135
  %137 = load i32*, i32** %4, align 8
  %138 = getelementptr inbounds i32, i32* %137, i64 13
  %139 = load i32, i32* %138, align 4
  %140 = xor i32 %139, %136
  store i32 %140, i32* %138, align 4
  %141 = load i32*, i32** %4, align 8
  %142 = getelementptr inbounds i32, i32* %141, i64 13
  %143 = load i32, i32* %142, align 4
  %144 = load i32*, i32** %4, align 8
  %145 = getelementptr inbounds i32, i32* %144, i64 9
  %146 = load i32, i32* %145, align 4
  %147 = add nsw i32 %143, %146
  %148 = shl i32 %147, 13
  %149 = load i32*, i32** %4, align 8
  %150 = getelementptr inbounds i32, i32* %149, i64 13
  %151 = load i32, i32* %150, align 4
  %152 = load i32*, i32** %4, align 8
  %153 = getelementptr inbounds i32, i32* %152, i64 9
  %154 = load i32, i32* %153, align 4
  %155 = add nsw i32 %151, %154
  %156 = ashr i32 %155, 19
  %157 = or i32 %148, %156
  %158 = load i32*, i32** %4, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 1
  %160 = load i32, i32* %159, align 4
  %161 = xor i32 %160, %157
  store i32 %161, i32* %159, align 4
  %162 = load i32*, i32** %4, align 8
  %163 = getelementptr inbounds i32, i32* %162, i64 1
  %164 = load i32, i32* %163, align 4
  %165 = load i32*, i32** %4, align 8
  %166 = getelementptr inbounds i32, i32* %165, i64 13
  %167 = load i32, i32* %166, align 4
  %168 = add nsw i32 %164, %167
  %169 = shl i32 %168, 18
  %170 = load i32*, i32** %4, align 8
  %171 = getelementptr inbounds i32, i32* %170, i64 1
  %172 = load i32, i32* %171, align 4
  %173 = load i32*, i32** %4, align 8
  %174 = getelementptr inbounds i32, i32* %173, i64 13
  %175 = load i32, i32* %174, align 4
  %176 = add nsw i32 %172, %175
  %177 = ashr i32 %176, 14
  %178 = or i32 %169, %177
  %179 = load i32*, i32** %4, align 8
  %180 = getelementptr inbounds i32, i32* %179, i64 5
  %181 = load i32, i32* %180, align 4
  %182 = xor i32 %181, %178
  store i32 %182, i32* %180, align 4
  %183 = load i32*, i32** %4, align 8
  %184 = getelementptr inbounds i32, i32* %183, i64 10
  %185 = load i32, i32* %184, align 4
  %186 = load i32*, i32** %4, align 8
  %187 = getelementptr inbounds i32, i32* %186, i64 6
  %188 = load i32, i32* %187, align 4
  %189 = add nsw i32 %185, %188
  %190 = shl i32 %189, 7
  %191 = load i32*, i32** %4, align 8
  %192 = getelementptr inbounds i32, i32* %191, i64 10
  %193 = load i32, i32* %192, align 4
  %194 = load i32*, i32** %4, align 8
  %195 = getelementptr inbounds i32, i32* %194, i64 6
  %196 = load i32, i32* %195, align 4
  %197 = add nsw i32 %193, %196
  %198 = ashr i32 %197, 25
  %199 = or i32 %190, %198
  %200 = load i32*, i32** %4, align 8
  %201 = getelementptr inbounds i32, i32* %200, i64 14
  %202 = load i32, i32* %201, align 4
  %203 = xor i32 %202, %199
  store i32 %203, i32* %201, align 4
  %204 = load i32*, i32** %4, align 8
  %205 = getelementptr inbounds i32, i32* %204, i64 14
  %206 = load i32, i32* %205, align 4
  %207 = load i32*, i32** %4, align 8
  %208 = getelementptr inbounds i32, i32* %207, i64 10
  %209 = load i32, i32* %208, align 4
  %210 = add nsw i32 %206, %209
  %211 = shl i32 %210, 9
  %212 = load i32*, i32** %4, align 8
  %213 = getelementptr inbounds i32, i32* %212, i64 14
  %214 = load i32, i32* %213, align 4
  %215 = load i32*, i32** %4, align 8
  %216 = getelementptr inbounds i32, i32* %215, i64 10
  %217 = load i32, i32* %216, align 4
  %218 = add nsw i32 %214, %217
  %219 = ashr i32 %218, 23
  %220 = or i32 %211, %219
  %221 = load i32*, i32** %4, align 8
  %222 = getelementptr inbounds i32, i32* %221, i64 2
  %223 = load i32, i32* %222, align 4
  %224 = xor i32 %223, %220
  store i32 %224, i32* %222, align 4
  %225 = load i32*, i32** %4, align 8
  %226 = getelementptr inbounds i32, i32* %225, i64 2
  %227 = load i32, i32* %226, align 4
  %228 = load i32*, i32** %4, align 8
  %229 = getelementptr inbounds i32, i32* %228, i64 14
  %230 = load i32, i32* %229, align 4
  %231 = add nsw i32 %227, %230
  %232 = shl i32 %231, 13
  %233 = load i32*, i32** %4, align 8
  %234 = getelementptr inbounds i32, i32* %233, i64 2
  %235 = load i32, i32* %234, align 4
  %236 = load i32*, i32** %4, align 8
  %237 = getelementptr inbounds i32, i32* %236, i64 14
  %238 = load i32, i32* %237, align 4
  %239 = add nsw i32 %235, %238
  %240 = ashr i32 %239, 19
  %241 = or i32 %232, %240
  %242 = load i32*, i32** %4, align 8
  %243 = getelementptr inbounds i32, i32* %242, i64 6
  %244 = load i32, i32* %243, align 4
  %245 = xor i32 %244, %241
  store i32 %245, i32* %243, align 4
  %246 = load i32*, i32** %4, align 8
  %247 = getelementptr inbounds i32, i32* %246, i64 6
  %248 = load i32, i32* %247, align 4
  %249 = load i32*, i32** %4, align 8
  %250 = getelementptr inbounds i32, i32* %249, i64 2
  %251 = load i32, i32* %250, align 4
  %252 = add nsw i32 %248, %251
  %253 = shl i32 %252, 18
  %254 = load i32*, i32** %4, align 8
  %255 = getelementptr inbounds i32, i32* %254, i64 6
  %256 = load i32, i32* %255, align 4
  %257 = load i32*, i32** %4, align 8
  %258 = getelementptr inbounds i32, i32* %257, i64 2
  %259 = load i32, i32* %258, align 4
  %260 = add nsw i32 %256, %259
  %261 = ashr i32 %260, 14
  %262 = or i32 %253, %261
  %263 = load i32*, i32** %4, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 10
  %265 = load i32, i32* %264, align 4
  %266 = xor i32 %265, %262
  store i32 %266, i32* %264, align 4
  %267 = load i32*, i32** %4, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 15
  %269 = load i32, i32* %268, align 4
  %270 = load i32*, i32** %4, align 8
  %271 = getelementptr inbounds i32, i32* %270, i64 11
  %272 = load i32, i32* %271, align 4
  %273 = add nsw i32 %269, %272
  %274 = shl i32 %273, 7
  %275 = load i32*, i32** %4, align 8
  %276 = getelementptr inbounds i32, i32* %275, i64 15
  %277 = load i32, i32* %276, align 4
  %278 = load i32*, i32** %4, align 8
  %279 = getelementptr inbounds i32, i32* %278, i64 11
  %280 = load i32, i32* %279, align 4
  %281 = add nsw i32 %277, %280
  %282 = ashr i32 %281, 25
  %283 = or i32 %274, %282
  %284 = load i32*, i32** %4, align 8
  %285 = getelementptr inbounds i32, i32* %284, i64 3
  %286 = load i32, i32* %285, align 4
  %287 = xor i32 %286, %283
  store i32 %287, i32* %285, align 4
  %288 = load i32*, i32** %4, align 8
  %289 = getelementptr inbounds i32, i32* %288, i64 3
  %290 = load i32, i32* %289, align 4
  %291 = load i32*, i32** %4, align 8
  %292 = getelementptr inbounds i32, i32* %291, i64 15
  %293 = load i32, i32* %292, align 4
  %294 = add nsw i32 %290, %293
  %295 = shl i32 %294, 9
  %296 = load i32*, i32** %4, align 8
  %297 = getelementptr inbounds i32, i32* %296, i64 3
  %298 = load i32, i32* %297, align 4
  %299 = load i32*, i32** %4, align 8
  %300 = getelementptr inbounds i32, i32* %299, i64 15
  %301 = load i32, i32* %300, align 4
  %302 = add nsw i32 %298, %301
  %303 = ashr i32 %302, 23
  %304 = or i32 %295, %303
  %305 = load i32*, i32** %4, align 8
  %306 = getelementptr inbounds i32, i32* %305, i64 7
  %307 = load i32, i32* %306, align 4
  %308 = xor i32 %307, %304
  store i32 %308, i32* %306, align 4
  %309 = load i32*, i32** %4, align 8
  %310 = getelementptr inbounds i32, i32* %309, i64 7
  %311 = load i32, i32* %310, align 4
  %312 = load i32*, i32** %4, align 8
  %313 = getelementptr inbounds i32, i32* %312, i64 3
  %314 = load i32, i32* %313, align 4
  %315 = add nsw i32 %311, %314
  %316 = shl i32 %315, 13
  %317 = load i32*, i32** %4, align 8
  %318 = getelementptr inbounds i32, i32* %317, i64 7
  %319 = load i32, i32* %318, align 4
  %320 = load i32*, i32** %4, align 8
  %321 = getelementptr inbounds i32, i32* %320, i64 3
  %322 = load i32, i32* %321, align 4
  %323 = add nsw i32 %319, %322
  %324 = ashr i32 %323, 19
  %325 = or i32 %316, %324
  %326 = load i32*, i32** %4, align 8
  %327 = getelementptr inbounds i32, i32* %326, i64 11
  %328 = load i32, i32* %327, align 4
  %329 = xor i32 %328, %325
  store i32 %329, i32* %327, align 4
  %330 = load i32*, i32** %4, align 8
  %331 = getelementptr inbounds i32, i32* %330, i64 11
  %332 = load i32, i32* %331, align 4
  %333 = load i32*, i32** %4, align 8
  %334 = getelementptr inbounds i32, i32* %333, i64 7
  %335 = load i32, i32* %334, align 4
  %336 = add nsw i32 %332, %335
  %337 = shl i32 %336, 18
  %338 = load i32*, i32** %4, align 8
  %339 = getelementptr inbounds i32, i32* %338, i64 11
  %340 = load i32, i32* %339, align 4
  %341 = load i32*, i32** %4, align 8
  %342 = getelementptr inbounds i32, i32* %341, i64 7
  %343 = load i32, i32* %342, align 4
  %344 = add nsw i32 %340, %343
  %345 = ashr i32 %344, 14
  %346 = or i32 %337, %345
  %347 = load i32*, i32** %4, align 8
  %348 = getelementptr inbounds i32, i32* %347, i64 15
  %349 = load i32, i32* %348, align 4
  %350 = xor i32 %349, %346
  store i32 %350, i32* %348, align 4
  %351 = load i32*, i32** %4, align 8
  %352 = getelementptr inbounds i32, i32* %351, i64 0
  %353 = load i32, i32* %352, align 4
  %354 = load i32*, i32** %4, align 8
  %355 = getelementptr inbounds i32, i32* %354, i64 3
  %356 = load i32, i32* %355, align 4
  %357 = add nsw i32 %353, %356
  %358 = shl i32 %357, 7
  %359 = load i32*, i32** %4, align 8
  %360 = getelementptr inbounds i32, i32* %359, i64 0
  %361 = load i32, i32* %360, align 4
  %362 = load i32*, i32** %4, align 8
  %363 = getelementptr inbounds i32, i32* %362, i64 3
  %364 = load i32, i32* %363, align 4
  %365 = add nsw i32 %361, %364
  %366 = ashr i32 %365, 25
  %367 = or i32 %358, %366
  %368 = load i32*, i32** %4, align 8
  %369 = getelementptr inbounds i32, i32* %368, i64 1
  %370 = load i32, i32* %369, align 4
  %371 = xor i32 %370, %367
  store i32 %371, i32* %369, align 4
  %372 = load i32*, i32** %4, align 8
  %373 = getelementptr inbounds i32, i32* %372, i64 1
  %374 = load i32, i32* %373, align 4
  %375 = load i32*, i32** %4, align 8
  %376 = getelementptr inbounds i32, i32* %375, i64 0
  %377 = load i32, i32* %376, align 4
  %378 = add nsw i32 %374, %377
  %379 = shl i32 %378, 9
  %380 = load i32*, i32** %4, align 8
  %381 = getelementptr inbounds i32, i32* %380, i64 1
  %382 = load i32, i32* %381, align 4
  %383 = load i32*, i32** %4, align 8
  %384 = getelementptr inbounds i32, i32* %383, i64 0
  %385 = load i32, i32* %384, align 4
  %386 = add nsw i32 %382, %385
  %387 = ashr i32 %386, 23
  %388 = or i32 %379, %387
  %389 = load i32*, i32** %4, align 8
  %390 = getelementptr inbounds i32, i32* %389, i64 2
  %391 = load i32, i32* %390, align 4
  %392 = xor i32 %391, %388
  store i32 %392, i32* %390, align 4
  %393 = load i32*, i32** %4, align 8
  %394 = getelementptr inbounds i32, i32* %393, i64 2
  %395 = load i32, i32* %394, align 4
  %396 = load i32*, i32** %4, align 8
  %397 = getelementptr inbounds i32, i32* %396, i64 1
  %398 = load i32, i32* %397, align 4
  %399 = add nsw i32 %395, %398
  %400 = shl i32 %399, 13
  %401 = load i32*, i32** %4, align 8
  %402 = getelementptr inbounds i32, i32* %401, i64 2
  %403 = load i32, i32* %402, align 4
  %404 = load i32*, i32** %4, align 8
  %405 = getelementptr inbounds i32, i32* %404, i64 1
  %406 = load i32, i32* %405, align 4
  %407 = add nsw i32 %403, %406
  %408 = ashr i32 %407, 19
  %409 = or i32 %400, %408
  %410 = load i32*, i32** %4, align 8
  %411 = getelementptr inbounds i32, i32* %410, i64 3
  %412 = load i32, i32* %411, align 4
  %413 = xor i32 %412, %409
  store i32 %413, i32* %411, align 4
  %414 = load i32*, i32** %4, align 8
  %415 = getelementptr inbounds i32, i32* %414, i64 3
  %416 = load i32, i32* %415, align 4
  %417 = load i32*, i32** %4, align 8
  %418 = getelementptr inbounds i32, i32* %417, i64 2
  %419 = load i32, i32* %418, align 4
  %420 = add nsw i32 %416, %419
  %421 = shl i32 %420, 18
  %422 = load i32*, i32** %4, align 8
  %423 = getelementptr inbounds i32, i32* %422, i64 3
  %424 = load i32, i32* %423, align 4
  %425 = load i32*, i32** %4, align 8
  %426 = getelementptr inbounds i32, i32* %425, i64 2
  %427 = load i32, i32* %426, align 4
  %428 = add nsw i32 %424, %427
  %429 = ashr i32 %428, 14
  %430 = or i32 %421, %429
  %431 = load i32*, i32** %4, align 8
  %432 = getelementptr inbounds i32, i32* %431, i64 0
  %433 = load i32, i32* %432, align 4
  %434 = xor i32 %433, %430
  store i32 %434, i32* %432, align 4
  %435 = load i32*, i32** %4, align 8
  %436 = getelementptr inbounds i32, i32* %435, i64 5
  %437 = load i32, i32* %436, align 4
  %438 = load i32*, i32** %4, align 8
  %439 = getelementptr inbounds i32, i32* %438, i64 4
  %440 = load i32, i32* %439, align 4
  %441 = add nsw i32 %437, %440
  %442 = shl i32 %441, 7
  %443 = load i32*, i32** %4, align 8
  %444 = getelementptr inbounds i32, i32* %443, i64 5
  %445 = load i32, i32* %444, align 4
  %446 = load i32*, i32** %4, align 8
  %447 = getelementptr inbounds i32, i32* %446, i64 4
  %448 = load i32, i32* %447, align 4
  %449 = add nsw i32 %445, %448
  %450 = ashr i32 %449, 25
  %451 = or i32 %442, %450
  %452 = load i32*, i32** %4, align 8
  %453 = getelementptr inbounds i32, i32* %452, i64 6
  %454 = load i32, i32* %453, align 4
  %455 = xor i32 %454, %451
  store i32 %455, i32* %453, align 4
  %456 = load i32*, i32** %4, align 8
  %457 = getelementptr inbounds i32, i32* %456, i64 6
  %458 = load i32, i32* %457, align 4
  %459 = load i32*, i32** %4, align 8
  %460 = getelementptr inbounds i32, i32* %459, i64 5
  %461 = load i32, i32* %460, align 4
  %462 = add nsw i32 %458, %461
  %463 = shl i32 %462, 9
  %464 = load i32*, i32** %4, align 8
  %465 = getelementptr inbounds i32, i32* %464, i64 6
  %466 = load i32, i32* %465, align 4
  %467 = load i32*, i32** %4, align 8
  %468 = getelementptr inbounds i32, i32* %467, i64 5
  %469 = load i32, i32* %468, align 4
  %470 = add nsw i32 %466, %469
  %471 = ashr i32 %470, 23
  %472 = or i32 %463, %471
  %473 = load i32*, i32** %4, align 8
  %474 = getelementptr inbounds i32, i32* %473, i64 7
  %475 = load i32, i32* %474, align 4
  %476 = xor i32 %475, %472
  store i32 %476, i32* %474, align 4
  %477 = load i32*, i32** %4, align 8
  %478 = getelementptr inbounds i32, i32* %477, i64 7
  %479 = load i32, i32* %478, align 4
  %480 = load i32*, i32** %4, align 8
  %481 = getelementptr inbounds i32, i32* %480, i64 6
  %482 = load i32, i32* %481, align 4
  %483 = add nsw i32 %479, %482
  %484 = shl i32 %483, 13
  %485 = load i32*, i32** %4, align 8
  %486 = getelementptr inbounds i32, i32* %485, i64 7
  %487 = load i32, i32* %486, align 4
  %488 = load i32*, i32** %4, align 8
  %489 = getelementptr inbounds i32, i32* %488, i64 6
  %490 = load i32, i32* %489, align 4
  %491 = add nsw i32 %487, %490
  %492 = ashr i32 %491, 19
  %493 = or i32 %484, %492
  %494 = load i32*, i32** %4, align 8
  %495 = getelementptr inbounds i32, i32* %494, i64 4
  %496 = load i32, i32* %495, align 4
  %497 = xor i32 %496, %493
  store i32 %497, i32* %495, align 4
  %498 = load i32*, i32** %4, align 8
  %499 = getelementptr inbounds i32, i32* %498, i64 4
  %500 = load i32, i32* %499, align 4
  %501 = load i32*, i32** %4, align 8
  %502 = getelementptr inbounds i32, i32* %501, i64 7
  %503 = load i32, i32* %502, align 4
  %504 = add nsw i32 %500, %503
  %505 = shl i32 %504, 18
  %506 = load i32*, i32** %4, align 8
  %507 = getelementptr inbounds i32, i32* %506, i64 4
  %508 = load i32, i32* %507, align 4
  %509 = load i32*, i32** %4, align 8
  %510 = getelementptr inbounds i32, i32* %509, i64 7
  %511 = load i32, i32* %510, align 4
  %512 = add nsw i32 %508, %511
  %513 = ashr i32 %512, 14
  %514 = or i32 %505, %513
  %515 = load i32*, i32** %4, align 8
  %516 = getelementptr inbounds i32, i32* %515, i64 5
  %517 = load i32, i32* %516, align 4
  %518 = xor i32 %517, %514
  store i32 %518, i32* %516, align 4
  %519 = load i32*, i32** %4, align 8
  %520 = getelementptr inbounds i32, i32* %519, i64 10
  %521 = load i32, i32* %520, align 4
  %522 = load i32*, i32** %4, align 8
  %523 = getelementptr inbounds i32, i32* %522, i64 9
  %524 = load i32, i32* %523, align 4
  %525 = add nsw i32 %521, %524
  %526 = shl i32 %525, 7
  %527 = load i32*, i32** %4, align 8
  %528 = getelementptr inbounds i32, i32* %527, i64 10
  %529 = load i32, i32* %528, align 4
  %530 = load i32*, i32** %4, align 8
  %531 = getelementptr inbounds i32, i32* %530, i64 9
  %532 = load i32, i32* %531, align 4
  %533 = add nsw i32 %529, %532
  %534 = ashr i32 %533, 25
  %535 = or i32 %526, %534
  %536 = load i32*, i32** %4, align 8
  %537 = getelementptr inbounds i32, i32* %536, i64 11
  %538 = load i32, i32* %537, align 4
  %539 = xor i32 %538, %535
  store i32 %539, i32* %537, align 4
  %540 = load i32*, i32** %4, align 8
  %541 = getelementptr inbounds i32, i32* %540, i64 11
  %542 = load i32, i32* %541, align 4
  %543 = load i32*, i32** %4, align 8
  %544 = getelementptr inbounds i32, i32* %543, i64 10
  %545 = load i32, i32* %544, align 4
  %546 = add nsw i32 %542, %545
  %547 = shl i32 %546, 9
  %548 = load i32*, i32** %4, align 8
  %549 = getelementptr inbounds i32, i32* %548, i64 11
  %550 = load i32, i32* %549, align 4
  %551 = load i32*, i32** %4, align 8
  %552 = getelementptr inbounds i32, i32* %551, i64 10
  %553 = load i32, i32* %552, align 4
  %554 = add nsw i32 %550, %553
  %555 = ashr i32 %554, 23
  %556 = or i32 %547, %555
  %557 = load i32*, i32** %4, align 8
  %558 = getelementptr inbounds i32, i32* %557, i64 8
  %559 = load i32, i32* %558, align 4
  %560 = xor i32 %559, %556
  store i32 %560, i32* %558, align 4
  %561 = load i32*, i32** %4, align 8
  %562 = getelementptr inbounds i32, i32* %561, i64 8
  %563 = load i32, i32* %562, align 4
  %564 = load i32*, i32** %4, align 8
  %565 = getelementptr inbounds i32, i32* %564, i64 11
  %566 = load i32, i32* %565, align 4
  %567 = add nsw i32 %563, %566
  %568 = shl i32 %567, 13
  %569 = load i32*, i32** %4, align 8
  %570 = getelementptr inbounds i32, i32* %569, i64 8
  %571 = load i32, i32* %570, align 4
  %572 = load i32*, i32** %4, align 8
  %573 = getelementptr inbounds i32, i32* %572, i64 11
  %574 = load i32, i32* %573, align 4
  %575 = add nsw i32 %571, %574
  %576 = ashr i32 %575, 19
  %577 = or i32 %568, %576
  %578 = load i32*, i32** %4, align 8
  %579 = getelementptr inbounds i32, i32* %578, i64 9
  %580 = load i32, i32* %579, align 4
  %581 = xor i32 %580, %577
  store i32 %581, i32* %579, align 4
  %582 = load i32*, i32** %4, align 8
  %583 = getelementptr inbounds i32, i32* %582, i64 9
  %584 = load i32, i32* %583, align 4
  %585 = load i32*, i32** %4, align 8
  %586 = getelementptr inbounds i32, i32* %585, i64 8
  %587 = load i32, i32* %586, align 4
  %588 = add nsw i32 %584, %587
  %589 = shl i32 %588, 18
  %590 = load i32*, i32** %4, align 8
  %591 = getelementptr inbounds i32, i32* %590, i64 9
  %592 = load i32, i32* %591, align 4
  %593 = load i32*, i32** %4, align 8
  %594 = getelementptr inbounds i32, i32* %593, i64 8
  %595 = load i32, i32* %594, align 4
  %596 = add nsw i32 %592, %595
  %597 = ashr i32 %596, 14
  %598 = or i32 %589, %597
  %599 = load i32*, i32** %4, align 8
  %600 = getelementptr inbounds i32, i32* %599, i64 10
  %601 = load i32, i32* %600, align 4
  %602 = xor i32 %601, %598
  store i32 %602, i32* %600, align 4
  %603 = load i32*, i32** %4, align 8
  %604 = getelementptr inbounds i32, i32* %603, i64 15
  %605 = load i32, i32* %604, align 4
  %606 = load i32*, i32** %4, align 8
  %607 = getelementptr inbounds i32, i32* %606, i64 14
  %608 = load i32, i32* %607, align 4
  %609 = add nsw i32 %605, %608
  %610 = shl i32 %609, 7
  %611 = load i32*, i32** %4, align 8
  %612 = getelementptr inbounds i32, i32* %611, i64 15
  %613 = load i32, i32* %612, align 4
  %614 = load i32*, i32** %4, align 8
  %615 = getelementptr inbounds i32, i32* %614, i64 14
  %616 = load i32, i32* %615, align 4
  %617 = add nsw i32 %613, %616
  %618 = ashr i32 %617, 25
  %619 = or i32 %610, %618
  %620 = load i32*, i32** %4, align 8
  %621 = getelementptr inbounds i32, i32* %620, i64 12
  %622 = load i32, i32* %621, align 4
  %623 = xor i32 %622, %619
  store i32 %623, i32* %621, align 4
  %624 = load i32*, i32** %4, align 8
  %625 = getelementptr inbounds i32, i32* %624, i64 12
  %626 = load i32, i32* %625, align 4
  %627 = load i32*, i32** %4, align 8
  %628 = getelementptr inbounds i32, i32* %627, i64 15
  %629 = load i32, i32* %628, align 4
  %630 = add nsw i32 %626, %629
  %631 = shl i32 %630, 9
  %632 = load i32*, i32** %4, align 8
  %633 = getelementptr inbounds i32, i32* %632, i64 12
  %634 = load i32, i32* %633, align 4
  %635 = load i32*, i32** %4, align 8
  %636 = getelementptr inbounds i32, i32* %635, i64 15
  %637 = load i32, i32* %636, align 4
  %638 = add nsw i32 %634, %637
  %639 = ashr i32 %638, 23
  %640 = or i32 %631, %639
  %641 = load i32*, i32** %4, align 8
  %642 = getelementptr inbounds i32, i32* %641, i64 13
  %643 = load i32, i32* %642, align 4
  %644 = xor i32 %643, %640
  store i32 %644, i32* %642, align 4
  %645 = load i32*, i32** %4, align 8
  %646 = getelementptr inbounds i32, i32* %645, i64 13
  %647 = load i32, i32* %646, align 4
  %648 = load i32*, i32** %4, align 8
  %649 = getelementptr inbounds i32, i32* %648, i64 12
  %650 = load i32, i32* %649, align 4
  %651 = add nsw i32 %647, %650
  %652 = shl i32 %651, 13
  %653 = load i32*, i32** %4, align 8
  %654 = getelementptr inbounds i32, i32* %653, i64 13
  %655 = load i32, i32* %654, align 4
  %656 = load i32*, i32** %4, align 8
  %657 = getelementptr inbounds i32, i32* %656, i64 12
  %658 = load i32, i32* %657, align 4
  %659 = add nsw i32 %655, %658
  %660 = ashr i32 %659, 19
  %661 = or i32 %652, %660
  %662 = load i32*, i32** %4, align 8
  %663 = getelementptr inbounds i32, i32* %662, i64 14
  %664 = load i32, i32* %663, align 4
  %665 = xor i32 %664, %661
  store i32 %665, i32* %663, align 4
  %666 = load i32*, i32** %4, align 8
  %667 = getelementptr inbounds i32, i32* %666, i64 14
  %668 = load i32, i32* %667, align 4
  %669 = load i32*, i32** %4, align 8
  %670 = getelementptr inbounds i32, i32* %669, i64 13
  %671 = load i32, i32* %670, align 4
  %672 = add nsw i32 %668, %671
  %673 = shl i32 %672, 18
  %674 = load i32*, i32** %4, align 8
  %675 = getelementptr inbounds i32, i32* %674, i64 14
  %676 = load i32, i32* %675, align 4
  %677 = load i32*, i32** %4, align 8
  %678 = getelementptr inbounds i32, i32* %677, i64 13
  %679 = load i32, i32* %678, align 4
  %680 = add nsw i32 %676, %679
  %681 = ashr i32 %680, 14
  %682 = or i32 %673, %681
  %683 = load i32*, i32** %4, align 8
  %684 = getelementptr inbounds i32, i32* %683, i64 15
  %685 = load i32, i32* %684, align 4
  %686 = xor i32 %685, %682
  store i32 %686, i32* %684, align 4
  br label %687

687:                                              ; preds = %14
  %688 = load i64, i64* %5, align 8
  %689 = add i64 %688, 2
  store i64 %689, i64* %5, align 8
  br label %11

690:                                              ; preds = %11
  store i64 0, i64* %5, align 8
  br label %691

691:                                              ; preds = %704, %690
  %692 = load i64, i64* %5, align 8
  %693 = icmp ult i64 %692, 16
  br i1 %693, label %694, label %707

694:                                              ; preds = %691
  %695 = load i32*, i32** %4, align 8
  %696 = load i64, i64* %5, align 8
  %697 = getelementptr inbounds i32, i32* %695, i64 %696
  %698 = load i32, i32* %697, align 4
  %699 = load i32*, i32** %2, align 8
  %700 = load i64, i64* %5, align 8
  %701 = getelementptr inbounds i32, i32* %699, i64 %700
  %702 = load i32, i32* %701, align 4
  %703 = add nsw i32 %702, %698
  store i32 %703, i32* %701, align 4
  br label %704

704:                                              ; preds = %694
  %705 = load i64, i64* %5, align 8
  %706 = add i64 %705, 1
  store i64 %706, i64* %5, align 8
  br label %691

707:                                              ; preds = %691
  ret void
}

declare dso_local i32 @blkcpy_64(%struct.TYPE_4__*, %struct.TYPE_4__*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
