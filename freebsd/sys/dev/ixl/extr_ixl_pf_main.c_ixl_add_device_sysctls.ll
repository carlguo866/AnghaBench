; ModuleID = '/home/carl/AnghaBench/freebsd/sys/dev/ixl/extr_ixl_pf_main.c_ixl_add_device_sysctls.c'
source_filename = "/home/carl/AnghaBench/freebsd/sys/dev/ixl/extr_ixl_pf_main.c_ixl_add_device_sysctls.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ixl_pf = type { i64, i32, %struct.i40e_hw, i32, i32, i32 }
%struct.i40e_hw = type { i32, i32 }
%struct.sysctl_ctx_list = type { i32 }
%struct.sysctl_oid_list = type { i32 }
%struct.sysctl_oid = type { i32 }

@OID_AUTO = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [3 x i8] c"fc\00", align 1
@CTLTYPE_INT = common dso_local global i32 0, align 4
@CTLFLAG_RW = common dso_local global i32 0, align 4
@ixl_sysctl_set_flowcntl = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [2 x i8] c"I\00", align 1
@IXL_SYSCTL_HELP_FC = common dso_local global i8* null, align 8
@.str.2 = private unnamed_addr constant [16 x i8] c"advertise_speed\00", align 1
@ixl_sysctl_set_advertise = common dso_local global i32 0, align 4
@IXL_SYSCTL_HELP_SET_ADVERTISE = common dso_local global i8* null, align 8
@.str.3 = private unnamed_addr constant [17 x i8] c"supported_speeds\00", align 1
@CTLFLAG_RD = common dso_local global i32 0, align 4
@ixl_sysctl_supported_speeds = common dso_local global i32 0, align 4
@IXL_SYSCTL_HELP_SUPPORTED_SPEED = common dso_local global i8* null, align 8
@.str.4 = private unnamed_addr constant [14 x i8] c"current_speed\00", align 1
@CTLTYPE_STRING = common dso_local global i32 0, align 4
@ixl_sysctl_current_speed = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [2 x i8] c"A\00", align 1
@.str.6 = private unnamed_addr constant [19 x i8] c"Current Port Speed\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"fw_version\00", align 1
@ixl_sysctl_show_fw = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [17 x i8] c"Firmware version\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"unallocated_queues\00", align 1
@ixl_sysctl_unallocated_queues = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [35 x i8] c"Queues not allocated to a PF or VF\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"tx_itr\00", align 1
@ixl_sysctl_pf_tx_itr = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [44 x i8] c"Immediately set TX ITR value for all queues\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"rx_itr\00", align 1
@ixl_sysctl_pf_rx_itr = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [44 x i8] c"Immediately set RX ITR value for all queues\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"dynamic_rx_itr\00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"Enable dynamic RX ITR\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"dynamic_tx_itr\00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c"Enable dynamic TX ITR\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"fec\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"FEC Sysctls\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"fc_ability\00", align 1
@ixl_sysctl_fec_fc_ability = common dso_local global i32 0, align 4
@.str.22 = private unnamed_addr constant [23 x i8] c"FC FEC ability enabled\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"rs_ability\00", align 1
@ixl_sysctl_fec_rs_ability = common dso_local global i32 0, align 4
@.str.24 = private unnamed_addr constant [23 x i8] c"RS FEC ability enabled\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c"fc_requested\00", align 1
@ixl_sysctl_fec_fc_request = common dso_local global i32 0, align 4
@.str.26 = private unnamed_addr constant [30 x i8] c"FC FEC mode requested on link\00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c"rs_requested\00", align 1
@ixl_sysctl_fec_rs_request = common dso_local global i32 0, align 4
@.str.28 = private unnamed_addr constant [30 x i8] c"RS FEC mode requested on link\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"auto_fec_enabled\00", align 1
@ixl_sysctl_fec_auto_enable = common dso_local global i32 0, align 4
@.str.30 = private unnamed_addr constant [40 x i8] c"Let FW decide FEC ability/request modes\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"fw_lldp\00", align 1
@ixl_sysctl_fw_lldp = common dso_local global i32 0, align 4
@IXL_SYSCTL_HELP_FW_LLDP = common dso_local global i8* null, align 8
@.str.32 = private unnamed_addr constant [6 x i8] c"debug\00", align 1
@CTLFLAG_SKIP = common dso_local global i32 0, align 4
@.str.33 = private unnamed_addr constant [14 x i8] c"Debug Sysctls\00", align 1
@.str.34 = private unnamed_addr constant [18 x i8] c"shared_debug_mask\00", align 1
@.str.35 = private unnamed_addr constant [32 x i8] c"Shared code debug message level\00", align 1
@.str.36 = private unnamed_addr constant [16 x i8] c"core_debug_mask\00", align 1
@.str.37 = private unnamed_addr constant [36 x i8] c"Non-shared code debug message level\00", align 1
@.str.38 = private unnamed_addr constant [12 x i8] c"link_status\00", align 1
@ixl_sysctl_link_status = common dso_local global i32 0, align 4
@IXL_SYSCTL_HELP_LINK_STATUS = common dso_local global i8* null, align 8
@.str.39 = private unnamed_addr constant [14 x i8] c"phy_abilities\00", align 1
@ixl_sysctl_phy_abilities = common dso_local global i32 0, align 4
@.str.40 = private unnamed_addr constant [14 x i8] c"PHY Abilities\00", align 1
@.str.41 = private unnamed_addr constant [12 x i8] c"filter_list\00", align 1
@ixl_sysctl_sw_filter_list = common dso_local global i32 0, align 4
@.str.42 = private unnamed_addr constant [15 x i8] c"SW Filter List\00", align 1
@.str.43 = private unnamed_addr constant [13 x i8] c"hw_res_alloc\00", align 1
@ixl_sysctl_hw_res_alloc = common dso_local global i32 0, align 4
@.str.44 = private unnamed_addr constant [23 x i8] c"HW Resource Allocation\00", align 1
@.str.45 = private unnamed_addr constant [14 x i8] c"switch_config\00", align 1
@ixl_sysctl_switch_config = common dso_local global i32 0, align 4
@.str.46 = private unnamed_addr constant [24 x i8] c"HW Switch Configuration\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"rss_key\00", align 1
@ixl_sysctl_hkey = common dso_local global i32 0, align 4
@.str.48 = private unnamed_addr constant [13 x i8] c"View RSS key\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"rss_lut\00", align 1
@ixl_sysctl_hlut = common dso_local global i32 0, align 4
@.str.50 = private unnamed_addr constant [22 x i8] c"View RSS lookup table\00", align 1
@.str.51 = private unnamed_addr constant [9 x i8] c"rss_hena\00", align 1
@CTLTYPE_ULONG = common dso_local global i32 0, align 4
@ixl_sysctl_hena = common dso_local global i32 0, align 4
@.str.52 = private unnamed_addr constant [3 x i8] c"LU\00", align 1
@.str.53 = private unnamed_addr constant [34 x i8] c"View enabled packet types for RSS\00", align 1
@.str.54 = private unnamed_addr constant [27 x i8] c"disable_fw_link_management\00", align 1
@CTLFLAG_WR = common dso_local global i32 0, align 4
@ixl_sysctl_fw_link_management = common dso_local global i32 0, align 4
@.str.55 = private unnamed_addr constant [27 x i8] c"Disable FW Link Management\00", align 1
@.str.56 = private unnamed_addr constant [16 x i8] c"dump_debug_data\00", align 1
@ixl_sysctl_dump_debug_data = common dso_local global i32 0, align 4
@.str.57 = private unnamed_addr constant [24 x i8] c"Dump Debug Data from FW\00", align 1
@.str.58 = private unnamed_addr constant [12 x i8] c"do_pf_reset\00", align 1
@ixl_sysctl_do_pf_reset = common dso_local global i32 0, align 4
@.str.59 = private unnamed_addr constant [31 x i8] c"Tell HW to initiate a PF reset\00", align 1
@.str.60 = private unnamed_addr constant [14 x i8] c"do_core_reset\00", align 1
@ixl_sysctl_do_core_reset = common dso_local global i32 0, align 4
@.str.61 = private unnamed_addr constant [33 x i8] c"Tell HW to initiate a CORE reset\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c"do_global_reset\00", align 1
@ixl_sysctl_do_global_reset = common dso_local global i32 0, align 4
@.str.63 = private unnamed_addr constant [35 x i8] c"Tell HW to initiate a GLOBAL reset\00", align 1
@.str.64 = private unnamed_addr constant [13 x i8] c"do_emp_reset\00", align 1
@ixl_sysctl_do_emp_reset = common dso_local global i32 0, align 4
@.str.65 = private unnamed_addr constant [70 x i8] c"(This doesn't work) Tell HW to initiate a EMP (entire firmware) reset\00", align 1
@.str.66 = private unnamed_addr constant [22 x i8] c"queue_interrupt_table\00", align 1
@ixl_sysctl_queue_interrupt_table = common dso_local global i32 0, align 4
@.str.67 = private unnamed_addr constant [36 x i8] c"View MSI-X indices for TX/RX queues\00", align 1
@.str.68 = private unnamed_addr constant [14 x i8] c"read_i2c_byte\00", align 1
@ixl_sysctl_read_i2c_byte = common dso_local global i32 0, align 4
@IXL_SYSCTL_HELP_READ_I2C = common dso_local global i8* null, align 8
@.str.69 = private unnamed_addr constant [15 x i8] c"write_i2c_byte\00", align 1
@ixl_sysctl_write_i2c_byte = common dso_local global i32 0, align 4
@IXL_SYSCTL_HELP_WRITE_I2C = common dso_local global i8* null, align 8
@.str.70 = private unnamed_addr constant [19 x i8] c"read_i2c_diag_data\00", align 1
@ixl_sysctl_read_i2c_diag_data = common dso_local global i32 0, align 4
@.str.71 = private unnamed_addr constant [38 x i8] c"Dump selected diagnostic data from FW\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ixl_add_device_sysctls(%struct.ixl_pf* %0) #0 {
  %2 = alloca %struct.ixl_pf*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.i40e_hw*, align 8
  %5 = alloca %struct.sysctl_ctx_list*, align 8
  %6 = alloca %struct.sysctl_oid_list*, align 8
  %7 = alloca %struct.sysctl_oid*, align 8
  %8 = alloca %struct.sysctl_oid_list*, align 8
  %9 = alloca %struct.sysctl_oid*, align 8
  %10 = alloca %struct.sysctl_oid_list*, align 8
  store %struct.ixl_pf* %0, %struct.ixl_pf** %2, align 8
  %11 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %12 = getelementptr inbounds %struct.ixl_pf, %struct.ixl_pf* %11, i32 0, i32 5
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %3, align 4
  %14 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %15 = getelementptr inbounds %struct.ixl_pf, %struct.ixl_pf* %14, i32 0, i32 2
  store %struct.i40e_hw* %15, %struct.i40e_hw** %4, align 8
  %16 = load i32, i32* %3, align 4
  %17 = call %struct.sysctl_ctx_list* @device_get_sysctl_ctx(i32 %16)
  store %struct.sysctl_ctx_list* %17, %struct.sysctl_ctx_list** %5, align 8
  %18 = load i32, i32* %3, align 4
  %19 = call %struct.sysctl_oid* @device_get_sysctl_tree(i32 %18)
  %20 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %19)
  store %struct.sysctl_oid_list* %20, %struct.sysctl_oid_list** %6, align 8
  %21 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %22 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %23 = load i32, i32* @OID_AUTO, align 4
  %24 = load i32, i32* @CTLTYPE_INT, align 4
  %25 = load i32, i32* @CTLFLAG_RW, align 4
  %26 = or i32 %24, %25
  %27 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %28 = load i32, i32* @ixl_sysctl_set_flowcntl, align 4
  %29 = load i8*, i8** @IXL_SYSCTL_HELP_FC, align 8
  %30 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %21, %struct.sysctl_oid_list* %22, i32 %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i32 %26, %struct.ixl_pf* %27, i32 0, i32 %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %29)
  %31 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %32 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %33 = load i32, i32* @OID_AUTO, align 4
  %34 = load i32, i32* @CTLTYPE_INT, align 4
  %35 = load i32, i32* @CTLFLAG_RW, align 4
  %36 = or i32 %34, %35
  %37 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %38 = load i32, i32* @ixl_sysctl_set_advertise, align 4
  %39 = load i8*, i8** @IXL_SYSCTL_HELP_SET_ADVERTISE, align 8
  %40 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %31, %struct.sysctl_oid_list* %32, i32 %33, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i32 %36, %struct.ixl_pf* %37, i32 0, i32 %38, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %39)
  %41 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %42 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %43 = load i32, i32* @OID_AUTO, align 4
  %44 = load i32, i32* @CTLTYPE_INT, align 4
  %45 = load i32, i32* @CTLFLAG_RD, align 4
  %46 = or i32 %44, %45
  %47 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %48 = load i32, i32* @ixl_sysctl_supported_speeds, align 4
  %49 = load i8*, i8** @IXL_SYSCTL_HELP_SUPPORTED_SPEED, align 8
  %50 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %41, %struct.sysctl_oid_list* %42, i32 %43, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0), i32 %46, %struct.ixl_pf* %47, i32 0, i32 %48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %49)
  %51 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %52 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %53 = load i32, i32* @OID_AUTO, align 4
  %54 = load i32, i32* @CTLTYPE_STRING, align 4
  %55 = load i32, i32* @CTLFLAG_RD, align 4
  %56 = or i32 %54, %55
  %57 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %58 = load i32, i32* @ixl_sysctl_current_speed, align 4
  %59 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %51, %struct.sysctl_oid_list* %52, i32 %53, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i32 %56, %struct.ixl_pf* %57, i32 0, i32 %58, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.6, i64 0, i64 0))
  %60 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %61 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %62 = load i32, i32* @OID_AUTO, align 4
  %63 = load i32, i32* @CTLTYPE_STRING, align 4
  %64 = load i32, i32* @CTLFLAG_RD, align 4
  %65 = or i32 %63, %64
  %66 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %67 = load i32, i32* @ixl_sysctl_show_fw, align 4
  %68 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %60, %struct.sysctl_oid_list* %61, i32 %62, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i32 %65, %struct.ixl_pf* %66, i32 0, i32 %67, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0))
  %69 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %70 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %71 = load i32, i32* @OID_AUTO, align 4
  %72 = load i32, i32* @CTLTYPE_INT, align 4
  %73 = load i32, i32* @CTLFLAG_RD, align 4
  %74 = or i32 %72, %73
  %75 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %76 = load i32, i32* @ixl_sysctl_unallocated_queues, align 4
  %77 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %69, %struct.sysctl_oid_list* %70, i32 %71, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i32 %74, %struct.ixl_pf* %75, i32 0, i32 %76, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0))
  %78 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %79 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %80 = load i32, i32* @OID_AUTO, align 4
  %81 = load i32, i32* @CTLTYPE_INT, align 4
  %82 = load i32, i32* @CTLFLAG_RW, align 4
  %83 = or i32 %81, %82
  %84 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %85 = load i32, i32* @ixl_sysctl_pf_tx_itr, align 4
  %86 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %78, %struct.sysctl_oid_list* %79, i32 %80, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i32 %83, %struct.ixl_pf* %84, i32 0, i32 %85, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0))
  %87 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %88 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %89 = load i32, i32* @OID_AUTO, align 4
  %90 = load i32, i32* @CTLTYPE_INT, align 4
  %91 = load i32, i32* @CTLFLAG_RW, align 4
  %92 = or i32 %90, %91
  %93 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %94 = load i32, i32* @ixl_sysctl_pf_rx_itr, align 4
  %95 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %87, %struct.sysctl_oid_list* %88, i32 %89, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i32 %92, %struct.ixl_pf* %93, i32 0, i32 %94, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0))
  %96 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %97 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %98 = load i32, i32* @OID_AUTO, align 4
  %99 = load i32, i32* @CTLFLAG_RW, align 4
  %100 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %101 = getelementptr inbounds %struct.ixl_pf, %struct.ixl_pf* %100, i32 0, i32 4
  %102 = call i32 @SYSCTL_ADD_INT(%struct.sysctl_ctx_list* %96, %struct.sysctl_oid_list* %97, i32 %98, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i32 %99, i32* %101, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0))
  %103 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %104 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %105 = load i32, i32* @OID_AUTO, align 4
  %106 = load i32, i32* @CTLFLAG_RW, align 4
  %107 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %108 = getelementptr inbounds %struct.ixl_pf, %struct.ixl_pf* %107, i32 0, i32 3
  %109 = call i32 @SYSCTL_ADD_INT(%struct.sysctl_ctx_list* %103, %struct.sysctl_oid_list* %104, i32 %105, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), i32 %106, i32* %108, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i64 0, i64 0))
  %110 = load %struct.i40e_hw*, %struct.i40e_hw** %4, align 8
  %111 = getelementptr inbounds %struct.i40e_hw, %struct.i40e_hw* %110, i32 0, i32 1
  %112 = load i32, i32* %111, align 4
  %113 = call i64 @i40e_is_25G_device(i32 %112)
  %114 = icmp ne i64 %113, 0
  br i1 %114, label %115, label %168

115:                                              ; preds = %1
  %116 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %117 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %118 = load i32, i32* @OID_AUTO, align 4
  %119 = load i32, i32* @CTLFLAG_RD, align 4
  %120 = call %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %116, %struct.sysctl_oid_list* %117, i32 %118, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0), i32 %119, i32* null, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i64 0, i64 0))
  store %struct.sysctl_oid* %120, %struct.sysctl_oid** %9, align 8
  %121 = load %struct.sysctl_oid*, %struct.sysctl_oid** %9, align 8
  %122 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %121)
  store %struct.sysctl_oid_list* %122, %struct.sysctl_oid_list** %10, align 8
  %123 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %124 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %10, align 8
  %125 = load i32, i32* @OID_AUTO, align 4
  %126 = load i32, i32* @CTLTYPE_INT, align 4
  %127 = load i32, i32* @CTLFLAG_RW, align 4
  %128 = or i32 %126, %127
  %129 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %130 = load i32, i32* @ixl_sysctl_fec_fc_ability, align 4
  %131 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %123, %struct.sysctl_oid_list* %124, i32 %125, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 %128, %struct.ixl_pf* %129, i32 0, i32 %130, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.22, i64 0, i64 0))
  %132 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %133 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %10, align 8
  %134 = load i32, i32* @OID_AUTO, align 4
  %135 = load i32, i32* @CTLTYPE_INT, align 4
  %136 = load i32, i32* @CTLFLAG_RW, align 4
  %137 = or i32 %135, %136
  %138 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %139 = load i32, i32* @ixl_sysctl_fec_rs_ability, align 4
  %140 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %132, %struct.sysctl_oid_list* %133, i32 %134, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i64 0, i64 0), i32 %137, %struct.ixl_pf* %138, i32 0, i32 %139, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0))
  %141 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %142 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %10, align 8
  %143 = load i32, i32* @OID_AUTO, align 4
  %144 = load i32, i32* @CTLTYPE_INT, align 4
  %145 = load i32, i32* @CTLFLAG_RW, align 4
  %146 = or i32 %144, %145
  %147 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %148 = load i32, i32* @ixl_sysctl_fec_fc_request, align 4
  %149 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %141, %struct.sysctl_oid_list* %142, i32 %143, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i64 0, i64 0), i32 %146, %struct.ixl_pf* %147, i32 0, i32 %148, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i64 0, i64 0))
  %150 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %151 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %10, align 8
  %152 = load i32, i32* @OID_AUTO, align 4
  %153 = load i32, i32* @CTLTYPE_INT, align 4
  %154 = load i32, i32* @CTLFLAG_RW, align 4
  %155 = or i32 %153, %154
  %156 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %157 = load i32, i32* @ixl_sysctl_fec_rs_request, align 4
  %158 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %150, %struct.sysctl_oid_list* %151, i32 %152, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i64 0, i64 0), i32 %155, %struct.ixl_pf* %156, i32 0, i32 %157, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i64 0, i64 0))
  %159 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %160 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %10, align 8
  %161 = load i32, i32* @OID_AUTO, align 4
  %162 = load i32, i32* @CTLTYPE_INT, align 4
  %163 = load i32, i32* @CTLFLAG_RW, align 4
  %164 = or i32 %162, %163
  %165 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %166 = load i32, i32* @ixl_sysctl_fec_auto_enable, align 4
  %167 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %159, %struct.sysctl_oid_list* %160, i32 %161, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0), i32 %164, %struct.ixl_pf* %165, i32 0, i32 %166, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.30, i64 0, i64 0))
  br label %168

168:                                              ; preds = %115, %1
  %169 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %170 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %171 = load i32, i32* @OID_AUTO, align 4
  %172 = load i32, i32* @CTLTYPE_INT, align 4
  %173 = load i32, i32* @CTLFLAG_RW, align 4
  %174 = or i32 %172, %173
  %175 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %176 = load i32, i32* @ixl_sysctl_fw_lldp, align 4
  %177 = load i8*, i8** @IXL_SYSCTL_HELP_FW_LLDP, align 8
  %178 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %169, %struct.sysctl_oid_list* %170, i32 %171, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i64 0, i64 0), i32 %174, %struct.ixl_pf* %175, i32 0, i32 %176, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %177)
  %179 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %180 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %181 = load i32, i32* @OID_AUTO, align 4
  %182 = load i32, i32* @CTLFLAG_RD, align 4
  %183 = load i32, i32* @CTLFLAG_SKIP, align 4
  %184 = or i32 %182, %183
  %185 = call %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %179, %struct.sysctl_oid_list* %180, i32 %181, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0), i32 %184, i32* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i64 0, i64 0))
  store %struct.sysctl_oid* %185, %struct.sysctl_oid** %7, align 8
  %186 = load %struct.sysctl_oid*, %struct.sysctl_oid** %7, align 8
  %187 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %186)
  store %struct.sysctl_oid_list* %187, %struct.sysctl_oid_list** %8, align 8
  %188 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %189 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %190 = load i32, i32* @OID_AUTO, align 4
  %191 = load i32, i32* @CTLFLAG_RW, align 4
  %192 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %193 = getelementptr inbounds %struct.ixl_pf, %struct.ixl_pf* %192, i32 0, i32 2
  %194 = getelementptr inbounds %struct.i40e_hw, %struct.i40e_hw* %193, i32 0, i32 0
  %195 = call i32 @SYSCTL_ADD_UINT(%struct.sysctl_ctx_list* %188, %struct.sysctl_oid_list* %189, i32 %190, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.34, i64 0, i64 0), i32 %191, i32* %194, i32 0, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.35, i64 0, i64 0))
  %196 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %197 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %198 = load i32, i32* @OID_AUTO, align 4
  %199 = load i32, i32* @CTLFLAG_RW, align 4
  %200 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %201 = getelementptr inbounds %struct.ixl_pf, %struct.ixl_pf* %200, i32 0, i32 1
  %202 = call i32 @SYSCTL_ADD_UINT(%struct.sysctl_ctx_list* %196, %struct.sysctl_oid_list* %197, i32 %198, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.36, i64 0, i64 0), i32 %199, i32* %201, i32 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.37, i64 0, i64 0))
  %203 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %204 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %205 = load i32, i32* @OID_AUTO, align 4
  %206 = load i32, i32* @CTLTYPE_STRING, align 4
  %207 = load i32, i32* @CTLFLAG_RD, align 4
  %208 = or i32 %206, %207
  %209 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %210 = load i32, i32* @ixl_sysctl_link_status, align 4
  %211 = load i8*, i8** @IXL_SYSCTL_HELP_LINK_STATUS, align 8
  %212 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %203, %struct.sysctl_oid_list* %204, i32 %205, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i64 0, i64 0), i32 %208, %struct.ixl_pf* %209, i32 0, i32 %210, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8* %211)
  %213 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %214 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %215 = load i32, i32* @OID_AUTO, align 4
  %216 = load i32, i32* @CTLTYPE_STRING, align 4
  %217 = load i32, i32* @CTLFLAG_RD, align 4
  %218 = or i32 %216, %217
  %219 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %220 = load i32, i32* @ixl_sysctl_phy_abilities, align 4
  %221 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %213, %struct.sysctl_oid_list* %214, i32 %215, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i64 0, i64 0), i32 %218, %struct.ixl_pf* %219, i32 0, i32 %220, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i64 0, i64 0))
  %222 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %223 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %224 = load i32, i32* @OID_AUTO, align 4
  %225 = load i32, i32* @CTLTYPE_STRING, align 4
  %226 = load i32, i32* @CTLFLAG_RD, align 4
  %227 = or i32 %225, %226
  %228 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %229 = load i32, i32* @ixl_sysctl_sw_filter_list, align 4
  %230 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %222, %struct.sysctl_oid_list* %223, i32 %224, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0), i32 %227, %struct.ixl_pf* %228, i32 0, i32 %229, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i64 0, i64 0))
  %231 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %232 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %233 = load i32, i32* @OID_AUTO, align 4
  %234 = load i32, i32* @CTLTYPE_STRING, align 4
  %235 = load i32, i32* @CTLFLAG_RD, align 4
  %236 = or i32 %234, %235
  %237 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %238 = load i32, i32* @ixl_sysctl_hw_res_alloc, align 4
  %239 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %231, %struct.sysctl_oid_list* %232, i32 %233, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43, i64 0, i64 0), i32 %236, %struct.ixl_pf* %237, i32 0, i32 %238, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.44, i64 0, i64 0))
  %240 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %241 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %242 = load i32, i32* @OID_AUTO, align 4
  %243 = load i32, i32* @CTLTYPE_STRING, align 4
  %244 = load i32, i32* @CTLFLAG_RD, align 4
  %245 = or i32 %243, %244
  %246 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %247 = load i32, i32* @ixl_sysctl_switch_config, align 4
  %248 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %240, %struct.sysctl_oid_list* %241, i32 %242, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.45, i64 0, i64 0), i32 %245, %struct.ixl_pf* %246, i32 0, i32 %247, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.46, i64 0, i64 0))
  %249 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %250 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %251 = load i32, i32* @OID_AUTO, align 4
  %252 = load i32, i32* @CTLTYPE_STRING, align 4
  %253 = load i32, i32* @CTLFLAG_RD, align 4
  %254 = or i32 %252, %253
  %255 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %256 = load i32, i32* @ixl_sysctl_hkey, align 4
  %257 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %249, %struct.sysctl_oid_list* %250, i32 %251, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i64 0, i64 0), i32 %254, %struct.ixl_pf* %255, i32 0, i32 %256, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i64 0, i64 0))
  %258 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %259 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %260 = load i32, i32* @OID_AUTO, align 4
  %261 = load i32, i32* @CTLTYPE_STRING, align 4
  %262 = load i32, i32* @CTLFLAG_RD, align 4
  %263 = or i32 %261, %262
  %264 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %265 = load i32, i32* @ixl_sysctl_hlut, align 4
  %266 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %258, %struct.sysctl_oid_list* %259, i32 %260, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i64 0, i64 0), i32 %263, %struct.ixl_pf* %264, i32 0, i32 %265, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.50, i64 0, i64 0))
  %267 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %268 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %269 = load i32, i32* @OID_AUTO, align 4
  %270 = load i32, i32* @CTLTYPE_ULONG, align 4
  %271 = load i32, i32* @CTLFLAG_RD, align 4
  %272 = or i32 %270, %271
  %273 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %274 = load i32, i32* @ixl_sysctl_hena, align 4
  %275 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %267, %struct.sysctl_oid_list* %268, i32 %269, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i64 0, i64 0), i32 %272, %struct.ixl_pf* %273, i32 0, i32 %274, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.53, i64 0, i64 0))
  %276 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %277 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %278 = load i32, i32* @OID_AUTO, align 4
  %279 = load i32, i32* @CTLTYPE_INT, align 4
  %280 = load i32, i32* @CTLFLAG_WR, align 4
  %281 = or i32 %279, %280
  %282 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %283 = load i32, i32* @ixl_sysctl_fw_link_management, align 4
  %284 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %276, %struct.sysctl_oid_list* %277, i32 %278, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.54, i64 0, i64 0), i32 %281, %struct.ixl_pf* %282, i32 0, i32 %283, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.55, i64 0, i64 0))
  %285 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %286 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %287 = load i32, i32* @OID_AUTO, align 4
  %288 = load i32, i32* @CTLTYPE_STRING, align 4
  %289 = load i32, i32* @CTLFLAG_RD, align 4
  %290 = or i32 %288, %289
  %291 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %292 = load i32, i32* @ixl_sysctl_dump_debug_data, align 4
  %293 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %285, %struct.sysctl_oid_list* %286, i32 %287, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i64 0, i64 0), i32 %290, %struct.ixl_pf* %291, i32 0, i32 %292, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.57, i64 0, i64 0))
  %294 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %295 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %296 = load i32, i32* @OID_AUTO, align 4
  %297 = load i32, i32* @CTLTYPE_INT, align 4
  %298 = load i32, i32* @CTLFLAG_WR, align 4
  %299 = or i32 %297, %298
  %300 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %301 = load i32, i32* @ixl_sysctl_do_pf_reset, align 4
  %302 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %294, %struct.sysctl_oid_list* %295, i32 %296, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.58, i64 0, i64 0), i32 %299, %struct.ixl_pf* %300, i32 0, i32 %301, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.59, i64 0, i64 0))
  %303 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %304 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %305 = load i32, i32* @OID_AUTO, align 4
  %306 = load i32, i32* @CTLTYPE_INT, align 4
  %307 = load i32, i32* @CTLFLAG_WR, align 4
  %308 = or i32 %306, %307
  %309 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %310 = load i32, i32* @ixl_sysctl_do_core_reset, align 4
  %311 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %303, %struct.sysctl_oid_list* %304, i32 %305, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i64 0, i64 0), i32 %308, %struct.ixl_pf* %309, i32 0, i32 %310, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.61, i64 0, i64 0))
  %312 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %313 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %314 = load i32, i32* @OID_AUTO, align 4
  %315 = load i32, i32* @CTLTYPE_INT, align 4
  %316 = load i32, i32* @CTLFLAG_WR, align 4
  %317 = or i32 %315, %316
  %318 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %319 = load i32, i32* @ixl_sysctl_do_global_reset, align 4
  %320 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %312, %struct.sysctl_oid_list* %313, i32 %314, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0), i32 %317, %struct.ixl_pf* %318, i32 0, i32 %319, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.63, i64 0, i64 0))
  %321 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %322 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %323 = load i32, i32* @OID_AUTO, align 4
  %324 = load i32, i32* @CTLTYPE_INT, align 4
  %325 = load i32, i32* @CTLFLAG_WR, align 4
  %326 = or i32 %324, %325
  %327 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %328 = load i32, i32* @ixl_sysctl_do_emp_reset, align 4
  %329 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %321, %struct.sysctl_oid_list* %322, i32 %323, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.64, i64 0, i64 0), i32 %326, %struct.ixl_pf* %327, i32 0, i32 %328, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.65, i64 0, i64 0))
  %330 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %331 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %332 = load i32, i32* @OID_AUTO, align 4
  %333 = load i32, i32* @CTLTYPE_STRING, align 4
  %334 = load i32, i32* @CTLFLAG_RD, align 4
  %335 = or i32 %333, %334
  %336 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %337 = load i32, i32* @ixl_sysctl_queue_interrupt_table, align 4
  %338 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %330, %struct.sysctl_oid_list* %331, i32 %332, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.66, i64 0, i64 0), i32 %335, %struct.ixl_pf* %336, i32 0, i32 %337, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.67, i64 0, i64 0))
  %339 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %340 = getelementptr inbounds %struct.ixl_pf, %struct.ixl_pf* %339, i32 0, i32 0
  %341 = load i64, i64* %340, align 8
  %342 = icmp ne i64 %341, 0
  br i1 %342, label %343, label %373

343:                                              ; preds = %168
  %344 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %345 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %346 = load i32, i32* @OID_AUTO, align 4
  %347 = load i32, i32* @CTLTYPE_INT, align 4
  %348 = load i32, i32* @CTLFLAG_RW, align 4
  %349 = or i32 %347, %348
  %350 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %351 = load i32, i32* @ixl_sysctl_read_i2c_byte, align 4
  %352 = load i8*, i8** @IXL_SYSCTL_HELP_READ_I2C, align 8
  %353 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %344, %struct.sysctl_oid_list* %345, i32 %346, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.68, i64 0, i64 0), i32 %349, %struct.ixl_pf* %350, i32 0, i32 %351, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %352)
  %354 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %355 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %356 = load i32, i32* @OID_AUTO, align 4
  %357 = load i32, i32* @CTLTYPE_INT, align 4
  %358 = load i32, i32* @CTLFLAG_RW, align 4
  %359 = or i32 %357, %358
  %360 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %361 = load i32, i32* @ixl_sysctl_write_i2c_byte, align 4
  %362 = load i8*, i8** @IXL_SYSCTL_HELP_WRITE_I2C, align 8
  %363 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %354, %struct.sysctl_oid_list* %355, i32 %356, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.69, i64 0, i64 0), i32 %359, %struct.ixl_pf* %360, i32 0, i32 %361, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* %362)
  %364 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %365 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %366 = load i32, i32* @OID_AUTO, align 4
  %367 = load i32, i32* @CTLTYPE_STRING, align 4
  %368 = load i32, i32* @CTLFLAG_RD, align 4
  %369 = or i32 %367, %368
  %370 = load %struct.ixl_pf*, %struct.ixl_pf** %2, align 8
  %371 = load i32, i32* @ixl_sysctl_read_i2c_diag_data, align 4
  %372 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %364, %struct.sysctl_oid_list* %365, i32 %366, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.70, i64 0, i64 0), i32 %369, %struct.ixl_pf* %370, i32 0, i32 %371, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.71, i64 0, i64 0))
  br label %373

373:                                              ; preds = %343, %168
  ret void
}

declare dso_local %struct.sysctl_ctx_list* @device_get_sysctl_ctx(i32) #1

declare dso_local %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid*) #1

declare dso_local %struct.sysctl_oid* @device_get_sysctl_tree(i32) #1

declare dso_local i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, %struct.ixl_pf*, i32, i32, i8*, i8*) #1

declare dso_local i32 @SYSCTL_ADD_INT(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, i32*, i32, i8*) #1

declare dso_local i64 @i40e_is_25G_device(i32) #1

declare dso_local %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, i32*, i8*) #1

declare dso_local i32 @SYSCTL_ADD_UINT(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, i32*, i32, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
