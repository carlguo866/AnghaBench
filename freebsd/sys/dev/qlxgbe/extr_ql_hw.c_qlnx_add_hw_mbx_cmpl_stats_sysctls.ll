; ModuleID = '/home/carl/AnghaBench/freebsd/sys/dev/qlxgbe/extr_ql_hw.c_qlnx_add_hw_mbx_cmpl_stats_sysctls.c'
source_filename = "/home/carl/AnghaBench/freebsd/sys/dev/qlxgbe/extr_ql_hw.c_qlnx_add_hw_mbx_cmpl_stats_sysctls.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_5__ = type { %struct.TYPE_4__, i32 }
%struct.TYPE_4__ = type { i32* }
%struct.sysctl_ctx_list = type { i32 }
%struct.sysctl_oid_list = type { i32 }

@OID_AUTO = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [29 x i8] c"mbx_completion_time_lt_200ms\00", align 1
@CTLFLAG_RD = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [32 x i8] c"mbx_completion_time_200ms_400ms\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"mbx_completion_time_400ms_600ms\00", align 1
@.str.3 = private unnamed_addr constant [32 x i8] c"mbx_completion_time_600ms_800ms\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"mbx_completion_time_800ms_1000ms\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"mbx_completion_time_1000ms_1200ms\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"mbx_completion_time_1200ms_1400ms\00", align 1
@.str.7 = private unnamed_addr constant [34 x i8] c"mbx_completion_time_1400ms_1600ms\00", align 1
@.str.8 = private unnamed_addr constant [34 x i8] c"mbx_completion_time_1600ms_1800ms\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"mbx_completion_time_1800ms_2000ms\00", align 1
@.str.10 = private unnamed_addr constant [34 x i8] c"mbx_completion_time_2000ms_2200ms\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"mbx_completion_time_2200ms_2400ms\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"mbx_completion_time_2400ms_2600ms\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"mbx_completion_time_2600ms_2800ms\00", align 1
@.str.14 = private unnamed_addr constant [34 x i8] c"mbx_completion_time_2800ms_3000ms\00", align 1
@.str.15 = private unnamed_addr constant [34 x i8] c"mbx_completion_time_3000ms_4000ms\00", align 1
@.str.16 = private unnamed_addr constant [34 x i8] c"mbx_completion_time_4000ms_5000ms\00", align 1
@.str.17 = private unnamed_addr constant [38 x i8] c"mbx_completion_host_mbx_cntrl_timeout\00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c"mbx_completion_fw_mbx_cntrl_timeout\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.TYPE_5__*)* @qlnx_add_hw_mbx_cmpl_stats_sysctls to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @qlnx_add_hw_mbx_cmpl_stats_sysctls(%struct.TYPE_5__* %0) #0 {
  %2 = alloca %struct.TYPE_5__*, align 8
  %3 = alloca %struct.sysctl_ctx_list*, align 8
  %4 = alloca %struct.sysctl_oid_list*, align 8
  store %struct.TYPE_5__* %0, %struct.TYPE_5__** %2, align 8
  %5 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %6 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %5, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = call %struct.sysctl_ctx_list* @device_get_sysctl_ctx(i32 %7)
  store %struct.sysctl_ctx_list* %8, %struct.sysctl_ctx_list** %3, align 8
  %9 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %10 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %9, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = call i32 @device_get_sysctl_tree(i32 %11)
  %13 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(i32 %12)
  store %struct.sysctl_oid_list* %13, %struct.sysctl_oid_list** %4, align 8
  %14 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %15 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %16 = load i32, i32* @OID_AUTO, align 4
  %17 = load i32, i32* @CTLFLAG_RD, align 4
  %18 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %19 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %18, i32 0, i32 0
  %20 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %19, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 0
  %23 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %14, %struct.sysctl_oid_list* %15, i32 %16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 %17, i32* %22, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0))
  %24 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %25 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %26 = load i32, i32* @OID_AUTO, align 4
  %27 = load i32, i32* @CTLFLAG_RD, align 4
  %28 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %29 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %28, i32 0, i32 0
  %30 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %29, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds i32, i32* %31, i64 1
  %33 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %24, %struct.sysctl_oid_list* %25, i32 %26, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0), i32 %27, i32* %32, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0))
  %34 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %35 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %36 = load i32, i32* @OID_AUTO, align 4
  %37 = load i32, i32* @CTLFLAG_RD, align 4
  %38 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %39 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %38, i32 0, i32 0
  %40 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %39, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 2
  %43 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %34, %struct.sysctl_oid_list* %35, i32 %36, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i32 %37, i32* %42, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0))
  %44 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %45 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %46 = load i32, i32* @OID_AUTO, align 4
  %47 = load i32, i32* @CTLFLAG_RD, align 4
  %48 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %49 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %48, i32 0, i32 0
  %50 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %49, i32 0, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 3
  %53 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %44, %struct.sysctl_oid_list* %45, i32 %46, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0), i32 %47, i32* %52, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3, i64 0, i64 0))
  %54 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %55 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %56 = load i32, i32* @OID_AUTO, align 4
  %57 = load i32, i32* @CTLFLAG_RD, align 4
  %58 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %59 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %58, i32 0, i32 0
  %60 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %59, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = getelementptr inbounds i32, i32* %61, i64 4
  %63 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %54, %struct.sysctl_oid_list* %55, i32 %56, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i32 %57, i32* %62, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0))
  %64 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %65 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %66 = load i32, i32* @OID_AUTO, align 4
  %67 = load i32, i32* @CTLFLAG_RD, align 4
  %68 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %69 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %68, i32 0, i32 0
  %70 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %69, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = getelementptr inbounds i32, i32* %71, i64 5
  %73 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %64, %struct.sysctl_oid_list* %65, i32 %66, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0), i32 %67, i32* %72, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i64 0, i64 0))
  %74 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %75 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %76 = load i32, i32* @OID_AUTO, align 4
  %77 = load i32, i32* @CTLFLAG_RD, align 4
  %78 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %79 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %78, i32 0, i32 0
  %80 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %79, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 6
  %83 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %74, %struct.sysctl_oid_list* %75, i32 %76, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), i32 %77, i32* %82, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0))
  %84 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %85 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %86 = load i32, i32* @OID_AUTO, align 4
  %87 = load i32, i32* @CTLFLAG_RD, align 4
  %88 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %89 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %88, i32 0, i32 0
  %90 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %89, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = getelementptr inbounds i32, i32* %91, i64 7
  %93 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %84, %struct.sysctl_oid_list* %85, i32 %86, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0), i32 %87, i32* %92, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7, i64 0, i64 0))
  %94 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %95 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %96 = load i32, i32* @OID_AUTO, align 4
  %97 = load i32, i32* @CTLFLAG_RD, align 4
  %98 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %99 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %98, i32 0, i32 0
  %100 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %99, i32 0, i32 0
  %101 = load i32*, i32** %100, align 8
  %102 = getelementptr inbounds i32, i32* %101, i64 8
  %103 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %94, %struct.sysctl_oid_list* %95, i32 %96, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0), i32 %97, i32* %102, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.8, i64 0, i64 0))
  %104 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %105 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %106 = load i32, i32* @OID_AUTO, align 4
  %107 = load i32, i32* @CTLFLAG_RD, align 4
  %108 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %109 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %108, i32 0, i32 0
  %110 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %109, i32 0, i32 0
  %111 = load i32*, i32** %110, align 8
  %112 = getelementptr inbounds i32, i32* %111, i64 9
  %113 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %104, %struct.sysctl_oid_list* %105, i32 %106, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), i32 %107, i32* %112, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0))
  %114 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %115 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %116 = load i32, i32* @OID_AUTO, align 4
  %117 = load i32, i32* @CTLFLAG_RD, align 4
  %118 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %119 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %118, i32 0, i32 0
  %120 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %119, i32 0, i32 0
  %121 = load i32*, i32** %120, align 8
  %122 = getelementptr inbounds i32, i32* %121, i64 10
  %123 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %114, %struct.sysctl_oid_list* %115, i32 %116, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.10, i64 0, i64 0), i32 %117, i32* %122, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.10, i64 0, i64 0))
  %124 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %125 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %126 = load i32, i32* @OID_AUTO, align 4
  %127 = load i32, i32* @CTLFLAG_RD, align 4
  %128 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %129 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %128, i32 0, i32 0
  %130 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %129, i32 0, i32 0
  %131 = load i32*, i32** %130, align 8
  %132 = getelementptr inbounds i32, i32* %131, i64 11
  %133 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %124, %struct.sysctl_oid_list* %125, i32 %126, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0), i32 %127, i32* %132, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0))
  %134 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %135 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %136 = load i32, i32* @OID_AUTO, align 4
  %137 = load i32, i32* @CTLFLAG_RD, align 4
  %138 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %139 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %138, i32 0, i32 0
  %140 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %139, i32 0, i32 0
  %141 = load i32*, i32** %140, align 8
  %142 = getelementptr inbounds i32, i32* %141, i64 12
  %143 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %134, %struct.sysctl_oid_list* %135, i32 %136, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i64 0, i64 0), i32 %137, i32* %142, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i64 0, i64 0))
  %144 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %145 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %146 = load i32, i32* @OID_AUTO, align 4
  %147 = load i32, i32* @CTLFLAG_RD, align 4
  %148 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %149 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %148, i32 0, i32 0
  %150 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %149, i32 0, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = getelementptr inbounds i32, i32* %151, i64 13
  %153 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %144, %struct.sysctl_oid_list* %145, i32 %146, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0), i32 %147, i32* %152, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0))
  %154 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %155 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %156 = load i32, i32* @OID_AUTO, align 4
  %157 = load i32, i32* @CTLFLAG_RD, align 4
  %158 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %159 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %158, i32 0, i32 0
  %160 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %159, i32 0, i32 0
  %161 = load i32*, i32** %160, align 8
  %162 = getelementptr inbounds i32, i32* %161, i64 14
  %163 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %154, %struct.sysctl_oid_list* %155, i32 %156, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14, i64 0, i64 0), i32 %157, i32* %162, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14, i64 0, i64 0))
  %164 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %165 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %166 = load i32, i32* @OID_AUTO, align 4
  %167 = load i32, i32* @CTLFLAG_RD, align 4
  %168 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %169 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %168, i32 0, i32 0
  %170 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %169, i32 0, i32 0
  %171 = load i32*, i32** %170, align 8
  %172 = getelementptr inbounds i32, i32* %171, i64 15
  %173 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %164, %struct.sysctl_oid_list* %165, i32 %166, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0), i32 %167, i32* %172, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0))
  %174 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %175 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %176 = load i32, i32* @OID_AUTO, align 4
  %177 = load i32, i32* @CTLFLAG_RD, align 4
  %178 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %179 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %178, i32 0, i32 0
  %180 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %179, i32 0, i32 0
  %181 = load i32*, i32** %180, align 8
  %182 = getelementptr inbounds i32, i32* %181, i64 16
  %183 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %174, %struct.sysctl_oid_list* %175, i32 %176, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i64 0, i64 0), i32 %177, i32* %182, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i64 0, i64 0))
  %184 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %185 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %186 = load i32, i32* @OID_AUTO, align 4
  %187 = load i32, i32* @CTLFLAG_RD, align 4
  %188 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %189 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %188, i32 0, i32 0
  %190 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %189, i32 0, i32 0
  %191 = load i32*, i32** %190, align 8
  %192 = getelementptr inbounds i32, i32* %191, i64 17
  %193 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %184, %struct.sysctl_oid_list* %185, i32 %186, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0), i32 %187, i32* %192, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0))
  %194 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %195 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %196 = load i32, i32* @OID_AUTO, align 4
  %197 = load i32, i32* @CTLFLAG_RD, align 4
  %198 = load %struct.TYPE_5__*, %struct.TYPE_5__** %2, align 8
  %199 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %198, i32 0, i32 0
  %200 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %199, i32 0, i32 0
  %201 = load i32*, i32** %200, align 8
  %202 = getelementptr inbounds i32, i32* %201, i64 18
  %203 = call i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list* %194, %struct.sysctl_oid_list* %195, i32 %196, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i64 0, i64 0), i32 %197, i32* %202, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i64 0, i64 0))
  ret void
}

declare dso_local %struct.sysctl_ctx_list* @device_get_sysctl_ctx(i32) #1

declare dso_local %struct.sysctl_oid_list* @SYSCTL_CHILDREN(i32) #1

declare dso_local i32 @device_get_sysctl_tree(i32) #1

declare dso_local i32 @SYSCTL_ADD_QUAD(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, i32*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
