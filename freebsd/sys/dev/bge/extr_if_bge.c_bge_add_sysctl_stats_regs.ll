; ModuleID = '/home/carl/AnghaBench/freebsd/sys/dev/bge/extr_if_bge.c_bge_add_sysctl_stats_regs.c'
source_filename = "/home/carl/AnghaBench/freebsd/sys/dev/bge/extr_if_bge.c_bge_add_sysctl_stats_regs.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.bge_softc = type { %struct.bge_mac_stats }
%struct.bge_mac_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.sysctl_ctx_list = type { i32 }
%struct.sysctl_oid_list = type { i32 }
%struct.sysctl_oid = type { i32 }

@OID_AUTO = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [6 x i8] c"stats\00", align 1
@CTLFLAG_RD = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [15 x i8] c"BGE Statistics\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"FramesDroppedDueToFilters\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"Frames Dropped Due to Filters\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"DmaWriteQueueFull\00", align 1
@.str.5 = private unnamed_addr constant [25 x i8] c"NIC DMA Write Queue Full\00", align 1
@.str.6 = private unnamed_addr constant [25 x i8] c"DmaWriteHighPriQueueFull\00", align 1
@.str.7 = private unnamed_addr constant [39 x i8] c"NIC DMA Write High Priority Queue Full\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"NoMoreRxBDs\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"NIC No More RX Buffer Descriptors\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"InputDiscards\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"Discarded Input Frames\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"InputErrors\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"Input Errors\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"RecvThresholdHit\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"NIC Recv Threshold Hit\00", align 1
@.str.16 = private unnamed_addr constant [3 x i8] c"rx\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"BGE RX Statistics\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"ifHCInOctets\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"Inbound Octets\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"Fragments\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"UnicastPkts\00", align 1
@.str.22 = private unnamed_addr constant [24 x i8] c"Inbound Unicast Packets\00", align 1
@.str.23 = private unnamed_addr constant [14 x i8] c"MulticastPkts\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"Inbound Multicast Packets\00", align 1
@.str.25 = private unnamed_addr constant [14 x i8] c"BroadcastPkts\00", align 1
@.str.26 = private unnamed_addr constant [26 x i8] c"Inbound Broadcast Packets\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"FCSErrors\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"FCS Errors\00", align 1
@.str.29 = private unnamed_addr constant [16 x i8] c"AlignmentErrors\00", align 1
@.str.30 = private unnamed_addr constant [17 x i8] c"Alignment Errors\00", align 1
@.str.31 = private unnamed_addr constant [23 x i8] c"xonPauseFramesReceived\00", align 1
@.str.32 = private unnamed_addr constant [26 x i8] c"XON Pause Frames Received\00", align 1
@.str.33 = private unnamed_addr constant [24 x i8] c"xoffPauseFramesReceived\00", align 1
@.str.34 = private unnamed_addr constant [27 x i8] c"XOFF Pause Frames Received\00", align 1
@.str.35 = private unnamed_addr constant [22 x i8] c"ControlFramesReceived\00", align 1
@.str.36 = private unnamed_addr constant [28 x i8] c"MAC Control Frames Received\00", align 1
@.str.37 = private unnamed_addr constant [17 x i8] c"xoffStateEntered\00", align 1
@.str.38 = private unnamed_addr constant [19 x i8] c"XOFF State Entered\00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"FramesTooLong\00", align 1
@.str.40 = private unnamed_addr constant [16 x i8] c"Frames Too Long\00", align 1
@.str.41 = private unnamed_addr constant [8 x i8] c"Jabbers\00", align 1
@.str.42 = private unnamed_addr constant [14 x i8] c"UndersizePkts\00", align 1
@.str.43 = private unnamed_addr constant [19 x i8] c"Undersized Packets\00", align 1
@.str.44 = private unnamed_addr constant [3 x i8] c"tx\00", align 1
@.str.45 = private unnamed_addr constant [18 x i8] c"BGE TX Statistics\00", align 1
@.str.46 = private unnamed_addr constant [14 x i8] c"ifHCOutOctets\00", align 1
@.str.47 = private unnamed_addr constant [16 x i8] c"Outbound Octets\00", align 1
@.str.48 = private unnamed_addr constant [11 x i8] c"Collisions\00", align 1
@.str.49 = private unnamed_addr constant [14 x i8] c"TX Collisions\00", align 1
@.str.50 = private unnamed_addr constant [8 x i8] c"XonSent\00", align 1
@.str.51 = private unnamed_addr constant [9 x i8] c"XON Sent\00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"XoffSent\00", align 1
@.str.53 = private unnamed_addr constant [10 x i8] c"XOFF Sent\00", align 1
@.str.54 = private unnamed_addr constant [26 x i8] c"InternalMacTransmitErrors\00", align 1
@.str.55 = private unnamed_addr constant [23 x i8] c"Internal MAC TX Errors\00", align 1
@.str.56 = private unnamed_addr constant [22 x i8] c"SingleCollisionFrames\00", align 1
@.str.57 = private unnamed_addr constant [24 x i8] c"Single Collision Frames\00", align 1
@.str.58 = private unnamed_addr constant [24 x i8] c"MultipleCollisionFrames\00", align 1
@.str.59 = private unnamed_addr constant [26 x i8] c"Multiple Collision Frames\00", align 1
@.str.60 = private unnamed_addr constant [22 x i8] c"DeferredTransmissions\00", align 1
@.str.61 = private unnamed_addr constant [23 x i8] c"Deferred Transmissions\00", align 1
@.str.62 = private unnamed_addr constant [20 x i8] c"ExcessiveCollisions\00", align 1
@.str.63 = private unnamed_addr constant [21 x i8] c"Excessive Collisions\00", align 1
@.str.64 = private unnamed_addr constant [15 x i8] c"LateCollisions\00", align 1
@.str.65 = private unnamed_addr constant [16 x i8] c"Late Collisions\00", align 1
@.str.66 = private unnamed_addr constant [25 x i8] c"Outbound Unicast Packets\00", align 1
@.str.67 = private unnamed_addr constant [27 x i8] c"Outbound Multicast Packets\00", align 1
@.str.68 = private unnamed_addr constant [27 x i8] c"Outbound Broadcast Packets\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.bge_softc*, %struct.sysctl_ctx_list*, %struct.sysctl_oid_list*)* @bge_add_sysctl_stats_regs to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @bge_add_sysctl_stats_regs(%struct.bge_softc* %0, %struct.sysctl_ctx_list* %1, %struct.sysctl_oid_list* %2) #0 {
  %4 = alloca %struct.bge_softc*, align 8
  %5 = alloca %struct.sysctl_ctx_list*, align 8
  %6 = alloca %struct.sysctl_oid_list*, align 8
  %7 = alloca %struct.sysctl_oid*, align 8
  %8 = alloca %struct.sysctl_oid_list*, align 8
  %9 = alloca %struct.sysctl_oid_list*, align 8
  %10 = alloca %struct.bge_mac_stats*, align 8
  store %struct.bge_softc* %0, %struct.bge_softc** %4, align 8
  store %struct.sysctl_ctx_list* %1, %struct.sysctl_ctx_list** %5, align 8
  store %struct.sysctl_oid_list* %2, %struct.sysctl_oid_list** %6, align 8
  %11 = load %struct.bge_softc*, %struct.bge_softc** %4, align 8
  %12 = getelementptr inbounds %struct.bge_softc, %struct.bge_softc* %11, i32 0, i32 0
  store %struct.bge_mac_stats* %12, %struct.bge_mac_stats** %10, align 8
  %13 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %14 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %15 = load i32, i32* @OID_AUTO, align 4
  %16 = load i32, i32* @CTLFLAG_RD, align 4
  %17 = call %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %13, %struct.sysctl_oid_list* %14, i32 %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32 %16, i32* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0))
  store %struct.sysctl_oid* %17, %struct.sysctl_oid** %7, align 8
  %18 = load %struct.sysctl_oid*, %struct.sysctl_oid** %7, align 8
  %19 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %18)
  store %struct.sysctl_oid_list* %19, %struct.sysctl_oid_list** %8, align 8
  store %struct.sysctl_oid_list* %19, %struct.sysctl_oid_list** %9, align 8
  %20 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %21 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %22 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %23 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %22, i32 0, i32 33
  %24 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %20, %struct.sysctl_oid_list* %21, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i32* %23, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0))
  %25 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %26 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %27 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %28 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %27, i32 0, i32 32
  %29 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %25, %struct.sysctl_oid_list* %26, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i32* %28, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.5, i64 0, i64 0))
  %30 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %31 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %32 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %33 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %32, i32 0, i32 31
  %34 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %30, %struct.sysctl_oid_list* %31, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.6, i64 0, i64 0), i32* %33, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7, i64 0, i64 0))
  %35 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %36 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %37 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %38 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %37, i32 0, i32 30
  %39 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %35, %struct.sysctl_oid_list* %36, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), i32* %38, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0))
  %40 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %41 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %42 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %43 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %42, i32 0, i32 29
  %44 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %40, %struct.sysctl_oid_list* %41, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0), i32* %43, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0))
  %45 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %46 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %47 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %48 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %47, i32 0, i32 28
  %49 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %45, %struct.sysctl_oid_list* %46, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0), i32* %48, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0))
  %50 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %51 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %52 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %53 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %52, i32 0, i32 27
  %54 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %50, %struct.sysctl_oid_list* %51, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0), i32* %53, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0))
  %55 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %56 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %9, align 8
  %57 = load i32, i32* @OID_AUTO, align 4
  %58 = load i32, i32* @CTLFLAG_RD, align 4
  %59 = call %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %55, %struct.sysctl_oid_list* %56, i32 %57, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.16, i64 0, i64 0), i32 %58, i32* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0))
  store %struct.sysctl_oid* %59, %struct.sysctl_oid** %7, align 8
  %60 = load %struct.sysctl_oid*, %struct.sysctl_oid** %7, align 8
  %61 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %60)
  store %struct.sysctl_oid_list* %61, %struct.sysctl_oid_list** %8, align 8
  %62 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %63 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %64 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %65 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %64, i32 0, i32 26
  %66 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %62, %struct.sysctl_oid_list* %63, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i32* %65, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0))
  %67 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %68 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %69 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %70 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %69, i32 0, i32 25
  %71 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %67, %struct.sysctl_oid_list* %68, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), i32* %70, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0))
  %72 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %73 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %74 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %75 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %74, i32 0, i32 24
  %76 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %72, %struct.sysctl_oid_list* %73, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0), i32* %75, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.22, i64 0, i64 0))
  %77 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %78 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %79 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %80 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %79, i32 0, i32 23
  %81 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %77, %struct.sysctl_oid_list* %78, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i64 0, i64 0), i32* %80, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0))
  %82 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %83 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %84 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %85 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %84, i32 0, i32 22
  %86 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %82, %struct.sysctl_oid_list* %83, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i64 0, i64 0), i32* %85, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.26, i64 0, i64 0))
  %87 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %88 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %89 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %90 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %89, i32 0, i32 21
  %91 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %87, %struct.sysctl_oid_list* %88, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i64 0, i64 0), i32* %90, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0))
  %92 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %93 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %94 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %95 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %94, i32 0, i32 20
  %96 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %92, %struct.sysctl_oid_list* %93, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i64 0, i64 0), i32* %95, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.30, i64 0, i64 0))
  %97 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %98 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %99 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %100 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %99, i32 0, i32 19
  %101 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %97, %struct.sysctl_oid_list* %98, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.31, i64 0, i64 0), i32* %100, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.32, i64 0, i64 0))
  %102 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %103 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %104 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %105 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %104, i32 0, i32 18
  %106 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %102, %struct.sysctl_oid_list* %103, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.33, i64 0, i64 0), i32* %105, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.34, i64 0, i64 0))
  %107 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %108 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %109 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %110 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %109, i32 0, i32 17
  %111 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %107, %struct.sysctl_oid_list* %108, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.35, i64 0, i64 0), i32* %110, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.36, i64 0, i64 0))
  %112 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %113 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %114 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %115 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %114, i32 0, i32 16
  %116 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %112, %struct.sysctl_oid_list* %113, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.37, i64 0, i64 0), i32* %115, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.38, i64 0, i64 0))
  %117 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %118 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %119 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %120 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %119, i32 0, i32 15
  %121 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %117, %struct.sysctl_oid_list* %118, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i64 0, i64 0), i32* %120, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i64 0, i64 0))
  %122 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %123 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %124 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %125 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %124, i32 0, i32 14
  %126 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %122, %struct.sysctl_oid_list* %123, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i64 0, i64 0), i32* %125, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.41, i64 0, i64 0))
  %127 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %128 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %129 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %130 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %129, i32 0, i32 13
  %131 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %127, %struct.sysctl_oid_list* %128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.42, i64 0, i64 0), i32* %130, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.43, i64 0, i64 0))
  %132 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %133 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %9, align 8
  %134 = load i32, i32* @OID_AUTO, align 4
  %135 = load i32, i32* @CTLFLAG_RD, align 4
  %136 = call %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %132, %struct.sysctl_oid_list* %133, i32 %134, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i64 0, i64 0), i32 %135, i32* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i64 0, i64 0))
  store %struct.sysctl_oid* %136, %struct.sysctl_oid** %7, align 8
  %137 = load %struct.sysctl_oid*, %struct.sysctl_oid** %7, align 8
  %138 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %137)
  store %struct.sysctl_oid_list* %138, %struct.sysctl_oid_list** %8, align 8
  %139 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %140 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %141 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %142 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %141, i32 0, i32 12
  %143 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %139, %struct.sysctl_oid_list* %140, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i64 0, i64 0), i32* %142, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.47, i64 0, i64 0))
  %144 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %145 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %146 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %147 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %146, i32 0, i32 11
  %148 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %144, %struct.sysctl_oid_list* %145, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.48, i64 0, i64 0), i32* %147, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.49, i64 0, i64 0))
  %149 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %150 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %151 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %152 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %151, i32 0, i32 10
  %153 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %149, %struct.sysctl_oid_list* %150, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.50, i64 0, i64 0), i32* %152, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i64 0, i64 0))
  %154 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %155 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %156 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %157 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %156, i32 0, i32 9
  %158 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %154, %struct.sysctl_oid_list* %155, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i64 0, i64 0), i32* %157, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.53, i64 0, i64 0))
  %159 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %160 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %161 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %162 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %161, i32 0, i32 8
  %163 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %159, %struct.sysctl_oid_list* %160, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.54, i64 0, i64 0), i32* %162, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.55, i64 0, i64 0))
  %164 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %165 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %166 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %167 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %166, i32 0, i32 7
  %168 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %164, %struct.sysctl_oid_list* %165, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.56, i64 0, i64 0), i32* %167, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.57, i64 0, i64 0))
  %169 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %170 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %171 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %172 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %171, i32 0, i32 6
  %173 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %169, %struct.sysctl_oid_list* %170, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.58, i64 0, i64 0), i32* %172, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.59, i64 0, i64 0))
  %174 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %175 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %176 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %177 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %176, i32 0, i32 5
  %178 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %174, %struct.sysctl_oid_list* %175, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.60, i64 0, i64 0), i32* %177, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.61, i64 0, i64 0))
  %179 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %180 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %181 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %182 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %181, i32 0, i32 4
  %183 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %179, %struct.sysctl_oid_list* %180, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.62, i64 0, i64 0), i32* %182, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.63, i64 0, i64 0))
  %184 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %185 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %186 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %187 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %186, i32 0, i32 3
  %188 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %184, %struct.sysctl_oid_list* %185, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.64, i64 0, i64 0), i32* %187, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.65, i64 0, i64 0))
  %189 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %190 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %191 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %192 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %191, i32 0, i32 2
  %193 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %189, %struct.sysctl_oid_list* %190, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i64 0, i64 0), i32* %192, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.66, i64 0, i64 0))
  %194 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %195 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %196 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %197 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %196, i32 0, i32 1
  %198 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %194, %struct.sysctl_oid_list* %195, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i64 0, i64 0), i32* %197, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.67, i64 0, i64 0))
  %199 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %5, align 8
  %200 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %201 = load %struct.bge_mac_stats*, %struct.bge_mac_stats** %10, align 8
  %202 = getelementptr inbounds %struct.bge_mac_stats, %struct.bge_mac_stats* %201, i32 0, i32 0
  %203 = call i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %199, %struct.sysctl_oid_list* %200, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i64 0, i64 0), i32* %202, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.68, i64 0, i64 0))
  ret void
}

declare dso_local %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, i32*, i8*) #1

declare dso_local %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid*) #1

declare dso_local i32 @BGE_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i8*, i32*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
