; ModuleID = '/home/carl/AnghaBench/freebsd/sys/dev/mlx4/mlx4_en/extr_mlx4_en_netdev.c_mlx4_en_sysctl_stat.c'
source_filename = "/home/carl/AnghaBench/freebsd/sys/dev/mlx4/mlx4_en/extr_mlx4_en_netdev.c_mlx4_en_sysctl_stat.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.mlx4_en_priv = type { i32, i32, %struct.mlx4_en_rx_ring**, %struct.mlx4_en_tx_ring**, %struct.TYPE_6__, %struct.TYPE_5__, %struct.TYPE_4__, %struct.sysctl_oid*, %struct.sysctl_oid*, %struct.sysctl_ctx_list }
%struct.mlx4_en_rx_ring = type { i32, i32, i32 }
%struct.mlx4_en_tx_ring = type { i32, i32, i32, i32 }
%struct.TYPE_6__ = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.TYPE_5__ = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.TYPE_4__ = type { i32, i32, i32, i32, i32 }
%struct.sysctl_oid = type { i32 }
%struct.sysctl_ctx_list = type { i32 }
%struct.sysctl_oid_list = type { i32 }

@OID_AUTO = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [5 x i8] c"stat\00", align 1
@CTLFLAG_RD = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [11 x i8] c"Statistics\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"tso_packets\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"TSO packets sent\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"queue_stopped\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"Queue full\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"wake_queue\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"Queue resumed after full\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"tx_timeout\00", align 1
@.str.9 = private unnamed_addr constant [18 x i8] c"Transmit timeouts\00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"tx_oversized_packets\00", align 1
@.str.11 = private unnamed_addr constant [38 x i8] c"TX oversized packets, m_defrag failed\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"rx_alloc_failed\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"RX failed to allocate mbuf\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"rx_chksum_good\00", align 1
@.str.15 = private unnamed_addr constant [28 x i8] c"RX checksum offload success\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"rx_chksum_none\00", align 1
@.str.17 = private unnamed_addr constant [28 x i8] c"RX without checksum offload\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c"tx_chksum_offload\00", align 1
@.str.19 = private unnamed_addr constant [21 x i8] c"TX checksum offloads\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"defrag_attempts\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"Oversized chains defragged\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"rx_bytes\00", align 1
@.str.23 = private unnamed_addr constant [9 x i8] c"RX Bytes\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"rx_packets\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"RX packets\00", align 1
@.str.26 = private unnamed_addr constant [21 x i8] c"rx_multicast_packets\00", align 1
@.str.27 = private unnamed_addr constant [21 x i8] c"RX Multicast Packets\00", align 1
@.str.28 = private unnamed_addr constant [21 x i8] c"rx_broadcast_packets\00", align 1
@.str.29 = private unnamed_addr constant [21 x i8] c"RX Broadcast Packets\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"rx_errors\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"RX Errors\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"rx_dropped\00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"RX Dropped\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"rx_length_errors\00", align 1
@.str.35 = private unnamed_addr constant [17 x i8] c"RX Length Errors\00", align 1
@.str.36 = private unnamed_addr constant [15 x i8] c"rx_over_errors\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"RX Over Errors\00", align 1
@.str.38 = private unnamed_addr constant [14 x i8] c"rx_crc_errors\00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"RX CRC Errors\00", align 1
@.str.40 = private unnamed_addr constant [11 x i8] c"rx_jabbers\00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"RX Jabbers\00", align 1
@.str.42 = private unnamed_addr constant [25 x i8] c"rx_in_range_length_error\00", align 1
@.str.43 = private unnamed_addr constant [25 x i8] c"RX IN_Range Length Error\00", align 1
@.str.44 = private unnamed_addr constant [26 x i8] c"rx_out_range_length_error\00", align 1
@.str.45 = private unnamed_addr constant [26 x i8] c"RX Out Range Length Error\00", align 1
@.str.46 = private unnamed_addr constant [23 x i8] c"rx_lt_64_bytes_packets\00", align 1
@.str.47 = private unnamed_addr constant [23 x i8] c"RX Lt 64 Bytes Packets\00", align 1
@.str.48 = private unnamed_addr constant [21 x i8] c"rx_127_bytes_packets\00", align 1
@.str.49 = private unnamed_addr constant [21 x i8] c"RX 127 bytes Packets\00", align 1
@.str.50 = private unnamed_addr constant [21 x i8] c"rx_255_bytes_packets\00", align 1
@.str.51 = private unnamed_addr constant [21 x i8] c"RX 255 bytes Packets\00", align 1
@.str.52 = private unnamed_addr constant [21 x i8] c"rx_511_bytes_packets\00", align 1
@.str.53 = private unnamed_addr constant [21 x i8] c"RX 511 bytes Packets\00", align 1
@.str.54 = private unnamed_addr constant [22 x i8] c"rx_1023_bytes_packets\00", align 1
@.str.55 = private unnamed_addr constant [22 x i8] c"RX 1023 bytes Packets\00", align 1
@.str.56 = private unnamed_addr constant [22 x i8] c"rx_1518_bytes_packets\00", align 1
@.str.57 = private unnamed_addr constant [22 x i8] c"RX 1518 bytes Packets\00", align 1
@.str.58 = private unnamed_addr constant [22 x i8] c"rx_1522_bytes_packets\00", align 1
@.str.59 = private unnamed_addr constant [22 x i8] c"RX 1522 bytes Packets\00", align 1
@.str.60 = private unnamed_addr constant [22 x i8] c"rx_1548_bytes_packets\00", align 1
@.str.61 = private unnamed_addr constant [22 x i8] c"RX 1548 bytes Packets\00", align 1
@.str.62 = private unnamed_addr constant [25 x i8] c"rx_gt_1548_bytes_packets\00", align 1
@.str.63 = private unnamed_addr constant [35 x i8] c"RX Greater Then 1548 bytes Packets\00", align 1
@.str.64 = private unnamed_addr constant [11 x i8] c"tx_packets\00", align 1
@.str.65 = private unnamed_addr constant [11 x i8] c"TX packets\00", align 1
@.str.66 = private unnamed_addr constant [9 x i8] c"tx_bytes\00", align 1
@.str.67 = private unnamed_addr constant [9 x i8] c"TX Bytes\00", align 1
@.str.68 = private unnamed_addr constant [21 x i8] c"tx_multicast_packets\00", align 1
@.str.69 = private unnamed_addr constant [21 x i8] c"TX Multicast Packets\00", align 1
@.str.70 = private unnamed_addr constant [21 x i8] c"tx_broadcast_packets\00", align 1
@.str.71 = private unnamed_addr constant [21 x i8] c"TX Broadcast Packets\00", align 1
@.str.72 = private unnamed_addr constant [10 x i8] c"tx_errors\00", align 1
@.str.73 = private unnamed_addr constant [10 x i8] c"TX Errors\00", align 1
@.str.74 = private unnamed_addr constant [11 x i8] c"tx_dropped\00", align 1
@.str.75 = private unnamed_addr constant [11 x i8] c"TX Dropped\00", align 1
@.str.76 = private unnamed_addr constant [23 x i8] c"tx_lt_64_bytes_packets\00", align 1
@.str.77 = private unnamed_addr constant [30 x i8] c"TX Less Then 64 Bytes Packets\00", align 1
@.str.78 = private unnamed_addr constant [21 x i8] c"tx_127_bytes_packets\00", align 1
@.str.79 = private unnamed_addr constant [21 x i8] c"TX 127 Bytes Packets\00", align 1
@.str.80 = private unnamed_addr constant [21 x i8] c"tx_255_bytes_packets\00", align 1
@.str.81 = private unnamed_addr constant [21 x i8] c"TX 255 Bytes Packets\00", align 1
@.str.82 = private unnamed_addr constant [21 x i8] c"tx_511_bytes_packets\00", align 1
@.str.83 = private unnamed_addr constant [21 x i8] c"TX 511 Bytes Packets\00", align 1
@.str.84 = private unnamed_addr constant [22 x i8] c"tx_1023_bytes_packets\00", align 1
@.str.85 = private unnamed_addr constant [22 x i8] c"TX 1023 Bytes Packets\00", align 1
@.str.86 = private unnamed_addr constant [22 x i8] c"tx_1518_bytes_packets\00", align 1
@.str.87 = private unnamed_addr constant [22 x i8] c"TX 1518 Bytes Packets\00", align 1
@.str.88 = private unnamed_addr constant [22 x i8] c"tx_1522_bytes_packets\00", align 1
@.str.89 = private unnamed_addr constant [22 x i8] c"TX 1522 Bytes Packets\00", align 1
@.str.90 = private unnamed_addr constant [22 x i8] c"tx_1548_bytes_packets\00", align 1
@.str.91 = private unnamed_addr constant [22 x i8] c"TX 1548 Bytes Packets\00", align 1
@.str.92 = private unnamed_addr constant [25 x i8] c"tx_gt_1548_bytes_packets\00", align 1
@.str.93 = private unnamed_addr constant [35 x i8] c"TX Greater Then 1548 Bytes Packets\00", align 1
@.str.94 = private unnamed_addr constant [10 x i8] c"tx_ring%d\00", align 1
@.str.95 = private unnamed_addr constant [8 x i8] c"TX Ring\00", align 1
@.str.96 = private unnamed_addr constant [8 x i8] c"packets\00", align 1
@.str.97 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.98 = private unnamed_addr constant [9 x i8] c"TX bytes\00", align 1
@.str.99 = private unnamed_addr constant [12 x i8] c"TSO packets\00", align 1
@.str.100 = private unnamed_addr constant [10 x i8] c"rx_ring%d\00", align 1
@.str.101 = private unnamed_addr constant [8 x i8] c"RX Ring\00", align 1
@.str.102 = private unnamed_addr constant [9 x i8] c"RX bytes\00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.104 = private unnamed_addr constant [15 x i8] c"RX soft errors\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.mlx4_en_priv*)* @mlx4_en_sysctl_stat to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @mlx4_en_sysctl_stat(%struct.mlx4_en_priv* %0) #0 {
  %2 = alloca %struct.mlx4_en_priv*, align 8
  %3 = alloca %struct.sysctl_ctx_list*, align 8
  %4 = alloca %struct.sysctl_oid_list*, align 8
  %5 = alloca %struct.sysctl_oid*, align 8
  %6 = alloca %struct.sysctl_oid_list*, align 8
  %7 = alloca %struct.mlx4_en_tx_ring*, align 8
  %8 = alloca %struct.mlx4_en_rx_ring*, align 8
  %9 = alloca [128 x i8], align 16
  %10 = alloca i32, align 4
  store %struct.mlx4_en_priv* %0, %struct.mlx4_en_priv** %2, align 8
  %11 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %12 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %11, i32 0, i32 9
  store %struct.sysctl_ctx_list* %12, %struct.sysctl_ctx_list** %3, align 8
  %13 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %14 = call i32 @sysctl_ctx_init(%struct.sysctl_ctx_list* %13)
  %15 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %16 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %17 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %16, i32 0, i32 8
  %18 = load %struct.sysctl_oid*, %struct.sysctl_oid** %17, align 8
  %19 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %18)
  %20 = load i32, i32* @OID_AUTO, align 4
  %21 = load i32, i32* @CTLFLAG_RD, align 4
  %22 = call i8* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %15, %struct.sysctl_oid_list* %19, i32 %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i32 %21, i32* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0))
  %23 = bitcast i8* %22 to %struct.sysctl_oid*
  %24 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %25 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %24, i32 0, i32 7
  store %struct.sysctl_oid* %23, %struct.sysctl_oid** %25, align 8
  %26 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %27 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %26, i32 0, i32 7
  %28 = load %struct.sysctl_oid*, %struct.sysctl_oid** %27, align 8
  %29 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %28)
  store %struct.sysctl_oid_list* %29, %struct.sysctl_oid_list** %4, align 8
  %30 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %31 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %32 = load i32, i32* @OID_AUTO, align 4
  %33 = load i32, i32* @CTLFLAG_RD, align 4
  %34 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %35 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %34, i32 0, i32 5
  %36 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %35, i32 0, i32 9
  %37 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %30, %struct.sysctl_oid_list* %31, i32 %32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32 %33, i32* %36, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0))
  %38 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %39 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %40 = load i32, i32* @OID_AUTO, align 4
  %41 = load i32, i32* @CTLFLAG_RD, align 4
  %42 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %43 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %42, i32 0, i32 5
  %44 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %43, i32 0, i32 8
  %45 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %38, %struct.sysctl_oid_list* %39, i32 %40, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i32 %41, i32* %44, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0))
  %46 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %47 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %48 = load i32, i32* @OID_AUTO, align 4
  %49 = load i32, i32* @CTLFLAG_RD, align 4
  %50 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %51 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %50, i32 0, i32 5
  %52 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %51, i32 0, i32 7
  %53 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %46, %struct.sysctl_oid_list* %47, i32 %48, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i32 %49, i32* %52, i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0))
  %54 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %55 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %56 = load i32, i32* @OID_AUTO, align 4
  %57 = load i32, i32* @CTLFLAG_RD, align 4
  %58 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %59 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %58, i32 0, i32 5
  %60 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %59, i32 0, i32 6
  %61 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %54, %struct.sysctl_oid_list* %55, i32 %56, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i64 0, i64 0), i32 %57, i32* %60, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0))
  %62 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %63 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %64 = load i32, i32* @OID_AUTO, align 4
  %65 = load i32, i32* @CTLFLAG_RD, align 4
  %66 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %67 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %66, i32 0, i32 5
  %68 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %67, i32 0, i32 5
  %69 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %62, %struct.sysctl_oid_list* %63, i32 %64, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 %65, i32* %68, i32 0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11, i64 0, i64 0))
  %70 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %71 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %72 = load i32, i32* @OID_AUTO, align 4
  %73 = load i32, i32* @CTLFLAG_RD, align 4
  %74 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %75 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %74, i32 0, i32 5
  %76 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %75, i32 0, i32 4
  %77 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %70, %struct.sysctl_oid_list* %71, i32 %72, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i32 %73, i32* %76, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0))
  %78 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %79 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %80 = load i32, i32* @OID_AUTO, align 4
  %81 = load i32, i32* @CTLFLAG_RD, align 4
  %82 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %83 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %82, i32 0, i32 5
  %84 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %83, i32 0, i32 3
  %85 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %78, %struct.sysctl_oid_list* %79, i32 %80, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0), i32 %81, i32* %84, i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0))
  %86 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %87 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %88 = load i32, i32* @OID_AUTO, align 4
  %89 = load i32, i32* @CTLFLAG_RD, align 4
  %90 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %91 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %90, i32 0, i32 5
  %92 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %91, i32 0, i32 2
  %93 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %86, %struct.sysctl_oid_list* %87, i32 %88, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0), i32 %89, i32* %92, i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.17, i64 0, i64 0))
  %94 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %95 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %96 = load i32, i32* @OID_AUTO, align 4
  %97 = load i32, i32* @CTLFLAG_RD, align 4
  %98 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %99 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %98, i32 0, i32 5
  %100 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %99, i32 0, i32 1
  %101 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %94, %struct.sysctl_oid_list* %95, i32 %96, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i32 %97, i32* %100, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i64 0, i64 0))
  %102 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %103 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %104 = load i32, i32* @OID_AUTO, align 4
  %105 = load i32, i32* @CTLFLAG_RD, align 4
  %106 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %107 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %106, i32 0, i32 5
  %108 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %107, i32 0, i32 0
  %109 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %102, %struct.sysctl_oid_list* %103, i32 %104, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i32 %105, i32* %108, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0))
  %110 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %111 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %112 = load i32, i32* @OID_AUTO, align 4
  %113 = load i32, i32* @CTLFLAG_RD, align 4
  %114 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %115 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %114, i32 0, i32 4
  %116 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %115, i32 0, i32 35
  %117 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %110, %struct.sysctl_oid_list* %111, i32 %112, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i64 0, i64 0), i32 %113, i32* %116, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0))
  %118 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %119 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %120 = load i32, i32* @OID_AUTO, align 4
  %121 = load i32, i32* @CTLFLAG_RD, align 4
  %122 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %123 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %122, i32 0, i32 4
  %124 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %123, i32 0, i32 34
  %125 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %118, %struct.sysctl_oid_list* %119, i32 %120, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0), i32 %121, i32* %124, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0))
  %126 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %127 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %128 = load i32, i32* @OID_AUTO, align 4
  %129 = load i32, i32* @CTLFLAG_RD, align 4
  %130 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %131 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %130, i32 0, i32 4
  %132 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %131, i32 0, i32 33
  %133 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %126, %struct.sysctl_oid_list* %127, i32 %128, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.26, i64 0, i64 0), i32 %129, i32* %132, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.27, i64 0, i64 0))
  %134 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %135 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %136 = load i32, i32* @OID_AUTO, align 4
  %137 = load i32, i32* @CTLFLAG_RD, align 4
  %138 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %139 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %138, i32 0, i32 4
  %140 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %139, i32 0, i32 32
  %141 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %134, %struct.sysctl_oid_list* %135, i32 %136, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.28, i64 0, i64 0), i32 %137, i32* %140, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0))
  %142 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %143 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %144 = load i32, i32* @OID_AUTO, align 4
  %145 = load i32, i32* @CTLFLAG_RD, align 4
  %146 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %147 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %146, i32 0, i32 4
  %148 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %147, i32 0, i32 31
  %149 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %142, %struct.sysctl_oid_list* %143, i32 %144, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0), i32 %145, i32* %148, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0))
  %150 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %151 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %152 = load i32, i32* @OID_AUTO, align 4
  %153 = load i32, i32* @CTLFLAG_RD, align 4
  %154 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %155 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %154, i32 0, i32 4
  %156 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %155, i32 0, i32 30
  %157 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %150, %struct.sysctl_oid_list* %151, i32 %152, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0), i32 %153, i32* %156, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0))
  %158 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %159 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %160 = load i32, i32* @OID_AUTO, align 4
  %161 = load i32, i32* @CTLFLAG_RD, align 4
  %162 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %163 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %162, i32 0, i32 4
  %164 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %163, i32 0, i32 29
  %165 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %158, %struct.sysctl_oid_list* %159, i32 %160, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i64 0, i64 0), i32 %161, i32* %164, i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i64 0, i64 0))
  %166 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %167 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %168 = load i32, i32* @OID_AUTO, align 4
  %169 = load i32, i32* @CTLFLAG_RD, align 4
  %170 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %171 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %170, i32 0, i32 4
  %172 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %171, i32 0, i32 28
  %173 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %166, %struct.sysctl_oid_list* %167, i32 %168, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.36, i64 0, i64 0), i32 %169, i32* %172, i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0))
  %174 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %175 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %176 = load i32, i32* @OID_AUTO, align 4
  %177 = load i32, i32* @CTLFLAG_RD, align 4
  %178 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %179 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %178, i32 0, i32 4
  %180 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %179, i32 0, i32 27
  %181 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %174, %struct.sysctl_oid_list* %175, i32 %176, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.38, i64 0, i64 0), i32 %177, i32* %180, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i64 0, i64 0))
  %182 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %183 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %184 = load i32, i32* @OID_AUTO, align 4
  %185 = load i32, i32* @CTLFLAG_RD, align 4
  %186 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %187 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %186, i32 0, i32 4
  %188 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %187, i32 0, i32 26
  %189 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %182, %struct.sysctl_oid_list* %183, i32 %184, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40, i64 0, i64 0), i32 %185, i32* %188, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0))
  %190 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %191 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %192 = load i32, i32* @OID_AUTO, align 4
  %193 = load i32, i32* @CTLFLAG_RD, align 4
  %194 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %195 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %194, i32 0, i32 4
  %196 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %195, i32 0, i32 25
  %197 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %190, %struct.sysctl_oid_list* %191, i32 %192, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.42, i64 0, i64 0), i32 %193, i32* %196, i32 0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.43, i64 0, i64 0))
  %198 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %199 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %200 = load i32, i32* @OID_AUTO, align 4
  %201 = load i32, i32* @CTLFLAG_RD, align 4
  %202 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %203 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %202, i32 0, i32 4
  %204 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %203, i32 0, i32 24
  %205 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %198, %struct.sysctl_oid_list* %199, i32 %200, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.44, i64 0, i64 0), i32 %201, i32* %204, i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.45, i64 0, i64 0))
  %206 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %207 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %208 = load i32, i32* @OID_AUTO, align 4
  %209 = load i32, i32* @CTLFLAG_RD, align 4
  %210 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %211 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %210, i32 0, i32 4
  %212 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %211, i32 0, i32 23
  %213 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %206, %struct.sysctl_oid_list* %207, i32 %208, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.46, i64 0, i64 0), i32 %209, i32* %212, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.47, i64 0, i64 0))
  %214 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %215 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %216 = load i32, i32* @OID_AUTO, align 4
  %217 = load i32, i32* @CTLFLAG_RD, align 4
  %218 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %219 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %218, i32 0, i32 4
  %220 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %219, i32 0, i32 22
  %221 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %214, %struct.sysctl_oid_list* %215, i32 %216, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.48, i64 0, i64 0), i32 %217, i32* %220, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0))
  %222 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %223 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %224 = load i32, i32* @OID_AUTO, align 4
  %225 = load i32, i32* @CTLFLAG_RD, align 4
  %226 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %227 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %226, i32 0, i32 4
  %228 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %227, i32 0, i32 21
  %229 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %222, %struct.sysctl_oid_list* %223, i32 %224, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.50, i64 0, i64 0), i32 %225, i32* %228, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.51, i64 0, i64 0))
  %230 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %231 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %232 = load i32, i32* @OID_AUTO, align 4
  %233 = load i32, i32* @CTLFLAG_RD, align 4
  %234 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %235 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %234, i32 0, i32 4
  %236 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %235, i32 0, i32 20
  %237 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %230, %struct.sysctl_oid_list* %231, i32 %232, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.52, i64 0, i64 0), i32 %233, i32* %236, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.53, i64 0, i64 0))
  %238 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %239 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %240 = load i32, i32* @OID_AUTO, align 4
  %241 = load i32, i32* @CTLFLAG_RD, align 4
  %242 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %243 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %242, i32 0, i32 4
  %244 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %243, i32 0, i32 19
  %245 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %238, %struct.sysctl_oid_list* %239, i32 %240, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.54, i64 0, i64 0), i32 %241, i32* %244, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.55, i64 0, i64 0))
  %246 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %247 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %248 = load i32, i32* @OID_AUTO, align 4
  %249 = load i32, i32* @CTLFLAG_RD, align 4
  %250 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %251 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %250, i32 0, i32 4
  %252 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %251, i32 0, i32 18
  %253 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %246, %struct.sysctl_oid_list* %247, i32 %248, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.56, i64 0, i64 0), i32 %249, i32* %252, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.57, i64 0, i64 0))
  %254 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %255 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %256 = load i32, i32* @OID_AUTO, align 4
  %257 = load i32, i32* @CTLFLAG_RD, align 4
  %258 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %259 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %258, i32 0, i32 4
  %260 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %259, i32 0, i32 17
  %261 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %254, %struct.sysctl_oid_list* %255, i32 %256, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.58, i64 0, i64 0), i32 %257, i32* %260, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.59, i64 0, i64 0))
  %262 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %263 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %264 = load i32, i32* @OID_AUTO, align 4
  %265 = load i32, i32* @CTLFLAG_RD, align 4
  %266 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %267 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %266, i32 0, i32 4
  %268 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %267, i32 0, i32 16
  %269 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %262, %struct.sysctl_oid_list* %263, i32 %264, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.60, i64 0, i64 0), i32 %265, i32* %268, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.61, i64 0, i64 0))
  %270 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %271 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %272 = load i32, i32* @OID_AUTO, align 4
  %273 = load i32, i32* @CTLFLAG_RD, align 4
  %274 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %275 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %274, i32 0, i32 4
  %276 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %275, i32 0, i32 15
  %277 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %270, %struct.sysctl_oid_list* %271, i32 %272, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.62, i64 0, i64 0), i32 %273, i32* %276, i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.63, i64 0, i64 0))
  %278 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %279 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %280 = load i32, i32* @OID_AUTO, align 4
  %281 = load i32, i32* @CTLFLAG_RD, align 4
  %282 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %283 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %282, i32 0, i32 4
  %284 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %283, i32 0, i32 14
  %285 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %278, %struct.sysctl_oid_list* %279, i32 %280, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i64 0, i64 0), i32 %281, i32* %284, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i64 0, i64 0))
  %286 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %287 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %288 = load i32, i32* @OID_AUTO, align 4
  %289 = load i32, i32* @CTLFLAG_RD, align 4
  %290 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %291 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %290, i32 0, i32 4
  %292 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %291, i32 0, i32 13
  %293 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %286, %struct.sysctl_oid_list* %287, i32 %288, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.66, i64 0, i64 0), i32 %289, i32* %292, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.67, i64 0, i64 0))
  %294 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %295 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %296 = load i32, i32* @OID_AUTO, align 4
  %297 = load i32, i32* @CTLFLAG_RD, align 4
  %298 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %299 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %298, i32 0, i32 4
  %300 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %299, i32 0, i32 12
  %301 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %294, %struct.sysctl_oid_list* %295, i32 %296, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.68, i64 0, i64 0), i32 %297, i32* %300, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.69, i64 0, i64 0))
  %302 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %303 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %304 = load i32, i32* @OID_AUTO, align 4
  %305 = load i32, i32* @CTLFLAG_RD, align 4
  %306 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %307 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %306, i32 0, i32 4
  %308 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %307, i32 0, i32 11
  %309 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %302, %struct.sysctl_oid_list* %303, i32 %304, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.70, i64 0, i64 0), i32 %305, i32* %308, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.71, i64 0, i64 0))
  %310 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %311 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %312 = load i32, i32* @OID_AUTO, align 4
  %313 = load i32, i32* @CTLFLAG_RD, align 4
  %314 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %315 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %314, i32 0, i32 4
  %316 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %315, i32 0, i32 10
  %317 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %310, %struct.sysctl_oid_list* %311, i32 %312, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.72, i64 0, i64 0), i32 %313, i32* %316, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.73, i64 0, i64 0))
  %318 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %319 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %320 = load i32, i32* @OID_AUTO, align 4
  %321 = load i32, i32* @CTLFLAG_RD, align 4
  %322 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %323 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %322, i32 0, i32 4
  %324 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %323, i32 0, i32 9
  %325 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %318, %struct.sysctl_oid_list* %319, i32 %320, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.74, i64 0, i64 0), i32 %321, i32* %324, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.75, i64 0, i64 0))
  %326 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %327 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %328 = load i32, i32* @OID_AUTO, align 4
  %329 = load i32, i32* @CTLFLAG_RD, align 4
  %330 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %331 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %330, i32 0, i32 4
  %332 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %331, i32 0, i32 8
  %333 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %326, %struct.sysctl_oid_list* %327, i32 %328, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.76, i64 0, i64 0), i32 %329, i32* %332, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.77, i64 0, i64 0))
  %334 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %335 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %336 = load i32, i32* @OID_AUTO, align 4
  %337 = load i32, i32* @CTLFLAG_RD, align 4
  %338 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %339 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %338, i32 0, i32 4
  %340 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %339, i32 0, i32 7
  %341 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %334, %struct.sysctl_oid_list* %335, i32 %336, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.78, i64 0, i64 0), i32 %337, i32* %340, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.79, i64 0, i64 0))
  %342 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %343 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %344 = load i32, i32* @OID_AUTO, align 4
  %345 = load i32, i32* @CTLFLAG_RD, align 4
  %346 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %347 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %346, i32 0, i32 4
  %348 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %347, i32 0, i32 6
  %349 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %342, %struct.sysctl_oid_list* %343, i32 %344, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.80, i64 0, i64 0), i32 %345, i32* %348, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.81, i64 0, i64 0))
  %350 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %351 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %352 = load i32, i32* @OID_AUTO, align 4
  %353 = load i32, i32* @CTLFLAG_RD, align 4
  %354 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %355 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %354, i32 0, i32 4
  %356 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %355, i32 0, i32 5
  %357 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %350, %struct.sysctl_oid_list* %351, i32 %352, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.82, i64 0, i64 0), i32 %353, i32* %356, i32 0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.83, i64 0, i64 0))
  %358 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %359 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %360 = load i32, i32* @OID_AUTO, align 4
  %361 = load i32, i32* @CTLFLAG_RD, align 4
  %362 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %363 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %362, i32 0, i32 4
  %364 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %363, i32 0, i32 4
  %365 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %358, %struct.sysctl_oid_list* %359, i32 %360, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.84, i64 0, i64 0), i32 %361, i32* %364, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.85, i64 0, i64 0))
  %366 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %367 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %368 = load i32, i32* @OID_AUTO, align 4
  %369 = load i32, i32* @CTLFLAG_RD, align 4
  %370 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %371 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %370, i32 0, i32 4
  %372 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %371, i32 0, i32 3
  %373 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %366, %struct.sysctl_oid_list* %367, i32 %368, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.86, i64 0, i64 0), i32 %369, i32* %372, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.87, i64 0, i64 0))
  %374 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %375 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %376 = load i32, i32* @OID_AUTO, align 4
  %377 = load i32, i32* @CTLFLAG_RD, align 4
  %378 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %379 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %378, i32 0, i32 4
  %380 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %379, i32 0, i32 2
  %381 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %374, %struct.sysctl_oid_list* %375, i32 %376, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.88, i64 0, i64 0), i32 %377, i32* %380, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.89, i64 0, i64 0))
  %382 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %383 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %384 = load i32, i32* @OID_AUTO, align 4
  %385 = load i32, i32* @CTLFLAG_RD, align 4
  %386 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %387 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %386, i32 0, i32 4
  %388 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %387, i32 0, i32 1
  %389 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %382, %struct.sysctl_oid_list* %383, i32 %384, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.90, i64 0, i64 0), i32 %385, i32* %388, i32 0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.91, i64 0, i64 0))
  %390 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %391 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %392 = load i32, i32* @OID_AUTO, align 4
  %393 = load i32, i32* @CTLFLAG_RD, align 4
  %394 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %395 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %394, i32 0, i32 4
  %396 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %395, i32 0, i32 0
  %397 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %390, %struct.sysctl_oid_list* %391, i32 %392, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.92, i64 0, i64 0), i32 %393, i32* %396, i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.93, i64 0, i64 0))
  store i32 0, i32* %10, align 4
  br label %398

398:                                              ; preds = %452, %1
  %399 = load i32, i32* %10, align 4
  %400 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %401 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %400, i32 0, i32 0
  %402 = load i32, i32* %401, align 8
  %403 = icmp slt i32 %399, %402
  br i1 %403, label %404, label %455

404:                                              ; preds = %398
  %405 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %406 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %405, i32 0, i32 3
  %407 = load %struct.mlx4_en_tx_ring**, %struct.mlx4_en_tx_ring*** %406, align 8
  %408 = load i32, i32* %10, align 4
  %409 = sext i32 %408 to i64
  %410 = getelementptr inbounds %struct.mlx4_en_tx_ring*, %struct.mlx4_en_tx_ring** %407, i64 %409
  %411 = load %struct.mlx4_en_tx_ring*, %struct.mlx4_en_tx_ring** %410, align 8
  store %struct.mlx4_en_tx_ring* %411, %struct.mlx4_en_tx_ring** %7, align 8
  %412 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 0
  %413 = load i32, i32* %10, align 4
  %414 = call i32 @snprintf(i8* %412, i32 128, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.94, i64 0, i64 0), i32 %413)
  %415 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %416 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %417 = load i32, i32* @OID_AUTO, align 4
  %418 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 0
  %419 = load i32, i32* @CTLFLAG_RD, align 4
  %420 = call i8* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %415, %struct.sysctl_oid_list* %416, i32 %417, i8* %418, i32 %419, i32* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.95, i64 0, i64 0))
  %421 = bitcast i8* %420 to %struct.sysctl_oid*
  store %struct.sysctl_oid* %421, %struct.sysctl_oid** %5, align 8
  %422 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %423 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %422)
  store %struct.sysctl_oid_list* %423, %struct.sysctl_oid_list** %6, align 8
  %424 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %425 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %426 = load i32, i32* @OID_AUTO, align 4
  %427 = load i32, i32* @CTLFLAG_RD, align 4
  %428 = load %struct.mlx4_en_tx_ring*, %struct.mlx4_en_tx_ring** %7, align 8
  %429 = getelementptr inbounds %struct.mlx4_en_tx_ring, %struct.mlx4_en_tx_ring* %428, i32 0, i32 3
  %430 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %424, %struct.sysctl_oid_list* %425, i32 %426, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96, i64 0, i64 0), i32 %427, i32* %429, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i64 0, i64 0))
  %431 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %432 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %433 = load i32, i32* @OID_AUTO, align 4
  %434 = load i32, i32* @CTLFLAG_RD, align 4
  %435 = load %struct.mlx4_en_tx_ring*, %struct.mlx4_en_tx_ring** %7, align 8
  %436 = getelementptr inbounds %struct.mlx4_en_tx_ring, %struct.mlx4_en_tx_ring* %435, i32 0, i32 2
  %437 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %431, %struct.sysctl_oid_list* %432, i32 %433, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97, i64 0, i64 0), i32 %434, i32* %436, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.98, i64 0, i64 0))
  %438 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %439 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %440 = load i32, i32* @OID_AUTO, align 4
  %441 = load i32, i32* @CTLFLAG_RD, align 4
  %442 = load %struct.mlx4_en_tx_ring*, %struct.mlx4_en_tx_ring** %7, align 8
  %443 = getelementptr inbounds %struct.mlx4_en_tx_ring, %struct.mlx4_en_tx_ring* %442, i32 0, i32 1
  %444 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %438, %struct.sysctl_oid_list* %439, i32 %440, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32 %441, i32* %443, i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.99, i64 0, i64 0))
  %445 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %446 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %447 = load i32, i32* @OID_AUTO, align 4
  %448 = load i32, i32* @CTLFLAG_RD, align 4
  %449 = load %struct.mlx4_en_tx_ring*, %struct.mlx4_en_tx_ring** %7, align 8
  %450 = getelementptr inbounds %struct.mlx4_en_tx_ring, %struct.mlx4_en_tx_ring* %449, i32 0, i32 0
  %451 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %445, %struct.sysctl_oid_list* %446, i32 %447, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i32 %448, i32* %450, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0))
  br label %452

452:                                              ; preds = %404
  %453 = load i32, i32* %10, align 4
  %454 = add nsw i32 %453, 1
  store i32 %454, i32* %10, align 4
  br label %398

455:                                              ; preds = %398
  store i32 0, i32* %10, align 4
  br label %456

456:                                              ; preds = %503, %455
  %457 = load i32, i32* %10, align 4
  %458 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %459 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %458, i32 0, i32 1
  %460 = load i32, i32* %459, align 4
  %461 = icmp slt i32 %457, %460
  br i1 %461, label %462, label %506

462:                                              ; preds = %456
  %463 = load %struct.mlx4_en_priv*, %struct.mlx4_en_priv** %2, align 8
  %464 = getelementptr inbounds %struct.mlx4_en_priv, %struct.mlx4_en_priv* %463, i32 0, i32 2
  %465 = load %struct.mlx4_en_rx_ring**, %struct.mlx4_en_rx_ring*** %464, align 8
  %466 = load i32, i32* %10, align 4
  %467 = sext i32 %466 to i64
  %468 = getelementptr inbounds %struct.mlx4_en_rx_ring*, %struct.mlx4_en_rx_ring** %465, i64 %467
  %469 = load %struct.mlx4_en_rx_ring*, %struct.mlx4_en_rx_ring** %468, align 8
  store %struct.mlx4_en_rx_ring* %469, %struct.mlx4_en_rx_ring** %8, align 8
  %470 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 0
  %471 = load i32, i32* %10, align 4
  %472 = call i32 @snprintf(i8* %470, i32 128, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.100, i64 0, i64 0), i32 %471)
  %473 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %474 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %475 = load i32, i32* @OID_AUTO, align 4
  %476 = getelementptr inbounds [128 x i8], [128 x i8]* %9, i64 0, i64 0
  %477 = load i32, i32* @CTLFLAG_RD, align 4
  %478 = call i8* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %473, %struct.sysctl_oid_list* %474, i32 %475, i8* %476, i32 %477, i32* null, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.101, i64 0, i64 0))
  %479 = bitcast i8* %478 to %struct.sysctl_oid*
  store %struct.sysctl_oid* %479, %struct.sysctl_oid** %5, align 8
  %480 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %481 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %480)
  store %struct.sysctl_oid_list* %481, %struct.sysctl_oid_list** %6, align 8
  %482 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %483 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %484 = load i32, i32* @OID_AUTO, align 4
  %485 = load i32, i32* @CTLFLAG_RD, align 4
  %486 = load %struct.mlx4_en_rx_ring*, %struct.mlx4_en_rx_ring** %8, align 8
  %487 = getelementptr inbounds %struct.mlx4_en_rx_ring, %struct.mlx4_en_rx_ring* %486, i32 0, i32 2
  %488 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %482, %struct.sysctl_oid_list* %483, i32 %484, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96, i64 0, i64 0), i32 %485, i32* %487, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0))
  %489 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %490 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %491 = load i32, i32* @OID_AUTO, align 4
  %492 = load i32, i32* @CTLFLAG_RD, align 4
  %493 = load %struct.mlx4_en_rx_ring*, %struct.mlx4_en_rx_ring** %8, align 8
  %494 = getelementptr inbounds %struct.mlx4_en_rx_ring, %struct.mlx4_en_rx_ring* %493, i32 0, i32 1
  %495 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %489, %struct.sysctl_oid_list* %490, i32 %491, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97, i64 0, i64 0), i32 %492, i32* %494, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.102, i64 0, i64 0))
  %496 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %497 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %6, align 8
  %498 = load i32, i32* @OID_AUTO, align 4
  %499 = load i32, i32* @CTLFLAG_RD, align 4
  %500 = load %struct.mlx4_en_rx_ring*, %struct.mlx4_en_rx_ring** %8, align 8
  %501 = getelementptr inbounds %struct.mlx4_en_rx_ring, %struct.mlx4_en_rx_ring* %500, i32 0, i32 0
  %502 = call i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list* %496, %struct.sysctl_oid_list* %497, i32 %498, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i64 0, i64 0), i32 %499, i32* %501, i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.104, i64 0, i64 0))
  br label %503

503:                                              ; preds = %462
  %504 = load i32, i32* %10, align 4
  %505 = add nsw i32 %504, 1
  store i32 %505, i32* %10, align 4
  br label %456

506:                                              ; preds = %456
  ret void
}

declare dso_local i32 @sysctl_ctx_init(%struct.sysctl_ctx_list*) #1

declare dso_local i8* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, i32*, i8*) #1

declare dso_local %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid*) #1

declare dso_local i32 @SYSCTL_ADD_U64(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, i32*, i32, i8*) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
