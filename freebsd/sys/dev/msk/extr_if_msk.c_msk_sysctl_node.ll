; ModuleID = '/home/carl/AnghaBench/freebsd/sys/dev/msk/extr_if_msk.c_msk_sysctl_node.c'
source_filename = "/home/carl/AnghaBench/freebsd/sys/dev/msk/extr_if_msk.c_msk_sysctl_node.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.msk_if_softc = type { i32 }
%struct.sysctl_ctx_list = type { i32 }
%struct.sysctl_oid_list = type { i32 }
%struct.sysctl_oid = type { i32 }

@OID_AUTO = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [6 x i8] c"stats\00", align 1
@CTLFLAG_RD = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [15 x i8] c"MSK Statistics\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"rx\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"MSK RX Statistics\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"ucast_frames\00", align 1
@rx_ucast_frames = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [20 x i8] c"Good unicast frames\00", align 1
@.str.6 = private unnamed_addr constant [13 x i8] c"bcast_frames\00", align 1
@rx_bcast_frames = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [22 x i8] c"Good broadcast frames\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"pause_frames\00", align 1
@rx_pause_frames = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [13 x i8] c"Pause frames\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"mcast_frames\00", align 1
@rx_mcast_frames = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [17 x i8] c"Multicast frames\00", align 1
@.str.12 = private unnamed_addr constant [9 x i8] c"crc_errs\00", align 1
@rx_crc_errs = common dso_local global i32 0, align 4
@.str.13 = private unnamed_addr constant [11 x i8] c"CRC errors\00", align 1
@.str.14 = private unnamed_addr constant [12 x i8] c"good_octets\00", align 1
@rx_good_octets = common dso_local global i32 0, align 4
@.str.15 = private unnamed_addr constant [12 x i8] c"Good octets\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"bad_octets\00", align 1
@rx_bad_octets = common dso_local global i32 0, align 4
@.str.17 = private unnamed_addr constant [11 x i8] c"Bad octets\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"frames_64\00", align 1
@rx_pkts_64 = common dso_local global i32 0, align 4
@.str.19 = private unnamed_addr constant [16 x i8] c"64 bytes frames\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"frames_65_127\00", align 1
@rx_pkts_65_127 = common dso_local global i32 0, align 4
@.str.21 = private unnamed_addr constant [23 x i8] c"65 to 127 bytes frames\00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"frames_128_255\00", align 1
@rx_pkts_128_255 = common dso_local global i32 0, align 4
@.str.23 = private unnamed_addr constant [24 x i8] c"128 to 255 bytes frames\00", align 1
@.str.24 = private unnamed_addr constant [15 x i8] c"frames_256_511\00", align 1
@rx_pkts_256_511 = common dso_local global i32 0, align 4
@.str.25 = private unnamed_addr constant [24 x i8] c"256 to 511 bytes frames\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"frames_512_1023\00", align 1
@rx_pkts_512_1023 = common dso_local global i32 0, align 4
@.str.27 = private unnamed_addr constant [25 x i8] c"512 to 1023 bytes frames\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"frames_1024_1518\00", align 1
@rx_pkts_1024_1518 = common dso_local global i32 0, align 4
@.str.29 = private unnamed_addr constant [26 x i8] c"1024 to 1518 bytes frames\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"frames_1519_max\00", align 1
@rx_pkts_1519_max = common dso_local global i32 0, align 4
@.str.31 = private unnamed_addr constant [19 x i8] c"1519 to max frames\00", align 1
@.str.32 = private unnamed_addr constant [16 x i8] c"frames_too_long\00", align 1
@rx_pkts_too_long = common dso_local global i32 0, align 4
@.str.33 = private unnamed_addr constant [16 x i8] c"frames too long\00", align 1
@.str.34 = private unnamed_addr constant [8 x i8] c"jabbers\00", align 1
@rx_pkts_jabbers = common dso_local global i32 0, align 4
@.str.35 = private unnamed_addr constant [14 x i8] c"Jabber errors\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"overflows\00", align 1
@rx_fifo_oflows = common dso_local global i32 0, align 4
@.str.37 = private unnamed_addr constant [15 x i8] c"FIFO overflows\00", align 1
@.str.38 = private unnamed_addr constant [3 x i8] c"tx\00", align 1
@.str.39 = private unnamed_addr constant [18 x i8] c"MSK TX Statistics\00", align 1
@tx_ucast_frames = common dso_local global i32 0, align 4
@.str.40 = private unnamed_addr constant [15 x i8] c"Unicast frames\00", align 1
@tx_bcast_frames = common dso_local global i32 0, align 4
@.str.41 = private unnamed_addr constant [17 x i8] c"Broadcast frames\00", align 1
@tx_pause_frames = common dso_local global i32 0, align 4
@tx_mcast_frames = common dso_local global i32 0, align 4
@.str.42 = private unnamed_addr constant [7 x i8] c"octets\00", align 1
@tx_octets = common dso_local global i32 0, align 4
@.str.43 = private unnamed_addr constant [7 x i8] c"Octets\00", align 1
@tx_pkts_64 = common dso_local global i32 0, align 4
@tx_pkts_65_127 = common dso_local global i32 0, align 4
@tx_pkts_128_255 = common dso_local global i32 0, align 4
@tx_pkts_256_511 = common dso_local global i32 0, align 4
@tx_pkts_512_1023 = common dso_local global i32 0, align 4
@tx_pkts_1024_1518 = common dso_local global i32 0, align 4
@tx_pkts_1519_max = common dso_local global i32 0, align 4
@.str.44 = private unnamed_addr constant [6 x i8] c"colls\00", align 1
@tx_colls = common dso_local global i32 0, align 4
@.str.45 = private unnamed_addr constant [11 x i8] c"Collisions\00", align 1
@.str.46 = private unnamed_addr constant [11 x i8] c"late_colls\00", align 1
@tx_late_colls = common dso_local global i32 0, align 4
@.str.47 = private unnamed_addr constant [16 x i8] c"Late collisions\00", align 1
@.str.48 = private unnamed_addr constant [13 x i8] c"excess_colls\00", align 1
@tx_excess_colls = common dso_local global i32 0, align 4
@.str.49 = private unnamed_addr constant [21 x i8] c"Excessive collisions\00", align 1
@.str.50 = private unnamed_addr constant [12 x i8] c"multi_colls\00", align 1
@tx_multi_colls = common dso_local global i32 0, align 4
@.str.51 = private unnamed_addr constant [20 x i8] c"Multiple collisions\00", align 1
@.str.52 = private unnamed_addr constant [13 x i8] c"single_colls\00", align 1
@tx_single_colls = common dso_local global i32 0, align 4
@.str.53 = private unnamed_addr constant [18 x i8] c"Single collisions\00", align 1
@.str.54 = private unnamed_addr constant [11 x i8] c"underflows\00", align 1
@tx_underflows = common dso_local global i32 0, align 4
@.str.55 = private unnamed_addr constant [16 x i8] c"FIFO underflows\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.msk_if_softc*)* @msk_sysctl_node to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @msk_sysctl_node(%struct.msk_if_softc* %0) #0 {
  %2 = alloca %struct.msk_if_softc*, align 8
  %3 = alloca %struct.sysctl_ctx_list*, align 8
  %4 = alloca %struct.sysctl_oid_list*, align 8
  %5 = alloca %struct.sysctl_oid_list*, align 8
  %6 = alloca %struct.sysctl_oid*, align 8
  store %struct.msk_if_softc* %0, %struct.msk_if_softc** %2, align 8
  %7 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %8 = getelementptr inbounds %struct.msk_if_softc, %struct.msk_if_softc* %7, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = call %struct.sysctl_ctx_list* @device_get_sysctl_ctx(i32 %9)
  store %struct.sysctl_ctx_list* %10, %struct.sysctl_ctx_list** %3, align 8
  %11 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %12 = getelementptr inbounds %struct.msk_if_softc, %struct.msk_if_softc* %11, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = call %struct.sysctl_oid* @device_get_sysctl_tree(i32 %13)
  %15 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %14)
  store %struct.sysctl_oid_list* %15, %struct.sysctl_oid_list** %4, align 8
  %16 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %17 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %18 = load i32, i32* @OID_AUTO, align 4
  %19 = load i32, i32* @CTLFLAG_RD, align 4
  %20 = call %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %16, %struct.sysctl_oid_list* %17, i32 %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32 %19, i32* null, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0))
  store %struct.sysctl_oid* %20, %struct.sysctl_oid** %6, align 8
  %21 = load %struct.sysctl_oid*, %struct.sysctl_oid** %6, align 8
  %22 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %21)
  store %struct.sysctl_oid_list* %22, %struct.sysctl_oid_list** %5, align 8
  %23 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %24 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %5, align 8
  %25 = load i32, i32* @OID_AUTO, align 4
  %26 = load i32, i32* @CTLFLAG_RD, align 4
  %27 = call %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %23, %struct.sysctl_oid_list* %24, i32 %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i32 %26, i32* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0))
  store %struct.sysctl_oid* %27, %struct.sysctl_oid** %6, align 8
  %28 = load %struct.sysctl_oid*, %struct.sysctl_oid** %6, align 8
  %29 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %28)
  store %struct.sysctl_oid_list* %29, %struct.sysctl_oid_list** %4, align 8
  %30 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %31 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %32 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %33 = load i32, i32* @rx_ucast_frames, align 4
  %34 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %30, %struct.sysctl_ctx_list* %31, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), %struct.sysctl_oid_list* %32, i32 %33, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0))
  %35 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %36 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %37 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %38 = load i32, i32* @rx_bcast_frames, align 4
  %39 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %35, %struct.sysctl_ctx_list* %36, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), %struct.sysctl_oid_list* %37, i32 %38, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0))
  %40 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %41 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %42 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %43 = load i32, i32* @rx_pause_frames, align 4
  %44 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %40, %struct.sysctl_ctx_list* %41, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), %struct.sysctl_oid_list* %42, i32 %43, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0))
  %45 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %46 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %47 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %48 = load i32, i32* @rx_mcast_frames, align 4
  %49 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %45, %struct.sysctl_ctx_list* %46, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), %struct.sysctl_oid_list* %47, i32 %48, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0))
  %50 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %51 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %52 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %53 = load i32, i32* @rx_crc_errs, align 4
  %54 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %50, %struct.sysctl_ctx_list* %51, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), %struct.sysctl_oid_list* %52, i32 %53, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.13, i64 0, i64 0))
  %55 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %56 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %57 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %58 = load i32, i32* @rx_good_octets, align 4
  %59 = call i32 @MSK_SYSCTL_STAT64(%struct.msk_if_softc* %55, %struct.sysctl_ctx_list* %56, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14, i64 0, i64 0), %struct.sysctl_oid_list* %57, i32 %58, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i64 0, i64 0))
  %60 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %61 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %62 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %63 = load i32, i32* @rx_bad_octets, align 4
  %64 = call i32 @MSK_SYSCTL_STAT64(%struct.msk_if_softc* %60, %struct.sysctl_ctx_list* %61, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), %struct.sysctl_oid_list* %62, i32 %63, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0))
  %65 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %66 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %67 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %68 = load i32, i32* @rx_pkts_64, align 4
  %69 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %65, %struct.sysctl_ctx_list* %66, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), %struct.sysctl_oid_list* %67, i32 %68, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0))
  %70 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %71 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %72 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %73 = load i32, i32* @rx_pkts_65_127, align 4
  %74 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %70, %struct.sysctl_ctx_list* %71, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0), %struct.sysctl_oid_list* %72, i32 %73, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0))
  %75 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %76 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %77 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %78 = load i32, i32* @rx_pkts_128_255, align 4
  %79 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %75, %struct.sysctl_ctx_list* %76, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0), %struct.sysctl_oid_list* %77, i32 %78, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0))
  %80 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %81 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %82 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %83 = load i32, i32* @rx_pkts_256_511, align 4
  %84 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %80, %struct.sysctl_ctx_list* %81, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i64 0, i64 0), %struct.sysctl_oid_list* %82, i32 %83, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.25, i64 0, i64 0))
  %85 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %86 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %87 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %88 = load i32, i32* @rx_pkts_512_1023, align 4
  %89 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %85, %struct.sysctl_ctx_list* %86, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i64 0, i64 0), %struct.sysctl_oid_list* %87, i32 %88, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0))
  %90 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %91 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %92 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %93 = load i32, i32* @rx_pkts_1024_1518, align 4
  %94 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %90, %struct.sysctl_ctx_list* %91, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i64 0, i64 0), %struct.sysctl_oid_list* %92, i32 %93, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29, i64 0, i64 0))
  %95 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %96 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %97 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %98 = load i32, i32* @rx_pkts_1519_max, align 4
  %99 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %95, %struct.sysctl_ctx_list* %96, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0), %struct.sysctl_oid_list* %97, i32 %98, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.31, i64 0, i64 0))
  %100 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %101 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %102 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %103 = load i32, i32* @rx_pkts_too_long, align 4
  %104 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %100, %struct.sysctl_ctx_list* %101, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i64 0, i64 0), %struct.sysctl_oid_list* %102, i32 %103, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.33, i64 0, i64 0))
  %105 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %106 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %107 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %108 = load i32, i32* @rx_pkts_jabbers, align 4
  %109 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %105, %struct.sysctl_ctx_list* %106, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i64 0, i64 0), %struct.sysctl_oid_list* %107, i32 %108, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.35, i64 0, i64 0))
  %110 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %111 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %112 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %113 = load i32, i32* @rx_fifo_oflows, align 4
  %114 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %110, %struct.sysctl_ctx_list* %111, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i64 0, i64 0), %struct.sysctl_oid_list* %112, i32 %113, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i64 0, i64 0))
  %115 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %116 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %5, align 8
  %117 = load i32, i32* @OID_AUTO, align 4
  %118 = load i32, i32* @CTLFLAG_RD, align 4
  %119 = call %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %115, %struct.sysctl_oid_list* %116, i32 %117, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.38, i64 0, i64 0), i32 %118, i32* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.39, i64 0, i64 0))
  store %struct.sysctl_oid* %119, %struct.sysctl_oid** %6, align 8
  %120 = load %struct.sysctl_oid*, %struct.sysctl_oid** %6, align 8
  %121 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %120)
  store %struct.sysctl_oid_list* %121, %struct.sysctl_oid_list** %4, align 8
  %122 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %123 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %124 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %125 = load i32, i32* @tx_ucast_frames, align 4
  %126 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %122, %struct.sysctl_ctx_list* %123, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), %struct.sysctl_oid_list* %124, i32 %125, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.40, i64 0, i64 0))
  %127 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %128 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %129 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %130 = load i32, i32* @tx_bcast_frames, align 4
  %131 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %127, %struct.sysctl_ctx_list* %128, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), %struct.sysctl_oid_list* %129, i32 %130, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.41, i64 0, i64 0))
  %132 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %133 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %134 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %135 = load i32, i32* @tx_pause_frames, align 4
  %136 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %132, %struct.sysctl_ctx_list* %133, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), %struct.sysctl_oid_list* %134, i32 %135, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0))
  %137 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %138 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %139 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %140 = load i32, i32* @tx_mcast_frames, align 4
  %141 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %137, %struct.sysctl_ctx_list* %138, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), %struct.sysctl_oid_list* %139, i32 %140, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0))
  %142 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %143 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %144 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %145 = load i32, i32* @tx_octets, align 4
  %146 = call i32 @MSK_SYSCTL_STAT64(%struct.msk_if_softc* %142, %struct.sysctl_ctx_list* %143, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.42, i64 0, i64 0), %struct.sysctl_oid_list* %144, i32 %145, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.43, i64 0, i64 0))
  %147 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %148 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %149 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %150 = load i32, i32* @tx_pkts_64, align 4
  %151 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %147, %struct.sysctl_ctx_list* %148, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), %struct.sysctl_oid_list* %149, i32 %150, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0))
  %152 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %153 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %154 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %155 = load i32, i32* @tx_pkts_65_127, align 4
  %156 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %152, %struct.sysctl_ctx_list* %153, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0), %struct.sysctl_oid_list* %154, i32 %155, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0))
  %157 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %158 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %159 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %160 = load i32, i32* @tx_pkts_128_255, align 4
  %161 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %157, %struct.sysctl_ctx_list* %158, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0), %struct.sysctl_oid_list* %159, i32 %160, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.23, i64 0, i64 0))
  %162 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %163 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %164 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %165 = load i32, i32* @tx_pkts_256_511, align 4
  %166 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %162, %struct.sysctl_ctx_list* %163, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i64 0, i64 0), %struct.sysctl_oid_list* %164, i32 %165, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.25, i64 0, i64 0))
  %167 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %168 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %169 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %170 = load i32, i32* @tx_pkts_512_1023, align 4
  %171 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %167, %struct.sysctl_ctx_list* %168, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i64 0, i64 0), %struct.sysctl_oid_list* %169, i32 %170, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0))
  %172 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %173 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %174 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %175 = load i32, i32* @tx_pkts_1024_1518, align 4
  %176 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %172, %struct.sysctl_ctx_list* %173, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i64 0, i64 0), %struct.sysctl_oid_list* %174, i32 %175, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.29, i64 0, i64 0))
  %177 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %178 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %179 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %180 = load i32, i32* @tx_pkts_1519_max, align 4
  %181 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %177, %struct.sysctl_ctx_list* %178, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0), %struct.sysctl_oid_list* %179, i32 %180, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.31, i64 0, i64 0))
  %182 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %183 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %184 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %185 = load i32, i32* @tx_colls, align 4
  %186 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %182, %struct.sysctl_ctx_list* %183, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), %struct.sysctl_oid_list* %184, i32 %185, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.45, i64 0, i64 0))
  %187 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %188 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %189 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %190 = load i32, i32* @tx_late_colls, align 4
  %191 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %187, %struct.sysctl_ctx_list* %188, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.46, i64 0, i64 0), %struct.sysctl_oid_list* %189, i32 %190, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.47, i64 0, i64 0))
  %192 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %193 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %194 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %195 = load i32, i32* @tx_excess_colls, align 4
  %196 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %192, %struct.sysctl_ctx_list* %193, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.48, i64 0, i64 0), %struct.sysctl_oid_list* %194, i32 %195, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.49, i64 0, i64 0))
  %197 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %198 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %199 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %200 = load i32, i32* @tx_multi_colls, align 4
  %201 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %197, %struct.sysctl_ctx_list* %198, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.50, i64 0, i64 0), %struct.sysctl_oid_list* %199, i32 %200, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.51, i64 0, i64 0))
  %202 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %203 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %204 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %205 = load i32, i32* @tx_single_colls, align 4
  %206 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %202, %struct.sysctl_ctx_list* %203, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.52, i64 0, i64 0), %struct.sysctl_oid_list* %204, i32 %205, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.53, i64 0, i64 0))
  %207 = load %struct.msk_if_softc*, %struct.msk_if_softc** %2, align 8
  %208 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %209 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %210 = load i32, i32* @tx_underflows, align 4
  %211 = call i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc* %207, %struct.sysctl_ctx_list* %208, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i64 0, i64 0), %struct.sysctl_oid_list* %209, i32 %210, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.55, i64 0, i64 0))
  ret void
}

declare dso_local %struct.sysctl_ctx_list* @device_get_sysctl_ctx(i32) #1

declare dso_local %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid*) #1

declare dso_local %struct.sysctl_oid* @device_get_sysctl_tree(i32) #1

declare dso_local %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, i32*, i8*) #1

declare dso_local i32 @MSK_SYSCTL_STAT32(%struct.msk_if_softc*, %struct.sysctl_ctx_list*, i8*, %struct.sysctl_oid_list*, i32, i8*) #1

declare dso_local i32 @MSK_SYSCTL_STAT64(%struct.msk_if_softc*, %struct.sysctl_ctx_list*, i8*, %struct.sysctl_oid_list*, i32, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
