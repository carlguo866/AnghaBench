; ModuleID = '/home/carl/AnghaBench/freebsd/sys/dev/et/extr_if_et.c_et_add_sysctls.c'
source_filename = "/home/carl/AnghaBench/freebsd/sys/dev/et/extr_if_et.c_et_add_sysctls.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.et_softc = type { %struct.et_hw_stats, i32, i32, i32 }
%struct.et_hw_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.sysctl_ctx_list = type { i32 }
%struct.sysctl_oid_list = type { i32 }
%struct.sysctl_oid = type { i32 }

@OID_AUTO = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [14 x i8] c"rx_intr_npkts\00", align 1
@CTLTYPE_INT = common dso_local global i32 0, align 4
@CTLFLAG_RW = common dso_local global i32 0, align 4
@et_sysctl_rx_intr_npkts = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [2 x i8] c"I\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"RX IM, # packets per RX interrupt\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"rx_intr_delay\00", align 1
@et_sysctl_rx_intr_delay = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [37 x i8] c"RX IM, RX interrupt delay (x10 usec)\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"tx_intr_nsegs\00", align 1
@.str.6 = private unnamed_addr constant [35 x i8] c"TX IM, # segments per TX interrupt\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"timer\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"TX timer\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"stats\00", align 1
@CTLFLAG_RD = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [14 x i8] c"ET statistics\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"frames_64\00", align 1
@.str.12 = private unnamed_addr constant [21 x i8] c"0 to 64 bytes frames\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"frames_65_127\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"65 to 127 bytes frames\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"frames_128_255\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"128 to 255 bytes frames\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"frames_256_511\00", align 1
@.str.18 = private unnamed_addr constant [24 x i8] c"256 to 511 bytes frames\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"frames_512_1023\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"512 to 1023 bytes frames\00", align 1
@.str.21 = private unnamed_addr constant [17 x i8] c"frames_1024_1518\00", align 1
@.str.22 = private unnamed_addr constant [26 x i8] c"1024 to 1518 bytes frames\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"frames_1519_1522\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"1519 to 1522 bytes frames\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"rx\00", align 1
@.str.26 = private unnamed_addr constant [18 x i8] c"RX MAC statistics\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"Good bytes\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"frames\00", align 1
@.str.30 = private unnamed_addr constant [12 x i8] c"Good frames\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"crc_errs\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c"CRC errors\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"mcast_frames\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"Multicast frames\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"bcast_frames\00", align 1
@.str.36 = private unnamed_addr constant [17 x i8] c"Broadcast frames\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"control\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"Control frames\00", align 1
@.str.39 = private unnamed_addr constant [6 x i8] c"pause\00", align 1
@.str.40 = private unnamed_addr constant [13 x i8] c"Pause frames\00", align 1
@.str.41 = private unnamed_addr constant [16 x i8] c"unknown_control\00", align 1
@.str.42 = private unnamed_addr constant [23 x i8] c"Unknown control frames\00", align 1
@.str.43 = private unnamed_addr constant [11 x i8] c"align_errs\00", align 1
@.str.44 = private unnamed_addr constant [17 x i8] c"Alignment errors\00", align 1
@.str.45 = private unnamed_addr constant [9 x i8] c"len_errs\00", align 1
@.str.46 = private unnamed_addr constant [30 x i8] c"Frames with length mismatched\00", align 1
@.str.47 = private unnamed_addr constant [10 x i8] c"code_errs\00", align 1
@.str.48 = private unnamed_addr constant [23 x i8] c"Frames with code error\00", align 1
@.str.49 = private unnamed_addr constant [8 x i8] c"cs_errs\00", align 1
@.str.50 = private unnamed_addr constant [32 x i8] c"Frames with carrier sense error\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"runts\00", align 1
@.str.52 = private unnamed_addr constant [17 x i8] c"Too short frames\00", align 1
@.str.53 = private unnamed_addr constant [9 x i8] c"oversize\00", align 1
@.str.54 = private unnamed_addr constant [17 x i8] c"Oversized frames\00", align 1
@.str.55 = private unnamed_addr constant [10 x i8] c"fragments\00", align 1
@.str.56 = private unnamed_addr constant [18 x i8] c"Fragmented frames\00", align 1
@.str.57 = private unnamed_addr constant [8 x i8] c"jabbers\00", align 1
@.str.58 = private unnamed_addr constant [25 x i8] c"Frames with jabber error\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"drop\00", align 1
@.str.60 = private unnamed_addr constant [15 x i8] c"Dropped frames\00", align 1
@.str.61 = private unnamed_addr constant [3 x i8] c"tx\00", align 1
@.str.62 = private unnamed_addr constant [18 x i8] c"TX MAC statistics\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"deferred\00", align 1
@.str.64 = private unnamed_addr constant [16 x i8] c"Deferred frames\00", align 1
@.str.65 = private unnamed_addr constant [16 x i8] c"excess_deferred\00", align 1
@.str.66 = private unnamed_addr constant [28 x i8] c"Excessively deferred frames\00", align 1
@.str.67 = private unnamed_addr constant [13 x i8] c"single_colls\00", align 1
@.str.68 = private unnamed_addr constant [18 x i8] c"Single collisions\00", align 1
@.str.69 = private unnamed_addr constant [12 x i8] c"multi_colls\00", align 1
@.str.70 = private unnamed_addr constant [20 x i8] c"Multiple collisions\00", align 1
@.str.71 = private unnamed_addr constant [11 x i8] c"late_colls\00", align 1
@.str.72 = private unnamed_addr constant [16 x i8] c"Late collisions\00", align 1
@.str.73 = private unnamed_addr constant [13 x i8] c"excess_colls\00", align 1
@.str.74 = private unnamed_addr constant [18 x i8] c"Excess collisions\00", align 1
@.str.75 = private unnamed_addr constant [12 x i8] c"total_colls\00", align 1
@.str.76 = private unnamed_addr constant [17 x i8] c"Total collisions\00", align 1
@.str.77 = private unnamed_addr constant [14 x i8] c"pause_honored\00", align 1
@.str.78 = private unnamed_addr constant [21 x i8] c"Honored pause frames\00", align 1
@.str.79 = private unnamed_addr constant [26 x i8] c"Frames with jabber errors\00", align 1
@.str.80 = private unnamed_addr constant [23 x i8] c"Frames with CRC errors\00", align 1
@.str.81 = private unnamed_addr constant [10 x i8] c"undersize\00", align 1
@.str.82 = private unnamed_addr constant [18 x i8] c"Undersized frames\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.et_softc*)* @et_add_sysctls to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @et_add_sysctls(%struct.et_softc* %0) #0 {
  %2 = alloca %struct.et_softc*, align 8
  %3 = alloca %struct.sysctl_ctx_list*, align 8
  %4 = alloca %struct.sysctl_oid_list*, align 8
  %5 = alloca %struct.sysctl_oid_list*, align 8
  %6 = alloca %struct.sysctl_oid*, align 8
  %7 = alloca %struct.et_hw_stats*, align 8
  store %struct.et_softc* %0, %struct.et_softc** %2, align 8
  %8 = load %struct.et_softc*, %struct.et_softc** %2, align 8
  %9 = getelementptr inbounds %struct.et_softc, %struct.et_softc* %8, i32 0, i32 3
  %10 = load i32, i32* %9, align 4
  %11 = call %struct.sysctl_ctx_list* @device_get_sysctl_ctx(i32 %10)
  store %struct.sysctl_ctx_list* %11, %struct.sysctl_ctx_list** %3, align 8
  %12 = load %struct.et_softc*, %struct.et_softc** %2, align 8
  %13 = getelementptr inbounds %struct.et_softc, %struct.et_softc* %12, i32 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = call %struct.sysctl_oid* @device_get_sysctl_tree(i32 %14)
  %16 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %15)
  store %struct.sysctl_oid_list* %16, %struct.sysctl_oid_list** %4, align 8
  %17 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %18 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %19 = load i32, i32* @OID_AUTO, align 4
  %20 = load i32, i32* @CTLTYPE_INT, align 4
  %21 = load i32, i32* @CTLFLAG_RW, align 4
  %22 = or i32 %20, %21
  %23 = load %struct.et_softc*, %struct.et_softc** %2, align 8
  %24 = load i32, i32* @et_sysctl_rx_intr_npkts, align 4
  %25 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %17, %struct.sysctl_oid_list* %18, i32 %19, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 %22, %struct.et_softc* %23, i32 0, i32 %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0))
  %26 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %27 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %28 = load i32, i32* @OID_AUTO, align 4
  %29 = load i32, i32* @CTLTYPE_INT, align 4
  %30 = load i32, i32* @CTLFLAG_RW, align 4
  %31 = or i32 %29, %30
  %32 = load %struct.et_softc*, %struct.et_softc** %2, align 8
  %33 = load i32, i32* @et_sysctl_rx_intr_delay, align 4
  %34 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %26, %struct.sysctl_oid_list* %27, i32 %28, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i32 %31, %struct.et_softc* %32, i32 0, i32 %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0))
  %35 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %36 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %37 = load i32, i32* @OID_AUTO, align 4
  %38 = load i32, i32* @CTLFLAG_RW, align 4
  %39 = load %struct.et_softc*, %struct.et_softc** %2, align 8
  %40 = getelementptr inbounds %struct.et_softc, %struct.et_softc* %39, i32 0, i32 2
  %41 = call i32 @SYSCTL_ADD_INT(%struct.sysctl_ctx_list* %35, %struct.sysctl_oid_list* %36, i32 %37, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i32 %38, i32* %40, i32 0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.6, i64 0, i64 0))
  %42 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %43 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %44 = load i32, i32* @OID_AUTO, align 4
  %45 = load i32, i32* @CTLFLAG_RW, align 4
  %46 = load %struct.et_softc*, %struct.et_softc** %2, align 8
  %47 = getelementptr inbounds %struct.et_softc, %struct.et_softc* %46, i32 0, i32 1
  %48 = call i32 @SYSCTL_ADD_UINT(%struct.sysctl_ctx_list* %42, %struct.sysctl_oid_list* %43, i32 %44, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i64 0, i64 0), i32 %45, i32* %47, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0))
  %49 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %50 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %51 = load i32, i32* @OID_AUTO, align 4
  %52 = load i32, i32* @CTLFLAG_RD, align 4
  %53 = call %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %49, %struct.sysctl_oid_list* %50, i32 %51, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i32 %52, i32* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0))
  store %struct.sysctl_oid* %53, %struct.sysctl_oid** %6, align 8
  %54 = load %struct.sysctl_oid*, %struct.sysctl_oid** %6, align 8
  %55 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %54)
  store %struct.sysctl_oid_list* %55, %struct.sysctl_oid_list** %5, align 8
  %56 = load %struct.et_softc*, %struct.et_softc** %2, align 8
  %57 = getelementptr inbounds %struct.et_softc, %struct.et_softc* %56, i32 0, i32 0
  store %struct.et_hw_stats* %57, %struct.et_hw_stats** %7, align 8
  %58 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %59 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %5, align 8
  %60 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %61 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %60, i32 0, i32 43
  %62 = call i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %58, %struct.sysctl_oid_list* %59, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i32* %61, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i64 0, i64 0))
  %63 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %64 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %5, align 8
  %65 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %66 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %65, i32 0, i32 42
  %67 = call i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %63, %struct.sysctl_oid_list* %64, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i32* %66, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0))
  %68 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %69 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %5, align 8
  %70 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %71 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %70, i32 0, i32 41
  %72 = call i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %68, %struct.sysctl_oid_list* %69, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i32* %71, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0))
  %73 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %74 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %5, align 8
  %75 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %76 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %75, i32 0, i32 40
  %77 = call i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %73, %struct.sysctl_oid_list* %74, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0), i32* %76, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i64 0, i64 0))
  %78 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %79 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %5, align 8
  %80 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %81 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %80, i32 0, i32 39
  %82 = call i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %78, %struct.sysctl_oid_list* %79, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0), i32* %81, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0))
  %83 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %84 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %5, align 8
  %85 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %86 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %85, i32 0, i32 38
  %87 = call i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %83, %struct.sysctl_oid_list* %84, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.21, i64 0, i64 0), i32* %86, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.22, i64 0, i64 0))
  %88 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %89 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %5, align 8
  %90 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %91 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %90, i32 0, i32 37
  %92 = call i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %88, %struct.sysctl_oid_list* %89, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0), i32* %91, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i64 0, i64 0))
  %93 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %94 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %5, align 8
  %95 = load i32, i32* @OID_AUTO, align 4
  %96 = load i32, i32* @CTLFLAG_RD, align 4
  %97 = call %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %93, %struct.sysctl_oid_list* %94, i32 %95, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0), i32 %96, i32* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26, i64 0, i64 0))
  store %struct.sysctl_oid* %97, %struct.sysctl_oid** %6, align 8
  %98 = load %struct.sysctl_oid*, %struct.sysctl_oid** %6, align 8
  %99 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %98)
  store %struct.sysctl_oid_list* %99, %struct.sysctl_oid_list** %4, align 8
  %100 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %101 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %102 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %103 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %102, i32 0, i32 36
  %104 = call i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %100, %struct.sysctl_oid_list* %101, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i32* %103, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0))
  %105 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %106 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %107 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %108 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %107, i32 0, i32 35
  %109 = call i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %105, %struct.sysctl_oid_list* %106, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0), i32* %108, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.30, i64 0, i64 0))
  %110 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %111 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %112 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %113 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %112, i32 0, i32 34
  %114 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %110, %struct.sysctl_oid_list* %111, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i64 0, i64 0), i32* %113, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0))
  %115 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %116 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %117 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %118 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %117, i32 0, i32 33
  %119 = call i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %115, %struct.sysctl_oid_list* %116, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i32* %118, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i64 0, i64 0))
  %120 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %121 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %122 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %123 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %122, i32 0, i32 32
  %124 = call i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %120, %struct.sysctl_oid_list* %121, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i32* %123, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.36, i64 0, i64 0))
  %125 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %126 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %127 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %128 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %127, i32 0, i32 31
  %129 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %125, %struct.sysctl_oid_list* %126, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i64 0, i64 0), i32* %128, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i64 0, i64 0))
  %130 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %131 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %132 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %133 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %132, i32 0, i32 30
  %134 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %130, %struct.sysctl_oid_list* %131, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0), i32* %133, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i64 0, i64 0))
  %135 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %136 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %137 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %138 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %137, i32 0, i32 29
  %139 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %135, %struct.sysctl_oid_list* %136, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.41, i64 0, i64 0), i32* %138, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.42, i64 0, i64 0))
  %140 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %141 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %142 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %143 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %142, i32 0, i32 28
  %144 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %140, %struct.sysctl_oid_list* %141, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i64 0, i64 0), i32* %143, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.44, i64 0, i64 0))
  %145 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %146 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %147 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %148 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %147, i32 0, i32 27
  %149 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %145, %struct.sysctl_oid_list* %146, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.45, i64 0, i64 0), i32* %148, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i64 0, i64 0))
  %150 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %151 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %152 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %153 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %152, i32 0, i32 26
  %154 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %150, %struct.sysctl_oid_list* %151, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.47, i64 0, i64 0), i32* %153, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.48, i64 0, i64 0))
  %155 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %156 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %157 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %158 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %157, i32 0, i32 25
  %159 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %155, %struct.sysctl_oid_list* %156, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.49, i64 0, i64 0), i32* %158, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.50, i64 0, i64 0))
  %160 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %161 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %162 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %163 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %162, i32 0, i32 24
  %164 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %160, %struct.sysctl_oid_list* %161, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i64 0, i64 0), i32* %163, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.52, i64 0, i64 0))
  %165 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %166 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %167 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %168 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %167, i32 0, i32 23
  %169 = call i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %165, %struct.sysctl_oid_list* %166, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i64 0, i64 0), i32* %168, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.54, i64 0, i64 0))
  %170 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %171 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %172 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %173 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %172, i32 0, i32 22
  %174 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %170, %struct.sysctl_oid_list* %171, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.55, i64 0, i64 0), i32* %173, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.56, i64 0, i64 0))
  %175 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %176 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %177 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %178 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %177, i32 0, i32 21
  %179 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %175, %struct.sysctl_oid_list* %176, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i64 0, i64 0), i32* %178, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.58, i64 0, i64 0))
  %180 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %181 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %182 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %183 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %182, i32 0, i32 20
  %184 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %180, %struct.sysctl_oid_list* %181, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i64 0, i64 0), i32* %183, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i64 0, i64 0))
  %185 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %186 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %5, align 8
  %187 = load i32, i32* @OID_AUTO, align 4
  %188 = load i32, i32* @CTLFLAG_RD, align 4
  %189 = call %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %185, %struct.sysctl_oid_list* %186, i32 %187, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i64 0, i64 0), i32 %188, i32* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.62, i64 0, i64 0))
  store %struct.sysctl_oid* %189, %struct.sysctl_oid** %6, align 8
  %190 = load %struct.sysctl_oid*, %struct.sysctl_oid** %6, align 8
  %191 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %190)
  store %struct.sysctl_oid_list* %191, %struct.sysctl_oid_list** %4, align 8
  %192 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %193 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %194 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %195 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %194, i32 0, i32 19
  %196 = call i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %192, %struct.sysctl_oid_list* %193, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0), i32* %195, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i64 0, i64 0))
  %197 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %198 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %199 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %200 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %199, i32 0, i32 18
  %201 = call i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %197, %struct.sysctl_oid_list* %198, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0), i32* %200, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.30, i64 0, i64 0))
  %202 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %203 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %204 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %205 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %204, i32 0, i32 17
  %206 = call i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %202, %struct.sysctl_oid_list* %203, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i32* %205, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i64 0, i64 0))
  %207 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %208 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %209 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %210 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %209, i32 0, i32 16
  %211 = call i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %207, %struct.sysctl_oid_list* %208, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i32* %210, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.36, i64 0, i64 0))
  %212 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %213 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %214 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %215 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %214, i32 0, i32 15
  %216 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %212, %struct.sysctl_oid_list* %213, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.39, i64 0, i64 0), i32* %215, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i64 0, i64 0))
  %217 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %218 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %219 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %220 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %219, i32 0, i32 14
  %221 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %217, %struct.sysctl_oid_list* %218, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i64 0, i64 0), i32* %220, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.64, i64 0, i64 0))
  %222 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %223 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %224 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %225 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %224, i32 0, i32 13
  %226 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %222, %struct.sysctl_oid_list* %223, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.65, i64 0, i64 0), i32* %225, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.66, i64 0, i64 0))
  %227 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %228 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %229 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %230 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %229, i32 0, i32 12
  %231 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %227, %struct.sysctl_oid_list* %228, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.67, i64 0, i64 0), i32* %230, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0))
  %232 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %233 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %234 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %235 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %234, i32 0, i32 11
  %236 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %232, %struct.sysctl_oid_list* %233, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.69, i64 0, i64 0), i32* %235, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.70, i64 0, i64 0))
  %237 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %238 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %239 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %240 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %239, i32 0, i32 10
  %241 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %237, %struct.sysctl_oid_list* %238, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.71, i64 0, i64 0), i32* %240, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.72, i64 0, i64 0))
  %242 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %243 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %244 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %245 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %244, i32 0, i32 9
  %246 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %242, %struct.sysctl_oid_list* %243, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73, i64 0, i64 0), i32* %245, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.74, i64 0, i64 0))
  %247 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %248 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %249 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %250 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %249, i32 0, i32 8
  %251 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %247, %struct.sysctl_oid_list* %248, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.75, i64 0, i64 0), i32* %250, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.76, i64 0, i64 0))
  %252 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %253 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %254 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %255 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %254, i32 0, i32 7
  %256 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %252, %struct.sysctl_oid_list* %253, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.77, i64 0, i64 0), i32* %255, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.78, i64 0, i64 0))
  %257 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %258 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %259 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %260 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %259, i32 0, i32 6
  %261 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %257, %struct.sysctl_oid_list* %258, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i64 0, i64 0), i32* %260, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.60, i64 0, i64 0))
  %262 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %263 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %264 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %265 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %264, i32 0, i32 5
  %266 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %262, %struct.sysctl_oid_list* %263, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.57, i64 0, i64 0), i32* %265, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.79, i64 0, i64 0))
  %267 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %268 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %269 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %270 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %269, i32 0, i32 4
  %271 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %267, %struct.sysctl_oid_list* %268, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i64 0, i64 0), i32* %270, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.80, i64 0, i64 0))
  %272 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %273 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %274 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %275 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %274, i32 0, i32 3
  %276 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %272, %struct.sysctl_oid_list* %273, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i64 0, i64 0), i32* %275, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i64 0, i64 0))
  %277 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %278 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %279 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %280 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %279, i32 0, i32 2
  %281 = call i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list* %277, %struct.sysctl_oid_list* %278, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i64 0, i64 0), i32* %280, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.54, i64 0, i64 0))
  %282 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %283 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %284 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %285 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %284, i32 0, i32 1
  %286 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %282, %struct.sysctl_oid_list* %283, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.81, i64 0, i64 0), i32* %285, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.82, i64 0, i64 0))
  %287 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %288 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %4, align 8
  %289 = load %struct.et_hw_stats*, %struct.et_hw_stats** %7, align 8
  %290 = getelementptr inbounds %struct.et_hw_stats, %struct.et_hw_stats* %289, i32 0, i32 0
  %291 = call i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list* %287, %struct.sysctl_oid_list* %288, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.55, i64 0, i64 0), i32* %290, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.56, i64 0, i64 0))
  ret void
}

declare dso_local %struct.sysctl_ctx_list* @device_get_sysctl_ctx(i32) #1

declare dso_local %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid*) #1

declare dso_local %struct.sysctl_oid* @device_get_sysctl_tree(i32) #1

declare dso_local i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, %struct.et_softc*, i32, i32, i8*, i8*) #1

declare dso_local i32 @SYSCTL_ADD_INT(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, i32*, i32, i8*) #1

declare dso_local i32 @SYSCTL_ADD_UINT(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, i32*, i32, i8*) #1

declare dso_local %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, i32*, i8*) #1

declare dso_local i32 @ET_SYSCTL_STAT_ADD64(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i8*, i32*, i8*) #1

declare dso_local i32 @ET_SYSCTL_STAT_ADD32(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i8*, i32*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
