; ModuleID = '/home/carl/AnghaBench/freebsd/sys/dev/e1000/extr_if_em.c_em_add_hw_stats.c'
source_filename = "/home/carl/AnghaBench/freebsd/sys/dev/e1000/extr_if_em.c_em_add_hw_stats.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.adapter = type { i32, i32, %struct.e1000_hw_stats, %struct.TYPE_4__, i32, i32, i32, i32, %struct.em_rx_queue*, %struct.em_tx_queue*, i32 }
%struct.e1000_hw_stats = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.TYPE_4__ = type { %struct.TYPE_3__ }
%struct.TYPE_3__ = type { i32, i32 }
%struct.em_rx_queue = type { %struct.rx_ring }
%struct.rx_ring = type { i32, i32 }
%struct.em_tx_queue = type { %struct.tx_ring }
%struct.tx_ring = type { i32, i32 }
%struct.sysctl_ctx_list = type { i32 }
%struct.sysctl_oid = type { i32 }
%struct.sysctl_oid_list = type { i32 }

@OID_AUTO = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [8 x i8] c"dropped\00", align 1
@CTLFLAG_RD = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [23 x i8] c"Driver dropped packets\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"link_irq\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"Link MSI-X IRQ Handled\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"rx_overruns\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"RX overruns\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"watchdog_timeouts\00", align 1
@.str.7 = private unnamed_addr constant [18 x i8] c"Watchdog timeouts\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"device_control\00", align 1
@CTLTYPE_UINT = common dso_local global i32 0, align 4
@E1000_CTRL = common dso_local global i32 0, align 4
@em_sysctl_reg_handler = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [3 x i8] c"IU\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"Device Control Register\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"rx_control\00", align 1
@E1000_RCTL = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [26 x i8] c"Receiver Control Register\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"fc_high_water\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"Flow Control High Watermark\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"fc_low_water\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"Flow Control Low Watermark\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"queue_tx_%d\00", align 1
@.str.18 = private unnamed_addr constant [14 x i8] c"TX Queue Name\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"txd_head\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"Transmit Descriptor Head\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"txd_tail\00", align 1
@.str.22 = private unnamed_addr constant [25 x i8] c"Transmit Descriptor Tail\00", align 1
@.str.23 = private unnamed_addr constant [7 x i8] c"tx_irq\00", align 1
@.str.24 = private unnamed_addr constant [32 x i8] c"Queue MSI-X Transmit Interrupts\00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c"queue_rx_%d\00", align 1
@.str.26 = private unnamed_addr constant [14 x i8] c"RX Queue Name\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"rxd_head\00", align 1
@.str.28 = private unnamed_addr constant [24 x i8] c"Receive Descriptor Head\00", align 1
@.str.29 = private unnamed_addr constant [9 x i8] c"rxd_tail\00", align 1
@.str.30 = private unnamed_addr constant [24 x i8] c"Receive Descriptor Tail\00", align 1
@.str.31 = private unnamed_addr constant [7 x i8] c"rx_irq\00", align 1
@.str.32 = private unnamed_addr constant [31 x i8] c"Queue MSI-X Receive Interrupts\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"mac_stats\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"Statistics\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"excess_coll\00", align 1
@.str.36 = private unnamed_addr constant [21 x i8] c"Excessive collisions\00", align 1
@.str.37 = private unnamed_addr constant [12 x i8] c"single_coll\00", align 1
@.str.38 = private unnamed_addr constant [18 x i8] c"Single collisions\00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"multiple_coll\00", align 1
@.str.40 = private unnamed_addr constant [20 x i8] c"Multiple collisions\00", align 1
@.str.41 = private unnamed_addr constant [10 x i8] c"late_coll\00", align 1
@.str.42 = private unnamed_addr constant [16 x i8] c"Late collisions\00", align 1
@.str.43 = private unnamed_addr constant [16 x i8] c"collision_count\00", align 1
@.str.44 = private unnamed_addr constant [16 x i8] c"Collision Count\00", align 1
@.str.45 = private unnamed_addr constant [14 x i8] c"symbol_errors\00", align 1
@.str.46 = private unnamed_addr constant [14 x i8] c"Symbol Errors\00", align 1
@.str.47 = private unnamed_addr constant [16 x i8] c"sequence_errors\00", align 1
@.str.48 = private unnamed_addr constant [16 x i8] c"Sequence Errors\00", align 1
@.str.49 = private unnamed_addr constant [12 x i8] c"defer_count\00", align 1
@.str.50 = private unnamed_addr constant [12 x i8] c"Defer Count\00", align 1
@.str.51 = private unnamed_addr constant [15 x i8] c"missed_packets\00", align 1
@.str.52 = private unnamed_addr constant [15 x i8] c"Missed Packets\00", align 1
@.str.53 = private unnamed_addr constant [13 x i8] c"recv_no_buff\00", align 1
@.str.54 = private unnamed_addr constant [19 x i8] c"Receive No Buffers\00", align 1
@.str.55 = private unnamed_addr constant [15 x i8] c"recv_undersize\00", align 1
@.str.56 = private unnamed_addr constant [18 x i8] c"Receive Undersize\00", align 1
@.str.57 = private unnamed_addr constant [16 x i8] c"recv_fragmented\00", align 1
@.str.58 = private unnamed_addr constant [29 x i8] c"Fragmented Packets Received \00", align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"recv_oversize\00", align 1
@.str.60 = private unnamed_addr constant [27 x i8] c"Oversized Packets Received\00", align 1
@.str.61 = private unnamed_addr constant [12 x i8] c"recv_jabber\00", align 1
@.str.62 = private unnamed_addr constant [16 x i8] c"Recevied Jabber\00", align 1
@.str.63 = private unnamed_addr constant [10 x i8] c"recv_errs\00", align 1
@.str.64 = private unnamed_addr constant [15 x i8] c"Receive Errors\00", align 1
@.str.65 = private unnamed_addr constant [9 x i8] c"crc_errs\00", align 1
@.str.66 = private unnamed_addr constant [11 x i8] c"CRC errors\00", align 1
@.str.67 = private unnamed_addr constant [15 x i8] c"alignment_errs\00", align 1
@.str.68 = private unnamed_addr constant [17 x i8] c"Alignment Errors\00", align 1
@.str.69 = private unnamed_addr constant [14 x i8] c"coll_ext_errs\00", align 1
@.str.70 = private unnamed_addr constant [35 x i8] c"Collision/Carrier extension errors\00", align 1
@.str.71 = private unnamed_addr constant [10 x i8] c"xon_recvd\00", align 1
@.str.72 = private unnamed_addr constant [13 x i8] c"XON Received\00", align 1
@.str.73 = private unnamed_addr constant [8 x i8] c"xon_txd\00", align 1
@.str.74 = private unnamed_addr constant [16 x i8] c"XON Transmitted\00", align 1
@.str.75 = private unnamed_addr constant [11 x i8] c"xoff_recvd\00", align 1
@.str.76 = private unnamed_addr constant [14 x i8] c"XOFF Received\00", align 1
@.str.77 = private unnamed_addr constant [9 x i8] c"xoff_txd\00", align 1
@.str.78 = private unnamed_addr constant [17 x i8] c"XOFF Transmitted\00", align 1
@.str.79 = private unnamed_addr constant [17 x i8] c"total_pkts_recvd\00", align 1
@.str.80 = private unnamed_addr constant [24 x i8] c"Total Packets Received \00", align 1
@.str.81 = private unnamed_addr constant [16 x i8] c"good_pkts_recvd\00", align 1
@.str.82 = private unnamed_addr constant [22 x i8] c"Good Packets Received\00", align 1
@.str.83 = private unnamed_addr constant [17 x i8] c"bcast_pkts_recvd\00", align 1
@.str.84 = private unnamed_addr constant [27 x i8] c"Broadcast Packets Received\00", align 1
@.str.85 = private unnamed_addr constant [17 x i8] c"mcast_pkts_recvd\00", align 1
@.str.86 = private unnamed_addr constant [27 x i8] c"Multicast Packets Received\00", align 1
@.str.87 = private unnamed_addr constant [13 x i8] c"rx_frames_64\00", align 1
@.str.88 = private unnamed_addr constant [25 x i8] c"64 byte frames received \00", align 1
@.str.89 = private unnamed_addr constant [17 x i8] c"rx_frames_65_127\00", align 1
@.str.90 = private unnamed_addr constant [28 x i8] c"65-127 byte frames received\00", align 1
@.str.91 = private unnamed_addr constant [18 x i8] c"rx_frames_128_255\00", align 1
@.str.92 = private unnamed_addr constant [29 x i8] c"128-255 byte frames received\00", align 1
@.str.93 = private unnamed_addr constant [18 x i8] c"rx_frames_256_511\00", align 1
@.str.94 = private unnamed_addr constant [29 x i8] c"256-511 byte frames received\00", align 1
@.str.95 = private unnamed_addr constant [19 x i8] c"rx_frames_512_1023\00", align 1
@.str.96 = private unnamed_addr constant [30 x i8] c"512-1023 byte frames received\00", align 1
@.str.97 = private unnamed_addr constant [20 x i8] c"rx_frames_1024_1522\00", align 1
@.str.98 = private unnamed_addr constant [31 x i8] c"1023-1522 byte frames received\00", align 1
@.str.99 = private unnamed_addr constant [18 x i8] c"good_octets_recvd\00", align 1
@.str.100 = private unnamed_addr constant [21 x i8] c"Good Octets Received\00", align 1
@.str.101 = private unnamed_addr constant [16 x i8] c"good_octets_txd\00", align 1
@.str.102 = private unnamed_addr constant [24 x i8] c"Good Octets Transmitted\00", align 1
@.str.103 = private unnamed_addr constant [15 x i8] c"total_pkts_txd\00", align 1
@.str.104 = private unnamed_addr constant [26 x i8] c"Total Packets Transmitted\00", align 1
@.str.105 = private unnamed_addr constant [14 x i8] c"good_pkts_txd\00", align 1
@.str.106 = private unnamed_addr constant [25 x i8] c"Good Packets Transmitted\00", align 1
@.str.107 = private unnamed_addr constant [15 x i8] c"bcast_pkts_txd\00", align 1
@.str.108 = private unnamed_addr constant [30 x i8] c"Broadcast Packets Transmitted\00", align 1
@.str.109 = private unnamed_addr constant [15 x i8] c"mcast_pkts_txd\00", align 1
@.str.110 = private unnamed_addr constant [30 x i8] c"Multicast Packets Transmitted\00", align 1
@.str.111 = private unnamed_addr constant [13 x i8] c"tx_frames_64\00", align 1
@.str.112 = private unnamed_addr constant [28 x i8] c"64 byte frames transmitted \00", align 1
@.str.113 = private unnamed_addr constant [17 x i8] c"tx_frames_65_127\00", align 1
@.str.114 = private unnamed_addr constant [31 x i8] c"65-127 byte frames transmitted\00", align 1
@.str.115 = private unnamed_addr constant [18 x i8] c"tx_frames_128_255\00", align 1
@.str.116 = private unnamed_addr constant [32 x i8] c"128-255 byte frames transmitted\00", align 1
@.str.117 = private unnamed_addr constant [18 x i8] c"tx_frames_256_511\00", align 1
@.str.118 = private unnamed_addr constant [32 x i8] c"256-511 byte frames transmitted\00", align 1
@.str.119 = private unnamed_addr constant [19 x i8] c"tx_frames_512_1023\00", align 1
@.str.120 = private unnamed_addr constant [33 x i8] c"512-1023 byte frames transmitted\00", align 1
@.str.121 = private unnamed_addr constant [20 x i8] c"tx_frames_1024_1522\00", align 1
@.str.122 = private unnamed_addr constant [34 x i8] c"1024-1522 byte frames transmitted\00", align 1
@.str.123 = private unnamed_addr constant [8 x i8] c"tso_txd\00", align 1
@.str.124 = private unnamed_addr constant [25 x i8] c"TSO Contexts Transmitted\00", align 1
@.str.125 = private unnamed_addr constant [13 x i8] c"tso_ctx_fail\00", align 1
@.str.126 = private unnamed_addr constant [20 x i8] c"TSO Contexts Failed\00", align 1
@.str.127 = private unnamed_addr constant [11 x i8] c"interrupts\00", align 1
@.str.128 = private unnamed_addr constant [21 x i8] c"Interrupt Statistics\00", align 1
@.str.129 = private unnamed_addr constant [8 x i8] c"asserts\00", align 1
@.str.130 = private unnamed_addr constant [26 x i8] c"Interrupt Assertion Count\00", align 1
@.str.131 = private unnamed_addr constant [13 x i8] c"rx_pkt_timer\00", align 1
@.str.132 = private unnamed_addr constant [42 x i8] c"Interrupt Cause Rx Pkt Timer Expire Count\00", align 1
@.str.133 = private unnamed_addr constant [13 x i8] c"rx_abs_timer\00", align 1
@.str.134 = private unnamed_addr constant [42 x i8] c"Interrupt Cause Rx Abs Timer Expire Count\00", align 1
@.str.135 = private unnamed_addr constant [13 x i8] c"tx_pkt_timer\00", align 1
@.str.136 = private unnamed_addr constant [42 x i8] c"Interrupt Cause Tx Pkt Timer Expire Count\00", align 1
@.str.137 = private unnamed_addr constant [13 x i8] c"tx_abs_timer\00", align 1
@.str.138 = private unnamed_addr constant [42 x i8] c"Interrupt Cause Tx Abs Timer Expire Count\00", align 1
@.str.139 = private unnamed_addr constant [15 x i8] c"tx_queue_empty\00", align 1
@.str.140 = private unnamed_addr constant [37 x i8] c"Interrupt Cause Tx Queue Empty Count\00", align 1
@.str.141 = private unnamed_addr constant [20 x i8] c"tx_queue_min_thresh\00", align 1
@.str.142 = private unnamed_addr constant [42 x i8] c"Interrupt Cause Tx Queue Min Thresh Count\00", align 1
@.str.143 = private unnamed_addr constant [19 x i8] c"rx_desc_min_thresh\00", align 1
@.str.144 = private unnamed_addr constant [41 x i8] c"Interrupt Cause Rx Desc Min Thresh Count\00", align 1
@.str.145 = private unnamed_addr constant [11 x i8] c"rx_overrun\00", align 1
@.str.146 = private unnamed_addr constant [39 x i8] c"Interrupt Cause Receiver Overrun Count\00", align 1
@QUEUE_NAME_LEN = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.adapter*)* @em_add_hw_stats to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @em_add_hw_stats(%struct.adapter* %0) #0 {
  %2 = alloca %struct.adapter*, align 8
  %3 = alloca i32, align 4
  %4 = alloca %struct.em_tx_queue*, align 8
  %5 = alloca %struct.em_rx_queue*, align 8
  %6 = alloca %struct.sysctl_ctx_list*, align 8
  %7 = alloca %struct.sysctl_oid*, align 8
  %8 = alloca %struct.sysctl_oid_list*, align 8
  %9 = alloca %struct.e1000_hw_stats*, align 8
  %10 = alloca %struct.sysctl_oid*, align 8
  %11 = alloca %struct.sysctl_oid*, align 8
  %12 = alloca %struct.sysctl_oid*, align 8
  %13 = alloca %struct.sysctl_oid_list*, align 8
  %14 = alloca %struct.sysctl_oid_list*, align 8
  %15 = alloca %struct.sysctl_oid_list*, align 8
  %16 = alloca [32 x i8], align 16
  %17 = alloca i32, align 4
  %18 = alloca %struct.tx_ring*, align 8
  %19 = alloca i32, align 4
  %20 = alloca %struct.rx_ring*, align 8
  store %struct.adapter* %0, %struct.adapter** %2, align 8
  %21 = load %struct.adapter*, %struct.adapter** %2, align 8
  %22 = getelementptr inbounds %struct.adapter, %struct.adapter* %21, i32 0, i32 10
  %23 = load i32, i32* %22, align 8
  %24 = call i32 @iflib_get_dev(i32 %23)
  store i32 %24, i32* %3, align 4
  %25 = load %struct.adapter*, %struct.adapter** %2, align 8
  %26 = getelementptr inbounds %struct.adapter, %struct.adapter* %25, i32 0, i32 9
  %27 = load %struct.em_tx_queue*, %struct.em_tx_queue** %26, align 8
  store %struct.em_tx_queue* %27, %struct.em_tx_queue** %4, align 8
  %28 = load %struct.adapter*, %struct.adapter** %2, align 8
  %29 = getelementptr inbounds %struct.adapter, %struct.adapter* %28, i32 0, i32 8
  %30 = load %struct.em_rx_queue*, %struct.em_rx_queue** %29, align 8
  store %struct.em_rx_queue* %30, %struct.em_rx_queue** %5, align 8
  %31 = load i32, i32* %3, align 4
  %32 = call %struct.sysctl_ctx_list* @device_get_sysctl_ctx(i32 %31)
  store %struct.sysctl_ctx_list* %32, %struct.sysctl_ctx_list** %6, align 8
  %33 = load i32, i32* %3, align 4
  %34 = call %struct.sysctl_oid* @device_get_sysctl_tree(i32 %33)
  store %struct.sysctl_oid* %34, %struct.sysctl_oid** %7, align 8
  %35 = load %struct.sysctl_oid*, %struct.sysctl_oid** %7, align 8
  %36 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %35)
  store %struct.sysctl_oid_list* %36, %struct.sysctl_oid_list** %8, align 8
  %37 = load %struct.adapter*, %struct.adapter** %2, align 8
  %38 = getelementptr inbounds %struct.adapter, %struct.adapter* %37, i32 0, i32 2
  store %struct.e1000_hw_stats* %38, %struct.e1000_hw_stats** %9, align 8
  %39 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %40 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %41 = load i32, i32* @OID_AUTO, align 4
  %42 = load i32, i32* @CTLFLAG_RD, align 4
  %43 = load %struct.adapter*, %struct.adapter** %2, align 8
  %44 = getelementptr inbounds %struct.adapter, %struct.adapter* %43, i32 0, i32 7
  %45 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %39, %struct.sysctl_oid_list* %40, i32 %41, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 %42, i32* %44, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0))
  %46 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %47 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %48 = load i32, i32* @OID_AUTO, align 4
  %49 = load i32, i32* @CTLFLAG_RD, align 4
  %50 = load %struct.adapter*, %struct.adapter** %2, align 8
  %51 = getelementptr inbounds %struct.adapter, %struct.adapter* %50, i32 0, i32 6
  %52 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %46, %struct.sysctl_oid_list* %47, i32 %48, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i32 %49, i32* %51, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0))
  %53 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %54 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %55 = load i32, i32* @OID_AUTO, align 4
  %56 = load i32, i32* @CTLFLAG_RD, align 4
  %57 = load %struct.adapter*, %struct.adapter** %2, align 8
  %58 = getelementptr inbounds %struct.adapter, %struct.adapter* %57, i32 0, i32 5
  %59 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %53, %struct.sysctl_oid_list* %54, i32 %55, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0), i32 %56, i32* %58, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0))
  %60 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %61 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %62 = load i32, i32* @OID_AUTO, align 4
  %63 = load i32, i32* @CTLFLAG_RD, align 4
  %64 = load %struct.adapter*, %struct.adapter** %2, align 8
  %65 = getelementptr inbounds %struct.adapter, %struct.adapter* %64, i32 0, i32 4
  %66 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %60, %struct.sysctl_oid_list* %61, i32 %62, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i32 %63, i32* %65, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0))
  %67 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %68 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %69 = load i32, i32* @OID_AUTO, align 4
  %70 = load i32, i32* @CTLTYPE_UINT, align 4
  %71 = load i32, i32* @CTLFLAG_RD, align 4
  %72 = or i32 %70, %71
  %73 = load %struct.adapter*, %struct.adapter** %2, align 8
  %74 = load i32, i32* @E1000_CTRL, align 4
  %75 = load i32, i32* @em_sysctl_reg_handler, align 4
  %76 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %67, %struct.sysctl_oid_list* %68, i32 %69, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0), i32 %72, %struct.adapter* %73, i32 %74, i32 %75, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0))
  %77 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %78 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %79 = load i32, i32* @OID_AUTO, align 4
  %80 = load i32, i32* @CTLTYPE_UINT, align 4
  %81 = load i32, i32* @CTLFLAG_RD, align 4
  %82 = or i32 %80, %81
  %83 = load %struct.adapter*, %struct.adapter** %2, align 8
  %84 = load i32, i32* @E1000_RCTL, align 4
  %85 = load i32, i32* @em_sysctl_reg_handler, align 4
  %86 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %77, %struct.sysctl_oid_list* %78, i32 %79, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i32 %82, %struct.adapter* %83, i32 %84, i32 %85, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i64 0, i64 0))
  %87 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %88 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %89 = load i32, i32* @OID_AUTO, align 4
  %90 = load i32, i32* @CTLFLAG_RD, align 4
  %91 = load %struct.adapter*, %struct.adapter** %2, align 8
  %92 = getelementptr inbounds %struct.adapter, %struct.adapter* %91, i32 0, i32 3
  %93 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %92, i32 0, i32 0
  %94 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %93, i32 0, i32 1
  %95 = call i32 @SYSCTL_ADD_UINT(%struct.sysctl_ctx_list* %87, %struct.sysctl_oid_list* %88, i32 %89, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i32 %90, i32* %94, i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i64 0, i64 0))
  %96 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %97 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %98 = load i32, i32* @OID_AUTO, align 4
  %99 = load i32, i32* @CTLFLAG_RD, align 4
  %100 = load %struct.adapter*, %struct.adapter** %2, align 8
  %101 = getelementptr inbounds %struct.adapter, %struct.adapter* %100, i32 0, i32 3
  %102 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %101, i32 0, i32 0
  %103 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %102, i32 0, i32 0
  %104 = call i32 @SYSCTL_ADD_UINT(%struct.sysctl_ctx_list* %96, %struct.sysctl_oid_list* %97, i32 %98, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i32 %99, i32* %103, i32 0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0))
  store i32 0, i32* %17, align 4
  br label %105

105:                                              ; preds = %158, %1
  %106 = load i32, i32* %17, align 4
  %107 = load %struct.adapter*, %struct.adapter** %2, align 8
  %108 = getelementptr inbounds %struct.adapter, %struct.adapter* %107, i32 0, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = icmp slt i32 %106, %109
  br i1 %110, label %111, label %163

111:                                              ; preds = %105
  %112 = load %struct.em_tx_queue*, %struct.em_tx_queue** %4, align 8
  %113 = getelementptr inbounds %struct.em_tx_queue, %struct.em_tx_queue* %112, i32 0, i32 0
  store %struct.tx_ring* %113, %struct.tx_ring** %18, align 8
  %114 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0
  %115 = load i32, i32* %17, align 4
  %116 = call i32 @snprintf(i8* %114, i32 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i32 %115)
  %117 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %118 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %119 = load i32, i32* @OID_AUTO, align 4
  %120 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0
  %121 = load i32, i32* @CTLFLAG_RD, align 4
  %122 = call %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %117, %struct.sysctl_oid_list* %118, i32 %119, i8* %120, i32 %121, i32* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0))
  store %struct.sysctl_oid* %122, %struct.sysctl_oid** %11, align 8
  %123 = load %struct.sysctl_oid*, %struct.sysctl_oid** %11, align 8
  %124 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %123)
  store %struct.sysctl_oid_list* %124, %struct.sysctl_oid_list** %14, align 8
  %125 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %126 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %14, align 8
  %127 = load i32, i32* @OID_AUTO, align 4
  %128 = load i32, i32* @CTLTYPE_UINT, align 4
  %129 = load i32, i32* @CTLFLAG_RD, align 4
  %130 = or i32 %128, %129
  %131 = load %struct.adapter*, %struct.adapter** %2, align 8
  %132 = load %struct.tx_ring*, %struct.tx_ring** %18, align 8
  %133 = getelementptr inbounds %struct.tx_ring, %struct.tx_ring* %132, i32 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = call i32 @E1000_TDH(i32 %134)
  %136 = load i32, i32* @em_sysctl_reg_handler, align 4
  %137 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %125, %struct.sysctl_oid_list* %126, i32 %127, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i64 0, i64 0), i32 %130, %struct.adapter* %131, i32 %135, i32 %136, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0))
  %138 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %139 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %14, align 8
  %140 = load i32, i32* @OID_AUTO, align 4
  %141 = load i32, i32* @CTLTYPE_UINT, align 4
  %142 = load i32, i32* @CTLFLAG_RD, align 4
  %143 = or i32 %141, %142
  %144 = load %struct.adapter*, %struct.adapter** %2, align 8
  %145 = load %struct.tx_ring*, %struct.tx_ring** %18, align 8
  %146 = getelementptr inbounds %struct.tx_ring, %struct.tx_ring* %145, i32 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = call i32 @E1000_TDT(i32 %147)
  %149 = load i32, i32* @em_sysctl_reg_handler, align 4
  %150 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %138, %struct.sysctl_oid_list* %139, i32 %140, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0), i32 %143, %struct.adapter* %144, i32 %148, i32 %149, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22, i64 0, i64 0))
  %151 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %152 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %14, align 8
  %153 = load i32, i32* @OID_AUTO, align 4
  %154 = load i32, i32* @CTLFLAG_RD, align 4
  %155 = load %struct.tx_ring*, %struct.tx_ring** %18, align 8
  %156 = getelementptr inbounds %struct.tx_ring, %struct.tx_ring* %155, i32 0, i32 0
  %157 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %151, %struct.sysctl_oid_list* %152, i32 %153, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.23, i64 0, i64 0), i32 %154, i32* %156, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.24, i64 0, i64 0))
  br label %158

158:                                              ; preds = %111
  %159 = load i32, i32* %17, align 4
  %160 = add nsw i32 %159, 1
  store i32 %160, i32* %17, align 4
  %161 = load %struct.em_tx_queue*, %struct.em_tx_queue** %4, align 8
  %162 = getelementptr inbounds %struct.em_tx_queue, %struct.em_tx_queue* %161, i32 1
  store %struct.em_tx_queue* %162, %struct.em_tx_queue** %4, align 8
  br label %105

163:                                              ; preds = %105
  store i32 0, i32* %19, align 4
  br label %164

164:                                              ; preds = %217, %163
  %165 = load i32, i32* %19, align 4
  %166 = load %struct.adapter*, %struct.adapter** %2, align 8
  %167 = getelementptr inbounds %struct.adapter, %struct.adapter* %166, i32 0, i32 1
  %168 = load i32, i32* %167, align 4
  %169 = icmp slt i32 %165, %168
  br i1 %169, label %170, label %222

170:                                              ; preds = %164
  %171 = load %struct.em_rx_queue*, %struct.em_rx_queue** %5, align 8
  %172 = getelementptr inbounds %struct.em_rx_queue, %struct.em_rx_queue* %171, i32 0, i32 0
  store %struct.rx_ring* %172, %struct.rx_ring** %20, align 8
  %173 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0
  %174 = load i32, i32* %19, align 4
  %175 = call i32 @snprintf(i8* %173, i32 32, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0), i32 %174)
  %176 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %177 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %178 = load i32, i32* @OID_AUTO, align 4
  %179 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0
  %180 = load i32, i32* @CTLFLAG_RD, align 4
  %181 = call %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %176, %struct.sysctl_oid_list* %177, i32 %178, i8* %179, i32 %180, i32* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i64 0, i64 0))
  store %struct.sysctl_oid* %181, %struct.sysctl_oid** %11, align 8
  %182 = load %struct.sysctl_oid*, %struct.sysctl_oid** %11, align 8
  %183 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %182)
  store %struct.sysctl_oid_list* %183, %struct.sysctl_oid_list** %14, align 8
  %184 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %185 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %14, align 8
  %186 = load i32, i32* @OID_AUTO, align 4
  %187 = load i32, i32* @CTLTYPE_UINT, align 4
  %188 = load i32, i32* @CTLFLAG_RD, align 4
  %189 = or i32 %187, %188
  %190 = load %struct.adapter*, %struct.adapter** %2, align 8
  %191 = load %struct.rx_ring*, %struct.rx_ring** %20, align 8
  %192 = getelementptr inbounds %struct.rx_ring, %struct.rx_ring* %191, i32 0, i32 1
  %193 = load i32, i32* %192, align 4
  %194 = call i32 @E1000_RDH(i32 %193)
  %195 = load i32, i32* @em_sysctl_reg_handler, align 4
  %196 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %184, %struct.sysctl_oid_list* %185, i32 %186, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i64 0, i64 0), i32 %189, %struct.adapter* %190, i32 %194, i32 %195, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.28, i64 0, i64 0))
  %197 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %198 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %14, align 8
  %199 = load i32, i32* @OID_AUTO, align 4
  %200 = load i32, i32* @CTLTYPE_UINT, align 4
  %201 = load i32, i32* @CTLFLAG_RD, align 4
  %202 = or i32 %200, %201
  %203 = load %struct.adapter*, %struct.adapter** %2, align 8
  %204 = load %struct.rx_ring*, %struct.rx_ring** %20, align 8
  %205 = getelementptr inbounds %struct.rx_ring, %struct.rx_ring* %204, i32 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = call i32 @E1000_RDT(i32 %206)
  %208 = load i32, i32* @em_sysctl_reg_handler, align 4
  %209 = call i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list* %197, %struct.sysctl_oid_list* %198, i32 %199, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.29, i64 0, i64 0), i32 %202, %struct.adapter* %203, i32 %207, i32 %208, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i64 0, i64 0))
  %210 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %211 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %14, align 8
  %212 = load i32, i32* @OID_AUTO, align 4
  %213 = load i32, i32* @CTLFLAG_RD, align 4
  %214 = load %struct.rx_ring*, %struct.rx_ring** %20, align 8
  %215 = getelementptr inbounds %struct.rx_ring, %struct.rx_ring* %214, i32 0, i32 0
  %216 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %210, %struct.sysctl_oid_list* %211, i32 %212, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.31, i64 0, i64 0), i32 %213, i32* %215, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.32, i64 0, i64 0))
  br label %217

217:                                              ; preds = %170
  %218 = load i32, i32* %19, align 4
  %219 = add nsw i32 %218, 1
  store i32 %219, i32* %19, align 4
  %220 = load %struct.em_rx_queue*, %struct.em_rx_queue** %5, align 8
  %221 = getelementptr inbounds %struct.em_rx_queue, %struct.em_rx_queue* %220, i32 1
  store %struct.em_rx_queue* %221, %struct.em_rx_queue** %5, align 8
  br label %164

222:                                              ; preds = %164
  %223 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %224 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %225 = load i32, i32* @OID_AUTO, align 4
  %226 = load i32, i32* @CTLFLAG_RD, align 4
  %227 = call %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %223, %struct.sysctl_oid_list* %224, i32 %225, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i32 %226, i32* null, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0))
  store %struct.sysctl_oid* %227, %struct.sysctl_oid** %10, align 8
  %228 = load %struct.sysctl_oid*, %struct.sysctl_oid** %10, align 8
  %229 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %228)
  store %struct.sysctl_oid_list* %229, %struct.sysctl_oid_list** %13, align 8
  %230 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %231 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %232 = load i32, i32* @OID_AUTO, align 4
  %233 = load i32, i32* @CTLFLAG_RD, align 4
  %234 = load %struct.e1000_hw_stats*, %struct.e1000_hw_stats** %9, align 8
  %235 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %234, i32 0, i32 54
  %236 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %230, %struct.sysctl_oid_list* %231, i32 %232, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i64 0, i64 0), i32 %233, i32* %235, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.36, i64 0, i64 0))
  %237 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %238 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %239 = load i32, i32* @OID_AUTO, align 4
  %240 = load i32, i32* @CTLFLAG_RD, align 4
  %241 = load %struct.e1000_hw_stats*, %struct.e1000_hw_stats** %9, align 8
  %242 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %241, i32 0, i32 53
  %243 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %237, %struct.sysctl_oid_list* %238, i32 %239, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.37, i64 0, i64 0), i32 %240, i32* %242, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.38, i64 0, i64 0))
  %244 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %245 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %246 = load i32, i32* @OID_AUTO, align 4
  %247 = load i32, i32* @CTLFLAG_RD, align 4
  %248 = load %struct.e1000_hw_stats*, %struct.e1000_hw_stats** %9, align 8
  %249 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %248, i32 0, i32 52
  %250 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %244, %struct.sysctl_oid_list* %245, i32 %246, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i64 0, i64 0), i32 %247, i32* %249, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.40, i64 0, i64 0))
  %251 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %252 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %253 = load i32, i32* @OID_AUTO, align 4
  %254 = load i32, i32* @CTLFLAG_RD, align 4
  %255 = load %struct.e1000_hw_stats*, %struct.e1000_hw_stats** %9, align 8
  %256 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %255, i32 0, i32 51
  %257 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %251, %struct.sysctl_oid_list* %252, i32 %253, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.41, i64 0, i64 0), i32 %254, i32* %256, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.42, i64 0, i64 0))
  %258 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %259 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %260 = load i32, i32* @OID_AUTO, align 4
  %261 = load i32, i32* @CTLFLAG_RD, align 4
  %262 = load %struct.e1000_hw_stats*, %struct.e1000_hw_stats** %9, align 8
  %263 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %262, i32 0, i32 50
  %264 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %258, %struct.sysctl_oid_list* %259, i32 %260, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.43, i64 0, i64 0), i32 %261, i32* %263, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.44, i64 0, i64 0))
  %265 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %266 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %267 = load i32, i32* @OID_AUTO, align 4
  %268 = load i32, i32* @CTLFLAG_RD, align 4
  %269 = load %struct.adapter*, %struct.adapter** %2, align 8
  %270 = getelementptr inbounds %struct.adapter, %struct.adapter* %269, i32 0, i32 2
  %271 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %270, i32 0, i32 49
  %272 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %265, %struct.sysctl_oid_list* %266, i32 %267, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.45, i64 0, i64 0), i32 %268, i32* %271, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i64 0, i64 0))
  %273 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %274 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %275 = load i32, i32* @OID_AUTO, align 4
  %276 = load i32, i32* @CTLFLAG_RD, align 4
  %277 = load %struct.adapter*, %struct.adapter** %2, align 8
  %278 = getelementptr inbounds %struct.adapter, %struct.adapter* %277, i32 0, i32 2
  %279 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %278, i32 0, i32 48
  %280 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %273, %struct.sysctl_oid_list* %274, i32 %275, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.47, i64 0, i64 0), i32 %276, i32* %279, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i64 0, i64 0))
  %281 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %282 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %283 = load i32, i32* @OID_AUTO, align 4
  %284 = load i32, i32* @CTLFLAG_RD, align 4
  %285 = load %struct.adapter*, %struct.adapter** %2, align 8
  %286 = getelementptr inbounds %struct.adapter, %struct.adapter* %285, i32 0, i32 2
  %287 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %286, i32 0, i32 47
  %288 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %281, %struct.sysctl_oid_list* %282, i32 %283, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.49, i64 0, i64 0), i32 %284, i32* %287, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.50, i64 0, i64 0))
  %289 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %290 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %291 = load i32, i32* @OID_AUTO, align 4
  %292 = load i32, i32* @CTLFLAG_RD, align 4
  %293 = load %struct.adapter*, %struct.adapter** %2, align 8
  %294 = getelementptr inbounds %struct.adapter, %struct.adapter* %293, i32 0, i32 2
  %295 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %294, i32 0, i32 46
  %296 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %289, %struct.sysctl_oid_list* %290, i32 %291, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.51, i64 0, i64 0), i32 %292, i32* %295, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.52, i64 0, i64 0))
  %297 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %298 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %299 = load i32, i32* @OID_AUTO, align 4
  %300 = load i32, i32* @CTLFLAG_RD, align 4
  %301 = load %struct.adapter*, %struct.adapter** %2, align 8
  %302 = getelementptr inbounds %struct.adapter, %struct.adapter* %301, i32 0, i32 2
  %303 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %302, i32 0, i32 45
  %304 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %297, %struct.sysctl_oid_list* %298, i32 %299, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i64 0, i64 0), i32 %300, i32* %303, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.54, i64 0, i64 0))
  %305 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %306 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %307 = load i32, i32* @OID_AUTO, align 4
  %308 = load i32, i32* @CTLFLAG_RD, align 4
  %309 = load %struct.adapter*, %struct.adapter** %2, align 8
  %310 = getelementptr inbounds %struct.adapter, %struct.adapter* %309, i32 0, i32 2
  %311 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %310, i32 0, i32 44
  %312 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %305, %struct.sysctl_oid_list* %306, i32 %307, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i64 0, i64 0), i32 %308, i32* %311, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.56, i64 0, i64 0))
  %313 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %314 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %315 = load i32, i32* @OID_AUTO, align 4
  %316 = load i32, i32* @CTLFLAG_RD, align 4
  %317 = load %struct.adapter*, %struct.adapter** %2, align 8
  %318 = getelementptr inbounds %struct.adapter, %struct.adapter* %317, i32 0, i32 2
  %319 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %318, i32 0, i32 43
  %320 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %313, %struct.sysctl_oid_list* %314, i32 %315, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.57, i64 0, i64 0), i32 %316, i32* %319, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.58, i64 0, i64 0))
  %321 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %322 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %323 = load i32, i32* @OID_AUTO, align 4
  %324 = load i32, i32* @CTLFLAG_RD, align 4
  %325 = load %struct.adapter*, %struct.adapter** %2, align 8
  %326 = getelementptr inbounds %struct.adapter, %struct.adapter* %325, i32 0, i32 2
  %327 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %326, i32 0, i32 42
  %328 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %321, %struct.sysctl_oid_list* %322, i32 %323, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.59, i64 0, i64 0), i32 %324, i32* %327, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.60, i64 0, i64 0))
  %329 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %330 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %331 = load i32, i32* @OID_AUTO, align 4
  %332 = load i32, i32* @CTLFLAG_RD, align 4
  %333 = load %struct.adapter*, %struct.adapter** %2, align 8
  %334 = getelementptr inbounds %struct.adapter, %struct.adapter* %333, i32 0, i32 2
  %335 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %334, i32 0, i32 41
  %336 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %329, %struct.sysctl_oid_list* %330, i32 %331, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.61, i64 0, i64 0), i32 %332, i32* %335, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.62, i64 0, i64 0))
  %337 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %338 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %339 = load i32, i32* @OID_AUTO, align 4
  %340 = load i32, i32* @CTLFLAG_RD, align 4
  %341 = load %struct.adapter*, %struct.adapter** %2, align 8
  %342 = getelementptr inbounds %struct.adapter, %struct.adapter* %341, i32 0, i32 2
  %343 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %342, i32 0, i32 40
  %344 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %337, %struct.sysctl_oid_list* %338, i32 %339, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.63, i64 0, i64 0), i32 %340, i32* %343, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.64, i64 0, i64 0))
  %345 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %346 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %347 = load i32, i32* @OID_AUTO, align 4
  %348 = load i32, i32* @CTLFLAG_RD, align 4
  %349 = load %struct.adapter*, %struct.adapter** %2, align 8
  %350 = getelementptr inbounds %struct.adapter, %struct.adapter* %349, i32 0, i32 2
  %351 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %350, i32 0, i32 39
  %352 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %345, %struct.sysctl_oid_list* %346, i32 %347, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.65, i64 0, i64 0), i32 %348, i32* %351, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.66, i64 0, i64 0))
  %353 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %354 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %355 = load i32, i32* @OID_AUTO, align 4
  %356 = load i32, i32* @CTLFLAG_RD, align 4
  %357 = load %struct.adapter*, %struct.adapter** %2, align 8
  %358 = getelementptr inbounds %struct.adapter, %struct.adapter* %357, i32 0, i32 2
  %359 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %358, i32 0, i32 38
  %360 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %353, %struct.sysctl_oid_list* %354, i32 %355, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.67, i64 0, i64 0), i32 %356, i32* %359, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.68, i64 0, i64 0))
  %361 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %362 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %363 = load i32, i32* @OID_AUTO, align 4
  %364 = load i32, i32* @CTLFLAG_RD, align 4
  %365 = load %struct.adapter*, %struct.adapter** %2, align 8
  %366 = getelementptr inbounds %struct.adapter, %struct.adapter* %365, i32 0, i32 2
  %367 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %366, i32 0, i32 37
  %368 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %361, %struct.sysctl_oid_list* %362, i32 %363, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.69, i64 0, i64 0), i32 %364, i32* %367, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.70, i64 0, i64 0))
  %369 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %370 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %371 = load i32, i32* @OID_AUTO, align 4
  %372 = load i32, i32* @CTLFLAG_RD, align 4
  %373 = load %struct.adapter*, %struct.adapter** %2, align 8
  %374 = getelementptr inbounds %struct.adapter, %struct.adapter* %373, i32 0, i32 2
  %375 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %374, i32 0, i32 36
  %376 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %369, %struct.sysctl_oid_list* %370, i32 %371, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i64 0, i64 0), i32 %372, i32* %375, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.72, i64 0, i64 0))
  %377 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %378 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %379 = load i32, i32* @OID_AUTO, align 4
  %380 = load i32, i32* @CTLFLAG_RD, align 4
  %381 = load %struct.adapter*, %struct.adapter** %2, align 8
  %382 = getelementptr inbounds %struct.adapter, %struct.adapter* %381, i32 0, i32 2
  %383 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %382, i32 0, i32 35
  %384 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %377, %struct.sysctl_oid_list* %378, i32 %379, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.73, i64 0, i64 0), i32 %380, i32* %383, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.74, i64 0, i64 0))
  %385 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %386 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %387 = load i32, i32* @OID_AUTO, align 4
  %388 = load i32, i32* @CTLFLAG_RD, align 4
  %389 = load %struct.adapter*, %struct.adapter** %2, align 8
  %390 = getelementptr inbounds %struct.adapter, %struct.adapter* %389, i32 0, i32 2
  %391 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %390, i32 0, i32 34
  %392 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %385, %struct.sysctl_oid_list* %386, i32 %387, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.75, i64 0, i64 0), i32 %388, i32* %391, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.76, i64 0, i64 0))
  %393 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %394 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %395 = load i32, i32* @OID_AUTO, align 4
  %396 = load i32, i32* @CTLFLAG_RD, align 4
  %397 = load %struct.adapter*, %struct.adapter** %2, align 8
  %398 = getelementptr inbounds %struct.adapter, %struct.adapter* %397, i32 0, i32 2
  %399 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %398, i32 0, i32 33
  %400 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %393, %struct.sysctl_oid_list* %394, i32 %395, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77, i64 0, i64 0), i32 %396, i32* %399, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.78, i64 0, i64 0))
  %401 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %402 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %403 = load i32, i32* @OID_AUTO, align 4
  %404 = load i32, i32* @CTLFLAG_RD, align 4
  %405 = load %struct.adapter*, %struct.adapter** %2, align 8
  %406 = getelementptr inbounds %struct.adapter, %struct.adapter* %405, i32 0, i32 2
  %407 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %406, i32 0, i32 32
  %408 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %401, %struct.sysctl_oid_list* %402, i32 %403, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.79, i64 0, i64 0), i32 %404, i32* %407, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.80, i64 0, i64 0))
  %409 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %410 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %411 = load i32, i32* @OID_AUTO, align 4
  %412 = load i32, i32* @CTLFLAG_RD, align 4
  %413 = load %struct.adapter*, %struct.adapter** %2, align 8
  %414 = getelementptr inbounds %struct.adapter, %struct.adapter* %413, i32 0, i32 2
  %415 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %414, i32 0, i32 31
  %416 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %409, %struct.sysctl_oid_list* %410, i32 %411, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.81, i64 0, i64 0), i32 %412, i32* %415, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.82, i64 0, i64 0))
  %417 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %418 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %419 = load i32, i32* @OID_AUTO, align 4
  %420 = load i32, i32* @CTLFLAG_RD, align 4
  %421 = load %struct.adapter*, %struct.adapter** %2, align 8
  %422 = getelementptr inbounds %struct.adapter, %struct.adapter* %421, i32 0, i32 2
  %423 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %422, i32 0, i32 30
  %424 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %417, %struct.sysctl_oid_list* %418, i32 %419, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.83, i64 0, i64 0), i32 %420, i32* %423, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.84, i64 0, i64 0))
  %425 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %426 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %427 = load i32, i32* @OID_AUTO, align 4
  %428 = load i32, i32* @CTLFLAG_RD, align 4
  %429 = load %struct.adapter*, %struct.adapter** %2, align 8
  %430 = getelementptr inbounds %struct.adapter, %struct.adapter* %429, i32 0, i32 2
  %431 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %430, i32 0, i32 29
  %432 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %425, %struct.sysctl_oid_list* %426, i32 %427, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.85, i64 0, i64 0), i32 %428, i32* %431, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.86, i64 0, i64 0))
  %433 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %434 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %435 = load i32, i32* @OID_AUTO, align 4
  %436 = load i32, i32* @CTLFLAG_RD, align 4
  %437 = load %struct.adapter*, %struct.adapter** %2, align 8
  %438 = getelementptr inbounds %struct.adapter, %struct.adapter* %437, i32 0, i32 2
  %439 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %438, i32 0, i32 28
  %440 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %433, %struct.sysctl_oid_list* %434, i32 %435, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.87, i64 0, i64 0), i32 %436, i32* %439, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.88, i64 0, i64 0))
  %441 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %442 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %443 = load i32, i32* @OID_AUTO, align 4
  %444 = load i32, i32* @CTLFLAG_RD, align 4
  %445 = load %struct.adapter*, %struct.adapter** %2, align 8
  %446 = getelementptr inbounds %struct.adapter, %struct.adapter* %445, i32 0, i32 2
  %447 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %446, i32 0, i32 27
  %448 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %441, %struct.sysctl_oid_list* %442, i32 %443, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.89, i64 0, i64 0), i32 %444, i32* %447, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.90, i64 0, i64 0))
  %449 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %450 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %451 = load i32, i32* @OID_AUTO, align 4
  %452 = load i32, i32* @CTLFLAG_RD, align 4
  %453 = load %struct.adapter*, %struct.adapter** %2, align 8
  %454 = getelementptr inbounds %struct.adapter, %struct.adapter* %453, i32 0, i32 2
  %455 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %454, i32 0, i32 26
  %456 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %449, %struct.sysctl_oid_list* %450, i32 %451, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.91, i64 0, i64 0), i32 %452, i32* %455, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.92, i64 0, i64 0))
  %457 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %458 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %459 = load i32, i32* @OID_AUTO, align 4
  %460 = load i32, i32* @CTLFLAG_RD, align 4
  %461 = load %struct.adapter*, %struct.adapter** %2, align 8
  %462 = getelementptr inbounds %struct.adapter, %struct.adapter* %461, i32 0, i32 2
  %463 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %462, i32 0, i32 25
  %464 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %457, %struct.sysctl_oid_list* %458, i32 %459, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.93, i64 0, i64 0), i32 %460, i32* %463, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.94, i64 0, i64 0))
  %465 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %466 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %467 = load i32, i32* @OID_AUTO, align 4
  %468 = load i32, i32* @CTLFLAG_RD, align 4
  %469 = load %struct.adapter*, %struct.adapter** %2, align 8
  %470 = getelementptr inbounds %struct.adapter, %struct.adapter* %469, i32 0, i32 2
  %471 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %470, i32 0, i32 24
  %472 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %465, %struct.sysctl_oid_list* %466, i32 %467, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.95, i64 0, i64 0), i32 %468, i32* %471, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.96, i64 0, i64 0))
  %473 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %474 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %475 = load i32, i32* @OID_AUTO, align 4
  %476 = load i32, i32* @CTLFLAG_RD, align 4
  %477 = load %struct.adapter*, %struct.adapter** %2, align 8
  %478 = getelementptr inbounds %struct.adapter, %struct.adapter* %477, i32 0, i32 2
  %479 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %478, i32 0, i32 23
  %480 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %473, %struct.sysctl_oid_list* %474, i32 %475, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.97, i64 0, i64 0), i32 %476, i32* %479, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.98, i64 0, i64 0))
  %481 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %482 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %483 = load i32, i32* @OID_AUTO, align 4
  %484 = load i32, i32* @CTLFLAG_RD, align 4
  %485 = load %struct.adapter*, %struct.adapter** %2, align 8
  %486 = getelementptr inbounds %struct.adapter, %struct.adapter* %485, i32 0, i32 2
  %487 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %486, i32 0, i32 22
  %488 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %481, %struct.sysctl_oid_list* %482, i32 %483, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.99, i64 0, i64 0), i32 %484, i32* %487, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.100, i64 0, i64 0))
  %489 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %490 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %491 = load i32, i32* @OID_AUTO, align 4
  %492 = load i32, i32* @CTLFLAG_RD, align 4
  %493 = load %struct.adapter*, %struct.adapter** %2, align 8
  %494 = getelementptr inbounds %struct.adapter, %struct.adapter* %493, i32 0, i32 2
  %495 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %494, i32 0, i32 21
  %496 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %489, %struct.sysctl_oid_list* %490, i32 %491, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.101, i64 0, i64 0), i32 %492, i32* %495, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.102, i64 0, i64 0))
  %497 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %498 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %499 = load i32, i32* @OID_AUTO, align 4
  %500 = load i32, i32* @CTLFLAG_RD, align 4
  %501 = load %struct.adapter*, %struct.adapter** %2, align 8
  %502 = getelementptr inbounds %struct.adapter, %struct.adapter* %501, i32 0, i32 2
  %503 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %502, i32 0, i32 20
  %504 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %497, %struct.sysctl_oid_list* %498, i32 %499, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.103, i64 0, i64 0), i32 %500, i32* %503, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.104, i64 0, i64 0))
  %505 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %506 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %507 = load i32, i32* @OID_AUTO, align 4
  %508 = load i32, i32* @CTLFLAG_RD, align 4
  %509 = load %struct.adapter*, %struct.adapter** %2, align 8
  %510 = getelementptr inbounds %struct.adapter, %struct.adapter* %509, i32 0, i32 2
  %511 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %510, i32 0, i32 19
  %512 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %505, %struct.sysctl_oid_list* %506, i32 %507, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.105, i64 0, i64 0), i32 %508, i32* %511, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.106, i64 0, i64 0))
  %513 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %514 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %515 = load i32, i32* @OID_AUTO, align 4
  %516 = load i32, i32* @CTLFLAG_RD, align 4
  %517 = load %struct.adapter*, %struct.adapter** %2, align 8
  %518 = getelementptr inbounds %struct.adapter, %struct.adapter* %517, i32 0, i32 2
  %519 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %518, i32 0, i32 18
  %520 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %513, %struct.sysctl_oid_list* %514, i32 %515, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.107, i64 0, i64 0), i32 %516, i32* %519, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.108, i64 0, i64 0))
  %521 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %522 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %523 = load i32, i32* @OID_AUTO, align 4
  %524 = load i32, i32* @CTLFLAG_RD, align 4
  %525 = load %struct.adapter*, %struct.adapter** %2, align 8
  %526 = getelementptr inbounds %struct.adapter, %struct.adapter* %525, i32 0, i32 2
  %527 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %526, i32 0, i32 17
  %528 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %521, %struct.sysctl_oid_list* %522, i32 %523, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.109, i64 0, i64 0), i32 %524, i32* %527, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.110, i64 0, i64 0))
  %529 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %530 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %531 = load i32, i32* @OID_AUTO, align 4
  %532 = load i32, i32* @CTLFLAG_RD, align 4
  %533 = load %struct.adapter*, %struct.adapter** %2, align 8
  %534 = getelementptr inbounds %struct.adapter, %struct.adapter* %533, i32 0, i32 2
  %535 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %534, i32 0, i32 16
  %536 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %529, %struct.sysctl_oid_list* %530, i32 %531, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.111, i64 0, i64 0), i32 %532, i32* %535, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.112, i64 0, i64 0))
  %537 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %538 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %539 = load i32, i32* @OID_AUTO, align 4
  %540 = load i32, i32* @CTLFLAG_RD, align 4
  %541 = load %struct.adapter*, %struct.adapter** %2, align 8
  %542 = getelementptr inbounds %struct.adapter, %struct.adapter* %541, i32 0, i32 2
  %543 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %542, i32 0, i32 15
  %544 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %537, %struct.sysctl_oid_list* %538, i32 %539, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.113, i64 0, i64 0), i32 %540, i32* %543, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.114, i64 0, i64 0))
  %545 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %546 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %547 = load i32, i32* @OID_AUTO, align 4
  %548 = load i32, i32* @CTLFLAG_RD, align 4
  %549 = load %struct.adapter*, %struct.adapter** %2, align 8
  %550 = getelementptr inbounds %struct.adapter, %struct.adapter* %549, i32 0, i32 2
  %551 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %550, i32 0, i32 14
  %552 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %545, %struct.sysctl_oid_list* %546, i32 %547, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.115, i64 0, i64 0), i32 %548, i32* %551, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.116, i64 0, i64 0))
  %553 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %554 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %555 = load i32, i32* @OID_AUTO, align 4
  %556 = load i32, i32* @CTLFLAG_RD, align 4
  %557 = load %struct.adapter*, %struct.adapter** %2, align 8
  %558 = getelementptr inbounds %struct.adapter, %struct.adapter* %557, i32 0, i32 2
  %559 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %558, i32 0, i32 13
  %560 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %553, %struct.sysctl_oid_list* %554, i32 %555, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.117, i64 0, i64 0), i32 %556, i32* %559, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.118, i64 0, i64 0))
  %561 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %562 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %563 = load i32, i32* @OID_AUTO, align 4
  %564 = load i32, i32* @CTLFLAG_RD, align 4
  %565 = load %struct.adapter*, %struct.adapter** %2, align 8
  %566 = getelementptr inbounds %struct.adapter, %struct.adapter* %565, i32 0, i32 2
  %567 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %566, i32 0, i32 12
  %568 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %561, %struct.sysctl_oid_list* %562, i32 %563, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.119, i64 0, i64 0), i32 %564, i32* %567, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.120, i64 0, i64 0))
  %569 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %570 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %571 = load i32, i32* @OID_AUTO, align 4
  %572 = load i32, i32* @CTLFLAG_RD, align 4
  %573 = load %struct.adapter*, %struct.adapter** %2, align 8
  %574 = getelementptr inbounds %struct.adapter, %struct.adapter* %573, i32 0, i32 2
  %575 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %574, i32 0, i32 11
  %576 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %569, %struct.sysctl_oid_list* %570, i32 %571, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.121, i64 0, i64 0), i32 %572, i32* %575, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.122, i64 0, i64 0))
  %577 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %578 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %579 = load i32, i32* @OID_AUTO, align 4
  %580 = load i32, i32* @CTLFLAG_RD, align 4
  %581 = load %struct.adapter*, %struct.adapter** %2, align 8
  %582 = getelementptr inbounds %struct.adapter, %struct.adapter* %581, i32 0, i32 2
  %583 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %582, i32 0, i32 10
  %584 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %577, %struct.sysctl_oid_list* %578, i32 %579, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), i32 %580, i32* %583, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.124, i64 0, i64 0))
  %585 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %586 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %13, align 8
  %587 = load i32, i32* @OID_AUTO, align 4
  %588 = load i32, i32* @CTLFLAG_RD, align 4
  %589 = load %struct.adapter*, %struct.adapter** %2, align 8
  %590 = getelementptr inbounds %struct.adapter, %struct.adapter* %589, i32 0, i32 2
  %591 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %590, i32 0, i32 9
  %592 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %585, %struct.sysctl_oid_list* %586, i32 %587, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.125, i64 0, i64 0), i32 %588, i32* %591, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.126, i64 0, i64 0))
  %593 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %594 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %8, align 8
  %595 = load i32, i32* @OID_AUTO, align 4
  %596 = load i32, i32* @CTLFLAG_RD, align 4
  %597 = call %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %593, %struct.sysctl_oid_list* %594, i32 %595, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.127, i64 0, i64 0), i32 %596, i32* null, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.128, i64 0, i64 0))
  store %struct.sysctl_oid* %597, %struct.sysctl_oid** %12, align 8
  %598 = load %struct.sysctl_oid*, %struct.sysctl_oid** %12, align 8
  %599 = call %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid* %598)
  store %struct.sysctl_oid_list* %599, %struct.sysctl_oid_list** %15, align 8
  %600 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %601 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %15, align 8
  %602 = load i32, i32* @OID_AUTO, align 4
  %603 = load i32, i32* @CTLFLAG_RD, align 4
  %604 = load %struct.adapter*, %struct.adapter** %2, align 8
  %605 = getelementptr inbounds %struct.adapter, %struct.adapter* %604, i32 0, i32 2
  %606 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %605, i32 0, i32 8
  %607 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %600, %struct.sysctl_oid_list* %601, i32 %602, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.129, i64 0, i64 0), i32 %603, i32* %606, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.130, i64 0, i64 0))
  %608 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %609 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %15, align 8
  %610 = load i32, i32* @OID_AUTO, align 4
  %611 = load i32, i32* @CTLFLAG_RD, align 4
  %612 = load %struct.adapter*, %struct.adapter** %2, align 8
  %613 = getelementptr inbounds %struct.adapter, %struct.adapter* %612, i32 0, i32 2
  %614 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %613, i32 0, i32 7
  %615 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %608, %struct.sysctl_oid_list* %609, i32 %610, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.131, i64 0, i64 0), i32 %611, i32* %614, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.132, i64 0, i64 0))
  %616 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %617 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %15, align 8
  %618 = load i32, i32* @OID_AUTO, align 4
  %619 = load i32, i32* @CTLFLAG_RD, align 4
  %620 = load %struct.adapter*, %struct.adapter** %2, align 8
  %621 = getelementptr inbounds %struct.adapter, %struct.adapter* %620, i32 0, i32 2
  %622 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %621, i32 0, i32 6
  %623 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %616, %struct.sysctl_oid_list* %617, i32 %618, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.133, i64 0, i64 0), i32 %619, i32* %622, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.134, i64 0, i64 0))
  %624 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %625 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %15, align 8
  %626 = load i32, i32* @OID_AUTO, align 4
  %627 = load i32, i32* @CTLFLAG_RD, align 4
  %628 = load %struct.adapter*, %struct.adapter** %2, align 8
  %629 = getelementptr inbounds %struct.adapter, %struct.adapter* %628, i32 0, i32 2
  %630 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %629, i32 0, i32 5
  %631 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %624, %struct.sysctl_oid_list* %625, i32 %626, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.135, i64 0, i64 0), i32 %627, i32* %630, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.136, i64 0, i64 0))
  %632 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %633 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %15, align 8
  %634 = load i32, i32* @OID_AUTO, align 4
  %635 = load i32, i32* @CTLFLAG_RD, align 4
  %636 = load %struct.adapter*, %struct.adapter** %2, align 8
  %637 = getelementptr inbounds %struct.adapter, %struct.adapter* %636, i32 0, i32 2
  %638 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %637, i32 0, i32 4
  %639 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %632, %struct.sysctl_oid_list* %633, i32 %634, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.137, i64 0, i64 0), i32 %635, i32* %638, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.138, i64 0, i64 0))
  %640 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %641 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %15, align 8
  %642 = load i32, i32* @OID_AUTO, align 4
  %643 = load i32, i32* @CTLFLAG_RD, align 4
  %644 = load %struct.adapter*, %struct.adapter** %2, align 8
  %645 = getelementptr inbounds %struct.adapter, %struct.adapter* %644, i32 0, i32 2
  %646 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %645, i32 0, i32 3
  %647 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %640, %struct.sysctl_oid_list* %641, i32 %642, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.139, i64 0, i64 0), i32 %643, i32* %646, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.140, i64 0, i64 0))
  %648 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %649 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %15, align 8
  %650 = load i32, i32* @OID_AUTO, align 4
  %651 = load i32, i32* @CTLFLAG_RD, align 4
  %652 = load %struct.adapter*, %struct.adapter** %2, align 8
  %653 = getelementptr inbounds %struct.adapter, %struct.adapter* %652, i32 0, i32 2
  %654 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %653, i32 0, i32 2
  %655 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %648, %struct.sysctl_oid_list* %649, i32 %650, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.141, i64 0, i64 0), i32 %651, i32* %654, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.142, i64 0, i64 0))
  %656 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %657 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %15, align 8
  %658 = load i32, i32* @OID_AUTO, align 4
  %659 = load i32, i32* @CTLFLAG_RD, align 4
  %660 = load %struct.adapter*, %struct.adapter** %2, align 8
  %661 = getelementptr inbounds %struct.adapter, %struct.adapter* %660, i32 0, i32 2
  %662 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %661, i32 0, i32 1
  %663 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %656, %struct.sysctl_oid_list* %657, i32 %658, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.143, i64 0, i64 0), i32 %659, i32* %662, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.144, i64 0, i64 0))
  %664 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %6, align 8
  %665 = load %struct.sysctl_oid_list*, %struct.sysctl_oid_list** %15, align 8
  %666 = load i32, i32* @OID_AUTO, align 4
  %667 = load i32, i32* @CTLFLAG_RD, align 4
  %668 = load %struct.adapter*, %struct.adapter** %2, align 8
  %669 = getelementptr inbounds %struct.adapter, %struct.adapter* %668, i32 0, i32 2
  %670 = getelementptr inbounds %struct.e1000_hw_stats, %struct.e1000_hw_stats* %669, i32 0, i32 0
  %671 = call i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list* %664, %struct.sysctl_oid_list* %665, i32 %666, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.145, i64 0, i64 0), i32 %667, i32* %670, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.146, i64 0, i64 0))
  ret void
}

declare dso_local i32 @iflib_get_dev(i32) #1

declare dso_local %struct.sysctl_ctx_list* @device_get_sysctl_ctx(i32) #1

declare dso_local %struct.sysctl_oid* @device_get_sysctl_tree(i32) #1

declare dso_local %struct.sysctl_oid_list* @SYSCTL_CHILDREN(%struct.sysctl_oid*) #1

declare dso_local i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, i32*, i8*) #1

declare dso_local i32 @SYSCTL_ADD_PROC(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, %struct.adapter*, i32, i32, i8*, i8*) #1

declare dso_local i32 @SYSCTL_ADD_UINT(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, i32*, i32, i8*) #1

declare dso_local i32 @snprintf(i8*, i32, i8*, i32) #1

declare dso_local %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, i32*, i8*) #1

declare dso_local i32 @E1000_TDH(i32) #1

declare dso_local i32 @E1000_TDT(i32) #1

declare dso_local i32 @E1000_RDH(i32) #1

declare dso_local i32 @E1000_RDT(i32) #1

declare dso_local i32 @SYSCTL_ADD_UQUAD(%struct.sysctl_ctx_list*, %struct.sysctl_oid_list*, i32, i8*, i32, i32*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
