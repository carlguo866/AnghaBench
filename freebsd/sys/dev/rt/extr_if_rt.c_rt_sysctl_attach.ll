; ModuleID = '/home/carl/AnghaBench/freebsd/sys/dev/rt/extr_if_rt.c_rt_sysctl_attach.c'
source_filename = "/home/carl/AnghaBench/freebsd/sys/dev/rt/extr_if_rt.c_rt_sysctl_attach.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.rt_softc = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*, i32, i32, i32, i32, i32, i32*, %struct.TYPE_2__*, i32, i32*, i32, i32*, i32, i32, i32, i32 }
%struct.TYPE_2__ = type { i32, i32 }
%struct.sysctl_ctx_list = type { i32 }
%struct.sysctl_oid = type { i32 }

@OID_AUTO = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [6 x i8] c"stats\00", align 1
@CTLFLAG_RD = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [10 x i8] c"statistic\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"interrupts\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"all interrupts\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"tx_coherent_interrupts\00", align 1
@.str.5 = private unnamed_addr constant [23 x i8] c"Tx coherent interrupts\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"rx_coherent_interrupts\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"Rx coherent interrupts\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"rx_interrupts\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"Rx interrupts\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"rx_delay_interrupts\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"Rx delay interrupts\00", align 1
@.str.12 = private unnamed_addr constant [16 x i8] c"TXQ3_interrupts\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"Tx AC3 interrupts\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"TXQ2_interrupts\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"Tx AC2 interrupts\00", align 1
@.str.16 = private unnamed_addr constant [16 x i8] c"TXQ1_interrupts\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"Tx AC1 interrupts\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"TXQ0_interrupts\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c"Tx AC0 interrupts\00", align 1
@.str.20 = private unnamed_addr constant [20 x i8] c"tx_delay_interrupts\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"Tx delay interrupts\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"TXQ3_desc_queued\00", align 1
@.str.23 = private unnamed_addr constant [26 x i8] c"Tx AC3 descriptors queued\00", align 1
@.str.24 = private unnamed_addr constant [17 x i8] c"TXQ3_data_queued\00", align 1
@.str.25 = private unnamed_addr constant [19 x i8] c"Tx AC3 data queued\00", align 1
@.str.26 = private unnamed_addr constant [17 x i8] c"TXQ2_desc_queued\00", align 1
@.str.27 = private unnamed_addr constant [26 x i8] c"Tx AC2 descriptors queued\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"TXQ2_data_queued\00", align 1
@.str.29 = private unnamed_addr constant [19 x i8] c"Tx AC2 data queued\00", align 1
@.str.30 = private unnamed_addr constant [17 x i8] c"TXQ1_desc_queued\00", align 1
@.str.31 = private unnamed_addr constant [26 x i8] c"Tx AC1 descriptors queued\00", align 1
@.str.32 = private unnamed_addr constant [17 x i8] c"TXQ1_data_queued\00", align 1
@.str.33 = private unnamed_addr constant [19 x i8] c"Tx AC1 data queued\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"TXQ0_desc_queued\00", align 1
@.str.35 = private unnamed_addr constant [26 x i8] c"Tx AC0 descriptors queued\00", align 1
@.str.36 = private unnamed_addr constant [17 x i8] c"TXQ0_data_queued\00", align 1
@.str.37 = private unnamed_addr constant [19 x i8] c"Tx AC0 data queued\00", align 1
@.str.38 = private unnamed_addr constant [21 x i8] c"TXQ3_data_queue_full\00", align 1
@.str.39 = private unnamed_addr constant [23 x i8] c"Tx AC3 data queue full\00", align 1
@.str.40 = private unnamed_addr constant [21 x i8] c"TXQ2_data_queue_full\00", align 1
@.str.41 = private unnamed_addr constant [23 x i8] c"Tx AC2 data queue full\00", align 1
@.str.42 = private unnamed_addr constant [21 x i8] c"TXQ1_data_queue_full\00", align 1
@.str.43 = private unnamed_addr constant [23 x i8] c"Tx AC1 data queue full\00", align 1
@.str.44 = private unnamed_addr constant [21 x i8] c"TXQ0_data_queue_full\00", align 1
@.str.45 = private unnamed_addr constant [23 x i8] c"Tx AC0 data queue full\00", align 1
@.str.46 = private unnamed_addr constant [21 x i8] c"tx_watchdog_timeouts\00", align 1
@.str.47 = private unnamed_addr constant [21 x i8] c"Tx watchdog timeouts\00", align 1
@.str.48 = private unnamed_addr constant [18 x i8] c"tx_defrag_packets\00", align 1
@.str.49 = private unnamed_addr constant [24 x i8] c"Tx defragmented packets\00", align 1
@.str.50 = private unnamed_addr constant [17 x i8] c"no_tx_desc_avail\00", align 1
@.str.51 = private unnamed_addr constant [28 x i8] c"no Tx descriptors available\00", align 1
@.str.52 = private unnamed_addr constant [21 x i8] c"rx_mbuf_alloc_errors\00", align 1
@.str.53 = private unnamed_addr constant [26 x i8] c"Rx mbuf allocation errors\00", align 1
@.str.54 = private unnamed_addr constant [22 x i8] c"rx_mbuf_dmamap_errors\00", align 1
@.str.55 = private unnamed_addr constant [27 x i8] c"Rx mbuf DMA mapping errors\00", align 1
@.str.56 = private unnamed_addr constant [21 x i8] c"tx_queue_0_not_empty\00", align 1
@.str.57 = private unnamed_addr constant [21 x i8] c"Tx queue 0 not empty\00", align 1
@.str.58 = private unnamed_addr constant [21 x i8] c"tx_queue_1_not_empty\00", align 1
@.str.59 = private unnamed_addr constant [21 x i8] c"Tx queue 1 not empty\00", align 1
@.str.60 = private unnamed_addr constant [11 x i8] c"rx_packets\00", align 1
@.str.61 = private unnamed_addr constant [11 x i8] c"Rx packets\00", align 1
@.str.62 = private unnamed_addr constant [14 x i8] c"rx_crc_errors\00", align 1
@.str.63 = private unnamed_addr constant [14 x i8] c"Rx CRC errors\00", align 1
@.str.64 = private unnamed_addr constant [14 x i8] c"rx_phy_errors\00", align 1
@.str.65 = private unnamed_addr constant [14 x i8] c"Rx PHY errors\00", align 1
@.str.66 = private unnamed_addr constant [15 x i8] c"rx_dup_packets\00", align 1
@.str.67 = private unnamed_addr constant [21 x i8] c"Rx duplicate packets\00", align 1
@.str.68 = private unnamed_addr constant [18 x i8] c"rx_fifo_overflows\00", align 1
@.str.69 = private unnamed_addr constant [18 x i8] c"Rx FIFO overflows\00", align 1
@.str.70 = private unnamed_addr constant [9 x i8] c"rx_bytes\00", align 1
@.str.71 = private unnamed_addr constant [9 x i8] c"Rx bytes\00", align 1
@.str.72 = private unnamed_addr constant [12 x i8] c"rx_long_err\00", align 1
@.str.73 = private unnamed_addr constant [25 x i8] c"Rx too long frame errors\00", align 1
@.str.74 = private unnamed_addr constant [13 x i8] c"rx_short_err\00", align 1
@.str.75 = private unnamed_addr constant [26 x i8] c"Rx too short frame errors\00", align 1
@.str.76 = private unnamed_addr constant [9 x i8] c"tx_bytes\00", align 1
@.str.77 = private unnamed_addr constant [9 x i8] c"Tx bytes\00", align 1
@.str.78 = private unnamed_addr constant [11 x i8] c"tx_packets\00", align 1
@.str.79 = private unnamed_addr constant [11 x i8] c"Tx packets\00", align 1
@.str.80 = private unnamed_addr constant [8 x i8] c"tx_skip\00", align 1
@.str.81 = private unnamed_addr constant [29 x i8] c"Tx skip count for GDMA ports\00", align 1
@.str.82 = private unnamed_addr constant [13 x i8] c"tx_collision\00", align 1
@.str.83 = private unnamed_addr constant [34 x i8] c"Tx collision count for GDMA ports\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.rt_softc*)* @rt_sysctl_attach to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @rt_sysctl_attach(%struct.rt_softc* %0) #0 {
  %2 = alloca %struct.rt_softc*, align 8
  %3 = alloca %struct.sysctl_ctx_list*, align 8
  %4 = alloca %struct.sysctl_oid*, align 8
  %5 = alloca %struct.sysctl_oid*, align 8
  store %struct.rt_softc* %0, %struct.rt_softc** %2, align 8
  %6 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %7 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %6, i32 0, i32 27
  %8 = load i32, i32* %7, align 4
  %9 = call %struct.sysctl_ctx_list* @device_get_sysctl_ctx(i32 %8)
  store %struct.sysctl_ctx_list* %9, %struct.sysctl_ctx_list** %3, align 8
  %10 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %11 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %10, i32 0, i32 27
  %12 = load i32, i32* %11, align 4
  %13 = call %struct.sysctl_oid* @device_get_sysctl_tree(i32 %12)
  store %struct.sysctl_oid* %13, %struct.sysctl_oid** %4, align 8
  %14 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %15 = load %struct.sysctl_oid*, %struct.sysctl_oid** %4, align 8
  %16 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %15)
  %17 = load i32, i32* @OID_AUTO, align 4
  %18 = load i32, i32* @CTLFLAG_RD, align 4
  %19 = call %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list* %14, i32 %16, i32 %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32 %18, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0))
  store %struct.sysctl_oid* %19, %struct.sysctl_oid** %5, align 8
  %20 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %21 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %22 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %21)
  %23 = load i32, i32* @OID_AUTO, align 4
  %24 = load i32, i32* @CTLFLAG_RD, align 4
  %25 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %26 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %25, i32 0, i32 26
  %27 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %20, i32 %22, i32 %23, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i32 %24, i32* %26, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0))
  %28 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %29 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %30 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %29)
  %31 = load i32, i32* @OID_AUTO, align 4
  %32 = load i32, i32* @CTLFLAG_RD, align 4
  %33 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %34 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %33, i32 0, i32 25
  %35 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %28, i32 %30, i32 %31, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 %32, i32* %34, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.5, i64 0, i64 0))
  %36 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %37 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %38 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %37)
  %39 = load i32, i32* @OID_AUTO, align 4
  %40 = load i32, i32* @CTLFLAG_RD, align 4
  %41 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %42 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %41, i32 0, i32 24
  %43 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %36, i32 %38, i32 %39, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i32 %40, i32* %42, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0))
  %44 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %45 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %46 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %45)
  %47 = load i32, i32* @OID_AUTO, align 4
  %48 = load i32, i32* @CTLFLAG_RD, align 4
  %49 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %50 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %49, i32 0, i32 23
  %51 = load i32*, i32** %50, align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 0
  %53 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %44, i32 %46, i32 %47, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0), i32 %48, i32* %52, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0))
  %54 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %55 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %56 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %55)
  %57 = load i32, i32* @OID_AUTO, align 4
  %58 = load i32, i32* @CTLFLAG_RD, align 4
  %59 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %60 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %59, i32 0, i32 22
  %61 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %54, i32 %56, i32 %57, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0), i32 %58, i32* %60, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0))
  %62 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %63 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %64 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %63)
  %65 = load i32, i32* @OID_AUTO, align 4
  %66 = load i32, i32* @CTLFLAG_RD, align 4
  %67 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %68 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %67, i32 0, i32 21
  %69 = load i32*, i32** %68, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 3
  %71 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %62, i32 %64, i32 %65, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i32 %66, i32* %70, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0))
  %72 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %73 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %74 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %73)
  %75 = load i32, i32* @OID_AUTO, align 4
  %76 = load i32, i32* @CTLFLAG_RD, align 4
  %77 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %78 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %77, i32 0, i32 21
  %79 = load i32*, i32** %78, align 8
  %80 = getelementptr inbounds i32, i32* %79, i64 2
  %81 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %72, i32 %74, i32 %75, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i64 0, i64 0), i32 %76, i32* %80, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0))
  %82 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %83 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %84 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %83)
  %85 = load i32, i32* @OID_AUTO, align 4
  %86 = load i32, i32* @CTLFLAG_RD, align 4
  %87 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %88 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %87, i32 0, i32 21
  %89 = load i32*, i32** %88, align 8
  %90 = getelementptr inbounds i32, i32* %89, i64 1
  %91 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %82, i32 %84, i32 %85, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.16, i64 0, i64 0), i32 %86, i32* %90, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0))
  %92 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %93 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %94 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %93)
  %95 = load i32, i32* @OID_AUTO, align 4
  %96 = load i32, i32* @CTLFLAG_RD, align 4
  %97 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %98 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %97, i32 0, i32 21
  %99 = load i32*, i32** %98, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 0
  %101 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %92, i32 %94, i32 %95, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i32 %96, i32* %100, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0))
  %102 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %103 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %104 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %103)
  %105 = load i32, i32* @OID_AUTO, align 4
  %106 = load i32, i32* @CTLFLAG_RD, align 4
  %107 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %108 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %107, i32 0, i32 20
  %109 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %102, i32 %104, i32 %105, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i64 0, i64 0), i32 %106, i32* %108, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0))
  %110 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %111 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %112 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %111)
  %113 = load i32, i32* @OID_AUTO, align 4
  %114 = load i32, i32* @CTLFLAG_RD, align 4
  %115 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %116 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %115, i32 0, i32 19
  %117 = load %struct.TYPE_2__*, %struct.TYPE_2__** %116, align 8
  %118 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %117, i64 3
  %119 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %118, i32 0, i32 1
  %120 = call i32 @SYSCTL_ADD_INT(%struct.sysctl_ctx_list* %110, i32 %112, i32 %113, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0), i32 %114, i32* %119, i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.23, i64 0, i64 0))
  %121 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %122 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %123 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %122)
  %124 = load i32, i32* @OID_AUTO, align 4
  %125 = load i32, i32* @CTLFLAG_RD, align 4
  %126 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %127 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %126, i32 0, i32 19
  %128 = load %struct.TYPE_2__*, %struct.TYPE_2__** %127, align 8
  %129 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %128, i64 3
  %130 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %129, i32 0, i32 0
  %131 = call i32 @SYSCTL_ADD_INT(%struct.sysctl_ctx_list* %121, i32 %123, i32 %124, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0), i32 %125, i32* %130, i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.25, i64 0, i64 0))
  %132 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %133 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %134 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %133)
  %135 = load i32, i32* @OID_AUTO, align 4
  %136 = load i32, i32* @CTLFLAG_RD, align 4
  %137 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %138 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %137, i32 0, i32 19
  %139 = load %struct.TYPE_2__*, %struct.TYPE_2__** %138, align 8
  %140 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %139, i64 2
  %141 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %140, i32 0, i32 1
  %142 = call i32 @SYSCTL_ADD_INT(%struct.sysctl_ctx_list* %132, i32 %134, i32 %135, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i64 0, i64 0), i32 %136, i32* %141, i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.27, i64 0, i64 0))
  %143 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %144 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %145 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %144)
  %146 = load i32, i32* @OID_AUTO, align 4
  %147 = load i32, i32* @CTLFLAG_RD, align 4
  %148 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %149 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %148, i32 0, i32 19
  %150 = load %struct.TYPE_2__*, %struct.TYPE_2__** %149, align 8
  %151 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %150, i64 2
  %152 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %151, i32 0, i32 0
  %153 = call i32 @SYSCTL_ADD_INT(%struct.sysctl_ctx_list* %143, i32 %145, i32 %146, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i64 0, i64 0), i32 %147, i32* %152, i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29, i64 0, i64 0))
  %154 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %155 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %156 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %155)
  %157 = load i32, i32* @OID_AUTO, align 4
  %158 = load i32, i32* @CTLFLAG_RD, align 4
  %159 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %160 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %159, i32 0, i32 19
  %161 = load %struct.TYPE_2__*, %struct.TYPE_2__** %160, align 8
  %162 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %161, i64 1
  %163 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %162, i32 0, i32 1
  %164 = call i32 @SYSCTL_ADD_INT(%struct.sysctl_ctx_list* %154, i32 %156, i32 %157, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.30, i64 0, i64 0), i32 %158, i32* %163, i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31, i64 0, i64 0))
  %165 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %166 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %167 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %166)
  %168 = load i32, i32* @OID_AUTO, align 4
  %169 = load i32, i32* @CTLFLAG_RD, align 4
  %170 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %171 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %170, i32 0, i32 19
  %172 = load %struct.TYPE_2__*, %struct.TYPE_2__** %171, align 8
  %173 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %172, i64 1
  %174 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %173, i32 0, i32 0
  %175 = call i32 @SYSCTL_ADD_INT(%struct.sysctl_ctx_list* %165, i32 %167, i32 %168, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32, i64 0, i64 0), i32 %169, i32* %174, i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.33, i64 0, i64 0))
  %176 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %177 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %178 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %177)
  %179 = load i32, i32* @OID_AUTO, align 4
  %180 = load i32, i32* @CTLFLAG_RD, align 4
  %181 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %182 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %181, i32 0, i32 19
  %183 = load %struct.TYPE_2__*, %struct.TYPE_2__** %182, align 8
  %184 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %183, i64 0
  %185 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %184, i32 0, i32 1
  %186 = call i32 @SYSCTL_ADD_INT(%struct.sysctl_ctx_list* %176, i32 %178, i32 %179, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i64 0, i64 0), i32 %180, i32* %185, i32 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.35, i64 0, i64 0))
  %187 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %188 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %189 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %188)
  %190 = load i32, i32* @OID_AUTO, align 4
  %191 = load i32, i32* @CTLFLAG_RD, align 4
  %192 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %193 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %192, i32 0, i32 19
  %194 = load %struct.TYPE_2__*, %struct.TYPE_2__** %193, align 8
  %195 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %194, i64 0
  %196 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %195, i32 0, i32 0
  %197 = call i32 @SYSCTL_ADD_INT(%struct.sysctl_ctx_list* %187, i32 %189, i32 %190, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.36, i64 0, i64 0), i32 %191, i32* %196, i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i64 0, i64 0))
  %198 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %199 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %200 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %199)
  %201 = load i32, i32* @OID_AUTO, align 4
  %202 = load i32, i32* @CTLFLAG_RD, align 4
  %203 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %204 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %203, i32 0, i32 18
  %205 = load i32*, i32** %204, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 3
  %207 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %198, i32 %200, i32 %201, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i64 0, i64 0), i32 %202, i32* %206, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.39, i64 0, i64 0))
  %208 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %209 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %210 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %209)
  %211 = load i32, i32* @OID_AUTO, align 4
  %212 = load i32, i32* @CTLFLAG_RD, align 4
  %213 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %214 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %213, i32 0, i32 18
  %215 = load i32*, i32** %214, align 8
  %216 = getelementptr inbounds i32, i32* %215, i64 2
  %217 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %208, i32 %210, i32 %211, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.40, i64 0, i64 0), i32 %212, i32* %216, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0))
  %218 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %219 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %220 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %219)
  %221 = load i32, i32* @OID_AUTO, align 4
  %222 = load i32, i32* @CTLFLAG_RD, align 4
  %223 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %224 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %223, i32 0, i32 18
  %225 = load i32*, i32** %224, align 8
  %226 = getelementptr inbounds i32, i32* %225, i64 1
  %227 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %218, i32 %220, i32 %221, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.42, i64 0, i64 0), i32 %222, i32* %226, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i64 0, i64 0))
  %228 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %229 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %230 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %229)
  %231 = load i32, i32* @OID_AUTO, align 4
  %232 = load i32, i32* @CTLFLAG_RD, align 4
  %233 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %234 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %233, i32 0, i32 18
  %235 = load i32*, i32** %234, align 8
  %236 = getelementptr inbounds i32, i32* %235, i64 0
  %237 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %228, i32 %230, i32 %231, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44, i64 0, i64 0), i32 %232, i32* %236, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.45, i64 0, i64 0))
  %238 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %239 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %240 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %239)
  %241 = load i32, i32* @OID_AUTO, align 4
  %242 = load i32, i32* @CTLFLAG_RD, align 4
  %243 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %244 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %243, i32 0, i32 17
  %245 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %238, i32 %240, i32 %241, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.46, i64 0, i64 0), i32 %242, i32* %244, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.47, i64 0, i64 0))
  %246 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %247 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %248 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %247)
  %249 = load i32, i32* @OID_AUTO, align 4
  %250 = load i32, i32* @CTLFLAG_RD, align 4
  %251 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %252 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %251, i32 0, i32 16
  %253 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %246, i32 %248, i32 %249, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.48, i64 0, i64 0), i32 %250, i32* %252, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.49, i64 0, i64 0))
  %254 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %255 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %256 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %255)
  %257 = load i32, i32* @OID_AUTO, align 4
  %258 = load i32, i32* @CTLFLAG_RD, align 4
  %259 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %260 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %259, i32 0, i32 15
  %261 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %254, i32 %256, i32 %257, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.50, i64 0, i64 0), i32 %258, i32* %260, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.51, i64 0, i64 0))
  %262 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %263 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %264 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %263)
  %265 = load i32, i32* @OID_AUTO, align 4
  %266 = load i32, i32* @CTLFLAG_RD, align 4
  %267 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %268 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %267, i32 0, i32 14
  %269 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %262, i32 %264, i32 %265, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.52, i64 0, i64 0), i32 %266, i32* %268, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.53, i64 0, i64 0))
  %270 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %271 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %272 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %271)
  %273 = load i32, i32* @OID_AUTO, align 4
  %274 = load i32, i32* @CTLFLAG_RD, align 4
  %275 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %276 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %275, i32 0, i32 13
  %277 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %270, i32 %272, i32 %273, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.54, i64 0, i64 0), i32 %274, i32* %276, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.55, i64 0, i64 0))
  %278 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %279 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %280 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %279)
  %281 = load i32, i32* @OID_AUTO, align 4
  %282 = load i32, i32* @CTLFLAG_RD, align 4
  %283 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %284 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %283, i32 0, i32 12
  %285 = load i32*, i32** %284, align 8
  %286 = getelementptr inbounds i32, i32* %285, i64 0
  %287 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %278, i32 %280, i32 %281, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.56, i64 0, i64 0), i32 %282, i32* %286, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.57, i64 0, i64 0))
  %288 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %289 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %290 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %289)
  %291 = load i32, i32* @OID_AUTO, align 4
  %292 = load i32, i32* @CTLFLAG_RD, align 4
  %293 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %294 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %293, i32 0, i32 12
  %295 = load i32*, i32** %294, align 8
  %296 = getelementptr inbounds i32, i32* %295, i64 1
  %297 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %288, i32 %290, i32 %291, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.58, i64 0, i64 0), i32 %292, i32* %296, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.59, i64 0, i64 0))
  %298 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %299 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %300 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %299)
  %301 = load i32, i32* @OID_AUTO, align 4
  %302 = load i32, i32* @CTLFLAG_RD, align 4
  %303 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %304 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %303, i32 0, i32 11
  %305 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %298, i32 %300, i32 %301, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.60, i64 0, i64 0), i32 %302, i32* %304, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.61, i64 0, i64 0))
  %306 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %307 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %308 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %307)
  %309 = load i32, i32* @OID_AUTO, align 4
  %310 = load i32, i32* @CTLFLAG_RD, align 4
  %311 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %312 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %311, i32 0, i32 10
  %313 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %306, i32 %308, i32 %309, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.62, i64 0, i64 0), i32 %310, i32* %312, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.63, i64 0, i64 0))
  %314 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %315 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %316 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %315)
  %317 = load i32, i32* @OID_AUTO, align 4
  %318 = load i32, i32* @CTLFLAG_RD, align 4
  %319 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %320 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %319, i32 0, i32 9
  %321 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %314, i32 %316, i32 %317, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i64 0, i64 0), i32 %318, i32* %320, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.65, i64 0, i64 0))
  %322 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %323 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %324 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %323)
  %325 = load i32, i32* @OID_AUTO, align 4
  %326 = load i32, i32* @CTLFLAG_RD, align 4
  %327 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %328 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %327, i32 0, i32 8
  %329 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %322, i32 %324, i32 %325, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.66, i64 0, i64 0), i32 %326, i32* %328, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.67, i64 0, i64 0))
  %330 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %331 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %332 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %331)
  %333 = load i32, i32* @OID_AUTO, align 4
  %334 = load i32, i32* @CTLFLAG_RD, align 4
  %335 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %336 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %335, i32 0, i32 7
  %337 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %330, i32 %332, i32 %333, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0), i32 %334, i32* %336, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.69, i64 0, i64 0))
  %338 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %339 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %340 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %339)
  %341 = load i32, i32* @OID_AUTO, align 4
  %342 = load i32, i32* @CTLFLAG_RD, align 4
  %343 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %344 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %343, i32 0, i32 6
  %345 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %338, i32 %340, i32 %341, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.70, i64 0, i64 0), i32 %342, i32* %344, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.71, i64 0, i64 0))
  %346 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %347 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %348 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %347)
  %349 = load i32, i32* @OID_AUTO, align 4
  %350 = load i32, i32* @CTLFLAG_RD, align 4
  %351 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %352 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %351, i32 0, i32 5
  %353 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %346, i32 %348, i32 %349, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.72, i64 0, i64 0), i32 %350, i32* %352, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.73, i64 0, i64 0))
  %354 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %355 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %356 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %355)
  %357 = load i32, i32* @OID_AUTO, align 4
  %358 = load i32, i32* @CTLFLAG_RD, align 4
  %359 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %360 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %359, i32 0, i32 4
  %361 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %354, i32 %356, i32 %357, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.74, i64 0, i64 0), i32 %358, i32* %360, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.75, i64 0, i64 0))
  %362 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %363 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %364 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %363)
  %365 = load i32, i32* @OID_AUTO, align 4
  %366 = load i32, i32* @CTLFLAG_RD, align 4
  %367 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %368 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %367, i32 0, i32 3
  %369 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %362, i32 %364, i32 %365, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.76, i64 0, i64 0), i32 %366, i32* %368, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.77, i64 0, i64 0))
  %370 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %371 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %372 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %371)
  %373 = load i32, i32* @OID_AUTO, align 4
  %374 = load i32, i32* @CTLFLAG_RD, align 4
  %375 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %376 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %375, i32 0, i32 2
  %377 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %370, i32 %372, i32 %373, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.78, i64 0, i64 0), i32 %374, i32* %376, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.79, i64 0, i64 0))
  %378 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %379 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %380 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %379)
  %381 = load i32, i32* @OID_AUTO, align 4
  %382 = load i32, i32* @CTLFLAG_RD, align 4
  %383 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %384 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %383, i32 0, i32 1
  %385 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %378, i32 %380, i32 %381, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.80, i64 0, i64 0), i32 %382, i32* %384, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.81, i64 0, i64 0))
  %386 = load %struct.sysctl_ctx_list*, %struct.sysctl_ctx_list** %3, align 8
  %387 = load %struct.sysctl_oid*, %struct.sysctl_oid** %5, align 8
  %388 = call i32 @SYSCTL_CHILDREN(%struct.sysctl_oid* %387)
  %389 = load i32, i32* @OID_AUTO, align 4
  %390 = load i32, i32* @CTLFLAG_RD, align 4
  %391 = load %struct.rt_softc*, %struct.rt_softc** %2, align 8
  %392 = getelementptr inbounds %struct.rt_softc, %struct.rt_softc* %391, i32 0, i32 0
  %393 = call i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list* %386, i32 %388, i32 %389, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.82, i64 0, i64 0), i32 %390, i32* %392, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.83, i64 0, i64 0))
  ret void
}

declare dso_local %struct.sysctl_ctx_list* @device_get_sysctl_ctx(i32) #1

declare dso_local %struct.sysctl_oid* @device_get_sysctl_tree(i32) #1

declare dso_local %struct.sysctl_oid* @SYSCTL_ADD_NODE(%struct.sysctl_ctx_list*, i32, i32, i8*, i32, i32, i8*) #1

declare dso_local i32 @SYSCTL_CHILDREN(%struct.sysctl_oid*) #1

declare dso_local i32 @SYSCTL_ADD_ULONG(%struct.sysctl_ctx_list*, i32, i32, i8*, i32, i32*, i8*) #1

declare dso_local i32 @SYSCTL_ADD_INT(%struct.sysctl_ctx_list*, i32, i32, i8*, i32, i32*, i32, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
