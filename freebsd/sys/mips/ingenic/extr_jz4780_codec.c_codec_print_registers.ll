; ModuleID = '/home/carl/AnghaBench/freebsd/sys/mips/ingenic/extr_jz4780_codec.c_codec_print_registers.c'
source_filename = "/home/carl/AnghaBench/freebsd/sys/mips/ingenic/extr_jz4780_codec.c_codec_print_registers.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.codec_softc = type { i32 }

@.str = private unnamed_addr constant [13 x i8] c"codec SR %x\0A\00", align 1
@SR = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [14 x i8] c"codec SR2 %x\0A\00", align 1
@SR2 = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"codec MR %x\0A\00", align 1
@MR = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [19 x i8] c"codec AICR_DAC %x\0A\00", align 1
@AICR_DAC = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [19 x i8] c"codec AICR_ADC %x\0A\00", align 1
@AICR_ADC = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [16 x i8] c"codec CR_LO %x\0A\00", align 1
@CR_LO = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [16 x i8] c"codec CR_HP %x\0A\00", align 1
@CR_HP = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [18 x i8] c"codec CR_DMIC %x\0A\00", align 1
@CR_DMIC = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [18 x i8] c"codec CR_MIC1 %x\0A\00", align 1
@CR_MIC1 = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [18 x i8] c"codec CR_MIC2 %x\0A\00", align 1
@CR_MIC2 = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [17 x i8] c"codec CR_LI1 %x\0A\00", align 1
@CR_LI1 = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [17 x i8] c"codec CR_LI2 %x\0A\00", align 1
@CR_LI2 = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [17 x i8] c"codec CR_DAC %x\0A\00", align 1
@CR_DAC = common dso_local global i32 0, align 4
@.str.13 = private unnamed_addr constant [17 x i8] c"codec CR_ADC %x\0A\00", align 1
@CR_ADC = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [17 x i8] c"codec CR_MIX %x\0A\00", align 1
@CR_MIX = common dso_local global i32 0, align 4
@.str.15 = private unnamed_addr constant [17 x i8] c"codec DR_MIX %x\0A\00", align 1
@DR_MIX = common dso_local global i32 0, align 4
@.str.16 = private unnamed_addr constant [17 x i8] c"codec CR_VIC %x\0A\00", align 1
@CR_VIC = common dso_local global i32 0, align 4
@.str.17 = private unnamed_addr constant [16 x i8] c"codec CR_CK %x\0A\00", align 1
@CR_CK = common dso_local global i32 0, align 4
@.str.18 = private unnamed_addr constant [18 x i8] c"codec FCR_DAC %x\0A\00", align 1
@FCR_DAC = common dso_local global i32 0, align 4
@.str.19 = private unnamed_addr constant [18 x i8] c"codec FCR_ADC %x\0A\00", align 1
@FCR_ADC = common dso_local global i32 0, align 4
@.str.20 = private unnamed_addr constant [23 x i8] c"codec CR_TIMER_MSB %x\0A\00", align 1
@CR_TIMER_MSB = common dso_local global i32 0, align 4
@.str.21 = private unnamed_addr constant [23 x i8] c"codec CR_TIMER_LSB %x\0A\00", align 1
@CR_TIMER_LSB = common dso_local global i32 0, align 4
@.str.22 = private unnamed_addr constant [14 x i8] c"codec ICR %x\0A\00", align 1
@ICR = common dso_local global i32 0, align 4
@.str.23 = private unnamed_addr constant [14 x i8] c"codec IMR %x\0A\00", align 1
@IMR = common dso_local global i32 0, align 4
@.str.24 = private unnamed_addr constant [14 x i8] c"codec IFR %x\0A\00", align 1
@IFR = common dso_local global i32 0, align 4
@.str.25 = private unnamed_addr constant [15 x i8] c"codec IMR2 %x\0A\00", align 1
@IMR2 = common dso_local global i32 0, align 4
@.str.26 = private unnamed_addr constant [15 x i8] c"codec IFR2 %x\0A\00", align 1
@IFR2 = common dso_local global i32 0, align 4
@.str.27 = private unnamed_addr constant [18 x i8] c"codec GCR_HPL %x\0A\00", align 1
@GCR_HPL = common dso_local global i32 0, align 4
@.str.28 = private unnamed_addr constant [18 x i8] c"codec GCR_HPR %x\0A\00", align 1
@GCR_HPR = common dso_local global i32 0, align 4
@.str.29 = private unnamed_addr constant [20 x i8] c"codec GCR_LIBYL %x\0A\00", align 1
@GCR_LIBYL = common dso_local global i32 0, align 4
@.str.30 = private unnamed_addr constant [20 x i8] c"codec GCR_LIBYR %x\0A\00", align 1
@GCR_LIBYR = common dso_local global i32 0, align 4
@.str.31 = private unnamed_addr constant [19 x i8] c"codec GCR_DACL %x\0A\00", align 1
@GCR_DACL = common dso_local global i32 0, align 4
@.str.32 = private unnamed_addr constant [19 x i8] c"codec GCR_DACR %x\0A\00", align 1
@GCR_DACR = common dso_local global i32 0, align 4
@.str.33 = private unnamed_addr constant [19 x i8] c"codec GCR_MIC1 %x\0A\00", align 1
@GCR_MIC1 = common dso_local global i32 0, align 4
@.str.34 = private unnamed_addr constant [19 x i8] c"codec GCR_MIC2 %x\0A\00", align 1
@GCR_MIC2 = common dso_local global i32 0, align 4
@.str.35 = private unnamed_addr constant [19 x i8] c"codec GCR_ADCL %x\0A\00", align 1
@GCR_ADCL = common dso_local global i32 0, align 4
@.str.36 = private unnamed_addr constant [19 x i8] c"codec GCR_ADCR %x\0A\00", align 1
@GCR_ADCR = common dso_local global i32 0, align 4
@.str.37 = private unnamed_addr constant [22 x i8] c"codec GCR_MIXDACL %x\0A\00", align 1
@GCR_MIXDACL = common dso_local global i32 0, align 4
@.str.38 = private unnamed_addr constant [22 x i8] c"codec GCR_MIXDACR %x\0A\00", align 1
@GCR_MIXDACR = common dso_local global i32 0, align 4
@.str.39 = private unnamed_addr constant [22 x i8] c"codec GCR_MIXADCL %x\0A\00", align 1
@GCR_MIXADCL = common dso_local global i32 0, align 4
@.str.40 = private unnamed_addr constant [22 x i8] c"codec GCR_MIXADCR %x\0A\00", align 1
@GCR_MIXADCR = common dso_local global i32 0, align 4
@.str.41 = private unnamed_addr constant [21 x i8] c"codec CR_ADC_AGC %x\0A\00", align 1
@CR_ADC_AGC = common dso_local global i32 0, align 4
@.str.42 = private unnamed_addr constant [21 x i8] c"codec DR_ADC_AGC %x\0A\00", align 1
@DR_ADC_AGC = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @codec_print_registers(%struct.codec_softc* %0) #0 {
  %2 = alloca %struct.codec_softc*, align 8
  store %struct.codec_softc* %0, %struct.codec_softc** %2, align 8
  %3 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %4 = load i32, i32* @SR, align 4
  %5 = call i32 @codec_read(%struct.codec_softc* %3, i32 %4)
  %6 = call i32 @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 %5)
  %7 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %8 = load i32, i32* @SR2, align 4
  %9 = call i32 @codec_read(%struct.codec_softc* %7, i32 %8)
  %10 = call i32 @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i32 %9)
  %11 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %12 = load i32, i32* @MR, align 4
  %13 = call i32 @codec_read(%struct.codec_softc* %11, i32 %12)
  %14 = call i32 @printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 %13)
  %15 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %16 = load i32, i32* @AICR_DAC, align 4
  %17 = call i32 @codec_read(%struct.codec_softc* %15, i32 %16)
  %18 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i32 %17)
  %19 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %20 = load i32, i32* @AICR_ADC, align 4
  %21 = call i32 @codec_read(%struct.codec_softc* %19, i32 %20)
  %22 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.4, i64 0, i64 0), i32 %21)
  %23 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %24 = load i32, i32* @CR_LO, align 4
  %25 = call i32 @codec_read(%struct.codec_softc* %23, i32 %24)
  %26 = call i32 @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i32 %25)
  %27 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %28 = load i32, i32* @CR_HP, align 4
  %29 = call i32 @codec_read(%struct.codec_softc* %27, i32 %28)
  %30 = call i32 @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i32 %29)
  %31 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %32 = load i32, i32* @CR_DMIC, align 4
  %33 = call i32 @codec_read(%struct.codec_softc* %31, i32 %32)
  %34 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 %33)
  %35 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %36 = load i32, i32* @CR_MIC1, align 4
  %37 = call i32 @codec_read(%struct.codec_softc* %35, i32 %36)
  %38 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i32 %37)
  %39 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %40 = load i32, i32* @CR_MIC2, align 4
  %41 = call i32 @codec_read(%struct.codec_softc* %39, i32 %40)
  %42 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i32 %41)
  %43 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %44 = load i32, i32* @CR_LI1, align 4
  %45 = call i32 @codec_read(%struct.codec_softc* %43, i32 %44)
  %46 = call i32 @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i32 %45)
  %47 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %48 = load i32, i32* @CR_LI2, align 4
  %49 = call i32 @codec_read(%struct.codec_softc* %47, i32 %48)
  %50 = call i32 @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i32 %49)
  %51 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %52 = load i32, i32* @CR_DAC, align 4
  %53 = call i32 @codec_read(%struct.codec_softc* %51, i32 %52)
  %54 = call i32 @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i32 %53)
  %55 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %56 = load i32, i32* @CR_ADC, align 4
  %57 = call i32 @codec_read(%struct.codec_softc* %55, i32 %56)
  %58 = call i32 @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i32 %57)
  %59 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %60 = load i32, i32* @CR_MIX, align 4
  %61 = call i32 @codec_read(%struct.codec_softc* %59, i32 %60)
  %62 = call i32 @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0), i32 %61)
  %63 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %64 = load i32, i32* @DR_MIX, align 4
  %65 = call i32 @codec_read(%struct.codec_softc* %63, i32 %64)
  %66 = call i32 @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0), i32 %65)
  %67 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %68 = load i32, i32* @CR_VIC, align 4
  %69 = call i32 @codec_read(%struct.codec_softc* %67, i32 %68)
  %70 = call i32 @printf(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0), i32 %69)
  %71 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %72 = load i32, i32* @CR_CK, align 4
  %73 = call i32 @codec_read(%struct.codec_softc* %71, i32 %72)
  %74 = call i32 @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i64 0, i64 0), i32 %73)
  %75 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %76 = load i32, i32* @FCR_DAC, align 4
  %77 = call i32 @codec_read(%struct.codec_softc* %75, i32 %76)
  %78 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i32 %77)
  %79 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %80 = load i32, i32* @FCR_ADC, align 4
  %81 = call i32 @codec_read(%struct.codec_softc* %79, i32 %80)
  %82 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i32 %81)
  %83 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %84 = load i32, i32* @CR_TIMER_MSB, align 4
  %85 = call i32 @codec_read(%struct.codec_softc* %83, i32 %84)
  %86 = call i32 @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.20, i64 0, i64 0), i32 %85)
  %87 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %88 = load i32, i32* @CR_TIMER_LSB, align 4
  %89 = call i32 @codec_read(%struct.codec_softc* %87, i32 %88)
  %90 = call i32 @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i32 %89)
  %91 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %92 = load i32, i32* @ICR, align 4
  %93 = call i32 @codec_read(%struct.codec_softc* %91, i32 %92)
  %94 = call i32 @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0), i32 %93)
  %95 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %96 = load i32, i32* @IMR, align 4
  %97 = call i32 @codec_read(%struct.codec_softc* %95, i32 %96)
  %98 = call i32 @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i64 0, i64 0), i32 %97)
  %99 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %100 = load i32, i32* @IFR, align 4
  %101 = call i32 @codec_read(%struct.codec_softc* %99, i32 %100)
  %102 = call i32 @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0), i32 %101)
  %103 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %104 = load i32, i32* @IMR2, align 4
  %105 = call i32 @codec_read(%struct.codec_softc* %103, i32 %104)
  %106 = call i32 @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0), i32 %105)
  %107 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %108 = load i32, i32* @IFR2, align 4
  %109 = call i32 @codec_read(%struct.codec_softc* %107, i32 %108)
  %110 = call i32 @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0), i32 %109)
  %111 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %112 = load i32, i32* @GCR_HPL, align 4
  %113 = call i32 @codec_read(%struct.codec_softc* %111, i32 %112)
  %114 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.27, i64 0, i64 0), i32 %113)
  %115 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %116 = load i32, i32* @GCR_HPR, align 4
  %117 = call i32 @codec_read(%struct.codec_softc* %115, i32 %116)
  %118 = call i32 @printf(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i64 0, i64 0), i32 %117)
  %119 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %120 = load i32, i32* @GCR_LIBYL, align 4
  %121 = call i32 @codec_read(%struct.codec_softc* %119, i32 %120)
  %122 = call i32 @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.29, i64 0, i64 0), i32 %121)
  %123 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %124 = load i32, i32* @GCR_LIBYR, align 4
  %125 = call i32 @codec_read(%struct.codec_softc* %123, i32 %124)
  %126 = call i32 @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.30, i64 0, i64 0), i32 %125)
  %127 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %128 = load i32, i32* @GCR_DACL, align 4
  %129 = call i32 @codec_read(%struct.codec_softc* %127, i32 %128)
  %130 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.31, i64 0, i64 0), i32 %129)
  %131 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %132 = load i32, i32* @GCR_DACR, align 4
  %133 = call i32 @codec_read(%struct.codec_softc* %131, i32 %132)
  %134 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.32, i64 0, i64 0), i32 %133)
  %135 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %136 = load i32, i32* @GCR_MIC1, align 4
  %137 = call i32 @codec_read(%struct.codec_softc* %135, i32 %136)
  %138 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.33, i64 0, i64 0), i32 %137)
  %139 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %140 = load i32, i32* @GCR_MIC2, align 4
  %141 = call i32 @codec_read(%struct.codec_softc* %139, i32 %140)
  %142 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i64 0, i64 0), i32 %141)
  %143 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %144 = load i32, i32* @GCR_ADCL, align 4
  %145 = call i32 @codec_read(%struct.codec_softc* %143, i32 %144)
  %146 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35, i64 0, i64 0), i32 %145)
  %147 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %148 = load i32, i32* @GCR_ADCR, align 4
  %149 = call i32 @codec_read(%struct.codec_softc* %147, i32 %148)
  %150 = call i32 @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.36, i64 0, i64 0), i32 %149)
  %151 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %152 = load i32, i32* @GCR_MIXDACL, align 4
  %153 = call i32 @codec_read(%struct.codec_softc* %151, i32 %152)
  %154 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.37, i64 0, i64 0), i32 %153)
  %155 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %156 = load i32, i32* @GCR_MIXDACR, align 4
  %157 = call i32 @codec_read(%struct.codec_softc* %155, i32 %156)
  %158 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.38, i64 0, i64 0), i32 %157)
  %159 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %160 = load i32, i32* @GCR_MIXADCL, align 4
  %161 = call i32 @codec_read(%struct.codec_softc* %159, i32 %160)
  %162 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.39, i64 0, i64 0), i32 %161)
  %163 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %164 = load i32, i32* @GCR_MIXADCR, align 4
  %165 = call i32 @codec_read(%struct.codec_softc* %163, i32 %164)
  %166 = call i32 @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.40, i64 0, i64 0), i32 %165)
  %167 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %168 = load i32, i32* @CR_ADC_AGC, align 4
  %169 = call i32 @codec_read(%struct.codec_softc* %167, i32 %168)
  %170 = call i32 @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.41, i64 0, i64 0), i32 %169)
  %171 = load %struct.codec_softc*, %struct.codec_softc** %2, align 8
  %172 = load i32, i32* @DR_ADC_AGC, align 4
  %173 = call i32 @codec_read(%struct.codec_softc* %171, i32 %172)
  %174 = call i32 @printf(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.42, i64 0, i64 0), i32 %173)
  ret void
}

declare dso_local i32 @printf(i8*, i32) #1

declare dso_local i32 @codec_read(%struct.codec_softc*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
