; ModuleID = '/home/carl/AnghaBench/freebsd/sys/fs/nfsclient/extr_nfs_clvfsops.c_nfscl_retopts.c'
source_filename = "/home/carl/AnghaBench/freebsd/sys/fs/nfsclient/extr_nfs_clvfsops.c_nfscl_retopts.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.nfsmount = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }

@NFSMNT_NFSV4 = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [6 x i8] c"nfsv4\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c",minorversion\00", align 1
@NFSMNT_PNFS = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [6 x i8] c",pnfs\00", align 1
@NFSMNT_ONEOPENOWN = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [12 x i8] c",oneopenown\00", align 1
@NFSMNT_NFSV3 = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [6 x i8] c"nfsv3\00", align 1
@.str.5 = private unnamed_addr constant [6 x i8] c"nfsv2\00", align 1
@SOCK_STREAM = common dso_local global i64 0, align 8
@.str.6 = private unnamed_addr constant [5 x i8] c",tcp\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c",udp\00", align 1
@NFSMNT_RESVPORT = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [10 x i8] c",resvport\00", align 1
@NFSMNT_NOCONN = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [8 x i8] c",noconn\00", align 1
@NFSMNT_SOFT = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [6 x i8] c",hard\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c",soft\00", align 1
@NFSMNT_INT = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [6 x i8] c",intr\00", align 1
@NFSMNT_NOCTO = common dso_local global i32 0, align 4
@.str.13 = private unnamed_addr constant [5 x i8] c",cto\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c",nocto\00", align 1
@NFSMNT_NONCONTIGWR = common dso_local global i32 0, align 4
@.str.15 = private unnamed_addr constant [13 x i8] c",noncontigwr\00", align 1
@NFSMNT_NOLOCKD = common dso_local global i32 0, align 4
@.str.16 = private unnamed_addr constant [7 x i8] c",lockd\00", align 1
@.str.17 = private unnamed_addr constant [9 x i8] c",nolockd\00", align 1
@NFSMNT_RDIRPLUS = common dso_local global i32 0, align 4
@.str.18 = private unnamed_addr constant [10 x i8] c",rdirplus\00", align 1
@NFSMNT_KERB = common dso_local global i32 0, align 4
@.str.19 = private unnamed_addr constant [9 x i8] c",sec=sys\00", align 1
@NFSMNT_INTEGRITY = common dso_local global i32 0, align 4
@NFSMNT_PRIVACY = common dso_local global i32 0, align 4
@.str.20 = private unnamed_addr constant [10 x i8] c",sec=krb5\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c",sec=krb5i\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c",sec=krb5p\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c",acdirmin\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c",acdirmax\00", align 1
@.str.25 = private unnamed_addr constant [10 x i8] c",acregmin\00", align 1
@.str.26 = private unnamed_addr constant [10 x i8] c",acregmax\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c",nametimeo\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c",negnametimeo\00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c",rsize\00", align 1
@.str.30 = private unnamed_addr constant [7 x i8] c",wsize\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c",readdirsize\00", align 1
@.str.32 = private unnamed_addr constant [11 x i8] c",readahead\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c",wcommitsize\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c",timeout\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c",retrans\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @nfscl_retopts(%struct.nfsmount* %0, i8* %1, i64 %2) #0 {
  %4 = alloca %struct.nfsmount*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store %struct.nfsmount* %0, %struct.nfsmount** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %9 = load i8*, i8** %5, align 8
  store i8* %9, i8** %7, align 8
  %10 = load i64, i64* %6, align 8
  store i64 %10, i64* %8, align 8
  %11 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %12 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %13 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %12, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = load i32, i32* @NFSMNT_NFSV4, align 4
  %16 = and i32 %14, %15
  %17 = icmp ne i32 %16, 0
  %18 = zext i1 %17 to i32
  %19 = call i32 @nfscl_printopt(%struct.nfsmount* %11, i32 %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8** %7, i64* %8)
  %20 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %21 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %20, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = load i32, i32* @NFSMNT_NFSV4, align 4
  %24 = and i32 %22, %23
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %26, label %57

26:                                               ; preds = %3
  %27 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %28 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %29 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %28, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = call i32 @nfscl_printoptval(%struct.nfsmount* %27, i64 %30, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i8** %7, i64* %8)
  %32 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %33 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %34 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %33, i32 0, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = load i32, i32* @NFSMNT_PNFS, align 4
  %37 = and i32 %35, %36
  %38 = icmp ne i32 %37, 0
  %39 = zext i1 %38 to i32
  %40 = call i32 @nfscl_printopt(%struct.nfsmount* %32, i32 %39, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i8** %7, i64* %8)
  %41 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %42 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %43 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %42, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = load i32, i32* @NFSMNT_ONEOPENOWN, align 4
  %46 = and i32 %44, %45
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %26
  %49 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %50 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %49, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp sgt i64 %51, 0
  br label %53

53:                                               ; preds = %48, %26
  %54 = phi i1 [ false, %26 ], [ %52, %48 ]
  %55 = zext i1 %54 to i32
  %56 = call i32 @nfscl_printopt(%struct.nfsmount* %41, i32 %55, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), i8** %7, i64* %8)
  br label %57

57:                                               ; preds = %53, %3
  %58 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %59 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %60 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %59, i32 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = load i32, i32* @NFSMNT_NFSV3, align 4
  %63 = and i32 %61, %62
  %64 = icmp ne i32 %63, 0
  %65 = zext i1 %64 to i32
  %66 = call i32 @nfscl_printopt(%struct.nfsmount* %58, i32 %65, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8** %7, i64* %8)
  %67 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %68 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %69 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %68, i32 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = load i32, i32* @NFSMNT_NFSV3, align 4
  %72 = load i32, i32* @NFSMNT_NFSV4, align 4
  %73 = or i32 %71, %72
  %74 = and i32 %70, %73
  %75 = icmp eq i32 %74, 0
  %76 = zext i1 %75 to i32
  %77 = call i32 @nfscl_printopt(%struct.nfsmount* %67, i32 %76, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i64 0, i64 0), i8** %7, i64* %8)
  %78 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %79 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %80 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %79, i32 0, i32 2
  %81 = load i64, i64* %80, align 8
  %82 = load i64, i64* @SOCK_STREAM, align 8
  %83 = icmp eq i64 %81, %82
  %84 = zext i1 %83 to i32
  %85 = call i32 @nfscl_printopt(%struct.nfsmount* %78, i32 %84, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0), i8** %7, i64* %8)
  %86 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %87 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %88 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %87, i32 0, i32 2
  %89 = load i64, i64* %88, align 8
  %90 = load i64, i64* @SOCK_STREAM, align 8
  %91 = icmp ne i64 %89, %90
  %92 = zext i1 %91 to i32
  %93 = call i32 @nfscl_printopt(%struct.nfsmount* %86, i32 %92, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i8** %7, i64* %8)
  %94 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %95 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %96 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %95, i32 0, i32 0
  %97 = load i32, i32* %96, align 8
  %98 = load i32, i32* @NFSMNT_RESVPORT, align 4
  %99 = and i32 %97, %98
  %100 = icmp ne i32 %99, 0
  %101 = zext i1 %100 to i32
  %102 = call i32 @nfscl_printopt(%struct.nfsmount* %94, i32 %101, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i8** %7, i64* %8)
  %103 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %104 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %105 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %104, i32 0, i32 0
  %106 = load i32, i32* %105, align 8
  %107 = load i32, i32* @NFSMNT_NOCONN, align 4
  %108 = and i32 %106, %107
  %109 = icmp ne i32 %108, 0
  %110 = zext i1 %109 to i32
  %111 = call i32 @nfscl_printopt(%struct.nfsmount* %103, i32 %110, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8** %7, i64* %8)
  %112 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %113 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %114 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %113, i32 0, i32 0
  %115 = load i32, i32* %114, align 8
  %116 = load i32, i32* @NFSMNT_SOFT, align 4
  %117 = and i32 %115, %116
  %118 = icmp eq i32 %117, 0
  %119 = zext i1 %118 to i32
  %120 = call i32 @nfscl_printopt(%struct.nfsmount* %112, i32 %119, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i8** %7, i64* %8)
  %121 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %122 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %123 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %122, i32 0, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = load i32, i32* @NFSMNT_SOFT, align 4
  %126 = and i32 %124, %125
  %127 = icmp ne i32 %126, 0
  %128 = zext i1 %127 to i32
  %129 = call i32 @nfscl_printopt(%struct.nfsmount* %121, i32 %128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i8** %7, i64* %8)
  %130 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %131 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %132 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %131, i32 0, i32 0
  %133 = load i32, i32* %132, align 8
  %134 = load i32, i32* @NFSMNT_INT, align 4
  %135 = and i32 %133, %134
  %136 = icmp ne i32 %135, 0
  %137 = zext i1 %136 to i32
  %138 = call i32 @nfscl_printopt(%struct.nfsmount* %130, i32 %137, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i8** %7, i64* %8)
  %139 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %140 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %141 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %140, i32 0, i32 0
  %142 = load i32, i32* %141, align 8
  %143 = load i32, i32* @NFSMNT_NOCTO, align 4
  %144 = and i32 %142, %143
  %145 = icmp eq i32 %144, 0
  %146 = zext i1 %145 to i32
  %147 = call i32 @nfscl_printopt(%struct.nfsmount* %139, i32 %146, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0), i8** %7, i64* %8)
  %148 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %149 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %150 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %149, i32 0, i32 0
  %151 = load i32, i32* %150, align 8
  %152 = load i32, i32* @NFSMNT_NOCTO, align 4
  %153 = and i32 %151, %152
  %154 = icmp ne i32 %153, 0
  %155 = zext i1 %154 to i32
  %156 = call i32 @nfscl_printopt(%struct.nfsmount* %148, i32 %155, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), i8** %7, i64* %8)
  %157 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %158 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %159 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %158, i32 0, i32 0
  %160 = load i32, i32* %159, align 8
  %161 = load i32, i32* @NFSMNT_NONCONTIGWR, align 4
  %162 = and i32 %160, %161
  %163 = icmp ne i32 %162, 0
  %164 = zext i1 %163 to i32
  %165 = call i32 @nfscl_printopt(%struct.nfsmount* %157, i32 %164, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i8** %7, i64* %8)
  %166 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %167 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %168 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %167, i32 0, i32 0
  %169 = load i32, i32* %168, align 8
  %170 = load i32, i32* @NFSMNT_NOLOCKD, align 4
  %171 = load i32, i32* @NFSMNT_NFSV4, align 4
  %172 = or i32 %170, %171
  %173 = and i32 %169, %172
  %174 = icmp eq i32 %173, 0
  %175 = zext i1 %174 to i32
  %176 = call i32 @nfscl_printopt(%struct.nfsmount* %166, i32 %175, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0), i8** %7, i64* %8)
  %177 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %178 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %179 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %178, i32 0, i32 0
  %180 = load i32, i32* %179, align 8
  %181 = load i32, i32* @NFSMNT_NOLOCKD, align 4
  %182 = load i32, i32* @NFSMNT_NFSV4, align 4
  %183 = or i32 %181, %182
  %184 = and i32 %180, %183
  %185 = load i32, i32* @NFSMNT_NOLOCKD, align 4
  %186 = icmp eq i32 %184, %185
  %187 = zext i1 %186 to i32
  %188 = call i32 @nfscl_printopt(%struct.nfsmount* %177, i32 %187, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.17, i64 0, i64 0), i8** %7, i64* %8)
  %189 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %190 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %191 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %190, i32 0, i32 0
  %192 = load i32, i32* %191, align 8
  %193 = load i32, i32* @NFSMNT_RDIRPLUS, align 4
  %194 = and i32 %192, %193
  %195 = icmp ne i32 %194, 0
  %196 = zext i1 %195 to i32
  %197 = call i32 @nfscl_printopt(%struct.nfsmount* %189, i32 %196, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i8** %7, i64* %8)
  %198 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %199 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %200 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %199, i32 0, i32 0
  %201 = load i32, i32* %200, align 8
  %202 = load i32, i32* @NFSMNT_KERB, align 4
  %203 = and i32 %201, %202
  %204 = icmp eq i32 %203, 0
  %205 = zext i1 %204 to i32
  %206 = call i32 @nfscl_printopt(%struct.nfsmount* %198, i32 %205, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i64 0, i64 0), i8** %7, i64* %8)
  %207 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %208 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %209 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %208, i32 0, i32 0
  %210 = load i32, i32* %209, align 8
  %211 = load i32, i32* @NFSMNT_KERB, align 4
  %212 = load i32, i32* @NFSMNT_INTEGRITY, align 4
  %213 = or i32 %211, %212
  %214 = load i32, i32* @NFSMNT_PRIVACY, align 4
  %215 = or i32 %213, %214
  %216 = and i32 %210, %215
  %217 = load i32, i32* @NFSMNT_KERB, align 4
  %218 = icmp eq i32 %216, %217
  %219 = zext i1 %218 to i32
  %220 = call i32 @nfscl_printopt(%struct.nfsmount* %207, i32 %219, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), i8** %7, i64* %8)
  %221 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %222 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %223 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %222, i32 0, i32 0
  %224 = load i32, i32* %223, align 8
  %225 = load i32, i32* @NFSMNT_KERB, align 4
  %226 = load i32, i32* @NFSMNT_INTEGRITY, align 4
  %227 = or i32 %225, %226
  %228 = load i32, i32* @NFSMNT_PRIVACY, align 4
  %229 = or i32 %227, %228
  %230 = and i32 %224, %229
  %231 = load i32, i32* @NFSMNT_KERB, align 4
  %232 = load i32, i32* @NFSMNT_INTEGRITY, align 4
  %233 = or i32 %231, %232
  %234 = icmp eq i32 %230, %233
  %235 = zext i1 %234 to i32
  %236 = call i32 @nfscl_printopt(%struct.nfsmount* %221, i32 %235, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i8** %7, i64* %8)
  %237 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %238 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %239 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %238, i32 0, i32 0
  %240 = load i32, i32* %239, align 8
  %241 = load i32, i32* @NFSMNT_KERB, align 4
  %242 = load i32, i32* @NFSMNT_INTEGRITY, align 4
  %243 = or i32 %241, %242
  %244 = load i32, i32* @NFSMNT_PRIVACY, align 4
  %245 = or i32 %243, %244
  %246 = and i32 %240, %245
  %247 = load i32, i32* @NFSMNT_KERB, align 4
  %248 = load i32, i32* @NFSMNT_PRIVACY, align 4
  %249 = or i32 %247, %248
  %250 = icmp eq i32 %246, %249
  %251 = zext i1 %250 to i32
  %252 = call i32 @nfscl_printopt(%struct.nfsmount* %237, i32 %251, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.22, i64 0, i64 0), i8** %7, i64* %8)
  %253 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %254 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %255 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %254, i32 0, i32 3
  %256 = load i64, i64* %255, align 8
  %257 = call i32 @nfscl_printoptval(%struct.nfsmount* %253, i64 %256, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i64 0, i64 0), i8** %7, i64* %8)
  %258 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %259 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %260 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %259, i32 0, i32 4
  %261 = load i64, i64* %260, align 8
  %262 = call i32 @nfscl_printoptval(%struct.nfsmount* %258, i64 %261, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i64 0, i64 0), i8** %7, i64* %8)
  %263 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %264 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %265 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %264, i32 0, i32 5
  %266 = load i64, i64* %265, align 8
  %267 = call i32 @nfscl_printoptval(%struct.nfsmount* %263, i64 %266, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.25, i64 0, i64 0), i8** %7, i64* %8)
  %268 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %269 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %270 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %269, i32 0, i32 6
  %271 = load i64, i64* %270, align 8
  %272 = call i32 @nfscl_printoptval(%struct.nfsmount* %268, i64 %271, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.26, i64 0, i64 0), i8** %7, i64* %8)
  %273 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %274 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %275 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %274, i32 0, i32 7
  %276 = load i64, i64* %275, align 8
  %277 = call i32 @nfscl_printoptval(%struct.nfsmount* %273, i64 %276, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i64 0, i64 0), i8** %7, i64* %8)
  %278 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %279 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %280 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %279, i32 0, i32 8
  %281 = load i64, i64* %280, align 8
  %282 = call i32 @nfscl_printoptval(%struct.nfsmount* %278, i64 %281, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0), i8** %7, i64* %8)
  %283 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %284 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %285 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %284, i32 0, i32 9
  %286 = load i64, i64* %285, align 8
  %287 = call i32 @nfscl_printoptval(%struct.nfsmount* %283, i64 %286, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0), i8** %7, i64* %8)
  %288 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %289 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %290 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %289, i32 0, i32 10
  %291 = load i64, i64* %290, align 8
  %292 = call i32 @nfscl_printoptval(%struct.nfsmount* %288, i64 %291, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30, i64 0, i64 0), i8** %7, i64* %8)
  %293 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %294 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %295 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %294, i32 0, i32 11
  %296 = load i64, i64* %295, align 8
  %297 = call i32 @nfscl_printoptval(%struct.nfsmount* %293, i64 %296, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i64 0, i64 0), i8** %7, i64* %8)
  %298 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %299 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %300 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %299, i32 0, i32 12
  %301 = load i64, i64* %300, align 8
  %302 = call i32 @nfscl_printoptval(%struct.nfsmount* %298, i64 %301, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.32, i64 0, i64 0), i8** %7, i64* %8)
  %303 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %304 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %305 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %304, i32 0, i32 13
  %306 = load i64, i64* %305, align 8
  %307 = call i32 @nfscl_printoptval(%struct.nfsmount* %303, i64 %306, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0), i8** %7, i64* %8)
  %308 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %309 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %310 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %309, i32 0, i32 14
  %311 = load i64, i64* %310, align 8
  %312 = call i32 @nfscl_printoptval(%struct.nfsmount* %308, i64 %311, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i64 0, i64 0), i8** %7, i64* %8)
  %313 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %314 = load %struct.nfsmount*, %struct.nfsmount** %4, align 8
  %315 = getelementptr inbounds %struct.nfsmount, %struct.nfsmount* %314, i32 0, i32 15
  %316 = load i64, i64* %315, align 8
  %317 = call i32 @nfscl_printoptval(%struct.nfsmount* %313, i64 %316, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i64 0, i64 0), i8** %7, i64* %8)
  ret void
}

declare dso_local i32 @nfscl_printopt(%struct.nfsmount*, i32, i8*, i8**, i64*) #1

declare dso_local i32 @nfscl_printoptval(%struct.nfsmount*, i64, i8*, i8**, i64*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
