; ModuleID = '/home/carl/AnghaBench/freebsd/contrib/gdb/gdb/extr_copying.c_show_copying_command.c'
source_filename = "/home/carl/AnghaBench/freebsd/contrib/gdb/gdb/extr_copying.c_show_copying_command.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@immediate_quit = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [34 x i8] c"\09\09    GNU GENERAL PUBLIC LICENSE\0A\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"\09\09       Version 2, June 1991\0A\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.3 = private unnamed_addr constant [58 x i8] c" Copyright (C) 1989, 1991 Free Software Foundation, Inc.\0A\00", align 1
@.str.4 = private unnamed_addr constant [80 x i8] c"                       59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\0A\00", align 1
@.str.5 = private unnamed_addr constant [63 x i8] c" Everyone is permitted to copy and distribute verbatim copies\0A\00", align 1
@.str.6 = private unnamed_addr constant [60 x i8] c" of this license document, but changing it is not allowed.\0A\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"\09\09\09    Preamble\0A\00", align 1
@.str.8 = private unnamed_addr constant [65 x i8] c"  The licenses for most software are designed to take away your\0A\00", align 1
@.str.9 = private unnamed_addr constant [70 x i8] c"freedom to share and change it.  By contrast, the GNU General Public\0A\00", align 1
@.str.10 = private unnamed_addr constant [72 x i8] c"License is intended to guarantee your freedom to share and change free\0A\00", align 1
@.str.11 = private unnamed_addr constant [70 x i8] c"software--to make sure the software is free for all its users.  This\0A\00", align 1
@.str.12 = private unnamed_addr constant [61 x i8] c"General Public License applies to most of the Free Software\0A\00", align 1
@.str.13 = private unnamed_addr constant [72 x i8] c"Foundation's software and to any other program whose authors commit to\0A\00", align 1
@.str.14 = private unnamed_addr constant [72 x i8] c"using it.  (Some other Free Software Foundation software is covered by\0A\00", align 1
@.str.15 = private unnamed_addr constant [71 x i8] c"the GNU Library General Public License instead.)  You can apply it to\0A\00", align 1
@.str.16 = private unnamed_addr constant [21 x i8] c"your programs, too.\0A\00", align 1
@.str.17 = private unnamed_addr constant [68 x i8] c"  When we speak of free software, we are referring to freedom, not\0A\00", align 1
@.str.18 = private unnamed_addr constant [72 x i8] c"price.  Our General Public Licenses are designed to make sure that you\0A\00", align 1
@.str.19 = private unnamed_addr constant [72 x i8] c"have the freedom to distribute copies of free software (and charge for\0A\00", align 1
@.str.20 = private unnamed_addr constant [71 x i8] c"this service if you wish), that you receive source code or can get it\0A\00", align 1
@.str.21 = private unnamed_addr constant [70 x i8] c"if you want it, that you can change the software or use pieces of it\0A\00", align 1
@.str.22 = private unnamed_addr constant [66 x i8] c"in new free programs; and that you know you can do these things.\0A\00", align 1
@.str.23 = private unnamed_addr constant [68 x i8] c"  To protect your rights, we need to make restrictions that forbid\0A\00", align 1
@.str.24 = private unnamed_addr constant [72 x i8] c"anyone to deny you these rights or to ask you to surrender the rights.\0A\00", align 1
@.str.25 = private unnamed_addr constant [73 x i8] c"These restrictions translate to certain responsibilities for you if you\0A\00", align 1
@.str.26 = private unnamed_addr constant [57 x i8] c"distribute copies of the software, or if you modify it.\0A\00", align 1
@.str.27 = private unnamed_addr constant [68 x i8] c"  For example, if you distribute copies of such a program, whether\0A\00", align 1
@.str.28 = private unnamed_addr constant [71 x i8] c"gratis or for a fee, you must give the recipients all the rights that\0A\00", align 1
@.str.29 = private unnamed_addr constant [70 x i8] c"you have.  You must make sure that they, too, receive or can get the\0A\00", align 1
@.str.30 = private unnamed_addr constant [69 x i8] c"source code.  And you must show them these terms so they know their\0A\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"rights.\0A\00", align 1
@.str.32 = private unnamed_addr constant [74 x i8] c"  We protect your rights with two steps: (1) copyright the software, and\0A\00", align 1
@.str.33 = private unnamed_addr constant [70 x i8] c"(2) offer you this license which gives you legal permission to copy,\0A\00", align 1
@.str.34 = private unnamed_addr constant [40 x i8] c"distribute and/or modify the software.\0A\00", align 1
@.str.35 = private unnamed_addr constant [72 x i8] c"  Also, for each author's protection and ours, we want to make certain\0A\00", align 1
@.str.36 = private unnamed_addr constant [67 x i8] c"that everyone understands that there is no warranty for this free\0A\00", align 1
@.str.37 = private unnamed_addr constant [74 x i8] c"software.  If the software is modified by someone else and passed on, we\0A\00", align 1
@.str.38 = private unnamed_addr constant [73 x i8] c"want its recipients to know that what they have is not the original, so\0A\00", align 1
@.str.39 = private unnamed_addr constant [73 x i8] c"that any problems introduced by others will not reflect on the original\0A\00", align 1
@.str.40 = private unnamed_addr constant [23 x i8] c"authors' reputations.\0A\00", align 1
@.str.41 = private unnamed_addr constant [66 x i8] c"  Finally, any free program is threatened constantly by software\0A\00", align 1
@.str.42 = private unnamed_addr constant [69 x i8] c"patents.  We wish to avoid the danger that redistributors of a free\0A\00", align 1
@.str.43 = private unnamed_addr constant [72 x i8] c"program will individually obtain patent licenses, in effect making the\0A\00", align 1
@.str.44 = private unnamed_addr constant [71 x i8] c"program proprietary.  To prevent this, we have made it clear that any\0A\00", align 1
@.str.45 = private unnamed_addr constant [73 x i8] c"patent must be licensed for everyone's free use or not licensed at all.\0A\00", align 1
@.str.46 = private unnamed_addr constant [66 x i8] c"  The precise terms and conditions for copying, distribution and\0A\00", align 1
@.str.47 = private unnamed_addr constant [22 x i8] c"modification follow.\0A\00", align 1
@.str.48 = private unnamed_addr constant [68 x i8] c"   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\0A\00", align 1
@.str.49 = private unnamed_addr constant [71 x i8] c"  0. This License applies to any program or other work which contains\0A\00", align 1
@.str.50 = private unnamed_addr constant [70 x i8] c"a notice placed by the copyright holder saying it may be distributed\0A\00", align 1
@.str.51 = private unnamed_addr constant [72 x i8] c"under the terms of this General Public License.  The \22Program\22, below,\0A\00", align 1
@.str.52 = private unnamed_addr constant [71 x i8] c"refers to any such program or work, and a \22work based on the Program\22\0A\00", align 1
@.str.53 = private unnamed_addr constant [70 x i8] c"means either the Program or any derivative work under copyright law:\0A\00", align 1
@.str.54 = private unnamed_addr constant [67 x i8] c"that is to say, a work containing the Program or a portion of it,\0A\00", align 1
@.str.55 = private unnamed_addr constant [70 x i8] c"either verbatim or with modifications and/or translated into another\0A\00", align 1
@.str.56 = private unnamed_addr constant [72 x i8] c"language.  (Hereinafter, translation is included without limitation in\0A\00", align 1
@.str.57 = private unnamed_addr constant [65 x i8] c"the term \22modification\22.)  Each licensee is addressed as \22you\22.\0A\00", align 1
@.str.58 = private unnamed_addr constant [70 x i8] c"Activities other than copying, distribution and modification are not\0A\00", align 1
@.str.59 = private unnamed_addr constant [66 x i8] c"covered by this License; they are outside its scope.  The act of\0A\00", align 1
@.str.60 = private unnamed_addr constant [72 x i8] c"running the Program is not restricted, and the output from the Program\0A\00", align 1
@.str.61 = private unnamed_addr constant [64 x i8] c"is covered only if its contents constitute a work based on the\0A\00", align 1
@.str.62 = private unnamed_addr constant [67 x i8] c"Program (independent of having been made by running the Program).\0A\00", align 1
@.str.63 = private unnamed_addr constant [56 x i8] c"Whether that is true depends on what the Program does.\0A\00", align 1
@.str.64 = private unnamed_addr constant [67 x i8] c"  1. You may copy and distribute verbatim copies of the Program's\0A\00", align 1
@.str.65 = private unnamed_addr constant [65 x i8] c"source code as you receive it, in any medium, provided that you\0A\00", align 1
@.str.66 = private unnamed_addr constant [69 x i8] c"conspicuously and appropriately publish on each copy an appropriate\0A\00", align 1
@.str.67 = private unnamed_addr constant [66 x i8] c"copyright notice and disclaimer of warranty; keep intact all the\0A\00", align 1
@.str.68 = private unnamed_addr constant [72 x i8] c"notices that refer to this License and to the absence of any warranty;\0A\00", align 1
@.str.69 = private unnamed_addr constant [69 x i8] c"and give any other recipients of the Program a copy of this License\0A\00", align 1
@.str.70 = private unnamed_addr constant [25 x i8] c"along with the Program.\0A\00", align 1
@.str.71 = private unnamed_addr constant [71 x i8] c"You may charge a fee for the physical act of transferring a copy, and\0A\00", align 1
@.str.72 = private unnamed_addr constant [73 x i8] c"you may at your option offer warranty protection in exchange for a fee.\0A\00", align 1
@.str.73 = private unnamed_addr constant [71 x i8] c"  2. You may modify your copy or copies of the Program or any portion\0A\00", align 1
@.str.74 = private unnamed_addr constant [63 x i8] c"of it, thus forming a work based on the Program, and copy and\0A\00", align 1
@.str.75 = private unnamed_addr constant [68 x i8] c"distribute such modifications or work under the terms of Section 1\0A\00", align 1
@.str.76 = private unnamed_addr constant [61 x i8] c"above, provided that you also meet all of these conditions:\0A\00", align 1
@.str.77 = private unnamed_addr constant [69 x i8] c"    a) You must cause the modified files to carry prominent notices\0A\00", align 1
@.str.78 = private unnamed_addr constant [68 x i8] c"    stating that you changed the files and the date of any change.\0A\00", align 1
@.str.79 = private unnamed_addr constant [72 x i8] c"    b) You must cause any work that you distribute or publish, that in\0A\00", align 1
@.str.80 = private unnamed_addr constant [69 x i8] c"    whole or in part contains or is derived from the Program or any\0A\00", align 1
@.str.81 = private unnamed_addr constant [71 x i8] c"    part thereof, to be licensed as a whole at no charge to all third\0A\00", align 1
@.str.82 = private unnamed_addr constant [46 x i8] c"    parties under the terms of this License.\0A\00", align 1
@.str.83 = private unnamed_addr constant [70 x i8] c"    c) If the modified program normally reads commands interactively\0A\00", align 1
@.str.84 = private unnamed_addr constant [64 x i8] c"    when run, you must cause it, when started running for such\0A\00", align 1
@.str.85 = private unnamed_addr constant [70 x i8] c"    interactive use in the most ordinary way, to print or display an\0A\00", align 1
@.str.86 = private unnamed_addr constant [66 x i8] c"    announcement including an appropriate copyright notice and a\0A\00", align 1
@.str.87 = private unnamed_addr constant [72 x i8] c"    notice that there is no warranty (or else, saying that you provide\0A\00", align 1
@.str.88 = private unnamed_addr constant [67 x i8] c"    a warranty) and that users may redistribute the program under\0A\00", align 1
@.str.89 = private unnamed_addr constant [71 x i8] c"    these conditions, and telling the user how to view a copy of this\0A\00", align 1
@.str.90 = private unnamed_addr constant [68 x i8] c"    License.  (Exception: if the Program itself is interactive but\0A\00", align 1
@.str.91 = private unnamed_addr constant [70 x i8] c"    does not normally print such an announcement, your work based on\0A\00", align 1
@.str.92 = private unnamed_addr constant [60 x i8] c"    the Program is not required to print an announcement.)\0A\00", align 1
@.str.93 = private unnamed_addr constant [63 x i8] c"These requirements apply to the modified work as a whole.  If\0A\00", align 1
@.str.94 = private unnamed_addr constant [70 x i8] c"identifiable sections of that work are not derived from the Program,\0A\00", align 1
@.str.95 = private unnamed_addr constant [68 x i8] c"and can be reasonably considered independent and separate works in\0A\00", align 1
@.str.96 = private unnamed_addr constant [69 x i8] c"themselves, then this License, and its terms, do not apply to those\0A\00", align 1
@.str.97 = private unnamed_addr constant [68 x i8] c"sections when you distribute them as separate works.  But when you\0A\00", align 1
@.str.98 = private unnamed_addr constant [71 x i8] c"distribute the same sections as part of a whole which is a work based\0A\00", align 1
@.str.99 = private unnamed_addr constant [71 x i8] c"on the Program, the distribution of the whole must be on the terms of\0A\00", align 1
@.str.100 = private unnamed_addr constant [67 x i8] c"this License, whose permissions for other licensees extend to the\0A\00", align 1
@.str.101 = private unnamed_addr constant [75 x i8] c"entire whole, and thus to each and every part regardless of who wrote it.\0A\00", align 1
@.str.102 = private unnamed_addr constant [71 x i8] c"Thus, it is not the intent of this section to claim rights or contest\0A\00", align 1
@.str.103 = private unnamed_addr constant [71 x i8] c"your rights to work written entirely by you; rather, the intent is to\0A\00", align 1
@.str.104 = private unnamed_addr constant [65 x i8] c"exercise the right to control the distribution of derivative or\0A\00", align 1
@.str.105 = private unnamed_addr constant [40 x i8] c"collective works based on the Program.\0A\00", align 1
@.str.106 = private unnamed_addr constant [72 x i8] c"In addition, mere aggregation of another work not based on the Program\0A\00", align 1
@.str.107 = private unnamed_addr constant [71 x i8] c"with the Program (or with a work based on the Program) on a volume of\0A\00", align 1
@.str.108 = private unnamed_addr constant [70 x i8] c"a storage or distribution medium does not bring the other work under\0A\00", align 1
@.str.109 = private unnamed_addr constant [28 x i8] c"the scope of this License.\0A\00", align 1
@.str.110 = private unnamed_addr constant [70 x i8] c"  3. You may copy and distribute the Program (or a work based on it,\0A\00", align 1
@.str.111 = private unnamed_addr constant [71 x i8] c"under Section 2) in object code or executable form under the terms of\0A\00", align 1
@.str.112 = private unnamed_addr constant [72 x i8] c"Sections 1 and 2 above provided that you also do one of the following:\0A\00", align 1
@.str.113 = private unnamed_addr constant [70 x i8] c"    a) Accompany it with the complete corresponding machine-readable\0A\00", align 1
@.str.114 = private unnamed_addr constant [72 x i8] c"    source code, which must be distributed under the terms of Sections\0A\00", align 1
@.str.115 = private unnamed_addr constant [78 x i8] c"    1 and 2 above on a medium customarily used for software interchange; or,\0A\00", align 1
@.str.116 = private unnamed_addr constant [68 x i8] c"    b) Accompany it with a written offer, valid for at least three\0A\00", align 1
@.str.117 = private unnamed_addr constant [68 x i8] c"    years, to give any third party, for a charge no more than your\0A\00", align 1
@.str.118 = private unnamed_addr constant [67 x i8] c"    cost of physically performing source distribution, a complete\0A\00", align 1
@.str.119 = private unnamed_addr constant [67 x i8] c"    machine-readable copy of the corresponding source code, to be\0A\00", align 1
@.str.120 = private unnamed_addr constant [71 x i8] c"    distributed under the terms of Sections 1 and 2 above on a medium\0A\00", align 1
@.str.121 = private unnamed_addr constant [52 x i8] c"    customarily used for software interchange; or,\0A\00", align 1
@.str.122 = private unnamed_addr constant [71 x i8] c"    c) Accompany it with the information you received as to the offer\0A\00", align 1
@.str.123 = private unnamed_addr constant [68 x i8] c"    to distribute corresponding source code.  (This alternative is\0A\00", align 1
@.str.124 = private unnamed_addr constant [65 x i8] c"    allowed only for noncommercial distribution and only if you\0A\00", align 1
@.str.125 = private unnamed_addr constant [70 x i8] c"    received the program in object code or executable form with such\0A\00", align 1
@.str.126 = private unnamed_addr constant [51 x i8] c"    an offer, in accord with Subsection b above.)\0A\00", align 1
@.str.127 = private unnamed_addr constant [69 x i8] c"The source code for a work means the preferred form of the work for\0A\00", align 1
@.str.128 = private unnamed_addr constant [70 x i8] c"making modifications to it.  For an executable work, complete source\0A\00", align 1
@.str.129 = private unnamed_addr constant [70 x i8] c"code means all the source code for all modules it contains, plus any\0A\00", align 1
@.str.130 = private unnamed_addr constant [65 x i8] c"associated interface definition files, plus the scripts used to\0A\00", align 1
@.str.131 = private unnamed_addr constant [72 x i8] c"control compilation and installation of the executable.  However, as a\0A\00", align 1
@.str.132 = private unnamed_addr constant [65 x i8] c"special exception, the source code distributed need not include\0A\00", align 1
@.str.133 = private unnamed_addr constant [67 x i8] c"anything that is normally distributed (in either source or binary\0A\00", align 1
@.str.134 = private unnamed_addr constant [70 x i8] c"form) with the major components (compiler, kernel, and so on) of the\0A\00", align 1
@.str.135 = private unnamed_addr constant [70 x i8] c"operating system on which the executable runs, unless that component\0A\00", align 1
@.str.136 = private unnamed_addr constant [36 x i8] c"itself accompanies the executable.\0A\00", align 1
@.str.137 = private unnamed_addr constant [66 x i8] c"If distribution of executable or object code is made by offering\0A\00", align 1
@.str.138 = private unnamed_addr constant [66 x i8] c"access to copy from a designated place, then offering equivalent\0A\00", align 1
@.str.139 = private unnamed_addr constant [62 x i8] c"access to copy the source code from the same place counts as\0A\00", align 1
@.str.140 = private unnamed_addr constant [68 x i8] c"distribution of the source code, even though third parties are not\0A\00", align 1
@.str.141 = private unnamed_addr constant [58 x i8] c"compelled to copy the source along with the object code.\0A\00", align 1
@.str.142 = private unnamed_addr constant [70 x i8] c"  4. You may not copy, modify, sublicense, or distribute the Program\0A\00", align 1
@.str.143 = private unnamed_addr constant [63 x i8] c"except as expressly provided under this License.  Any attempt\0A\00", align 1
@.str.144 = private unnamed_addr constant [68 x i8] c"otherwise to copy, modify, sublicense or distribute the Program is\0A\00", align 1
@.str.145 = private unnamed_addr constant [72 x i8] c"void, and will automatically terminate your rights under this License.\0A\00", align 1
@.str.146 = private unnamed_addr constant [70 x i8] c"However, parties who have received copies, or rights, from you under\0A\00", align 1
@.str.147 = private unnamed_addr constant [70 x i8] c"this License will not have their licenses terminated so long as such\0A\00", align 1
@.str.148 = private unnamed_addr constant [36 x i8] c"parties remain in full compliance.\0A\00", align 1
@.str.149 = private unnamed_addr constant [70 x i8] c"  5. You are not required to accept this License, since you have not\0A\00", align 1
@.str.150 = private unnamed_addr constant [70 x i8] c"signed it.  However, nothing else grants you permission to modify or\0A\00", align 1
@.str.151 = private unnamed_addr constant [68 x i8] c"distribute the Program or its derivative works.  These actions are\0A\00", align 1
@.str.152 = private unnamed_addr constant [69 x i8] c"prohibited by law if you do not accept this License.  Therefore, by\0A\00", align 1
@.str.153 = private unnamed_addr constant [65 x i8] c"modifying or distributing the Program (or any work based on the\0A\00", align 1
@.str.154 = private unnamed_addr constant [70 x i8] c"Program), you indicate your acceptance of this License to do so, and\0A\00", align 1
@.str.155 = private unnamed_addr constant [69 x i8] c"all its terms and conditions for copying, distributing or modifying\0A\00", align 1
@.str.156 = private unnamed_addr constant [35 x i8] c"the Program or works based on it.\0A\00", align 1
@.str.157 = private unnamed_addr constant [71 x i8] c"  6. Each time you redistribute the Program (or any work based on the\0A\00", align 1
@.str.158 = private unnamed_addr constant [67 x i8] c"Program), the recipient automatically receives a license from the\0A\00", align 1
@.str.159 = private unnamed_addr constant [72 x i8] c"original licensor to copy, distribute or modify the Program subject to\0A\00", align 1
@.str.160 = private unnamed_addr constant [61 x i8] c"these terms and conditions.  You may not impose any further\0A\00", align 1
@.str.161 = private unnamed_addr constant [72 x i8] c"restrictions on the recipients' exercise of the rights granted herein.\0A\00", align 1
@.str.162 = private unnamed_addr constant [70 x i8] c"You are not responsible for enforcing compliance by third parties to\0A\00", align 1
@.str.163 = private unnamed_addr constant [15 x i8] c"this License.\0A\00", align 1
@.str.164 = private unnamed_addr constant [71 x i8] c"  7. If, as a consequence of a court judgment or allegation of patent\0A\00", align 1
@.str.165 = private unnamed_addr constant [70 x i8] c"infringement or for any other reason (not limited to patent issues),\0A\00", align 1
@.str.166 = private unnamed_addr constant [69 x i8] c"conditions are imposed on you (whether by court order, agreement or\0A\00", align 1
@.str.167 = private unnamed_addr constant [72 x i8] c"otherwise) that contradict the conditions of this License, they do not\0A\00", align 1
@.str.168 = private unnamed_addr constant [64 x i8] c"excuse you from the conditions of this License.  If you cannot\0A\00", align 1
@.str.169 = private unnamed_addr constant [72 x i8] c"distribute so as to satisfy simultaneously your obligations under this\0A\00", align 1
@.str.170 = private unnamed_addr constant [72 x i8] c"License and any other pertinent obligations, then as a consequence you\0A\00", align 1
@.str.171 = private unnamed_addr constant [66 x i8] c"may not distribute the Program at all.  For example, if a patent\0A\00", align 1
@.str.172 = private unnamed_addr constant [72 x i8] c"license would not permit royalty-free redistribution of the Program by\0A\00", align 1
@.str.173 = private unnamed_addr constant [71 x i8] c"all those who receive copies directly or indirectly through you, then\0A\00", align 1
@.str.174 = private unnamed_addr constant [69 x i8] c"the only way you could satisfy both it and this License would be to\0A\00", align 1
@.str.175 = private unnamed_addr constant [52 x i8] c"refrain entirely from distribution of the Program.\0A\00", align 1
@.str.176 = private unnamed_addr constant [71 x i8] c"If any portion of this section is held invalid or unenforceable under\0A\00", align 1
@.str.177 = private unnamed_addr constant [72 x i8] c"any particular circumstance, the balance of the section is intended to\0A\00", align 1
@.str.178 = private unnamed_addr constant [64 x i8] c"apply and the section as a whole is intended to apply in other\0A\00", align 1
@.str.179 = private unnamed_addr constant [16 x i8] c"circumstances.\0A\00", align 1
@.str.180 = private unnamed_addr constant [69 x i8] c"It is not the purpose of this section to induce you to infringe any\0A\00", align 1
@.str.181 = private unnamed_addr constant [70 x i8] c"patents or other property right claims or to contest validity of any\0A\00", align 1
@.str.182 = private unnamed_addr constant [66 x i8] c"such claims; this section has the sole purpose of protecting the\0A\00", align 1
@.str.183 = private unnamed_addr constant [62 x i8] c"integrity of the free software distribution system, which is\0A\00", align 1
@.str.184 = private unnamed_addr constant [65 x i8] c"implemented by public license practices.  Many people have made\0A\00", align 1
@.str.185 = private unnamed_addr constant [66 x i8] c"generous contributions to the wide range of software distributed\0A\00", align 1
@.str.186 = private unnamed_addr constant [67 x i8] c"through that system in reliance on consistent application of that\0A\00", align 1
@.str.187 = private unnamed_addr constant [72 x i8] c"system; it is up to the author/donor to decide if he or she is willing\0A\00", align 1
@.str.188 = private unnamed_addr constant [71 x i8] c"to distribute software through any other system and a licensee cannot\0A\00", align 1
@.str.189 = private unnamed_addr constant [21 x i8] c"impose that choice.\0A\00", align 1
@.str.190 = private unnamed_addr constant [71 x i8] c"This section is intended to make thoroughly clear what is believed to\0A\00", align 1
@.str.191 = private unnamed_addr constant [47 x i8] c"be a consequence of the rest of this License.\0A\00", align 1
@.str.192 = private unnamed_addr constant [69 x i8] c"  8. If the distribution and/or use of the Program is restricted in\0A\00", align 1
@.str.193 = private unnamed_addr constant [71 x i8] c"certain countries either by patents or by copyrighted interfaces, the\0A\00", align 1
@.str.194 = private unnamed_addr constant [69 x i8] c"original copyright holder who places the Program under this License\0A\00", align 1
@.str.195 = private unnamed_addr constant [68 x i8] c"may add an explicit geographical distribution limitation excluding\0A\00", align 1
@.str.196 = private unnamed_addr constant [69 x i8] c"those countries, so that distribution is permitted only in or among\0A\00", align 1
@.str.197 = private unnamed_addr constant [71 x i8] c"countries not thus excluded.  In such case, this License incorporates\0A\00", align 1
@.str.198 = private unnamed_addr constant [59 x i8] c"the limitation as if written in the body of this License.\0A\00", align 1
@.str.199 = private unnamed_addr constant [75 x i8] c"  9. The Free Software Foundation may publish revised and/or new versions\0A\00", align 1
@.str.200 = private unnamed_addr constant [74 x i8] c"of the General Public License from time to time.  Such new versions will\0A\00", align 1
@.str.201 = private unnamed_addr constant [74 x i8] c"be similar in spirit to the present version, but may differ in detail to\0A\00", align 1
@.str.202 = private unnamed_addr constant [35 x i8] c"address new problems or concerns.\0A\00", align 1
@.str.203 = private unnamed_addr constant [72 x i8] c"Each version is given a distinguishing version number.  If the Program\0A\00", align 1
@.str.204 = private unnamed_addr constant [73 x i8] c"specifies a version number of this License which applies to it and \22any\0A\00", align 1
@.str.205 = private unnamed_addr constant [75 x i8] c"later version\22, you have the option of following the terms and conditions\0A\00", align 1
@.str.206 = private unnamed_addr constant [70 x i8] c"either of that version or of any later version published by the Free\0A\00", align 1
@.str.207 = private unnamed_addr constant [75 x i8] c"Software Foundation.  If the Program does not specify a version number of\0A\00", align 1
@.str.208 = private unnamed_addr constant [78 x i8] c"this License, you may choose any version ever published by the Free Software\0A\00", align 1
@.str.209 = private unnamed_addr constant [13 x i8] c"Foundation.\0A\00", align 1
@.str.210 = private unnamed_addr constant [71 x i8] c"  10. If you wish to incorporate parts of the Program into other free\0A\00", align 1
@.str.211 = private unnamed_addr constant [75 x i8] c"programs whose distribution conditions are different, write to the author\0A\00", align 1
@.str.212 = private unnamed_addr constant [71 x i8] c"to ask for permission.  For software which is copyrighted by the Free\0A\00", align 1
@.str.213 = private unnamed_addr constant [74 x i8] c"Software Foundation, write to the Free Software Foundation; we sometimes\0A\00", align 1
@.str.214 = private unnamed_addr constant [73 x i8] c"make exceptions for this.  Our decision will be guided by the two goals\0A\00", align 1
@.str.215 = private unnamed_addr constant [75 x i8] c"of preserving the free status of all derivatives of our free software and\0A\00", align 1
@.str.216 = private unnamed_addr constant [59 x i8] c"of promoting the sharing and reuse of software generally.\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i8*, i32)* @show_copying_command to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @show_copying_command(i8* %0, i32 %1) #0 {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  store i8* %0, i8** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load i32, i32* @immediate_quit, align 4
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* @immediate_quit, align 4
  %7 = call i32 @printf_filtered(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0))
  %8 = call i32 @printf_filtered(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0))
  %9 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %10 = call i32 @printf_filtered(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0))
  %11 = call i32 @printf_filtered(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.4, i64 0, i64 0))
  %12 = call i32 @printf_filtered(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.5, i64 0, i64 0))
  %13 = call i32 @printf_filtered(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.6, i64 0, i64 0))
  %14 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %15 = call i32 @printf_filtered(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0))
  %16 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %17 = call i32 @printf_filtered(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.8, i64 0, i64 0))
  %18 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.9, i64 0, i64 0))
  %19 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.10, i64 0, i64 0))
  %20 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.11, i64 0, i64 0))
  %21 = call i32 @printf_filtered(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.12, i64 0, i64 0))
  %22 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.13, i64 0, i64 0))
  %23 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.14, i64 0, i64 0))
  %24 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.15, i64 0, i64 0))
  %25 = call i32 @printf_filtered(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0))
  %26 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %27 = call i32 @printf_filtered(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.17, i64 0, i64 0))
  %28 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.18, i64 0, i64 0))
  %29 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.19, i64 0, i64 0))
  %30 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.20, i64 0, i64 0))
  %31 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.21, i64 0, i64 0))
  %32 = call i32 @printf_filtered(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.22, i64 0, i64 0))
  %33 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %34 = call i32 @printf_filtered(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.23, i64 0, i64 0))
  %35 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.24, i64 0, i64 0))
  %36 = call i32 @printf_filtered(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.25, i64 0, i64 0))
  %37 = call i32 @printf_filtered(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.26, i64 0, i64 0))
  %38 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %39 = call i32 @printf_filtered(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.27, i64 0, i64 0))
  %40 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.28, i64 0, i64 0))
  %41 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.29, i64 0, i64 0))
  %42 = call i32 @printf_filtered(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.30, i64 0, i64 0))
  %43 = call i32 @printf_filtered(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i64 0, i64 0))
  %44 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %45 = call i32 @printf_filtered(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.32, i64 0, i64 0))
  %46 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.33, i64 0, i64 0))
  %47 = call i32 @printf_filtered(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0))
  %48 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %49 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.35, i64 0, i64 0))
  %50 = call i32 @printf_filtered(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.36, i64 0, i64 0))
  %51 = call i32 @printf_filtered(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.37, i64 0, i64 0))
  %52 = call i32 @printf_filtered(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.38, i64 0, i64 0))
  %53 = call i32 @printf_filtered(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.39, i64 0, i64 0))
  %54 = call i32 @printf_filtered(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.40, i64 0, i64 0))
  %55 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %56 = call i32 @printf_filtered(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.41, i64 0, i64 0))
  %57 = call i32 @printf_filtered(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.42, i64 0, i64 0))
  %58 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.43, i64 0, i64 0))
  %59 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.44, i64 0, i64 0))
  %60 = call i32 @printf_filtered(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.45, i64 0, i64 0))
  %61 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %62 = call i32 @printf_filtered(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.46, i64 0, i64 0))
  %63 = call i32 @printf_filtered(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i64 0, i64 0))
  %64 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %65 = call i32 @printf_filtered(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0))
  %66 = call i32 @printf_filtered(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.48, i64 0, i64 0))
  %67 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %68 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.49, i64 0, i64 0))
  %69 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.50, i64 0, i64 0))
  %70 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.51, i64 0, i64 0))
  %71 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.52, i64 0, i64 0))
  %72 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.53, i64 0, i64 0))
  %73 = call i32 @printf_filtered(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.54, i64 0, i64 0))
  %74 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.55, i64 0, i64 0))
  %75 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.56, i64 0, i64 0))
  %76 = call i32 @printf_filtered(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.57, i64 0, i64 0))
  %77 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %78 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.58, i64 0, i64 0))
  %79 = call i32 @printf_filtered(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.59, i64 0, i64 0))
  %80 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.60, i64 0, i64 0))
  %81 = call i32 @printf_filtered(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.61, i64 0, i64 0))
  %82 = call i32 @printf_filtered(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.62, i64 0, i64 0))
  %83 = call i32 @printf_filtered(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.63, i64 0, i64 0))
  %84 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %85 = call i32 @printf_filtered(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.64, i64 0, i64 0))
  %86 = call i32 @printf_filtered(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.65, i64 0, i64 0))
  %87 = call i32 @printf_filtered(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.66, i64 0, i64 0))
  %88 = call i32 @printf_filtered(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.67, i64 0, i64 0))
  %89 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.68, i64 0, i64 0))
  %90 = call i32 @printf_filtered(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.69, i64 0, i64 0))
  %91 = call i32 @printf_filtered(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.70, i64 0, i64 0))
  %92 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %93 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.71, i64 0, i64 0))
  %94 = call i32 @printf_filtered(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.72, i64 0, i64 0))
  %95 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %96 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.73, i64 0, i64 0))
  %97 = call i32 @printf_filtered(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.74, i64 0, i64 0))
  %98 = call i32 @printf_filtered(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.75, i64 0, i64 0))
  %99 = call i32 @printf_filtered(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.76, i64 0, i64 0))
  %100 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %101 = call i32 @printf_filtered(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.77, i64 0, i64 0))
  %102 = call i32 @printf_filtered(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.78, i64 0, i64 0))
  %103 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %104 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.79, i64 0, i64 0))
  %105 = call i32 @printf_filtered(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.80, i64 0, i64 0))
  %106 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.81, i64 0, i64 0))
  %107 = call i32 @printf_filtered(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.82, i64 0, i64 0))
  %108 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %109 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.83, i64 0, i64 0))
  %110 = call i32 @printf_filtered(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.84, i64 0, i64 0))
  %111 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.85, i64 0, i64 0))
  %112 = call i32 @printf_filtered(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.86, i64 0, i64 0))
  %113 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.87, i64 0, i64 0))
  %114 = call i32 @printf_filtered(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.88, i64 0, i64 0))
  %115 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.89, i64 0, i64 0))
  %116 = call i32 @printf_filtered(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.90, i64 0, i64 0))
  %117 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.91, i64 0, i64 0))
  %118 = call i32 @printf_filtered(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.92, i64 0, i64 0))
  %119 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %120 = call i32 @printf_filtered(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.93, i64 0, i64 0))
  %121 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.94, i64 0, i64 0))
  %122 = call i32 @printf_filtered(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.95, i64 0, i64 0))
  %123 = call i32 @printf_filtered(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.96, i64 0, i64 0))
  %124 = call i32 @printf_filtered(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.97, i64 0, i64 0))
  %125 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.98, i64 0, i64 0))
  %126 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.99, i64 0, i64 0))
  %127 = call i32 @printf_filtered(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.100, i64 0, i64 0))
  %128 = call i32 @printf_filtered(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.101, i64 0, i64 0))
  %129 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %130 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.102, i64 0, i64 0))
  %131 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.103, i64 0, i64 0))
  %132 = call i32 @printf_filtered(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.104, i64 0, i64 0))
  %133 = call i32 @printf_filtered(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.105, i64 0, i64 0))
  %134 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %135 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.106, i64 0, i64 0))
  %136 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.107, i64 0, i64 0))
  %137 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.108, i64 0, i64 0))
  %138 = call i32 @printf_filtered(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.109, i64 0, i64 0))
  %139 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %140 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.110, i64 0, i64 0))
  %141 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.111, i64 0, i64 0))
  %142 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.112, i64 0, i64 0))
  %143 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %144 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.113, i64 0, i64 0))
  %145 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.114, i64 0, i64 0))
  %146 = call i32 @printf_filtered(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.115, i64 0, i64 0))
  %147 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %148 = call i32 @printf_filtered(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.116, i64 0, i64 0))
  %149 = call i32 @printf_filtered(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.117, i64 0, i64 0))
  %150 = call i32 @printf_filtered(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.118, i64 0, i64 0))
  %151 = call i32 @printf_filtered(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.119, i64 0, i64 0))
  %152 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.120, i64 0, i64 0))
  %153 = call i32 @printf_filtered(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.121, i64 0, i64 0))
  %154 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %155 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.122, i64 0, i64 0))
  %156 = call i32 @printf_filtered(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.123, i64 0, i64 0))
  %157 = call i32 @printf_filtered(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.124, i64 0, i64 0))
  %158 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.125, i64 0, i64 0))
  %159 = call i32 @printf_filtered(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.126, i64 0, i64 0))
  %160 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %161 = call i32 @printf_filtered(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.127, i64 0, i64 0))
  %162 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.128, i64 0, i64 0))
  %163 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.129, i64 0, i64 0))
  %164 = call i32 @printf_filtered(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.130, i64 0, i64 0))
  %165 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.131, i64 0, i64 0))
  %166 = call i32 @printf_filtered(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.132, i64 0, i64 0))
  %167 = call i32 @printf_filtered(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.133, i64 0, i64 0))
  %168 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.134, i64 0, i64 0))
  %169 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.135, i64 0, i64 0))
  %170 = call i32 @printf_filtered(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.136, i64 0, i64 0))
  %171 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %172 = call i32 @printf_filtered(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.137, i64 0, i64 0))
  %173 = call i32 @printf_filtered(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.138, i64 0, i64 0))
  %174 = call i32 @printf_filtered(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.139, i64 0, i64 0))
  %175 = call i32 @printf_filtered(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.140, i64 0, i64 0))
  %176 = call i32 @printf_filtered(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.141, i64 0, i64 0))
  %177 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %178 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.142, i64 0, i64 0))
  %179 = call i32 @printf_filtered(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.143, i64 0, i64 0))
  %180 = call i32 @printf_filtered(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.144, i64 0, i64 0))
  %181 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.145, i64 0, i64 0))
  %182 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.146, i64 0, i64 0))
  %183 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.147, i64 0, i64 0))
  %184 = call i32 @printf_filtered(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.148, i64 0, i64 0))
  %185 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %186 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.149, i64 0, i64 0))
  %187 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.150, i64 0, i64 0))
  %188 = call i32 @printf_filtered(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.151, i64 0, i64 0))
  %189 = call i32 @printf_filtered(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.152, i64 0, i64 0))
  %190 = call i32 @printf_filtered(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.153, i64 0, i64 0))
  %191 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.154, i64 0, i64 0))
  %192 = call i32 @printf_filtered(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.155, i64 0, i64 0))
  %193 = call i32 @printf_filtered(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.156, i64 0, i64 0))
  %194 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %195 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.157, i64 0, i64 0))
  %196 = call i32 @printf_filtered(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.158, i64 0, i64 0))
  %197 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.159, i64 0, i64 0))
  %198 = call i32 @printf_filtered(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.160, i64 0, i64 0))
  %199 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.161, i64 0, i64 0))
  %200 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.162, i64 0, i64 0))
  %201 = call i32 @printf_filtered(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.163, i64 0, i64 0))
  %202 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %203 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.164, i64 0, i64 0))
  %204 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.165, i64 0, i64 0))
  %205 = call i32 @printf_filtered(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.166, i64 0, i64 0))
  %206 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.167, i64 0, i64 0))
  %207 = call i32 @printf_filtered(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.168, i64 0, i64 0))
  %208 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.169, i64 0, i64 0))
  %209 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.170, i64 0, i64 0))
  %210 = call i32 @printf_filtered(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.171, i64 0, i64 0))
  %211 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.172, i64 0, i64 0))
  %212 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.173, i64 0, i64 0))
  %213 = call i32 @printf_filtered(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.174, i64 0, i64 0))
  %214 = call i32 @printf_filtered(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.175, i64 0, i64 0))
  %215 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %216 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.176, i64 0, i64 0))
  %217 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.177, i64 0, i64 0))
  %218 = call i32 @printf_filtered(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.178, i64 0, i64 0))
  %219 = call i32 @printf_filtered(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.179, i64 0, i64 0))
  %220 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %221 = call i32 @printf_filtered(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.180, i64 0, i64 0))
  %222 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.181, i64 0, i64 0))
  %223 = call i32 @printf_filtered(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.182, i64 0, i64 0))
  %224 = call i32 @printf_filtered(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.183, i64 0, i64 0))
  %225 = call i32 @printf_filtered(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.184, i64 0, i64 0))
  %226 = call i32 @printf_filtered(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.185, i64 0, i64 0))
  %227 = call i32 @printf_filtered(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.186, i64 0, i64 0))
  %228 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.187, i64 0, i64 0))
  %229 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.188, i64 0, i64 0))
  %230 = call i32 @printf_filtered(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.189, i64 0, i64 0))
  %231 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %232 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.190, i64 0, i64 0))
  %233 = call i32 @printf_filtered(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.191, i64 0, i64 0))
  %234 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %235 = call i32 @printf_filtered(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.192, i64 0, i64 0))
  %236 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.193, i64 0, i64 0))
  %237 = call i32 @printf_filtered(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.194, i64 0, i64 0))
  %238 = call i32 @printf_filtered(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.195, i64 0, i64 0))
  %239 = call i32 @printf_filtered(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.196, i64 0, i64 0))
  %240 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.197, i64 0, i64 0))
  %241 = call i32 @printf_filtered(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.198, i64 0, i64 0))
  %242 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %243 = call i32 @printf_filtered(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.199, i64 0, i64 0))
  %244 = call i32 @printf_filtered(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.200, i64 0, i64 0))
  %245 = call i32 @printf_filtered(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.201, i64 0, i64 0))
  %246 = call i32 @printf_filtered(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.202, i64 0, i64 0))
  %247 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %248 = call i32 @printf_filtered(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.203, i64 0, i64 0))
  %249 = call i32 @printf_filtered(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.204, i64 0, i64 0))
  %250 = call i32 @printf_filtered(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.205, i64 0, i64 0))
  %251 = call i32 @printf_filtered(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.206, i64 0, i64 0))
  %252 = call i32 @printf_filtered(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.207, i64 0, i64 0))
  %253 = call i32 @printf_filtered(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.208, i64 0, i64 0))
  %254 = call i32 @printf_filtered(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.209, i64 0, i64 0))
  %255 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %256 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.210, i64 0, i64 0))
  %257 = call i32 @printf_filtered(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.211, i64 0, i64 0))
  %258 = call i32 @printf_filtered(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.212, i64 0, i64 0))
  %259 = call i32 @printf_filtered(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.213, i64 0, i64 0))
  %260 = call i32 @printf_filtered(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.214, i64 0, i64 0))
  %261 = call i32 @printf_filtered(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.215, i64 0, i64 0))
  %262 = call i32 @printf_filtered(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.216, i64 0, i64 0))
  %263 = call i32 @printf_filtered(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
  %264 = load i32, i32* @immediate_quit, align 4
  %265 = add nsw i32 %264, -1
  store i32 %265, i32* @immediate_quit, align 4
  ret void
}

declare dso_local i32 @printf_filtered(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
