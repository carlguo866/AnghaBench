; ModuleID = '/home/carl/AnghaBench/freebsd/contrib/processor-trace/libipt/test/src/extr_ptunit-section.c_main.c'
source_filename = "/home/carl/AnghaBench/freebsd/contrib/processor-trace/libipt/test/src/extr_ptunit-section.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.section_fixture = type { i32, i32 }
%struct.ptunit_suite = type { i32 }

@sfix_init = common dso_local global i32 0, align 4
@sfix_fini = common dso_local global i32 0, align 4
@create = common dso_local global i32 0, align 4
@create_bad_offset = common dso_local global i32 0, align 4
@create_truncated = common dso_local global i32 0, align 4
@create_empty = common dso_local global i32 0, align 4
@filename_null = common dso_local global i32 0, align 4
@offset_null = common dso_local global i32 0, align 4
@size_null = common dso_local global i32 0, align 4
@get_null = common dso_local global i32 0, align 4
@put_null = common dso_local global i32 0, align 4
@attach_null = common dso_local global i32 0, align 4
@detach_null = common dso_local global i32 0, align 4
@map_null = common dso_local global i32 0, align 4
@unmap_null = common dso_local global i32 0, align 4
@cache_null = common dso_local global i32 0, align 4
@get_overflow = common dso_local global i32 0, align 4
@attach_overflow = common dso_local global i32 0, align 4
@attach_bad_ucount = common dso_local global i32 0, align 4
@map_change = common dso_local global i32 0, align 4
@map_put = common dso_local global i32 0, align 4
@unmap_nomap = common dso_local global i32 0, align 4
@map_overflow = common dso_local global i32 0, align 4
@get_put = common dso_local global i32 0, align 4
@attach_detach = common dso_local global i32 0, align 4
@attach_bad_iscache = common dso_local global i32 0, align 4
@detach_bad_iscache = common dso_local global i32 0, align 4
@map_unmap = common dso_local global i32 0, align 4
@attach_map = common dso_local global i32 0, align 4
@attach_bad_map = common dso_local global i32 0, align 4
@attach_map_overflow = common dso_local global i32 0, align 4
@read = common dso_local global i32 0, align 4
@read_null = common dso_local global i32 0, align 4
@read_offset = common dso_local global i32 0, align 4
@read_truncated = common dso_local global i32 0, align 4
@read_from_truncated = common dso_local global i32 0, align 4
@read_nomem = common dso_local global i32 0, align 4
@read_overflow = common dso_local global i32 0, align 4
@read_overflow_32bit = common dso_local global i32 0, align 4
@read_nomap = common dso_local global i32 0, align 4
@read_unmap_map = common dso_local global i32 0, align 4
@init_no_bcache = common dso_local global i32 0, align 4
@bcache_alloc_free = common dso_local global i32 0, align 4
@bcache_alloc_twice = common dso_local global i32 0, align 4
@bcache_alloc_nomap = common dso_local global i32 0, align 4
@memsize_null = common dso_local global i32 0, align 4
@memsize_nomap = common dso_local global i32 0, align 4
@memsize_unmap = common dso_local global i32 0, align 4
@memsize_map_nobcache = common dso_local global i32 0, align 4
@memsize_map_bcache = common dso_local global i32 0, align 4
@stress = common dso_local global i32 0, align 4
@worker_bcache = common dso_local global i32 0, align 4
@worker_read = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca %struct.section_fixture, align 4
  %7 = alloca %struct.ptunit_suite, align 4
  %8 = alloca %struct.ptunit_suite, align 4
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %9 = load i32, i32* @sfix_init, align 4
  %10 = getelementptr inbounds %struct.section_fixture, %struct.section_fixture* %6, i32 0, i32 1
  store i32 %9, i32* %10, align 4
  %11 = load i32, i32* @sfix_fini, align 4
  %12 = getelementptr inbounds %struct.section_fixture, %struct.section_fixture* %6, i32 0, i32 0
  store i32 %11, i32* %12, align 4
  %13 = load i32, i32* %4, align 4
  %14 = load i8**, i8*** %5, align 8
  %15 = call i32 @ptunit_mk_suite(i32 %13, i8** %14)
  %16 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %8, i32 0, i32 0
  store i32 %15, i32* %16, align 4
  %17 = bitcast %struct.ptunit_suite* %7 to i8*
  %18 = bitcast %struct.ptunit_suite* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64 4, i1 false)
  %19 = load i32, i32* @create, align 4
  %20 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = bitcast %struct.section_fixture* %6 to i64*
  %23 = load i64, i64* %22, align 4
  %24 = call i32 @ptu_run_f(i32 %21, i32 %19, i64 %23)
  %25 = load i32, i32* @create_bad_offset, align 4
  %26 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = bitcast %struct.section_fixture* %6 to i64*
  %29 = load i64, i64* %28, align 4
  %30 = call i32 @ptu_run_f(i32 %27, i32 %25, i64 %29)
  %31 = load i32, i32* @create_truncated, align 4
  %32 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = bitcast %struct.section_fixture* %6 to i64*
  %35 = load i64, i64* %34, align 4
  %36 = call i32 @ptu_run_f(i32 %33, i32 %31, i64 %35)
  %37 = load i32, i32* @create_empty, align 4
  %38 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = bitcast %struct.section_fixture* %6 to i64*
  %41 = load i64, i64* %40, align 4
  %42 = call i32 @ptu_run_f(i32 %39, i32 %37, i64 %41)
  %43 = load i32, i32* @filename_null, align 4
  %44 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = call i32 @ptu_run(i32 %45, i32 %43)
  %47 = load i32, i32* @offset_null, align 4
  %48 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = call i32 @ptu_run(i32 %49, i32 %47)
  %51 = load i32, i32* @size_null, align 4
  %52 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = call i32 @ptu_run(i32 %53, i32 %51)
  %55 = load i32, i32* @get_null, align 4
  %56 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = call i32 @ptu_run(i32 %57, i32 %55)
  %59 = load i32, i32* @put_null, align 4
  %60 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = call i32 @ptu_run(i32 %61, i32 %59)
  %63 = load i32, i32* @attach_null, align 4
  %64 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = call i32 @ptu_run(i32 %65, i32 %63)
  %67 = load i32, i32* @detach_null, align 4
  %68 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = call i32 @ptu_run(i32 %69, i32 %67)
  %71 = load i32, i32* @map_null, align 4
  %72 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = call i32 @ptu_run(i32 %73, i32 %71)
  %75 = load i32, i32* @unmap_null, align 4
  %76 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = call i32 @ptu_run(i32 %77, i32 %75)
  %79 = load i32, i32* @cache_null, align 4
  %80 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = call i32 @ptu_run(i32 %81, i32 %79)
  %83 = load i32, i32* @get_overflow, align 4
  %84 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = bitcast %struct.section_fixture* %6 to i64*
  %87 = load i64, i64* %86, align 4
  %88 = call i32 @ptu_run_f(i32 %85, i32 %83, i64 %87)
  %89 = load i32, i32* @attach_overflow, align 4
  %90 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = bitcast %struct.section_fixture* %6 to i64*
  %93 = load i64, i64* %92, align 4
  %94 = call i32 @ptu_run_f(i32 %91, i32 %89, i64 %93)
  %95 = load i32, i32* @attach_bad_ucount, align 4
  %96 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = bitcast %struct.section_fixture* %6 to i64*
  %99 = load i64, i64* %98, align 4
  %100 = call i32 @ptu_run_f(i32 %97, i32 %95, i64 %99)
  %101 = load i32, i32* @map_change, align 4
  %102 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = bitcast %struct.section_fixture* %6 to i64*
  %105 = load i64, i64* %104, align 4
  %106 = call i32 @ptu_run_f(i32 %103, i32 %101, i64 %105)
  %107 = load i32, i32* @map_put, align 4
  %108 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = bitcast %struct.section_fixture* %6 to i64*
  %111 = load i64, i64* %110, align 4
  %112 = call i32 @ptu_run_f(i32 %109, i32 %107, i64 %111)
  %113 = load i32, i32* @unmap_nomap, align 4
  %114 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = bitcast %struct.section_fixture* %6 to i64*
  %117 = load i64, i64* %116, align 4
  %118 = call i32 @ptu_run_f(i32 %115, i32 %113, i64 %117)
  %119 = load i32, i32* @map_overflow, align 4
  %120 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = bitcast %struct.section_fixture* %6 to i64*
  %123 = load i64, i64* %122, align 4
  %124 = call i32 @ptu_run_f(i32 %121, i32 %119, i64 %123)
  %125 = load i32, i32* @get_put, align 4
  %126 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = bitcast %struct.section_fixture* %6 to i64*
  %129 = load i64, i64* %128, align 4
  %130 = call i32 @ptu_run_f(i32 %127, i32 %125, i64 %129)
  %131 = load i32, i32* @attach_detach, align 4
  %132 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = bitcast %struct.section_fixture* %6 to i64*
  %135 = load i64, i64* %134, align 4
  %136 = call i32 @ptu_run_f(i32 %133, i32 %131, i64 %135)
  %137 = load i32, i32* @attach_bad_iscache, align 4
  %138 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = bitcast %struct.section_fixture* %6 to i64*
  %141 = load i64, i64* %140, align 4
  %142 = call i32 @ptu_run_f(i32 %139, i32 %137, i64 %141)
  %143 = load i32, i32* @detach_bad_iscache, align 4
  %144 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = bitcast %struct.section_fixture* %6 to i64*
  %147 = load i64, i64* %146, align 4
  %148 = call i32 @ptu_run_f(i32 %145, i32 %143, i64 %147)
  %149 = load i32, i32* @map_unmap, align 4
  %150 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = bitcast %struct.section_fixture* %6 to i64*
  %153 = load i64, i64* %152, align 4
  %154 = call i32 @ptu_run_f(i32 %151, i32 %149, i64 %153)
  %155 = load i32, i32* @attach_map, align 4
  %156 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = bitcast %struct.section_fixture* %6 to i64*
  %159 = load i64, i64* %158, align 4
  %160 = call i32 @ptu_run_f(i32 %157, i32 %155, i64 %159)
  %161 = load i32, i32* @attach_bad_map, align 4
  %162 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %163 = load i32, i32* %162, align 4
  %164 = bitcast %struct.section_fixture* %6 to i64*
  %165 = load i64, i64* %164, align 4
  %166 = call i32 @ptu_run_f(i32 %163, i32 %161, i64 %165)
  %167 = load i32, i32* @attach_map_overflow, align 4
  %168 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = bitcast %struct.section_fixture* %6 to i64*
  %171 = load i64, i64* %170, align 4
  %172 = call i32 @ptu_run_f(i32 %169, i32 %167, i64 %171)
  %173 = load i32, i32* @read, align 4
  %174 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %175 = load i32, i32* %174, align 4
  %176 = bitcast %struct.section_fixture* %6 to i64*
  %177 = load i64, i64* %176, align 4
  %178 = call i32 @ptu_run_f(i32 %175, i32 %173, i64 %177)
  %179 = load i32, i32* @read_null, align 4
  %180 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = bitcast %struct.section_fixture* %6 to i64*
  %183 = load i64, i64* %182, align 4
  %184 = call i32 @ptu_run_f(i32 %181, i32 %179, i64 %183)
  %185 = load i32, i32* @read_offset, align 4
  %186 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = bitcast %struct.section_fixture* %6 to i64*
  %189 = load i64, i64* %188, align 4
  %190 = call i32 @ptu_run_f(i32 %187, i32 %185, i64 %189)
  %191 = load i32, i32* @read_truncated, align 4
  %192 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = bitcast %struct.section_fixture* %6 to i64*
  %195 = load i64, i64* %194, align 4
  %196 = call i32 @ptu_run_f(i32 %193, i32 %191, i64 %195)
  %197 = load i32, i32* @read_from_truncated, align 4
  %198 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %199 = load i32, i32* %198, align 4
  %200 = bitcast %struct.section_fixture* %6 to i64*
  %201 = load i64, i64* %200, align 4
  %202 = call i32 @ptu_run_f(i32 %199, i32 %197, i64 %201)
  %203 = load i32, i32* @read_nomem, align 4
  %204 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = bitcast %struct.section_fixture* %6 to i64*
  %207 = load i64, i64* %206, align 4
  %208 = call i32 @ptu_run_f(i32 %205, i32 %203, i64 %207)
  %209 = load i32, i32* @read_overflow, align 4
  %210 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = bitcast %struct.section_fixture* %6 to i64*
  %213 = load i64, i64* %212, align 4
  %214 = call i32 @ptu_run_f(i32 %211, i32 %209, i64 %213)
  %215 = load i32, i32* @read_overflow_32bit, align 4
  %216 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = bitcast %struct.section_fixture* %6 to i64*
  %219 = load i64, i64* %218, align 4
  %220 = call i32 @ptu_run_f(i32 %217, i32 %215, i64 %219)
  %221 = load i32, i32* @read_nomap, align 4
  %222 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = bitcast %struct.section_fixture* %6 to i64*
  %225 = load i64, i64* %224, align 4
  %226 = call i32 @ptu_run_f(i32 %223, i32 %221, i64 %225)
  %227 = load i32, i32* @read_unmap_map, align 4
  %228 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %229 = load i32, i32* %228, align 4
  %230 = bitcast %struct.section_fixture* %6 to i64*
  %231 = load i64, i64* %230, align 4
  %232 = call i32 @ptu_run_f(i32 %229, i32 %227, i64 %231)
  %233 = load i32, i32* @init_no_bcache, align 4
  %234 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %235 = load i32, i32* %234, align 4
  %236 = bitcast %struct.section_fixture* %6 to i64*
  %237 = load i64, i64* %236, align 4
  %238 = call i32 @ptu_run_f(i32 %235, i32 %233, i64 %237)
  %239 = load i32, i32* @bcache_alloc_free, align 4
  %240 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %241 = load i32, i32* %240, align 4
  %242 = bitcast %struct.section_fixture* %6 to i64*
  %243 = load i64, i64* %242, align 4
  %244 = call i32 @ptu_run_f(i32 %241, i32 %239, i64 %243)
  %245 = load i32, i32* @bcache_alloc_twice, align 4
  %246 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %247 = load i32, i32* %246, align 4
  %248 = bitcast %struct.section_fixture* %6 to i64*
  %249 = load i64, i64* %248, align 4
  %250 = call i32 @ptu_run_f(i32 %247, i32 %245, i64 %249)
  %251 = load i32, i32* @bcache_alloc_nomap, align 4
  %252 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = bitcast %struct.section_fixture* %6 to i64*
  %255 = load i64, i64* %254, align 4
  %256 = call i32 @ptu_run_f(i32 %253, i32 %251, i64 %255)
  %257 = load i32, i32* @memsize_null, align 4
  %258 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %259 = load i32, i32* %258, align 4
  %260 = bitcast %struct.section_fixture* %6 to i64*
  %261 = load i64, i64* %260, align 4
  %262 = call i32 @ptu_run_f(i32 %259, i32 %257, i64 %261)
  %263 = load i32, i32* @memsize_nomap, align 4
  %264 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %265 = load i32, i32* %264, align 4
  %266 = bitcast %struct.section_fixture* %6 to i64*
  %267 = load i64, i64* %266, align 4
  %268 = call i32 @ptu_run_f(i32 %265, i32 %263, i64 %267)
  %269 = load i32, i32* @memsize_unmap, align 4
  %270 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %271 = load i32, i32* %270, align 4
  %272 = bitcast %struct.section_fixture* %6 to i64*
  %273 = load i64, i64* %272, align 4
  %274 = call i32 @ptu_run_f(i32 %271, i32 %269, i64 %273)
  %275 = load i32, i32* @memsize_map_nobcache, align 4
  %276 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %277 = load i32, i32* %276, align 4
  %278 = bitcast %struct.section_fixture* %6 to i64*
  %279 = load i64, i64* %278, align 4
  %280 = call i32 @ptu_run_f(i32 %277, i32 %275, i64 %279)
  %281 = load i32, i32* @memsize_map_bcache, align 4
  %282 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %283 = load i32, i32* %282, align 4
  %284 = bitcast %struct.section_fixture* %6 to i64*
  %285 = load i64, i64* %284, align 4
  %286 = call i32 @ptu_run_f(i32 %283, i32 %281, i64 %285)
  %287 = load i32, i32* @stress, align 4
  %288 = load i32, i32* @worker_bcache, align 4
  %289 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %290 = load i32, i32* %289, align 4
  %291 = bitcast %struct.section_fixture* %6 to i64*
  %292 = load i64, i64* %291, align 4
  %293 = call i32 @ptu_run_fp(i32 %290, i32 %287, i64 %292, i32 %288)
  %294 = load i32, i32* @stress, align 4
  %295 = load i32, i32* @worker_read, align 4
  %296 = getelementptr inbounds %struct.ptunit_suite, %struct.ptunit_suite* %7, i32 0, i32 0
  %297 = load i32, i32* %296, align 4
  %298 = bitcast %struct.section_fixture* %6 to i64*
  %299 = load i64, i64* %298, align 4
  %300 = call i32 @ptu_run_fp(i32 %297, i32 %294, i64 %299, i32 %295)
  %301 = call i32 @ptunit_report(%struct.ptunit_suite* %7)
  ret i32 %301
}

declare dso_local i32 @ptunit_mk_suite(i32, i8**) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

declare dso_local i32 @ptu_run_f(i32, i32, i64) #1

declare dso_local i32 @ptu_run(i32, i32) #1

declare dso_local i32 @ptu_run_fp(i32, i32, i64, i32) #1

declare dso_local i32 @ptunit_report(%struct.ptunit_suite*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind willreturn }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
