; ModuleID = '/home/carl/AnghaBench/freebsd/contrib/openpam/t/extr_t_openpam_readword.c_t_prepare.c'
source_filename = "/home/carl/AnghaBench/freebsd/contrib/openpam/t/extr_t_openpam_readword.c_t_prepare.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@empty_input = common dso_local global i32 0, align 4
@empty_line = common dso_local global i32 0, align 4
@unterminated_line = common dso_local global i32 0, align 4
@single_whitespace = common dso_local global i32 0, align 4
@multiple_whitespace = common dso_local global i32 0, align 4
@comment = common dso_local global i32 0, align 4
@whitespace_before_comment = common dso_local global i32 0, align 4
@single_quoted_comment = common dso_local global i32 0, align 4
@double_quoted_comment = common dso_local global i32 0, align 4
@comment_at_eof = common dso_local global i32 0, align 4
@single_word = common dso_local global i32 0, align 4
@single_whitespace_before_word = common dso_local global i32 0, align 4
@double_whitespace_before_word = common dso_local global i32 0, align 4
@single_whitespace_after_word = common dso_local global i32 0, align 4
@double_whitespace_after_word = common dso_local global i32 0, align 4
@comment_after_word = common dso_local global i32 0, align 4
@word_containing_hash = common dso_local global i32 0, align 4
@two_words = common dso_local global i32 0, align 4
@naked_escape = common dso_local global i32 0, align 4
@escaped_escape = common dso_local global i32 0, align 4
@escaped_whitespace = common dso_local global i32 0, align 4
@escaped_newline_before_word = common dso_local global i32 0, align 4
@escaped_newline_within_word = common dso_local global i32 0, align 4
@escaped_newline_after_word = common dso_local global i32 0, align 4
@escaped_letter = common dso_local global i32 0, align 4
@escaped_comment = common dso_local global i32 0, align 4
@escape_at_eof = common dso_local global i32 0, align 4
@naked_single_quote = common dso_local global i32 0, align 4
@naked_double_quote = common dso_local global i32 0, align 4
@empty_single_quotes = common dso_local global i32 0, align 4
@empty_double_quotes = common dso_local global i32 0, align 4
@single_quotes_within_double_quotes = common dso_local global i32 0, align 4
@double_quotes_within_single_quotes = common dso_local global i32 0, align 4
@single_quoted_whitespace = common dso_local global i32 0, align 4
@double_quoted_whitespace = common dso_local global i32 0, align 4
@single_quoted_words = common dso_local global i32 0, align 4
@double_quoted_words = common dso_local global i32 0, align 4
@single_quote_before_word = common dso_local global i32 0, align 4
@double_quote_before_word = common dso_local global i32 0, align 4
@single_quote_within_word = common dso_local global i32 0, align 4
@double_quote_within_word = common dso_local global i32 0, align 4
@single_quote_after_word = common dso_local global i32 0, align 4
@double_quote_after_word = common dso_local global i32 0, align 4
@escaped_single_quote = common dso_local global i32 0, align 4
@escaped_double_quote = common dso_local global i32 0, align 4
@escaped_whitespace_within_single_quotes = common dso_local global i32 0, align 4
@escaped_whitespace_within_double_quotes = common dso_local global i32 0, align 4
@escaped_letter_within_single_quotes = common dso_local global i32 0, align 4
@escaped_letter_within_double_quotes = common dso_local global i32 0, align 4
@escaped_escape_within_single_quotes = common dso_local global i32 0, align 4
@escaped_escape_within_double_quotes = common dso_local global i32 0, align 4
@escaped_single_quote_within_single_quotes = common dso_local global i32 0, align 4
@escaped_double_quote_within_single_quotes = common dso_local global i32 0, align 4
@escaped_single_quote_within_double_quotes = common dso_local global i32 0, align 4
@escaped_double_quote_within_double_quotes = common dso_local global i32 0, align 4
@line_continuation_within_whitespace = common dso_local global i32 0, align 4
@line_continuation_before_whitespace = common dso_local global i32 0, align 4
@line_continuation_after_whitespace = common dso_local global i32 0, align 4
@line_continuation_within_word = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (i32, i8**)* @t_prepare to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @t_prepare(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i8**, align 8
  store i32 %0, i32* %3, align 4
  store i8** %1, i8*** %4, align 8
  %5 = load i32, i32* %3, align 4
  %6 = load i8**, i8*** %4, align 8
  %7 = load i32, i32* @empty_input, align 4
  %8 = call i32 @T(i32 %7)
  %9 = load i32, i32* @empty_line, align 4
  %10 = call i32 @T(i32 %9)
  %11 = load i32, i32* @unterminated_line, align 4
  %12 = call i32 @T(i32 %11)
  %13 = load i32, i32* @single_whitespace, align 4
  %14 = call i32 @T(i32 %13)
  %15 = load i32, i32* @multiple_whitespace, align 4
  %16 = call i32 @T(i32 %15)
  %17 = load i32, i32* @comment, align 4
  %18 = call i32 @T(i32 %17)
  %19 = load i32, i32* @whitespace_before_comment, align 4
  %20 = call i32 @T(i32 %19)
  %21 = load i32, i32* @single_quoted_comment, align 4
  %22 = call i32 @T(i32 %21)
  %23 = load i32, i32* @double_quoted_comment, align 4
  %24 = call i32 @T(i32 %23)
  %25 = load i32, i32* @comment_at_eof, align 4
  %26 = call i32 @T(i32 %25)
  %27 = load i32, i32* @single_word, align 4
  %28 = call i32 @T(i32 %27)
  %29 = load i32, i32* @single_whitespace_before_word, align 4
  %30 = call i32 @T(i32 %29)
  %31 = load i32, i32* @double_whitespace_before_word, align 4
  %32 = call i32 @T(i32 %31)
  %33 = load i32, i32* @single_whitespace_after_word, align 4
  %34 = call i32 @T(i32 %33)
  %35 = load i32, i32* @double_whitespace_after_word, align 4
  %36 = call i32 @T(i32 %35)
  %37 = load i32, i32* @comment_after_word, align 4
  %38 = call i32 @T(i32 %37)
  %39 = load i32, i32* @word_containing_hash, align 4
  %40 = call i32 @T(i32 %39)
  %41 = load i32, i32* @two_words, align 4
  %42 = call i32 @T(i32 %41)
  %43 = load i32, i32* @naked_escape, align 4
  %44 = call i32 @T(i32 %43)
  %45 = load i32, i32* @escaped_escape, align 4
  %46 = call i32 @T(i32 %45)
  %47 = load i32, i32* @escaped_whitespace, align 4
  %48 = call i32 @T(i32 %47)
  %49 = load i32, i32* @escaped_newline_before_word, align 4
  %50 = call i32 @T(i32 %49)
  %51 = load i32, i32* @escaped_newline_within_word, align 4
  %52 = call i32 @T(i32 %51)
  %53 = load i32, i32* @escaped_newline_after_word, align 4
  %54 = call i32 @T(i32 %53)
  %55 = load i32, i32* @escaped_letter, align 4
  %56 = call i32 @T(i32 %55)
  %57 = load i32, i32* @escaped_comment, align 4
  %58 = call i32 @T(i32 %57)
  %59 = load i32, i32* @escape_at_eof, align 4
  %60 = call i32 @T(i32 %59)
  %61 = load i32, i32* @naked_single_quote, align 4
  %62 = call i32 @T(i32 %61)
  %63 = load i32, i32* @naked_double_quote, align 4
  %64 = call i32 @T(i32 %63)
  %65 = load i32, i32* @empty_single_quotes, align 4
  %66 = call i32 @T(i32 %65)
  %67 = load i32, i32* @empty_double_quotes, align 4
  %68 = call i32 @T(i32 %67)
  %69 = load i32, i32* @single_quotes_within_double_quotes, align 4
  %70 = call i32 @T(i32 %69)
  %71 = load i32, i32* @double_quotes_within_single_quotes, align 4
  %72 = call i32 @T(i32 %71)
  %73 = load i32, i32* @single_quoted_whitespace, align 4
  %74 = call i32 @T(i32 %73)
  %75 = load i32, i32* @double_quoted_whitespace, align 4
  %76 = call i32 @T(i32 %75)
  %77 = load i32, i32* @single_quoted_words, align 4
  %78 = call i32 @T(i32 %77)
  %79 = load i32, i32* @double_quoted_words, align 4
  %80 = call i32 @T(i32 %79)
  %81 = load i32, i32* @single_quote_before_word, align 4
  %82 = call i32 @T(i32 %81)
  %83 = load i32, i32* @double_quote_before_word, align 4
  %84 = call i32 @T(i32 %83)
  %85 = load i32, i32* @single_quote_within_word, align 4
  %86 = call i32 @T(i32 %85)
  %87 = load i32, i32* @double_quote_within_word, align 4
  %88 = call i32 @T(i32 %87)
  %89 = load i32, i32* @single_quote_after_word, align 4
  %90 = call i32 @T(i32 %89)
  %91 = load i32, i32* @double_quote_after_word, align 4
  %92 = call i32 @T(i32 %91)
  %93 = load i32, i32* @escaped_single_quote, align 4
  %94 = call i32 @T(i32 %93)
  %95 = load i32, i32* @escaped_double_quote, align 4
  %96 = call i32 @T(i32 %95)
  %97 = load i32, i32* @escaped_whitespace_within_single_quotes, align 4
  %98 = call i32 @T(i32 %97)
  %99 = load i32, i32* @escaped_whitespace_within_double_quotes, align 4
  %100 = call i32 @T(i32 %99)
  %101 = load i32, i32* @escaped_letter_within_single_quotes, align 4
  %102 = call i32 @T(i32 %101)
  %103 = load i32, i32* @escaped_letter_within_double_quotes, align 4
  %104 = call i32 @T(i32 %103)
  %105 = load i32, i32* @escaped_escape_within_single_quotes, align 4
  %106 = call i32 @T(i32 %105)
  %107 = load i32, i32* @escaped_escape_within_double_quotes, align 4
  %108 = call i32 @T(i32 %107)
  %109 = load i32, i32* @escaped_single_quote_within_single_quotes, align 4
  %110 = call i32 @T(i32 %109)
  %111 = load i32, i32* @escaped_double_quote_within_single_quotes, align 4
  %112 = call i32 @T(i32 %111)
  %113 = load i32, i32* @escaped_single_quote_within_double_quotes, align 4
  %114 = call i32 @T(i32 %113)
  %115 = load i32, i32* @escaped_double_quote_within_double_quotes, align 4
  %116 = call i32 @T(i32 %115)
  %117 = load i32, i32* @line_continuation_within_whitespace, align 4
  %118 = call i32 @T(i32 %117)
  %119 = load i32, i32* @line_continuation_before_whitespace, align 4
  %120 = call i32 @T(i32 %119)
  %121 = load i32, i32* @line_continuation_after_whitespace, align 4
  %122 = call i32 @T(i32 %121)
  %123 = load i32, i32* @line_continuation_within_word, align 4
  %124 = call i32 @T(i32 %123)
  ret i32 0
}

declare dso_local i32 @T(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
