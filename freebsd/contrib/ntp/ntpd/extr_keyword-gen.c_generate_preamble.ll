; ModuleID = '/home/carl/AnghaBench/freebsd/contrib/ntp/ntpd/extr_keyword-gen.c_generate_preamble.c'
source_filename = "/home/carl/AnghaBench/freebsd/contrib/ntp/ntpd/extr_keyword-gen.c_generate_preamble.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@__const.generate_preamble.preamble = private unnamed_addr constant [193 x i8] c"/*\0A * ntp_keyword.h\0A * \0A * NOTE: edit this file with caution, it is generated by keyword-gen.c\0A *\09 Generated %s UTC\09  diff_ignore_line\0A *\0A */\0A#include \22ntp_scanner.h\22\0A#include \22ntp_parser.h\22\0A\0A\00", align 16
@.str = private unnamed_addr constant [18 x i8] c"%Y-%m-%d %H:%M:%S\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void ()* @generate_preamble to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @generate_preamble() #0 {
  %1 = alloca i32, align 4
  %2 = alloca [128 x i8], align 16
  %3 = alloca [193 x i8], align 16
  %4 = bitcast [193 x i8]* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %4, i8* align 16 getelementptr inbounds ([193 x i8], [193 x i8]* @__const.generate_preamble.preamble, i32 0, i32 0), i64 193, i1 false)
  %5 = call i32 @time(i32* %1)
  %6 = getelementptr inbounds [128 x i8], [128 x i8]* %2, i64 0, i64 0
  %7 = call i32 @gmtime(i32* %1)
  %8 = call i32 @strftime(i8* %6, i32 128, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 %7)
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %0
  %11 = getelementptr inbounds [128 x i8], [128 x i8]* %2, i64 0, i64 0
  store i8 0, i8* %11, align 16
  br label %12

12:                                               ; preds = %10, %0
  %13 = getelementptr inbounds [193 x i8], [193 x i8]* %3, i64 0, i64 0
  %14 = getelementptr inbounds [128 x i8], [128 x i8]* %2, i64 0, i64 0
  %15 = call i32 @printf(i8* %13, i8* %14)
  ret void
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1

declare dso_local i32 @time(i32*) #2

declare dso_local i32 @strftime(i8*, i32, i8*, i32) #2

declare dso_local i32 @gmtime(i32*) #2

declare dso_local i32 @printf(i8*, i8*) #2

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
