; ModuleID = '/home/carl/AnghaBench/freebsd/contrib/gcc/config/arm/extr_arm.c_arm_init_libfuncs.c'
source_filename = "/home/carl/AnghaBench/freebsd/contrib/gcc/config/arm/extr_arm.c_arm_init_libfuncs.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@TARGET_BPABI = common dso_local global i32 0, align 4
@add_optab = common dso_local global i32 0, align 4
@DFmode = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [13 x i8] c"__aeabi_dadd\00", align 1
@sdiv_optab = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [13 x i8] c"__aeabi_ddiv\00", align 1
@smul_optab = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"__aeabi_dmul\00", align 1
@neg_optab = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [13 x i8] c"__aeabi_dneg\00", align 1
@sub_optab = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [13 x i8] c"__aeabi_dsub\00", align 1
@eq_optab = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [15 x i8] c"__aeabi_dcmpeq\00", align 1
@ne_optab = common dso_local global i32 0, align 4
@lt_optab = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [15 x i8] c"__aeabi_dcmplt\00", align 1
@le_optab = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [15 x i8] c"__aeabi_dcmple\00", align 1
@ge_optab = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [15 x i8] c"__aeabi_dcmpge\00", align 1
@gt_optab = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [15 x i8] c"__aeabi_dcmpgt\00", align 1
@unord_optab = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [15 x i8] c"__aeabi_dcmpun\00", align 1
@SFmode = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [13 x i8] c"__aeabi_fadd\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"__aeabi_fdiv\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"__aeabi_fmul\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"__aeabi_fneg\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"__aeabi_fsub\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"__aeabi_fcmpeq\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"__aeabi_fcmplt\00", align 1
@.str.18 = private unnamed_addr constant [15 x i8] c"__aeabi_fcmple\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"__aeabi_fcmpge\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"__aeabi_fcmpgt\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"__aeabi_fcmpun\00", align 1
@sfix_optab = common dso_local global i32 0, align 4
@SImode = common dso_local global i32 0, align 4
@.str.22 = private unnamed_addr constant [13 x i8] c"__aeabi_d2iz\00", align 1
@ufix_optab = common dso_local global i32 0, align 4
@.str.23 = private unnamed_addr constant [14 x i8] c"__aeabi_d2uiz\00", align 1
@DImode = common dso_local global i32 0, align 4
@.str.24 = private unnamed_addr constant [13 x i8] c"__aeabi_d2lz\00", align 1
@.str.25 = private unnamed_addr constant [14 x i8] c"__aeabi_d2ulz\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"__aeabi_f2iz\00", align 1
@.str.27 = private unnamed_addr constant [14 x i8] c"__aeabi_f2uiz\00", align 1
@.str.28 = private unnamed_addr constant [13 x i8] c"__aeabi_f2lz\00", align 1
@.str.29 = private unnamed_addr constant [14 x i8] c"__aeabi_f2ulz\00", align 1
@trunc_optab = common dso_local global i32 0, align 4
@.str.30 = private unnamed_addr constant [12 x i8] c"__aeabi_d2f\00", align 1
@sext_optab = common dso_local global i32 0, align 4
@.str.31 = private unnamed_addr constant [12 x i8] c"__aeabi_f2d\00", align 1
@sfloat_optab = common dso_local global i32 0, align 4
@.str.32 = private unnamed_addr constant [12 x i8] c"__aeabi_i2d\00", align 1
@ufloat_optab = common dso_local global i32 0, align 4
@.str.33 = private unnamed_addr constant [13 x i8] c"__aeabi_ui2d\00", align 1
@.str.34 = private unnamed_addr constant [12 x i8] c"__aeabi_l2d\00", align 1
@.str.35 = private unnamed_addr constant [13 x i8] c"__aeabi_ul2d\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"__aeabi_i2f\00", align 1
@.str.37 = private unnamed_addr constant [13 x i8] c"__aeabi_ui2f\00", align 1
@.str.38 = private unnamed_addr constant [12 x i8] c"__aeabi_l2f\00", align 1
@.str.39 = private unnamed_addr constant [13 x i8] c"__aeabi_ul2f\00", align 1
@.str.40 = private unnamed_addr constant [13 x i8] c"__aeabi_lmul\00", align 1
@sdivmod_optab = common dso_local global i32 0, align 4
@.str.41 = private unnamed_addr constant [16 x i8] c"__aeabi_ldivmod\00", align 1
@udivmod_optab = common dso_local global i32 0, align 4
@.str.42 = private unnamed_addr constant [17 x i8] c"__aeabi_uldivmod\00", align 1
@ashl_optab = common dso_local global i32 0, align 4
@.str.43 = private unnamed_addr constant [13 x i8] c"__aeabi_llsl\00", align 1
@lshr_optab = common dso_local global i32 0, align 4
@.str.44 = private unnamed_addr constant [13 x i8] c"__aeabi_llsr\00", align 1
@ashr_optab = common dso_local global i32 0, align 4
@.str.45 = private unnamed_addr constant [13 x i8] c"__aeabi_lasr\00", align 1
@cmp_optab = common dso_local global i32 0, align 4
@.str.46 = private unnamed_addr constant [13 x i8] c"__aeabi_lcmp\00", align 1
@ucmp_optab = common dso_local global i32 0, align 4
@.str.47 = private unnamed_addr constant [14 x i8] c"__aeabi_ulcmp\00", align 1
@.str.48 = private unnamed_addr constant [16 x i8] c"__aeabi_idivmod\00", align 1
@.str.49 = private unnamed_addr constant [17 x i8] c"__aeabi_uidivmod\00", align 1
@udiv_optab = common dso_local global i32 0, align 4
@.str.50 = private unnamed_addr constant [13 x i8] c"__aeabi_idiv\00", align 1
@.str.51 = private unnamed_addr constant [14 x i8] c"__aeabi_uidiv\00", align 1
@smod_optab = common dso_local global i32 0, align 4
@umod_optab = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void ()* @arm_init_libfuncs to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @arm_init_libfuncs() #0 {
  %1 = load i32, i32* @TARGET_BPABI, align 4
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %4, label %3

3:                                                ; preds = %0
  br label %203

4:                                                ; preds = %0
  %5 = load i32, i32* @add_optab, align 4
  %6 = load i32, i32* @DFmode, align 4
  %7 = call i32 @set_optab_libfunc(i32 %5, i32 %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0))
  %8 = load i32, i32* @sdiv_optab, align 4
  %9 = load i32, i32* @DFmode, align 4
  %10 = call i32 @set_optab_libfunc(i32 %8, i32 %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0))
  %11 = load i32, i32* @smul_optab, align 4
  %12 = load i32, i32* @DFmode, align 4
  %13 = call i32 @set_optab_libfunc(i32 %11, i32 %12, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0))
  %14 = load i32, i32* @neg_optab, align 4
  %15 = load i32, i32* @DFmode, align 4
  %16 = call i32 @set_optab_libfunc(i32 %14, i32 %15, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0))
  %17 = load i32, i32* @sub_optab, align 4
  %18 = load i32, i32* @DFmode, align 4
  %19 = call i32 @set_optab_libfunc(i32 %17, i32 %18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0))
  %20 = load i32, i32* @eq_optab, align 4
  %21 = load i32, i32* @DFmode, align 4
  %22 = call i32 @set_optab_libfunc(i32 %20, i32 %21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0))
  %23 = load i32, i32* @ne_optab, align 4
  %24 = load i32, i32* @DFmode, align 4
  %25 = call i32 @set_optab_libfunc(i32 %23, i32 %24, i8* null)
  %26 = load i32, i32* @lt_optab, align 4
  %27 = load i32, i32* @DFmode, align 4
  %28 = call i32 @set_optab_libfunc(i32 %26, i32 %27, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0))
  %29 = load i32, i32* @le_optab, align 4
  %30 = load i32, i32* @DFmode, align 4
  %31 = call i32 @set_optab_libfunc(i32 %29, i32 %30, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0))
  %32 = load i32, i32* @ge_optab, align 4
  %33 = load i32, i32* @DFmode, align 4
  %34 = call i32 @set_optab_libfunc(i32 %32, i32 %33, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0))
  %35 = load i32, i32* @gt_optab, align 4
  %36 = load i32, i32* @DFmode, align 4
  %37 = call i32 @set_optab_libfunc(i32 %35, i32 %36, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0))
  %38 = load i32, i32* @unord_optab, align 4
  %39 = load i32, i32* @DFmode, align 4
  %40 = call i32 @set_optab_libfunc(i32 %38, i32 %39, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0))
  %41 = load i32, i32* @add_optab, align 4
  %42 = load i32, i32* @SFmode, align 4
  %43 = call i32 @set_optab_libfunc(i32 %41, i32 %42, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0))
  %44 = load i32, i32* @sdiv_optab, align 4
  %45 = load i32, i32* @SFmode, align 4
  %46 = call i32 @set_optab_libfunc(i32 %44, i32 %45, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0))
  %47 = load i32, i32* @smul_optab, align 4
  %48 = load i32, i32* @SFmode, align 4
  %49 = call i32 @set_optab_libfunc(i32 %47, i32 %48, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0))
  %50 = load i32, i32* @neg_optab, align 4
  %51 = load i32, i32* @SFmode, align 4
  %52 = call i32 @set_optab_libfunc(i32 %50, i32 %51, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0))
  %53 = load i32, i32* @sub_optab, align 4
  %54 = load i32, i32* @SFmode, align 4
  %55 = call i32 @set_optab_libfunc(i32 %53, i32 %54, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0))
  %56 = load i32, i32* @eq_optab, align 4
  %57 = load i32, i32* @SFmode, align 4
  %58 = call i32 @set_optab_libfunc(i32 %56, i32 %57, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i64 0, i64 0))
  %59 = load i32, i32* @ne_optab, align 4
  %60 = load i32, i32* @SFmode, align 4
  %61 = call i32 @set_optab_libfunc(i32 %59, i32 %60, i8* null)
  %62 = load i32, i32* @lt_optab, align 4
  %63 = load i32, i32* @SFmode, align 4
  %64 = call i32 @set_optab_libfunc(i32 %62, i32 %63, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0))
  %65 = load i32, i32* @le_optab, align 4
  %66 = load i32, i32* @SFmode, align 4
  %67 = call i32 @set_optab_libfunc(i32 %65, i32 %66, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.18, i64 0, i64 0))
  %68 = load i32, i32* @ge_optab, align 4
  %69 = load i32, i32* @SFmode, align 4
  %70 = call i32 @set_optab_libfunc(i32 %68, i32 %69, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0))
  %71 = load i32, i32* @gt_optab, align 4
  %72 = load i32, i32* @SFmode, align 4
  %73 = call i32 @set_optab_libfunc(i32 %71, i32 %72, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i64 0, i64 0))
  %74 = load i32, i32* @unord_optab, align 4
  %75 = load i32, i32* @SFmode, align 4
  %76 = call i32 @set_optab_libfunc(i32 %74, i32 %75, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0))
  %77 = load i32, i32* @sfix_optab, align 4
  %78 = load i32, i32* @SImode, align 4
  %79 = load i32, i32* @DFmode, align 4
  %80 = call i32 @set_conv_libfunc(i32 %77, i32 %78, i32 %79, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i64 0, i64 0))
  %81 = load i32, i32* @ufix_optab, align 4
  %82 = load i32, i32* @SImode, align 4
  %83 = load i32, i32* @DFmode, align 4
  %84 = call i32 @set_conv_libfunc(i32 %81, i32 %82, i32 %83, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23, i64 0, i64 0))
  %85 = load i32, i32* @sfix_optab, align 4
  %86 = load i32, i32* @DImode, align 4
  %87 = load i32, i32* @DFmode, align 4
  %88 = call i32 @set_conv_libfunc(i32 %85, i32 %86, i32 %87, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0))
  %89 = load i32, i32* @ufix_optab, align 4
  %90 = load i32, i32* @DImode, align 4
  %91 = load i32, i32* @DFmode, align 4
  %92 = call i32 @set_conv_libfunc(i32 %89, i32 %90, i32 %91, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i64 0, i64 0))
  %93 = load i32, i32* @sfix_optab, align 4
  %94 = load i32, i32* @SImode, align 4
  %95 = load i32, i32* @SFmode, align 4
  %96 = call i32 @set_conv_libfunc(i32 %93, i32 %94, i32 %95, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0))
  %97 = load i32, i32* @ufix_optab, align 4
  %98 = load i32, i32* @SImode, align 4
  %99 = load i32, i32* @SFmode, align 4
  %100 = call i32 @set_conv_libfunc(i32 %97, i32 %98, i32 %99, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27, i64 0, i64 0))
  %101 = load i32, i32* @sfix_optab, align 4
  %102 = load i32, i32* @DImode, align 4
  %103 = load i32, i32* @SFmode, align 4
  %104 = call i32 @set_conv_libfunc(i32 %101, i32 %102, i32 %103, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0))
  %105 = load i32, i32* @ufix_optab, align 4
  %106 = load i32, i32* @DImode, align 4
  %107 = load i32, i32* @SFmode, align 4
  %108 = call i32 @set_conv_libfunc(i32 %105, i32 %106, i32 %107, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.29, i64 0, i64 0))
  %109 = load i32, i32* @trunc_optab, align 4
  %110 = load i32, i32* @SFmode, align 4
  %111 = load i32, i32* @DFmode, align 4
  %112 = call i32 @set_conv_libfunc(i32 %109, i32 %110, i32 %111, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.30, i64 0, i64 0))
  %113 = load i32, i32* @sext_optab, align 4
  %114 = load i32, i32* @DFmode, align 4
  %115 = load i32, i32* @SFmode, align 4
  %116 = call i32 @set_conv_libfunc(i32 %113, i32 %114, i32 %115, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0))
  %117 = load i32, i32* @sfloat_optab, align 4
  %118 = load i32, i32* @DFmode, align 4
  %119 = load i32, i32* @SImode, align 4
  %120 = call i32 @set_conv_libfunc(i32 %117, i32 %118, i32 %119, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i64 0, i64 0))
  %121 = load i32, i32* @ufloat_optab, align 4
  %122 = load i32, i32* @DFmode, align 4
  %123 = load i32, i32* @SImode, align 4
  %124 = call i32 @set_conv_libfunc(i32 %121, i32 %122, i32 %123, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i64 0, i64 0))
  %125 = load i32, i32* @sfloat_optab, align 4
  %126 = load i32, i32* @DFmode, align 4
  %127 = load i32, i32* @DImode, align 4
  %128 = call i32 @set_conv_libfunc(i32 %125, i32 %126, i32 %127, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.34, i64 0, i64 0))
  %129 = load i32, i32* @ufloat_optab, align 4
  %130 = load i32, i32* @DFmode, align 4
  %131 = load i32, i32* @DImode, align 4
  %132 = call i32 @set_conv_libfunc(i32 %129, i32 %130, i32 %131, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0))
  %133 = load i32, i32* @sfloat_optab, align 4
  %134 = load i32, i32* @SFmode, align 4
  %135 = load i32, i32* @SImode, align 4
  %136 = call i32 @set_conv_libfunc(i32 %133, i32 %134, i32 %135, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i64 0, i64 0))
  %137 = load i32, i32* @ufloat_optab, align 4
  %138 = load i32, i32* @SFmode, align 4
  %139 = load i32, i32* @SImode, align 4
  %140 = call i32 @set_conv_libfunc(i32 %137, i32 %138, i32 %139, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37, i64 0, i64 0))
  %141 = load i32, i32* @sfloat_optab, align 4
  %142 = load i32, i32* @SFmode, align 4
  %143 = load i32, i32* @DImode, align 4
  %144 = call i32 @set_conv_libfunc(i32 %141, i32 %142, i32 %143, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.38, i64 0, i64 0))
  %145 = load i32, i32* @ufloat_optab, align 4
  %146 = load i32, i32* @SFmode, align 4
  %147 = load i32, i32* @DImode, align 4
  %148 = call i32 @set_conv_libfunc(i32 %145, i32 %146, i32 %147, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0))
  %149 = load i32, i32* @smul_optab, align 4
  %150 = load i32, i32* @DImode, align 4
  %151 = call i32 @set_optab_libfunc(i32 %149, i32 %150, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i64 0, i64 0))
  %152 = load i32, i32* @sdivmod_optab, align 4
  %153 = load i32, i32* @DImode, align 4
  %154 = call i32 @set_optab_libfunc(i32 %152, i32 %153, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.41, i64 0, i64 0))
  %155 = load i32, i32* @udivmod_optab, align 4
  %156 = load i32, i32* @DImode, align 4
  %157 = call i32 @set_optab_libfunc(i32 %155, i32 %156, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.42, i64 0, i64 0))
  %158 = load i32, i32* @ashl_optab, align 4
  %159 = load i32, i32* @DImode, align 4
  %160 = call i32 @set_optab_libfunc(i32 %158, i32 %159, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43, i64 0, i64 0))
  %161 = load i32, i32* @lshr_optab, align 4
  %162 = load i32, i32* @DImode, align 4
  %163 = call i32 @set_optab_libfunc(i32 %161, i32 %162, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i64 0, i64 0))
  %164 = load i32, i32* @ashr_optab, align 4
  %165 = load i32, i32* @DImode, align 4
  %166 = call i32 @set_optab_libfunc(i32 %164, i32 %165, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45, i64 0, i64 0))
  %167 = load i32, i32* @cmp_optab, align 4
  %168 = load i32, i32* @DImode, align 4
  %169 = call i32 @set_optab_libfunc(i32 %167, i32 %168, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.46, i64 0, i64 0))
  %170 = load i32, i32* @ucmp_optab, align 4
  %171 = load i32, i32* @DImode, align 4
  %172 = call i32 @set_optab_libfunc(i32 %170, i32 %171, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i64 0, i64 0))
  %173 = load i32, i32* @sdivmod_optab, align 4
  %174 = load i32, i32* @SImode, align 4
  %175 = call i32 @set_optab_libfunc(i32 %173, i32 %174, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.48, i64 0, i64 0))
  %176 = load i32, i32* @udivmod_optab, align 4
  %177 = load i32, i32* @SImode, align 4
  %178 = call i32 @set_optab_libfunc(i32 %176, i32 %177, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.49, i64 0, i64 0))
  %179 = load i32, i32* @sdiv_optab, align 4
  %180 = load i32, i32* @DImode, align 4
  %181 = call i32 @set_optab_libfunc(i32 %179, i32 %180, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.41, i64 0, i64 0))
  %182 = load i32, i32* @udiv_optab, align 4
  %183 = load i32, i32* @DImode, align 4
  %184 = call i32 @set_optab_libfunc(i32 %182, i32 %183, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.42, i64 0, i64 0))
  %185 = load i32, i32* @sdiv_optab, align 4
  %186 = load i32, i32* @SImode, align 4
  %187 = call i32 @set_optab_libfunc(i32 %185, i32 %186, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.50, i64 0, i64 0))
  %188 = load i32, i32* @udiv_optab, align 4
  %189 = load i32, i32* @SImode, align 4
  %190 = call i32 @set_optab_libfunc(i32 %188, i32 %189, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.51, i64 0, i64 0))
  %191 = load i32, i32* @smod_optab, align 4
  %192 = load i32, i32* @DImode, align 4
  %193 = call i32 @set_optab_libfunc(i32 %191, i32 %192, i8* null)
  %194 = load i32, i32* @umod_optab, align 4
  %195 = load i32, i32* @DImode, align 4
  %196 = call i32 @set_optab_libfunc(i32 %194, i32 %195, i8* null)
  %197 = load i32, i32* @smod_optab, align 4
  %198 = load i32, i32* @SImode, align 4
  %199 = call i32 @set_optab_libfunc(i32 %197, i32 %198, i8* null)
  %200 = load i32, i32* @umod_optab, align 4
  %201 = load i32, i32* @SImode, align 4
  %202 = call i32 @set_optab_libfunc(i32 %200, i32 %201, i8* null)
  br label %203

203:                                              ; preds = %4, %3
  ret void
}

declare dso_local i32 @set_optab_libfunc(i32, i32, i8*) #1

declare dso_local i32 @set_conv_libfunc(i32, i32, i32, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
