; ModuleID = '/home/carl/AnghaBench/freebsd/tools/tools/ath/athalq/extr_ar9300_ds.c_ar9300_decode_rxstatus.c'
source_filename = "/home/carl/AnghaBench/freebsd/tools/tools/ath/athalq/extr_ar9300_ds.c_ar9300_decode_rxstatus.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.if_ath_alq_payload = type { %struct.TYPE_2__, i32 }
%struct.TYPE_2__ = type { i32, i32, i32 }
%struct.ar9300_rxs = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [48 x i8] c"[%u.%06u] [%llu] RXSTATUS RxTimestamp: %u (%d)\0A\00", align 1
@last_ts = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [57 x i8] c"    RSSI %d/%d/%d / %d/%d/%d; combined: %d; rate=0x%02x\0A\00", align 1
@AR_rx_rssi_ant00 = common dso_local global i32 0, align 4
@AR_rx_rssi_ant01 = common dso_local global i32 0, align 4
@AR_rx_rssi_ant02 = common dso_local global i32 0, align 4
@AR_rx_rssi_ant10 = common dso_local global i32 0, align 4
@AR_rx_rssi_ant11 = common dso_local global i32 0, align 4
@AR_rx_rssi_ant12 = common dso_local global i32 0, align 4
@AR_rx_rssi_combined = common dso_local global i32 0, align 4
@AR_rx_rate = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [43 x i8] c"    Len: %d; more=%d, delim=%d, upload=%d\0A\00", align 1
@AR_data_len = common dso_local global i32 0, align 4
@AR_rx_more = common dso_local global i32 0, align 4
@AR_num_delim = common dso_local global i32 0, align 4
@AR_hw_upload_data = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [22 x i8] c"    RX timestamp: %u\0A\00", align 1
@.str.4 = private unnamed_addr constant [47 x i8] c"    GI: %d, 2040: %d, parallel40: %d, stbc=%d\0A\00", align 1
@AR_gi = common dso_local global i32 0, align 4
@AR_2040 = common dso_local global i32 0, align 4
@AR_parallel40 = common dso_local global i32 0, align 4
@AR_rx_stbc = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [50 x i8] c"    Not sounding: %d, ness: %d, upload_valid: %d\0A\00", align 1
@AR_rx_not_sounding = common dso_local global i32 0, align 4
@AR_rx_ness = common dso_local global i32 0, align 4
@AR_hw_upload_data_valid = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [24 x i8] c"    RX antenna: 0x%08x\0A\00", align 1
@AR_rx_antenna = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [41 x i8] c"    EVM: 0x%08x; 0x%08x; 0x%08x; 0x%08x\0A\00", align 1
@.str.8 = private unnamed_addr constant [49 x i8] c"    RX done: %d, RX frame ok: %d, CRC error: %d\0A\00", align 1
@AR_rx_done = common dso_local global i32 0, align 4
@AR_rx_frame_ok = common dso_local global i32 0, align 4
@AR_crc_err = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [51 x i8] c"    Decrypt CRC err: %d, PHY err: %d, MIC err: %d\0A\00", align 1
@AR_decrypt_crc_err = common dso_local global i32 0, align 4
@AR_phyerr = common dso_local global i32 0, align 4
@AR_michael_err = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [43 x i8] c"    Pre delim CRC err: %d, uAPSD Trig: %d\0A\00", align 1
@AR_pre_delim_crc_err = common dso_local global i32 0, align 4
@AR_apsd_trig = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [50 x i8] c"    RXKeyIdxValid: %d, KeyIdx: %d, PHY error: %d\0A\00", align 1
@AR_rx_key_idx_valid = common dso_local global i32 0, align 4
@AR_key_idx = common dso_local global i32 0, align 4
@AR_phy_err_code = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [58 x i8] c"    RX more Aggr: %d, RX aggr %d, post delim CRC err: %d\0A\00", align 1
@AR_rx_more_aggr = common dso_local global i32 0, align 4
@AR_rx_aggr = common dso_local global i32 0, align 4
@AR_post_delim_crc_err = common dso_local global i32 0, align 4
@.str.13 = private unnamed_addr constant [47 x i8] c"    hw upload data type: %d; position bit: %d\0A\00", align 1
@AR_hw_upload_data_type = common dso_local global i32 0, align 4
@AR_position_bit = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [68 x i8] c"    Hi RX chain: %d, RxFirstAggr: %d, DecryptBusy: %d, KeyMiss: %d\0A\00", align 1
@AR_hi_rx_chain = common dso_local global i32 0, align 4
@AR_rx_first_aggr = common dso_local global i32 0, align 4
@AR_decrypt_busy_err = common dso_local global i32 0, align 4
@AR_key_miss = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.if_ath_alq_payload*)* @ar9300_decode_rxstatus to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @ar9300_decode_rxstatus(%struct.if_ath_alq_payload* %0) #0 {
  %2 = alloca %struct.if_ath_alq_payload*, align 8
  %3 = alloca %struct.ar9300_rxs, align 4
  store %struct.if_ath_alq_payload* %0, %struct.if_ath_alq_payload** %2, align 8
  %4 = load %struct.if_ath_alq_payload*, %struct.if_ath_alq_payload** %2, align 8
  %5 = getelementptr inbounds %struct.if_ath_alq_payload, %struct.if_ath_alq_payload* %4, i32 0, i32 1
  %6 = call i32 @memcpy(%struct.ar9300_rxs* %3, i32* %5, i32 40)
  %7 = load %struct.if_ath_alq_payload*, %struct.if_ath_alq_payload** %2, align 8
  %8 = getelementptr inbounds %struct.if_ath_alq_payload, %struct.if_ath_alq_payload* %7, i32 0, i32 0
  %9 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %8, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = call i64 @be32toh(i32 %10)
  %12 = trunc i64 %11 to i32
  %13 = load %struct.if_ath_alq_payload*, %struct.if_ath_alq_payload** %2, align 8
  %14 = getelementptr inbounds %struct.if_ath_alq_payload, %struct.if_ath_alq_payload* %13, i32 0, i32 0
  %15 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %14, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = call i64 @be32toh(i32 %16)
  %18 = trunc i64 %17 to i32
  %19 = load %struct.if_ath_alq_payload*, %struct.if_ath_alq_payload** %2, align 8
  %20 = getelementptr inbounds %struct.if_ath_alq_payload, %struct.if_ath_alq_payload* %19, i32 0, i32 0
  %21 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %20, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = call i64 @be64toh(i32 %22)
  %24 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = load i32, i32* @last_ts, align 4
  %29 = sub nsw i32 %27, %28
  %30 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str, i64 0, i64 0), i32 %12, i32 %18, i64 %23, i32 %25, i32 %29)
  %31 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 8
  %32 = load i32, i32* %31, align 4
  %33 = load i32, i32* @AR_rx_rssi_ant00, align 4
  %34 = call i32 @MS(i32 %32, i32 %33)
  %35 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 8
  %36 = load i32, i32* %35, align 4
  %37 = load i32, i32* @AR_rx_rssi_ant01, align 4
  %38 = call i32 @MS(i32 %36, i32 %37)
  %39 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 8
  %40 = load i32, i32* %39, align 4
  %41 = load i32, i32* @AR_rx_rssi_ant02, align 4
  %42 = call i32 @MS(i32 %40, i32 %41)
  %43 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 9
  %44 = load i32, i32* %43, align 4
  %45 = load i32, i32* @AR_rx_rssi_ant10, align 4
  %46 = call i32 @MS(i32 %44, i32 %45)
  %47 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 9
  %48 = load i32, i32* %47, align 4
  %49 = load i32, i32* @AR_rx_rssi_ant11, align 4
  %50 = call i32 @MS(i32 %48, i32 %49)
  %51 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 9
  %52 = load i32, i32* %51, align 4
  %53 = load i32, i32* @AR_rx_rssi_ant12, align 4
  %54 = call i32 @MS(i32 %52, i32 %53)
  %55 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 9
  %56 = load i32, i32* %55, align 4
  %57 = load i32, i32* @AR_rx_rssi_combined, align 4
  %58 = call i32 @MS(i32 %56, i32 %57)
  %59 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 8
  %60 = load i32, i32* %59, align 4
  %61 = load i32, i32* @AR_rx_rate, align 4
  %62 = call i32 @MS(i32 %60, i32 %61)
  %63 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.1, i64 0, i64 0), i32 %34, i32 %38, i32 %42, i32 %46, i32 %50, i32 %54, i32 %58, i32 %62)
  %64 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 7
  %65 = load i32, i32* %64, align 4
  %66 = load i32, i32* @AR_data_len, align 4
  %67 = call i32 @MS(i32 %65, i32 %66)
  %68 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 7
  %69 = load i32, i32* %68, align 4
  %70 = load i32, i32* @AR_rx_more, align 4
  %71 = call i32 @MF(i32 %69, i32 %70)
  %72 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 7
  %73 = load i32, i32* %72, align 4
  %74 = load i32, i32* @AR_num_delim, align 4
  %75 = call i32 @MS(i32 %73, i32 %74)
  %76 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 7
  %77 = load i32, i32* %76, align 4
  %78 = load i32, i32* @AR_hw_upload_data, align 4
  %79 = call i32 @MS(i32 %77, i32 %78)
  %80 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 %67, i32 %71, i32 %75, i32 %79)
  %81 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i32 %82)
  %84 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* @last_ts, align 4
  %86 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 6
  %87 = load i32, i32* %86, align 4
  %88 = load i32, i32* @AR_gi, align 4
  %89 = call i32 @MF(i32 %87, i32 %88)
  %90 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 6
  %91 = load i32, i32* %90, align 4
  %92 = load i32, i32* @AR_2040, align 4
  %93 = call i32 @MF(i32 %91, i32 %92)
  %94 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 6
  %95 = load i32, i32* %94, align 4
  %96 = load i32, i32* @AR_parallel40, align 4
  %97 = call i32 @MF(i32 %95, i32 %96)
  %98 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 6
  %99 = load i32, i32* %98, align 4
  %100 = load i32, i32* @AR_rx_stbc, align 4
  %101 = call i32 @MF(i32 %99, i32 %100)
  %102 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i64 0, i64 0), i32 %89, i32 %93, i32 %97, i32 %101)
  %103 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 6
  %104 = load i32, i32* %103, align 4
  %105 = load i32, i32* @AR_rx_not_sounding, align 4
  %106 = call i32 @MF(i32 %104, i32 %105)
  %107 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 6
  %108 = load i32, i32* %107, align 4
  %109 = load i32, i32* @AR_rx_ness, align 4
  %110 = call i32 @MS(i32 %108, i32 %109)
  %111 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 6
  %112 = load i32, i32* %111, align 4
  %113 = load i32, i32* @AR_hw_upload_data_valid, align 4
  %114 = call i32 @MS(i32 %112, i32 %113)
  %115 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0), i32 %106, i32 %110, i32 %114)
  %116 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 6
  %117 = load i32, i32* %116, align 4
  %118 = load i32, i32* @AR_rx_antenna, align 4
  %119 = call i32 @MS(i32 %117, i32 %118)
  %120 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i32 %119)
  %121 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 2
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 3
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 4
  %128 = load i32, i32* %127, align 4
  %129 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.7, i64 0, i64 0), i32 %122, i32 %124, i32 %126, i32 %128)
  %130 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %131 = load i32, i32* %130, align 4
  %132 = load i32, i32* @AR_rx_done, align 4
  %133 = call i32 @MF(i32 %131, i32 %132)
  %134 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %135 = load i32, i32* %134, align 4
  %136 = load i32, i32* @AR_rx_frame_ok, align 4
  %137 = call i32 @MF(i32 %135, i32 %136)
  %138 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %139 = load i32, i32* %138, align 4
  %140 = load i32, i32* @AR_crc_err, align 4
  %141 = call i32 @MF(i32 %139, i32 %140)
  %142 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.8, i64 0, i64 0), i32 %133, i32 %137, i32 %141)
  %143 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %144 = load i32, i32* %143, align 4
  %145 = load i32, i32* @AR_decrypt_crc_err, align 4
  %146 = call i32 @MF(i32 %144, i32 %145)
  %147 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %148 = load i32, i32* %147, align 4
  %149 = load i32, i32* @AR_phyerr, align 4
  %150 = call i32 @MF(i32 %148, i32 %149)
  %151 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %152 = load i32, i32* %151, align 4
  %153 = load i32, i32* @AR_michael_err, align 4
  %154 = call i32 @MF(i32 %152, i32 %153)
  %155 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.9, i64 0, i64 0), i32 %146, i32 %150, i32 %154)
  %156 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %157 = load i32, i32* %156, align 4
  %158 = load i32, i32* @AR_pre_delim_crc_err, align 4
  %159 = call i32 @MF(i32 %157, i32 %158)
  %160 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %161 = load i32, i32* %160, align 4
  %162 = load i32, i32* @AR_apsd_trig, align 4
  %163 = call i32 @MF(i32 %161, i32 %162)
  %164 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10, i64 0, i64 0), i32 %159, i32 %163)
  %165 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %166 = load i32, i32* %165, align 4
  %167 = load i32, i32* @AR_rx_key_idx_valid, align 4
  %168 = call i32 @MF(i32 %166, i32 %167)
  %169 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %170 = load i32, i32* %169, align 4
  %171 = load i32, i32* @AR_key_idx, align 4
  %172 = call i32 @MS(i32 %170, i32 %171)
  %173 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %174 = load i32, i32* %173, align 4
  %175 = load i32, i32* @AR_phy_err_code, align 4
  %176 = call i32 @MS(i32 %174, i32 %175)
  %177 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.11, i64 0, i64 0), i32 %168, i32 %172, i32 %176)
  %178 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %179 = load i32, i32* %178, align 4
  %180 = load i32, i32* @AR_rx_more_aggr, align 4
  %181 = call i32 @MF(i32 %179, i32 %180)
  %182 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %183 = load i32, i32* %182, align 4
  %184 = load i32, i32* @AR_rx_aggr, align 4
  %185 = call i32 @MF(i32 %183, i32 %184)
  %186 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %187 = load i32, i32* %186, align 4
  %188 = load i32, i32* @AR_post_delim_crc_err, align 4
  %189 = call i32 @MF(i32 %187, i32 %188)
  %190 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.12, i64 0, i64 0), i32 %181, i32 %185, i32 %189)
  %191 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %192 = load i32, i32* %191, align 4
  %193 = load i32, i32* @AR_hw_upload_data_type, align 4
  %194 = call i32 @MS(i32 %192, i32 %193)
  %195 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %196 = load i32, i32* %195, align 4
  %197 = load i32, i32* @AR_position_bit, align 4
  %198 = call i32 @MF(i32 %196, i32 %197)
  %199 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.13, i64 0, i64 0), i32 %194, i32 %198)
  %200 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %201 = load i32, i32* %200, align 4
  %202 = load i32, i32* @AR_hi_rx_chain, align 4
  %203 = call i32 @MF(i32 %201, i32 %202)
  %204 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %205 = load i32, i32* %204, align 4
  %206 = load i32, i32* @AR_rx_first_aggr, align 4
  %207 = call i32 @MF(i32 %205, i32 %206)
  %208 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %209 = load i32, i32* %208, align 4
  %210 = load i32, i32* @AR_decrypt_busy_err, align 4
  %211 = call i32 @MF(i32 %209, i32 %210)
  %212 = getelementptr inbounds %struct.ar9300_rxs, %struct.ar9300_rxs* %3, i32 0, i32 5
  %213 = load i32, i32* %212, align 4
  %214 = load i32, i32* @AR_key_miss, align 4
  %215 = call i32 @MF(i32 %213, i32 %214)
  %216 = call i32 (i8*, i32, ...) @printf(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.14, i64 0, i64 0), i32 %203, i32 %207, i32 %211, i32 %215)
  ret void
}

declare dso_local i32 @memcpy(%struct.ar9300_rxs*, i32*, i32) #1

declare dso_local i32 @printf(i8*, i32, ...) #1

declare dso_local i64 @be32toh(i32) #1

declare dso_local i64 @be64toh(i32) #1

declare dso_local i32 @MS(i32, i32) #1

declare dso_local i32 @MF(i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
