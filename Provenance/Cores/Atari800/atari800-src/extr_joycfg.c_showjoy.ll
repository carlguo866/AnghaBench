; ModuleID = '/home/carl/AnghaBench/Provenance/Cores/Atari800/atari800-src/extr_joycfg.c_showjoy.c'
source_filename = "/home/carl/AnghaBench/Provenance/Cores/Atari800/atari800-src/extr_joycfg.c_showjoy.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@BACKGROUND = common dso_local global i64 0, align 8
@MENUITEM = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [10 x i8] c"Keyset %i\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"\\ | /\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"-   -\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"/ | \\\00", align 1
@MENUHEADER = common dso_local global i64 0, align 8
@pressed = common dso_local global i64* null, align 8
@keysets = common dso_local global i64** null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @showjoy(i32 %0, i32 %1, i32 %2) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %7 = load i64, i64* @BACKGROUND, align 8
  %8 = load i64, i64* @MENUITEM, align 8
  %9 = add nsw i64 %7, %8
  %10 = call i32 @textattr(i64 %9)
  %11 = load i32, i32* %4, align 4
  %12 = load i32, i32* %5, align 4
  %13 = call i32 @gotoxy(i32 %11, i32 %12)
  %14 = load i32, i32* %6, align 4
  %15 = call i32 @cprintf(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i32 %14)
  %16 = load i32, i32* %4, align 4
  %17 = add nsw i32 %16, 1
  %18 = load i32, i32* %5, align 4
  %19 = add nsw i32 %18, 2
  %20 = call i32 @gotoxy(i32 %17, i32 %19)
  %21 = call i32 @cputs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0))
  %22 = load i32, i32* %4, align 4
  %23 = add nsw i32 %22, 1
  %24 = load i32, i32* %5, align 4
  %25 = add nsw i32 %24, 3
  %26 = call i32 @gotoxy(i32 %23, i32 %25)
  %27 = call i32 @cputs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0))
  %28 = load i32, i32* %4, align 4
  %29 = add nsw i32 %28, 1
  %30 = load i32, i32* %5, align 4
  %31 = add nsw i32 %30, 4
  %32 = call i32 @gotoxy(i32 %29, i32 %31)
  %33 = call i32 @cputs(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
  %34 = load i64, i64* @BACKGROUND, align 8
  %35 = load i64, i64* @MENUHEADER, align 8
  %36 = add nsw i64 %34, %35
  %37 = call i32 @textattr(i64 %36)
  %38 = load i32, i32* %4, align 4
  %39 = add nsw i32 %38, 3
  %40 = load i32, i32* %5, align 4
  %41 = add nsw i32 %40, 3
  %42 = call i32 @gotoxy(i32 %39, i32 %41)
  %43 = load i64*, i64** @pressed, align 8
  %44 = load i64**, i64*** @keysets, align 8
  %45 = load i32, i32* %6, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i64*, i64** %44, i64 %46
  %48 = load i64*, i64** %47, align 8
  %49 = getelementptr inbounds i64, i64* %48, i64 0
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i64, i64* %43, i64 %50
  %52 = load i64, i64* %51, align 8
  %53 = icmp ne i64 %52, 0
  %54 = zext i1 %53 to i64
  %55 = select i1 %53, i32 64, i32 32
  %56 = trunc i32 %55 to i8
  %57 = call i32 @putch(i8 signext %56)
  %58 = load i32, i32* %4, align 4
  %59 = load i32, i32* %5, align 4
  %60 = add nsw i32 %59, 5
  %61 = call i32 @gotoxy(i32 %58, i32 %60)
  %62 = load i64*, i64** @pressed, align 8
  %63 = load i64**, i64*** @keysets, align 8
  %64 = load i32, i32* %6, align 4
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i64*, i64** %63, i64 %65
  %67 = load i64*, i64** %66, align 8
  %68 = getelementptr inbounds i64, i64* %67, i64 1
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds i64, i64* %62, i64 %69
  %71 = load i64, i64* %70, align 8
  %72 = icmp ne i64 %71, 0
  %73 = zext i1 %72 to i64
  %74 = select i1 %72, i32 64, i32 32
  %75 = trunc i32 %74 to i8
  %76 = call i32 @putch(i8 signext %75)
  %77 = load i32, i32* %4, align 4
  %78 = add nsw i32 %77, 3
  %79 = load i32, i32* %5, align 4
  %80 = add nsw i32 %79, 5
  %81 = call i32 @gotoxy(i32 %78, i32 %80)
  %82 = load i64*, i64** @pressed, align 8
  %83 = load i64**, i64*** @keysets, align 8
  %84 = load i32, i32* %6, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i64*, i64** %83, i64 %85
  %87 = load i64*, i64** %86, align 8
  %88 = getelementptr inbounds i64, i64* %87, i64 2
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds i64, i64* %82, i64 %89
  %91 = load i64, i64* %90, align 8
  %92 = icmp ne i64 %91, 0
  %93 = zext i1 %92 to i64
  %94 = select i1 %92, i32 64, i32 32
  %95 = trunc i32 %94 to i8
  %96 = call i32 @putch(i8 signext %95)
  %97 = load i32, i32* %4, align 4
  %98 = add nsw i32 %97, 6
  %99 = load i32, i32* %5, align 4
  %100 = add nsw i32 %99, 5
  %101 = call i32 @gotoxy(i32 %98, i32 %100)
  %102 = load i64*, i64** @pressed, align 8
  %103 = load i64**, i64*** @keysets, align 8
  %104 = load i32, i32* %6, align 4
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i64*, i64** %103, i64 %105
  %107 = load i64*, i64** %106, align 8
  %108 = getelementptr inbounds i64, i64* %107, i64 3
  %109 = load i64, i64* %108, align 8
  %110 = getelementptr inbounds i64, i64* %102, i64 %109
  %111 = load i64, i64* %110, align 8
  %112 = icmp ne i64 %111, 0
  %113 = zext i1 %112 to i64
  %114 = select i1 %112, i32 64, i32 32
  %115 = trunc i32 %114 to i8
  %116 = call i32 @putch(i8 signext %115)
  %117 = load i32, i32* %4, align 4
  %118 = load i32, i32* %5, align 4
  %119 = add nsw i32 %118, 3
  %120 = call i32 @gotoxy(i32 %117, i32 %119)
  %121 = load i64*, i64** @pressed, align 8
  %122 = load i64**, i64*** @keysets, align 8
  %123 = load i32, i32* %6, align 4
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i64*, i64** %122, i64 %124
  %126 = load i64*, i64** %125, align 8
  %127 = getelementptr inbounds i64, i64* %126, i64 4
  %128 = load i64, i64* %127, align 8
  %129 = getelementptr inbounds i64, i64* %121, i64 %128
  %130 = load i64, i64* %129, align 8
  %131 = icmp ne i64 %130, 0
  %132 = zext i1 %131 to i64
  %133 = select i1 %131, i32 64, i32 32
  %134 = trunc i32 %133 to i8
  %135 = call i32 @putch(i8 signext %134)
  %136 = load i32, i32* %4, align 4
  %137 = add nsw i32 %136, 6
  %138 = load i32, i32* %5, align 4
  %139 = add nsw i32 %138, 3
  %140 = call i32 @gotoxy(i32 %137, i32 %139)
  %141 = load i64*, i64** @pressed, align 8
  %142 = load i64**, i64*** @keysets, align 8
  %143 = load i32, i32* %6, align 4
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds i64*, i64** %142, i64 %144
  %146 = load i64*, i64** %145, align 8
  %147 = getelementptr inbounds i64, i64* %146, i64 5
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds i64, i64* %141, i64 %148
  %150 = load i64, i64* %149, align 8
  %151 = icmp ne i64 %150, 0
  %152 = zext i1 %151 to i64
  %153 = select i1 %151, i32 64, i32 32
  %154 = trunc i32 %153 to i8
  %155 = call i32 @putch(i8 signext %154)
  %156 = load i32, i32* %4, align 4
  %157 = load i32, i32* %5, align 4
  %158 = add nsw i32 %157, 1
  %159 = call i32 @gotoxy(i32 %156, i32 %158)
  %160 = load i64*, i64** @pressed, align 8
  %161 = load i64**, i64*** @keysets, align 8
  %162 = load i32, i32* %6, align 4
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds i64*, i64** %161, i64 %163
  %165 = load i64*, i64** %164, align 8
  %166 = getelementptr inbounds i64, i64* %165, i64 6
  %167 = load i64, i64* %166, align 8
  %168 = getelementptr inbounds i64, i64* %160, i64 %167
  %169 = load i64, i64* %168, align 8
  %170 = icmp ne i64 %169, 0
  %171 = zext i1 %170 to i64
  %172 = select i1 %170, i32 64, i32 32
  %173 = trunc i32 %172 to i8
  %174 = call i32 @putch(i8 signext %173)
  %175 = load i32, i32* %4, align 4
  %176 = add nsw i32 %175, 3
  %177 = load i32, i32* %5, align 4
  %178 = add nsw i32 %177, 1
  %179 = call i32 @gotoxy(i32 %176, i32 %178)
  %180 = load i64*, i64** @pressed, align 8
  %181 = load i64**, i64*** @keysets, align 8
  %182 = load i32, i32* %6, align 4
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i64*, i64** %181, i64 %183
  %185 = load i64*, i64** %184, align 8
  %186 = getelementptr inbounds i64, i64* %185, i64 7
  %187 = load i64, i64* %186, align 8
  %188 = getelementptr inbounds i64, i64* %180, i64 %187
  %189 = load i64, i64* %188, align 8
  %190 = icmp ne i64 %189, 0
  %191 = zext i1 %190 to i64
  %192 = select i1 %190, i32 64, i32 32
  %193 = trunc i32 %192 to i8
  %194 = call i32 @putch(i8 signext %193)
  %195 = load i32, i32* %4, align 4
  %196 = add nsw i32 %195, 6
  %197 = load i32, i32* %5, align 4
  %198 = add nsw i32 %197, 1
  %199 = call i32 @gotoxy(i32 %196, i32 %198)
  %200 = load i64*, i64** @pressed, align 8
  %201 = load i64**, i64*** @keysets, align 8
  %202 = load i32, i32* %6, align 4
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i64*, i64** %201, i64 %203
  %205 = load i64*, i64** %204, align 8
  %206 = getelementptr inbounds i64, i64* %205, i64 8
  %207 = load i64, i64* %206, align 8
  %208 = getelementptr inbounds i64, i64* %200, i64 %207
  %209 = load i64, i64* %208, align 8
  %210 = icmp ne i64 %209, 0
  %211 = zext i1 %210 to i64
  %212 = select i1 %210, i32 64, i32 32
  %213 = trunc i32 %212 to i8
  %214 = call i32 @putch(i8 signext %213)
  ret void
}

declare dso_local i32 @textattr(i64) #1

declare dso_local i32 @gotoxy(i32, i32) #1

declare dso_local i32 @cprintf(i8*, i32) #1

declare dso_local i32 @cputs(i8*) #1

declare dso_local i32 @putch(i8 signext) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
