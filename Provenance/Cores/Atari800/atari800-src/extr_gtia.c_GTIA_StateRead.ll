; ModuleID = '/home/carl/AnghaBench/Provenance/Cores/Atari800/atari800-src/extr_gtia.c_GTIA_StateRead.c'
source_filename = "/home/carl/AnghaBench/Provenance/Cores/Atari800/atari800-src/extr_gtia.c_GTIA_StateRead.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@GTIA_HPOSP0 = common dso_local global i32 0, align 4
@GTIA_HPOSP1 = common dso_local global i32 0, align 4
@GTIA_HPOSP2 = common dso_local global i32 0, align 4
@GTIA_HPOSP3 = common dso_local global i32 0, align 4
@GTIA_HPOSM0 = common dso_local global i32 0, align 4
@GTIA_HPOSM1 = common dso_local global i32 0, align 4
@GTIA_HPOSM2 = common dso_local global i32 0, align 4
@GTIA_HPOSM3 = common dso_local global i32 0, align 4
@PF0PM = common dso_local global i32 0, align 4
@PF1PM = common dso_local global i32 0, align 4
@PF2PM = common dso_local global i32 0, align 4
@PF3PM = common dso_local global i32 0, align 4
@GTIA_M0PL = common dso_local global i32 0, align 4
@GTIA_M1PL = common dso_local global i32 0, align 4
@GTIA_M2PL = common dso_local global i32 0, align 4
@GTIA_M3PL = common dso_local global i32 0, align 4
@GTIA_P0PL = common dso_local global i32 0, align 4
@GTIA_P1PL = common dso_local global i32 0, align 4
@GTIA_P2PL = common dso_local global i32 0, align 4
@GTIA_P3PL = common dso_local global i32 0, align 4
@GTIA_SIZEP0 = common dso_local global i32 0, align 4
@GTIA_SIZEP1 = common dso_local global i32 0, align 4
@GTIA_SIZEP2 = common dso_local global i32 0, align 4
@GTIA_SIZEP3 = common dso_local global i32 0, align 4
@GTIA_SIZEM = common dso_local global i32 0, align 4
@GTIA_GRAFP0 = common dso_local global i32 0, align 4
@GTIA_GRAFP1 = common dso_local global i32 0, align 4
@GTIA_GRAFP2 = common dso_local global i32 0, align 4
@GTIA_GRAFP3 = common dso_local global i32 0, align 4
@GTIA_GRAFM = common dso_local global i32 0, align 4
@GTIA_COLPM0 = common dso_local global i32 0, align 4
@GTIA_COLPM1 = common dso_local global i32 0, align 4
@GTIA_COLPM2 = common dso_local global i32 0, align 4
@GTIA_COLPM3 = common dso_local global i32 0, align 4
@GTIA_COLPF0 = common dso_local global i32 0, align 4
@GTIA_COLPF1 = common dso_local global i32 0, align 4
@GTIA_COLPF2 = common dso_local global i32 0, align 4
@GTIA_COLPF3 = common dso_local global i32 0, align 4
@GTIA_COLBK = common dso_local global i32 0, align 4
@GTIA_PRIOR = common dso_local global i32 0, align 4
@GTIA_VDELAY = common dso_local global i32 0, align 4
@GTIA_GRACTL = common dso_local global i32 0, align 4
@consol_mask = common dso_local global i32 0, align 4
@GTIA_speaker = common dso_local global i32 0, align 4
@GTIA_TRIG_latch = common dso_local global i32* null, align 8
@GTIA_OFFSET_HPOSP0 = common dso_local global i32 0, align 4
@GTIA_OFFSET_HPOSP1 = common dso_local global i32 0, align 4
@GTIA_OFFSET_HPOSP2 = common dso_local global i32 0, align 4
@GTIA_OFFSET_HPOSP3 = common dso_local global i32 0, align 4
@GTIA_OFFSET_HPOSM0 = common dso_local global i32 0, align 4
@GTIA_OFFSET_HPOSM1 = common dso_local global i32 0, align 4
@GTIA_OFFSET_HPOSM2 = common dso_local global i32 0, align 4
@GTIA_OFFSET_HPOSM3 = common dso_local global i32 0, align 4
@GTIA_OFFSET_SIZEP0 = common dso_local global i32 0, align 4
@GTIA_OFFSET_SIZEP1 = common dso_local global i32 0, align 4
@GTIA_OFFSET_SIZEP2 = common dso_local global i32 0, align 4
@GTIA_OFFSET_SIZEP3 = common dso_local global i32 0, align 4
@GTIA_OFFSET_SIZEM = common dso_local global i32 0, align 4
@GTIA_OFFSET_GRAFP0 = common dso_local global i32 0, align 4
@GTIA_OFFSET_GRAFP1 = common dso_local global i32 0, align 4
@GTIA_OFFSET_GRAFP2 = common dso_local global i32 0, align 4
@GTIA_OFFSET_GRAFP3 = common dso_local global i32 0, align 4
@GTIA_OFFSET_GRAFM = common dso_local global i32 0, align 4
@GTIA_OFFSET_COLPM0 = common dso_local global i32 0, align 4
@GTIA_OFFSET_COLPM1 = common dso_local global i32 0, align 4
@GTIA_OFFSET_COLPM2 = common dso_local global i32 0, align 4
@GTIA_OFFSET_COLPM3 = common dso_local global i32 0, align 4
@GTIA_OFFSET_COLPF0 = common dso_local global i32 0, align 4
@GTIA_OFFSET_COLPF1 = common dso_local global i32 0, align 4
@GTIA_OFFSET_COLPF2 = common dso_local global i32 0, align 4
@GTIA_OFFSET_COLPF3 = common dso_local global i32 0, align 4
@GTIA_OFFSET_COLBK = common dso_local global i32 0, align 4
@GTIA_OFFSET_PRIOR = common dso_local global i32 0, align 4
@GTIA_OFFSET_GRACTL = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @GTIA_StateRead(i32 %0) #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  %4 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_HPOSP0, i32 1)
  %5 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_HPOSP1, i32 1)
  %6 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_HPOSP2, i32 1)
  %7 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_HPOSP3, i32 1)
  %8 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_HPOSM0, i32 1)
  %9 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_HPOSM1, i32 1)
  %10 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_HPOSM2, i32 1)
  %11 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_HPOSM3, i32 1)
  %12 = call i32 @StateSav_ReadUBYTE(i32* @PF0PM, i32 1)
  %13 = call i32 @StateSav_ReadUBYTE(i32* @PF1PM, i32 1)
  %14 = call i32 @StateSav_ReadUBYTE(i32* @PF2PM, i32 1)
  %15 = call i32 @StateSav_ReadUBYTE(i32* @PF3PM, i32 1)
  %16 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_M0PL, i32 1)
  %17 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_M1PL, i32 1)
  %18 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_M2PL, i32 1)
  %19 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_M3PL, i32 1)
  %20 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_P0PL, i32 1)
  %21 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_P1PL, i32 1)
  %22 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_P2PL, i32 1)
  %23 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_P3PL, i32 1)
  %24 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_SIZEP0, i32 1)
  %25 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_SIZEP1, i32 1)
  %26 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_SIZEP2, i32 1)
  %27 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_SIZEP3, i32 1)
  %28 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_SIZEM, i32 1)
  %29 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_GRAFP0, i32 1)
  %30 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_GRAFP1, i32 1)
  %31 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_GRAFP2, i32 1)
  %32 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_GRAFP3, i32 1)
  %33 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_GRAFM, i32 1)
  %34 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_COLPM0, i32 1)
  %35 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_COLPM1, i32 1)
  %36 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_COLPM2, i32 1)
  %37 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_COLPM3, i32 1)
  %38 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_COLPF0, i32 1)
  %39 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_COLPF1, i32 1)
  %40 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_COLPF2, i32 1)
  %41 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_COLPF3, i32 1)
  %42 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_COLBK, i32 1)
  %43 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_PRIOR, i32 1)
  %44 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_VDELAY, i32 1)
  %45 = call i32 @StateSav_ReadUBYTE(i32* @GTIA_GRACTL, i32 1)
  %46 = call i32 @StateSav_ReadUBYTE(i32* @consol_mask, i32 1)
  %47 = call i32 @StateSav_ReadINT(i32* @GTIA_speaker, i32 1)
  %48 = call i32 @StateSav_ReadINT(i32* %3, i32 1)
  %49 = load i32, i32* %2, align 4
  %50 = icmp sge i32 %49, 7
  br i1 %50, label %51, label %54

51:                                               ; preds = %1
  %52 = load i32*, i32** @GTIA_TRIG_latch, align 8
  %53 = call i32 @StateSav_ReadUBYTE(i32* %52, i32 4)
  br label %54

54:                                               ; preds = %51, %1
  %55 = load i32, i32* @GTIA_OFFSET_HPOSP0, align 4
  %56 = load i32, i32* @GTIA_HPOSP0, align 4
  %57 = call i32 @GTIA_PutByte(i32 %55, i32 %56)
  %58 = load i32, i32* @GTIA_OFFSET_HPOSP1, align 4
  %59 = load i32, i32* @GTIA_HPOSP1, align 4
  %60 = call i32 @GTIA_PutByte(i32 %58, i32 %59)
  %61 = load i32, i32* @GTIA_OFFSET_HPOSP2, align 4
  %62 = load i32, i32* @GTIA_HPOSP2, align 4
  %63 = call i32 @GTIA_PutByte(i32 %61, i32 %62)
  %64 = load i32, i32* @GTIA_OFFSET_HPOSP3, align 4
  %65 = load i32, i32* @GTIA_HPOSP3, align 4
  %66 = call i32 @GTIA_PutByte(i32 %64, i32 %65)
  %67 = load i32, i32* @GTIA_OFFSET_HPOSM0, align 4
  %68 = load i32, i32* @GTIA_HPOSM0, align 4
  %69 = call i32 @GTIA_PutByte(i32 %67, i32 %68)
  %70 = load i32, i32* @GTIA_OFFSET_HPOSM1, align 4
  %71 = load i32, i32* @GTIA_HPOSM1, align 4
  %72 = call i32 @GTIA_PutByte(i32 %70, i32 %71)
  %73 = load i32, i32* @GTIA_OFFSET_HPOSM2, align 4
  %74 = load i32, i32* @GTIA_HPOSM2, align 4
  %75 = call i32 @GTIA_PutByte(i32 %73, i32 %74)
  %76 = load i32, i32* @GTIA_OFFSET_HPOSM3, align 4
  %77 = load i32, i32* @GTIA_HPOSM3, align 4
  %78 = call i32 @GTIA_PutByte(i32 %76, i32 %77)
  %79 = load i32, i32* @GTIA_OFFSET_SIZEP0, align 4
  %80 = load i32, i32* @GTIA_SIZEP0, align 4
  %81 = call i32 @GTIA_PutByte(i32 %79, i32 %80)
  %82 = load i32, i32* @GTIA_OFFSET_SIZEP1, align 4
  %83 = load i32, i32* @GTIA_SIZEP1, align 4
  %84 = call i32 @GTIA_PutByte(i32 %82, i32 %83)
  %85 = load i32, i32* @GTIA_OFFSET_SIZEP2, align 4
  %86 = load i32, i32* @GTIA_SIZEP2, align 4
  %87 = call i32 @GTIA_PutByte(i32 %85, i32 %86)
  %88 = load i32, i32* @GTIA_OFFSET_SIZEP3, align 4
  %89 = load i32, i32* @GTIA_SIZEP3, align 4
  %90 = call i32 @GTIA_PutByte(i32 %88, i32 %89)
  %91 = load i32, i32* @GTIA_OFFSET_SIZEM, align 4
  %92 = load i32, i32* @GTIA_SIZEM, align 4
  %93 = call i32 @GTIA_PutByte(i32 %91, i32 %92)
  %94 = load i32, i32* @GTIA_OFFSET_GRAFP0, align 4
  %95 = load i32, i32* @GTIA_GRAFP0, align 4
  %96 = call i32 @GTIA_PutByte(i32 %94, i32 %95)
  %97 = load i32, i32* @GTIA_OFFSET_GRAFP1, align 4
  %98 = load i32, i32* @GTIA_GRAFP1, align 4
  %99 = call i32 @GTIA_PutByte(i32 %97, i32 %98)
  %100 = load i32, i32* @GTIA_OFFSET_GRAFP2, align 4
  %101 = load i32, i32* @GTIA_GRAFP2, align 4
  %102 = call i32 @GTIA_PutByte(i32 %100, i32 %101)
  %103 = load i32, i32* @GTIA_OFFSET_GRAFP3, align 4
  %104 = load i32, i32* @GTIA_GRAFP3, align 4
  %105 = call i32 @GTIA_PutByte(i32 %103, i32 %104)
  %106 = load i32, i32* @GTIA_OFFSET_GRAFM, align 4
  %107 = load i32, i32* @GTIA_GRAFM, align 4
  %108 = call i32 @GTIA_PutByte(i32 %106, i32 %107)
  %109 = load i32, i32* @GTIA_OFFSET_COLPM0, align 4
  %110 = load i32, i32* @GTIA_COLPM0, align 4
  %111 = call i32 @GTIA_PutByte(i32 %109, i32 %110)
  %112 = load i32, i32* @GTIA_OFFSET_COLPM1, align 4
  %113 = load i32, i32* @GTIA_COLPM1, align 4
  %114 = call i32 @GTIA_PutByte(i32 %112, i32 %113)
  %115 = load i32, i32* @GTIA_OFFSET_COLPM2, align 4
  %116 = load i32, i32* @GTIA_COLPM2, align 4
  %117 = call i32 @GTIA_PutByte(i32 %115, i32 %116)
  %118 = load i32, i32* @GTIA_OFFSET_COLPM3, align 4
  %119 = load i32, i32* @GTIA_COLPM3, align 4
  %120 = call i32 @GTIA_PutByte(i32 %118, i32 %119)
  %121 = load i32, i32* @GTIA_OFFSET_COLPF0, align 4
  %122 = load i32, i32* @GTIA_COLPF0, align 4
  %123 = call i32 @GTIA_PutByte(i32 %121, i32 %122)
  %124 = load i32, i32* @GTIA_OFFSET_COLPF1, align 4
  %125 = load i32, i32* @GTIA_COLPF1, align 4
  %126 = call i32 @GTIA_PutByte(i32 %124, i32 %125)
  %127 = load i32, i32* @GTIA_OFFSET_COLPF2, align 4
  %128 = load i32, i32* @GTIA_COLPF2, align 4
  %129 = call i32 @GTIA_PutByte(i32 %127, i32 %128)
  %130 = load i32, i32* @GTIA_OFFSET_COLPF3, align 4
  %131 = load i32, i32* @GTIA_COLPF3, align 4
  %132 = call i32 @GTIA_PutByte(i32 %130, i32 %131)
  %133 = load i32, i32* @GTIA_OFFSET_COLBK, align 4
  %134 = load i32, i32* @GTIA_COLBK, align 4
  %135 = call i32 @GTIA_PutByte(i32 %133, i32 %134)
  %136 = load i32, i32* @GTIA_OFFSET_PRIOR, align 4
  %137 = load i32, i32* @GTIA_PRIOR, align 4
  %138 = call i32 @GTIA_PutByte(i32 %136, i32 %137)
  %139 = load i32, i32* @GTIA_OFFSET_GRACTL, align 4
  %140 = load i32, i32* @GTIA_GRACTL, align 4
  %141 = call i32 @GTIA_PutByte(i32 %139, i32 %140)
  ret void
}

declare dso_local i32 @StateSav_ReadUBYTE(i32*, i32) #1

declare dso_local i32 @StateSav_ReadINT(i32*, i32) #1

declare dso_local i32 @GTIA_PutByte(i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
