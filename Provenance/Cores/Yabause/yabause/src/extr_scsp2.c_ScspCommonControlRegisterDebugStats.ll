; ModuleID = '/home/carl/AnghaBench/Provenance/Cores/Yabause/yabause/src/extr_scsp2.c_ScspCommonControlRegisterDebugStats.c'
source_filename = "/home/carl/AnghaBench/Provenance/Cores/Yabause/yabause/src/extr_scsp2.c_ScspCommonControlRegisterDebugStats.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i64, i32, i32, i64 }

@.str = private unnamed_addr constant [13 x i8] c"Memory: %s\0D\0A\00", align 1
@scsp = common dso_local global %struct.TYPE_2__ zeroinitializer, align 8
@.str.1 = private unnamed_addr constant [7 x i8] c"4 Mbit\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"2 Mbit\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"Master volume: %d\0D\0A\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"Ring buffer length: %d\0D\0A\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"Ring buffer address: %08lX\0D\0A\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"Slot Status Registers\0D\0A\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"-----------------\0D\0A\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"Monitor slot: %d\0D\0A\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"Call address: %d\0D\0A\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"DMA Registers\0D\0A\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"DMA memory address start: %08lX\0D\0A\00", align 1
@.str.13 = private unnamed_addr constant [35 x i8] c"DMA register address start: %03X\0D\0A\00", align 1
@.str.14 = private unnamed_addr constant [42 x i8] c"DMA Flags: %02X (%cDGATE %cDDIR %cDEXE)\0D\0A\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"Timer Registers\0D\0A\00", align 1
@.str.16 = private unnamed_addr constant [24 x i8] c"Timer A counter: %02X\0D\0A\00", align 1
@.str.17 = private unnamed_addr constant [40 x i8] c"Timer A increment: Every %d sample(s)\0D\0A\00", align 1
@.str.18 = private unnamed_addr constant [24 x i8] c"Timer B counter: %02X\0D\0A\00", align 1
@.str.19 = private unnamed_addr constant [40 x i8] c"Timer B increment: Every %d sample(s)\0D\0A\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"Timer C counter: %02X\0D\0A\00", align 1
@.str.21 = private unnamed_addr constant [40 x i8] c"Timer C increment: Every %d sample(s)\0D\0A\00", align 1
@.str.22 = private unnamed_addr constant [22 x i8] c"Interrupt Registers\0D\0A\00", align 1
@.str.23 = private unnamed_addr constant [36 x i8] c"Sound cpu interrupt pending: %04X\0D\0A\00", align 1
@.str.24 = private unnamed_addr constant [35 x i8] c"Sound cpu interrupt enable: %04X\0D\0A\00", align 1
@.str.25 = private unnamed_addr constant [36 x i8] c"Sound cpu interrupt level 0: %04X\0D\0A\00", align 1
@.str.26 = private unnamed_addr constant [36 x i8] c"Sound cpu interrupt level 1: %04X\0D\0A\00", align 1
@.str.27 = private unnamed_addr constant [36 x i8] c"Sound cpu interrupt level 2: %04X\0D\0A\00", align 1
@.str.28 = private unnamed_addr constant [35 x i8] c"Main cpu interrupt pending: %04X\0D\0A\00", align 1
@.str.29 = private unnamed_addr constant [34 x i8] c"Main cpu interrupt enable: %04X\0D\0A\00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @ScspCommonControlRegisterDebugStats(i8* %0) #0 {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  %4 = load i64, i64* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 22), align 8
  %5 = icmp ne i64 %4, 0
  %6 = zext i1 %5 to i64
  %7 = select i1 %5, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)
  %8 = call i32 (i8*, i8*, ...) @AddString(i8* %3, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* %7)
  %9 = load i8*, i8** %2, align 8
  %10 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 21), align 4
  %11 = call i32 (i8*, i8*, ...) @AddString(i8* %9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0), i32 %10)
  %12 = load i8*, i8** %2, align 8
  %13 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 20), align 8
  %14 = call i32 (i8*, i8*, ...) @AddString(i8* %12, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), i32 %13)
  %15 = load i8*, i8** %2, align 8
  %16 = load i64, i64* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 19), align 8
  %17 = call i32 (i8*, i8*, ...) @AddString(i8* %15, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i64 %16)
  %18 = load i8*, i8** %2, align 8
  %19 = call i32 (i8*, i8*, ...) @AddString(i8* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0))
  %20 = load i8*, i8** %2, align 8
  %21 = call i32 (i8*, i8*, ...) @AddString(i8* %20, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0))
  %22 = load i8*, i8** %2, align 8
  %23 = call i32 (i8*, i8*, ...) @AddString(i8* %22, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0))
  %24 = load i8*, i8** %2, align 8
  %25 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 18), align 8
  %26 = call i32 (i8*, i8*, ...) @AddString(i8* %24, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i32 %25)
  %27 = load i8*, i8** %2, align 8
  %28 = call i32 @ScspReadWordDirect(i32 1032)
  %29 = ashr i32 %28, 7
  %30 = and i32 %29, 15
  %31 = call i32 (i8*, i8*, ...) @AddString(i8* %27, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i32 %30)
  %32 = load i8*, i8** %2, align 8
  %33 = call i32 (i8*, i8*, ...) @AddString(i8* %32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0))
  %34 = load i8*, i8** %2, align 8
  %35 = call i32 (i8*, i8*, ...) @AddString(i8* %34, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0))
  %36 = load i8*, i8** %2, align 8
  %37 = call i32 (i8*, i8*, ...) @AddString(i8* %36, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0))
  %38 = load i8*, i8** %2, align 8
  %39 = load i64, i64* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 17), align 8
  %40 = call i32 (i8*, i8*, ...) @AddString(i8* %38, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i64 0, i64 0), i64 %39)
  %41 = load i8*, i8** %2, align 8
  %42 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 16), align 8
  %43 = call i32 (i8*, i8*, ...) @AddString(i8* %41, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13, i64 0, i64 0), i32 %42)
  %44 = load i8*, i8** %2, align 8
  %45 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 0), align 8
  %46 = shl i32 %45, 6
  %47 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 1), align 4
  %48 = shl i32 %47, 5
  %49 = or i32 %46, %48
  %50 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 2), align 8
  %51 = shl i32 %50, 4
  %52 = or i32 %49, %51
  %53 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 0), align 8
  %54 = icmp ne i32 %53, 0
  %55 = zext i1 %54 to i64
  %56 = select i1 %54, i32 43, i32 45
  %57 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 1), align 4
  %58 = icmp ne i32 %57, 0
  %59 = zext i1 %58 to i64
  %60 = select i1 %58, i32 43, i32 45
  %61 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 2), align 8
  %62 = icmp ne i32 %61, 0
  %63 = zext i1 %62 to i64
  %64 = select i1 %62, i32 43, i32 45
  %65 = call i32 (i8*, i8*, ...) @AddString(i8* %44, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.14, i64 0, i64 0), i32 %52, i32 %56, i32 %60, i32 %64)
  %66 = load i8*, i8** %2, align 8
  %67 = call i32 (i8*, i8*, ...) @AddString(i8* %66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0))
  %68 = load i8*, i8** %2, align 8
  %69 = call i32 (i8*, i8*, ...) @AddString(i8* %68, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0))
  %70 = load i8*, i8** %2, align 8
  %71 = call i32 (i8*, i8*, ...) @AddString(i8* %70, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0))
  %72 = load i8*, i8** %2, align 8
  %73 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 3), align 4
  %74 = ashr i32 %73, 8
  %75 = call i32 (i8*, i8*, ...) @AddString(i8* %72, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.16, i64 0, i64 0), i32 %74)
  %76 = load i8*, i8** %2, align 8
  %77 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 4), align 8
  %78 = shl i32 1, %77
  %79 = call i32 (i8*, i8*, ...) @AddString(i8* %76, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.17, i64 0, i64 0), i32 %78)
  %80 = load i8*, i8** %2, align 8
  %81 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 5), align 4
  %82 = ashr i32 %81, 8
  %83 = call i32 (i8*, i8*, ...) @AddString(i8* %80, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i64 0, i64 0), i32 %82)
  %84 = load i8*, i8** %2, align 8
  %85 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 6), align 8
  %86 = shl i32 1, %85
  %87 = call i32 (i8*, i8*, ...) @AddString(i8* %84, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.19, i64 0, i64 0), i32 %86)
  %88 = load i8*, i8** %2, align 8
  %89 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 7), align 4
  %90 = ashr i32 %89, 8
  %91 = call i32 (i8*, i8*, ...) @AddString(i8* %88, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i64 0, i64 0), i32 %90)
  %92 = load i8*, i8** %2, align 8
  %93 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 8), align 8
  %94 = shl i32 1, %93
  %95 = call i32 (i8*, i8*, ...) @AddString(i8* %92, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.21, i64 0, i64 0), i32 %94)
  %96 = load i8*, i8** %2, align 8
  %97 = call i32 (i8*, i8*, ...) @AddString(i8* %96, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0))
  %98 = load i8*, i8** %2, align 8
  %99 = call i32 (i8*, i8*, ...) @AddString(i8* %98, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i64 0, i64 0))
  %100 = load i8*, i8** %2, align 8
  %101 = call i32 (i8*, i8*, ...) @AddString(i8* %100, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0))
  %102 = load i8*, i8** %2, align 8
  %103 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 15), align 4
  %104 = call i32 (i8*, i8*, ...) @AddString(i8* %102, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.23, i64 0, i64 0), i32 %103)
  %105 = load i8*, i8** %2, align 8
  %106 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 14), align 8
  %107 = call i32 (i8*, i8*, ...) @AddString(i8* %105, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i64 0, i64 0), i32 %106)
  %108 = load i8*, i8** %2, align 8
  %109 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 13), align 4
  %110 = call i32 (i8*, i8*, ...) @AddString(i8* %108, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.25, i64 0, i64 0), i32 %109)
  %111 = load i8*, i8** %2, align 8
  %112 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 12), align 8
  %113 = call i32 (i8*, i8*, ...) @AddString(i8* %111, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.26, i64 0, i64 0), i32 %112)
  %114 = load i8*, i8** %2, align 8
  %115 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 11), align 4
  %116 = call i32 (i8*, i8*, ...) @AddString(i8* %114, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.27, i64 0, i64 0), i32 %115)
  %117 = load i8*, i8** %2, align 8
  %118 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 10), align 8
  %119 = call i32 (i8*, i8*, ...) @AddString(i8* %117, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.28, i64 0, i64 0), i32 %118)
  %120 = load i8*, i8** %2, align 8
  %121 = load i32, i32* getelementptr inbounds (%struct.TYPE_2__, %struct.TYPE_2__* @scsp, i32 0, i32 9), align 4
  %122 = call i32 (i8*, i8*, ...) @AddString(i8* %120, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.29, i64 0, i64 0), i32 %121)
  %123 = load i8*, i8** %2, align 8
  %124 = call i32 (i8*, i8*, ...) @AddString(i8* %123, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0))
  ret void
}

declare dso_local i32 @AddString(i8*, i8*, ...) #1

declare dso_local i32 @ScspReadWordDirect(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
