; ModuleID = '/home/carl/AnghaBench/Provenance/Cores/Yabause/yabause/src/extr_memory.c_MappedMemoryInit.c'
source_filename = "/home/carl/AnghaBench/Provenance/Cores/Yabause/yabause/src/extr_memory.c_MappedMemoryInit.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i32*, i32*, i32*, i32*, i32*, i32* }

@UnhandledMemoryReadByte = common dso_local global i32 0, align 4
@UnhandledMemoryReadWord = common dso_local global i32 0, align 4
@UnhandledMemoryReadLong = common dso_local global i32 0, align 4
@UnhandledMemoryWriteByte = common dso_local global i32 0, align 4
@UnhandledMemoryWriteWord = common dso_local global i32 0, align 4
@UnhandledMemoryWriteLong = common dso_local global i32 0, align 4
@BiosRomMemoryReadByte = common dso_local global i32 0, align 4
@BiosRomMemoryReadWord = common dso_local global i32 0, align 4
@BiosRomMemoryReadLong = common dso_local global i32 0, align 4
@BiosRomMemoryWriteByte = common dso_local global i32 0, align 4
@BiosRomMemoryWriteWord = common dso_local global i32 0, align 4
@BiosRomMemoryWriteLong = common dso_local global i32 0, align 4
@SmpcReadByte = common dso_local global i32 0, align 4
@SmpcReadWord = common dso_local global i32 0, align 4
@SmpcReadLong = common dso_local global i32 0, align 4
@SmpcWriteByte = common dso_local global i32 0, align 4
@SmpcWriteWord = common dso_local global i32 0, align 4
@SmpcWriteLong = common dso_local global i32 0, align 4
@BupRamMemoryReadByte = common dso_local global i32 0, align 4
@BupRamMemoryReadWord = common dso_local global i32 0, align 4
@BupRamMemoryReadLong = common dso_local global i32 0, align 4
@BupRamMemoryWriteByte = common dso_local global i32 0, align 4
@BupRamMemoryWriteWord = common dso_local global i32 0, align 4
@BupRamMemoryWriteLong = common dso_local global i32 0, align 4
@LowWramMemoryReadByte = common dso_local global i32 0, align 4
@LowWramMemoryReadWord = common dso_local global i32 0, align 4
@LowWramMemoryReadLong = common dso_local global i32 0, align 4
@LowWramMemoryWriteByte = common dso_local global i32 0, align 4
@LowWramMemoryWriteWord = common dso_local global i32 0, align 4
@LowWramMemoryWriteLong = common dso_local global i32 0, align 4
@SSH2InputCaptureWriteWord = common dso_local global i32 0, align 4
@MSH2InputCaptureWriteWord = common dso_local global i32 0, align 4
@CartridgeArea = common dso_local global %struct.TYPE_2__* null, align 8
@Cs1ReadByte = common dso_local global i32 0, align 4
@Cs1ReadWord = common dso_local global i32 0, align 4
@Cs1ReadLong = common dso_local global i32 0, align 4
@Cs1WriteByte = common dso_local global i32 0, align 4
@Cs1WriteWord = common dso_local global i32 0, align 4
@Cs1WriteLong = common dso_local global i32 0, align 4
@Cs2ReadByte = common dso_local global i32 0, align 4
@Cs2ReadWord = common dso_local global i32 0, align 4
@Cs2ReadLong = common dso_local global i32 0, align 4
@Cs2WriteByte = common dso_local global i32 0, align 4
@Cs2WriteWord = common dso_local global i32 0, align 4
@Cs2WriteLong = common dso_local global i32 0, align 4
@SoundRamReadByte = common dso_local global i32 0, align 4
@SoundRamReadWord = common dso_local global i32 0, align 4
@SoundRamReadLong = common dso_local global i32 0, align 4
@SoundRamWriteByte = common dso_local global i32 0, align 4
@SoundRamWriteWord = common dso_local global i32 0, align 4
@SoundRamWriteLong = common dso_local global i32 0, align 4
@scsp_r_b = common dso_local global i32 0, align 4
@scsp_r_w = common dso_local global i32 0, align 4
@scsp_r_d = common dso_local global i32 0, align 4
@scsp_w_b = common dso_local global i32 0, align 4
@scsp_w_w = common dso_local global i32 0, align 4
@scsp_w_d = common dso_local global i32 0, align 4
@Vdp1RamReadByte = common dso_local global i32 0, align 4
@Vdp1RamReadWord = common dso_local global i32 0, align 4
@Vdp1RamReadLong = common dso_local global i32 0, align 4
@Vdp1RamWriteByte = common dso_local global i32 0, align 4
@Vdp1RamWriteWord = common dso_local global i32 0, align 4
@Vdp1RamWriteLong = common dso_local global i32 0, align 4
@Vdp1FrameBufferReadByte = common dso_local global i32 0, align 4
@Vdp1FrameBufferReadWord = common dso_local global i32 0, align 4
@Vdp1FrameBufferReadLong = common dso_local global i32 0, align 4
@Vdp1FrameBufferWriteByte = common dso_local global i32 0, align 4
@Vdp1FrameBufferWriteWord = common dso_local global i32 0, align 4
@Vdp1FrameBufferWriteLong = common dso_local global i32 0, align 4
@Vdp1ReadByte = common dso_local global i32 0, align 4
@Vdp1ReadWord = common dso_local global i32 0, align 4
@Vdp1ReadLong = common dso_local global i32 0, align 4
@Vdp1WriteByte = common dso_local global i32 0, align 4
@Vdp1WriteWord = common dso_local global i32 0, align 4
@Vdp1WriteLong = common dso_local global i32 0, align 4
@Vdp2RamReadByte = common dso_local global i32 0, align 4
@Vdp2RamReadWord = common dso_local global i32 0, align 4
@Vdp2RamReadLong = common dso_local global i32 0, align 4
@Vdp2RamWriteByte = common dso_local global i32 0, align 4
@Vdp2RamWriteWord = common dso_local global i32 0, align 4
@Vdp2RamWriteLong = common dso_local global i32 0, align 4
@Vdp2ColorRamReadByte = common dso_local global i32 0, align 4
@Vdp2ColorRamReadWord = common dso_local global i32 0, align 4
@Vdp2ColorRamReadLong = common dso_local global i32 0, align 4
@Vdp2ColorRamWriteByte = common dso_local global i32 0, align 4
@Vdp2ColorRamWriteWord = common dso_local global i32 0, align 4
@Vdp2ColorRamWriteLong = common dso_local global i32 0, align 4
@Vdp2ReadByte = common dso_local global i32 0, align 4
@Vdp2ReadWord = common dso_local global i32 0, align 4
@Vdp2ReadLong = common dso_local global i32 0, align 4
@Vdp2WriteByte = common dso_local global i32 0, align 4
@Vdp2WriteWord = common dso_local global i32 0, align 4
@Vdp2WriteLong = common dso_local global i32 0, align 4
@ScuReadByte = common dso_local global i32 0, align 4
@ScuReadWord = common dso_local global i32 0, align 4
@ScuReadLong = common dso_local global i32 0, align 4
@ScuWriteByte = common dso_local global i32 0, align 4
@ScuWriteWord = common dso_local global i32 0, align 4
@ScuWriteLong = common dso_local global i32 0, align 4
@HighWramMemoryReadByte = common dso_local global i32 0, align 4
@HighWramMemoryReadWord = common dso_local global i32 0, align 4
@HighWramMemoryReadLong = common dso_local global i32 0, align 4
@HighWramMemoryWriteByte = common dso_local global i32 0, align 4
@HighWramMemoryWriteWord = common dso_local global i32 0, align 4
@HighWramMemoryWriteLong = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @MappedMemoryInit() #0 {
  %1 = call i32 @FillMemoryArea(i32 0, i32 4095, i32* @UnhandledMemoryReadByte, i32* @UnhandledMemoryReadWord, i32* @UnhandledMemoryReadLong, i32* @UnhandledMemoryWriteByte, i32* @UnhandledMemoryWriteWord, i32* @UnhandledMemoryWriteLong)
  %2 = call i32 @FillMemoryArea(i32 0, i32 15, i32* @BiosRomMemoryReadByte, i32* @BiosRomMemoryReadWord, i32* @BiosRomMemoryReadLong, i32* @BiosRomMemoryWriteByte, i32* @BiosRomMemoryWriteWord, i32* @BiosRomMemoryWriteLong)
  %3 = call i32 @FillMemoryArea(i32 16, i32 23, i32* @SmpcReadByte, i32* @SmpcReadWord, i32* @SmpcReadLong, i32* @SmpcWriteByte, i32* @SmpcWriteWord, i32* @SmpcWriteLong)
  %4 = call i32 @FillMemoryArea(i32 24, i32 31, i32* @BupRamMemoryReadByte, i32* @BupRamMemoryReadWord, i32* @BupRamMemoryReadLong, i32* @BupRamMemoryWriteByte, i32* @BupRamMemoryWriteWord, i32* @BupRamMemoryWriteLong)
  %5 = call i32 @FillMemoryArea(i32 32, i32 47, i32* @LowWramMemoryReadByte, i32* @LowWramMemoryReadWord, i32* @LowWramMemoryReadLong, i32* @LowWramMemoryWriteByte, i32* @LowWramMemoryWriteWord, i32* @LowWramMemoryWriteLong)
  %6 = call i32 @FillMemoryArea(i32 256, i32 383, i32* @UnhandledMemoryReadByte, i32* @UnhandledMemoryReadWord, i32* @UnhandledMemoryReadLong, i32* @UnhandledMemoryWriteByte, i32* @SSH2InputCaptureWriteWord, i32* @UnhandledMemoryWriteLong)
  %7 = call i32 @FillMemoryArea(i32 384, i32 511, i32* @UnhandledMemoryReadByte, i32* @UnhandledMemoryReadWord, i32* @UnhandledMemoryReadLong, i32* @UnhandledMemoryWriteByte, i32* @MSH2InputCaptureWriteWord, i32* @UnhandledMemoryWriteLong)
  %8 = load %struct.TYPE_2__*, %struct.TYPE_2__** @CartridgeArea, align 8
  %9 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %8, i32 0, i32 5
  %10 = load i32*, i32** %9, align 8
  %11 = load %struct.TYPE_2__*, %struct.TYPE_2__** @CartridgeArea, align 8
  %12 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %11, i32 0, i32 4
  %13 = load i32*, i32** %12, align 8
  %14 = load %struct.TYPE_2__*, %struct.TYPE_2__** @CartridgeArea, align 8
  %15 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %14, i32 0, i32 3
  %16 = load i32*, i32** %15, align 8
  %17 = load %struct.TYPE_2__*, %struct.TYPE_2__** @CartridgeArea, align 8
  %18 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %17, i32 0, i32 2
  %19 = load i32*, i32** %18, align 8
  %20 = load %struct.TYPE_2__*, %struct.TYPE_2__** @CartridgeArea, align 8
  %21 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %20, i32 0, i32 1
  %22 = load i32*, i32** %21, align 8
  %23 = load %struct.TYPE_2__*, %struct.TYPE_2__** @CartridgeArea, align 8
  %24 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %23, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = call i32 @FillMemoryArea(i32 512, i32 1023, i32* %10, i32* %13, i32* %16, i32* %19, i32* %22, i32* %25)
  %27 = call i32 @FillMemoryArea(i32 1024, i32 1279, i32* @Cs1ReadByte, i32* @Cs1ReadWord, i32* @Cs1ReadLong, i32* @Cs1WriteByte, i32* @Cs1WriteWord, i32* @Cs1WriteLong)
  %28 = call i32 @FillMemoryArea(i32 1408, i32 1423, i32* @Cs2ReadByte, i32* @Cs2ReadWord, i32* @Cs2ReadLong, i32* @Cs2WriteByte, i32* @Cs2WriteWord, i32* @Cs2WriteLong)
  %29 = call i32 @FillMemoryArea(i32 1440, i32 1455, i32* @SoundRamReadByte, i32* @SoundRamReadWord, i32* @SoundRamReadLong, i32* @SoundRamWriteByte, i32* @SoundRamWriteWord, i32* @SoundRamWriteLong)
  %30 = call i32 @FillMemoryArea(i32 1456, i32 1471, i32* @scsp_r_b, i32* @scsp_r_w, i32* @scsp_r_d, i32* @scsp_w_b, i32* @scsp_w_w, i32* @scsp_w_d)
  %31 = call i32 @FillMemoryArea(i32 1472, i32 1479, i32* @Vdp1RamReadByte, i32* @Vdp1RamReadWord, i32* @Vdp1RamReadLong, i32* @Vdp1RamWriteByte, i32* @Vdp1RamWriteWord, i32* @Vdp1RamWriteLong)
  %32 = call i32 @FillMemoryArea(i32 1480, i32 1487, i32* @Vdp1FrameBufferReadByte, i32* @Vdp1FrameBufferReadWord, i32* @Vdp1FrameBufferReadLong, i32* @Vdp1FrameBufferWriteByte, i32* @Vdp1FrameBufferWriteWord, i32* @Vdp1FrameBufferWriteLong)
  %33 = call i32 @FillMemoryArea(i32 1488, i32 1495, i32* @Vdp1ReadByte, i32* @Vdp1ReadWord, i32* @Vdp1ReadLong, i32* @Vdp1WriteByte, i32* @Vdp1WriteWord, i32* @Vdp1WriteLong)
  %34 = call i32 @FillMemoryArea(i32 1504, i32 1519, i32* @Vdp2RamReadByte, i32* @Vdp2RamReadWord, i32* @Vdp2RamReadLong, i32* @Vdp2RamWriteByte, i32* @Vdp2RamWriteWord, i32* @Vdp2RamWriteLong)
  %35 = call i32 @FillMemoryArea(i32 1520, i32 1527, i32* @Vdp2ColorRamReadByte, i32* @Vdp2ColorRamReadWord, i32* @Vdp2ColorRamReadLong, i32* @Vdp2ColorRamWriteByte, i32* @Vdp2ColorRamWriteWord, i32* @Vdp2ColorRamWriteLong)
  %36 = call i32 @FillMemoryArea(i32 1528, i32 1531, i32* @Vdp2ReadByte, i32* @Vdp2ReadWord, i32* @Vdp2ReadLong, i32* @Vdp2WriteByte, i32* @Vdp2WriteWord, i32* @Vdp2WriteLong)
  %37 = call i32 @FillMemoryArea(i32 1534, i32 1534, i32* @ScuReadByte, i32* @ScuReadWord, i32* @ScuReadLong, i32* @ScuWriteByte, i32* @ScuWriteWord, i32* @ScuWriteLong)
  %38 = call i32 @FillMemoryArea(i32 1536, i32 2047, i32* @HighWramMemoryReadByte, i32* @HighWramMemoryReadWord, i32* @HighWramMemoryReadLong, i32* @HighWramMemoryWriteByte, i32* @HighWramMemoryWriteWord, i32* @HighWramMemoryWriteLong)
  ret void
}

declare dso_local i32 @FillMemoryArea(i32, i32, i32*, i32*, i32*, i32*, i32*, i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
