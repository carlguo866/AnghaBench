; ModuleID = '/home/carl/AnghaBench/systemd/src/shared/extr_generator.c_generator_open_unit_file.c'
source_filename = "/home/carl/AnghaBench/systemd/src/shared/extr_generator.c_generator_open_unit_file.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [4 x i8] c"wxe\00", align 1
@EEXIST = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [76 x i8] c"Failed to create unit file %s, as it already exists. Duplicate entry in %s?\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"Failed to create unit file %s: %m\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"# Automatically generated by %s\0A\0A\00", align 1
@program_invocation_short_name = common dso_local global i8* null, align 8

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @generator_open_unit_file(i8* %0, i8* %1, i8* %2, i32** %3) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32, align 4
  store i8* %0, i8** %6, align 8
  store i8* %1, i8** %7, align 8
  store i8* %2, i8** %8, align 8
  store i32** %3, i32*** %9, align 8
  %13 = load i8*, i8** %6, align 8
  %14 = load i8*, i8** %8, align 8
  %15 = call i8* @prefix_roota(i8* %13, i8* %14)
  store i8* %15, i8** %10, align 8
  %16 = load i8*, i8** %10, align 8
  %17 = call i32 @fopen_unlocked(i8* %16, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i32** %11)
  store i32 %17, i32* %12, align 4
  %18 = load i32, i32* %12, align 4
  %19 = icmp slt i32 %18, 0
  br i1 %19, label %20, label %37

20:                                               ; preds = %4
  %21 = load i8*, i8** %7, align 8
  %22 = icmp ne i8* %21, null
  br i1 %22, label %23, label %33

23:                                               ; preds = %20
  %24 = load i32, i32* %12, align 4
  %25 = load i32, i32* @EEXIST, align 4
  %26 = sub nsw i32 0, %25
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %33

28:                                               ; preds = %23
  %29 = load i32, i32* %12, align 4
  %30 = load i8*, i8** %10, align 8
  %31 = load i8*, i8** %7, align 8
  %32 = call i32 (i32, i8*, i8*, ...) @log_error_errno(i32 %29, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i8* %30, i8* %31)
  store i32 %32, i32* %5, align 4
  br label %43

33:                                               ; preds = %23, %20
  %34 = load i32, i32* %12, align 4
  %35 = load i8*, i8** %10, align 8
  %36 = call i32 (i32, i8*, i8*, ...) @log_error_errno(i32 %34, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i8* %35)
  store i32 %36, i32* %5, align 4
  br label %43

37:                                               ; preds = %4
  %38 = load i32*, i32** %11, align 8
  %39 = load i8*, i8** @program_invocation_short_name, align 8
  %40 = call i32 @fprintf(i32* %38, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i64 0, i64 0), i8* %39)
  %41 = load i32*, i32** %11, align 8
  %42 = load i32**, i32*** %9, align 8
  store i32* %41, i32** %42, align 8
  store i32 0, i32* %5, align 4
  br label %43

43:                                               ; preds = %37, %33, %28
  %44 = load i32, i32* %5, align 4
  ret i32 %44
}

declare dso_local i8* @prefix_roota(i8*, i8*) #1

declare dso_local i32 @fopen_unlocked(i8*, i8*, i32**) #1

declare dso_local i32 @log_error_errno(i32, i8*, i8*, ...) #1

declare dso_local i32 @fprintf(i32*, i8*, i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
