; ModuleID = '/home/carl/AnghaBench/systemd/src/test/extr_test-tables.c_main.c'
source_filename = "/home/carl/AnghaBench/systemd/src/test/extr_test-tables.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@architecture = common dso_local global i32 0, align 4
@ARCHITECTURE = common dso_local global i32 0, align 4
@assert_type = common dso_local global i32 0, align 4
@CONDITION_TYPE = common dso_local global i32 0, align 4
@automount_result = common dso_local global i32 0, align 4
@AUTOMOUNT_RESULT = common dso_local global i32 0, align 4
@automount_state = common dso_local global i32 0, align 4
@AUTOMOUNT_STATE = common dso_local global i32 0, align 4
@cgroup_controller = common dso_local global i32 0, align 4
@CGROUP_CONTROLLER = common dso_local global i32 0, align 4
@cgroup_device_policy = common dso_local global i32 0, align 4
@CGROUP_DEVICE_POLICY = common dso_local global i32 0, align 4
@cgroup_io_limit_type = common dso_local global i32 0, align 4
@CGROUP_IO_LIMIT_TYPE = common dso_local global i32 0, align 4
@collect_mode = common dso_local global i32 0, align 4
@COLLECT_MODE = common dso_local global i32 0, align 4
@condition_result = common dso_local global i32 0, align 4
@CONDITION_RESULT = common dso_local global i32 0, align 4
@condition_type = common dso_local global i32 0, align 4
@device_action = common dso_local global i32 0, align 4
@DEVICE_ACTION = common dso_local global i32 0, align 4
@device_state = common dso_local global i32 0, align 4
@DEVICE_STATE = common dso_local global i32 0, align 4
@dns_over_tls_mode = common dso_local global i32 0, align 4
@DNS_OVER_TLS_MODE = common dso_local global i32 0, align 4
@dnssec_mode = common dso_local global i32 0, align 4
@DNSSEC_MODE = common dso_local global i32 0, align 4
@emergency_action = common dso_local global i32 0, align 4
@EMERGENCY_ACTION = common dso_local global i32 0, align 4
@exec_directory_type = common dso_local global i32 0, align 4
@EXEC_DIRECTORY_TYPE = common dso_local global i32 0, align 4
@exec_input = common dso_local global i32 0, align 4
@EXEC_INPUT = common dso_local global i32 0, align 4
@exec_keyring_mode = common dso_local global i32 0, align 4
@EXEC_KEYRING_MODE = common dso_local global i32 0, align 4
@exec_output = common dso_local global i32 0, align 4
@EXEC_OUTPUT = common dso_local global i32 0, align 4
@exec_preserve_mode = common dso_local global i32 0, align 4
@EXEC_PRESERVE_MODE = common dso_local global i32 0, align 4
@exec_utmp_mode = common dso_local global i32 0, align 4
@EXEC_UTMP_MODE = common dso_local global i32 0, align 4
@image_type = common dso_local global i32 0, align 4
@IMAGE_TYPE = common dso_local global i32 0, align 4
@import_verify = common dso_local global i32 0, align 4
@IMPORT_VERIFY = common dso_local global i32 0, align 4
@job_mode = common dso_local global i32 0, align 4
@JOB_MODE = common dso_local global i32 0, align 4
@job_result = common dso_local global i32 0, align 4
@JOB_RESULT = common dso_local global i32 0, align 4
@job_state = common dso_local global i32 0, align 4
@JOB_STATE = common dso_local global i32 0, align 4
@job_type = common dso_local global i32 0, align 4
@JOB_TYPE = common dso_local global i32 0, align 4
@kill_mode = common dso_local global i32 0, align 4
@KILL_MODE = common dso_local global i32 0, align 4
@kill_who = common dso_local global i32 0, align 4
@KILL_WHO = common dso_local global i32 0, align 4
@locale_variable = common dso_local global i32 0, align 4
@VARIABLE_LC = common dso_local global i32 0, align 4
@log_target = common dso_local global i32 0, align 4
@LOG_TARGET = common dso_local global i32 0, align 4
@mac_address_policy = common dso_local global i32 0, align 4
@MAC_ADDRESS_POLICY = common dso_local global i32 0, align 4
@manager_state = common dso_local global i32 0, align 4
@MANAGER_STATE = common dso_local global i32 0, align 4
@manager_timestamp = common dso_local global i32 0, align 4
@MANAGER_TIMESTAMP = common dso_local global i32 0, align 4
@mount_exec_command = common dso_local global i32 0, align 4
@MOUNT_EXEC_COMMAND = common dso_local global i32 0, align 4
@mount_result = common dso_local global i32 0, align 4
@MOUNT_RESULT = common dso_local global i32 0, align 4
@mount_state = common dso_local global i32 0, align 4
@MOUNT_STATE = common dso_local global i32 0, align 4
@name_policy = common dso_local global i32 0, align 4
@NAMEPOLICY = common dso_local global i32 0, align 4
@namespace_type = common dso_local global i32 0, align 4
@NAMESPACE_TYPE = common dso_local global i32 0, align 4
@notify_access = common dso_local global i32 0, align 4
@NOTIFY_ACCESS = common dso_local global i32 0, align 4
@notify_state = common dso_local global i32 0, align 4
@NOTIFY_STATE = common dso_local global i32 0, align 4
@output_mode = common dso_local global i32 0, align 4
@OUTPUT_MODE = common dso_local global i32 0, align 4
@partition_designator = common dso_local global i32 0, align 4
@PARTITION_DESIGNATOR = common dso_local global i32 0, align 4
@path_result = common dso_local global i32 0, align 4
@PATH_RESULT = common dso_local global i32 0, align 4
@path_state = common dso_local global i32 0, align 4
@PATH_STATE = common dso_local global i32 0, align 4
@path_type = common dso_local global i32 0, align 4
@PATH_TYPE = common dso_local global i32 0, align 4
@protect_home = common dso_local global i32 0, align 4
@PROTECT_HOME = common dso_local global i32 0, align 4
@protect_system = common dso_local global i32 0, align 4
@PROTECT_SYSTEM = common dso_local global i32 0, align 4
@resolve_support = common dso_local global i32 0, align 4
@RESOLVE_SUPPORT = common dso_local global i32 0, align 4
@rlimit = common dso_local global i32 0, align 4
@RLIMIT = common dso_local global i32 0, align 4
@scope_result = common dso_local global i32 0, align 4
@SCOPE_RESULT = common dso_local global i32 0, align 4
@scope_state = common dso_local global i32 0, align 4
@SCOPE_STATE = common dso_local global i32 0, align 4
@service_exec_command = common dso_local global i32 0, align 4
@SERVICE_EXEC_COMMAND = common dso_local global i32 0, align 4
@service_restart = common dso_local global i32 0, align 4
@SERVICE_RESTART = common dso_local global i32 0, align 4
@service_result = common dso_local global i32 0, align 4
@SERVICE_RESULT = common dso_local global i32 0, align 4
@service_state = common dso_local global i32 0, align 4
@SERVICE_STATE = common dso_local global i32 0, align 4
@service_type = common dso_local global i32 0, align 4
@SERVICE_TYPE = common dso_local global i32 0, align 4
@show_status = common dso_local global i32 0, align 4
@SHOW_STATUS = common dso_local global i32 0, align 4
@slice_state = common dso_local global i32 0, align 4
@SLICE_STATE = common dso_local global i32 0, align 4
@socket_address_bind_ipv6_only = common dso_local global i32 0, align 4
@SOCKET_ADDRESS_BIND_IPV6_ONLY = common dso_local global i32 0, align 4
@socket_exec_command = common dso_local global i32 0, align 4
@SOCKET_EXEC_COMMAND = common dso_local global i32 0, align 4
@socket_result = common dso_local global i32 0, align 4
@SOCKET_RESULT = common dso_local global i32 0, align 4
@socket_state = common dso_local global i32 0, align 4
@SOCKET_STATE = common dso_local global i32 0, align 4
@split_mode = common dso_local global i32 0, align 4
@SPLIT = common dso_local global i32 0, align 4
@storage = common dso_local global i32 0, align 4
@STORAGE = common dso_local global i32 0, align 4
@swap_exec_command = common dso_local global i32 0, align 4
@SWAP_EXEC_COMMAND = common dso_local global i32 0, align 4
@swap_result = common dso_local global i32 0, align 4
@SWAP_RESULT = common dso_local global i32 0, align 4
@swap_state = common dso_local global i32 0, align 4
@SWAP_STATE = common dso_local global i32 0, align 4
@target_state = common dso_local global i32 0, align 4
@TARGET_STATE = common dso_local global i32 0, align 4
@timer_base = common dso_local global i32 0, align 4
@TIMER_BASE = common dso_local global i32 0, align 4
@timer_result = common dso_local global i32 0, align 4
@TIMER_RESULT = common dso_local global i32 0, align 4
@timer_state = common dso_local global i32 0, align 4
@TIMER_STATE = common dso_local global i32 0, align 4
@unit_active_state = common dso_local global i32 0, align 4
@UNIT_ACTIVE_STATE = common dso_local global i32 0, align 4
@unit_dependency = common dso_local global i32 0, align 4
@UNIT_DEPENDENCY = common dso_local global i32 0, align 4
@unit_file_change_type = common dso_local global i32 0, align 4
@UNIT_FILE_CHANGE_TYPE = common dso_local global i32 0, align 4
@unit_file_preset_mode = common dso_local global i32 0, align 4
@UNIT_FILE_PRESET = common dso_local global i32 0, align 4
@unit_file_state = common dso_local global i32 0, align 4
@UNIT_FILE_STATE = common dso_local global i32 0, align 4
@unit_load_state = common dso_local global i32 0, align 4
@UNIT_LOAD_STATE = common dso_local global i32 0, align 4
@unit_type = common dso_local global i32 0, align 4
@UNIT_TYPE = common dso_local global i32 0, align 4
@virtualization = common dso_local global i32 0, align 4
@VIRTUALIZATION = common dso_local global i32 0, align 4
@object_compressed = common dso_local global i32 0, align 4
@OBJECT_COMPRESSED = common dso_local global i32 0, align 4
@EXIT_SUCCESS = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %6 = load i32, i32* @architecture, align 4
  %7 = load i32, i32* @ARCHITECTURE, align 4
  %8 = call i32 @test_table(i32 %6, i32 %7)
  %9 = load i32, i32* @assert_type, align 4
  %10 = load i32, i32* @CONDITION_TYPE, align 4
  %11 = call i32 @test_table(i32 %9, i32 %10)
  %12 = load i32, i32* @automount_result, align 4
  %13 = load i32, i32* @AUTOMOUNT_RESULT, align 4
  %14 = call i32 @test_table(i32 %12, i32 %13)
  %15 = load i32, i32* @automount_state, align 4
  %16 = load i32, i32* @AUTOMOUNT_STATE, align 4
  %17 = call i32 @test_table(i32 %15, i32 %16)
  %18 = load i32, i32* @cgroup_controller, align 4
  %19 = load i32, i32* @CGROUP_CONTROLLER, align 4
  %20 = call i32 @test_table(i32 %18, i32 %19)
  %21 = load i32, i32* @cgroup_device_policy, align 4
  %22 = load i32, i32* @CGROUP_DEVICE_POLICY, align 4
  %23 = call i32 @test_table(i32 %21, i32 %22)
  %24 = load i32, i32* @cgroup_io_limit_type, align 4
  %25 = load i32, i32* @CGROUP_IO_LIMIT_TYPE, align 4
  %26 = call i32 @test_table(i32 %24, i32 %25)
  %27 = load i32, i32* @collect_mode, align 4
  %28 = load i32, i32* @COLLECT_MODE, align 4
  %29 = call i32 @test_table(i32 %27, i32 %28)
  %30 = load i32, i32* @condition_result, align 4
  %31 = load i32, i32* @CONDITION_RESULT, align 4
  %32 = call i32 @test_table(i32 %30, i32 %31)
  %33 = load i32, i32* @condition_type, align 4
  %34 = load i32, i32* @CONDITION_TYPE, align 4
  %35 = call i32 @test_table(i32 %33, i32 %34)
  %36 = load i32, i32* @device_action, align 4
  %37 = load i32, i32* @DEVICE_ACTION, align 4
  %38 = call i32 @test_table(i32 %36, i32 %37)
  %39 = load i32, i32* @device_state, align 4
  %40 = load i32, i32* @DEVICE_STATE, align 4
  %41 = call i32 @test_table(i32 %39, i32 %40)
  %42 = load i32, i32* @dns_over_tls_mode, align 4
  %43 = load i32, i32* @DNS_OVER_TLS_MODE, align 4
  %44 = call i32 @test_table(i32 %42, i32 %43)
  %45 = load i32, i32* @dnssec_mode, align 4
  %46 = load i32, i32* @DNSSEC_MODE, align 4
  %47 = call i32 @test_table(i32 %45, i32 %46)
  %48 = load i32, i32* @emergency_action, align 4
  %49 = load i32, i32* @EMERGENCY_ACTION, align 4
  %50 = call i32 @test_table(i32 %48, i32 %49)
  %51 = load i32, i32* @exec_directory_type, align 4
  %52 = load i32, i32* @EXEC_DIRECTORY_TYPE, align 4
  %53 = call i32 @test_table(i32 %51, i32 %52)
  %54 = load i32, i32* @exec_input, align 4
  %55 = load i32, i32* @EXEC_INPUT, align 4
  %56 = call i32 @test_table(i32 %54, i32 %55)
  %57 = load i32, i32* @exec_keyring_mode, align 4
  %58 = load i32, i32* @EXEC_KEYRING_MODE, align 4
  %59 = call i32 @test_table(i32 %57, i32 %58)
  %60 = load i32, i32* @exec_output, align 4
  %61 = load i32, i32* @EXEC_OUTPUT, align 4
  %62 = call i32 @test_table(i32 %60, i32 %61)
  %63 = load i32, i32* @exec_preserve_mode, align 4
  %64 = load i32, i32* @EXEC_PRESERVE_MODE, align 4
  %65 = call i32 @test_table(i32 %63, i32 %64)
  %66 = load i32, i32* @exec_utmp_mode, align 4
  %67 = load i32, i32* @EXEC_UTMP_MODE, align 4
  %68 = call i32 @test_table(i32 %66, i32 %67)
  %69 = load i32, i32* @image_type, align 4
  %70 = load i32, i32* @IMAGE_TYPE, align 4
  %71 = call i32 @test_table(i32 %69, i32 %70)
  %72 = load i32, i32* @import_verify, align 4
  %73 = load i32, i32* @IMPORT_VERIFY, align 4
  %74 = call i32 @test_table(i32 %72, i32 %73)
  %75 = load i32, i32* @job_mode, align 4
  %76 = load i32, i32* @JOB_MODE, align 4
  %77 = call i32 @test_table(i32 %75, i32 %76)
  %78 = load i32, i32* @job_result, align 4
  %79 = load i32, i32* @JOB_RESULT, align 4
  %80 = call i32 @test_table(i32 %78, i32 %79)
  %81 = load i32, i32* @job_state, align 4
  %82 = load i32, i32* @JOB_STATE, align 4
  %83 = call i32 @test_table(i32 %81, i32 %82)
  %84 = load i32, i32* @job_type, align 4
  %85 = load i32, i32* @JOB_TYPE, align 4
  %86 = call i32 @test_table(i32 %84, i32 %85)
  %87 = load i32, i32* @kill_mode, align 4
  %88 = load i32, i32* @KILL_MODE, align 4
  %89 = call i32 @test_table(i32 %87, i32 %88)
  %90 = load i32, i32* @kill_who, align 4
  %91 = load i32, i32* @KILL_WHO, align 4
  %92 = call i32 @test_table(i32 %90, i32 %91)
  %93 = load i32, i32* @locale_variable, align 4
  %94 = load i32, i32* @VARIABLE_LC, align 4
  %95 = call i32 @test_table(i32 %93, i32 %94)
  %96 = load i32, i32* @log_target, align 4
  %97 = load i32, i32* @LOG_TARGET, align 4
  %98 = call i32 @test_table(i32 %96, i32 %97)
  %99 = load i32, i32* @mac_address_policy, align 4
  %100 = load i32, i32* @MAC_ADDRESS_POLICY, align 4
  %101 = call i32 @test_table(i32 %99, i32 %100)
  %102 = load i32, i32* @manager_state, align 4
  %103 = load i32, i32* @MANAGER_STATE, align 4
  %104 = call i32 @test_table(i32 %102, i32 %103)
  %105 = load i32, i32* @manager_timestamp, align 4
  %106 = load i32, i32* @MANAGER_TIMESTAMP, align 4
  %107 = call i32 @test_table(i32 %105, i32 %106)
  %108 = load i32, i32* @mount_exec_command, align 4
  %109 = load i32, i32* @MOUNT_EXEC_COMMAND, align 4
  %110 = call i32 @test_table(i32 %108, i32 %109)
  %111 = load i32, i32* @mount_result, align 4
  %112 = load i32, i32* @MOUNT_RESULT, align 4
  %113 = call i32 @test_table(i32 %111, i32 %112)
  %114 = load i32, i32* @mount_state, align 4
  %115 = load i32, i32* @MOUNT_STATE, align 4
  %116 = call i32 @test_table(i32 %114, i32 %115)
  %117 = load i32, i32* @name_policy, align 4
  %118 = load i32, i32* @NAMEPOLICY, align 4
  %119 = call i32 @test_table(i32 %117, i32 %118)
  %120 = load i32, i32* @namespace_type, align 4
  %121 = load i32, i32* @NAMESPACE_TYPE, align 4
  %122 = call i32 @test_table(i32 %120, i32 %121)
  %123 = load i32, i32* @notify_access, align 4
  %124 = load i32, i32* @NOTIFY_ACCESS, align 4
  %125 = call i32 @test_table(i32 %123, i32 %124)
  %126 = load i32, i32* @notify_state, align 4
  %127 = load i32, i32* @NOTIFY_STATE, align 4
  %128 = call i32 @test_table(i32 %126, i32 %127)
  %129 = load i32, i32* @output_mode, align 4
  %130 = load i32, i32* @OUTPUT_MODE, align 4
  %131 = call i32 @test_table(i32 %129, i32 %130)
  %132 = load i32, i32* @partition_designator, align 4
  %133 = load i32, i32* @PARTITION_DESIGNATOR, align 4
  %134 = call i32 @test_table(i32 %132, i32 %133)
  %135 = load i32, i32* @path_result, align 4
  %136 = load i32, i32* @PATH_RESULT, align 4
  %137 = call i32 @test_table(i32 %135, i32 %136)
  %138 = load i32, i32* @path_state, align 4
  %139 = load i32, i32* @PATH_STATE, align 4
  %140 = call i32 @test_table(i32 %138, i32 %139)
  %141 = load i32, i32* @path_type, align 4
  %142 = load i32, i32* @PATH_TYPE, align 4
  %143 = call i32 @test_table(i32 %141, i32 %142)
  %144 = load i32, i32* @protect_home, align 4
  %145 = load i32, i32* @PROTECT_HOME, align 4
  %146 = call i32 @test_table(i32 %144, i32 %145)
  %147 = load i32, i32* @protect_system, align 4
  %148 = load i32, i32* @PROTECT_SYSTEM, align 4
  %149 = call i32 @test_table(i32 %147, i32 %148)
  %150 = load i32, i32* @resolve_support, align 4
  %151 = load i32, i32* @RESOLVE_SUPPORT, align 4
  %152 = call i32 @test_table(i32 %150, i32 %151)
  %153 = load i32, i32* @rlimit, align 4
  %154 = load i32, i32* @RLIMIT, align 4
  %155 = call i32 @test_table(i32 %153, i32 %154)
  %156 = load i32, i32* @scope_result, align 4
  %157 = load i32, i32* @SCOPE_RESULT, align 4
  %158 = call i32 @test_table(i32 %156, i32 %157)
  %159 = load i32, i32* @scope_state, align 4
  %160 = load i32, i32* @SCOPE_STATE, align 4
  %161 = call i32 @test_table(i32 %159, i32 %160)
  %162 = load i32, i32* @service_exec_command, align 4
  %163 = load i32, i32* @SERVICE_EXEC_COMMAND, align 4
  %164 = call i32 @test_table(i32 %162, i32 %163)
  %165 = load i32, i32* @service_restart, align 4
  %166 = load i32, i32* @SERVICE_RESTART, align 4
  %167 = call i32 @test_table(i32 %165, i32 %166)
  %168 = load i32, i32* @service_result, align 4
  %169 = load i32, i32* @SERVICE_RESULT, align 4
  %170 = call i32 @test_table(i32 %168, i32 %169)
  %171 = load i32, i32* @service_state, align 4
  %172 = load i32, i32* @SERVICE_STATE, align 4
  %173 = call i32 @test_table(i32 %171, i32 %172)
  %174 = load i32, i32* @service_type, align 4
  %175 = load i32, i32* @SERVICE_TYPE, align 4
  %176 = call i32 @test_table(i32 %174, i32 %175)
  %177 = load i32, i32* @show_status, align 4
  %178 = load i32, i32* @SHOW_STATUS, align 4
  %179 = call i32 @test_table(i32 %177, i32 %178)
  %180 = load i32, i32* @slice_state, align 4
  %181 = load i32, i32* @SLICE_STATE, align 4
  %182 = call i32 @test_table(i32 %180, i32 %181)
  %183 = load i32, i32* @socket_address_bind_ipv6_only, align 4
  %184 = load i32, i32* @SOCKET_ADDRESS_BIND_IPV6_ONLY, align 4
  %185 = call i32 @test_table(i32 %183, i32 %184)
  %186 = load i32, i32* @socket_exec_command, align 4
  %187 = load i32, i32* @SOCKET_EXEC_COMMAND, align 4
  %188 = call i32 @test_table(i32 %186, i32 %187)
  %189 = load i32, i32* @socket_result, align 4
  %190 = load i32, i32* @SOCKET_RESULT, align 4
  %191 = call i32 @test_table(i32 %189, i32 %190)
  %192 = load i32, i32* @socket_state, align 4
  %193 = load i32, i32* @SOCKET_STATE, align 4
  %194 = call i32 @test_table(i32 %192, i32 %193)
  %195 = load i32, i32* @split_mode, align 4
  %196 = load i32, i32* @SPLIT, align 4
  %197 = call i32 @test_table(i32 %195, i32 %196)
  %198 = load i32, i32* @storage, align 4
  %199 = load i32, i32* @STORAGE, align 4
  %200 = call i32 @test_table(i32 %198, i32 %199)
  %201 = load i32, i32* @swap_exec_command, align 4
  %202 = load i32, i32* @SWAP_EXEC_COMMAND, align 4
  %203 = call i32 @test_table(i32 %201, i32 %202)
  %204 = load i32, i32* @swap_result, align 4
  %205 = load i32, i32* @SWAP_RESULT, align 4
  %206 = call i32 @test_table(i32 %204, i32 %205)
  %207 = load i32, i32* @swap_state, align 4
  %208 = load i32, i32* @SWAP_STATE, align 4
  %209 = call i32 @test_table(i32 %207, i32 %208)
  %210 = load i32, i32* @target_state, align 4
  %211 = load i32, i32* @TARGET_STATE, align 4
  %212 = call i32 @test_table(i32 %210, i32 %211)
  %213 = load i32, i32* @timer_base, align 4
  %214 = load i32, i32* @TIMER_BASE, align 4
  %215 = call i32 @test_table(i32 %213, i32 %214)
  %216 = load i32, i32* @timer_result, align 4
  %217 = load i32, i32* @TIMER_RESULT, align 4
  %218 = call i32 @test_table(i32 %216, i32 %217)
  %219 = load i32, i32* @timer_state, align 4
  %220 = load i32, i32* @TIMER_STATE, align 4
  %221 = call i32 @test_table(i32 %219, i32 %220)
  %222 = load i32, i32* @unit_active_state, align 4
  %223 = load i32, i32* @UNIT_ACTIVE_STATE, align 4
  %224 = call i32 @test_table(i32 %222, i32 %223)
  %225 = load i32, i32* @unit_dependency, align 4
  %226 = load i32, i32* @UNIT_DEPENDENCY, align 4
  %227 = call i32 @test_table(i32 %225, i32 %226)
  %228 = load i32, i32* @unit_file_change_type, align 4
  %229 = load i32, i32* @UNIT_FILE_CHANGE_TYPE, align 4
  %230 = call i32 @test_table(i32 %228, i32 %229)
  %231 = load i32, i32* @unit_file_preset_mode, align 4
  %232 = load i32, i32* @UNIT_FILE_PRESET, align 4
  %233 = call i32 @test_table(i32 %231, i32 %232)
  %234 = load i32, i32* @unit_file_state, align 4
  %235 = load i32, i32* @UNIT_FILE_STATE, align 4
  %236 = call i32 @test_table(i32 %234, i32 %235)
  %237 = load i32, i32* @unit_load_state, align 4
  %238 = load i32, i32* @UNIT_LOAD_STATE, align 4
  %239 = call i32 @test_table(i32 %237, i32 %238)
  %240 = load i32, i32* @unit_type, align 4
  %241 = load i32, i32* @UNIT_TYPE, align 4
  %242 = call i32 @test_table(i32 %240, i32 %241)
  %243 = load i32, i32* @virtualization, align 4
  %244 = load i32, i32* @VIRTUALIZATION, align 4
  %245 = call i32 @test_table(i32 %243, i32 %244)
  %246 = load i32, i32* @object_compressed, align 4
  %247 = load i32, i32* @OBJECT_COMPRESSED, align 4
  %248 = call i32 @test_table_sparse(i32 %246, i32 %247)
  %249 = load i32, i32* @EXIT_SUCCESS, align 4
  ret i32 %249
}

declare dso_local i32 @test_table(i32, i32) #1

declare dso_local i32 @test_table_sparse(i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
