; ModuleID = '/home/carl/AnghaBench/systemd/src/test/extr_test-calendarspec.c_main.c'
source_filename = "/home/carl/AnghaBench/systemd/src/test/extr_test-calendarspec.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@.str = private unnamed_addr constant [24 x i8] c"Sat,Thu,Mon-Wed,Sat-Sun\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"Mon..Thu,Sat,Sun *-*-* 00:00:00\00", align 1
@.str.2 = private unnamed_addr constant [26 x i8] c"Sat,Thu,Mon..Wed,Sat..Sun\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"Mon,Sun 12-*-* 2,1:23\00", align 1
@.str.4 = private unnamed_addr constant [29 x i8] c"Mon,Sun 2012-*-* 01,02:23:00\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"Wed *-1\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"Wed *-*-01 00:00:00\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"Wed-Wed,Wed *-1\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"Wed..Wed,Wed *-1\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"Wed, 17:48\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"Wed *-*-* 17:48:00\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"Wednesday,\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"Wed *-*-* 00:00:00\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"Wed-Sat,Tue 12-10-15 1:2:3\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"Tue..Sat 2012-10-15 01:02:03\00", align 1
@.str.15 = private unnamed_addr constant [28 x i8] c"Wed..Sat,Tue 12-10-15 1:2:3\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"*-*-7 0:0:0\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"*-*-07 00:00:00\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"10-15\00", align 1
@.str.19 = private unnamed_addr constant [17 x i8] c"*-10-15 00:00:00\00", align 1
@.str.20 = private unnamed_addr constant [20 x i8] c"monday *-12-* 17:00\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"Mon *-12-* 17:00:00\00", align 1
@.str.22 = private unnamed_addr constant [26 x i8] c"Mon,Fri *-*-3,1,2 *:30:45\00", align 1
@.str.23 = private unnamed_addr constant [29 x i8] c"Mon,Fri *-*-01,02,03 *:30:45\00", align 1
@.str.24 = private unnamed_addr constant [21 x i8] c"12,14,13,12:20,10,30\00", align 1
@.str.25 = private unnamed_addr constant [27 x i8] c"*-*-* 12,13,14:10,20,30:00\00", align 1
@.str.26 = private unnamed_addr constant [26 x i8] c"mon,fri *-1/2-1,3 *:30:45\00", align 1
@.str.27 = private unnamed_addr constant [29 x i8] c"Mon,Fri *-01/2-01,03 *:30:45\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c"03-05 08:05:40\00", align 1
@.str.29 = private unnamed_addr constant [17 x i8] c"*-03-05 08:05:40\00", align 1
@.str.30 = private unnamed_addr constant [9 x i8] c"08:05:40\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"*-*-* 08:05:40\00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"05:40\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c"*-*-* 05:40:00\00", align 1
@.str.34 = private unnamed_addr constant [23 x i8] c"Sat,Sun 12-05 08:05:40\00", align 1
@.str.35 = private unnamed_addr constant [25 x i8] c"Sat,Sun *-12-05 08:05:40\00", align 1
@.str.36 = private unnamed_addr constant [17 x i8] c"Sat,Sun 08:05:40\00", align 1
@.str.37 = private unnamed_addr constant [23 x i8] c"Sat,Sun *-*-* 08:05:40\00", align 1
@.str.38 = private unnamed_addr constant [17 x i8] c"2003-03-05 05:40\00", align 1
@.str.39 = private unnamed_addr constant [20 x i8] c"2003-03-05 05:40:00\00", align 1
@.str.40 = private unnamed_addr constant [11 x i8] c"2003-03-05\00", align 1
@.str.41 = private unnamed_addr constant [20 x i8] c"2003-03-05 00:00:00\00", align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"03-05\00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c"*-03-05 00:00:00\00", align 1
@.str.44 = private unnamed_addr constant [7 x i8] c"hourly\00", align 1
@.str.45 = private unnamed_addr constant [14 x i8] c"*-*-* *:00:00\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"daily\00", align 1
@.str.47 = private unnamed_addr constant [15 x i8] c"*-*-* 00:00:00\00", align 1
@.str.48 = private unnamed_addr constant [8 x i8] c"monthly\00", align 1
@.str.49 = private unnamed_addr constant [16 x i8] c"*-*-01 00:00:00\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"weekly\00", align 1
@.str.51 = private unnamed_addr constant [19 x i8] c"Mon *-*-* 00:00:00\00", align 1
@.str.52 = private unnamed_addr constant [9 x i8] c"minutely\00", align 1
@.str.53 = private unnamed_addr constant [13 x i8] c"*-*-* *:*:00\00", align 1
@.str.54 = private unnamed_addr constant [10 x i8] c"quarterly\00", align 1
@.str.55 = private unnamed_addr constant [26 x i8] c"*-01,04,07,10-01 00:00:00\00", align 1
@.str.56 = private unnamed_addr constant [14 x i8] c"semi-annually\00", align 1
@.str.57 = private unnamed_addr constant [20 x i8] c"*-01,07-01 00:00:00\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"annually\00", align 1
@.str.59 = private unnamed_addr constant [17 x i8] c"*-01-01 00:00:00\00", align 1
@.str.60 = private unnamed_addr constant [6 x i8] c"*:2/3\00", align 1
@.str.61 = private unnamed_addr constant [16 x i8] c"*-*-* *:02/3:00\00", align 1
@.str.62 = private unnamed_addr constant [24 x i8] c"2015-10-25 01:00:00 uTc\00", align 1
@.str.63 = private unnamed_addr constant [24 x i8] c"2015-10-25 01:00:00 UTC\00", align 1
@.str.64 = private unnamed_addr constant [37 x i8] c"2015-10-25 01:00:00 Asia/Vladivostok\00", align 1
@.str.65 = private unnamed_addr constant [24 x i8] c"weekly Pacific/Auckland\00", align 1
@.str.66 = private unnamed_addr constant [36 x i8] c"Mon *-*-* 00:00:00 Pacific/Auckland\00", align 1
@.str.67 = private unnamed_addr constant [28 x i8] c"2016-03-27 03:17:00.4200005\00", align 1
@.str.68 = private unnamed_addr constant [27 x i8] c"2016-03-27 03:17:00.420001\00", align 1
@.str.69 = private unnamed_addr constant [25 x i8] c"2016-03-27 03:17:00/0.42\00", align 1
@.str.70 = private unnamed_addr constant [29 x i8] c"2016-03-27 03:17:00/0.420000\00", align 1
@.str.71 = private unnamed_addr constant [15 x i8] c"9..11,13:00,30\00", align 1
@.str.72 = private unnamed_addr constant [25 x i8] c"*-*-* 09..11,13:00,30:00\00", align 1
@.str.73 = private unnamed_addr constant [20 x i8] c"1..3-1..3 1..3:1..3\00", align 1
@.str.74 = private unnamed_addr constant [33 x i8] c"*-01..03-01..03 01..03:01..03:00\00", align 1
@.str.75 = private unnamed_addr constant [19 x i8] c"00:00:1.125..2.125\00", align 1
@.str.76 = private unnamed_addr constant [33 x i8] c"*-*-* 00:00:01.125000..02.125000\00", align 1
@.str.77 = private unnamed_addr constant [15 x i8] c"00:00:1.0..3.8\00", align 1
@.str.78 = private unnamed_addr constant [19 x i8] c"*-*-* 00:00:01..03\00", align 1
@.str.79 = private unnamed_addr constant [13 x i8] c"00:00:01..03\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"00:00:01/2,02..03\00", align 1
@.str.81 = private unnamed_addr constant [24 x i8] c"*-*-* 00:00:01/2,02..03\00", align 1
@.str.82 = private unnamed_addr constant [10 x i8] c"*-*~1 Utc\00", align 1
@.str.83 = private unnamed_addr constant [20 x i8] c"*-*~01 00:00:00 UTC\00", align 1
@.str.84 = private unnamed_addr constant [10 x i8] c"*-*~05,3 \00", align 1
@.str.85 = private unnamed_addr constant [19 x i8] c"*-*~03,05 00:00:00\00", align 1
@.str.86 = private unnamed_addr constant [15 x i8] c"*-*~* 00:00:00\00", align 1
@.str.87 = private unnamed_addr constant [7 x i8] c"Monday\00", align 1
@.str.88 = private unnamed_addr constant [13 x i8] c"Monday *-*-*\00", align 1
@.str.89 = private unnamed_addr constant [6 x i8] c"*-*-*\00", align 1
@.str.90 = private unnamed_addr constant [6 x i8] c"*:*:*\00", align 1
@.str.91 = private unnamed_addr constant [12 x i8] c"*-*-* *:*:*\00", align 1
@.str.92 = private unnamed_addr constant [4 x i8] c"*:*\00", align 1
@.str.93 = private unnamed_addr constant [5 x i8] c"12:*\00", align 1
@.str.94 = private unnamed_addr constant [14 x i8] c"*-*-* 12:*:00\00", align 1
@.str.95 = private unnamed_addr constant [5 x i8] c"*:30\00", align 1
@.str.96 = private unnamed_addr constant [14 x i8] c"*-*-* *:30:00\00", align 1
@.str.97 = private unnamed_addr constant [11 x i8] c"93..00-*-*\00", align 1
@.str.98 = private unnamed_addr constant [24 x i8] c"1993..2000-*-* 00:00:00\00", align 1
@.str.99 = private unnamed_addr constant [11 x i8] c"00..07-*-*\00", align 1
@.str.100 = private unnamed_addr constant [24 x i8] c"2000..2007-*-* 00:00:00\00", align 1
@.str.101 = private unnamed_addr constant [11 x i8] c"*:20..39/5\00", align 1
@.str.102 = private unnamed_addr constant [20 x i8] c"*-*-* *:20..35/5:00\00", align 1
@.str.103 = private unnamed_addr constant [15 x i8] c"00:00:20..40/1\00", align 1
@.str.104 = private unnamed_addr constant [19 x i8] c"*-*-* 00:00:20..40\00", align 1
@.str.105 = private unnamed_addr constant [14 x i8] c"*~03/1,03..05\00", align 1
@.str.106 = private unnamed_addr constant [25 x i8] c"*-*~03/1,03..05 00:00:00\00", align 1
@.str.107 = private unnamed_addr constant [12 x i8] c"@1493187147\00", align 1
@.str.108 = private unnamed_addr constant [24 x i8] c"2017-04-26 06:12:27 UTC\00", align 1
@.str.109 = private unnamed_addr constant [16 x i8] c"@1493187147 UTC\00", align 1
@.str.110 = private unnamed_addr constant [3 x i8] c"@0\00", align 1
@.str.111 = private unnamed_addr constant [24 x i8] c"1970-01-01 00:00:00 UTC\00", align 1
@.str.112 = private unnamed_addr constant [7 x i8] c"@0 UTC\00", align 1
@.str.113 = private unnamed_addr constant [20 x i8] c"2016-03-27 03:17:00\00", align 1
@.str.114 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.115 = private unnamed_addr constant [4 x i8] c"CET\00", align 1
@.str.116 = private unnamed_addr constant [4 x i8] c"EET\00", align 1
@.str.117 = private unnamed_addr constant [24 x i8] c"2016-03-27 03:17:00 UTC\00", align 1
@.str.118 = private unnamed_addr constant [34 x i8] c"2016-03-27 03:17:00.420000001 UTC\00", align 1
@.str.119 = private unnamed_addr constant [32 x i8] c"2016-03-27 03:17:00.4200005 UTC\00", align 1
@.str.120 = private unnamed_addr constant [23 x i8] c"2015-11-13 09:11:23.42\00", align 1
@.str.121 = private unnamed_addr constant [28 x i8] c"2015-11-13 09:11:23.42/1.77\00", align 1
@.str.122 = private unnamed_addr constant [13 x i8] c"Sun 16:00:00\00", align 1
@.str.123 = private unnamed_addr constant [8 x i8] c"*-04-31\00", align 1
@.str.124 = private unnamed_addr constant [15 x i8] c"2016-02~01 UTC\00", align 1
@.str.125 = private unnamed_addr constant [23 x i8] c"Mon 2017-05~01..07 UTC\00", align 1
@.str.126 = private unnamed_addr constant [21 x i8] c"Mon 2017-05~07/1 UTC\00", align 1
@.str.127 = private unnamed_addr constant [32 x i8] c"2017-08-06 9,11,13,15,17:00 UTC\00", align 1
@.str.128 = private unnamed_addr constant [26 x i8] c"2017-08-06 9..17/2:00 UTC\00", align 1
@.str.129 = private unnamed_addr constant [25 x i8] c"2016-12-* 3..21/6:00 UTC\00", align 1
@.str.130 = private unnamed_addr constant [37 x i8] c"2017-09-24 03:30:00 Pacific/Auckland\00", align 1
@.str.131 = private unnamed_addr constant [37 x i8] c"2017-09-24 02:30:00 Pacific/Auckland\00", align 1
@.str.132 = private unnamed_addr constant [37 x i8] c"2017-04-02 02:30:00 Pacific/Auckland\00", align 1
@.str.133 = private unnamed_addr constant [37 x i8] c"2017-04-02 03:30:00 Pacific/Auckland\00", align 1
@.str.134 = private unnamed_addr constant [37 x i8] c"2017-09-09 20:42:00 Pacific/Auckland\00", align 1
@.str.135 = private unnamed_addr constant [5 x i8] c"test\00", align 1
@.str.136 = private unnamed_addr constant [5 x i8] c" utc\00", align 1
@.str.137 = private unnamed_addr constant [5 x i8] c"    \00", align 1
@.str.138 = private unnamed_addr constant [2 x i8] c"7\00", align 1
@.str.139 = private unnamed_addr constant [11 x i8] c"121212:1:2\00", align 1
@.str.140 = private unnamed_addr constant [23 x i8] c"2000-03-05.23 00:00:00\00", align 1
@.str.141 = private unnamed_addr constant [22 x i8] c"2000-03-05 00:00.1:00\00", align 1
@.str.142 = private unnamed_addr constant [20 x i8] c"00:00:00/0.00000001\00", align 1
@.str.143 = private unnamed_addr constant [17 x i8] c"00:00:00.0..00.9\00", align 1
@.str.144 = private unnamed_addr constant [11 x i8] c"2016~11-22\00", align 1
@.str.145 = private unnamed_addr constant [8 x i8] c"*-*~5/5\00", align 1
@.str.146 = private unnamed_addr constant [15 x i8] c"Monday.. 12:00\00", align 1
@.str.147 = private unnamed_addr constant [9 x i8] c"Monday..\00", align 1
@.str.148 = private unnamed_addr constant [11 x i8] c"-00:+00/-5\00", align 1
@.str.149 = private unnamed_addr constant [10 x i8] c"00:+00/-5\00", align 1
@.str.150 = private unnamed_addr constant [24 x i8] c"2016- 11- 24 12: 30: 00\00", align 1
@.str.151 = private unnamed_addr constant [5 x i8] c"*~29\00", align 1
@.str.152 = private unnamed_addr constant [9 x i8] c"*~16..31\00", align 1
@.str.153 = private unnamed_addr constant [10 x i8] c"12..1/2-*\00", align 1
@.str.154 = private unnamed_addr constant [9 x i8] c"*:05..05\00", align 1
@.str.155 = private unnamed_addr constant [11 x i8] c"*:05..10/6\00", align 1
@.str.156 = private unnamed_addr constant [8 x i8] c"20/4:00\00", align 1
@.str.157 = private unnamed_addr constant [9 x i8] c"00:00/60\00", align 1
@.str.158 = private unnamed_addr constant [11 x i8] c"00:00:2300\00", align 1
@.str.159 = private unnamed_addr constant [27 x i8] c"00:00:18446744073709551615\00", align 1
@.str.160 = private unnamed_addr constant [19 x i8] c"@88588582097858858\00", align 1
@ERANGE = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main(i32 %0, i8** %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i8**, align 8
  %6 = alloca i32*, align 8
  store i32 0, i32* %3, align 4
  store i32 %0, i32* %4, align 4
  store i8** %1, i8*** %5, align 8
  %7 = call i32 @test_one(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0))
  %8 = call i32 @test_one(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0))
  %9 = call i32 @test_one(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0))
  %10 = call i32 @test_one(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0))
  %11 = call i32 @test_one(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0))
  %12 = call i32 @test_one(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0))
  %13 = call i32 @test_one(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0))
  %14 = call i32 @test_one(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0))
  %15 = call i32 @test_one(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0))
  %16 = call i32 @test_one(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i64 0, i64 0))
  %17 = call i32 @test_one(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i64 0, i64 0))
  %18 = call i32 @test_one(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.19, i64 0, i64 0))
  %19 = call i32 @test_one(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0))
  %20 = call i32 @test_one(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.23, i64 0, i64 0))
  %21 = call i32 @test_one(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.25, i64 0, i64 0))
  %22 = call i32 @test_one(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27, i64 0, i64 0))
  %23 = call i32 @test_one(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.29, i64 0, i64 0))
  %24 = call i32 @test_one(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i64 0, i64 0))
  %25 = call i32 @test_one(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i64 0, i64 0))
  %26 = call i32 @test_one(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.35, i64 0, i64 0))
  %27 = call i32 @test_one(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.37, i64 0, i64 0))
  %28 = call i32 @test_one(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.39, i64 0, i64 0))
  %29 = call i32 @test_one(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.41, i64 0, i64 0))
  %30 = call i32 @test_one(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0))
  %31 = call i32 @test_one(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.45, i64 0, i64 0))
  %32 = call i32 @test_one(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i64 0, i64 0))
  %33 = call i32 @test_one(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.49, i64 0, i64 0))
  %34 = call i32 @test_one(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.51, i64 0, i64 0))
  %35 = call i32 @test_one(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i64 0, i64 0))
  %36 = call i32 @test_one(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.55, i64 0, i64 0))
  %37 = call i32 @test_one(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.57, i64 0, i64 0))
  %38 = call i32 @test_one(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.59, i64 0, i64 0))
  %39 = call i32 @test_one(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i64 0, i64 0))
  %40 = call i32 @test_one(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.63, i64 0, i64 0))
  %41 = call i32 @test_one(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.64, i64 0, i64 0))
  %42 = call i32 @test_one(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.66, i64 0, i64 0))
  %43 = call i32 @test_one(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.68, i64 0, i64 0))
  %44 = call i32 @test_one(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.70, i64 0, i64 0))
  %45 = call i32 @test_one(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.72, i64 0, i64 0))
  %46 = call i32 @test_one(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.74, i64 0, i64 0))
  %47 = call i32 @test_one(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.76, i64 0, i64 0))
  %48 = call i32 @test_one(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.78, i64 0, i64 0))
  %49 = call i32 @test_one(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.78, i64 0, i64 0))
  %50 = call i32 @test_one(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.81, i64 0, i64 0))
  %51 = call i32 @test_one(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.83, i64 0, i64 0))
  %52 = call i32 @test_one(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.85, i64 0, i64 0))
  %53 = call i32 @test_one(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.86, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i64 0, i64 0))
  %54 = call i32 @test_one(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.51, i64 0, i64 0))
  %55 = call i32 @test_one(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.51, i64 0, i64 0))
  %56 = call i32 @test_one(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.47, i64 0, i64 0))
  %57 = call i32 @test_one(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.91, i64 0, i64 0))
  %58 = call i32 @test_one(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.92, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i64 0, i64 0))
  %59 = call i32 @test_one(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.94, i64 0, i64 0))
  %60 = call i32 @test_one(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.96, i64 0, i64 0))
  %61 = call i32 @test_one(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.97, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.98, i64 0, i64 0))
  %62 = call i32 @test_one(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.100, i64 0, i64 0))
  %63 = call i32 @test_one(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.101, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.102, i64 0, i64 0))
  %64 = call i32 @test_one(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.104, i64 0, i64 0))
  %65 = call i32 @test_one(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.106, i64 0, i64 0))
  %66 = call i32 @test_one(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.107, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.108, i64 0, i64 0))
  %67 = call i32 @test_one(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.108, i64 0, i64 0))
  %68 = call i32 @test_one(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.111, i64 0, i64 0))
  %69 = call i32 @test_one(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.111, i64 0, i64 0))
  %70 = call i32 @test_next(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.114, i64 0, i64 0), i32 12345, i32 984908544)
  %71 = call i32 @test_next(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.115, i64 0, i64 0), i32 12345, i32 -1920124160)
  %72 = call i32 @test_next(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.116, i64 0, i64 0), i32 12345, i32 -1)
  %73 = call i32 @test_next(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.117, i64 0, i64 0), i8* null, i32 12345, i32 984908544)
  %74 = call i32 @test_next(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.117, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.114, i64 0, i64 0), i32 12345, i32 984908544)
  %75 = call i32 @test_next(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.117, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.115, i64 0, i64 0), i32 12345, i32 984908544)
  %76 = call i32 @test_next(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.117, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.116, i64 0, i64 0), i32 12345, i32 984908544)
  %77 = call i32 @test_next(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.116, i64 0, i64 0), i32 12345, i32 985328544)
  %78 = call i32 @test_next(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.119, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.116, i64 0, i64 0), i32 12345, i32 985328545)
  %79 = call i32 @test_next(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.120, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.116, i64 0, i64 0), i32 12345, i32 -1000364704)
  %80 = call i32 @test_next(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.116, i64 0, i64 0), i32 -1000364704, i32 -998594704)
  %81 = call i32 @test_next(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.116, i64 0, i64 0), i32 -1000364705, i32 -1000364704)
  %82 = call i32 @test_next(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.115, i64 0, i64 0), i32 442139200, i32 -127788032)
  %83 = call i32 @test_next(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.123, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.114, i64 0, i64 0), i32 12345, i32 -1)
  %84 = call i32 @test_next(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.114, i64 0, i64 0), i32 12345, i32 1417052160)
  %85 = call i32 @test_next(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.114, i64 0, i64 0), i32 12345, i32 1581391872)
  %86 = call i32 @test_next(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.114, i64 0, i64 0), i32 12345, i32 1581391872)
  %87 = call i32 @test_next(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.114, i64 0, i64 0), i32 -1867789824, i32 -67789824)
  %88 = call i32 @test_next(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.128, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.114, i64 0, i64 0), i32 -1867789824, i32 -67789824)
  %89 = call i32 @test_next(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.129, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.114, i64 0, i64 0), i32 -920644607, i32 -795481088)
  %90 = call i32 @test_next(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.130, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.114, i64 0, i64 0), i32 12345, i32 688769536)
  %91 = call i32 @test_next(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.131, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.114, i64 0, i64 0), i32 12345, i32 -1)
  %92 = call i32 @test_next(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.132, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.114, i64 0, i64 0), i32 12345, i32 -331381248)
  %93 = call i32 @test_next(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.132, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.114, i64 0, i64 0), i32 -331381248, i32 -1)
  %94 = call i32 @test_next(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.133, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.114, i64 0, i64 0), i32 12345, i32 -1721315840)
  %95 = call i32 @test_next(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.134, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.114, i64 0, i64 0), i32 12345, i32 -1430583808)
  %96 = call i32 @test_next(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.134, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.116, i64 0, i64 0), i32 12345, i32 -1430583808)
  %97 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.135, i64 0, i64 0), i32** %6)
  %98 = icmp slt i32 %97, 0
  %99 = zext i1 %98 to i32
  %100 = call i32 @assert_se(i32 %99)
  %101 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.136, i64 0, i64 0), i32** %6)
  %102 = icmp slt i32 %101, 0
  %103 = zext i1 %102 to i32
  %104 = call i32 @assert_se(i32 %103)
  %105 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.137, i64 0, i64 0), i32** %6)
  %106 = icmp slt i32 %105, 0
  %107 = zext i1 %106 to i32
  %108 = call i32 @assert_se(i32 %107)
  %109 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.114, i64 0, i64 0), i32** %6)
  %110 = icmp slt i32 %109, 0
  %111 = zext i1 %110 to i32
  %112 = call i32 @assert_se(i32 %111)
  %113 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.138, i64 0, i64 0), i32** %6)
  %114 = icmp slt i32 %113, 0
  %115 = zext i1 %114 to i32
  %116 = call i32 @assert_se(i32 %115)
  %117 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.139, i64 0, i64 0), i32** %6)
  %118 = icmp slt i32 %117, 0
  %119 = zext i1 %118 to i32
  %120 = call i32 @assert_se(i32 %119)
  %121 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.140, i64 0, i64 0), i32** %6)
  %122 = icmp slt i32 %121, 0
  %123 = zext i1 %122 to i32
  %124 = call i32 @assert_se(i32 %123)
  %125 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.141, i64 0, i64 0), i32** %6)
  %126 = icmp slt i32 %125, 0
  %127 = zext i1 %126 to i32
  %128 = call i32 @assert_se(i32 %127)
  %129 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.142, i64 0, i64 0), i32** %6)
  %130 = icmp slt i32 %129, 0
  %131 = zext i1 %130 to i32
  %132 = call i32 @assert_se(i32 %131)
  %133 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.143, i64 0, i64 0), i32** %6)
  %134 = icmp slt i32 %133, 0
  %135 = zext i1 %134 to i32
  %136 = call i32 @assert_se(i32 %135)
  %137 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.144, i64 0, i64 0), i32** %6)
  %138 = icmp slt i32 %137, 0
  %139 = zext i1 %138 to i32
  %140 = call i32 @assert_se(i32 %139)
  %141 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.145, i64 0, i64 0), i32** %6)
  %142 = icmp slt i32 %141, 0
  %143 = zext i1 %142 to i32
  %144 = call i32 @assert_se(i32 %143)
  %145 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.146, i64 0, i64 0), i32** %6)
  %146 = icmp slt i32 %145, 0
  %147 = zext i1 %146 to i32
  %148 = call i32 @assert_se(i32 %147)
  %149 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.147, i64 0, i64 0), i32** %6)
  %150 = icmp slt i32 %149, 0
  %151 = zext i1 %150 to i32
  %152 = call i32 @assert_se(i32 %151)
  %153 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.148, i64 0, i64 0), i32** %6)
  %154 = icmp slt i32 %153, 0
  %155 = zext i1 %154 to i32
  %156 = call i32 @assert_se(i32 %155)
  %157 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.149, i64 0, i64 0), i32** %6)
  %158 = icmp slt i32 %157, 0
  %159 = zext i1 %158 to i32
  %160 = call i32 @assert_se(i32 %159)
  %161 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.150, i64 0, i64 0), i32** %6)
  %162 = icmp slt i32 %161, 0
  %163 = zext i1 %162 to i32
  %164 = call i32 @assert_se(i32 %163)
  %165 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.151, i64 0, i64 0), i32** %6)
  %166 = icmp slt i32 %165, 0
  %167 = zext i1 %166 to i32
  %168 = call i32 @assert_se(i32 %167)
  %169 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.152, i64 0, i64 0), i32** %6)
  %170 = icmp slt i32 %169, 0
  %171 = zext i1 %170 to i32
  %172 = call i32 @assert_se(i32 %171)
  %173 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.153, i64 0, i64 0), i32** %6)
  %174 = icmp slt i32 %173, 0
  %175 = zext i1 %174 to i32
  %176 = call i32 @assert_se(i32 %175)
  %177 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.154, i64 0, i64 0), i32** %6)
  %178 = icmp slt i32 %177, 0
  %179 = zext i1 %178 to i32
  %180 = call i32 @assert_se(i32 %179)
  %181 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.155, i64 0, i64 0), i32** %6)
  %182 = icmp slt i32 %181, 0
  %183 = zext i1 %182 to i32
  %184 = call i32 @assert_se(i32 %183)
  %185 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.156, i64 0, i64 0), i32** %6)
  %186 = icmp slt i32 %185, 0
  %187 = zext i1 %186 to i32
  %188 = call i32 @assert_se(i32 %187)
  %189 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.157, i64 0, i64 0), i32** %6)
  %190 = icmp slt i32 %189, 0
  %191 = zext i1 %190 to i32
  %192 = call i32 @assert_se(i32 %191)
  %193 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.158, i64 0, i64 0), i32** %6)
  %194 = icmp slt i32 %193, 0
  %195 = zext i1 %194 to i32
  %196 = call i32 @assert_se(i32 %195)
  %197 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.159, i64 0, i64 0), i32** %6)
  %198 = icmp slt i32 %197, 0
  %199 = zext i1 %198 to i32
  %200 = call i32 @assert_se(i32 %199)
  %201 = call i32 @calendar_spec_from_string(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.160, i64 0, i64 0), i32** %6)
  %202 = load i32, i32* @ERANGE, align 4
  %203 = sub nsw i32 0, %202
  %204 = icmp eq i32 %201, %203
  %205 = zext i1 %204 to i32
  %206 = call i32 @assert_se(i32 %205)
  %207 = call i32 (...) @test_timestamp()
  %208 = call i32 (...) @test_hourly_bug_4031()
  ret i32 0
}

declare dso_local i32 @test_one(i8*, i8*) #1

declare dso_local i32 @test_next(i8*, i8*, i32, i32) #1

declare dso_local i32 @assert_se(i32) #1

declare dso_local i32 @calendar_spec_from_string(i8*, i32**) #1

declare dso_local i32 @test_timestamp(...) #1

declare dso_local i32 @test_hourly_bug_4031(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
