; ModuleID = '/home/carl/AnghaBench/linux/arch/c6x/kernel/extr_asm-offsets.c_foo.c'
source_filename = "/home/carl/AnghaBench/linux/arch/c6x/kernel/extr_asm-offsets.c_foo.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@REGS_A16 = common dso_local global i32 0, align 4
@pt_regs = common dso_local global i32 0, align 4
@a16 = common dso_local global i32 0, align 4
@REGS_A17 = common dso_local global i32 0, align 4
@a17 = common dso_local global i32 0, align 4
@REGS_A18 = common dso_local global i32 0, align 4
@a18 = common dso_local global i32 0, align 4
@REGS_A19 = common dso_local global i32 0, align 4
@a19 = common dso_local global i32 0, align 4
@REGS_A20 = common dso_local global i32 0, align 4
@a20 = common dso_local global i32 0, align 4
@REGS_A21 = common dso_local global i32 0, align 4
@a21 = common dso_local global i32 0, align 4
@REGS_A22 = common dso_local global i32 0, align 4
@a22 = common dso_local global i32 0, align 4
@REGS_A23 = common dso_local global i32 0, align 4
@a23 = common dso_local global i32 0, align 4
@REGS_A24 = common dso_local global i32 0, align 4
@a24 = common dso_local global i32 0, align 4
@REGS_A25 = common dso_local global i32 0, align 4
@a25 = common dso_local global i32 0, align 4
@REGS_A26 = common dso_local global i32 0, align 4
@a26 = common dso_local global i32 0, align 4
@REGS_A27 = common dso_local global i32 0, align 4
@a27 = common dso_local global i32 0, align 4
@REGS_A28 = common dso_local global i32 0, align 4
@a28 = common dso_local global i32 0, align 4
@REGS_A29 = common dso_local global i32 0, align 4
@a29 = common dso_local global i32 0, align 4
@REGS_A30 = common dso_local global i32 0, align 4
@a30 = common dso_local global i32 0, align 4
@REGS_A31 = common dso_local global i32 0, align 4
@a31 = common dso_local global i32 0, align 4
@REGS_B16 = common dso_local global i32 0, align 4
@b16 = common dso_local global i32 0, align 4
@REGS_B17 = common dso_local global i32 0, align 4
@b17 = common dso_local global i32 0, align 4
@REGS_B18 = common dso_local global i32 0, align 4
@b18 = common dso_local global i32 0, align 4
@REGS_B19 = common dso_local global i32 0, align 4
@b19 = common dso_local global i32 0, align 4
@REGS_B20 = common dso_local global i32 0, align 4
@b20 = common dso_local global i32 0, align 4
@REGS_B21 = common dso_local global i32 0, align 4
@b21 = common dso_local global i32 0, align 4
@REGS_B22 = common dso_local global i32 0, align 4
@b22 = common dso_local global i32 0, align 4
@REGS_B23 = common dso_local global i32 0, align 4
@b23 = common dso_local global i32 0, align 4
@REGS_B24 = common dso_local global i32 0, align 4
@b24 = common dso_local global i32 0, align 4
@REGS_B25 = common dso_local global i32 0, align 4
@b25 = common dso_local global i32 0, align 4
@REGS_B26 = common dso_local global i32 0, align 4
@b26 = common dso_local global i32 0, align 4
@REGS_B27 = common dso_local global i32 0, align 4
@b27 = common dso_local global i32 0, align 4
@REGS_B28 = common dso_local global i32 0, align 4
@b28 = common dso_local global i32 0, align 4
@REGS_B29 = common dso_local global i32 0, align 4
@b29 = common dso_local global i32 0, align 4
@REGS_B30 = common dso_local global i32 0, align 4
@b30 = common dso_local global i32 0, align 4
@REGS_B31 = common dso_local global i32 0, align 4
@b31 = common dso_local global i32 0, align 4
@REGS_A0 = common dso_local global i32 0, align 4
@a0 = common dso_local global i32 0, align 4
@REGS_A1 = common dso_local global i32 0, align 4
@a1 = common dso_local global i32 0, align 4
@REGS_A2 = common dso_local global i32 0, align 4
@a2 = common dso_local global i32 0, align 4
@REGS_A3 = common dso_local global i32 0, align 4
@a3 = common dso_local global i32 0, align 4
@REGS_A4 = common dso_local global i32 0, align 4
@a4 = common dso_local global i32 0, align 4
@REGS_A5 = common dso_local global i32 0, align 4
@a5 = common dso_local global i32 0, align 4
@REGS_A6 = common dso_local global i32 0, align 4
@a6 = common dso_local global i32 0, align 4
@REGS_A7 = common dso_local global i32 0, align 4
@a7 = common dso_local global i32 0, align 4
@REGS_A8 = common dso_local global i32 0, align 4
@a8 = common dso_local global i32 0, align 4
@REGS_A9 = common dso_local global i32 0, align 4
@a9 = common dso_local global i32 0, align 4
@REGS_A10 = common dso_local global i32 0, align 4
@a10 = common dso_local global i32 0, align 4
@REGS_A11 = common dso_local global i32 0, align 4
@a11 = common dso_local global i32 0, align 4
@REGS_A12 = common dso_local global i32 0, align 4
@a12 = common dso_local global i32 0, align 4
@REGS_A13 = common dso_local global i32 0, align 4
@a13 = common dso_local global i32 0, align 4
@REGS_A14 = common dso_local global i32 0, align 4
@a14 = common dso_local global i32 0, align 4
@REGS_A15 = common dso_local global i32 0, align 4
@a15 = common dso_local global i32 0, align 4
@REGS_B0 = common dso_local global i32 0, align 4
@b0 = common dso_local global i32 0, align 4
@REGS_B1 = common dso_local global i32 0, align 4
@b1 = common dso_local global i32 0, align 4
@REGS_B2 = common dso_local global i32 0, align 4
@b2 = common dso_local global i32 0, align 4
@REGS_B3 = common dso_local global i32 0, align 4
@b3 = common dso_local global i32 0, align 4
@REGS_B4 = common dso_local global i32 0, align 4
@b4 = common dso_local global i32 0, align 4
@REGS_B5 = common dso_local global i32 0, align 4
@b5 = common dso_local global i32 0, align 4
@REGS_B6 = common dso_local global i32 0, align 4
@b6 = common dso_local global i32 0, align 4
@REGS_B7 = common dso_local global i32 0, align 4
@b7 = common dso_local global i32 0, align 4
@REGS_B8 = common dso_local global i32 0, align 4
@b8 = common dso_local global i32 0, align 4
@REGS_B9 = common dso_local global i32 0, align 4
@b9 = common dso_local global i32 0, align 4
@REGS_B10 = common dso_local global i32 0, align 4
@b10 = common dso_local global i32 0, align 4
@REGS_B11 = common dso_local global i32 0, align 4
@b11 = common dso_local global i32 0, align 4
@REGS_B12 = common dso_local global i32 0, align 4
@b12 = common dso_local global i32 0, align 4
@REGS_B13 = common dso_local global i32 0, align 4
@b13 = common dso_local global i32 0, align 4
@REGS_DP = common dso_local global i32 0, align 4
@dp = common dso_local global i32 0, align 4
@REGS_SP = common dso_local global i32 0, align 4
@sp = common dso_local global i32 0, align 4
@REGS_TSR = common dso_local global i32 0, align 4
@tsr = common dso_local global i32 0, align 4
@REGS_ORIG_A4 = common dso_local global i32 0, align 4
@orig_a4 = common dso_local global i32 0, align 4
@REGS__END = common dso_local global i32 0, align 4
@THREAD_PC = common dso_local global i32 0, align 4
@thread_struct = common dso_local global i32 0, align 4
@pc = common dso_local global i32 0, align 4
@THREAD_B15_14 = common dso_local global i32 0, align 4
@b15_14 = common dso_local global i32 0, align 4
@THREAD_A15_14 = common dso_local global i32 0, align 4
@a15_14 = common dso_local global i32 0, align 4
@THREAD_B13_12 = common dso_local global i32 0, align 4
@b13_12 = common dso_local global i32 0, align 4
@THREAD_A13_12 = common dso_local global i32 0, align 4
@a13_12 = common dso_local global i32 0, align 4
@THREAD_B11_10 = common dso_local global i32 0, align 4
@b11_10 = common dso_local global i32 0, align 4
@THREAD_A11_10 = common dso_local global i32 0, align 4
@a11_10 = common dso_local global i32 0, align 4
@THREAD_RICL_ICL = common dso_local global i32 0, align 4
@ricl_icl = common dso_local global i32 0, align 4
@TASK_STATE = common dso_local global i32 0, align 4
@task_struct = common dso_local global i32 0, align 4
@state = common dso_local global i32 0, align 4
@THREAD_INFO_FLAGS = common dso_local global i32 0, align 4
@thread_info = common dso_local global i32 0, align 4
@flags = common dso_local global i32 0, align 4
@THREAD_INFO_PREEMPT_COUNT = common dso_local global i32 0, align 4
@preempt_count = common dso_local global i32 0, align 4
@KTHREAD_SHIFT = common dso_local global i32 0, align 4
@THREAD_SHIFT = common dso_local global i32 0, align 4
@KTHREAD_START_SP = common dso_local global i32 0, align 4
@THREAD_START_SP = common dso_local global i32 0, align 4
@ENOSYS_ = common dso_local global i32 0, align 4
@ENOSYS = common dso_local global i32 0, align 4
@NR_SYSCALLS_ = common dso_local global i32 0, align 4
@__NR_syscalls = common dso_local global i32 0, align 4
@_TIF_SYSCALL_TRACE = common dso_local global i32 0, align 4
@TIF_SYSCALL_TRACE = common dso_local global i32 0, align 4
@_TIF_NOTIFY_RESUME = common dso_local global i32 0, align 4
@TIF_NOTIFY_RESUME = common dso_local global i32 0, align 4
@_TIF_SIGPENDING = common dso_local global i32 0, align 4
@TIF_SIGPENDING = common dso_local global i32 0, align 4
@_TIF_NEED_RESCHED = common dso_local global i32 0, align 4
@TIF_NEED_RESCHED = common dso_local global i32 0, align 4
@_TIF_ALLWORK_MASK = common dso_local global i32 0, align 4
@TIF_ALLWORK_MASK = common dso_local global i32 0, align 4
@_TIF_WORK_MASK = common dso_local global i32 0, align 4
@TIF_WORK_MASK = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @foo() #0 {
  %1 = load i32, i32* @REGS_A16, align 4
  %2 = load i32, i32* @pt_regs, align 4
  %3 = load i32, i32* @a16, align 4
  %4 = call i32 @OFFSET(i32 %1, i32 %2, i32 %3)
  %5 = load i32, i32* @REGS_A17, align 4
  %6 = load i32, i32* @pt_regs, align 4
  %7 = load i32, i32* @a17, align 4
  %8 = call i32 @OFFSET(i32 %5, i32 %6, i32 %7)
  %9 = load i32, i32* @REGS_A18, align 4
  %10 = load i32, i32* @pt_regs, align 4
  %11 = load i32, i32* @a18, align 4
  %12 = call i32 @OFFSET(i32 %9, i32 %10, i32 %11)
  %13 = load i32, i32* @REGS_A19, align 4
  %14 = load i32, i32* @pt_regs, align 4
  %15 = load i32, i32* @a19, align 4
  %16 = call i32 @OFFSET(i32 %13, i32 %14, i32 %15)
  %17 = load i32, i32* @REGS_A20, align 4
  %18 = load i32, i32* @pt_regs, align 4
  %19 = load i32, i32* @a20, align 4
  %20 = call i32 @OFFSET(i32 %17, i32 %18, i32 %19)
  %21 = load i32, i32* @REGS_A21, align 4
  %22 = load i32, i32* @pt_regs, align 4
  %23 = load i32, i32* @a21, align 4
  %24 = call i32 @OFFSET(i32 %21, i32 %22, i32 %23)
  %25 = load i32, i32* @REGS_A22, align 4
  %26 = load i32, i32* @pt_regs, align 4
  %27 = load i32, i32* @a22, align 4
  %28 = call i32 @OFFSET(i32 %25, i32 %26, i32 %27)
  %29 = load i32, i32* @REGS_A23, align 4
  %30 = load i32, i32* @pt_regs, align 4
  %31 = load i32, i32* @a23, align 4
  %32 = call i32 @OFFSET(i32 %29, i32 %30, i32 %31)
  %33 = load i32, i32* @REGS_A24, align 4
  %34 = load i32, i32* @pt_regs, align 4
  %35 = load i32, i32* @a24, align 4
  %36 = call i32 @OFFSET(i32 %33, i32 %34, i32 %35)
  %37 = load i32, i32* @REGS_A25, align 4
  %38 = load i32, i32* @pt_regs, align 4
  %39 = load i32, i32* @a25, align 4
  %40 = call i32 @OFFSET(i32 %37, i32 %38, i32 %39)
  %41 = load i32, i32* @REGS_A26, align 4
  %42 = load i32, i32* @pt_regs, align 4
  %43 = load i32, i32* @a26, align 4
  %44 = call i32 @OFFSET(i32 %41, i32 %42, i32 %43)
  %45 = load i32, i32* @REGS_A27, align 4
  %46 = load i32, i32* @pt_regs, align 4
  %47 = load i32, i32* @a27, align 4
  %48 = call i32 @OFFSET(i32 %45, i32 %46, i32 %47)
  %49 = load i32, i32* @REGS_A28, align 4
  %50 = load i32, i32* @pt_regs, align 4
  %51 = load i32, i32* @a28, align 4
  %52 = call i32 @OFFSET(i32 %49, i32 %50, i32 %51)
  %53 = load i32, i32* @REGS_A29, align 4
  %54 = load i32, i32* @pt_regs, align 4
  %55 = load i32, i32* @a29, align 4
  %56 = call i32 @OFFSET(i32 %53, i32 %54, i32 %55)
  %57 = load i32, i32* @REGS_A30, align 4
  %58 = load i32, i32* @pt_regs, align 4
  %59 = load i32, i32* @a30, align 4
  %60 = call i32 @OFFSET(i32 %57, i32 %58, i32 %59)
  %61 = load i32, i32* @REGS_A31, align 4
  %62 = load i32, i32* @pt_regs, align 4
  %63 = load i32, i32* @a31, align 4
  %64 = call i32 @OFFSET(i32 %61, i32 %62, i32 %63)
  %65 = load i32, i32* @REGS_B16, align 4
  %66 = load i32, i32* @pt_regs, align 4
  %67 = load i32, i32* @b16, align 4
  %68 = call i32 @OFFSET(i32 %65, i32 %66, i32 %67)
  %69 = load i32, i32* @REGS_B17, align 4
  %70 = load i32, i32* @pt_regs, align 4
  %71 = load i32, i32* @b17, align 4
  %72 = call i32 @OFFSET(i32 %69, i32 %70, i32 %71)
  %73 = load i32, i32* @REGS_B18, align 4
  %74 = load i32, i32* @pt_regs, align 4
  %75 = load i32, i32* @b18, align 4
  %76 = call i32 @OFFSET(i32 %73, i32 %74, i32 %75)
  %77 = load i32, i32* @REGS_B19, align 4
  %78 = load i32, i32* @pt_regs, align 4
  %79 = load i32, i32* @b19, align 4
  %80 = call i32 @OFFSET(i32 %77, i32 %78, i32 %79)
  %81 = load i32, i32* @REGS_B20, align 4
  %82 = load i32, i32* @pt_regs, align 4
  %83 = load i32, i32* @b20, align 4
  %84 = call i32 @OFFSET(i32 %81, i32 %82, i32 %83)
  %85 = load i32, i32* @REGS_B21, align 4
  %86 = load i32, i32* @pt_regs, align 4
  %87 = load i32, i32* @b21, align 4
  %88 = call i32 @OFFSET(i32 %85, i32 %86, i32 %87)
  %89 = load i32, i32* @REGS_B22, align 4
  %90 = load i32, i32* @pt_regs, align 4
  %91 = load i32, i32* @b22, align 4
  %92 = call i32 @OFFSET(i32 %89, i32 %90, i32 %91)
  %93 = load i32, i32* @REGS_B23, align 4
  %94 = load i32, i32* @pt_regs, align 4
  %95 = load i32, i32* @b23, align 4
  %96 = call i32 @OFFSET(i32 %93, i32 %94, i32 %95)
  %97 = load i32, i32* @REGS_B24, align 4
  %98 = load i32, i32* @pt_regs, align 4
  %99 = load i32, i32* @b24, align 4
  %100 = call i32 @OFFSET(i32 %97, i32 %98, i32 %99)
  %101 = load i32, i32* @REGS_B25, align 4
  %102 = load i32, i32* @pt_regs, align 4
  %103 = load i32, i32* @b25, align 4
  %104 = call i32 @OFFSET(i32 %101, i32 %102, i32 %103)
  %105 = load i32, i32* @REGS_B26, align 4
  %106 = load i32, i32* @pt_regs, align 4
  %107 = load i32, i32* @b26, align 4
  %108 = call i32 @OFFSET(i32 %105, i32 %106, i32 %107)
  %109 = load i32, i32* @REGS_B27, align 4
  %110 = load i32, i32* @pt_regs, align 4
  %111 = load i32, i32* @b27, align 4
  %112 = call i32 @OFFSET(i32 %109, i32 %110, i32 %111)
  %113 = load i32, i32* @REGS_B28, align 4
  %114 = load i32, i32* @pt_regs, align 4
  %115 = load i32, i32* @b28, align 4
  %116 = call i32 @OFFSET(i32 %113, i32 %114, i32 %115)
  %117 = load i32, i32* @REGS_B29, align 4
  %118 = load i32, i32* @pt_regs, align 4
  %119 = load i32, i32* @b29, align 4
  %120 = call i32 @OFFSET(i32 %117, i32 %118, i32 %119)
  %121 = load i32, i32* @REGS_B30, align 4
  %122 = load i32, i32* @pt_regs, align 4
  %123 = load i32, i32* @b30, align 4
  %124 = call i32 @OFFSET(i32 %121, i32 %122, i32 %123)
  %125 = load i32, i32* @REGS_B31, align 4
  %126 = load i32, i32* @pt_regs, align 4
  %127 = load i32, i32* @b31, align 4
  %128 = call i32 @OFFSET(i32 %125, i32 %126, i32 %127)
  %129 = load i32, i32* @REGS_A0, align 4
  %130 = load i32, i32* @pt_regs, align 4
  %131 = load i32, i32* @a0, align 4
  %132 = call i32 @OFFSET(i32 %129, i32 %130, i32 %131)
  %133 = load i32, i32* @REGS_A1, align 4
  %134 = load i32, i32* @pt_regs, align 4
  %135 = load i32, i32* @a1, align 4
  %136 = call i32 @OFFSET(i32 %133, i32 %134, i32 %135)
  %137 = load i32, i32* @REGS_A2, align 4
  %138 = load i32, i32* @pt_regs, align 4
  %139 = load i32, i32* @a2, align 4
  %140 = call i32 @OFFSET(i32 %137, i32 %138, i32 %139)
  %141 = load i32, i32* @REGS_A3, align 4
  %142 = load i32, i32* @pt_regs, align 4
  %143 = load i32, i32* @a3, align 4
  %144 = call i32 @OFFSET(i32 %141, i32 %142, i32 %143)
  %145 = load i32, i32* @REGS_A4, align 4
  %146 = load i32, i32* @pt_regs, align 4
  %147 = load i32, i32* @a4, align 4
  %148 = call i32 @OFFSET(i32 %145, i32 %146, i32 %147)
  %149 = load i32, i32* @REGS_A5, align 4
  %150 = load i32, i32* @pt_regs, align 4
  %151 = load i32, i32* @a5, align 4
  %152 = call i32 @OFFSET(i32 %149, i32 %150, i32 %151)
  %153 = load i32, i32* @REGS_A6, align 4
  %154 = load i32, i32* @pt_regs, align 4
  %155 = load i32, i32* @a6, align 4
  %156 = call i32 @OFFSET(i32 %153, i32 %154, i32 %155)
  %157 = load i32, i32* @REGS_A7, align 4
  %158 = load i32, i32* @pt_regs, align 4
  %159 = load i32, i32* @a7, align 4
  %160 = call i32 @OFFSET(i32 %157, i32 %158, i32 %159)
  %161 = load i32, i32* @REGS_A8, align 4
  %162 = load i32, i32* @pt_regs, align 4
  %163 = load i32, i32* @a8, align 4
  %164 = call i32 @OFFSET(i32 %161, i32 %162, i32 %163)
  %165 = load i32, i32* @REGS_A9, align 4
  %166 = load i32, i32* @pt_regs, align 4
  %167 = load i32, i32* @a9, align 4
  %168 = call i32 @OFFSET(i32 %165, i32 %166, i32 %167)
  %169 = load i32, i32* @REGS_A10, align 4
  %170 = load i32, i32* @pt_regs, align 4
  %171 = load i32, i32* @a10, align 4
  %172 = call i32 @OFFSET(i32 %169, i32 %170, i32 %171)
  %173 = load i32, i32* @REGS_A11, align 4
  %174 = load i32, i32* @pt_regs, align 4
  %175 = load i32, i32* @a11, align 4
  %176 = call i32 @OFFSET(i32 %173, i32 %174, i32 %175)
  %177 = load i32, i32* @REGS_A12, align 4
  %178 = load i32, i32* @pt_regs, align 4
  %179 = load i32, i32* @a12, align 4
  %180 = call i32 @OFFSET(i32 %177, i32 %178, i32 %179)
  %181 = load i32, i32* @REGS_A13, align 4
  %182 = load i32, i32* @pt_regs, align 4
  %183 = load i32, i32* @a13, align 4
  %184 = call i32 @OFFSET(i32 %181, i32 %182, i32 %183)
  %185 = load i32, i32* @REGS_A14, align 4
  %186 = load i32, i32* @pt_regs, align 4
  %187 = load i32, i32* @a14, align 4
  %188 = call i32 @OFFSET(i32 %185, i32 %186, i32 %187)
  %189 = load i32, i32* @REGS_A15, align 4
  %190 = load i32, i32* @pt_regs, align 4
  %191 = load i32, i32* @a15, align 4
  %192 = call i32 @OFFSET(i32 %189, i32 %190, i32 %191)
  %193 = load i32, i32* @REGS_B0, align 4
  %194 = load i32, i32* @pt_regs, align 4
  %195 = load i32, i32* @b0, align 4
  %196 = call i32 @OFFSET(i32 %193, i32 %194, i32 %195)
  %197 = load i32, i32* @REGS_B1, align 4
  %198 = load i32, i32* @pt_regs, align 4
  %199 = load i32, i32* @b1, align 4
  %200 = call i32 @OFFSET(i32 %197, i32 %198, i32 %199)
  %201 = load i32, i32* @REGS_B2, align 4
  %202 = load i32, i32* @pt_regs, align 4
  %203 = load i32, i32* @b2, align 4
  %204 = call i32 @OFFSET(i32 %201, i32 %202, i32 %203)
  %205 = load i32, i32* @REGS_B3, align 4
  %206 = load i32, i32* @pt_regs, align 4
  %207 = load i32, i32* @b3, align 4
  %208 = call i32 @OFFSET(i32 %205, i32 %206, i32 %207)
  %209 = load i32, i32* @REGS_B4, align 4
  %210 = load i32, i32* @pt_regs, align 4
  %211 = load i32, i32* @b4, align 4
  %212 = call i32 @OFFSET(i32 %209, i32 %210, i32 %211)
  %213 = load i32, i32* @REGS_B5, align 4
  %214 = load i32, i32* @pt_regs, align 4
  %215 = load i32, i32* @b5, align 4
  %216 = call i32 @OFFSET(i32 %213, i32 %214, i32 %215)
  %217 = load i32, i32* @REGS_B6, align 4
  %218 = load i32, i32* @pt_regs, align 4
  %219 = load i32, i32* @b6, align 4
  %220 = call i32 @OFFSET(i32 %217, i32 %218, i32 %219)
  %221 = load i32, i32* @REGS_B7, align 4
  %222 = load i32, i32* @pt_regs, align 4
  %223 = load i32, i32* @b7, align 4
  %224 = call i32 @OFFSET(i32 %221, i32 %222, i32 %223)
  %225 = load i32, i32* @REGS_B8, align 4
  %226 = load i32, i32* @pt_regs, align 4
  %227 = load i32, i32* @b8, align 4
  %228 = call i32 @OFFSET(i32 %225, i32 %226, i32 %227)
  %229 = load i32, i32* @REGS_B9, align 4
  %230 = load i32, i32* @pt_regs, align 4
  %231 = load i32, i32* @b9, align 4
  %232 = call i32 @OFFSET(i32 %229, i32 %230, i32 %231)
  %233 = load i32, i32* @REGS_B10, align 4
  %234 = load i32, i32* @pt_regs, align 4
  %235 = load i32, i32* @b10, align 4
  %236 = call i32 @OFFSET(i32 %233, i32 %234, i32 %235)
  %237 = load i32, i32* @REGS_B11, align 4
  %238 = load i32, i32* @pt_regs, align 4
  %239 = load i32, i32* @b11, align 4
  %240 = call i32 @OFFSET(i32 %237, i32 %238, i32 %239)
  %241 = load i32, i32* @REGS_B12, align 4
  %242 = load i32, i32* @pt_regs, align 4
  %243 = load i32, i32* @b12, align 4
  %244 = call i32 @OFFSET(i32 %241, i32 %242, i32 %243)
  %245 = load i32, i32* @REGS_B13, align 4
  %246 = load i32, i32* @pt_regs, align 4
  %247 = load i32, i32* @b13, align 4
  %248 = call i32 @OFFSET(i32 %245, i32 %246, i32 %247)
  %249 = load i32, i32* @REGS_DP, align 4
  %250 = load i32, i32* @pt_regs, align 4
  %251 = load i32, i32* @dp, align 4
  %252 = call i32 @OFFSET(i32 %249, i32 %250, i32 %251)
  %253 = load i32, i32* @REGS_SP, align 4
  %254 = load i32, i32* @pt_regs, align 4
  %255 = load i32, i32* @sp, align 4
  %256 = call i32 @OFFSET(i32 %253, i32 %254, i32 %255)
  %257 = load i32, i32* @REGS_TSR, align 4
  %258 = load i32, i32* @pt_regs, align 4
  %259 = load i32, i32* @tsr, align 4
  %260 = call i32 @OFFSET(i32 %257, i32 %258, i32 %259)
  %261 = load i32, i32* @REGS_ORIG_A4, align 4
  %262 = load i32, i32* @pt_regs, align 4
  %263 = load i32, i32* @orig_a4, align 4
  %264 = call i32 @OFFSET(i32 %261, i32 %262, i32 %263)
  %265 = load i32, i32* @REGS__END, align 4
  %266 = call i32 @DEFINE(i32 %265, i32 4)
  %267 = call i32 (...) @BLANK()
  %268 = load i32, i32* @THREAD_PC, align 4
  %269 = load i32, i32* @thread_struct, align 4
  %270 = load i32, i32* @pc, align 4
  %271 = call i32 @OFFSET(i32 %268, i32 %269, i32 %270)
  %272 = load i32, i32* @THREAD_B15_14, align 4
  %273 = load i32, i32* @thread_struct, align 4
  %274 = load i32, i32* @b15_14, align 4
  %275 = call i32 @OFFSET(i32 %272, i32 %273, i32 %274)
  %276 = load i32, i32* @THREAD_A15_14, align 4
  %277 = load i32, i32* @thread_struct, align 4
  %278 = load i32, i32* @a15_14, align 4
  %279 = call i32 @OFFSET(i32 %276, i32 %277, i32 %278)
  %280 = load i32, i32* @THREAD_B13_12, align 4
  %281 = load i32, i32* @thread_struct, align 4
  %282 = load i32, i32* @b13_12, align 4
  %283 = call i32 @OFFSET(i32 %280, i32 %281, i32 %282)
  %284 = load i32, i32* @THREAD_A13_12, align 4
  %285 = load i32, i32* @thread_struct, align 4
  %286 = load i32, i32* @a13_12, align 4
  %287 = call i32 @OFFSET(i32 %284, i32 %285, i32 %286)
  %288 = load i32, i32* @THREAD_B11_10, align 4
  %289 = load i32, i32* @thread_struct, align 4
  %290 = load i32, i32* @b11_10, align 4
  %291 = call i32 @OFFSET(i32 %288, i32 %289, i32 %290)
  %292 = load i32, i32* @THREAD_A11_10, align 4
  %293 = load i32, i32* @thread_struct, align 4
  %294 = load i32, i32* @a11_10, align 4
  %295 = call i32 @OFFSET(i32 %292, i32 %293, i32 %294)
  %296 = load i32, i32* @THREAD_RICL_ICL, align 4
  %297 = load i32, i32* @thread_struct, align 4
  %298 = load i32, i32* @ricl_icl, align 4
  %299 = call i32 @OFFSET(i32 %296, i32 %297, i32 %298)
  %300 = call i32 (...) @BLANK()
  %301 = load i32, i32* @TASK_STATE, align 4
  %302 = load i32, i32* @task_struct, align 4
  %303 = load i32, i32* @state, align 4
  %304 = call i32 @OFFSET(i32 %301, i32 %302, i32 %303)
  %305 = call i32 (...) @BLANK()
  %306 = load i32, i32* @THREAD_INFO_FLAGS, align 4
  %307 = load i32, i32* @thread_info, align 4
  %308 = load i32, i32* @flags, align 4
  %309 = call i32 @OFFSET(i32 %306, i32 %307, i32 %308)
  %310 = load i32, i32* @THREAD_INFO_PREEMPT_COUNT, align 4
  %311 = load i32, i32* @thread_info, align 4
  %312 = load i32, i32* @preempt_count, align 4
  %313 = call i32 @OFFSET(i32 %310, i32 %311, i32 %312)
  %314 = call i32 (...) @BLANK()
  %315 = load i32, i32* @KTHREAD_SHIFT, align 4
  %316 = load i32, i32* @THREAD_SHIFT, align 4
  %317 = call i32 @DEFINE(i32 %315, i32 %316)
  %318 = load i32, i32* @KTHREAD_START_SP, align 4
  %319 = load i32, i32* @THREAD_START_SP, align 4
  %320 = call i32 @DEFINE(i32 %318, i32 %319)
  %321 = load i32, i32* @ENOSYS_, align 4
  %322 = load i32, i32* @ENOSYS, align 4
  %323 = call i32 @DEFINE(i32 %321, i32 %322)
  %324 = load i32, i32* @NR_SYSCALLS_, align 4
  %325 = load i32, i32* @__NR_syscalls, align 4
  %326 = call i32 @DEFINE(i32 %324, i32 %325)
  %327 = load i32, i32* @_TIF_SYSCALL_TRACE, align 4
  %328 = load i32, i32* @TIF_SYSCALL_TRACE, align 4
  %329 = shl i32 1, %328
  %330 = call i32 @DEFINE(i32 %327, i32 %329)
  %331 = load i32, i32* @_TIF_NOTIFY_RESUME, align 4
  %332 = load i32, i32* @TIF_NOTIFY_RESUME, align 4
  %333 = shl i32 1, %332
  %334 = call i32 @DEFINE(i32 %331, i32 %333)
  %335 = load i32, i32* @_TIF_SIGPENDING, align 4
  %336 = load i32, i32* @TIF_SIGPENDING, align 4
  %337 = shl i32 1, %336
  %338 = call i32 @DEFINE(i32 %335, i32 %337)
  %339 = load i32, i32* @_TIF_NEED_RESCHED, align 4
  %340 = load i32, i32* @TIF_NEED_RESCHED, align 4
  %341 = shl i32 1, %340
  %342 = call i32 @DEFINE(i32 %339, i32 %341)
  %343 = load i32, i32* @_TIF_ALLWORK_MASK, align 4
  %344 = load i32, i32* @TIF_ALLWORK_MASK, align 4
  %345 = call i32 @DEFINE(i32 %343, i32 %344)
  %346 = load i32, i32* @_TIF_WORK_MASK, align 4
  %347 = load i32, i32* @TIF_WORK_MASK, align 4
  %348 = call i32 @DEFINE(i32 %346, i32 %347)
  ret void
}

declare dso_local i32 @OFFSET(i32, i32, i32) #1

declare dso_local i32 @DEFINE(i32, i32) #1

declare dso_local i32 @BLANK(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
