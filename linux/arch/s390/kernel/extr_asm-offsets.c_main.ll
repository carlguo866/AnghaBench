; ModuleID = '/home/carl/AnghaBench/linux/arch/s390/kernel/extr_asm-offsets.c_main.c'
source_filename = "/home/carl/AnghaBench/linux/arch/s390/kernel/extr_asm-offsets.c_main.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_6__ = type { i32******, i32****** }
%struct.TYPE_5__ = type { i32******, i32******, i32****** }
%struct.TYPE_4__ = type { i32****** }

@__TASK_stack = common dso_local global i32 0, align 4
@task_struct = common dso_local global i32**** null, align 8
@stack = common dso_local global i32**** null, align 8
@__TASK_thread = common dso_local global i32 0, align 4
@thread = common dso_local global i32**** null, align 8
@__TASK_pid = common dso_local global i32 0, align 4
@pid = common dso_local global i32**** null, align 8
@__THREAD_ksp = common dso_local global i32 0, align 4
@thread_struct = common dso_local global i32**** null, align 8
@ksp = common dso_local global i32**** null, align 8
@__THREAD_sysc_table = common dso_local global i32 0, align 4
@sys_call_table = common dso_local global i32**** null, align 8
@__THREAD_last_break = common dso_local global i32 0, align 4
@last_break = common dso_local global i32**** null, align 8
@__THREAD_FPU_fpc = common dso_local global i32 0, align 4
@fpu = common dso_local global %struct.TYPE_6__ zeroinitializer, align 8
@__THREAD_FPU_regs = common dso_local global i32 0, align 4
@__THREAD_per_cause = common dso_local global i32 0, align 4
@per_event = common dso_local global %struct.TYPE_5__ zeroinitializer, align 8
@__THREAD_per_address = common dso_local global i32 0, align 4
@__THREAD_per_paid = common dso_local global i32 0, align 4
@__THREAD_trap_tdb = common dso_local global i32 0, align 4
@trap_tdb = common dso_local global i32**** null, align 8
@__TI_flags = common dso_local global i32 0, align 4
@thread_info = common dso_local global %struct.TYPE_4__ zeroinitializer, align 8
@__PT_ARGS = common dso_local global i32 0, align 4
@pt_regs = common dso_local global i32**** null, align 8
@args = common dso_local global i32**** null, align 8
@__PT_PSW = common dso_local global i32 0, align 4
@psw = common dso_local global i32**** null, align 8
@__PT_GPRS = common dso_local global i32 0, align 4
@gprs = common dso_local global i32**** null, align 8
@__PT_ORIG_GPR2 = common dso_local global i32 0, align 4
@orig_gpr2 = common dso_local global i32**** null, align 8
@__PT_INT_CODE = common dso_local global i32 0, align 4
@int_code = common dso_local global i32**** null, align 8
@__PT_INT_PARM = common dso_local global i32 0, align 4
@int_parm = common dso_local global i32**** null, align 8
@__PT_INT_PARM_LONG = common dso_local global i32 0, align 4
@int_parm_long = common dso_local global i32**** null, align 8
@__PT_FLAGS = common dso_local global i32 0, align 4
@flags = common dso_local global i32**** null, align 8
@__PT_SIZE = common dso_local global i32 0, align 4
@__SF_BACKCHAIN = common dso_local global i32 0, align 4
@stack_frame = common dso_local global i32**** null, align 8
@back_chain = common dso_local global i32**** null, align 8
@__SF_GPRS = common dso_local global i32 0, align 4
@__SF_EMPTY = common dso_local global i32 0, align 4
@empty1 = common dso_local global i32***** null, align 8
@__SF_SIE_CONTROL = common dso_local global i32 0, align 4
@__SF_SIE_SAVEAREA = common dso_local global i32 0, align 4
@__SF_SIE_REASON = common dso_local global i32 0, align 4
@__SF_SIE_FLAGS = common dso_local global i32 0, align 4
@__VDSO_UPD_COUNT = common dso_local global i32 0, align 4
@vdso_data = common dso_local global i32**** null, align 8
@tb_update_count = common dso_local global i32**** null, align 8
@__VDSO_XTIME_STAMP = common dso_local global i32 0, align 4
@xtime_tod_stamp = common dso_local global i32**** null, align 8
@__VDSO_XTIME_SEC = common dso_local global i32 0, align 4
@xtime_clock_sec = common dso_local global i32**** null, align 8
@__VDSO_XTIME_NSEC = common dso_local global i32 0, align 4
@xtime_clock_nsec = common dso_local global i32**** null, align 8
@__VDSO_XTIME_CRS_SEC = common dso_local global i32 0, align 4
@xtime_coarse_sec = common dso_local global i32**** null, align 8
@__VDSO_XTIME_CRS_NSEC = common dso_local global i32 0, align 4
@xtime_coarse_nsec = common dso_local global i32**** null, align 8
@__VDSO_WTOM_SEC = common dso_local global i32 0, align 4
@wtom_clock_sec = common dso_local global i32**** null, align 8
@__VDSO_WTOM_NSEC = common dso_local global i32 0, align 4
@wtom_clock_nsec = common dso_local global i32**** null, align 8
@__VDSO_WTOM_CRS_SEC = common dso_local global i32 0, align 4
@wtom_coarse_sec = common dso_local global i32**** null, align 8
@__VDSO_WTOM_CRS_NSEC = common dso_local global i32 0, align 4
@wtom_coarse_nsec = common dso_local global i32**** null, align 8
@__VDSO_TIMEZONE = common dso_local global i32 0, align 4
@tz_minuteswest = common dso_local global i32**** null, align 8
@__VDSO_ECTG_OK = common dso_local global i32 0, align 4
@ectg_available = common dso_local global i32**** null, align 8
@__VDSO_TK_MULT = common dso_local global i32 0, align 4
@tk_mult = common dso_local global i32**** null, align 8
@__VDSO_TK_SHIFT = common dso_local global i32 0, align 4
@tk_shift = common dso_local global i32**** null, align 8
@__VDSO_TS_DIR = common dso_local global i32 0, align 4
@ts_dir = common dso_local global i32**** null, align 8
@__VDSO_TS_END = common dso_local global i32 0, align 4
@ts_end = common dso_local global i32**** null, align 8
@__VDSO_ECTG_BASE = common dso_local global i32 0, align 4
@vdso_per_cpu_data = common dso_local global i32**** null, align 8
@ectg_timer_base = common dso_local global i32**** null, align 8
@__VDSO_ECTG_USER = common dso_local global i32 0, align 4
@ectg_user_time = common dso_local global i32**** null, align 8
@__VDSO_CPU_NR = common dso_local global i32 0, align 4
@cpu_nr = common dso_local global i32**** null, align 8
@__VDSO_NODE_ID = common dso_local global i32 0, align 4
@node_id = common dso_local global i32**** null, align 8
@__CLOCK_REALTIME = common dso_local global i32 0, align 4
@CLOCK_REALTIME = common dso_local global i32 0, align 4
@__CLOCK_MONOTONIC = common dso_local global i32 0, align 4
@CLOCK_MONOTONIC = common dso_local global i32 0, align 4
@__CLOCK_REALTIME_COARSE = common dso_local global i32 0, align 4
@CLOCK_REALTIME_COARSE = common dso_local global i32 0, align 4
@__CLOCK_MONOTONIC_COARSE = common dso_local global i32 0, align 4
@CLOCK_MONOTONIC_COARSE = common dso_local global i32 0, align 4
@__CLOCK_THREAD_CPUTIME_ID = common dso_local global i32 0, align 4
@CLOCK_THREAD_CPUTIME_ID = common dso_local global i32 0, align 4
@__CLOCK_REALTIME_RES = common dso_local global i32 0, align 4
@MONOTONIC_RES_NSEC = common dso_local global i32 0, align 4
@__CLOCK_COARSE_RES = common dso_local global i32 0, align 4
@LOW_RES_NSEC = common dso_local global i32 0, align 4
@__CLOCK_IDLE_ENTER = common dso_local global i32 0, align 4
@s390_idle_data = common dso_local global i32**** null, align 8
@clock_idle_enter = common dso_local global i32**** null, align 8
@__CLOCK_IDLE_EXIT = common dso_local global i32 0, align 4
@clock_idle_exit = common dso_local global i32**** null, align 8
@__TIMER_IDLE_ENTER = common dso_local global i32 0, align 4
@timer_idle_enter = common dso_local global i32**** null, align 8
@__TIMER_IDLE_EXIT = common dso_local global i32 0, align 4
@timer_idle_exit = common dso_local global i32**** null, align 8
@__LC_EXT_PARAMS = common dso_local global i32 0, align 4
@lowcore = common dso_local global i32**** null, align 8
@ext_params = common dso_local global i32**** null, align 8
@__LC_EXT_CPU_ADDR = common dso_local global i32 0, align 4
@ext_cpu_addr = common dso_local global i32**** null, align 8
@__LC_EXT_INT_CODE = common dso_local global i32 0, align 4
@ext_int_code = common dso_local global i32**** null, align 8
@__LC_SVC_ILC = common dso_local global i32 0, align 4
@svc_ilc = common dso_local global i32**** null, align 8
@__LC_SVC_INT_CODE = common dso_local global i32 0, align 4
@svc_code = common dso_local global i32**** null, align 8
@__LC_PGM_ILC = common dso_local global i32 0, align 4
@pgm_ilc = common dso_local global i32**** null, align 8
@__LC_PGM_INT_CODE = common dso_local global i32 0, align 4
@pgm_code = common dso_local global i32**** null, align 8
@__LC_DATA_EXC_CODE = common dso_local global i32 0, align 4
@data_exc_code = common dso_local global i32**** null, align 8
@__LC_MON_CLASS_NR = common dso_local global i32 0, align 4
@mon_class_num = common dso_local global i32**** null, align 8
@__LC_PER_CODE = common dso_local global i32 0, align 4
@per_code = common dso_local global i32**** null, align 8
@__LC_PER_ATMID = common dso_local global i32 0, align 4
@per_atmid = common dso_local global i32**** null, align 8
@__LC_PER_ADDRESS = common dso_local global i32 0, align 4
@per_address = common dso_local global i32**** null, align 8
@__LC_EXC_ACCESS_ID = common dso_local global i32 0, align 4
@exc_access_id = common dso_local global i32**** null, align 8
@__LC_PER_ACCESS_ID = common dso_local global i32 0, align 4
@per_access_id = common dso_local global i32**** null, align 8
@__LC_OP_ACCESS_ID = common dso_local global i32 0, align 4
@op_access_id = common dso_local global i32**** null, align 8
@__LC_AR_MODE_ID = common dso_local global i32 0, align 4
@ar_mode_id = common dso_local global i32**** null, align 8
@__LC_TRANS_EXC_CODE = common dso_local global i32 0, align 4
@trans_exc_code = common dso_local global i32**** null, align 8
@__LC_MON_CODE = common dso_local global i32 0, align 4
@monitor_code = common dso_local global i32**** null, align 8
@__LC_SUBCHANNEL_ID = common dso_local global i32 0, align 4
@subchannel_id = common dso_local global i32**** null, align 8
@__LC_SUBCHANNEL_NR = common dso_local global i32 0, align 4
@subchannel_nr = common dso_local global i32**** null, align 8
@__LC_IO_INT_PARM = common dso_local global i32 0, align 4
@io_int_parm = common dso_local global i32**** null, align 8
@__LC_IO_INT_WORD = common dso_local global i32 0, align 4
@io_int_word = common dso_local global i32**** null, align 8
@__LC_STFL_FAC_LIST = common dso_local global i32 0, align 4
@stfl_fac_list = common dso_local global i32**** null, align 8
@__LC_STFLE_FAC_LIST = common dso_local global i32 0, align 4
@stfle_fac_list = common dso_local global i32**** null, align 8
@__LC_MCCK_CODE = common dso_local global i32 0, align 4
@mcck_interruption_code = common dso_local global i32**** null, align 8
@__LC_EXT_DAMAGE_CODE = common dso_local global i32 0, align 4
@external_damage_code = common dso_local global i32**** null, align 8
@__LC_MCCK_FAIL_STOR_ADDR = common dso_local global i32 0, align 4
@failing_storage_address = common dso_local global i32**** null, align 8
@__LC_LAST_BREAK = common dso_local global i32 0, align 4
@breaking_event_addr = common dso_local global i32**** null, align 8
@__LC_RST_OLD_PSW = common dso_local global i32 0, align 4
@restart_old_psw = common dso_local global i32**** null, align 8
@__LC_EXT_OLD_PSW = common dso_local global i32 0, align 4
@external_old_psw = common dso_local global i32**** null, align 8
@__LC_SVC_OLD_PSW = common dso_local global i32 0, align 4
@svc_old_psw = common dso_local global i32**** null, align 8
@__LC_PGM_OLD_PSW = common dso_local global i32 0, align 4
@program_old_psw = common dso_local global i32**** null, align 8
@__LC_MCK_OLD_PSW = common dso_local global i32 0, align 4
@mcck_old_psw = common dso_local global i32**** null, align 8
@__LC_IO_OLD_PSW = common dso_local global i32 0, align 4
@io_old_psw = common dso_local global i32**** null, align 8
@__LC_RST_NEW_PSW = common dso_local global i32 0, align 4
@restart_psw = common dso_local global i32**** null, align 8
@__LC_EXT_NEW_PSW = common dso_local global i32 0, align 4
@external_new_psw = common dso_local global i32**** null, align 8
@__LC_SVC_NEW_PSW = common dso_local global i32 0, align 4
@svc_new_psw = common dso_local global i32**** null, align 8
@__LC_PGM_NEW_PSW = common dso_local global i32 0, align 4
@program_new_psw = common dso_local global i32**** null, align 8
@__LC_MCK_NEW_PSW = common dso_local global i32 0, align 4
@mcck_new_psw = common dso_local global i32**** null, align 8
@__LC_IO_NEW_PSW = common dso_local global i32 0, align 4
@io_new_psw = common dso_local global i32**** null, align 8
@__LC_SAVE_AREA_SYNC = common dso_local global i32 0, align 4
@save_area_sync = common dso_local global i32**** null, align 8
@__LC_SAVE_AREA_ASYNC = common dso_local global i32 0, align 4
@save_area_async = common dso_local global i32**** null, align 8
@__LC_SAVE_AREA_RESTART = common dso_local global i32 0, align 4
@save_area_restart = common dso_local global i32**** null, align 8
@__LC_CPU_FLAGS = common dso_local global i32 0, align 4
@cpu_flags = common dso_local global i32**** null, align 8
@__LC_RETURN_PSW = common dso_local global i32 0, align 4
@return_psw = common dso_local global i32**** null, align 8
@__LC_RETURN_MCCK_PSW = common dso_local global i32 0, align 4
@return_mcck_psw = common dso_local global i32**** null, align 8
@__LC_SYNC_ENTER_TIMER = common dso_local global i32 0, align 4
@sync_enter_timer = common dso_local global i32**** null, align 8
@__LC_ASYNC_ENTER_TIMER = common dso_local global i32 0, align 4
@async_enter_timer = common dso_local global i32**** null, align 8
@__LC_MCCK_ENTER_TIMER = common dso_local global i32 0, align 4
@mcck_enter_timer = common dso_local global i32**** null, align 8
@__LC_EXIT_TIMER = common dso_local global i32 0, align 4
@exit_timer = common dso_local global i32**** null, align 8
@__LC_USER_TIMER = common dso_local global i32 0, align 4
@user_timer = common dso_local global i32**** null, align 8
@__LC_SYSTEM_TIMER = common dso_local global i32 0, align 4
@system_timer = common dso_local global i32**** null, align 8
@__LC_STEAL_TIMER = common dso_local global i32 0, align 4
@steal_timer = common dso_local global i32**** null, align 8
@__LC_LAST_UPDATE_TIMER = common dso_local global i32 0, align 4
@last_update_timer = common dso_local global i32**** null, align 8
@__LC_LAST_UPDATE_CLOCK = common dso_local global i32 0, align 4
@last_update_clock = common dso_local global i32**** null, align 8
@__LC_INT_CLOCK = common dso_local global i32 0, align 4
@int_clock = common dso_local global i32**** null, align 8
@__LC_MCCK_CLOCK = common dso_local global i32 0, align 4
@mcck_clock = common dso_local global i32**** null, align 8
@__LC_CLOCK_COMPARATOR = common dso_local global i32 0, align 4
@clock_comparator = common dso_local global i32**** null, align 8
@__LC_BOOT_CLOCK = common dso_local global i32 0, align 4
@boot_clock = common dso_local global i32**** null, align 8
@__LC_CURRENT = common dso_local global i32 0, align 4
@current_task = common dso_local global i32**** null, align 8
@__LC_KERNEL_STACK = common dso_local global i32 0, align 4
@kernel_stack = common dso_local global i32**** null, align 8
@__LC_ASYNC_STACK = common dso_local global i32 0, align 4
@async_stack = common dso_local global i32**** null, align 8
@__LC_NODAT_STACK = common dso_local global i32 0, align 4
@nodat_stack = common dso_local global i32**** null, align 8
@__LC_RESTART_STACK = common dso_local global i32 0, align 4
@restart_stack = common dso_local global i32**** null, align 8
@__LC_RESTART_FN = common dso_local global i32 0, align 4
@restart_fn = common dso_local global i32**** null, align 8
@__LC_RESTART_DATA = common dso_local global i32 0, align 4
@restart_data = common dso_local global i32**** null, align 8
@__LC_RESTART_SOURCE = common dso_local global i32 0, align 4
@restart_source = common dso_local global i32**** null, align 8
@__LC_USER_ASCE = common dso_local global i32 0, align 4
@user_asce = common dso_local global i32**** null, align 8
@__LC_VDSO_ASCE = common dso_local global i32 0, align 4
@vdso_asce = common dso_local global i32**** null, align 8
@__LC_LPP = common dso_local global i32 0, align 4
@lpp = common dso_local global i32**** null, align 8
@__LC_CURRENT_PID = common dso_local global i32 0, align 4
@current_pid = common dso_local global i32**** null, align 8
@__LC_PERCPU_OFFSET = common dso_local global i32 0, align 4
@percpu_offset = common dso_local global i32**** null, align 8
@__LC_VDSO_PER_CPU = common dso_local global i32 0, align 4
@__LC_MACHINE_FLAGS = common dso_local global i32 0, align 4
@machine_flags = common dso_local global i32**** null, align 8
@__LC_PREEMPT_COUNT = common dso_local global i32 0, align 4
@preempt_count = common dso_local global i32**** null, align 8
@__LC_GMAP = common dso_local global i32 0, align 4
@gmap = common dso_local global i32**** null, align 8
@__LC_BR_R1 = common dso_local global i32 0, align 4
@br_r1_trampoline = common dso_local global i32**** null, align 8
@__LC_DUMP_REIPL = common dso_local global i32 0, align 4
@ipib = common dso_local global i32**** null, align 8
@__LC_MCESAD = common dso_local global i32 0, align 4
@mcesad = common dso_local global i32**** null, align 8
@__LC_EXT_PARAMS2 = common dso_local global i32 0, align 4
@ext_params2 = common dso_local global i32**** null, align 8
@__LC_FPREGS_SAVE_AREA = common dso_local global i32 0, align 4
@floating_pt_save_area = common dso_local global i32**** null, align 8
@__LC_GPREGS_SAVE_AREA = common dso_local global i32 0, align 4
@gpregs_save_area = common dso_local global i32**** null, align 8
@__LC_PSW_SAVE_AREA = common dso_local global i32 0, align 4
@psw_save_area = common dso_local global i32**** null, align 8
@__LC_PREFIX_SAVE_AREA = common dso_local global i32 0, align 4
@prefixreg_save_area = common dso_local global i32**** null, align 8
@__LC_FP_CREG_SAVE_AREA = common dso_local global i32 0, align 4
@fpt_creg_save_area = common dso_local global i32**** null, align 8
@__LC_TOD_PROGREG_SAVE_AREA = common dso_local global i32 0, align 4
@tod_progreg_save_area = common dso_local global i32**** null, align 8
@__LC_CPU_TIMER_SAVE_AREA = common dso_local global i32 0, align 4
@cpu_timer_save_area = common dso_local global i32**** null, align 8
@__LC_CLOCK_COMP_SAVE_AREA = common dso_local global i32 0, align 4
@clock_comp_save_area = common dso_local global i32**** null, align 8
@__LC_AREGS_SAVE_AREA = common dso_local global i32 0, align 4
@access_regs_save_area = common dso_local global i32**** null, align 8
@__LC_CREGS_SAVE_AREA = common dso_local global i32 0, align 4
@cregs_save_area = common dso_local global i32**** null, align 8
@__LC_PGM_TDB = common dso_local global i32 0, align 4
@pgm_tdb = common dso_local global i32**** null, align 8
@__MCESA_GS_SAVE_AREA = common dso_local global i32 0, align 4
@mcesa = common dso_local global i32**** null, align 8
@guarded_storage_save_area = common dso_local global i32**** null, align 8
@__GMAP_ASCE = common dso_local global i32 0, align 4
@asce = common dso_local global i32**** null, align 8
@__SIE_PROG0C = common dso_local global i32 0, align 4
@kvm_s390_sie_block = common dso_local global i32**** null, align 8
@prog0c = common dso_local global i32**** null, align 8
@__SIE_PROG20 = common dso_local global i32 0, align 4
@prog20 = common dso_local global i32**** null, align 8
@__KEXEC_SHA_REGION_START = common dso_local global i32 0, align 4
@kexec_sha_region = common dso_local global i32**** null, align 8
@start = common dso_local global i32**** null, align 8
@__KEXEC_SHA_REGION_LEN = common dso_local global i32 0, align 4
@len = common dso_local global i32**** null, align 8
@__KEXEC_SHA_REGION_SIZE = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @main() #0 {
  %1 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %2 = load i32, i32* @__TASK_stack, align 4
  %3 = load i32****, i32***** @task_struct, align 8
  %4 = load i32****, i32***** @stack, align 8
  %5 = call i32 @OFFSET(i32 %2, i32**** %3, i32**** %4)
  %6 = load i32, i32* @__TASK_thread, align 4
  %7 = load i32****, i32***** @task_struct, align 8
  %8 = load i32****, i32***** @thread, align 8
  %9 = call i32 @OFFSET(i32 %6, i32**** %7, i32**** %8)
  %10 = load i32, i32* @__TASK_pid, align 4
  %11 = load i32****, i32***** @task_struct, align 8
  %12 = load i32****, i32***** @pid, align 8
  %13 = call i32 @OFFSET(i32 %10, i32**** %11, i32**** %12)
  %14 = call i32 (...) @BLANK()
  %15 = load i32, i32* @__THREAD_ksp, align 4
  %16 = load i32****, i32***** @thread_struct, align 8
  %17 = load i32****, i32***** @ksp, align 8
  %18 = call i32 @OFFSET(i32 %15, i32**** %16, i32**** %17)
  %19 = load i32, i32* @__THREAD_sysc_table, align 4
  %20 = load i32****, i32***** @thread_struct, align 8
  %21 = load i32****, i32***** @sys_call_table, align 8
  %22 = call i32 @OFFSET(i32 %19, i32**** %20, i32**** %21)
  %23 = load i32, i32* @__THREAD_last_break, align 4
  %24 = load i32****, i32***** @thread_struct, align 8
  %25 = load i32****, i32***** @last_break, align 8
  %26 = call i32 @OFFSET(i32 %23, i32**** %24, i32**** %25)
  %27 = load i32, i32* @__THREAD_FPU_fpc, align 4
  %28 = load i32****, i32***** @thread_struct, align 8
  %29 = load i32******, i32******* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @fpu, i32 0, i32 1), align 8
  %30 = bitcast i32****** %29 to i32****
  %31 = call i32 @OFFSET(i32 %27, i32**** %28, i32**** %30)
  %32 = load i32, i32* @__THREAD_FPU_regs, align 4
  %33 = load i32****, i32***** @thread_struct, align 8
  %34 = load i32******, i32******* getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @fpu, i32 0, i32 0), align 8
  %35 = bitcast i32****** %34 to i32****
  %36 = call i32 @OFFSET(i32 %32, i32**** %33, i32**** %35)
  %37 = load i32, i32* @__THREAD_per_cause, align 4
  %38 = load i32****, i32***** @thread_struct, align 8
  %39 = load i32******, i32******* getelementptr inbounds (%struct.TYPE_5__, %struct.TYPE_5__* @per_event, i32 0, i32 2), align 8
  %40 = bitcast i32****** %39 to i32****
  %41 = call i32 @OFFSET(i32 %37, i32**** %38, i32**** %40)
  %42 = load i32, i32* @__THREAD_per_address, align 4
  %43 = load i32****, i32***** @thread_struct, align 8
  %44 = load i32******, i32******* getelementptr inbounds (%struct.TYPE_5__, %struct.TYPE_5__* @per_event, i32 0, i32 1), align 8
  %45 = bitcast i32****** %44 to i32****
  %46 = call i32 @OFFSET(i32 %42, i32**** %43, i32**** %45)
  %47 = load i32, i32* @__THREAD_per_paid, align 4
  %48 = load i32****, i32***** @thread_struct, align 8
  %49 = load i32******, i32******* getelementptr inbounds (%struct.TYPE_5__, %struct.TYPE_5__* @per_event, i32 0, i32 0), align 8
  %50 = bitcast i32****** %49 to i32****
  %51 = call i32 @OFFSET(i32 %47, i32**** %48, i32**** %50)
  %52 = load i32, i32* @__THREAD_trap_tdb, align 4
  %53 = load i32****, i32***** @thread_struct, align 8
  %54 = load i32****, i32***** @trap_tdb, align 8
  %55 = call i32 @OFFSET(i32 %52, i32**** %53, i32**** %54)
  %56 = call i32 (...) @BLANK()
  %57 = load i32, i32* @__TI_flags, align 4
  %58 = load i32****, i32***** @task_struct, align 8
  %59 = load i32******, i32******* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread_info, i32 0, i32 0), align 8
  %60 = bitcast i32****** %59 to i32****
  %61 = call i32 @OFFSET(i32 %57, i32**** %58, i32**** %60)
  %62 = call i32 (...) @BLANK()
  %63 = load i32, i32* @__PT_ARGS, align 4
  %64 = load i32****, i32***** @pt_regs, align 8
  %65 = load i32****, i32***** @args, align 8
  %66 = call i32 @OFFSET(i32 %63, i32**** %64, i32**** %65)
  %67 = load i32, i32* @__PT_PSW, align 4
  %68 = load i32****, i32***** @pt_regs, align 8
  %69 = load i32****, i32***** @psw, align 8
  %70 = call i32 @OFFSET(i32 %67, i32**** %68, i32**** %69)
  %71 = load i32, i32* @__PT_GPRS, align 4
  %72 = load i32****, i32***** @pt_regs, align 8
  %73 = load i32****, i32***** @gprs, align 8
  %74 = call i32 @OFFSET(i32 %71, i32**** %72, i32**** %73)
  %75 = load i32, i32* @__PT_ORIG_GPR2, align 4
  %76 = load i32****, i32***** @pt_regs, align 8
  %77 = load i32****, i32***** @orig_gpr2, align 8
  %78 = call i32 @OFFSET(i32 %75, i32**** %76, i32**** %77)
  %79 = load i32, i32* @__PT_INT_CODE, align 4
  %80 = load i32****, i32***** @pt_regs, align 8
  %81 = load i32****, i32***** @int_code, align 8
  %82 = call i32 @OFFSET(i32 %79, i32**** %80, i32**** %81)
  %83 = load i32, i32* @__PT_INT_PARM, align 4
  %84 = load i32****, i32***** @pt_regs, align 8
  %85 = load i32****, i32***** @int_parm, align 8
  %86 = call i32 @OFFSET(i32 %83, i32**** %84, i32**** %85)
  %87 = load i32, i32* @__PT_INT_PARM_LONG, align 4
  %88 = load i32****, i32***** @pt_regs, align 8
  %89 = load i32****, i32***** @int_parm_long, align 8
  %90 = call i32 @OFFSET(i32 %87, i32**** %88, i32**** %89)
  %91 = load i32, i32* @__PT_FLAGS, align 4
  %92 = load i32****, i32***** @pt_regs, align 8
  %93 = load i32****, i32***** @flags, align 8
  %94 = call i32 @OFFSET(i32 %91, i32**** %92, i32**** %93)
  %95 = load i32, i32* @__PT_SIZE, align 4
  %96 = call i32 @DEFINE(i32 %95, i32 4)
  %97 = call i32 (...) @BLANK()
  %98 = load i32, i32* @__SF_BACKCHAIN, align 4
  %99 = load i32****, i32***** @stack_frame, align 8
  %100 = load i32****, i32***** @back_chain, align 8
  %101 = call i32 @OFFSET(i32 %98, i32**** %99, i32**** %100)
  %102 = load i32, i32* @__SF_GPRS, align 4
  %103 = load i32****, i32***** @stack_frame, align 8
  %104 = load i32****, i32***** @gprs, align 8
  %105 = call i32 @OFFSET(i32 %102, i32**** %103, i32**** %104)
  %106 = load i32, i32* @__SF_EMPTY, align 4
  %107 = load i32****, i32***** @stack_frame, align 8
  %108 = load i32*****, i32****** @empty1, align 8
  %109 = bitcast i32***** %108 to i32****
  %110 = call i32 @OFFSET(i32 %106, i32**** %107, i32**** %109)
  %111 = load i32, i32* @__SF_SIE_CONTROL, align 4
  %112 = load i32****, i32***** @stack_frame, align 8
  %113 = load i32*****, i32****** @empty1, align 8
  %114 = getelementptr inbounds i32****, i32***** %113, i64 0
  %115 = load i32****, i32***** %114, align 8
  %116 = call i32 @OFFSET(i32 %111, i32**** %112, i32**** %115)
  %117 = load i32, i32* @__SF_SIE_SAVEAREA, align 4
  %118 = load i32****, i32***** @stack_frame, align 8
  %119 = load i32*****, i32****** @empty1, align 8
  %120 = getelementptr inbounds i32****, i32***** %119, i64 1
  %121 = load i32****, i32***** %120, align 8
  %122 = call i32 @OFFSET(i32 %117, i32**** %118, i32**** %121)
  %123 = load i32, i32* @__SF_SIE_REASON, align 4
  %124 = load i32****, i32***** @stack_frame, align 8
  %125 = load i32*****, i32****** @empty1, align 8
  %126 = getelementptr inbounds i32****, i32***** %125, i64 2
  %127 = load i32****, i32***** %126, align 8
  %128 = call i32 @OFFSET(i32 %123, i32**** %124, i32**** %127)
  %129 = load i32, i32* @__SF_SIE_FLAGS, align 4
  %130 = load i32****, i32***** @stack_frame, align 8
  %131 = load i32*****, i32****** @empty1, align 8
  %132 = getelementptr inbounds i32****, i32***** %131, i64 3
  %133 = load i32****, i32***** %132, align 8
  %134 = call i32 @OFFSET(i32 %129, i32**** %130, i32**** %133)
  %135 = call i32 (...) @BLANK()
  %136 = load i32, i32* @__VDSO_UPD_COUNT, align 4
  %137 = load i32****, i32***** @vdso_data, align 8
  %138 = load i32****, i32***** @tb_update_count, align 8
  %139 = call i32 @OFFSET(i32 %136, i32**** %137, i32**** %138)
  %140 = load i32, i32* @__VDSO_XTIME_STAMP, align 4
  %141 = load i32****, i32***** @vdso_data, align 8
  %142 = load i32****, i32***** @xtime_tod_stamp, align 8
  %143 = call i32 @OFFSET(i32 %140, i32**** %141, i32**** %142)
  %144 = load i32, i32* @__VDSO_XTIME_SEC, align 4
  %145 = load i32****, i32***** @vdso_data, align 8
  %146 = load i32****, i32***** @xtime_clock_sec, align 8
  %147 = call i32 @OFFSET(i32 %144, i32**** %145, i32**** %146)
  %148 = load i32, i32* @__VDSO_XTIME_NSEC, align 4
  %149 = load i32****, i32***** @vdso_data, align 8
  %150 = load i32****, i32***** @xtime_clock_nsec, align 8
  %151 = call i32 @OFFSET(i32 %148, i32**** %149, i32**** %150)
  %152 = load i32, i32* @__VDSO_XTIME_CRS_SEC, align 4
  %153 = load i32****, i32***** @vdso_data, align 8
  %154 = load i32****, i32***** @xtime_coarse_sec, align 8
  %155 = call i32 @OFFSET(i32 %152, i32**** %153, i32**** %154)
  %156 = load i32, i32* @__VDSO_XTIME_CRS_NSEC, align 4
  %157 = load i32****, i32***** @vdso_data, align 8
  %158 = load i32****, i32***** @xtime_coarse_nsec, align 8
  %159 = call i32 @OFFSET(i32 %156, i32**** %157, i32**** %158)
  %160 = load i32, i32* @__VDSO_WTOM_SEC, align 4
  %161 = load i32****, i32***** @vdso_data, align 8
  %162 = load i32****, i32***** @wtom_clock_sec, align 8
  %163 = call i32 @OFFSET(i32 %160, i32**** %161, i32**** %162)
  %164 = load i32, i32* @__VDSO_WTOM_NSEC, align 4
  %165 = load i32****, i32***** @vdso_data, align 8
  %166 = load i32****, i32***** @wtom_clock_nsec, align 8
  %167 = call i32 @OFFSET(i32 %164, i32**** %165, i32**** %166)
  %168 = load i32, i32* @__VDSO_WTOM_CRS_SEC, align 4
  %169 = load i32****, i32***** @vdso_data, align 8
  %170 = load i32****, i32***** @wtom_coarse_sec, align 8
  %171 = call i32 @OFFSET(i32 %168, i32**** %169, i32**** %170)
  %172 = load i32, i32* @__VDSO_WTOM_CRS_NSEC, align 4
  %173 = load i32****, i32***** @vdso_data, align 8
  %174 = load i32****, i32***** @wtom_coarse_nsec, align 8
  %175 = call i32 @OFFSET(i32 %172, i32**** %173, i32**** %174)
  %176 = load i32, i32* @__VDSO_TIMEZONE, align 4
  %177 = load i32****, i32***** @vdso_data, align 8
  %178 = load i32****, i32***** @tz_minuteswest, align 8
  %179 = call i32 @OFFSET(i32 %176, i32**** %177, i32**** %178)
  %180 = load i32, i32* @__VDSO_ECTG_OK, align 4
  %181 = load i32****, i32***** @vdso_data, align 8
  %182 = load i32****, i32***** @ectg_available, align 8
  %183 = call i32 @OFFSET(i32 %180, i32**** %181, i32**** %182)
  %184 = load i32, i32* @__VDSO_TK_MULT, align 4
  %185 = load i32****, i32***** @vdso_data, align 8
  %186 = load i32****, i32***** @tk_mult, align 8
  %187 = call i32 @OFFSET(i32 %184, i32**** %185, i32**** %186)
  %188 = load i32, i32* @__VDSO_TK_SHIFT, align 4
  %189 = load i32****, i32***** @vdso_data, align 8
  %190 = load i32****, i32***** @tk_shift, align 8
  %191 = call i32 @OFFSET(i32 %188, i32**** %189, i32**** %190)
  %192 = load i32, i32* @__VDSO_TS_DIR, align 4
  %193 = load i32****, i32***** @vdso_data, align 8
  %194 = load i32****, i32***** @ts_dir, align 8
  %195 = call i32 @OFFSET(i32 %192, i32**** %193, i32**** %194)
  %196 = load i32, i32* @__VDSO_TS_END, align 4
  %197 = load i32****, i32***** @vdso_data, align 8
  %198 = load i32****, i32***** @ts_end, align 8
  %199 = call i32 @OFFSET(i32 %196, i32**** %197, i32**** %198)
  %200 = load i32, i32* @__VDSO_ECTG_BASE, align 4
  %201 = load i32****, i32***** @vdso_per_cpu_data, align 8
  %202 = load i32****, i32***** @ectg_timer_base, align 8
  %203 = call i32 @OFFSET(i32 %200, i32**** %201, i32**** %202)
  %204 = load i32, i32* @__VDSO_ECTG_USER, align 4
  %205 = load i32****, i32***** @vdso_per_cpu_data, align 8
  %206 = load i32****, i32***** @ectg_user_time, align 8
  %207 = call i32 @OFFSET(i32 %204, i32**** %205, i32**** %206)
  %208 = load i32, i32* @__VDSO_CPU_NR, align 4
  %209 = load i32****, i32***** @vdso_per_cpu_data, align 8
  %210 = load i32****, i32***** @cpu_nr, align 8
  %211 = call i32 @OFFSET(i32 %208, i32**** %209, i32**** %210)
  %212 = load i32, i32* @__VDSO_NODE_ID, align 4
  %213 = load i32****, i32***** @vdso_per_cpu_data, align 8
  %214 = load i32****, i32***** @node_id, align 8
  %215 = call i32 @OFFSET(i32 %212, i32**** %213, i32**** %214)
  %216 = call i32 (...) @BLANK()
  %217 = load i32, i32* @__CLOCK_REALTIME, align 4
  %218 = load i32, i32* @CLOCK_REALTIME, align 4
  %219 = call i32 @DEFINE(i32 %217, i32 %218)
  %220 = load i32, i32* @__CLOCK_MONOTONIC, align 4
  %221 = load i32, i32* @CLOCK_MONOTONIC, align 4
  %222 = call i32 @DEFINE(i32 %220, i32 %221)
  %223 = load i32, i32* @__CLOCK_REALTIME_COARSE, align 4
  %224 = load i32, i32* @CLOCK_REALTIME_COARSE, align 4
  %225 = call i32 @DEFINE(i32 %223, i32 %224)
  %226 = load i32, i32* @__CLOCK_MONOTONIC_COARSE, align 4
  %227 = load i32, i32* @CLOCK_MONOTONIC_COARSE, align 4
  %228 = call i32 @DEFINE(i32 %226, i32 %227)
  %229 = load i32, i32* @__CLOCK_THREAD_CPUTIME_ID, align 4
  %230 = load i32, i32* @CLOCK_THREAD_CPUTIME_ID, align 4
  %231 = call i32 @DEFINE(i32 %229, i32 %230)
  %232 = load i32, i32* @__CLOCK_REALTIME_RES, align 4
  %233 = load i32, i32* @MONOTONIC_RES_NSEC, align 4
  %234 = call i32 @DEFINE(i32 %232, i32 %233)
  %235 = load i32, i32* @__CLOCK_COARSE_RES, align 4
  %236 = load i32, i32* @LOW_RES_NSEC, align 4
  %237 = call i32 @DEFINE(i32 %235, i32 %236)
  %238 = call i32 (...) @BLANK()
  %239 = load i32, i32* @__CLOCK_IDLE_ENTER, align 4
  %240 = load i32****, i32***** @s390_idle_data, align 8
  %241 = load i32****, i32***** @clock_idle_enter, align 8
  %242 = call i32 @OFFSET(i32 %239, i32**** %240, i32**** %241)
  %243 = load i32, i32* @__CLOCK_IDLE_EXIT, align 4
  %244 = load i32****, i32***** @s390_idle_data, align 8
  %245 = load i32****, i32***** @clock_idle_exit, align 8
  %246 = call i32 @OFFSET(i32 %243, i32**** %244, i32**** %245)
  %247 = load i32, i32* @__TIMER_IDLE_ENTER, align 4
  %248 = load i32****, i32***** @s390_idle_data, align 8
  %249 = load i32****, i32***** @timer_idle_enter, align 8
  %250 = call i32 @OFFSET(i32 %247, i32**** %248, i32**** %249)
  %251 = load i32, i32* @__TIMER_IDLE_EXIT, align 4
  %252 = load i32****, i32***** @s390_idle_data, align 8
  %253 = load i32****, i32***** @timer_idle_exit, align 8
  %254 = call i32 @OFFSET(i32 %251, i32**** %252, i32**** %253)
  %255 = call i32 (...) @BLANK()
  %256 = load i32, i32* @__LC_EXT_PARAMS, align 4
  %257 = load i32****, i32***** @lowcore, align 8
  %258 = load i32****, i32***** @ext_params, align 8
  %259 = call i32 @OFFSET(i32 %256, i32**** %257, i32**** %258)
  %260 = load i32, i32* @__LC_EXT_CPU_ADDR, align 4
  %261 = load i32****, i32***** @lowcore, align 8
  %262 = load i32****, i32***** @ext_cpu_addr, align 8
  %263 = call i32 @OFFSET(i32 %260, i32**** %261, i32**** %262)
  %264 = load i32, i32* @__LC_EXT_INT_CODE, align 4
  %265 = load i32****, i32***** @lowcore, align 8
  %266 = load i32****, i32***** @ext_int_code, align 8
  %267 = call i32 @OFFSET(i32 %264, i32**** %265, i32**** %266)
  %268 = load i32, i32* @__LC_SVC_ILC, align 4
  %269 = load i32****, i32***** @lowcore, align 8
  %270 = load i32****, i32***** @svc_ilc, align 8
  %271 = call i32 @OFFSET(i32 %268, i32**** %269, i32**** %270)
  %272 = load i32, i32* @__LC_SVC_INT_CODE, align 4
  %273 = load i32****, i32***** @lowcore, align 8
  %274 = load i32****, i32***** @svc_code, align 8
  %275 = call i32 @OFFSET(i32 %272, i32**** %273, i32**** %274)
  %276 = load i32, i32* @__LC_PGM_ILC, align 4
  %277 = load i32****, i32***** @lowcore, align 8
  %278 = load i32****, i32***** @pgm_ilc, align 8
  %279 = call i32 @OFFSET(i32 %276, i32**** %277, i32**** %278)
  %280 = load i32, i32* @__LC_PGM_INT_CODE, align 4
  %281 = load i32****, i32***** @lowcore, align 8
  %282 = load i32****, i32***** @pgm_code, align 8
  %283 = call i32 @OFFSET(i32 %280, i32**** %281, i32**** %282)
  %284 = load i32, i32* @__LC_DATA_EXC_CODE, align 4
  %285 = load i32****, i32***** @lowcore, align 8
  %286 = load i32****, i32***** @data_exc_code, align 8
  %287 = call i32 @OFFSET(i32 %284, i32**** %285, i32**** %286)
  %288 = load i32, i32* @__LC_MON_CLASS_NR, align 4
  %289 = load i32****, i32***** @lowcore, align 8
  %290 = load i32****, i32***** @mon_class_num, align 8
  %291 = call i32 @OFFSET(i32 %288, i32**** %289, i32**** %290)
  %292 = load i32, i32* @__LC_PER_CODE, align 4
  %293 = load i32****, i32***** @lowcore, align 8
  %294 = load i32****, i32***** @per_code, align 8
  %295 = call i32 @OFFSET(i32 %292, i32**** %293, i32**** %294)
  %296 = load i32, i32* @__LC_PER_ATMID, align 4
  %297 = load i32****, i32***** @lowcore, align 8
  %298 = load i32****, i32***** @per_atmid, align 8
  %299 = call i32 @OFFSET(i32 %296, i32**** %297, i32**** %298)
  %300 = load i32, i32* @__LC_PER_ADDRESS, align 4
  %301 = load i32****, i32***** @lowcore, align 8
  %302 = load i32****, i32***** @per_address, align 8
  %303 = call i32 @OFFSET(i32 %300, i32**** %301, i32**** %302)
  %304 = load i32, i32* @__LC_EXC_ACCESS_ID, align 4
  %305 = load i32****, i32***** @lowcore, align 8
  %306 = load i32****, i32***** @exc_access_id, align 8
  %307 = call i32 @OFFSET(i32 %304, i32**** %305, i32**** %306)
  %308 = load i32, i32* @__LC_PER_ACCESS_ID, align 4
  %309 = load i32****, i32***** @lowcore, align 8
  %310 = load i32****, i32***** @per_access_id, align 8
  %311 = call i32 @OFFSET(i32 %308, i32**** %309, i32**** %310)
  %312 = load i32, i32* @__LC_OP_ACCESS_ID, align 4
  %313 = load i32****, i32***** @lowcore, align 8
  %314 = load i32****, i32***** @op_access_id, align 8
  %315 = call i32 @OFFSET(i32 %312, i32**** %313, i32**** %314)
  %316 = load i32, i32* @__LC_AR_MODE_ID, align 4
  %317 = load i32****, i32***** @lowcore, align 8
  %318 = load i32****, i32***** @ar_mode_id, align 8
  %319 = call i32 @OFFSET(i32 %316, i32**** %317, i32**** %318)
  %320 = load i32, i32* @__LC_TRANS_EXC_CODE, align 4
  %321 = load i32****, i32***** @lowcore, align 8
  %322 = load i32****, i32***** @trans_exc_code, align 8
  %323 = call i32 @OFFSET(i32 %320, i32**** %321, i32**** %322)
  %324 = load i32, i32* @__LC_MON_CODE, align 4
  %325 = load i32****, i32***** @lowcore, align 8
  %326 = load i32****, i32***** @monitor_code, align 8
  %327 = call i32 @OFFSET(i32 %324, i32**** %325, i32**** %326)
  %328 = load i32, i32* @__LC_SUBCHANNEL_ID, align 4
  %329 = load i32****, i32***** @lowcore, align 8
  %330 = load i32****, i32***** @subchannel_id, align 8
  %331 = call i32 @OFFSET(i32 %328, i32**** %329, i32**** %330)
  %332 = load i32, i32* @__LC_SUBCHANNEL_NR, align 4
  %333 = load i32****, i32***** @lowcore, align 8
  %334 = load i32****, i32***** @subchannel_nr, align 8
  %335 = call i32 @OFFSET(i32 %332, i32**** %333, i32**** %334)
  %336 = load i32, i32* @__LC_IO_INT_PARM, align 4
  %337 = load i32****, i32***** @lowcore, align 8
  %338 = load i32****, i32***** @io_int_parm, align 8
  %339 = call i32 @OFFSET(i32 %336, i32**** %337, i32**** %338)
  %340 = load i32, i32* @__LC_IO_INT_WORD, align 4
  %341 = load i32****, i32***** @lowcore, align 8
  %342 = load i32****, i32***** @io_int_word, align 8
  %343 = call i32 @OFFSET(i32 %340, i32**** %341, i32**** %342)
  %344 = load i32, i32* @__LC_STFL_FAC_LIST, align 4
  %345 = load i32****, i32***** @lowcore, align 8
  %346 = load i32****, i32***** @stfl_fac_list, align 8
  %347 = call i32 @OFFSET(i32 %344, i32**** %345, i32**** %346)
  %348 = load i32, i32* @__LC_STFLE_FAC_LIST, align 4
  %349 = load i32****, i32***** @lowcore, align 8
  %350 = load i32****, i32***** @stfle_fac_list, align 8
  %351 = call i32 @OFFSET(i32 %348, i32**** %349, i32**** %350)
  %352 = load i32, i32* @__LC_MCCK_CODE, align 4
  %353 = load i32****, i32***** @lowcore, align 8
  %354 = load i32****, i32***** @mcck_interruption_code, align 8
  %355 = call i32 @OFFSET(i32 %352, i32**** %353, i32**** %354)
  %356 = load i32, i32* @__LC_EXT_DAMAGE_CODE, align 4
  %357 = load i32****, i32***** @lowcore, align 8
  %358 = load i32****, i32***** @external_damage_code, align 8
  %359 = call i32 @OFFSET(i32 %356, i32**** %357, i32**** %358)
  %360 = load i32, i32* @__LC_MCCK_FAIL_STOR_ADDR, align 4
  %361 = load i32****, i32***** @lowcore, align 8
  %362 = load i32****, i32***** @failing_storage_address, align 8
  %363 = call i32 @OFFSET(i32 %360, i32**** %361, i32**** %362)
  %364 = load i32, i32* @__LC_LAST_BREAK, align 4
  %365 = load i32****, i32***** @lowcore, align 8
  %366 = load i32****, i32***** @breaking_event_addr, align 8
  %367 = call i32 @OFFSET(i32 %364, i32**** %365, i32**** %366)
  %368 = load i32, i32* @__LC_RST_OLD_PSW, align 4
  %369 = load i32****, i32***** @lowcore, align 8
  %370 = load i32****, i32***** @restart_old_psw, align 8
  %371 = call i32 @OFFSET(i32 %368, i32**** %369, i32**** %370)
  %372 = load i32, i32* @__LC_EXT_OLD_PSW, align 4
  %373 = load i32****, i32***** @lowcore, align 8
  %374 = load i32****, i32***** @external_old_psw, align 8
  %375 = call i32 @OFFSET(i32 %372, i32**** %373, i32**** %374)
  %376 = load i32, i32* @__LC_SVC_OLD_PSW, align 4
  %377 = load i32****, i32***** @lowcore, align 8
  %378 = load i32****, i32***** @svc_old_psw, align 8
  %379 = call i32 @OFFSET(i32 %376, i32**** %377, i32**** %378)
  %380 = load i32, i32* @__LC_PGM_OLD_PSW, align 4
  %381 = load i32****, i32***** @lowcore, align 8
  %382 = load i32****, i32***** @program_old_psw, align 8
  %383 = call i32 @OFFSET(i32 %380, i32**** %381, i32**** %382)
  %384 = load i32, i32* @__LC_MCK_OLD_PSW, align 4
  %385 = load i32****, i32***** @lowcore, align 8
  %386 = load i32****, i32***** @mcck_old_psw, align 8
  %387 = call i32 @OFFSET(i32 %384, i32**** %385, i32**** %386)
  %388 = load i32, i32* @__LC_IO_OLD_PSW, align 4
  %389 = load i32****, i32***** @lowcore, align 8
  %390 = load i32****, i32***** @io_old_psw, align 8
  %391 = call i32 @OFFSET(i32 %388, i32**** %389, i32**** %390)
  %392 = load i32, i32* @__LC_RST_NEW_PSW, align 4
  %393 = load i32****, i32***** @lowcore, align 8
  %394 = load i32****, i32***** @restart_psw, align 8
  %395 = call i32 @OFFSET(i32 %392, i32**** %393, i32**** %394)
  %396 = load i32, i32* @__LC_EXT_NEW_PSW, align 4
  %397 = load i32****, i32***** @lowcore, align 8
  %398 = load i32****, i32***** @external_new_psw, align 8
  %399 = call i32 @OFFSET(i32 %396, i32**** %397, i32**** %398)
  %400 = load i32, i32* @__LC_SVC_NEW_PSW, align 4
  %401 = load i32****, i32***** @lowcore, align 8
  %402 = load i32****, i32***** @svc_new_psw, align 8
  %403 = call i32 @OFFSET(i32 %400, i32**** %401, i32**** %402)
  %404 = load i32, i32* @__LC_PGM_NEW_PSW, align 4
  %405 = load i32****, i32***** @lowcore, align 8
  %406 = load i32****, i32***** @program_new_psw, align 8
  %407 = call i32 @OFFSET(i32 %404, i32**** %405, i32**** %406)
  %408 = load i32, i32* @__LC_MCK_NEW_PSW, align 4
  %409 = load i32****, i32***** @lowcore, align 8
  %410 = load i32****, i32***** @mcck_new_psw, align 8
  %411 = call i32 @OFFSET(i32 %408, i32**** %409, i32**** %410)
  %412 = load i32, i32* @__LC_IO_NEW_PSW, align 4
  %413 = load i32****, i32***** @lowcore, align 8
  %414 = load i32****, i32***** @io_new_psw, align 8
  %415 = call i32 @OFFSET(i32 %412, i32**** %413, i32**** %414)
  %416 = load i32, i32* @__LC_SAVE_AREA_SYNC, align 4
  %417 = load i32****, i32***** @lowcore, align 8
  %418 = load i32****, i32***** @save_area_sync, align 8
  %419 = call i32 @OFFSET(i32 %416, i32**** %417, i32**** %418)
  %420 = load i32, i32* @__LC_SAVE_AREA_ASYNC, align 4
  %421 = load i32****, i32***** @lowcore, align 8
  %422 = load i32****, i32***** @save_area_async, align 8
  %423 = call i32 @OFFSET(i32 %420, i32**** %421, i32**** %422)
  %424 = load i32, i32* @__LC_SAVE_AREA_RESTART, align 4
  %425 = load i32****, i32***** @lowcore, align 8
  %426 = load i32****, i32***** @save_area_restart, align 8
  %427 = call i32 @OFFSET(i32 %424, i32**** %425, i32**** %426)
  %428 = load i32, i32* @__LC_CPU_FLAGS, align 4
  %429 = load i32****, i32***** @lowcore, align 8
  %430 = load i32****, i32***** @cpu_flags, align 8
  %431 = call i32 @OFFSET(i32 %428, i32**** %429, i32**** %430)
  %432 = load i32, i32* @__LC_RETURN_PSW, align 4
  %433 = load i32****, i32***** @lowcore, align 8
  %434 = load i32****, i32***** @return_psw, align 8
  %435 = call i32 @OFFSET(i32 %432, i32**** %433, i32**** %434)
  %436 = load i32, i32* @__LC_RETURN_MCCK_PSW, align 4
  %437 = load i32****, i32***** @lowcore, align 8
  %438 = load i32****, i32***** @return_mcck_psw, align 8
  %439 = call i32 @OFFSET(i32 %436, i32**** %437, i32**** %438)
  %440 = load i32, i32* @__LC_SYNC_ENTER_TIMER, align 4
  %441 = load i32****, i32***** @lowcore, align 8
  %442 = load i32****, i32***** @sync_enter_timer, align 8
  %443 = call i32 @OFFSET(i32 %440, i32**** %441, i32**** %442)
  %444 = load i32, i32* @__LC_ASYNC_ENTER_TIMER, align 4
  %445 = load i32****, i32***** @lowcore, align 8
  %446 = load i32****, i32***** @async_enter_timer, align 8
  %447 = call i32 @OFFSET(i32 %444, i32**** %445, i32**** %446)
  %448 = load i32, i32* @__LC_MCCK_ENTER_TIMER, align 4
  %449 = load i32****, i32***** @lowcore, align 8
  %450 = load i32****, i32***** @mcck_enter_timer, align 8
  %451 = call i32 @OFFSET(i32 %448, i32**** %449, i32**** %450)
  %452 = load i32, i32* @__LC_EXIT_TIMER, align 4
  %453 = load i32****, i32***** @lowcore, align 8
  %454 = load i32****, i32***** @exit_timer, align 8
  %455 = call i32 @OFFSET(i32 %452, i32**** %453, i32**** %454)
  %456 = load i32, i32* @__LC_USER_TIMER, align 4
  %457 = load i32****, i32***** @lowcore, align 8
  %458 = load i32****, i32***** @user_timer, align 8
  %459 = call i32 @OFFSET(i32 %456, i32**** %457, i32**** %458)
  %460 = load i32, i32* @__LC_SYSTEM_TIMER, align 4
  %461 = load i32****, i32***** @lowcore, align 8
  %462 = load i32****, i32***** @system_timer, align 8
  %463 = call i32 @OFFSET(i32 %460, i32**** %461, i32**** %462)
  %464 = load i32, i32* @__LC_STEAL_TIMER, align 4
  %465 = load i32****, i32***** @lowcore, align 8
  %466 = load i32****, i32***** @steal_timer, align 8
  %467 = call i32 @OFFSET(i32 %464, i32**** %465, i32**** %466)
  %468 = load i32, i32* @__LC_LAST_UPDATE_TIMER, align 4
  %469 = load i32****, i32***** @lowcore, align 8
  %470 = load i32****, i32***** @last_update_timer, align 8
  %471 = call i32 @OFFSET(i32 %468, i32**** %469, i32**** %470)
  %472 = load i32, i32* @__LC_LAST_UPDATE_CLOCK, align 4
  %473 = load i32****, i32***** @lowcore, align 8
  %474 = load i32****, i32***** @last_update_clock, align 8
  %475 = call i32 @OFFSET(i32 %472, i32**** %473, i32**** %474)
  %476 = load i32, i32* @__LC_INT_CLOCK, align 4
  %477 = load i32****, i32***** @lowcore, align 8
  %478 = load i32****, i32***** @int_clock, align 8
  %479 = call i32 @OFFSET(i32 %476, i32**** %477, i32**** %478)
  %480 = load i32, i32* @__LC_MCCK_CLOCK, align 4
  %481 = load i32****, i32***** @lowcore, align 8
  %482 = load i32****, i32***** @mcck_clock, align 8
  %483 = call i32 @OFFSET(i32 %480, i32**** %481, i32**** %482)
  %484 = load i32, i32* @__LC_CLOCK_COMPARATOR, align 4
  %485 = load i32****, i32***** @lowcore, align 8
  %486 = load i32****, i32***** @clock_comparator, align 8
  %487 = call i32 @OFFSET(i32 %484, i32**** %485, i32**** %486)
  %488 = load i32, i32* @__LC_BOOT_CLOCK, align 4
  %489 = load i32****, i32***** @lowcore, align 8
  %490 = load i32****, i32***** @boot_clock, align 8
  %491 = call i32 @OFFSET(i32 %488, i32**** %489, i32**** %490)
  %492 = load i32, i32* @__LC_CURRENT, align 4
  %493 = load i32****, i32***** @lowcore, align 8
  %494 = load i32****, i32***** @current_task, align 8
  %495 = call i32 @OFFSET(i32 %492, i32**** %493, i32**** %494)
  %496 = load i32, i32* @__LC_KERNEL_STACK, align 4
  %497 = load i32****, i32***** @lowcore, align 8
  %498 = load i32****, i32***** @kernel_stack, align 8
  %499 = call i32 @OFFSET(i32 %496, i32**** %497, i32**** %498)
  %500 = load i32, i32* @__LC_ASYNC_STACK, align 4
  %501 = load i32****, i32***** @lowcore, align 8
  %502 = load i32****, i32***** @async_stack, align 8
  %503 = call i32 @OFFSET(i32 %500, i32**** %501, i32**** %502)
  %504 = load i32, i32* @__LC_NODAT_STACK, align 4
  %505 = load i32****, i32***** @lowcore, align 8
  %506 = load i32****, i32***** @nodat_stack, align 8
  %507 = call i32 @OFFSET(i32 %504, i32**** %505, i32**** %506)
  %508 = load i32, i32* @__LC_RESTART_STACK, align 4
  %509 = load i32****, i32***** @lowcore, align 8
  %510 = load i32****, i32***** @restart_stack, align 8
  %511 = call i32 @OFFSET(i32 %508, i32**** %509, i32**** %510)
  %512 = load i32, i32* @__LC_RESTART_FN, align 4
  %513 = load i32****, i32***** @lowcore, align 8
  %514 = load i32****, i32***** @restart_fn, align 8
  %515 = call i32 @OFFSET(i32 %512, i32**** %513, i32**** %514)
  %516 = load i32, i32* @__LC_RESTART_DATA, align 4
  %517 = load i32****, i32***** @lowcore, align 8
  %518 = load i32****, i32***** @restart_data, align 8
  %519 = call i32 @OFFSET(i32 %516, i32**** %517, i32**** %518)
  %520 = load i32, i32* @__LC_RESTART_SOURCE, align 4
  %521 = load i32****, i32***** @lowcore, align 8
  %522 = load i32****, i32***** @restart_source, align 8
  %523 = call i32 @OFFSET(i32 %520, i32**** %521, i32**** %522)
  %524 = load i32, i32* @__LC_USER_ASCE, align 4
  %525 = load i32****, i32***** @lowcore, align 8
  %526 = load i32****, i32***** @user_asce, align 8
  %527 = call i32 @OFFSET(i32 %524, i32**** %525, i32**** %526)
  %528 = load i32, i32* @__LC_VDSO_ASCE, align 4
  %529 = load i32****, i32***** @lowcore, align 8
  %530 = load i32****, i32***** @vdso_asce, align 8
  %531 = call i32 @OFFSET(i32 %528, i32**** %529, i32**** %530)
  %532 = load i32, i32* @__LC_LPP, align 4
  %533 = load i32****, i32***** @lowcore, align 8
  %534 = load i32****, i32***** @lpp, align 8
  %535 = call i32 @OFFSET(i32 %532, i32**** %533, i32**** %534)
  %536 = load i32, i32* @__LC_CURRENT_PID, align 4
  %537 = load i32****, i32***** @lowcore, align 8
  %538 = load i32****, i32***** @current_pid, align 8
  %539 = call i32 @OFFSET(i32 %536, i32**** %537, i32**** %538)
  %540 = load i32, i32* @__LC_PERCPU_OFFSET, align 4
  %541 = load i32****, i32***** @lowcore, align 8
  %542 = load i32****, i32***** @percpu_offset, align 8
  %543 = call i32 @OFFSET(i32 %540, i32**** %541, i32**** %542)
  %544 = load i32, i32* @__LC_VDSO_PER_CPU, align 4
  %545 = load i32****, i32***** @lowcore, align 8
  %546 = load i32****, i32***** @vdso_per_cpu_data, align 8
  %547 = call i32 @OFFSET(i32 %544, i32**** %545, i32**** %546)
  %548 = load i32, i32* @__LC_MACHINE_FLAGS, align 4
  %549 = load i32****, i32***** @lowcore, align 8
  %550 = load i32****, i32***** @machine_flags, align 8
  %551 = call i32 @OFFSET(i32 %548, i32**** %549, i32**** %550)
  %552 = load i32, i32* @__LC_PREEMPT_COUNT, align 4
  %553 = load i32****, i32***** @lowcore, align 8
  %554 = load i32****, i32***** @preempt_count, align 8
  %555 = call i32 @OFFSET(i32 %552, i32**** %553, i32**** %554)
  %556 = load i32, i32* @__LC_GMAP, align 4
  %557 = load i32****, i32***** @lowcore, align 8
  %558 = load i32****, i32***** @gmap, align 8
  %559 = call i32 @OFFSET(i32 %556, i32**** %557, i32**** %558)
  %560 = load i32, i32* @__LC_BR_R1, align 4
  %561 = load i32****, i32***** @lowcore, align 8
  %562 = load i32****, i32***** @br_r1_trampoline, align 8
  %563 = call i32 @OFFSET(i32 %560, i32**** %561, i32**** %562)
  %564 = load i32, i32* @__LC_DUMP_REIPL, align 4
  %565 = load i32****, i32***** @lowcore, align 8
  %566 = load i32****, i32***** @ipib, align 8
  %567 = call i32 @OFFSET(i32 %564, i32**** %565, i32**** %566)
  %568 = load i32, i32* @__LC_MCESAD, align 4
  %569 = load i32****, i32***** @lowcore, align 8
  %570 = load i32****, i32***** @mcesad, align 8
  %571 = call i32 @OFFSET(i32 %568, i32**** %569, i32**** %570)
  %572 = load i32, i32* @__LC_EXT_PARAMS2, align 4
  %573 = load i32****, i32***** @lowcore, align 8
  %574 = load i32****, i32***** @ext_params2, align 8
  %575 = call i32 @OFFSET(i32 %572, i32**** %573, i32**** %574)
  %576 = load i32, i32* @__LC_FPREGS_SAVE_AREA, align 4
  %577 = load i32****, i32***** @lowcore, align 8
  %578 = load i32****, i32***** @floating_pt_save_area, align 8
  %579 = call i32 @OFFSET(i32 %576, i32**** %577, i32**** %578)
  %580 = load i32, i32* @__LC_GPREGS_SAVE_AREA, align 4
  %581 = load i32****, i32***** @lowcore, align 8
  %582 = load i32****, i32***** @gpregs_save_area, align 8
  %583 = call i32 @OFFSET(i32 %580, i32**** %581, i32**** %582)
  %584 = load i32, i32* @__LC_PSW_SAVE_AREA, align 4
  %585 = load i32****, i32***** @lowcore, align 8
  %586 = load i32****, i32***** @psw_save_area, align 8
  %587 = call i32 @OFFSET(i32 %584, i32**** %585, i32**** %586)
  %588 = load i32, i32* @__LC_PREFIX_SAVE_AREA, align 4
  %589 = load i32****, i32***** @lowcore, align 8
  %590 = load i32****, i32***** @prefixreg_save_area, align 8
  %591 = call i32 @OFFSET(i32 %588, i32**** %589, i32**** %590)
  %592 = load i32, i32* @__LC_FP_CREG_SAVE_AREA, align 4
  %593 = load i32****, i32***** @lowcore, align 8
  %594 = load i32****, i32***** @fpt_creg_save_area, align 8
  %595 = call i32 @OFFSET(i32 %592, i32**** %593, i32**** %594)
  %596 = load i32, i32* @__LC_TOD_PROGREG_SAVE_AREA, align 4
  %597 = load i32****, i32***** @lowcore, align 8
  %598 = load i32****, i32***** @tod_progreg_save_area, align 8
  %599 = call i32 @OFFSET(i32 %596, i32**** %597, i32**** %598)
  %600 = load i32, i32* @__LC_CPU_TIMER_SAVE_AREA, align 4
  %601 = load i32****, i32***** @lowcore, align 8
  %602 = load i32****, i32***** @cpu_timer_save_area, align 8
  %603 = call i32 @OFFSET(i32 %600, i32**** %601, i32**** %602)
  %604 = load i32, i32* @__LC_CLOCK_COMP_SAVE_AREA, align 4
  %605 = load i32****, i32***** @lowcore, align 8
  %606 = load i32****, i32***** @clock_comp_save_area, align 8
  %607 = call i32 @OFFSET(i32 %604, i32**** %605, i32**** %606)
  %608 = load i32, i32* @__LC_AREGS_SAVE_AREA, align 4
  %609 = load i32****, i32***** @lowcore, align 8
  %610 = load i32****, i32***** @access_regs_save_area, align 8
  %611 = call i32 @OFFSET(i32 %608, i32**** %609, i32**** %610)
  %612 = load i32, i32* @__LC_CREGS_SAVE_AREA, align 4
  %613 = load i32****, i32***** @lowcore, align 8
  %614 = load i32****, i32***** @cregs_save_area, align 8
  %615 = call i32 @OFFSET(i32 %612, i32**** %613, i32**** %614)
  %616 = load i32, i32* @__LC_PGM_TDB, align 4
  %617 = load i32****, i32***** @lowcore, align 8
  %618 = load i32****, i32***** @pgm_tdb, align 8
  %619 = call i32 @OFFSET(i32 %616, i32**** %617, i32**** %618)
  %620 = call i32 (...) @BLANK()
  %621 = load i32, i32* @__MCESA_GS_SAVE_AREA, align 4
  %622 = load i32****, i32***** @mcesa, align 8
  %623 = load i32****, i32***** @guarded_storage_save_area, align 8
  %624 = call i32 @OFFSET(i32 %621, i32**** %622, i32**** %623)
  %625 = call i32 (...) @BLANK()
  %626 = load i32, i32* @__GMAP_ASCE, align 4
  %627 = load i32****, i32***** @gmap, align 8
  %628 = load i32****, i32***** @asce, align 8
  %629 = call i32 @OFFSET(i32 %626, i32**** %627, i32**** %628)
  %630 = load i32, i32* @__SIE_PROG0C, align 4
  %631 = load i32****, i32***** @kvm_s390_sie_block, align 8
  %632 = load i32****, i32***** @prog0c, align 8
  %633 = call i32 @OFFSET(i32 %630, i32**** %631, i32**** %632)
  %634 = load i32, i32* @__SIE_PROG20, align 4
  %635 = load i32****, i32***** @kvm_s390_sie_block, align 8
  %636 = load i32****, i32***** @prog20, align 8
  %637 = call i32 @OFFSET(i32 %634, i32**** %635, i32**** %636)
  %638 = load i32, i32* @__KEXEC_SHA_REGION_START, align 4
  %639 = load i32****, i32***** @kexec_sha_region, align 8
  %640 = load i32****, i32***** @start, align 8
  %641 = call i32 @OFFSET(i32 %638, i32**** %639, i32**** %640)
  %642 = load i32, i32* @__KEXEC_SHA_REGION_LEN, align 4
  %643 = load i32****, i32***** @kexec_sha_region, align 8
  %644 = load i32****, i32***** @len, align 8
  %645 = call i32 @OFFSET(i32 %642, i32**** %643, i32**** %644)
  %646 = load i32, i32* @__KEXEC_SHA_REGION_SIZE, align 4
  %647 = call i32 @DEFINE(i32 %646, i32 4)
  ret i32 0
}

declare dso_local i32 @OFFSET(i32, i32****, i32****) #1

declare dso_local i32 @BLANK(...) #1

declare dso_local i32 @DEFINE(i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
