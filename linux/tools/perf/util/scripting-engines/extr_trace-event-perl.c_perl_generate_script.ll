; ModuleID = '/home/carl/AnghaBench/linux/tools/perf/util/scripting-engines/extr_trace-event-perl.c_perl_generate_script.c'
source_filename = "/home/carl/AnghaBench/linux/tools/perf/util/scripting-engines/extr_trace-event-perl.c_perl_generate_script.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.tep_handle = type { i32 }
%struct.tep_event = type { i8*, i8*, %struct.TYPE_2__ }
%struct.TYPE_2__ = type { %struct.tep_format_field* }
%struct.tep_format_field = type { i8*, i32, %struct.tep_format_field* }

@PATH_MAX = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [6 x i8] c"%s.pl\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@stderr = common dso_local global i32* null, align 8
@.str.2 = private unnamed_addr constant [18 x i8] c"couldn't open %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [64 x i8] c"# perf script event handlers, generated by perf script -g perl\0A\00", align 1
@.str.4 = private unnamed_addr constant [62 x i8] c"# Licensed under the terms of the GNU GPL License version 2\0A\0A\00", align 1
@.str.5 = private unnamed_addr constant [74 x i8] c"# The common_* event handler fields are the most useful fields common to\0A\00", align 1
@.str.6 = private unnamed_addr constant [75 x i8] c"# all events.  They don't necessarily correspond to the 'common_*' fields\0A\00", align 1
@.str.7 = private unnamed_addr constant [74 x i8] c"# in the format files.  Those fields not available as handler params can\0A\00", align 1
@.str.8 = private unnamed_addr constant [69 x i8] c"# be retrieved using Perl functions of the form common_*($context).\0A\00", align 1
@.str.9 = private unnamed_addr constant [56 x i8] c"# See Context.pm for the list of available functions.\0A\0A\00", align 1
@.str.10 = private unnamed_addr constant [68 x i8] c"use lib \22$ENV{'PERF_EXEC_PATH'}/scripts/perl/Perf-Trace-Util/lib\22;\0A\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"use lib \22./Perf-Trace-Util/lib\22;\0A\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"use Perf::Trace::Core;\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"use Perf::Trace::Context;\0A\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"use Perf::Trace::Util;\0A\0A\00", align 1
@.str.15 = private unnamed_addr constant [34 x i8] c"sub trace_begin\0A{\0A\09# optional\0A}\0A\0A\00", align 1
@.str.16 = private unnamed_addr constant [31 x i8] c"sub trace_end\0A{\0A\09# optional\0A}\0A\00", align 1
@.str.17 = private unnamed_addr constant [235 x i8] c"\0Asub print_backtrace\0A{\0A\09my $callchain = shift;\0A\09for my $node (@$callchain)\0A\09{\0A\09\09if(exists $node->{sym})\0A\09\09{\0A\09\09\09printf( \22\\t[\\%%x] \\%%s\\n\22, $node->{ip}, $node->{sym}{name});\0A\09\09}\0A\09\09else\0A\09\09{\0A\09\09\09printf( \22\\t[\\%%x]\\n\22, $node{ip});\0A\09\09}\0A\09}\0A}\0A\0A\00", align 1
@TEP_EVENT_SORT_ID = common dso_local global i32 0, align 4
@.str.18 = private unnamed_addr constant [14 x i8] c"sub %s::%s\0A{\0A\00", align 1
@.str.19 = private unnamed_addr constant [6 x i8] c"\09my (\00", align 1
@.str.20 = private unnamed_addr constant [14 x i8] c"$event_name, \00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"$context, \00", align 1
@.str.22 = private unnamed_addr constant [14 x i8] c"$common_cpu, \00", align 1
@.str.23 = private unnamed_addr constant [15 x i8] c"$common_secs, \00", align 1
@.str.24 = private unnamed_addr constant [16 x i8] c"$common_nsecs,\0A\00", align 1
@.str.25 = private unnamed_addr constant [19 x i8] c"\09    $common_pid, \00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"$common_comm, \00", align 1
@.str.27 = private unnamed_addr constant [25 x i8] c"$common_callchain,\0A\09    \00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"\0A\09    \00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"$%s\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c") = @_;\0A\0A\00", align 1
@.str.32 = private unnamed_addr constant [132 x i8] c"\09print_header($event_name, $common_cpu, $common_secs, $common_nsecs,\0A\09             $common_pid, $common_comm, $common_callchain);\0A\0A\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"\09printf(\22\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"\22.\0A\09       \22\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"%s=\00", align 1
@TEP_FIELD_IS_STRING = common dso_local global i32 0, align 4
@TEP_FIELD_IS_FLAG = common dso_local global i32 0, align 4
@TEP_FIELD_IS_SYMBOLIC = common dso_local global i32 0, align 4
@.str.36 = private unnamed_addr constant [4 x i8] c"%%s\00", align 1
@TEP_FIELD_IS_SIGNED = common dso_local global i32 0, align 4
@.str.37 = private unnamed_addr constant [4 x i8] c"%%d\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"%%u\00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"\\n\22,\0A\09       \00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"\0A\09       \00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"flag_str(\22\00", align 1
@.str.42 = private unnamed_addr constant [10 x i8] c"%s::%s\22, \00", align 1
@.str.43 = private unnamed_addr constant [11 x i8] c"\22%s\22, $%s)\00", align 1
@.str.44 = private unnamed_addr constant [13 x i8] c"symbol_str(\22\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c");\0A\0A\00", align 1
@.str.46 = private unnamed_addr constant [38 x i8] c"\09print_backtrace($common_callchain);\0A\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"}\0A\0A\00", align 1
@.str.48 = private unnamed_addr constant [151 x i8] c"sub trace_unhandled\0A{\0A\09my ($event_name, $context, $common_cpu, $common_secs, $common_nsecs,\0A\09    $common_pid, $common_comm, $common_callchain) = @_;\0A\0A\00", align 1
@.str.49 = private unnamed_addr constant [131 x i8] c"\09print_header($event_name, $common_cpu, $common_secs, $common_nsecs,\0A\09             $common_pid, $common_comm, $common_callchain);\0A\00", align 1
@.str.50 = private unnamed_addr constant [185 x i8] c"sub print_header\0A{\0A\09my ($event_name, $cpu, $secs, $nsecs, $pid, $comm) = @_;\0A\0A\09printf(\22%%-20s %%5u %%05u.%%09u %%8u %%-20s \22,\0A\09       $event_name, $cpu, $secs, $nsecs, $pid, $comm);\0A}\0A\00", align 1
@.str.51 = private unnamed_addr constant [539 x i8] c"\0A# Packed byte string args of process_event():\0A#\0A# $event:\09union perf_event\09util/event.h\0A# $attr:\09struct perf_event_attr\09linux/perf_event.h\0A# $sample:\09struct perf_sample\09util/event.h\0A# $raw_data:\09perf_sample->raw_data\09util/event.h\0A\0Asub process_event\0A{\0A\09my ($event, $attr, $sample, $raw_data) = @_;\0A\0A\09my @event\09= unpack(\22LSS\22, $event);\0A\09my @attr\09= unpack(\22LLQQQQQLLQQ\22, $attr);\0A\09my @sample\09= unpack(\22QLLQQQQQLL\22, $sample);\0A\09my @raw_data\09= unpack(\22C*\22, $raw_data);\0A\0A\09use Data::Dumper;\0A\09print Dumper \\@event, \\@attr, \\@sample, \\@raw_data;\0A}\0A\00", align 1
@.str.52 = private unnamed_addr constant [27 x i8] c"generated Perl script: %s\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (%struct.tep_handle*, i8*)* @perl_generate_script to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @perl_generate_script(%struct.tep_handle* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.tep_handle*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca %struct.tep_event**, align 8
  %11 = alloca %struct.tep_event*, align 8
  %12 = alloca %struct.tep_format_field*, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i64, align 8
  %15 = alloca i32*, align 8
  %16 = alloca i32, align 4
  store %struct.tep_handle* %0, %struct.tep_handle** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.tep_event* null, %struct.tep_event** %11, align 8
  %17 = load i32, i32* @PATH_MAX, align 4
  %18 = zext i32 %17 to i64
  %19 = call i8* @llvm.stacksave()
  store i8* %19, i8** %13, align 8
  %20 = alloca i8, i64 %18, align 16
  store i64 %18, i64* %14, align 8
  %21 = load i8*, i8** %5, align 8
  %22 = call i32 @sprintf(i8* %20, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* %21)
  %23 = call i32* @fopen(i8* %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  store i32* %23, i32** %15, align 8
  %24 = load i32*, i32** %15, align 8
  %25 = icmp eq i32* %24, null
  br i1 %25, label %26, label %29

26:                                               ; preds = %2
  %27 = load i32*, i32** @stderr, align 8
  %28 = call i32 (i32*, i8*, ...) @fprintf(i32* %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* %20)
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %16, align 4
  br label %351

29:                                               ; preds = %2
  %30 = load i32*, i32** %15, align 8
  %31 = call i32 (i32*, i8*, ...) @fprintf(i32* %30, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3, i64 0, i64 0))
  %32 = load i32*, i32** %15, align 8
  %33 = call i32 (i32*, i8*, ...) @fprintf(i32* %32, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0))
  %34 = load i32*, i32** %15, align 8
  %35 = call i32 (i32*, i8*, ...) @fprintf(i32* %34, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.5, i64 0, i64 0))
  %36 = load i32*, i32** %15, align 8
  %37 = call i32 (i32*, i8*, ...) @fprintf(i32* %36, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i64 0, i64 0))
  %38 = load i32*, i32** %15, align 8
  %39 = call i32 (i32*, i8*, ...) @fprintf(i32* %38, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0))
  %40 = load i32*, i32** %15, align 8
  %41 = call i32 (i32*, i8*, ...) @fprintf(i32* %40, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.8, i64 0, i64 0))
  %42 = load i32*, i32** %15, align 8
  %43 = call i32 (i32*, i8*, ...) @fprintf(i32* %42, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0))
  %44 = load i32*, i32** %15, align 8
  %45 = call i32 (i32*, i8*, ...) @fprintf(i32* %44, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.10, i64 0, i64 0))
  %46 = load i32*, i32** %15, align 8
  %47 = call i32 (i32*, i8*, ...) @fprintf(i32* %46, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0))
  %48 = load i32*, i32** %15, align 8
  %49 = call i32 (i32*, i8*, ...) @fprintf(i32* %48, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0))
  %50 = load i32*, i32** %15, align 8
  %51 = call i32 (i32*, i8*, ...) @fprintf(i32* %50, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0))
  %52 = load i32*, i32** %15, align 8
  %53 = call i32 (i32*, i8*, ...) @fprintf(i32* %52, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0))
  %54 = load i32*, i32** %15, align 8
  %55 = call i32 (i32*, i8*, ...) @fprintf(i32* %54, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0))
  %56 = load i32*, i32** %15, align 8
  %57 = call i32 (i32*, i8*, ...) @fprintf(i32* %56, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.16, i64 0, i64 0))
  %58 = load i32*, i32** %15, align 8
  %59 = call i32 (i32*, i8*, ...) @fprintf(i32* %58, i8* getelementptr inbounds ([235 x i8], [235 x i8]* @.str.17, i64 0, i64 0))
  %60 = load %struct.tep_handle*, %struct.tep_handle** %4, align 8
  %61 = call i32 @tep_get_events_count(%struct.tep_handle* %60)
  store i32 %61, i32* %9, align 4
  %62 = load %struct.tep_handle*, %struct.tep_handle** %4, align 8
  %63 = load i32, i32* @TEP_EVENT_SORT_ID, align 4
  %64 = call %struct.tep_event** @tep_list_events(%struct.tep_handle* %62, i32 %63)
  store %struct.tep_event** %64, %struct.tep_event*** %10, align 8
  store i32 0, i32* %6, align 4
  br label %65

65:                                               ; preds = %331, %29
  %66 = load %struct.tep_event**, %struct.tep_event*** %10, align 8
  %67 = icmp ne %struct.tep_event** %66, null
  br i1 %67, label %68, label %72

68:                                               ; preds = %65
  %69 = load i32, i32* %6, align 4
  %70 = load i32, i32* %9, align 4
  %71 = icmp slt i32 %69, %70
  br label %72

72:                                               ; preds = %68, %65
  %73 = phi i1 [ false, %65 ], [ %71, %68 ]
  br i1 %73, label %74, label %334

74:                                               ; preds = %72
  %75 = load %struct.tep_event**, %struct.tep_event*** %10, align 8
  %76 = load i32, i32* %6, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds %struct.tep_event*, %struct.tep_event** %75, i64 %77
  %79 = load %struct.tep_event*, %struct.tep_event** %78, align 8
  store %struct.tep_event* %79, %struct.tep_event** %11, align 8
  %80 = load i32*, i32** %15, align 8
  %81 = load %struct.tep_event*, %struct.tep_event** %11, align 8
  %82 = getelementptr inbounds %struct.tep_event, %struct.tep_event* %81, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = load %struct.tep_event*, %struct.tep_event** %11, align 8
  %85 = getelementptr inbounds %struct.tep_event, %struct.tep_event* %84, i32 0, i32 1
  %86 = load i8*, i8** %85, align 8
  %87 = call i32 (i32*, i8*, ...) @fprintf(i32* %80, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18, i64 0, i64 0), i8* %83, i8* %86)
  %88 = load i32*, i32** %15, align 8
  %89 = call i32 (i32*, i8*, ...) @fprintf(i32* %88, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.19, i64 0, i64 0))
  %90 = load i32*, i32** %15, align 8
  %91 = call i32 (i32*, i8*, ...) @fprintf(i32* %90, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0))
  %92 = load i32*, i32** %15, align 8
  %93 = call i32 (i32*, i8*, ...) @fprintf(i32* %92, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0))
  %94 = load i32*, i32** %15, align 8
  %95 = call i32 (i32*, i8*, ...) @fprintf(i32* %94, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.22, i64 0, i64 0))
  %96 = load i32*, i32** %15, align 8
  %97 = call i32 (i32*, i8*, ...) @fprintf(i32* %96, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23, i64 0, i64 0))
  %98 = load i32*, i32** %15, align 8
  %99 = call i32 (i32*, i8*, ...) @fprintf(i32* %98, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i64 0, i64 0))
  %100 = load i32*, i32** %15, align 8
  %101 = call i32 (i32*, i8*, ...) @fprintf(i32* %100, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.25, i64 0, i64 0))
  %102 = load i32*, i32** %15, align 8
  %103 = call i32 (i32*, i8*, ...) @fprintf(i32* %102, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i64 0, i64 0))
  %104 = load i32*, i32** %15, align 8
  %105 = call i32 (i32*, i8*, ...) @fprintf(i32* %104, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.27, i64 0, i64 0))
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  %106 = load %struct.tep_event*, %struct.tep_event** %11, align 8
  %107 = getelementptr inbounds %struct.tep_event, %struct.tep_event* %106, i32 0, i32 2
  %108 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %107, i32 0, i32 0
  %109 = load %struct.tep_format_field*, %struct.tep_format_field** %108, align 8
  store %struct.tep_format_field* %109, %struct.tep_format_field** %12, align 8
  br label %110

110:                                              ; preds = %134, %74
  %111 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %112 = icmp ne %struct.tep_format_field* %111, null
  br i1 %112, label %113, label %138

113:                                              ; preds = %110
  %114 = load i32, i32* %7, align 4
  %115 = add nsw i32 %114, 1
  store i32 %115, i32* %7, align 4
  %116 = icmp ne i32 %114, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %113
  %118 = load i32*, i32** %15, align 8
  %119 = call i32 (i32*, i8*, ...) @fprintf(i32* %118, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0))
  br label %120

120:                                              ; preds = %117, %113
  %121 = load i32, i32* %8, align 4
  %122 = add nsw i32 %121, 1
  store i32 %122, i32* %8, align 4
  %123 = srem i32 %122, 5
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %120
  %126 = load i32*, i32** %15, align 8
  %127 = call i32 (i32*, i8*, ...) @fprintf(i32* %126, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0))
  br label %128

128:                                              ; preds = %125, %120
  %129 = load i32*, i32** %15, align 8
  %130 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %131 = getelementptr inbounds %struct.tep_format_field, %struct.tep_format_field* %130, i32 0, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = call i32 (i32*, i8*, ...) @fprintf(i32* %129, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0), i8* %132)
  br label %134

134:                                              ; preds = %128
  %135 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %136 = getelementptr inbounds %struct.tep_format_field, %struct.tep_format_field* %135, i32 0, i32 2
  %137 = load %struct.tep_format_field*, %struct.tep_format_field** %136, align 8
  store %struct.tep_format_field* %137, %struct.tep_format_field** %12, align 8
  br label %110

138:                                              ; preds = %110
  %139 = load i32*, i32** %15, align 8
  %140 = call i32 (i32*, i8*, ...) @fprintf(i32* %139, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0))
  %141 = load i32*, i32** %15, align 8
  %142 = call i32 (i32*, i8*, ...) @fprintf(i32* %141, i8* getelementptr inbounds ([132 x i8], [132 x i8]* @.str.32, i64 0, i64 0))
  %143 = load i32*, i32** %15, align 8
  %144 = call i32 (i32*, i8*, ...) @fprintf(i32* %143, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0))
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  %145 = load %struct.tep_event*, %struct.tep_event** %11, align 8
  %146 = getelementptr inbounds %struct.tep_event, %struct.tep_event* %145, i32 0, i32 2
  %147 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %146, i32 0, i32 0
  %148 = load %struct.tep_format_field*, %struct.tep_format_field** %147, align 8
  store %struct.tep_format_field* %148, %struct.tep_format_field** %12, align 8
  br label %149

149:                                              ; preds = %215, %138
  %150 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %151 = icmp ne %struct.tep_format_field* %150, null
  br i1 %151, label %152, label %219

152:                                              ; preds = %149
  %153 = load i32, i32* %7, align 4
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %7, align 4
  %155 = icmp ne i32 %153, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %152
  %157 = load i32*, i32** %15, align 8
  %158 = call i32 (i32*, i8*, ...) @fprintf(i32* %157, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0))
  br label %159

159:                                              ; preds = %156, %152
  %160 = load i32, i32* %8, align 4
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %162, label %169

162:                                              ; preds = %159
  %163 = load i32, i32* %8, align 4
  %164 = srem i32 %163, 4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %169

166:                                              ; preds = %162
  %167 = load i32*, i32** %15, align 8
  %168 = call i32 (i32*, i8*, ...) @fprintf(i32* %167, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0))
  br label %169

169:                                              ; preds = %166, %162, %159
  %170 = load i32, i32* %8, align 4
  %171 = add nsw i32 %170, 1
  store i32 %171, i32* %8, align 4
  %172 = load i32*, i32** %15, align 8
  %173 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %174 = getelementptr inbounds %struct.tep_format_field, %struct.tep_format_field* %173, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8
  %176 = call i32 (i32*, i8*, ...) @fprintf(i32* %172, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i8* %175)
  %177 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %178 = getelementptr inbounds %struct.tep_format_field, %struct.tep_format_field* %177, i32 0, i32 1
  %179 = load i32, i32* %178, align 8
  %180 = load i32, i32* @TEP_FIELD_IS_STRING, align 4
  %181 = and i32 %179, %180
  %182 = icmp ne i32 %181, 0
  br i1 %182, label %197, label %183

183:                                              ; preds = %169
  %184 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %185 = getelementptr inbounds %struct.tep_format_field, %struct.tep_format_field* %184, i32 0, i32 1
  %186 = load i32, i32* %185, align 8
  %187 = load i32, i32* @TEP_FIELD_IS_FLAG, align 4
  %188 = and i32 %186, %187
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %197, label %190

190:                                              ; preds = %183
  %191 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %192 = getelementptr inbounds %struct.tep_format_field, %struct.tep_format_field* %191, i32 0, i32 1
  %193 = load i32, i32* %192, align 8
  %194 = load i32, i32* @TEP_FIELD_IS_SYMBOLIC, align 4
  %195 = and i32 %193, %194
  %196 = icmp ne i32 %195, 0
  br i1 %196, label %197, label %200

197:                                              ; preds = %190, %183, %169
  %198 = load i32*, i32** %15, align 8
  %199 = call i32 (i32*, i8*, ...) @fprintf(i32* %198, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0))
  br label %214

200:                                              ; preds = %190
  %201 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %202 = getelementptr inbounds %struct.tep_format_field, %struct.tep_format_field* %201, i32 0, i32 1
  %203 = load i32, i32* %202, align 8
  %204 = load i32, i32* @TEP_FIELD_IS_SIGNED, align 4
  %205 = and i32 %203, %204
  %206 = icmp ne i32 %205, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %200
  %208 = load i32*, i32** %15, align 8
  %209 = call i32 (i32*, i8*, ...) @fprintf(i32* %208, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0))
  br label %213

210:                                              ; preds = %200
  %211 = load i32*, i32** %15, align 8
  %212 = call i32 (i32*, i8*, ...) @fprintf(i32* %211, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0))
  br label %213

213:                                              ; preds = %210, %207
  br label %214

214:                                              ; preds = %213, %197
  br label %215

215:                                              ; preds = %214
  %216 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %217 = getelementptr inbounds %struct.tep_format_field, %struct.tep_format_field* %216, i32 0, i32 2
  %218 = load %struct.tep_format_field*, %struct.tep_format_field** %217, align 8
  store %struct.tep_format_field* %218, %struct.tep_format_field** %12, align 8
  br label %149

219:                                              ; preds = %149
  %220 = load i32*, i32** %15, align 8
  %221 = call i32 (i32*, i8*, ...) @fprintf(i32* %220, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i64 0, i64 0))
  store i32 0, i32* %7, align 4
  store i32 0, i32* %8, align 4
  %222 = load %struct.tep_event*, %struct.tep_event** %11, align 8
  %223 = getelementptr inbounds %struct.tep_event, %struct.tep_event* %222, i32 0, i32 2
  %224 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %223, i32 0, i32 0
  %225 = load %struct.tep_format_field*, %struct.tep_format_field** %224, align 8
  store %struct.tep_format_field* %225, %struct.tep_format_field** %12, align 8
  br label %226

226:                                              ; preds = %320, %219
  %227 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %228 = icmp ne %struct.tep_format_field* %227, null
  br i1 %228, label %229, label %324

229:                                              ; preds = %226
  %230 = load i32, i32* %7, align 4
  %231 = add nsw i32 %230, 1
  store i32 %231, i32* %7, align 4
  %232 = icmp ne i32 %230, 0
  br i1 %232, label %233, label %236

233:                                              ; preds = %229
  %234 = load i32*, i32** %15, align 8
  %235 = call i32 (i32*, i8*, ...) @fprintf(i32* %234, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0))
  br label %236

236:                                              ; preds = %233, %229
  %237 = load i32, i32* %8, align 4
  %238 = add nsw i32 %237, 1
  store i32 %238, i32* %8, align 4
  %239 = srem i32 %238, 5
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %244

241:                                              ; preds = %236
  %242 = load i32*, i32** %15, align 8
  %243 = call i32 (i32*, i8*, ...) @fprintf(i32* %242, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0))
  br label %244

244:                                              ; preds = %241, %236
  %245 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %246 = getelementptr inbounds %struct.tep_format_field, %struct.tep_format_field* %245, i32 0, i32 1
  %247 = load i32, i32* %246, align 8
  %248 = load i32, i32* @TEP_FIELD_IS_FLAG, align 4
  %249 = and i32 %247, %248
  %250 = icmp ne i32 %249, 0
  br i1 %250, label %251, label %278

251:                                              ; preds = %244
  %252 = load i32, i32* %8, align 4
  %253 = sub nsw i32 %252, 1
  %254 = srem i32 %253, 5
  %255 = icmp ne i32 %254, 0
  br i1 %255, label %256, label %259

256:                                              ; preds = %251
  %257 = load i32*, i32** %15, align 8
  %258 = call i32 (i32*, i8*, ...) @fprintf(i32* %257, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0))
  store i32 4, i32* %8, align 4
  br label %259

259:                                              ; preds = %256, %251
  %260 = load i32*, i32** %15, align 8
  %261 = call i32 (i32*, i8*, ...) @fprintf(i32* %260, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0))
  %262 = load i32*, i32** %15, align 8
  %263 = load %struct.tep_event*, %struct.tep_event** %11, align 8
  %264 = getelementptr inbounds %struct.tep_event, %struct.tep_event* %263, i32 0, i32 0
  %265 = load i8*, i8** %264, align 8
  %266 = load %struct.tep_event*, %struct.tep_event** %11, align 8
  %267 = getelementptr inbounds %struct.tep_event, %struct.tep_event* %266, i32 0, i32 1
  %268 = load i8*, i8** %267, align 8
  %269 = call i32 (i32*, i8*, ...) @fprintf(i32* %262, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i64 0, i64 0), i8* %265, i8* %268)
  %270 = load i32*, i32** %15, align 8
  %271 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %272 = getelementptr inbounds %struct.tep_format_field, %struct.tep_format_field* %271, i32 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %275 = getelementptr inbounds %struct.tep_format_field, %struct.tep_format_field* %274, i32 0, i32 0
  %276 = load i8*, i8** %275, align 8
  %277 = call i32 (i32*, i8*, ...) @fprintf(i32* %270, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i64 0, i64 0), i8* %273, i8* %276)
  br label %319

278:                                              ; preds = %244
  %279 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %280 = getelementptr inbounds %struct.tep_format_field, %struct.tep_format_field* %279, i32 0, i32 1
  %281 = load i32, i32* %280, align 8
  %282 = load i32, i32* @TEP_FIELD_IS_SYMBOLIC, align 4
  %283 = and i32 %281, %282
  %284 = icmp ne i32 %283, 0
  br i1 %284, label %285, label %312

285:                                              ; preds = %278
  %286 = load i32, i32* %8, align 4
  %287 = sub nsw i32 %286, 1
  %288 = srem i32 %287, 5
  %289 = icmp ne i32 %288, 0
  br i1 %289, label %290, label %293

290:                                              ; preds = %285
  %291 = load i32*, i32** %15, align 8
  %292 = call i32 (i32*, i8*, ...) @fprintf(i32* %291, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0))
  store i32 4, i32* %8, align 4
  br label %293

293:                                              ; preds = %290, %285
  %294 = load i32*, i32** %15, align 8
  %295 = call i32 (i32*, i8*, ...) @fprintf(i32* %294, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i64 0, i64 0))
  %296 = load i32*, i32** %15, align 8
  %297 = load %struct.tep_event*, %struct.tep_event** %11, align 8
  %298 = getelementptr inbounds %struct.tep_event, %struct.tep_event* %297, i32 0, i32 0
  %299 = load i8*, i8** %298, align 8
  %300 = load %struct.tep_event*, %struct.tep_event** %11, align 8
  %301 = getelementptr inbounds %struct.tep_event, %struct.tep_event* %300, i32 0, i32 1
  %302 = load i8*, i8** %301, align 8
  %303 = call i32 (i32*, i8*, ...) @fprintf(i32* %296, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i64 0, i64 0), i8* %299, i8* %302)
  %304 = load i32*, i32** %15, align 8
  %305 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %306 = getelementptr inbounds %struct.tep_format_field, %struct.tep_format_field* %305, i32 0, i32 0
  %307 = load i8*, i8** %306, align 8
  %308 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %309 = getelementptr inbounds %struct.tep_format_field, %struct.tep_format_field* %308, i32 0, i32 0
  %310 = load i8*, i8** %309, align 8
  %311 = call i32 (i32*, i8*, ...) @fprintf(i32* %304, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.43, i64 0, i64 0), i8* %307, i8* %310)
  br label %318

312:                                              ; preds = %278
  %313 = load i32*, i32** %15, align 8
  %314 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %315 = getelementptr inbounds %struct.tep_format_field, %struct.tep_format_field* %314, i32 0, i32 0
  %316 = load i8*, i8** %315, align 8
  %317 = call i32 (i32*, i8*, ...) @fprintf(i32* %313, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0), i8* %316)
  br label %318

318:                                              ; preds = %312, %293
  br label %319

319:                                              ; preds = %318, %259
  br label %320

320:                                              ; preds = %319
  %321 = load %struct.tep_format_field*, %struct.tep_format_field** %12, align 8
  %322 = getelementptr inbounds %struct.tep_format_field, %struct.tep_format_field* %321, i32 0, i32 2
  %323 = load %struct.tep_format_field*, %struct.tep_format_field** %322, align 8
  store %struct.tep_format_field* %323, %struct.tep_format_field** %12, align 8
  br label %226

324:                                              ; preds = %226
  %325 = load i32*, i32** %15, align 8
  %326 = call i32 (i32*, i8*, ...) @fprintf(i32* %325, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0))
  %327 = load i32*, i32** %15, align 8
  %328 = call i32 (i32*, i8*, ...) @fprintf(i32* %327, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.46, i64 0, i64 0))
  %329 = load i32*, i32** %15, align 8
  %330 = call i32 (i32*, i8*, ...) @fprintf(i32* %329, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i64 0, i64 0))
  br label %331

331:                                              ; preds = %324
  %332 = load i32, i32* %6, align 4
  %333 = add nsw i32 %332, 1
  store i32 %333, i32* %6, align 4
  br label %65

334:                                              ; preds = %72
  %335 = load i32*, i32** %15, align 8
  %336 = call i32 (i32*, i8*, ...) @fprintf(i32* %335, i8* getelementptr inbounds ([151 x i8], [151 x i8]* @.str.48, i64 0, i64 0))
  %337 = load i32*, i32** %15, align 8
  %338 = call i32 (i32*, i8*, ...) @fprintf(i32* %337, i8* getelementptr inbounds ([131 x i8], [131 x i8]* @.str.49, i64 0, i64 0))
  %339 = load i32*, i32** %15, align 8
  %340 = call i32 (i32*, i8*, ...) @fprintf(i32* %339, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.46, i64 0, i64 0))
  %341 = load i32*, i32** %15, align 8
  %342 = call i32 (i32*, i8*, ...) @fprintf(i32* %341, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i64 0, i64 0))
  %343 = load i32*, i32** %15, align 8
  %344 = call i32 (i32*, i8*, ...) @fprintf(i32* %343, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @.str.50, i64 0, i64 0))
  %345 = load i32*, i32** %15, align 8
  %346 = call i32 (i32*, i8*, ...) @fprintf(i32* %345, i8* getelementptr inbounds ([539 x i8], [539 x i8]* @.str.51, i64 0, i64 0))
  %347 = load i32*, i32** %15, align 8
  %348 = call i32 @fclose(i32* %347)
  %349 = load i32*, i32** @stderr, align 8
  %350 = call i32 (i32*, i8*, ...) @fprintf(i32* %349, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.52, i64 0, i64 0), i8* %20)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %16, align 4
  br label %351

351:                                              ; preds = %334, %26
  %352 = load i8*, i8** %13, align 8
  call void @llvm.stackrestore(i8* %352)
  %353 = load i32, i32* %3, align 4
  ret i32 %353
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #2

declare dso_local i32* @fopen(i8*, i8*) #2

declare dso_local i32 @fprintf(i32*, i8*, ...) #2

declare dso_local i32 @tep_get_events_count(%struct.tep_handle*) #2

declare dso_local %struct.tep_event** @tep_list_events(%struct.tep_handle*, i32) #2

declare dso_local i32 @fclose(i32*) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
