; ModuleID = '/home/carl/AnghaBench/linux/sound/pci/extr_bt87x.c_snd_bt87x_pci_error.c'
source_filename = "/home/carl/AnghaBench/linux/sound/pci/extr_bt87x.c_snd_bt87x_pci_error.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.snd_bt87x = type { i32, i32, %struct.TYPE_2__*, i32 }
%struct.TYPE_2__ = type { i32 }

@PCI_STATUS = common dso_local global i32 0, align 4
@PCI_STATUS_PARITY = common dso_local global i32 0, align 4
@PCI_STATUS_SIG_TARGET_ABORT = common dso_local global i32 0, align 4
@PCI_STATUS_REC_TARGET_ABORT = common dso_local global i32 0, align 4
@PCI_STATUS_REC_MASTER_ABORT = common dso_local global i32 0, align 4
@PCI_STATUS_SIG_SYSTEM_ERROR = common dso_local global i32 0, align 4
@PCI_STATUS_DETECTED_PARITY = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [51 x i8] c"Aieee - PCI error! status %#08x, PCI status %#04x\0A\00", align 1
@ERROR_INTERRUPTS = common dso_local global i32 0, align 4
@.str.1 = private unnamed_addr constant [36 x i8] c"Aieee - PCI parity error detected!\0A\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"Too many PCI parity errors observed.\0A\00", align 1
@.str.3 = private unnamed_addr constant [51 x i8] c"Some device on this bus is generating bad parity.\0A\00", align 1
@.str.4 = private unnamed_addr constant [64 x i8] c"This is an error *observed by*, not *generated by*, this card.\0A\00", align 1
@.str.5 = private unnamed_addr constant [46 x i8] c"PCI parity error checking has been disabled.\0A\00", align 1
@INT_PPERR = common dso_local global i32 0, align 4
@INT_RIPERR = common dso_local global i32 0, align 4
@REG_INT_MASK = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.snd_bt87x*, i32)* @snd_bt87x_pci_error to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @snd_bt87x_pci_error(%struct.snd_bt87x* %0, i32 %1) #0 {
  %3 = alloca %struct.snd_bt87x*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.snd_bt87x* %0, %struct.snd_bt87x** %3, align 8
  store i32 %1, i32* %4, align 4
  %6 = load %struct.snd_bt87x*, %struct.snd_bt87x** %3, align 8
  %7 = getelementptr inbounds %struct.snd_bt87x, %struct.snd_bt87x* %6, i32 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = load i32, i32* @PCI_STATUS, align 4
  %10 = call i32 @pci_read_config_word(i32 %8, i32 %9, i32* %5)
  %11 = load i32, i32* @PCI_STATUS_PARITY, align 4
  %12 = load i32, i32* @PCI_STATUS_SIG_TARGET_ABORT, align 4
  %13 = or i32 %11, %12
  %14 = load i32, i32* @PCI_STATUS_REC_TARGET_ABORT, align 4
  %15 = or i32 %13, %14
  %16 = load i32, i32* @PCI_STATUS_REC_MASTER_ABORT, align 4
  %17 = or i32 %15, %16
  %18 = load i32, i32* @PCI_STATUS_SIG_SYSTEM_ERROR, align 4
  %19 = or i32 %17, %18
  %20 = load i32, i32* @PCI_STATUS_DETECTED_PARITY, align 4
  %21 = or i32 %19, %20
  %22 = load i32, i32* %5, align 4
  %23 = and i32 %22, %21
  store i32 %23, i32* %5, align 4
  %24 = load %struct.snd_bt87x*, %struct.snd_bt87x** %3, align 8
  %25 = getelementptr inbounds %struct.snd_bt87x, %struct.snd_bt87x* %24, i32 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = load i32, i32* @PCI_STATUS, align 4
  %28 = load i32, i32* %5, align 4
  %29 = call i32 @pci_write_config_word(i32 %26, i32 %27, i32 %28)
  %30 = load i32, i32* %5, align 4
  %31 = load i32, i32* @PCI_STATUS_DETECTED_PARITY, align 4
  %32 = icmp ne i32 %30, %31
  br i1 %32, label %33, label %44

33:                                               ; preds = %2
  %34 = load %struct.snd_bt87x*, %struct.snd_bt87x** %3, align 8
  %35 = getelementptr inbounds %struct.snd_bt87x, %struct.snd_bt87x* %34, i32 0, i32 2
  %36 = load %struct.TYPE_2__*, %struct.TYPE_2__** %35, align 8
  %37 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %36, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = load i32, i32* %4, align 4
  %40 = load i32, i32* @ERROR_INTERRUPTS, align 4
  %41 = and i32 %39, %40
  %42 = load i32, i32* %5, align 4
  %43 = call i32 (i32, i8*, ...) @dev_err(i32 %38, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 %41, i32 %42)
  br label %99

44:                                               ; preds = %2
  %45 = load %struct.snd_bt87x*, %struct.snd_bt87x** %3, align 8
  %46 = getelementptr inbounds %struct.snd_bt87x, %struct.snd_bt87x* %45, i32 0, i32 2
  %47 = load %struct.TYPE_2__*, %struct.TYPE_2__** %46, align 8
  %48 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %47, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = call i32 (i32, i8*, ...) @dev_err(i32 %49, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0))
  %51 = load %struct.snd_bt87x*, %struct.snd_bt87x** %3, align 8
  %52 = getelementptr inbounds %struct.snd_bt87x, %struct.snd_bt87x* %51, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %52, align 8
  %55 = load %struct.snd_bt87x*, %struct.snd_bt87x** %3, align 8
  %56 = getelementptr inbounds %struct.snd_bt87x, %struct.snd_bt87x* %55, i32 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = icmp sgt i32 %57, 20
  br i1 %58, label %59, label %98

59:                                               ; preds = %44
  %60 = load %struct.snd_bt87x*, %struct.snd_bt87x** %3, align 8
  %61 = getelementptr inbounds %struct.snd_bt87x, %struct.snd_bt87x* %60, i32 0, i32 2
  %62 = load %struct.TYPE_2__*, %struct.TYPE_2__** %61, align 8
  %63 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %62, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = call i32 (i32, i8*, ...) @dev_err(i32 %64, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0))
  %66 = load %struct.snd_bt87x*, %struct.snd_bt87x** %3, align 8
  %67 = getelementptr inbounds %struct.snd_bt87x, %struct.snd_bt87x* %66, i32 0, i32 2
  %68 = load %struct.TYPE_2__*, %struct.TYPE_2__** %67, align 8
  %69 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %68, i32 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = call i32 (i32, i8*, ...) @dev_err(i32 %70, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3, i64 0, i64 0))
  %72 = load %struct.snd_bt87x*, %struct.snd_bt87x** %3, align 8
  %73 = getelementptr inbounds %struct.snd_bt87x, %struct.snd_bt87x* %72, i32 0, i32 2
  %74 = load %struct.TYPE_2__*, %struct.TYPE_2__** %73, align 8
  %75 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %74, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = call i32 (i32, i8*, ...) @dev_err(i32 %76, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.4, i64 0, i64 0))
  %78 = load %struct.snd_bt87x*, %struct.snd_bt87x** %3, align 8
  %79 = getelementptr inbounds %struct.snd_bt87x, %struct.snd_bt87x* %78, i32 0, i32 2
  %80 = load %struct.TYPE_2__*, %struct.TYPE_2__** %79, align 8
  %81 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %80, i32 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = call i32 (i32, i8*, ...) @dev_err(i32 %82, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.5, i64 0, i64 0))
  %84 = load i32, i32* @INT_PPERR, align 4
  %85 = load i32, i32* @INT_RIPERR, align 4
  %86 = or i32 %84, %85
  %87 = xor i32 %86, -1
  %88 = load %struct.snd_bt87x*, %struct.snd_bt87x** %3, align 8
  %89 = getelementptr inbounds %struct.snd_bt87x, %struct.snd_bt87x* %88, i32 0, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = and i32 %90, %87
  store i32 %91, i32* %89, align 4
  %92 = load %struct.snd_bt87x*, %struct.snd_bt87x** %3, align 8
  %93 = load i32, i32* @REG_INT_MASK, align 4
  %94 = load %struct.snd_bt87x*, %struct.snd_bt87x** %3, align 8
  %95 = getelementptr inbounds %struct.snd_bt87x, %struct.snd_bt87x* %94, i32 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = call i32 @snd_bt87x_writel(%struct.snd_bt87x* %92, i32 %93, i32 %96)
  br label %98

98:                                               ; preds = %59, %44
  br label %99

99:                                               ; preds = %98, %33
  ret void
}

declare dso_local i32 @pci_read_config_word(i32, i32, i32*) #1

declare dso_local i32 @pci_write_config_word(i32, i32, i32) #1

declare dso_local i32 @dev_err(i32, i8*, ...) #1

declare dso_local i32 @snd_bt87x_writel(%struct.snd_bt87x*, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
