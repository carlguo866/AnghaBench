; ModuleID = '/home/carl/AnghaBench/linux/sound/soc/codecs/extr_cs42l42.c_cs42l42_process_hs_type_detect.c'
source_filename = "/home/carl/AnghaBench/linux/sound/soc/codecs/extr_cs42l42.c_cs42l42_process_hs_type_detect.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.cs42l42_private = type { i32, i32*, i32, i32 }

@CS42L42_CODEC_INT_MASK = common dso_local global i32 0, align 4
@CS42L42_PDN_DONE_MASK = common dso_local global i32 0, align 4
@CS42L42_HSDET_AUTO_DONE_MASK = common dso_local global i32 0, align 4
@CS42L42_PDN_DONE_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HSDET_AUTO_DONE_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HSDET_CTL2 = common dso_local global i32 0, align 4
@CS42L42_HSDET_CTRL_MASK = common dso_local global i32 0, align 4
@CS42L42_HSDET_SET_MASK = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_REF_MASK = common dso_local global i32 0, align 4
@CS42L42_HSDET_AUTO_TIME_MASK = common dso_local global i32 0, align 4
@CS42L42_HSDET_CTRL_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HSDET_SET_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_REF_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HSDET_AUTO_TIME_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HS_DET_STATUS = common dso_local global i32 0, align 4
@CS42L42_HSDET_TYPE_MASK = common dso_local global i32 0, align 4
@CS42L42_HSDET_TYPE_SHIFT = common dso_local global i32 0, align 4
@CS42L42_PLUG_CTIA = common dso_local global i32 0, align 4
@CS42L42_PLUG_OMTP = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_SC_AUTOCTL = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_SENSE_EN_MASK = common dso_local global i32 0, align 4
@CS42L42_AUTO_HSBIAS_HIZ_MASK = common dso_local global i32 0, align 4
@CS42L42_TIP_SENSE_EN_MASK = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_SENSE_TRIP_MASK = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_SENSE_EN_SHIFT = common dso_local global i32 0, align 4
@CS42L42_AUTO_HSBIAS_HIZ_SHIFT = common dso_local global i32 0, align 4
@CS42L42_TIP_SENSE_EN_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_SENSE_TRIP_SHIFT = common dso_local global i32 0, align 4
@CS42L42_MIC_DET_CTL1 = common dso_local global i32 0, align 4
@CS42L42_LATCH_TO_VP_MASK = common dso_local global i32 0, align 4
@CS42L42_EVENT_STAT_SEL_MASK = common dso_local global i32 0, align 4
@CS42L42_HS_DET_LEVEL_MASK = common dso_local global i32 0, align 4
@CS42L42_LATCH_TO_VP_SHIFT = common dso_local global i32 0, align 4
@CS42L42_EVENT_STAT_SEL_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HS_DET_LEVEL_SHIFT = common dso_local global i32 0, align 4
@CS42L42_MISC_DET_CTL = common dso_local global i32 0, align 4
@CS42L42_DETECT_MODE_MASK = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_CTL_MASK = common dso_local global i32 0, align 4
@CS42L42_PDN_MIC_LVL_DET_MASK = common dso_local global i32 0, align 4
@CS42L42_DETECT_MODE_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_CTL_SHIFT = common dso_local global i32 0, align 4
@CS42L42_PDN_MIC_LVL_DET_SHIFT = common dso_local global i32 0, align 4
@CS42L42_DET_INT_STATUS2 = common dso_local global i32 0, align 4
@CS42L42_DET_INT2_MASK = common dso_local global i32 0, align 4
@CS42L42_M_DETECT_TF_MASK = common dso_local global i32 0, align 4
@CS42L42_M_DETECT_FT_MASK = common dso_local global i32 0, align 4
@CS42L42_M_HSBIAS_HIZ_MASK = common dso_local global i32 0, align 4
@CS42L42_M_SHORT_RLS_MASK = common dso_local global i32 0, align 4
@CS42L42_M_SHORT_DET_MASK = common dso_local global i32 0, align 4
@CS42L42_M_DETECT_TF_SHIFT = common dso_local global i32 0, align 4
@CS42L42_M_DETECT_FT_SHIFT = common dso_local global i32 0, align 4
@CS42L42_M_HSBIAS_HIZ_SHIFT = common dso_local global i32 0, align 4
@CS42L42_M_SHORT_RLS_SHIFT = common dso_local global i32 0, align 4
@CS42L42_M_SHORT_DET_SHIFT = common dso_local global i32 0, align 4
@CS42L42_DAC_CTL2 = common dso_local global i32 0, align 4
@CS42L42_HPOUT_PULLDOWN_MASK = common dso_local global i32 0, align 4
@CS42L42_HPOUT_LOAD_MASK = common dso_local global i32 0, align 4
@CS42L42_HPOUT_CLAMP_MASK = common dso_local global i32 0, align 4
@CS42L42_DAC_HPF_EN_MASK = common dso_local global i32 0, align 4
@CS42L42_DAC_MON_EN_MASK = common dso_local global i32 0, align 4
@CS42L42_HPOUT_PULLDOWN_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HPOUT_LOAD_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HPOUT_CLAMP_SHIFT = common dso_local global i32 0, align 4
@CS42L42_DAC_HPF_EN_SHIFT = common dso_local global i32 0, align 4
@CS42L42_DAC_MON_EN_SHIFT = common dso_local global i32 0, align 4
@CS42L42_TSRS_PLUG_INT_MASK = common dso_local global i32 0, align 4
@CS42L42_RS_PLUG_MASK = common dso_local global i32 0, align 4
@CS42L42_RS_UNPLUG_MASK = common dso_local global i32 0, align 4
@CS42L42_TS_PLUG_MASK = common dso_local global i32 0, align 4
@CS42L42_TS_UNPLUG_MASK = common dso_local global i32 0, align 4
@CS42L42_RS_PLUG_SHIFT = common dso_local global i32 0, align 4
@CS42L42_RS_UNPLUG_SHIFT = common dso_local global i32 0, align 4
@CS42L42_TS_PLUG_SHIFT = common dso_local global i32 0, align 4
@CS42L42_TS_UNPLUG_SHIFT = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.cs42l42_private*)* @cs42l42_process_hs_type_detect to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cs42l42_process_hs_type_detect(%struct.cs42l42_private* %0) #0 {
  %2 = alloca %struct.cs42l42_private*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store %struct.cs42l42_private* %0, %struct.cs42l42_private** %2, align 8
  %5 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %6 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %5, i32 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = load i32, i32* @CS42L42_CODEC_INT_MASK, align 4
  %9 = load i32, i32* @CS42L42_PDN_DONE_MASK, align 4
  %10 = load i32, i32* @CS42L42_HSDET_AUTO_DONE_MASK, align 4
  %11 = or i32 %9, %10
  %12 = load i32, i32* @CS42L42_PDN_DONE_SHIFT, align 4
  %13 = shl i32 1, %12
  %14 = load i32, i32* @CS42L42_HSDET_AUTO_DONE_SHIFT, align 4
  %15 = shl i32 1, %14
  %16 = or i32 %13, %15
  %17 = call i32 @regmap_update_bits(i32 %7, i32 %8, i32 %11, i32 %16)
  %18 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %19 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %18, i32 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = load i32, i32* @CS42L42_HSDET_CTL2, align 4
  %22 = load i32, i32* @CS42L42_HSDET_CTRL_MASK, align 4
  %23 = load i32, i32* @CS42L42_HSDET_SET_MASK, align 4
  %24 = or i32 %22, %23
  %25 = load i32, i32* @CS42L42_HSBIAS_REF_MASK, align 4
  %26 = or i32 %24, %25
  %27 = load i32, i32* @CS42L42_HSDET_AUTO_TIME_MASK, align 4
  %28 = or i32 %26, %27
  %29 = load i32, i32* @CS42L42_HSDET_CTRL_SHIFT, align 4
  %30 = shl i32 2, %29
  %31 = load i32, i32* @CS42L42_HSDET_SET_SHIFT, align 4
  %32 = shl i32 2, %31
  %33 = or i32 %30, %32
  %34 = load i32, i32* @CS42L42_HSBIAS_REF_SHIFT, align 4
  %35 = shl i32 0, %34
  %36 = or i32 %33, %35
  %37 = load i32, i32* @CS42L42_HSDET_AUTO_TIME_SHIFT, align 4
  %38 = shl i32 3, %37
  %39 = or i32 %36, %38
  %40 = call i32 @regmap_update_bits(i32 %20, i32 %21, i32 %28, i32 %39)
  %41 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %42 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %41, i32 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = load i32, i32* @CS42L42_HS_DET_STATUS, align 4
  %45 = call i32 @regmap_read(i32 %43, i32 %44, i32* %3)
  %46 = load i32, i32* %3, align 4
  %47 = load i32, i32* @CS42L42_HSDET_TYPE_MASK, align 4
  %48 = and i32 %46, %47
  %49 = load i32, i32* @CS42L42_HSDET_TYPE_SHIFT, align 4
  %50 = lshr i32 %48, %49
  %51 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %52 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %51, i32 0, i32 0
  store i32 %50, i32* %52, align 8
  %53 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %54 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %53, i32 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = load i32, i32* @CS42L42_PLUG_CTIA, align 4
  %57 = icmp eq i32 %55, %56
  br i1 %57, label %64, label %58

58:                                               ; preds = %1
  %59 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %60 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %59, i32 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = load i32, i32* @CS42L42_PLUG_OMTP, align 4
  %63 = icmp eq i32 %61, %62
  br i1 %63, label %64, label %189

64:                                               ; preds = %58, %1
  %65 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %66 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %65, i32 0, i32 2
  %67 = load i32, i32* %66, align 8
  %68 = load i32, i32* @CS42L42_HSBIAS_SC_AUTOCTL, align 4
  %69 = load i32, i32* @CS42L42_HSBIAS_SENSE_EN_MASK, align 4
  %70 = load i32, i32* @CS42L42_AUTO_HSBIAS_HIZ_MASK, align 4
  %71 = or i32 %69, %70
  %72 = load i32, i32* @CS42L42_TIP_SENSE_EN_MASK, align 4
  %73 = or i32 %71, %72
  %74 = load i32, i32* @CS42L42_HSBIAS_SENSE_TRIP_MASK, align 4
  %75 = or i32 %73, %74
  %76 = load i32, i32* @CS42L42_HSBIAS_SENSE_EN_SHIFT, align 4
  %77 = shl i32 0, %76
  %78 = load i32, i32* @CS42L42_AUTO_HSBIAS_HIZ_SHIFT, align 4
  %79 = shl i32 0, %78
  %80 = or i32 %77, %79
  %81 = load i32, i32* @CS42L42_TIP_SENSE_EN_SHIFT, align 4
  %82 = shl i32 0, %81
  %83 = or i32 %80, %82
  %84 = load i32, i32* @CS42L42_HSBIAS_SENSE_TRIP_SHIFT, align 4
  %85 = shl i32 3, %84
  %86 = or i32 %83, %85
  %87 = call i32 @regmap_update_bits(i32 %67, i32 %68, i32 %75, i32 %86)
  %88 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %89 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %88, i32 0, i32 2
  %90 = load i32, i32* %89, align 8
  %91 = load i32, i32* @CS42L42_MIC_DET_CTL1, align 4
  %92 = load i32, i32* @CS42L42_LATCH_TO_VP_MASK, align 4
  %93 = load i32, i32* @CS42L42_EVENT_STAT_SEL_MASK, align 4
  %94 = or i32 %92, %93
  %95 = load i32, i32* @CS42L42_HS_DET_LEVEL_MASK, align 4
  %96 = or i32 %94, %95
  %97 = load i32, i32* @CS42L42_LATCH_TO_VP_SHIFT, align 4
  %98 = shl i32 1, %97
  %99 = load i32, i32* @CS42L42_EVENT_STAT_SEL_SHIFT, align 4
  %100 = shl i32 0, %99
  %101 = or i32 %98, %100
  %102 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %103 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %102, i32 0, i32 1
  %104 = load i32*, i32** %103, align 8
  %105 = getelementptr inbounds i32, i32* %104, i64 0
  %106 = load i32, i32* %105, align 4
  %107 = load i32, i32* @CS42L42_HS_DET_LEVEL_SHIFT, align 4
  %108 = shl i32 %106, %107
  %109 = or i32 %101, %108
  %110 = call i32 @regmap_update_bits(i32 %90, i32 %91, i32 %96, i32 %109)
  %111 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %112 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %111, i32 0, i32 2
  %113 = load i32, i32* %112, align 8
  %114 = load i32, i32* @CS42L42_HSBIAS_SC_AUTOCTL, align 4
  %115 = load i32, i32* @CS42L42_HSBIAS_SENSE_EN_MASK, align 4
  %116 = load i32, i32* @CS42L42_AUTO_HSBIAS_HIZ_MASK, align 4
  %117 = or i32 %115, %116
  %118 = load i32, i32* @CS42L42_TIP_SENSE_EN_MASK, align 4
  %119 = or i32 %117, %118
  %120 = load i32, i32* @CS42L42_HSBIAS_SENSE_TRIP_MASK, align 4
  %121 = or i32 %119, %120
  %122 = load i32, i32* @CS42L42_HSBIAS_SENSE_EN_SHIFT, align 4
  %123 = shl i32 1, %122
  %124 = load i32, i32* @CS42L42_AUTO_HSBIAS_HIZ_SHIFT, align 4
  %125 = shl i32 1, %124
  %126 = or i32 %123, %125
  %127 = load i32, i32* @CS42L42_TIP_SENSE_EN_SHIFT, align 4
  %128 = shl i32 0, %127
  %129 = or i32 %126, %128
  %130 = load i32, i32* @CS42L42_HSBIAS_SENSE_TRIP_SHIFT, align 4
  %131 = shl i32 3, %130
  %132 = or i32 %129, %131
  %133 = call i32 @regmap_update_bits(i32 %113, i32 %114, i32 %121, i32 %132)
  %134 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %135 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %134, i32 0, i32 2
  %136 = load i32, i32* %135, align 8
  %137 = load i32, i32* @CS42L42_MISC_DET_CTL, align 4
  %138 = load i32, i32* @CS42L42_DETECT_MODE_MASK, align 4
  %139 = load i32, i32* @CS42L42_HSBIAS_CTL_MASK, align 4
  %140 = or i32 %138, %139
  %141 = load i32, i32* @CS42L42_PDN_MIC_LVL_DET_MASK, align 4
  %142 = or i32 %140, %141
  %143 = load i32, i32* @CS42L42_DETECT_MODE_SHIFT, align 4
  %144 = shl i32 0, %143
  %145 = load i32, i32* @CS42L42_HSBIAS_CTL_SHIFT, align 4
  %146 = shl i32 3, %145
  %147 = or i32 %144, %146
  %148 = load i32, i32* @CS42L42_PDN_MIC_LVL_DET_SHIFT, align 4
  %149 = shl i32 0, %148
  %150 = or i32 %147, %149
  %151 = call i32 @regmap_update_bits(i32 %136, i32 %137, i32 %142, i32 %150)
  %152 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %153 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %152, i32 0, i32 3
  %154 = load i32, i32* %153, align 4
  %155 = call i32 @msleep(i32 %154)
  %156 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %157 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %156, i32 0, i32 2
  %158 = load i32, i32* %157, align 8
  %159 = load i32, i32* @CS42L42_DET_INT_STATUS2, align 4
  %160 = call i32 @regmap_read(i32 %158, i32 %159, i32* %4)
  %161 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %162 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %161, i32 0, i32 2
  %163 = load i32, i32* %162, align 8
  %164 = load i32, i32* @CS42L42_DET_INT2_MASK, align 4
  %165 = load i32, i32* @CS42L42_M_DETECT_TF_MASK, align 4
  %166 = load i32, i32* @CS42L42_M_DETECT_FT_MASK, align 4
  %167 = or i32 %165, %166
  %168 = load i32, i32* @CS42L42_M_HSBIAS_HIZ_MASK, align 4
  %169 = or i32 %167, %168
  %170 = load i32, i32* @CS42L42_M_SHORT_RLS_MASK, align 4
  %171 = or i32 %169, %170
  %172 = load i32, i32* @CS42L42_M_SHORT_DET_MASK, align 4
  %173 = or i32 %171, %172
  %174 = load i32, i32* @CS42L42_M_DETECT_TF_SHIFT, align 4
  %175 = shl i32 0, %174
  %176 = load i32, i32* @CS42L42_M_DETECT_FT_SHIFT, align 4
  %177 = shl i32 0, %176
  %178 = or i32 %175, %177
  %179 = load i32, i32* @CS42L42_M_HSBIAS_HIZ_SHIFT, align 4
  %180 = shl i32 0, %179
  %181 = or i32 %178, %180
  %182 = load i32, i32* @CS42L42_M_SHORT_RLS_SHIFT, align 4
  %183 = shl i32 1, %182
  %184 = or i32 %181, %183
  %185 = load i32, i32* @CS42L42_M_SHORT_DET_SHIFT, align 4
  %186 = shl i32 1, %185
  %187 = or i32 %184, %186
  %188 = call i32 @regmap_update_bits(i32 %163, i32 %164, i32 %173, i32 %187)
  br label %208

189:                                              ; preds = %58
  %190 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %191 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %190, i32 0, i32 2
  %192 = load i32, i32* %191, align 8
  %193 = load i32, i32* @CS42L42_MISC_DET_CTL, align 4
  %194 = load i32, i32* @CS42L42_DETECT_MODE_MASK, align 4
  %195 = load i32, i32* @CS42L42_HSBIAS_CTL_MASK, align 4
  %196 = or i32 %194, %195
  %197 = load i32, i32* @CS42L42_PDN_MIC_LVL_DET_MASK, align 4
  %198 = or i32 %196, %197
  %199 = load i32, i32* @CS42L42_DETECT_MODE_SHIFT, align 4
  %200 = shl i32 0, %199
  %201 = load i32, i32* @CS42L42_HSBIAS_CTL_SHIFT, align 4
  %202 = shl i32 1, %201
  %203 = or i32 %200, %202
  %204 = load i32, i32* @CS42L42_PDN_MIC_LVL_DET_SHIFT, align 4
  %205 = shl i32 1, %204
  %206 = or i32 %203, %205
  %207 = call i32 @regmap_update_bits(i32 %192, i32 %193, i32 %198, i32 %206)
  br label %208

208:                                              ; preds = %189, %64
  %209 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %210 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %209, i32 0, i32 2
  %211 = load i32, i32* %210, align 8
  %212 = load i32, i32* @CS42L42_DAC_CTL2, align 4
  %213 = load i32, i32* @CS42L42_HPOUT_PULLDOWN_MASK, align 4
  %214 = load i32, i32* @CS42L42_HPOUT_LOAD_MASK, align 4
  %215 = or i32 %213, %214
  %216 = load i32, i32* @CS42L42_HPOUT_CLAMP_MASK, align 4
  %217 = or i32 %215, %216
  %218 = load i32, i32* @CS42L42_DAC_HPF_EN_MASK, align 4
  %219 = or i32 %217, %218
  %220 = load i32, i32* @CS42L42_DAC_MON_EN_MASK, align 4
  %221 = or i32 %219, %220
  %222 = load i32, i32* @CS42L42_HPOUT_PULLDOWN_SHIFT, align 4
  %223 = shl i32 0, %222
  %224 = load i32, i32* @CS42L42_HPOUT_LOAD_SHIFT, align 4
  %225 = shl i32 0, %224
  %226 = or i32 %223, %225
  %227 = load i32, i32* @CS42L42_HPOUT_CLAMP_SHIFT, align 4
  %228 = shl i32 0, %227
  %229 = or i32 %226, %228
  %230 = load i32, i32* @CS42L42_DAC_HPF_EN_SHIFT, align 4
  %231 = shl i32 1, %230
  %232 = or i32 %229, %231
  %233 = load i32, i32* @CS42L42_DAC_MON_EN_SHIFT, align 4
  %234 = shl i32 0, %233
  %235 = or i32 %232, %234
  %236 = call i32 @regmap_update_bits(i32 %211, i32 %212, i32 %221, i32 %235)
  %237 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %238 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %237, i32 0, i32 2
  %239 = load i32, i32* %238, align 8
  %240 = load i32, i32* @CS42L42_TSRS_PLUG_INT_MASK, align 4
  %241 = load i32, i32* @CS42L42_RS_PLUG_MASK, align 4
  %242 = load i32, i32* @CS42L42_RS_UNPLUG_MASK, align 4
  %243 = or i32 %241, %242
  %244 = load i32, i32* @CS42L42_TS_PLUG_MASK, align 4
  %245 = or i32 %243, %244
  %246 = load i32, i32* @CS42L42_TS_UNPLUG_MASK, align 4
  %247 = or i32 %245, %246
  %248 = load i32, i32* @CS42L42_RS_PLUG_SHIFT, align 4
  %249 = shl i32 1, %248
  %250 = load i32, i32* @CS42L42_RS_UNPLUG_SHIFT, align 4
  %251 = shl i32 1, %250
  %252 = or i32 %249, %251
  %253 = load i32, i32* @CS42L42_TS_PLUG_SHIFT, align 4
  %254 = shl i32 0, %253
  %255 = or i32 %252, %254
  %256 = load i32, i32* @CS42L42_TS_UNPLUG_SHIFT, align 4
  %257 = shl i32 0, %256
  %258 = or i32 %255, %257
  %259 = call i32 @regmap_update_bits(i32 %239, i32 %240, i32 %247, i32 %258)
  ret void
}

declare dso_local i32 @regmap_update_bits(i32, i32, i32, i32) #1

declare dso_local i32 @regmap_read(i32, i32, i32*) #1

declare dso_local i32 @msleep(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
