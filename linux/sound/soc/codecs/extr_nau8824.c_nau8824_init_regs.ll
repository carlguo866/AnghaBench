; ModuleID = '/home/carl/AnghaBench/linux/sound/soc/codecs/extr_nau8824.c_nau8824_init_regs.c'
source_filename = "/home/carl/AnghaBench/linux/sound/soc/codecs/extr_nau8824.c_nau8824_init_regs.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.nau8824 = type { i32, i32, i32, i64, i64, %struct.regmap* }
%struct.regmap = type { i32 }

@NAU8824_REG_BIAS_ADJ = common dso_local global i32 0, align 4
@NAU8824_VMID = common dso_local global i32 0, align 4
@NAU8824_VMID_SEL_MASK = common dso_local global i32 0, align 4
@NAU8824_VMID_SEL_SFT = common dso_local global i32 0, align 4
@NAU8824_REG_BOOST = common dso_local global i32 0, align 4
@NAU8824_GLOBAL_BIAS_EN = common dso_local global i32 0, align 4
@NAU8824_REG_MIC_BIAS = common dso_local global i32 0, align 4
@NAU8824_MICBIAS_VOLTAGE_MASK = common dso_local global i32 0, align 4
@NAU8824_PRECHARGE_DIS = common dso_local global i32 0, align 4
@NAU8824_HP_BOOST_DIS = common dso_local global i32 0, align 4
@NAU8824_HP_BOOST_G_DIS = common dso_local global i32 0, align 4
@NAU8824_SHORT_SHUTDOWN_EN = common dso_local global i32 0, align 4
@NAU8824_REG_CLK_DIVIDER = common dso_local global i32 0, align 4
@NAU8824_CLK_ADC_SRC_MASK = common dso_local global i32 0, align 4
@NAU8824_CLK_DAC_SRC_MASK = common dso_local global i32 0, align 4
@NAU8824_CLK_ADC_SRC_SFT = common dso_local global i32 0, align 4
@NAU8824_CLK_DAC_SRC_SFT = common dso_local global i32 0, align 4
@NAU8824_REG_DAC_MUTE_CTRL = common dso_local global i32 0, align 4
@NAU8824_DAC_ZC_EN = common dso_local global i32 0, align 4
@NAU8824_REG_ENA_CTRL = common dso_local global i32 0, align 4
@NAU8824_DAC_CH1_EN = common dso_local global i32 0, align 4
@NAU8824_DAC_CH0_EN = common dso_local global i32 0, align 4
@NAU8824_ADC_CH0_EN = common dso_local global i32 0, align 4
@NAU8824_ADC_CH1_EN = common dso_local global i32 0, align 4
@NAU8824_ADC_CH2_EN = common dso_local global i32 0, align 4
@NAU8824_ADC_CH3_EN = common dso_local global i32 0, align 4
@NAU8824_REG_CLK_GATING_ENA = common dso_local global i32 0, align 4
@NAU8824_CLK_ADC_CH23_EN = common dso_local global i32 0, align 4
@NAU8824_CLK_ADC_CH01_EN = common dso_local global i32 0, align 4
@NAU8824_CLK_DAC_CH1_EN = common dso_local global i32 0, align 4
@NAU8824_CLK_DAC_CH0_EN = common dso_local global i32 0, align 4
@NAU8824_CLK_I2S_EN = common dso_local global i32 0, align 4
@NAU8824_CLK_GAIN_EN = common dso_local global i32 0, align 4
@NAU8824_CLK_SAR_EN = common dso_local global i32 0, align 4
@NAU8824_CLK_DMIC_CH23_EN = common dso_local global i32 0, align 4
@NAU8824_REG_CLASSG = common dso_local global i32 0, align 4
@NAU8824_CLASSG_TIMER_MASK = common dso_local global i32 0, align 4
@NAU8824_CLASSG_TIMER_SFT = common dso_local global i32 0, align 4
@NAU8824_REG_TRIM_SETTINGS = common dso_local global i32 0, align 4
@NAU8824_DRV_CURR_INC = common dso_local global i32 0, align 4
@NAU8824_REG_CHARGE_PUMP_CONTROL = common dso_local global i32 0, align 4
@NAU8824_SPKR_PULL_DOWN = common dso_local global i32 0, align 4
@NAU8824_SPKL_PULL_DOWN = common dso_local global i32 0, align 4
@NAU8824_POWER_DOWN_DACR = common dso_local global i32 0, align 4
@NAU8824_POWER_DOWN_DACL = common dso_local global i32 0, align 4
@NAU8824_REG_ENABLE_LO = common dso_local global i32 0, align 4
@NAU8824_TEST_DAC_EN = common dso_local global i32 0, align 4
@NAU8824_REG_DAC_CH0_DGAIN_CTRL = common dso_local global i32 0, align 4
@NAU8824_DAC_CH0_SEL_MASK = common dso_local global i32 0, align 4
@NAU8824_DAC_CH0_SEL_I2S0 = common dso_local global i32 0, align 4
@NAU8824_REG_DAC_CH1_DGAIN_CTRL = common dso_local global i32 0, align 4
@NAU8824_DAC_CH1_SEL_MASK = common dso_local global i32 0, align 4
@NAU8824_DAC_CH1_SEL_I2S1 = common dso_local global i32 0, align 4
@NAU8824_DACR_HPR_EN = common dso_local global i32 0, align 4
@NAU8824_DACL_HPL_EN = common dso_local global i32 0, align 4
@NAU8824_REG_ADC_FILTER_CTRL = common dso_local global i32 0, align 4
@NAU8824_ADC_SYNC_DOWN_MASK = common dso_local global i32 0, align 4
@NAU8824_ADC_SYNC_DOWN_64 = common dso_local global i32 0, align 4
@NAU8824_REG_DAC_FILTER_CTRL_1 = common dso_local global i32 0, align 4
@NAU8824_DAC_CICCLP_OFF = common dso_local global i32 0, align 4
@NAU8824_DAC_OVERSAMPLE_MASK = common dso_local global i32 0, align 4
@NAU8824_DAC_OVERSAMPLE_64 = common dso_local global i32 0, align 4
@NAU8824_REG_RDAC = common dso_local global i32 0, align 4
@NAU8824_RDAC_CLK_DELAY_MASK = common dso_local global i32 0, align 4
@NAU8824_RDAC_VREF_MASK = common dso_local global i32 0, align 4
@NAU8824_RDAC_CLK_DELAY_SFT = common dso_local global i32 0, align 4
@NAU8824_RDAC_VREF_SFT = common dso_local global i32 0, align 4
@NAU8824_REG_FEPGA = common dso_local global i32 0, align 4
@NAU8824_FEPGA_MODEL_SHORT_EN = common dso_local global i32 0, align 4
@NAU8824_FEPGA_MODER_SHORT_EN = common dso_local global i32 0, align 4
@NAU8824_REG_ANALOG_CONTROL_1 = common dso_local global i32 0, align 4
@NAU8824_DMIC_CLK_DRV_STRG = common dso_local global i32 0, align 4
@NAU8824_DMIC_CLK_SLEW_FAST = common dso_local global i32 0, align 4
@NAU8824_REG_JACK_DET_CTRL = common dso_local global i32 0, align 4
@NAU8824_JACK_LOGIC = common dso_local global i32 0, align 4
@NAU8824_JACK_EJECT_DT_MASK = common dso_local global i32 0, align 4
@NAU8824_JACK_EJECT_DT_SFT = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.nau8824*)* @nau8824_init_regs to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @nau8824_init_regs(%struct.nau8824* %0) #0 {
  %2 = alloca %struct.nau8824*, align 8
  %3 = alloca %struct.regmap*, align 8
  store %struct.nau8824* %0, %struct.nau8824** %2, align 8
  %4 = load %struct.nau8824*, %struct.nau8824** %2, align 8
  %5 = getelementptr inbounds %struct.nau8824, %struct.nau8824* %4, i32 0, i32 5
  %6 = load %struct.regmap*, %struct.regmap** %5, align 8
  store %struct.regmap* %6, %struct.regmap** %3, align 8
  %7 = load %struct.regmap*, %struct.regmap** %3, align 8
  %8 = load i32, i32* @NAU8824_REG_BIAS_ADJ, align 4
  %9 = load i32, i32* @NAU8824_VMID, align 4
  %10 = load i32, i32* @NAU8824_VMID_SEL_MASK, align 4
  %11 = or i32 %9, %10
  %12 = load i32, i32* @NAU8824_VMID, align 4
  %13 = load %struct.nau8824*, %struct.nau8824** %2, align 8
  %14 = getelementptr inbounds %struct.nau8824, %struct.nau8824* %13, i32 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = load i32, i32* @NAU8824_VMID_SEL_SFT, align 4
  %17 = shl i32 %15, %16
  %18 = or i32 %12, %17
  %19 = call i32 @regmap_update_bits(%struct.regmap* %7, i32 %8, i32 %11, i32 %18)
  %20 = load %struct.regmap*, %struct.regmap** %3, align 8
  %21 = load i32, i32* @NAU8824_REG_BOOST, align 4
  %22 = load i32, i32* @NAU8824_GLOBAL_BIAS_EN, align 4
  %23 = load i32, i32* @NAU8824_GLOBAL_BIAS_EN, align 4
  %24 = call i32 @regmap_update_bits(%struct.regmap* %20, i32 %21, i32 %22, i32 %23)
  %25 = call i32 @mdelay(i32 2)
  %26 = load %struct.regmap*, %struct.regmap** %3, align 8
  %27 = load i32, i32* @NAU8824_REG_MIC_BIAS, align 4
  %28 = load i32, i32* @NAU8824_MICBIAS_VOLTAGE_MASK, align 4
  %29 = load %struct.nau8824*, %struct.nau8824** %2, align 8
  %30 = getelementptr inbounds %struct.nau8824, %struct.nau8824* %29, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = call i32 @regmap_update_bits(%struct.regmap* %26, i32 %27, i32 %28, i32 %31)
  %33 = load %struct.regmap*, %struct.regmap** %3, align 8
  %34 = load i32, i32* @NAU8824_REG_BOOST, align 4
  %35 = load i32, i32* @NAU8824_PRECHARGE_DIS, align 4
  %36 = load i32, i32* @NAU8824_HP_BOOST_DIS, align 4
  %37 = or i32 %35, %36
  %38 = load i32, i32* @NAU8824_HP_BOOST_G_DIS, align 4
  %39 = or i32 %37, %38
  %40 = load i32, i32* @NAU8824_SHORT_SHUTDOWN_EN, align 4
  %41 = or i32 %39, %40
  %42 = load i32, i32* @NAU8824_PRECHARGE_DIS, align 4
  %43 = load i32, i32* @NAU8824_HP_BOOST_DIS, align 4
  %44 = or i32 %42, %43
  %45 = load i32, i32* @NAU8824_HP_BOOST_G_DIS, align 4
  %46 = or i32 %44, %45
  %47 = load i32, i32* @NAU8824_SHORT_SHUTDOWN_EN, align 4
  %48 = or i32 %46, %47
  %49 = call i32 @regmap_update_bits(%struct.regmap* %33, i32 %34, i32 %41, i32 %48)
  %50 = load %struct.regmap*, %struct.regmap** %3, align 8
  %51 = load i32, i32* @NAU8824_REG_CLK_DIVIDER, align 4
  %52 = load i32, i32* @NAU8824_CLK_ADC_SRC_MASK, align 4
  %53 = load i32, i32* @NAU8824_CLK_DAC_SRC_MASK, align 4
  %54 = or i32 %52, %53
  %55 = load i32, i32* @NAU8824_CLK_ADC_SRC_SFT, align 4
  %56 = shl i32 1, %55
  %57 = load i32, i32* @NAU8824_CLK_DAC_SRC_SFT, align 4
  %58 = shl i32 1, %57
  %59 = or i32 %56, %58
  %60 = call i32 @regmap_update_bits(%struct.regmap* %50, i32 %51, i32 %54, i32 %59)
  %61 = load %struct.regmap*, %struct.regmap** %3, align 8
  %62 = load i32, i32* @NAU8824_REG_DAC_MUTE_CTRL, align 4
  %63 = load i32, i32* @NAU8824_DAC_ZC_EN, align 4
  %64 = load i32, i32* @NAU8824_DAC_ZC_EN, align 4
  %65 = call i32 @regmap_update_bits(%struct.regmap* %61, i32 %62, i32 %63, i32 %64)
  %66 = load %struct.regmap*, %struct.regmap** %3, align 8
  %67 = load i32, i32* @NAU8824_REG_ENA_CTRL, align 4
  %68 = load i32, i32* @NAU8824_DAC_CH1_EN, align 4
  %69 = load i32, i32* @NAU8824_DAC_CH0_EN, align 4
  %70 = or i32 %68, %69
  %71 = load i32, i32* @NAU8824_ADC_CH0_EN, align 4
  %72 = or i32 %70, %71
  %73 = load i32, i32* @NAU8824_ADC_CH1_EN, align 4
  %74 = or i32 %72, %73
  %75 = load i32, i32* @NAU8824_ADC_CH2_EN, align 4
  %76 = or i32 %74, %75
  %77 = load i32, i32* @NAU8824_ADC_CH3_EN, align 4
  %78 = or i32 %76, %77
  %79 = load i32, i32* @NAU8824_DAC_CH1_EN, align 4
  %80 = load i32, i32* @NAU8824_DAC_CH0_EN, align 4
  %81 = or i32 %79, %80
  %82 = load i32, i32* @NAU8824_ADC_CH0_EN, align 4
  %83 = or i32 %81, %82
  %84 = load i32, i32* @NAU8824_ADC_CH1_EN, align 4
  %85 = or i32 %83, %84
  %86 = load i32, i32* @NAU8824_ADC_CH2_EN, align 4
  %87 = or i32 %85, %86
  %88 = load i32, i32* @NAU8824_ADC_CH3_EN, align 4
  %89 = or i32 %87, %88
  %90 = call i32 @regmap_update_bits(%struct.regmap* %66, i32 %67, i32 %78, i32 %89)
  %91 = load %struct.regmap*, %struct.regmap** %3, align 8
  %92 = load i32, i32* @NAU8824_REG_CLK_GATING_ENA, align 4
  %93 = load i32, i32* @NAU8824_CLK_ADC_CH23_EN, align 4
  %94 = load i32, i32* @NAU8824_CLK_ADC_CH01_EN, align 4
  %95 = or i32 %93, %94
  %96 = load i32, i32* @NAU8824_CLK_DAC_CH1_EN, align 4
  %97 = or i32 %95, %96
  %98 = load i32, i32* @NAU8824_CLK_DAC_CH0_EN, align 4
  %99 = or i32 %97, %98
  %100 = load i32, i32* @NAU8824_CLK_I2S_EN, align 4
  %101 = or i32 %99, %100
  %102 = load i32, i32* @NAU8824_CLK_GAIN_EN, align 4
  %103 = or i32 %101, %102
  %104 = load i32, i32* @NAU8824_CLK_SAR_EN, align 4
  %105 = or i32 %103, %104
  %106 = load i32, i32* @NAU8824_CLK_DMIC_CH23_EN, align 4
  %107 = or i32 %105, %106
  %108 = load i32, i32* @NAU8824_CLK_ADC_CH23_EN, align 4
  %109 = load i32, i32* @NAU8824_CLK_ADC_CH01_EN, align 4
  %110 = or i32 %108, %109
  %111 = load i32, i32* @NAU8824_CLK_DAC_CH1_EN, align 4
  %112 = or i32 %110, %111
  %113 = load i32, i32* @NAU8824_CLK_DAC_CH0_EN, align 4
  %114 = or i32 %112, %113
  %115 = load i32, i32* @NAU8824_CLK_I2S_EN, align 4
  %116 = or i32 %114, %115
  %117 = load i32, i32* @NAU8824_CLK_GAIN_EN, align 4
  %118 = or i32 %116, %117
  %119 = load i32, i32* @NAU8824_CLK_SAR_EN, align 4
  %120 = or i32 %118, %119
  %121 = load i32, i32* @NAU8824_CLK_DMIC_CH23_EN, align 4
  %122 = or i32 %120, %121
  %123 = call i32 @regmap_update_bits(%struct.regmap* %91, i32 %92, i32 %107, i32 %122)
  %124 = load %struct.regmap*, %struct.regmap** %3, align 8
  %125 = load i32, i32* @NAU8824_REG_CLASSG, align 4
  %126 = load i32, i32* @NAU8824_CLASSG_TIMER_MASK, align 4
  %127 = load i32, i32* @NAU8824_CLASSG_TIMER_SFT, align 4
  %128 = shl i32 32, %127
  %129 = call i32 @regmap_update_bits(%struct.regmap* %124, i32 %125, i32 %126, i32 %128)
  %130 = load %struct.regmap*, %struct.regmap** %3, align 8
  %131 = load i32, i32* @NAU8824_REG_TRIM_SETTINGS, align 4
  %132 = load i32, i32* @NAU8824_DRV_CURR_INC, align 4
  %133 = load i32, i32* @NAU8824_DRV_CURR_INC, align 4
  %134 = call i32 @regmap_update_bits(%struct.regmap* %130, i32 %131, i32 %132, i32 %133)
  %135 = load %struct.regmap*, %struct.regmap** %3, align 8
  %136 = load i32, i32* @NAU8824_REG_CHARGE_PUMP_CONTROL, align 4
  %137 = load i32, i32* @NAU8824_SPKR_PULL_DOWN, align 4
  %138 = load i32, i32* @NAU8824_SPKL_PULL_DOWN, align 4
  %139 = or i32 %137, %138
  %140 = load i32, i32* @NAU8824_POWER_DOWN_DACR, align 4
  %141 = or i32 %139, %140
  %142 = load i32, i32* @NAU8824_POWER_DOWN_DACL, align 4
  %143 = or i32 %141, %142
  %144 = load i32, i32* @NAU8824_SPKR_PULL_DOWN, align 4
  %145 = load i32, i32* @NAU8824_SPKL_PULL_DOWN, align 4
  %146 = or i32 %144, %145
  %147 = load i32, i32* @NAU8824_POWER_DOWN_DACR, align 4
  %148 = or i32 %146, %147
  %149 = load i32, i32* @NAU8824_POWER_DOWN_DACL, align 4
  %150 = or i32 %148, %149
  %151 = call i32 @regmap_update_bits(%struct.regmap* %135, i32 %136, i32 %143, i32 %150)
  %152 = load %struct.regmap*, %struct.regmap** %3, align 8
  %153 = load i32, i32* @NAU8824_REG_ENABLE_LO, align 4
  %154 = load i32, i32* @NAU8824_TEST_DAC_EN, align 4
  %155 = load i32, i32* @NAU8824_TEST_DAC_EN, align 4
  %156 = call i32 @regmap_update_bits(%struct.regmap* %152, i32 %153, i32 %154, i32 %155)
  %157 = load %struct.regmap*, %struct.regmap** %3, align 8
  %158 = load i32, i32* @NAU8824_REG_DAC_CH0_DGAIN_CTRL, align 4
  %159 = load i32, i32* @NAU8824_DAC_CH0_SEL_MASK, align 4
  %160 = load i32, i32* @NAU8824_DAC_CH0_SEL_I2S0, align 4
  %161 = call i32 @regmap_update_bits(%struct.regmap* %157, i32 %158, i32 %159, i32 %160)
  %162 = load %struct.regmap*, %struct.regmap** %3, align 8
  %163 = load i32, i32* @NAU8824_REG_DAC_CH1_DGAIN_CTRL, align 4
  %164 = load i32, i32* @NAU8824_DAC_CH1_SEL_MASK, align 4
  %165 = load i32, i32* @NAU8824_DAC_CH1_SEL_I2S1, align 4
  %166 = call i32 @regmap_update_bits(%struct.regmap* %162, i32 %163, i32 %164, i32 %165)
  %167 = load %struct.regmap*, %struct.regmap** %3, align 8
  %168 = load i32, i32* @NAU8824_REG_ENABLE_LO, align 4
  %169 = load i32, i32* @NAU8824_DACR_HPR_EN, align 4
  %170 = load i32, i32* @NAU8824_DACL_HPL_EN, align 4
  %171 = or i32 %169, %170
  %172 = load i32, i32* @NAU8824_DACR_HPR_EN, align 4
  %173 = load i32, i32* @NAU8824_DACL_HPL_EN, align 4
  %174 = or i32 %172, %173
  %175 = call i32 @regmap_update_bits(%struct.regmap* %167, i32 %168, i32 %171, i32 %174)
  %176 = load %struct.regmap*, %struct.regmap** %3, align 8
  %177 = load i32, i32* @NAU8824_REG_ADC_FILTER_CTRL, align 4
  %178 = load i32, i32* @NAU8824_ADC_SYNC_DOWN_MASK, align 4
  %179 = load i32, i32* @NAU8824_ADC_SYNC_DOWN_64, align 4
  %180 = call i32 @regmap_update_bits(%struct.regmap* %176, i32 %177, i32 %178, i32 %179)
  %181 = load %struct.regmap*, %struct.regmap** %3, align 8
  %182 = load i32, i32* @NAU8824_REG_DAC_FILTER_CTRL_1, align 4
  %183 = load i32, i32* @NAU8824_DAC_CICCLP_OFF, align 4
  %184 = load i32, i32* @NAU8824_DAC_OVERSAMPLE_MASK, align 4
  %185 = or i32 %183, %184
  %186 = load i32, i32* @NAU8824_DAC_CICCLP_OFF, align 4
  %187 = load i32, i32* @NAU8824_DAC_OVERSAMPLE_64, align 4
  %188 = or i32 %186, %187
  %189 = call i32 @regmap_update_bits(%struct.regmap* %181, i32 %182, i32 %185, i32 %188)
  %190 = load %struct.regmap*, %struct.regmap** %3, align 8
  %191 = load i32, i32* @NAU8824_REG_RDAC, align 4
  %192 = load i32, i32* @NAU8824_RDAC_CLK_DELAY_MASK, align 4
  %193 = load i32, i32* @NAU8824_RDAC_VREF_MASK, align 4
  %194 = or i32 %192, %193
  %195 = load i32, i32* @NAU8824_RDAC_CLK_DELAY_SFT, align 4
  %196 = shl i32 2, %195
  %197 = load i32, i32* @NAU8824_RDAC_VREF_SFT, align 4
  %198 = shl i32 3, %197
  %199 = or i32 %196, %198
  %200 = call i32 @regmap_update_bits(%struct.regmap* %190, i32 %191, i32 %194, i32 %199)
  %201 = load %struct.regmap*, %struct.regmap** %3, align 8
  %202 = load i32, i32* @NAU8824_REG_FEPGA, align 4
  %203 = load i32, i32* @NAU8824_FEPGA_MODEL_SHORT_EN, align 4
  %204 = load i32, i32* @NAU8824_FEPGA_MODER_SHORT_EN, align 4
  %205 = or i32 %203, %204
  %206 = load i32, i32* @NAU8824_FEPGA_MODEL_SHORT_EN, align 4
  %207 = load i32, i32* @NAU8824_FEPGA_MODER_SHORT_EN, align 4
  %208 = or i32 %206, %207
  %209 = call i32 @regmap_update_bits(%struct.regmap* %201, i32 %202, i32 %205, i32 %208)
  %210 = load %struct.regmap*, %struct.regmap** %3, align 8
  %211 = load i32, i32* @NAU8824_REG_ANALOG_CONTROL_1, align 4
  %212 = load i32, i32* @NAU8824_DMIC_CLK_DRV_STRG, align 4
  %213 = load i32, i32* @NAU8824_DMIC_CLK_SLEW_FAST, align 4
  %214 = or i32 %212, %213
  %215 = load i32, i32* @NAU8824_DMIC_CLK_DRV_STRG, align 4
  %216 = load i32, i32* @NAU8824_DMIC_CLK_SLEW_FAST, align 4
  %217 = or i32 %215, %216
  %218 = call i32 @regmap_update_bits(%struct.regmap* %210, i32 %211, i32 %214, i32 %217)
  %219 = load %struct.regmap*, %struct.regmap** %3, align 8
  %220 = load i32, i32* @NAU8824_REG_JACK_DET_CTRL, align 4
  %221 = load i32, i32* @NAU8824_JACK_LOGIC, align 4
  %222 = load %struct.nau8824*, %struct.nau8824** %2, align 8
  %223 = getelementptr inbounds %struct.nau8824, %struct.nau8824* %222, i32 0, i32 4
  %224 = load i64, i64* %223, align 8
  %225 = icmp ne i64 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %1
  br label %229

227:                                              ; preds = %1
  %228 = load i32, i32* @NAU8824_JACK_LOGIC, align 4
  br label %229

229:                                              ; preds = %227, %226
  %230 = phi i32 [ 0, %226 ], [ %228, %227 ]
  %231 = call i32 @regmap_update_bits(%struct.regmap* %219, i32 %220, i32 %221, i32 %230)
  %232 = load %struct.regmap*, %struct.regmap** %3, align 8
  %233 = load i32, i32* @NAU8824_REG_JACK_DET_CTRL, align 4
  %234 = load i32, i32* @NAU8824_JACK_EJECT_DT_MASK, align 4
  %235 = load %struct.nau8824*, %struct.nau8824** %2, align 8
  %236 = getelementptr inbounds %struct.nau8824, %struct.nau8824* %235, i32 0, i32 2
  %237 = load i32, i32* %236, align 8
  %238 = load i32, i32* @NAU8824_JACK_EJECT_DT_SFT, align 4
  %239 = shl i32 %237, %238
  %240 = call i32 @regmap_update_bits(%struct.regmap* %232, i32 %233, i32 %234, i32 %239)
  %241 = load %struct.nau8824*, %struct.nau8824** %2, align 8
  %242 = getelementptr inbounds %struct.nau8824, %struct.nau8824* %241, i32 0, i32 3
  %243 = load i64, i64* %242, align 8
  %244 = icmp ne i64 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %229
  %246 = load %struct.nau8824*, %struct.nau8824** %2, align 8
  %247 = call i32 @nau8824_setup_buttons(%struct.nau8824* %246)
  br label %248

248:                                              ; preds = %245, %229
  ret void
}

declare dso_local i32 @regmap_update_bits(%struct.regmap*, i32, i32, i32) #1

declare dso_local i32 @mdelay(i32) #1

declare dso_local i32 @nau8824_setup_buttons(%struct.nau8824*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
