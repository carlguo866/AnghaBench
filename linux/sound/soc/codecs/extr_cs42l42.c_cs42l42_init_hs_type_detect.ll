; ModuleID = '/home/carl/AnghaBench/linux/sound/soc/codecs/extr_cs42l42.c_cs42l42_init_hs_type_detect.c'
source_filename = "/home/carl/AnghaBench/linux/sound/soc/codecs/extr_cs42l42.c_cs42l42_init_hs_type_detect.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.cs42l42_private = type { i32, i32 }

@CS42L42_TSRS_PLUG_INT_MASK = common dso_local global i32 0, align 4
@CS42L42_RS_PLUG_MASK = common dso_local global i32 0, align 4
@CS42L42_RS_UNPLUG_MASK = common dso_local global i32 0, align 4
@CS42L42_TS_PLUG_MASK = common dso_local global i32 0, align 4
@CS42L42_TS_UNPLUG_MASK = common dso_local global i32 0, align 4
@CS42L42_RS_PLUG_SHIFT = common dso_local global i32 0, align 4
@CS42L42_RS_UNPLUG_SHIFT = common dso_local global i32 0, align 4
@CS42L42_TS_PLUG_SHIFT = common dso_local global i32 0, align 4
@CS42L42_TS_UNPLUG_SHIFT = common dso_local global i32 0, align 4
@CS42L42_MISC_DET_CTL = common dso_local global i32 0, align 4
@CS42L42_DETECT_MODE_MASK = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_CTL_MASK = common dso_local global i32 0, align 4
@CS42L42_PDN_MIC_LVL_DET_MASK = common dso_local global i32 0, align 4
@CS42L42_DETECT_MODE_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_CTL_SHIFT = common dso_local global i32 0, align 4
@CS42L42_PDN_MIC_LVL_DET_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_SC_AUTOCTL = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_SENSE_EN_MASK = common dso_local global i32 0, align 4
@CS42L42_AUTO_HSBIAS_HIZ_MASK = common dso_local global i32 0, align 4
@CS42L42_TIP_SENSE_EN_MASK = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_SENSE_TRIP_MASK = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_SENSE_EN_SHIFT = common dso_local global i32 0, align 4
@CS42L42_AUTO_HSBIAS_HIZ_SHIFT = common dso_local global i32 0, align 4
@CS42L42_TIP_SENSE_EN_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_SENSE_TRIP_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HSDET_CTL2 = common dso_local global i32 0, align 4
@CS42L42_HSDET_CTRL_MASK = common dso_local global i32 0, align 4
@CS42L42_HSDET_SET_MASK = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_REF_MASK = common dso_local global i32 0, align 4
@CS42L42_HSDET_AUTO_TIME_MASK = common dso_local global i32 0, align 4
@CS42L42_HSDET_CTRL_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HSDET_SET_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HSBIAS_REF_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HSDET_AUTO_TIME_SHIFT = common dso_local global i32 0, align 4
@CS42L42_DAC_CTL2 = common dso_local global i32 0, align 4
@CS42L42_HPOUT_PULLDOWN_MASK = common dso_local global i32 0, align 4
@CS42L42_HPOUT_LOAD_MASK = common dso_local global i32 0, align 4
@CS42L42_HPOUT_CLAMP_MASK = common dso_local global i32 0, align 4
@CS42L42_DAC_HPF_EN_MASK = common dso_local global i32 0, align 4
@CS42L42_DAC_MON_EN_MASK = common dso_local global i32 0, align 4
@CS42L42_HPOUT_PULLDOWN_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HPOUT_LOAD_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HPOUT_CLAMP_SHIFT = common dso_local global i32 0, align 4
@CS42L42_DAC_HPF_EN_SHIFT = common dso_local global i32 0, align 4
@CS42L42_DAC_MON_EN_SHIFT = common dso_local global i32 0, align 4
@CS42L42_CODEC_INT_MASK = common dso_local global i32 0, align 4
@CS42L42_PDN_DONE_MASK = common dso_local global i32 0, align 4
@CS42L42_HSDET_AUTO_DONE_MASK = common dso_local global i32 0, align 4
@CS42L42_PDN_DONE_SHIFT = common dso_local global i32 0, align 4
@CS42L42_HSDET_AUTO_DONE_SHIFT = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.cs42l42_private*)* @cs42l42_init_hs_type_detect to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @cs42l42_init_hs_type_detect(%struct.cs42l42_private* %0) #0 {
  %2 = alloca %struct.cs42l42_private*, align 8
  store %struct.cs42l42_private* %0, %struct.cs42l42_private** %2, align 8
  %3 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %4 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %3, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = load i32, i32* @CS42L42_TSRS_PLUG_INT_MASK, align 4
  %7 = load i32, i32* @CS42L42_RS_PLUG_MASK, align 4
  %8 = load i32, i32* @CS42L42_RS_UNPLUG_MASK, align 4
  %9 = or i32 %7, %8
  %10 = load i32, i32* @CS42L42_TS_PLUG_MASK, align 4
  %11 = or i32 %9, %10
  %12 = load i32, i32* @CS42L42_TS_UNPLUG_MASK, align 4
  %13 = or i32 %11, %12
  %14 = load i32, i32* @CS42L42_RS_PLUG_SHIFT, align 4
  %15 = shl i32 1, %14
  %16 = load i32, i32* @CS42L42_RS_UNPLUG_SHIFT, align 4
  %17 = shl i32 1, %16
  %18 = or i32 %15, %17
  %19 = load i32, i32* @CS42L42_TS_PLUG_SHIFT, align 4
  %20 = shl i32 1, %19
  %21 = or i32 %18, %20
  %22 = load i32, i32* @CS42L42_TS_UNPLUG_SHIFT, align 4
  %23 = shl i32 1, %22
  %24 = or i32 %21, %23
  %25 = call i32 @regmap_update_bits(i32 %5, i32 %6, i32 %13, i32 %24)
  %26 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %27 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %26, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = load i32, i32* @CS42L42_MISC_DET_CTL, align 4
  %30 = load i32, i32* @CS42L42_DETECT_MODE_MASK, align 4
  %31 = load i32, i32* @CS42L42_HSBIAS_CTL_MASK, align 4
  %32 = or i32 %30, %31
  %33 = load i32, i32* @CS42L42_PDN_MIC_LVL_DET_MASK, align 4
  %34 = or i32 %32, %33
  %35 = load i32, i32* @CS42L42_DETECT_MODE_SHIFT, align 4
  %36 = shl i32 0, %35
  %37 = load i32, i32* @CS42L42_HSBIAS_CTL_SHIFT, align 4
  %38 = shl i32 1, %37
  %39 = or i32 %36, %38
  %40 = load i32, i32* @CS42L42_PDN_MIC_LVL_DET_SHIFT, align 4
  %41 = shl i32 1, %40
  %42 = or i32 %39, %41
  %43 = call i32 @regmap_update_bits(i32 %28, i32 %29, i32 %34, i32 %42)
  %44 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %45 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %44, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* @CS42L42_HSBIAS_SC_AUTOCTL, align 4
  %48 = load i32, i32* @CS42L42_HSBIAS_SENSE_EN_MASK, align 4
  %49 = load i32, i32* @CS42L42_AUTO_HSBIAS_HIZ_MASK, align 4
  %50 = or i32 %48, %49
  %51 = load i32, i32* @CS42L42_TIP_SENSE_EN_MASK, align 4
  %52 = or i32 %50, %51
  %53 = load i32, i32* @CS42L42_HSBIAS_SENSE_TRIP_MASK, align 4
  %54 = or i32 %52, %53
  %55 = load i32, i32* @CS42L42_HSBIAS_SENSE_EN_SHIFT, align 4
  %56 = shl i32 0, %55
  %57 = load i32, i32* @CS42L42_AUTO_HSBIAS_HIZ_SHIFT, align 4
  %58 = shl i32 0, %57
  %59 = or i32 %56, %58
  %60 = load i32, i32* @CS42L42_TIP_SENSE_EN_SHIFT, align 4
  %61 = shl i32 0, %60
  %62 = or i32 %59, %61
  %63 = load i32, i32* @CS42L42_HSBIAS_SENSE_TRIP_SHIFT, align 4
  %64 = shl i32 3, %63
  %65 = or i32 %62, %64
  %66 = call i32 @regmap_update_bits(i32 %46, i32 %47, i32 %54, i32 %65)
  %67 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %68 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %67, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = load i32, i32* @CS42L42_HSDET_CTL2, align 4
  %71 = load i32, i32* @CS42L42_HSDET_CTRL_MASK, align 4
  %72 = load i32, i32* @CS42L42_HSDET_SET_MASK, align 4
  %73 = or i32 %71, %72
  %74 = load i32, i32* @CS42L42_HSBIAS_REF_MASK, align 4
  %75 = or i32 %73, %74
  %76 = load i32, i32* @CS42L42_HSDET_AUTO_TIME_MASK, align 4
  %77 = or i32 %75, %76
  %78 = load i32, i32* @CS42L42_HSDET_CTRL_SHIFT, align 4
  %79 = shl i32 0, %78
  %80 = load i32, i32* @CS42L42_HSDET_SET_SHIFT, align 4
  %81 = shl i32 2, %80
  %82 = or i32 %79, %81
  %83 = load i32, i32* @CS42L42_HSBIAS_REF_SHIFT, align 4
  %84 = shl i32 0, %83
  %85 = or i32 %82, %84
  %86 = load i32, i32* @CS42L42_HSDET_AUTO_TIME_SHIFT, align 4
  %87 = shl i32 3, %86
  %88 = or i32 %85, %87
  %89 = call i32 @regmap_update_bits(i32 %69, i32 %70, i32 %77, i32 %88)
  %90 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %91 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %90, i32 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = load i32, i32* @CS42L42_DAC_CTL2, align 4
  %94 = load i32, i32* @CS42L42_HPOUT_PULLDOWN_MASK, align 4
  %95 = load i32, i32* @CS42L42_HPOUT_LOAD_MASK, align 4
  %96 = or i32 %94, %95
  %97 = load i32, i32* @CS42L42_HPOUT_CLAMP_MASK, align 4
  %98 = or i32 %96, %97
  %99 = load i32, i32* @CS42L42_DAC_HPF_EN_MASK, align 4
  %100 = or i32 %98, %99
  %101 = load i32, i32* @CS42L42_DAC_MON_EN_MASK, align 4
  %102 = or i32 %100, %101
  %103 = load i32, i32* @CS42L42_HPOUT_PULLDOWN_SHIFT, align 4
  %104 = shl i32 8, %103
  %105 = load i32, i32* @CS42L42_HPOUT_LOAD_SHIFT, align 4
  %106 = shl i32 0, %105
  %107 = or i32 %104, %106
  %108 = load i32, i32* @CS42L42_HPOUT_CLAMP_SHIFT, align 4
  %109 = shl i32 1, %108
  %110 = or i32 %107, %109
  %111 = load i32, i32* @CS42L42_DAC_HPF_EN_SHIFT, align 4
  %112 = shl i32 1, %111
  %113 = or i32 %110, %112
  %114 = load i32, i32* @CS42L42_DAC_MON_EN_SHIFT, align 4
  %115 = shl i32 1, %114
  %116 = or i32 %113, %115
  %117 = call i32 @regmap_update_bits(i32 %92, i32 %93, i32 %102, i32 %116)
  %118 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %119 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %118, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = load i32, i32* @CS42L42_MISC_DET_CTL, align 4
  %122 = load i32, i32* @CS42L42_DETECT_MODE_MASK, align 4
  %123 = load i32, i32* @CS42L42_HSBIAS_CTL_MASK, align 4
  %124 = or i32 %122, %123
  %125 = load i32, i32* @CS42L42_PDN_MIC_LVL_DET_MASK, align 4
  %126 = or i32 %124, %125
  %127 = load i32, i32* @CS42L42_DETECT_MODE_SHIFT, align 4
  %128 = shl i32 0, %127
  %129 = load i32, i32* @CS42L42_HSBIAS_CTL_SHIFT, align 4
  %130 = shl i32 3, %129
  %131 = or i32 %128, %130
  %132 = load i32, i32* @CS42L42_PDN_MIC_LVL_DET_SHIFT, align 4
  %133 = shl i32 1, %132
  %134 = or i32 %131, %133
  %135 = call i32 @regmap_update_bits(i32 %120, i32 %121, i32 %126, i32 %134)
  %136 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %137 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %136, i32 0, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = call i32 @msleep(i32 %138)
  %140 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %141 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %140, i32 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = load i32, i32* @CS42L42_CODEC_INT_MASK, align 4
  %144 = load i32, i32* @CS42L42_PDN_DONE_MASK, align 4
  %145 = load i32, i32* @CS42L42_HSDET_AUTO_DONE_MASK, align 4
  %146 = or i32 %144, %145
  %147 = load i32, i32* @CS42L42_PDN_DONE_SHIFT, align 4
  %148 = shl i32 1, %147
  %149 = load i32, i32* @CS42L42_HSDET_AUTO_DONE_SHIFT, align 4
  %150 = shl i32 0, %149
  %151 = or i32 %148, %150
  %152 = call i32 @regmap_update_bits(i32 %142, i32 %143, i32 %146, i32 %151)
  %153 = load %struct.cs42l42_private*, %struct.cs42l42_private** %2, align 8
  %154 = getelementptr inbounds %struct.cs42l42_private, %struct.cs42l42_private* %153, i32 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = load i32, i32* @CS42L42_HSDET_CTL2, align 4
  %157 = load i32, i32* @CS42L42_HSDET_CTRL_MASK, align 4
  %158 = load i32, i32* @CS42L42_HSDET_SET_MASK, align 4
  %159 = or i32 %157, %158
  %160 = load i32, i32* @CS42L42_HSBIAS_REF_MASK, align 4
  %161 = or i32 %159, %160
  %162 = load i32, i32* @CS42L42_HSDET_AUTO_TIME_MASK, align 4
  %163 = or i32 %161, %162
  %164 = load i32, i32* @CS42L42_HSDET_CTRL_SHIFT, align 4
  %165 = shl i32 3, %164
  %166 = load i32, i32* @CS42L42_HSDET_SET_SHIFT, align 4
  %167 = shl i32 2, %166
  %168 = or i32 %165, %167
  %169 = load i32, i32* @CS42L42_HSBIAS_REF_SHIFT, align 4
  %170 = shl i32 0, %169
  %171 = or i32 %168, %170
  %172 = load i32, i32* @CS42L42_HSDET_AUTO_TIME_SHIFT, align 4
  %173 = shl i32 3, %172
  %174 = or i32 %171, %173
  %175 = call i32 @regmap_update_bits(i32 %155, i32 %156, i32 %163, i32 %174)
  ret void
}

declare dso_local i32 @regmap_update_bits(i32, i32, i32, i32) #1

declare dso_local i32 @msleep(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
