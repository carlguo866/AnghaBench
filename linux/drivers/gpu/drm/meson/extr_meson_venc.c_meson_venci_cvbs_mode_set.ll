; ModuleID = '/home/carl/AnghaBench/linux/drivers/gpu/drm/meson/extr_meson_venc.c_meson_venci_cvbs_mode_set.c'
source_filename = "/home/carl/AnghaBench/linux/drivers/gpu/drm/meson/extr_meson_venc.c_meson_venci_cvbs_mode_set.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.meson_drm = type { %struct.TYPE_2__, i64 }
%struct.TYPE_2__ = type { i64 }
%struct.meson_cvbs_enci_mode = type { i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@ENCI_CFILT_CMPT_SEL_HIGH = common dso_local global i32 0, align 4
@ENCI_CFILT_CTRL = common dso_local global i32 0, align 4
@ENCI_CFILT_CTRL2 = common dso_local global i32 0, align 4
@VENC_DVI_SETTING = common dso_local global i32 0, align 4
@ENCI_VIDEO_MODE = common dso_local global i32 0, align 4
@ENCI_VIDEO_MODE_ADV = common dso_local global i32 0, align 4
@ENCI_SYNC_HSO_BEGIN = common dso_local global i32 0, align 4
@ENCI_SYNC_HSO_END = common dso_local global i32 0, align 4
@ENCI_SYNC_VSO_EVNLN = common dso_local global i32 0, align 4
@ENCI_SYNC_VSO_ODDLN = common dso_local global i32 0, align 4
@ENCI_MACV_MAX_AMP_ENABLE_CHANGE = common dso_local global i32 0, align 4
@ENCI_MACV_MAX_AMP = common dso_local global i32 0, align 4
@VENC_VIDEO_PROG_MODE = common dso_local global i32 0, align 4
@ENCI_VIDEO_MODE_ADV_VBICTL_LINE_17_22 = common dso_local global i32 0, align 4
@ENCI_VIDEO_MODE_ADV_YBW_HIGH = common dso_local global i32 0, align 4
@ENCI_VIDEO_SCH = common dso_local global i32 0, align 4
@ENCI_SYNC_MODE = common dso_local global i32 0, align 4
@ENCI_YC_DELAY = common dso_local global i32 0, align 4
@ENCI_VFIFO2VD_PIXEL_START = common dso_local global i32 0, align 4
@ENCI_VFIFO2VD_PIXEL_END = common dso_local global i32 0, align 4
@ENCI_VFIFO2VD_LINE_TOP_START = common dso_local global i32 0, align 4
@ENCI_VFIFO2VD_LINE_TOP_END = common dso_local global i32 0, align 4
@ENCI_VFIFO2VD_LINE_BOT_START = common dso_local global i32 0, align 4
@ENCI_VFIFO2VD_LINE_BOT_END = common dso_local global i32 0, align 4
@VENC_SYNC_ROUTE = common dso_local global i32 0, align 4
@ENCI_DBG_PX_RST = common dso_local global i32 0, align 4
@ENCI_VFIFO2VD_CTL_ENABLE = common dso_local global i32 0, align 4
@ENCI_VFIFO2VD_CTL = common dso_local global i32 0, align 4
@VENC_VDAC_SETTING = common dso_local global i32 0, align 4
@VENC_UPSAMPLE_CTRL_F0_2_CLK_RATIO = common dso_local global i32 0, align 4
@VENC_UPSAMPLE_CTRL_F1_EN = common dso_local global i32 0, align 4
@VENC_UPSAMPLE_CTRL_F1_UPSAMPLE_EN = common dso_local global i32 0, align 4
@VENC_UPSAMPLE_CTRL_INTERLACE_HIGH_LUMA = common dso_local global i32 0, align 4
@VENC_UPSAMPLE_CTRL0 = common dso_local global i32 0, align 4
@VENC_UPSAMPLE_CTRL_INTERLACE_PB = common dso_local global i32 0, align 4
@VENC_UPSAMPLE_CTRL1 = common dso_local global i32 0, align 4
@VENC_UPSAMPLE_CTRL_INTERLACE_PR = common dso_local global i32 0, align 4
@VENC_UPSAMPLE_CTRL2 = common dso_local global i32 0, align 4
@VENC_VDAC_DACSEL0 = common dso_local global i32 0, align 4
@VENC_VDAC_DACSEL1 = common dso_local global i32 0, align 4
@VENC_VDAC_DACSEL2 = common dso_local global i32 0, align 4
@VENC_VDAC_DACSEL3 = common dso_local global i32 0, align 4
@VENC_VDAC_DACSEL4 = common dso_local global i32 0, align 4
@VENC_VDAC_DACSEL5 = common dso_local global i32 0, align 4
@MESON_VIU_VPP_MUX_ENCI = common dso_local global i32 0, align 4
@VENC_VDAC_FIFO_EN_ENCI_ENABLE = common dso_local global i32 0, align 4
@VENC_VDAC_FIFO_CTRL = common dso_local global i32 0, align 4
@ENCI_DACSEL_0 = common dso_local global i32 0, align 4
@ENCI_DACSEL_1 = common dso_local global i32 0, align 4
@ENCI_VIDEO_EN_ENABLE = common dso_local global i32 0, align 4
@ENCI_VIDEO_EN = common dso_local global i32 0, align 4
@ENCI_VIDEO_SAT = common dso_local global i32 0, align 4
@ENCI_VIDEO_CONT = common dso_local global i32 0, align 4
@ENCI_VIDEO_BRIGHT = common dso_local global i32 0, align 4
@ENCI_VIDEO_HUE = common dso_local global i32 0, align 4
@VENC_VDAC_DAC0_FILT_CTRL0_EN = common dso_local global i32 0, align 4
@VENC_VDAC_DAC0_FILT_CTRL0 = common dso_local global i32 0, align 4
@VENC_VDAC_DAC0_FILT_CTRL1 = common dso_local global i32 0, align 4
@ENCI_MACV_N0 = common dso_local global i32 0, align 4
@ENCI_SYNC_ADJ = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @meson_venci_cvbs_mode_set(%struct.meson_drm* %0, %struct.meson_cvbs_enci_mode* %1) #0 {
  %3 = alloca %struct.meson_drm*, align 8
  %4 = alloca %struct.meson_cvbs_enci_mode*, align 8
  %5 = alloca i32, align 4
  store %struct.meson_drm* %0, %struct.meson_drm** %3, align 8
  store %struct.meson_cvbs_enci_mode* %1, %struct.meson_cvbs_enci_mode** %4, align 8
  %6 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %7 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %6, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %10 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %9, i32 0, i32 0
  %11 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %10, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %8, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %2
  br label %447

15:                                               ; preds = %2
  %16 = load i32, i32* @ENCI_CFILT_CMPT_SEL_HIGH, align 4
  %17 = or i32 %16, 16
  %18 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %19 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %18, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = load i32, i32* @ENCI_CFILT_CTRL, align 4
  %22 = call i64 @_REG(i32 %21)
  %23 = add nsw i64 %20, %22
  %24 = call i32 @writel_relaxed(i32 %17, i64 %23)
  %25 = call i32 @ENCI_CFILT_CMPT_CR_DLY(i32 2)
  %26 = call i32 @ENCI_CFILT_CMPT_CB_DLY(i32 1)
  %27 = or i32 %25, %26
  %28 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %29 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %28, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = load i32, i32* @ENCI_CFILT_CTRL2, align 4
  %32 = call i64 @_REG(i32 %31)
  %33 = add nsw i64 %30, %32
  %34 = call i32 @writel_relaxed(i32 %27, i64 %33)
  %35 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %36 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %35, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = load i32, i32* @VENC_DVI_SETTING, align 4
  %39 = call i64 @_REG(i32 %38)
  %40 = add nsw i64 %37, %39
  %41 = call i32 @writel_relaxed(i32 0, i64 %40)
  %42 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %43 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %42, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = load i32, i32* @ENCI_VIDEO_MODE, align 4
  %46 = call i64 @_REG(i32 %45)
  %47 = add nsw i64 %44, %46
  %48 = call i32 @writel_relaxed(i32 0, i64 %47)
  %49 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %50 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %49, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = load i32, i32* @ENCI_VIDEO_MODE_ADV, align 4
  %53 = call i64 @_REG(i32 %52)
  %54 = add nsw i64 %51, %53
  %55 = call i32 @writel_relaxed(i32 0, i64 %54)
  %56 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %57 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %56, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %60 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %59, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = load i32, i32* @ENCI_SYNC_HSO_BEGIN, align 4
  %63 = call i64 @_REG(i32 %62)
  %64 = add nsw i64 %61, %63
  %65 = call i32 @writel_relaxed(i32 %58, i64 %64)
  %66 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %67 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %66, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %70 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %69, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = load i32, i32* @ENCI_SYNC_HSO_END, align 4
  %73 = call i64 @_REG(i32 %72)
  %74 = add nsw i64 %71, %73
  %75 = call i32 @writel_relaxed(i32 %68, i64 %74)
  %76 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %77 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %76, i32 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %80 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %79, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = load i32, i32* @ENCI_SYNC_VSO_EVNLN, align 4
  %83 = call i64 @_REG(i32 %82)
  %84 = add nsw i64 %81, %83
  %85 = call i32 @writel_relaxed(i32 %78, i64 %84)
  %86 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %87 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %86, i32 0, i32 4
  %88 = load i32, i32* %87, align 4
  %89 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %90 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %89, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = load i32, i32* @ENCI_SYNC_VSO_ODDLN, align 4
  %93 = call i64 @_REG(i32 %92)
  %94 = add nsw i64 %91, %93
  %95 = call i32 @writel_relaxed(i32 %88, i64 %94)
  %96 = load i32, i32* @ENCI_MACV_MAX_AMP_ENABLE_CHANGE, align 4
  %97 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %98 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %97, i32 0, i32 20
  %99 = load i32, i32* %98, align 4
  %100 = call i32 @ENCI_MACV_MAX_AMP_VAL(i32 %99)
  %101 = or i32 %96, %100
  %102 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %103 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %102, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = load i32, i32* @ENCI_MACV_MAX_AMP, align 4
  %106 = call i64 @_REG(i32 %105)
  %107 = add nsw i64 %104, %106
  %108 = call i32 @writel_relaxed(i32 %101, i64 %107)
  %109 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %110 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %109, i32 0, i32 5
  %111 = load i32, i32* %110, align 8
  %112 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %113 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %112, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = load i32, i32* @VENC_VIDEO_PROG_MODE, align 4
  %116 = call i64 @_REG(i32 %115)
  %117 = add nsw i64 %114, %116
  %118 = call i32 @writel_relaxed(i32 %111, i64 %117)
  %119 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %120 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %119, i32 0, i32 6
  %121 = load i32, i32* %120, align 4
  %122 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %123 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %122, i32 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = load i32, i32* @ENCI_VIDEO_MODE, align 4
  %126 = call i64 @_REG(i32 %125)
  %127 = add nsw i64 %124, %126
  %128 = call i32 @writel_relaxed(i32 %121, i64 %127)
  %129 = call i32 @ENCI_VIDEO_MODE_ADV_DMXMD(i32 2)
  %130 = load i32, i32* @ENCI_VIDEO_MODE_ADV_VBICTL_LINE_17_22, align 4
  %131 = or i32 %129, %130
  %132 = load i32, i32* @ENCI_VIDEO_MODE_ADV_YBW_HIGH, align 4
  %133 = or i32 %131, %132
  %134 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %135 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %134, i32 0, i32 1
  %136 = load i64, i64* %135, align 8
  %137 = load i32, i32* @ENCI_VIDEO_MODE_ADV, align 4
  %138 = call i64 @_REG(i32 %137)
  %139 = add nsw i64 %136, %138
  %140 = call i32 @writel_relaxed(i32 %133, i64 %139)
  %141 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %142 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %141, i32 0, i32 19
  %143 = load i32, i32* %142, align 8
  %144 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %145 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %144, i32 0, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = load i32, i32* @ENCI_VIDEO_SCH, align 4
  %148 = call i64 @_REG(i32 %147)
  %149 = add nsw i64 %146, %148
  %150 = call i32 @writel(i32 %143, i64 %149)
  %151 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %152 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %151, i32 0, i32 1
  %153 = load i64, i64* %152, align 8
  %154 = load i32, i32* @ENCI_SYNC_MODE, align 4
  %155 = call i64 @_REG(i32 %154)
  %156 = add nsw i64 %153, %155
  %157 = call i32 @writel_relaxed(i32 7, i64 %156)
  %158 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %159 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %158, i32 0, i32 7
  %160 = load i32, i32* %159, align 8
  %161 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %162 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %161, i32 0, i32 1
  %163 = load i64, i64* %162, align 8
  %164 = load i32, i32* @ENCI_YC_DELAY, align 4
  %165 = call i64 @_REG(i32 %164)
  %166 = add nsw i64 %163, %165
  %167 = call i32 @writel_relaxed(i32 %160, i64 %166)
  %168 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %169 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %168, i32 0, i32 8
  %170 = load i32, i32* %169, align 4
  %171 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %172 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %171, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  %174 = load i32, i32* @ENCI_VFIFO2VD_PIXEL_START, align 4
  %175 = call i64 @_REG(i32 %174)
  %176 = add nsw i64 %173, %175
  %177 = call i32 @writel_relaxed(i32 %170, i64 %176)
  %178 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %179 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %178, i32 0, i32 9
  %180 = load i32, i32* %179, align 8
  %181 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %182 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %181, i32 0, i32 1
  %183 = load i64, i64* %182, align 8
  %184 = load i32, i32* @ENCI_VFIFO2VD_PIXEL_END, align 4
  %185 = call i64 @_REG(i32 %184)
  %186 = add nsw i64 %183, %185
  %187 = call i32 @writel_relaxed(i32 %180, i64 %186)
  %188 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %189 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %188, i32 0, i32 10
  %190 = load i32, i32* %189, align 4
  %191 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %192 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %191, i32 0, i32 1
  %193 = load i64, i64* %192, align 8
  %194 = load i32, i32* @ENCI_VFIFO2VD_LINE_TOP_START, align 4
  %195 = call i64 @_REG(i32 %194)
  %196 = add nsw i64 %193, %195
  %197 = call i32 @writel_relaxed(i32 %190, i64 %196)
  %198 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %199 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %198, i32 0, i32 11
  %200 = load i32, i32* %199, align 8
  %201 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %202 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %201, i32 0, i32 1
  %203 = load i64, i64* %202, align 8
  %204 = load i32, i32* @ENCI_VFIFO2VD_LINE_TOP_END, align 4
  %205 = call i64 @_REG(i32 %204)
  %206 = add nsw i64 %203, %205
  %207 = call i32 @writel_relaxed(i32 %200, i64 %206)
  %208 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %209 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %208, i32 0, i32 12
  %210 = load i32, i32* %209, align 4
  %211 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %212 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %211, i32 0, i32 1
  %213 = load i64, i64* %212, align 8
  %214 = load i32, i32* @ENCI_VFIFO2VD_LINE_BOT_START, align 4
  %215 = call i64 @_REG(i32 %214)
  %216 = add nsw i64 %213, %215
  %217 = call i32 @writel_relaxed(i32 %210, i64 %216)
  %218 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %219 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %218, i32 0, i32 13
  %220 = load i32, i32* %219, align 8
  %221 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %222 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %221, i32 0, i32 1
  %223 = load i64, i64* %222, align 8
  %224 = load i32, i32* @ENCI_VFIFO2VD_LINE_BOT_END, align 4
  %225 = call i64 @_REG(i32 %224)
  %226 = add nsw i64 %223, %225
  %227 = call i32 @writel_relaxed(i32 %220, i64 %226)
  %228 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %229 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %228, i32 0, i32 1
  %230 = load i64, i64* %229, align 8
  %231 = load i32, i32* @VENC_SYNC_ROUTE, align 4
  %232 = call i64 @_REG(i32 %231)
  %233 = add nsw i64 %230, %232
  %234 = call i32 @writel_relaxed(i32 0, i64 %233)
  %235 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %236 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %235, i32 0, i32 1
  %237 = load i64, i64* %236, align 8
  %238 = load i32, i32* @ENCI_DBG_PX_RST, align 4
  %239 = call i64 @_REG(i32 %238)
  %240 = add nsw i64 %237, %239
  %241 = call i32 @writel_relaxed(i32 0, i64 %240)
  %242 = load i32, i32* @ENCI_VFIFO2VD_CTL_ENABLE, align 4
  %243 = call i32 @ENCI_VFIFO2VD_CTL_VD_SEL(i32 78)
  %244 = or i32 %242, %243
  %245 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %246 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %245, i32 0, i32 1
  %247 = load i64, i64* %246, align 8
  %248 = load i32, i32* @ENCI_VFIFO2VD_CTL, align 4
  %249 = call i64 @_REG(i32 %248)
  %250 = add nsw i64 %247, %249
  %251 = call i32 @writel_relaxed(i32 %244, i64 %250)
  %252 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %253 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %252, i32 0, i32 1
  %254 = load i64, i64* %253, align 8
  %255 = load i32, i32* @VENC_VDAC_SETTING, align 4
  %256 = call i64 @_REG(i32 %255)
  %257 = add nsw i64 %254, %256
  %258 = call i32 @writel_relaxed(i32 0, i64 %257)
  %259 = load i32, i32* @VENC_UPSAMPLE_CTRL_F0_2_CLK_RATIO, align 4
  %260 = load i32, i32* @VENC_UPSAMPLE_CTRL_F1_EN, align 4
  %261 = or i32 %259, %260
  %262 = load i32, i32* @VENC_UPSAMPLE_CTRL_F1_UPSAMPLE_EN, align 4
  %263 = or i32 %261, %262
  store i32 %263, i32* %5, align 4
  %264 = load i32, i32* @VENC_UPSAMPLE_CTRL_INTERLACE_HIGH_LUMA, align 4
  %265 = load i32, i32* %5, align 4
  %266 = or i32 %264, %265
  %267 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %268 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %267, i32 0, i32 1
  %269 = load i64, i64* %268, align 8
  %270 = load i32, i32* @VENC_UPSAMPLE_CTRL0, align 4
  %271 = call i64 @_REG(i32 %270)
  %272 = add nsw i64 %269, %271
  %273 = call i32 @writel_relaxed(i32 %266, i64 %272)
  %274 = load i32, i32* @VENC_UPSAMPLE_CTRL_INTERLACE_PB, align 4
  %275 = load i32, i32* %5, align 4
  %276 = or i32 %274, %275
  %277 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %278 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %277, i32 0, i32 1
  %279 = load i64, i64* %278, align 8
  %280 = load i32, i32* @VENC_UPSAMPLE_CTRL1, align 4
  %281 = call i64 @_REG(i32 %280)
  %282 = add nsw i64 %279, %281
  %283 = call i32 @writel_relaxed(i32 %276, i64 %282)
  %284 = load i32, i32* @VENC_UPSAMPLE_CTRL_INTERLACE_PR, align 4
  %285 = load i32, i32* %5, align 4
  %286 = or i32 %284, %285
  %287 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %288 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %287, i32 0, i32 1
  %289 = load i64, i64* %288, align 8
  %290 = load i32, i32* @VENC_UPSAMPLE_CTRL2, align 4
  %291 = call i64 @_REG(i32 %290)
  %292 = add nsw i64 %289, %291
  %293 = call i32 @writel_relaxed(i32 %286, i64 %292)
  %294 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %295 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %294, i32 0, i32 1
  %296 = load i64, i64* %295, align 8
  %297 = load i32, i32* @VENC_VDAC_DACSEL0, align 4
  %298 = call i64 @_REG(i32 %297)
  %299 = add nsw i64 %296, %298
  %300 = call i32 @writel_relaxed(i32 0, i64 %299)
  %301 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %302 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %301, i32 0, i32 1
  %303 = load i64, i64* %302, align 8
  %304 = load i32, i32* @VENC_VDAC_DACSEL1, align 4
  %305 = call i64 @_REG(i32 %304)
  %306 = add nsw i64 %303, %305
  %307 = call i32 @writel_relaxed(i32 0, i64 %306)
  %308 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %309 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %308, i32 0, i32 1
  %310 = load i64, i64* %309, align 8
  %311 = load i32, i32* @VENC_VDAC_DACSEL2, align 4
  %312 = call i64 @_REG(i32 %311)
  %313 = add nsw i64 %310, %312
  %314 = call i32 @writel_relaxed(i32 0, i64 %313)
  %315 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %316 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %315, i32 0, i32 1
  %317 = load i64, i64* %316, align 8
  %318 = load i32, i32* @VENC_VDAC_DACSEL3, align 4
  %319 = call i64 @_REG(i32 %318)
  %320 = add nsw i64 %317, %319
  %321 = call i32 @writel_relaxed(i32 0, i64 %320)
  %322 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %323 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %322, i32 0, i32 1
  %324 = load i64, i64* %323, align 8
  %325 = load i32, i32* @VENC_VDAC_DACSEL4, align 4
  %326 = call i64 @_REG(i32 %325)
  %327 = add nsw i64 %324, %326
  %328 = call i32 @writel_relaxed(i32 0, i64 %327)
  %329 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %330 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %329, i32 0, i32 1
  %331 = load i64, i64* %330, align 8
  %332 = load i32, i32* @VENC_VDAC_DACSEL5, align 4
  %333 = call i64 @_REG(i32 %332)
  %334 = add nsw i64 %331, %333
  %335 = call i32 @writel_relaxed(i32 0, i64 %334)
  %336 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %337 = load i32, i32* @MESON_VIU_VPP_MUX_ENCI, align 4
  %338 = call i32 @meson_vpp_setup_mux(%struct.meson_drm* %336, i32 %337)
  %339 = load i32, i32* @VENC_VDAC_FIFO_EN_ENCI_ENABLE, align 4
  %340 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %341 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %340, i32 0, i32 1
  %342 = load i64, i64* %341, align 8
  %343 = load i32, i32* @VENC_VDAC_FIFO_CTRL, align 4
  %344 = call i64 @_REG(i32 %343)
  %345 = add nsw i64 %342, %344
  %346 = call i32 @writel_relaxed(i32 %339, i64 %345)
  %347 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %348 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %347, i32 0, i32 1
  %349 = load i64, i64* %348, align 8
  %350 = load i32, i32* @ENCI_DACSEL_0, align 4
  %351 = call i64 @_REG(i32 %350)
  %352 = add nsw i64 %349, %351
  %353 = call i32 @writel_relaxed(i32 17, i64 %352)
  %354 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %355 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %354, i32 0, i32 1
  %356 = load i64, i64* %355, align 8
  %357 = load i32, i32* @ENCI_DACSEL_1, align 4
  %358 = call i64 @_REG(i32 %357)
  %359 = add nsw i64 %356, %358
  %360 = call i32 @writel_relaxed(i32 17, i64 %359)
  %361 = load i32, i32* @ENCI_VIDEO_EN_ENABLE, align 4
  %362 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %363 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %362, i32 0, i32 1
  %364 = load i64, i64* %363, align 8
  %365 = load i32, i32* @ENCI_VIDEO_EN, align 4
  %366 = call i64 @_REG(i32 %365)
  %367 = add nsw i64 %364, %366
  %368 = call i32 @writel_relaxed(i32 %361, i64 %367)
  %369 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %370 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %369, i32 0, i32 14
  %371 = load i32, i32* %370, align 4
  %372 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %373 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %372, i32 0, i32 1
  %374 = load i64, i64* %373, align 8
  %375 = load i32, i32* @ENCI_VIDEO_SAT, align 4
  %376 = call i64 @_REG(i32 %375)
  %377 = add nsw i64 %374, %376
  %378 = call i32 @writel_relaxed(i32 %371, i64 %377)
  %379 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %380 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %379, i32 0, i32 15
  %381 = load i32, i32* %380, align 8
  %382 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %383 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %382, i32 0, i32 1
  %384 = load i64, i64* %383, align 8
  %385 = load i32, i32* @ENCI_VIDEO_CONT, align 4
  %386 = call i64 @_REG(i32 %385)
  %387 = add nsw i64 %384, %386
  %388 = call i32 @writel_relaxed(i32 %381, i64 %387)
  %389 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %390 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %389, i32 0, i32 16
  %391 = load i32, i32* %390, align 4
  %392 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %393 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %392, i32 0, i32 1
  %394 = load i64, i64* %393, align 8
  %395 = load i32, i32* @ENCI_VIDEO_BRIGHT, align 4
  %396 = call i64 @_REG(i32 %395)
  %397 = add nsw i64 %394, %396
  %398 = call i32 @writel_relaxed(i32 %391, i64 %397)
  %399 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %400 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %399, i32 0, i32 17
  %401 = load i32, i32* %400, align 8
  %402 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %403 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %402, i32 0, i32 1
  %404 = load i64, i64* %403, align 8
  %405 = load i32, i32* @ENCI_VIDEO_HUE, align 4
  %406 = call i64 @_REG(i32 %405)
  %407 = add nsw i64 %404, %406
  %408 = call i32 @writel_relaxed(i32 %401, i64 %407)
  %409 = load i32, i32* @VENC_VDAC_DAC0_FILT_CTRL0_EN, align 4
  %410 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %411 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %410, i32 0, i32 1
  %412 = load i64, i64* %411, align 8
  %413 = load i32, i32* @VENC_VDAC_DAC0_FILT_CTRL0, align 4
  %414 = call i64 @_REG(i32 %413)
  %415 = add nsw i64 %412, %414
  %416 = call i32 @writel_relaxed(i32 %409, i64 %415)
  %417 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %418 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %417, i32 0, i32 1
  %419 = load i64, i64* %418, align 8
  %420 = load i32, i32* @VENC_VDAC_DAC0_FILT_CTRL1, align 4
  %421 = call i64 @_REG(i32 %420)
  %422 = add nsw i64 %419, %421
  %423 = call i32 @writel_relaxed(i32 64584, i64 %422)
  %424 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %425 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %424, i32 0, i32 1
  %426 = load i64, i64* %425, align 8
  %427 = load i32, i32* @ENCI_MACV_N0, align 4
  %428 = call i64 @_REG(i32 %427)
  %429 = add nsw i64 %426, %428
  %430 = call i32 @writel_relaxed(i32 0, i64 %429)
  %431 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %432 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %431, i32 0, i32 18
  %433 = load i32, i32* %432, align 4
  %434 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %435 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %434, i32 0, i32 1
  %436 = load i64, i64* %435, align 8
  %437 = load i32, i32* @ENCI_SYNC_ADJ, align 4
  %438 = call i64 @_REG(i32 %437)
  %439 = add nsw i64 %436, %438
  %440 = call i32 @writel_relaxed(i32 %433, i64 %439)
  %441 = load %struct.meson_cvbs_enci_mode*, %struct.meson_cvbs_enci_mode** %4, align 8
  %442 = getelementptr inbounds %struct.meson_cvbs_enci_mode, %struct.meson_cvbs_enci_mode* %441, i32 0, i32 0
  %443 = load i64, i64* %442, align 8
  %444 = load %struct.meson_drm*, %struct.meson_drm** %3, align 8
  %445 = getelementptr inbounds %struct.meson_drm, %struct.meson_drm* %444, i32 0, i32 0
  %446 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %445, i32 0, i32 0
  store i64 %443, i64* %446, align 8
  br label %447

447:                                              ; preds = %15, %14
  ret void
}

declare dso_local i32 @writel_relaxed(i32, i64) #1

declare dso_local i64 @_REG(i32) #1

declare dso_local i32 @ENCI_CFILT_CMPT_CR_DLY(i32) #1

declare dso_local i32 @ENCI_CFILT_CMPT_CB_DLY(i32) #1

declare dso_local i32 @ENCI_MACV_MAX_AMP_VAL(i32) #1

declare dso_local i32 @ENCI_VIDEO_MODE_ADV_DMXMD(i32) #1

declare dso_local i32 @writel(i32, i64) #1

declare dso_local i32 @ENCI_VFIFO2VD_CTL_VD_SEL(i32) #1

declare dso_local i32 @meson_vpp_setup_mux(%struct.meson_drm*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
