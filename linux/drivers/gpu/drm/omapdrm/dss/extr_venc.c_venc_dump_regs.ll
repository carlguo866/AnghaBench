; ModuleID = '/home/carl/AnghaBench/linux/drivers/gpu/drm/omapdrm/dss/extr_venc.c_venc_dump_regs.c'
source_filename = "/home/carl/AnghaBench/linux/drivers/gpu/drm/omapdrm/dss/extr_venc.c_venc_dump_regs.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.seq_file = type { %struct.venc_device* }
%struct.venc_device = type { i32 }

@.str = private unnamed_addr constant [12 x i8] c"%-35s %08x\0A\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"VENC_F_CONTROL\00", align 1
@VENC_F_CONTROL = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [17 x i8] c"VENC_VIDOUT_CTRL\00", align 1
@VENC_VIDOUT_CTRL = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [15 x i8] c"VENC_SYNC_CTRL\00", align 1
@VENC_SYNC_CTRL = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [10 x i8] c"VENC_LLEN\00", align 1
@VENC_LLEN = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [11 x i8] c"VENC_FLENS\00", align 1
@VENC_FLENS = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [16 x i8] c"VENC_HFLTR_CTRL\00", align 1
@VENC_HFLTR_CTRL = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [22 x i8] c"VENC_CC_CARR_WSS_CARR\00", align 1
@VENC_CC_CARR_WSS_CARR = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"VENC_C_PHASE\00", align 1
@VENC_C_PHASE = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [12 x i8] c"VENC_GAIN_U\00", align 1
@VENC_GAIN_U = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [12 x i8] c"VENC_GAIN_V\00", align 1
@VENC_GAIN_V = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [12 x i8] c"VENC_GAIN_Y\00", align 1
@VENC_GAIN_Y = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [17 x i8] c"VENC_BLACK_LEVEL\00", align 1
@VENC_BLACK_LEVEL = common dso_local global i32 0, align 4
@.str.13 = private unnamed_addr constant [17 x i8] c"VENC_BLANK_LEVEL\00", align 1
@VENC_BLANK_LEVEL = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [13 x i8] c"VENC_X_COLOR\00", align 1
@VENC_X_COLOR = common dso_local global i32 0, align 4
@.str.15 = private unnamed_addr constant [15 x i8] c"VENC_M_CONTROL\00", align 1
@VENC_M_CONTROL = common dso_local global i32 0, align 4
@.str.16 = private unnamed_addr constant [21 x i8] c"VENC_BSTAMP_WSS_DATA\00", align 1
@VENC_BSTAMP_WSS_DATA = common dso_local global i32 0, align 4
@.str.17 = private unnamed_addr constant [12 x i8] c"VENC_S_CARR\00", align 1
@VENC_S_CARR = common dso_local global i32 0, align 4
@.str.18 = private unnamed_addr constant [12 x i8] c"VENC_LINE21\00", align 1
@VENC_LINE21 = common dso_local global i32 0, align 4
@.str.19 = private unnamed_addr constant [12 x i8] c"VENC_LN_SEL\00", align 1
@VENC_LN_SEL = common dso_local global i32 0, align 4
@.str.20 = private unnamed_addr constant [17 x i8] c"VENC_L21__WC_CTL\00", align 1
@VENC_L21__WC_CTL = common dso_local global i32 0, align 4
@.str.21 = private unnamed_addr constant [23 x i8] c"VENC_HTRIGGER_VTRIGGER\00", align 1
@VENC_HTRIGGER_VTRIGGER = common dso_local global i32 0, align 4
@.str.22 = private unnamed_addr constant [18 x i8] c"VENC_SAVID__EAVID\00", align 1
@VENC_SAVID__EAVID = common dso_local global i32 0, align 4
@.str.23 = private unnamed_addr constant [15 x i8] c"VENC_FLEN__FAL\00", align 1
@VENC_FLEN__FAL = common dso_local global i32 0, align 4
@.str.24 = private unnamed_addr constant [22 x i8] c"VENC_LAL__PHASE_RESET\00", align 1
@VENC_LAL__PHASE_RESET = common dso_local global i32 0, align 4
@.str.25 = private unnamed_addr constant [25 x i8] c"VENC_HS_INT_START_STOP_X\00", align 1
@VENC_HS_INT_START_STOP_X = common dso_local global i32 0, align 4
@.str.26 = private unnamed_addr constant [25 x i8] c"VENC_HS_EXT_START_STOP_X\00", align 1
@VENC_HS_EXT_START_STOP_X = common dso_local global i32 0, align 4
@.str.27 = private unnamed_addr constant [20 x i8] c"VENC_VS_INT_START_X\00", align 1
@VENC_VS_INT_START_X = common dso_local global i32 0, align 4
@.str.28 = private unnamed_addr constant [35 x i8] c"VENC_VS_INT_STOP_X__VS_INT_START_Y\00", align 1
@VENC_VS_INT_STOP_X__VS_INT_START_Y = common dso_local global i32 0, align 4
@.str.29 = private unnamed_addr constant [35 x i8] c"VENC_VS_INT_STOP_Y__VS_EXT_START_X\00", align 1
@VENC_VS_INT_STOP_Y__VS_EXT_START_X = common dso_local global i32 0, align 4
@.str.30 = private unnamed_addr constant [35 x i8] c"VENC_VS_EXT_STOP_X__VS_EXT_START_Y\00", align 1
@VENC_VS_EXT_STOP_X__VS_EXT_START_Y = common dso_local global i32 0, align 4
@.str.31 = private unnamed_addr constant [19 x i8] c"VENC_VS_EXT_STOP_Y\00", align 1
@VENC_VS_EXT_STOP_Y = common dso_local global i32 0, align 4
@.str.32 = private unnamed_addr constant [23 x i8] c"VENC_AVID_START_STOP_X\00", align 1
@VENC_AVID_START_STOP_X = common dso_local global i32 0, align 4
@.str.33 = private unnamed_addr constant [23 x i8] c"VENC_AVID_START_STOP_Y\00", align 1
@VENC_AVID_START_STOP_Y = common dso_local global i32 0, align 4
@.str.34 = private unnamed_addr constant [38 x i8] c"VENC_FID_INT_START_X__FID_INT_START_Y\00", align 1
@VENC_FID_INT_START_X__FID_INT_START_Y = common dso_local global i32 0, align 4
@.str.35 = private unnamed_addr constant [39 x i8] c"VENC_FID_INT_OFFSET_Y__FID_EXT_START_X\00", align 1
@VENC_FID_INT_OFFSET_Y__FID_EXT_START_X = common dso_local global i32 0, align 4
@.str.36 = private unnamed_addr constant [39 x i8] c"VENC_FID_EXT_START_Y__FID_EXT_OFFSET_Y\00", align 1
@VENC_FID_EXT_START_Y__FID_EXT_OFFSET_Y = common dso_local global i32 0, align 4
@.str.37 = private unnamed_addr constant [30 x i8] c"VENC_TVDETGP_INT_START_STOP_X\00", align 1
@VENC_TVDETGP_INT_START_STOP_X = common dso_local global i32 0, align 4
@.str.38 = private unnamed_addr constant [30 x i8] c"VENC_TVDETGP_INT_START_STOP_Y\00", align 1
@VENC_TVDETGP_INT_START_STOP_Y = common dso_local global i32 0, align 4
@.str.39 = private unnamed_addr constant [14 x i8] c"VENC_GEN_CTRL\00", align 1
@VENC_GEN_CTRL = common dso_local global i32 0, align 4
@.str.40 = private unnamed_addr constant [20 x i8] c"VENC_OUTPUT_CONTROL\00", align 1
@VENC_OUTPUT_CONTROL = common dso_local global i32 0, align 4
@.str.41 = private unnamed_addr constant [17 x i8] c"VENC_OUTPUT_TEST\00", align 1
@VENC_OUTPUT_TEST = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (%struct.seq_file*, i8*)* @venc_dump_regs to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @venc_dump_regs(%struct.seq_file* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.seq_file*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.venc_device*, align 8
  store %struct.seq_file* %0, %struct.seq_file** %4, align 8
  store i8* %1, i8** %5, align 8
  %7 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %8 = getelementptr inbounds %struct.seq_file, %struct.seq_file* %7, i32 0, i32 0
  %9 = load %struct.venc_device*, %struct.venc_device** %8, align 8
  store %struct.venc_device* %9, %struct.venc_device** %6, align 8
  %10 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %11 = call i64 @venc_runtime_get(%struct.venc_device* %10)
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  store i32 0, i32* %3, align 4
  br label %222

14:                                               ; preds = %2
  %15 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %16 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %17 = load i32, i32* @VENC_F_CONTROL, align 4
  %18 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %16, i32 %17)
  %19 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %15, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 %18)
  %20 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %21 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %22 = load i32, i32* @VENC_VIDOUT_CTRL, align 4
  %23 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %21, i32 %22)
  %24 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %20, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i32 %23)
  %25 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %26 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %27 = load i32, i32* @VENC_SYNC_CTRL, align 4
  %28 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %26, i32 %27)
  %29 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %25, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i32 %28)
  %30 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %31 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %32 = load i32, i32* @VENC_LLEN, align 4
  %33 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %31, i32 %32)
  %34 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %30, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i32 %33)
  %35 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %36 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %37 = load i32, i32* @VENC_FLENS, align 4
  %38 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %36, i32 %37)
  %39 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %35, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i32 %38)
  %40 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %41 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %42 = load i32, i32* @VENC_HFLTR_CTRL, align 4
  %43 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %41, i32 %42)
  %44 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %40, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i32 %43)
  %45 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %46 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %47 = load i32, i32* @VENC_CC_CARR_WSS_CARR, align 4
  %48 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %46, i32 %47)
  %49 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %45, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i32 %48)
  %50 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %51 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %52 = load i32, i32* @VENC_C_PHASE, align 4
  %53 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %51, i32 %52)
  %54 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %50, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i32 %53)
  %55 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %56 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %57 = load i32, i32* @VENC_GAIN_U, align 4
  %58 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %56, i32 %57)
  %59 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %55, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i32 %58)
  %60 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %61 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %62 = load i32, i32* @VENC_GAIN_V, align 4
  %63 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %61, i32 %62)
  %64 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %60, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), i32 %63)
  %65 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %66 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %67 = load i32, i32* @VENC_GAIN_Y, align 4
  %68 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %66, i32 %67)
  %69 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %65, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 %68)
  %70 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %71 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %72 = load i32, i32* @VENC_BLACK_LEVEL, align 4
  %73 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %71, i32 %72)
  %74 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %70, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i32 %73)
  %75 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %76 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %77 = load i32, i32* @VENC_BLANK_LEVEL, align 4
  %78 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %76, i32 %77)
  %79 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %75, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i32 %78)
  %80 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %81 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %82 = load i32, i32* @VENC_X_COLOR, align 4
  %83 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %81, i32 %82)
  %84 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %80, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i32 %83)
  %85 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %86 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %87 = load i32, i32* @VENC_M_CONTROL, align 4
  %88 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %86, i32 %87)
  %89 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %85, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i32 %88)
  %90 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %91 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %92 = load i32, i32* @VENC_BSTAMP_WSS_DATA, align 4
  %93 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %91, i32 %92)
  %94 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %90, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i32 %93)
  %95 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %96 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %97 = load i32, i32* @VENC_S_CARR, align 4
  %98 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %96, i32 %97)
  %99 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %95, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i32 %98)
  %100 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %101 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %102 = load i32, i32* @VENC_LINE21, align 4
  %103 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %101, i32 %102)
  %104 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %100, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i64 0, i64 0), i32 %103)
  %105 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %106 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %107 = load i32, i32* @VENC_LN_SEL, align 4
  %108 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %106, i32 %107)
  %109 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %105, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i32 %108)
  %110 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %111 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %112 = load i32, i32* @VENC_L21__WC_CTL, align 4
  %113 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %111, i32 %112)
  %114 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %110, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0), i32 %113)
  %115 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %116 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %117 = load i32, i32* @VENC_HTRIGGER_VTRIGGER, align 4
  %118 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %116, i32 %117)
  %119 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %115, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i32 %118)
  %120 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %121 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %122 = load i32, i32* @VENC_SAVID__EAVID, align 4
  %123 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %121, i32 %122)
  %124 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %120, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i32 %123)
  %125 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %126 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %127 = load i32, i32* @VENC_FLEN__FAL, align 4
  %128 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %126, i32 %127)
  %129 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %125, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23, i64 0, i64 0), i32 %128)
  %130 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %131 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %132 = load i32, i32* @VENC_LAL__PHASE_RESET, align 4
  %133 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %131, i32 %132)
  %134 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %130, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.24, i64 0, i64 0), i32 %133)
  %135 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %136 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %137 = load i32, i32* @VENC_HS_INT_START_STOP_X, align 4
  %138 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %136, i32 %137)
  %139 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %135, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0), i32 %138)
  %140 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %141 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %142 = load i32, i32* @VENC_HS_EXT_START_STOP_X, align 4
  %143 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %141, i32 %142)
  %144 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %140, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.26, i64 0, i64 0), i32 %143)
  %145 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %146 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %147 = load i32, i32* @VENC_VS_INT_START_X, align 4
  %148 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %146, i32 %147)
  %149 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %145, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i64 0, i64 0), i32 %148)
  %150 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %151 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %152 = load i32, i32* @VENC_VS_INT_STOP_X__VS_INT_START_Y, align 4
  %153 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %151, i32 %152)
  %154 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %150, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.28, i64 0, i64 0), i32 %153)
  %155 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %156 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %157 = load i32, i32* @VENC_VS_INT_STOP_Y__VS_EXT_START_X, align 4
  %158 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %156, i32 %157)
  %159 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %155, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29, i64 0, i64 0), i32 %158)
  %160 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %161 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %162 = load i32, i32* @VENC_VS_EXT_STOP_X__VS_EXT_START_Y, align 4
  %163 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %161, i32 %162)
  %164 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %160, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i64 0, i64 0), i32 %163)
  %165 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %166 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %167 = load i32, i32* @VENC_VS_EXT_STOP_Y, align 4
  %168 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %166, i32 %167)
  %169 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %165, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.31, i64 0, i64 0), i32 %168)
  %170 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %171 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %172 = load i32, i32* @VENC_AVID_START_STOP_X, align 4
  %173 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %171, i32 %172)
  %174 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %170, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0), i32 %173)
  %175 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %176 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %177 = load i32, i32* @VENC_AVID_START_STOP_Y, align 4
  %178 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %176, i32 %177)
  %179 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %175, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0), i32 %178)
  %180 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %181 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %182 = load i32, i32* @VENC_FID_INT_START_X__FID_INT_START_Y, align 4
  %183 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %181, i32 %182)
  %184 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %180, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.34, i64 0, i64 0), i32 %183)
  %185 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %186 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %187 = load i32, i32* @VENC_FID_INT_OFFSET_Y__FID_EXT_START_X, align 4
  %188 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %186, i32 %187)
  %189 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %185, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.35, i64 0, i64 0), i32 %188)
  %190 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %191 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %192 = load i32, i32* @VENC_FID_EXT_START_Y__FID_EXT_OFFSET_Y, align 4
  %193 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %191, i32 %192)
  %194 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %190, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.36, i64 0, i64 0), i32 %193)
  %195 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %196 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %197 = load i32, i32* @VENC_TVDETGP_INT_START_STOP_X, align 4
  %198 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %196, i32 %197)
  %199 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %195, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37, i64 0, i64 0), i32 %198)
  %200 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %201 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %202 = load i32, i32* @VENC_TVDETGP_INT_START_STOP_Y, align 4
  %203 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %201, i32 %202)
  %204 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %200, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.38, i64 0, i64 0), i32 %203)
  %205 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %206 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %207 = load i32, i32* @VENC_GEN_CTRL, align 4
  %208 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %206, i32 %207)
  %209 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %205, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i64 0, i64 0), i32 %208)
  %210 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %211 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %212 = load i32, i32* @VENC_OUTPUT_CONTROL, align 4
  %213 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %211, i32 %212)
  %214 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %210, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.40, i64 0, i64 0), i32 %213)
  %215 = load %struct.seq_file*, %struct.seq_file** %4, align 8
  %216 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %217 = load i32, i32* @VENC_OUTPUT_TEST, align 4
  %218 = call i32 (%struct.venc_device*, i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (%struct.venc_device*, i32, ...)*)(%struct.venc_device* %216, i32 %217)
  %219 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %215, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.41, i64 0, i64 0), i32 %218)
  %220 = load %struct.venc_device*, %struct.venc_device** %6, align 8
  %221 = call i32 @venc_runtime_put(%struct.venc_device* %220)
  store i32 0, i32* %3, align 4
  br label %222

222:                                              ; preds = %14, %13
  %223 = load i32, i32* %3, align 4
  ret i32 %223
}

declare dso_local i64 @venc_runtime_get(%struct.venc_device*) #1

declare dso_local i32 @seq_printf(...) #1

declare dso_local i32 @venc_read_reg(...) #1

declare dso_local i32 @venc_runtime_put(%struct.venc_device*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
