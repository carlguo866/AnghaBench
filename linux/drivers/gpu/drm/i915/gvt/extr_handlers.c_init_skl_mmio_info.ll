; ModuleID = '/home/carl/AnghaBench/linux/drivers/gpu/drm/i915/gvt/extr_handlers.c_init_skl_mmio_info.c'
source_filename = "/home/carl/AnghaBench/linux/drivers/gpu/drm/i915/gvt/extr_handlers.c_init_skl_mmio_info.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.intel_gvt = type { %struct.drm_i915_private* }
%struct.drm_i915_private = type { i32 }

@FORCEWAKE_RENDER_GEN9 = common dso_local global i32 0, align 4
@D_SKL_PLUS = common dso_local global i32 0, align 4
@mul_force_wake_write = common dso_local global i32* null, align 8
@FORCEWAKE_ACK_RENDER_GEN9 = common dso_local global i32 0, align 4
@FORCEWAKE_BLITTER_GEN9 = common dso_local global i32 0, align 4
@FORCEWAKE_ACK_BLITTER_GEN9 = common dso_local global i32 0, align 4
@FORCEWAKE_MEDIA_GEN9 = common dso_local global i32 0, align 4
@FORCEWAKE_ACK_MEDIA_GEN9 = common dso_local global i32 0, align 4
@_DPB_AUX_CH_CTL = common dso_local global i32 0, align 4
@dp_aux_ch_ctl_mmio_write = common dso_local global i32* null, align 8
@_DPC_AUX_CH_CTL = common dso_local global i32 0, align 4
@_DPD_AUX_CH_CTL = common dso_local global i32 0, align 4
@HSW_PWR_WELL_CTL1 = common dso_local global i32 0, align 4
@HSW_PWR_WELL_CTL2 = common dso_local global i32 0, align 4
@skl_power_well_ctl_write = common dso_local global i32* null, align 8
@DBUF_CTL = common dso_local global i32 0, align 4
@gen9_dbuf_ctl_mmio_write = common dso_local global i32* null, align 8
@GEN9_PG_ENABLE = common dso_local global i32 0, align 4
@GEN9_MEDIA_PG_IDLE_HYSTERESIS = common dso_local global i32 0, align 4
@GEN9_RENDER_PG_IDLE_HYSTERESIS = common dso_local global i32 0, align 4
@GEN9_GAMT_ECO_REG_RW_IA = common dso_local global i32 0, align 4
@F_CMD_ACCESS = common dso_local global i32 0, align 4
@MMCD_MISC_CTRL = common dso_local global i32 0, align 4
@CHICKEN_PAR1_1 = common dso_local global i32 0, align 4
@DC_STATE_EN = common dso_local global i32 0, align 4
@DC_STATE_DEBUG = common dso_local global i32 0, align 4
@CDCLK_CTL = common dso_local global i32 0, align 4
@LCPLL1_CTL = common dso_local global i32 0, align 4
@skl_lcpll_write = common dso_local global i32* null, align 8
@LCPLL2_CTL = common dso_local global i32 0, align 4
@_DPLL1_CFGCR1 = common dso_local global i32 0, align 4
@_DPLL2_CFGCR1 = common dso_local global i32 0, align 4
@_DPLL3_CFGCR1 = common dso_local global i32 0, align 4
@_DPLL1_CFGCR2 = common dso_local global i32 0, align 4
@_DPLL2_CFGCR2 = common dso_local global i32 0, align 4
@_DPLL3_CFGCR2 = common dso_local global i32 0, align 4
@DPLL_CTRL1 = common dso_local global i32 0, align 4
@DPLL_CTRL2 = common dso_local global i32 0, align 4
@DPLL_STATUS = common dso_local global i32 0, align 4
@dpll_status_read = common dso_local global i32* null, align 8
@PIPE_A = common dso_local global i32 0, align 4
@pf_write = common dso_local global i32* null, align 8
@PIPE_B = common dso_local global i32 0, align 4
@PIPE_C = common dso_local global i32 0, align 4
@_PLANE_CTL_3_A = common dso_local global i32 0, align 4
@_PLANE_CTL_3_B = common dso_local global i32 0, align 4
@_PLANE_SURF_3_A = common dso_local global i32 0, align 4
@CSR_SSP_BASE = common dso_local global i32 0, align 4
@CSR_HTP_SKL = common dso_local global i32 0, align 4
@CSR_LAST_WRITE = common dso_local global i32 0, align 4
@BDW_SCRATCH1 = common dso_local global i32 0, align 4
@SKL_DFSM = common dso_local global i32 0, align 4
@DISPIO_CR_TX_BMU_CR0 = common dso_local global i32 0, align 4
@GEN7_L3CNTLREG2 = common dso_local global i32 0, align 4
@RPM_CONFIG0 = common dso_local global i32 0, align 4
@RC6_LOCATION = common dso_local global i32 0, align 4
@GEN7_FF_SLICE_CS_CHICKEN1 = common dso_local global i32 0, align 4
@F_MODE_MASK = common dso_local global i32 0, align 4
@GEN9_CS_DEBUG_MODE1 = common dso_local global i32 0, align 4
@TRVADR = common dso_local global i32 0, align 4
@TRTTE = common dso_local global i32 0, align 4
@gen9_trtte_write = common dso_local global i32* null, align 8
@gen9_trtt_chicken_write = common dso_local global i32* null, align 8
@GEN8_GARBCNTL = common dso_local global i32 0, align 4
@DMA_CTRL = common dso_local global i32 0, align 4
@dma_ctrl_write = common dso_local global i32* null, align 8
@GEN6_STOLEN_RESERVED = common dso_local global i32 0, align 4
@CSFE_CHICKEN1_REG = common dso_local global i32 0, align 4
@csfe_chicken1_mmio_write = common dso_local global i32 0, align 4
@GEN8_HDC_CHICKEN1 = common dso_local global i32 0, align 4
@GEN9_WM_CHICKEN3 = common dso_local global i32 0, align 4
@GAMT_CHKN_BIT_REG = common dso_local global i32 0, align 4
@D_KBL = common dso_local global i32 0, align 4
@GEN9_CTX_PREEMPT_REG = common dso_local global i32 0, align 4
@D_SKL = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (%struct.intel_gvt*)* @init_skl_mmio_info to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @init_skl_mmio_info(%struct.intel_gvt* %0) #0 {
  %2 = alloca %struct.intel_gvt*, align 8
  %3 = alloca %struct.drm_i915_private*, align 8
  %4 = alloca i32, align 4
  store %struct.intel_gvt* %0, %struct.intel_gvt** %2, align 8
  %5 = load %struct.intel_gvt*, %struct.intel_gvt** %2, align 8
  %6 = getelementptr inbounds %struct.intel_gvt, %struct.intel_gvt* %5, i32 0, i32 0
  %7 = load %struct.drm_i915_private*, %struct.drm_i915_private** %6, align 8
  store %struct.drm_i915_private* %7, %struct.drm_i915_private** %3, align 8
  %8 = load i32, i32* @FORCEWAKE_RENDER_GEN9, align 4
  %9 = load i32, i32* @D_SKL_PLUS, align 4
  %10 = load i32*, i32** @mul_force_wake_write, align 8
  %11 = call i32 @MMIO_DH(i32 %8, i32 %9, i32* null, i32* %10)
  %12 = load i32, i32* @FORCEWAKE_ACK_RENDER_GEN9, align 4
  %13 = load i32, i32* @D_SKL_PLUS, align 4
  %14 = call i32 @MMIO_DH(i32 %12, i32 %13, i32* null, i32* null)
  %15 = load i32, i32* @FORCEWAKE_BLITTER_GEN9, align 4
  %16 = load i32, i32* @D_SKL_PLUS, align 4
  %17 = load i32*, i32** @mul_force_wake_write, align 8
  %18 = call i32 @MMIO_DH(i32 %15, i32 %16, i32* null, i32* %17)
  %19 = load i32, i32* @FORCEWAKE_ACK_BLITTER_GEN9, align 4
  %20 = load i32, i32* @D_SKL_PLUS, align 4
  %21 = call i32 @MMIO_DH(i32 %19, i32 %20, i32* null, i32* null)
  %22 = load i32, i32* @FORCEWAKE_MEDIA_GEN9, align 4
  %23 = load i32, i32* @D_SKL_PLUS, align 4
  %24 = load i32*, i32** @mul_force_wake_write, align 8
  %25 = call i32 @MMIO_DH(i32 %22, i32 %23, i32* null, i32* %24)
  %26 = load i32, i32* @FORCEWAKE_ACK_MEDIA_GEN9, align 4
  %27 = load i32, i32* @D_SKL_PLUS, align 4
  %28 = call i32 @MMIO_DH(i32 %26, i32 %27, i32* null, i32* null)
  %29 = load i32, i32* @_DPB_AUX_CH_CTL, align 4
  %30 = call i32 @_MMIO(i32 %29)
  %31 = load i32, i32* @D_SKL_PLUS, align 4
  %32 = load i32*, i32** @dp_aux_ch_ctl_mmio_write, align 8
  %33 = call i32 @MMIO_F(i32 %30, i32 24, i32 0, i32 0, i32 0, i32 %31, i32* null, i32* %32)
  %34 = load i32, i32* @_DPC_AUX_CH_CTL, align 4
  %35 = call i32 @_MMIO(i32 %34)
  %36 = load i32, i32* @D_SKL_PLUS, align 4
  %37 = load i32*, i32** @dp_aux_ch_ctl_mmio_write, align 8
  %38 = call i32 @MMIO_F(i32 %35, i32 24, i32 0, i32 0, i32 0, i32 %36, i32* null, i32* %37)
  %39 = load i32, i32* @_DPD_AUX_CH_CTL, align 4
  %40 = call i32 @_MMIO(i32 %39)
  %41 = load i32, i32* @D_SKL_PLUS, align 4
  %42 = load i32*, i32** @dp_aux_ch_ctl_mmio_write, align 8
  %43 = call i32 @MMIO_F(i32 %40, i32 24, i32 0, i32 0, i32 0, i32 %41, i32* null, i32* %42)
  %44 = load i32, i32* @HSW_PWR_WELL_CTL1, align 4
  %45 = load i32, i32* @D_SKL_PLUS, align 4
  %46 = call i32 @MMIO_D(i32 %44, i32 %45)
  %47 = load i32, i32* @HSW_PWR_WELL_CTL2, align 4
  %48 = load i32, i32* @D_SKL_PLUS, align 4
  %49 = load i32*, i32** @skl_power_well_ctl_write, align 8
  %50 = call i32 @MMIO_DH(i32 %47, i32 %48, i32* null, i32* %49)
  %51 = load i32, i32* @DBUF_CTL, align 4
  %52 = load i32, i32* @D_SKL_PLUS, align 4
  %53 = load i32*, i32** @gen9_dbuf_ctl_mmio_write, align 8
  %54 = call i32 @MMIO_DH(i32 %51, i32 %52, i32* null, i32* %53)
  %55 = load i32, i32* @GEN9_PG_ENABLE, align 4
  %56 = load i32, i32* @D_SKL_PLUS, align 4
  %57 = call i32 @MMIO_D(i32 %55, i32 %56)
  %58 = load i32, i32* @GEN9_MEDIA_PG_IDLE_HYSTERESIS, align 4
  %59 = load i32, i32* @D_SKL_PLUS, align 4
  %60 = call i32 @MMIO_D(i32 %58, i32 %59)
  %61 = load i32, i32* @GEN9_RENDER_PG_IDLE_HYSTERESIS, align 4
  %62 = load i32, i32* @D_SKL_PLUS, align 4
  %63 = call i32 @MMIO_D(i32 %61, i32 %62)
  %64 = load i32, i32* @GEN9_GAMT_ECO_REG_RW_IA, align 4
  %65 = load i32, i32* @D_SKL_PLUS, align 4
  %66 = load i32, i32* @F_CMD_ACCESS, align 4
  %67 = call i32 @MMIO_DFH(i32 %64, i32 %65, i32 %66, i32* null, i32* null)
  %68 = load i32, i32* @MMCD_MISC_CTRL, align 4
  %69 = load i32, i32* @D_SKL_PLUS, align 4
  %70 = call i32 @MMIO_DH(i32 %68, i32 %69, i32* null, i32* null)
  %71 = load i32, i32* @CHICKEN_PAR1_1, align 4
  %72 = load i32, i32* @D_SKL_PLUS, align 4
  %73 = call i32 @MMIO_DH(i32 %71, i32 %72, i32* null, i32* null)
  %74 = load i32, i32* @DC_STATE_EN, align 4
  %75 = load i32, i32* @D_SKL_PLUS, align 4
  %76 = call i32 @MMIO_D(i32 %74, i32 %75)
  %77 = load i32, i32* @DC_STATE_DEBUG, align 4
  %78 = load i32, i32* @D_SKL_PLUS, align 4
  %79 = call i32 @MMIO_D(i32 %77, i32 %78)
  %80 = load i32, i32* @CDCLK_CTL, align 4
  %81 = load i32, i32* @D_SKL_PLUS, align 4
  %82 = call i32 @MMIO_D(i32 %80, i32 %81)
  %83 = load i32, i32* @LCPLL1_CTL, align 4
  %84 = load i32, i32* @D_SKL_PLUS, align 4
  %85 = load i32*, i32** @skl_lcpll_write, align 8
  %86 = call i32 @MMIO_DH(i32 %83, i32 %84, i32* null, i32* %85)
  %87 = load i32, i32* @LCPLL2_CTL, align 4
  %88 = load i32, i32* @D_SKL_PLUS, align 4
  %89 = load i32*, i32** @skl_lcpll_write, align 8
  %90 = call i32 @MMIO_DH(i32 %87, i32 %88, i32* null, i32* %89)
  %91 = load i32, i32* @_DPLL1_CFGCR1, align 4
  %92 = call i32 @_MMIO(i32 %91)
  %93 = load i32, i32* @D_SKL_PLUS, align 4
  %94 = call i32 @MMIO_D(i32 %92, i32 %93)
  %95 = load i32, i32* @_DPLL2_CFGCR1, align 4
  %96 = call i32 @_MMIO(i32 %95)
  %97 = load i32, i32* @D_SKL_PLUS, align 4
  %98 = call i32 @MMIO_D(i32 %96, i32 %97)
  %99 = load i32, i32* @_DPLL3_CFGCR1, align 4
  %100 = call i32 @_MMIO(i32 %99)
  %101 = load i32, i32* @D_SKL_PLUS, align 4
  %102 = call i32 @MMIO_D(i32 %100, i32 %101)
  %103 = load i32, i32* @_DPLL1_CFGCR2, align 4
  %104 = call i32 @_MMIO(i32 %103)
  %105 = load i32, i32* @D_SKL_PLUS, align 4
  %106 = call i32 @MMIO_D(i32 %104, i32 %105)
  %107 = load i32, i32* @_DPLL2_CFGCR2, align 4
  %108 = call i32 @_MMIO(i32 %107)
  %109 = load i32, i32* @D_SKL_PLUS, align 4
  %110 = call i32 @MMIO_D(i32 %108, i32 %109)
  %111 = load i32, i32* @_DPLL3_CFGCR2, align 4
  %112 = call i32 @_MMIO(i32 %111)
  %113 = load i32, i32* @D_SKL_PLUS, align 4
  %114 = call i32 @MMIO_D(i32 %112, i32 %113)
  %115 = load i32, i32* @DPLL_CTRL1, align 4
  %116 = load i32, i32* @D_SKL_PLUS, align 4
  %117 = call i32 @MMIO_D(i32 %115, i32 %116)
  %118 = load i32, i32* @DPLL_CTRL2, align 4
  %119 = load i32, i32* @D_SKL_PLUS, align 4
  %120 = call i32 @MMIO_D(i32 %118, i32 %119)
  %121 = load i32, i32* @DPLL_STATUS, align 4
  %122 = load i32, i32* @D_SKL_PLUS, align 4
  %123 = load i32*, i32** @dpll_status_read, align 8
  %124 = call i32 @MMIO_DH(i32 %121, i32 %122, i32* %123, i32* null)
  %125 = load i32, i32* @PIPE_A, align 4
  %126 = call i32 @SKL_PS_WIN_POS(i32 %125, i32 0)
  %127 = load i32, i32* @D_SKL_PLUS, align 4
  %128 = load i32*, i32** @pf_write, align 8
  %129 = call i32 @MMIO_DH(i32 %126, i32 %127, i32* null, i32* %128)
  %130 = load i32, i32* @PIPE_A, align 4
  %131 = call i32 @SKL_PS_WIN_POS(i32 %130, i32 1)
  %132 = load i32, i32* @D_SKL_PLUS, align 4
  %133 = load i32*, i32** @pf_write, align 8
  %134 = call i32 @MMIO_DH(i32 %131, i32 %132, i32* null, i32* %133)
  %135 = load i32, i32* @PIPE_B, align 4
  %136 = call i32 @SKL_PS_WIN_POS(i32 %135, i32 0)
  %137 = load i32, i32* @D_SKL_PLUS, align 4
  %138 = load i32*, i32** @pf_write, align 8
  %139 = call i32 @MMIO_DH(i32 %136, i32 %137, i32* null, i32* %138)
  %140 = load i32, i32* @PIPE_B, align 4
  %141 = call i32 @SKL_PS_WIN_POS(i32 %140, i32 1)
  %142 = load i32, i32* @D_SKL_PLUS, align 4
  %143 = load i32*, i32** @pf_write, align 8
  %144 = call i32 @MMIO_DH(i32 %141, i32 %142, i32* null, i32* %143)
  %145 = load i32, i32* @PIPE_C, align 4
  %146 = call i32 @SKL_PS_WIN_POS(i32 %145, i32 0)
  %147 = load i32, i32* @D_SKL_PLUS, align 4
  %148 = load i32*, i32** @pf_write, align 8
  %149 = call i32 @MMIO_DH(i32 %146, i32 %147, i32* null, i32* %148)
  %150 = load i32, i32* @PIPE_C, align 4
  %151 = call i32 @SKL_PS_WIN_POS(i32 %150, i32 1)
  %152 = load i32, i32* @D_SKL_PLUS, align 4
  %153 = load i32*, i32** @pf_write, align 8
  %154 = call i32 @MMIO_DH(i32 %151, i32 %152, i32* null, i32* %153)
  %155 = load i32, i32* @PIPE_A, align 4
  %156 = call i32 @SKL_PS_WIN_SZ(i32 %155, i32 0)
  %157 = load i32, i32* @D_SKL_PLUS, align 4
  %158 = load i32*, i32** @pf_write, align 8
  %159 = call i32 @MMIO_DH(i32 %156, i32 %157, i32* null, i32* %158)
  %160 = load i32, i32* @PIPE_A, align 4
  %161 = call i32 @SKL_PS_WIN_SZ(i32 %160, i32 1)
  %162 = load i32, i32* @D_SKL_PLUS, align 4
  %163 = load i32*, i32** @pf_write, align 8
  %164 = call i32 @MMIO_DH(i32 %161, i32 %162, i32* null, i32* %163)
  %165 = load i32, i32* @PIPE_B, align 4
  %166 = call i32 @SKL_PS_WIN_SZ(i32 %165, i32 0)
  %167 = load i32, i32* @D_SKL_PLUS, align 4
  %168 = load i32*, i32** @pf_write, align 8
  %169 = call i32 @MMIO_DH(i32 %166, i32 %167, i32* null, i32* %168)
  %170 = load i32, i32* @PIPE_B, align 4
  %171 = call i32 @SKL_PS_WIN_SZ(i32 %170, i32 1)
  %172 = load i32, i32* @D_SKL_PLUS, align 4
  %173 = load i32*, i32** @pf_write, align 8
  %174 = call i32 @MMIO_DH(i32 %171, i32 %172, i32* null, i32* %173)
  %175 = load i32, i32* @PIPE_C, align 4
  %176 = call i32 @SKL_PS_WIN_SZ(i32 %175, i32 0)
  %177 = load i32, i32* @D_SKL_PLUS, align 4
  %178 = load i32*, i32** @pf_write, align 8
  %179 = call i32 @MMIO_DH(i32 %176, i32 %177, i32* null, i32* %178)
  %180 = load i32, i32* @PIPE_C, align 4
  %181 = call i32 @SKL_PS_WIN_SZ(i32 %180, i32 1)
  %182 = load i32, i32* @D_SKL_PLUS, align 4
  %183 = load i32*, i32** @pf_write, align 8
  %184 = call i32 @MMIO_DH(i32 %181, i32 %182, i32* null, i32* %183)
  %185 = load i32, i32* @PIPE_A, align 4
  %186 = call i32 @SKL_PS_CTRL(i32 %185, i32 0)
  %187 = load i32, i32* @D_SKL_PLUS, align 4
  %188 = load i32*, i32** @pf_write, align 8
  %189 = call i32 @MMIO_DH(i32 %186, i32 %187, i32* null, i32* %188)
  %190 = load i32, i32* @PIPE_A, align 4
  %191 = call i32 @SKL_PS_CTRL(i32 %190, i32 1)
  %192 = load i32, i32* @D_SKL_PLUS, align 4
  %193 = load i32*, i32** @pf_write, align 8
  %194 = call i32 @MMIO_DH(i32 %191, i32 %192, i32* null, i32* %193)
  %195 = load i32, i32* @PIPE_B, align 4
  %196 = call i32 @SKL_PS_CTRL(i32 %195, i32 0)
  %197 = load i32, i32* @D_SKL_PLUS, align 4
  %198 = load i32*, i32** @pf_write, align 8
  %199 = call i32 @MMIO_DH(i32 %196, i32 %197, i32* null, i32* %198)
  %200 = load i32, i32* @PIPE_B, align 4
  %201 = call i32 @SKL_PS_CTRL(i32 %200, i32 1)
  %202 = load i32, i32* @D_SKL_PLUS, align 4
  %203 = load i32*, i32** @pf_write, align 8
  %204 = call i32 @MMIO_DH(i32 %201, i32 %202, i32* null, i32* %203)
  %205 = load i32, i32* @PIPE_C, align 4
  %206 = call i32 @SKL_PS_CTRL(i32 %205, i32 0)
  %207 = load i32, i32* @D_SKL_PLUS, align 4
  %208 = load i32*, i32** @pf_write, align 8
  %209 = call i32 @MMIO_DH(i32 %206, i32 %207, i32* null, i32* %208)
  %210 = load i32, i32* @PIPE_C, align 4
  %211 = call i32 @SKL_PS_CTRL(i32 %210, i32 1)
  %212 = load i32, i32* @D_SKL_PLUS, align 4
  %213 = load i32*, i32** @pf_write, align 8
  %214 = call i32 @MMIO_DH(i32 %211, i32 %212, i32* null, i32* %213)
  %215 = load i32, i32* @PIPE_A, align 4
  %216 = call i32 @PLANE_BUF_CFG(i32 %215, i32 0)
  %217 = load i32, i32* @D_SKL_PLUS, align 4
  %218 = call i32 @MMIO_DH(i32 %216, i32 %217, i32* null, i32* null)
  %219 = load i32, i32* @PIPE_A, align 4
  %220 = call i32 @PLANE_BUF_CFG(i32 %219, i32 1)
  %221 = load i32, i32* @D_SKL_PLUS, align 4
  %222 = call i32 @MMIO_DH(i32 %220, i32 %221, i32* null, i32* null)
  %223 = load i32, i32* @PIPE_A, align 4
  %224 = call i32 @PLANE_BUF_CFG(i32 %223, i32 2)
  %225 = load i32, i32* @D_SKL_PLUS, align 4
  %226 = call i32 @MMIO_DH(i32 %224, i32 %225, i32* null, i32* null)
  %227 = load i32, i32* @PIPE_A, align 4
  %228 = call i32 @PLANE_BUF_CFG(i32 %227, i32 3)
  %229 = load i32, i32* @D_SKL_PLUS, align 4
  %230 = call i32 @MMIO_DH(i32 %228, i32 %229, i32* null, i32* null)
  %231 = load i32, i32* @PIPE_B, align 4
  %232 = call i32 @PLANE_BUF_CFG(i32 %231, i32 0)
  %233 = load i32, i32* @D_SKL_PLUS, align 4
  %234 = call i32 @MMIO_DH(i32 %232, i32 %233, i32* null, i32* null)
  %235 = load i32, i32* @PIPE_B, align 4
  %236 = call i32 @PLANE_BUF_CFG(i32 %235, i32 1)
  %237 = load i32, i32* @D_SKL_PLUS, align 4
  %238 = call i32 @MMIO_DH(i32 %236, i32 %237, i32* null, i32* null)
  %239 = load i32, i32* @PIPE_B, align 4
  %240 = call i32 @PLANE_BUF_CFG(i32 %239, i32 2)
  %241 = load i32, i32* @D_SKL_PLUS, align 4
  %242 = call i32 @MMIO_DH(i32 %240, i32 %241, i32* null, i32* null)
  %243 = load i32, i32* @PIPE_B, align 4
  %244 = call i32 @PLANE_BUF_CFG(i32 %243, i32 3)
  %245 = load i32, i32* @D_SKL_PLUS, align 4
  %246 = call i32 @MMIO_DH(i32 %244, i32 %245, i32* null, i32* null)
  %247 = load i32, i32* @PIPE_C, align 4
  %248 = call i32 @PLANE_BUF_CFG(i32 %247, i32 0)
  %249 = load i32, i32* @D_SKL_PLUS, align 4
  %250 = call i32 @MMIO_DH(i32 %248, i32 %249, i32* null, i32* null)
  %251 = load i32, i32* @PIPE_C, align 4
  %252 = call i32 @PLANE_BUF_CFG(i32 %251, i32 1)
  %253 = load i32, i32* @D_SKL_PLUS, align 4
  %254 = call i32 @MMIO_DH(i32 %252, i32 %253, i32* null, i32* null)
  %255 = load i32, i32* @PIPE_C, align 4
  %256 = call i32 @PLANE_BUF_CFG(i32 %255, i32 2)
  %257 = load i32, i32* @D_SKL_PLUS, align 4
  %258 = call i32 @MMIO_DH(i32 %256, i32 %257, i32* null, i32* null)
  %259 = load i32, i32* @PIPE_C, align 4
  %260 = call i32 @PLANE_BUF_CFG(i32 %259, i32 3)
  %261 = load i32, i32* @D_SKL_PLUS, align 4
  %262 = call i32 @MMIO_DH(i32 %260, i32 %261, i32* null, i32* null)
  %263 = load i32, i32* @PIPE_A, align 4
  %264 = call i32 @CUR_BUF_CFG(i32 %263)
  %265 = load i32, i32* @D_SKL_PLUS, align 4
  %266 = call i32 @MMIO_DH(i32 %264, i32 %265, i32* null, i32* null)
  %267 = load i32, i32* @PIPE_B, align 4
  %268 = call i32 @CUR_BUF_CFG(i32 %267)
  %269 = load i32, i32* @D_SKL_PLUS, align 4
  %270 = call i32 @MMIO_DH(i32 %268, i32 %269, i32* null, i32* null)
  %271 = load i32, i32* @PIPE_C, align 4
  %272 = call i32 @CUR_BUF_CFG(i32 %271)
  %273 = load i32, i32* @D_SKL_PLUS, align 4
  %274 = call i32 @MMIO_DH(i32 %272, i32 %273, i32* null, i32* null)
  %275 = load i32, i32* @PIPE_A, align 4
  %276 = call i32 @PLANE_WM(i32 %275, i32 0, i32 0)
  %277 = load i32, i32* @D_SKL_PLUS, align 4
  %278 = call i32 @MMIO_F(i32 %276, i32 32, i32 0, i32 0, i32 0, i32 %277, i32* null, i32* null)
  %279 = load i32, i32* @PIPE_A, align 4
  %280 = call i32 @PLANE_WM(i32 %279, i32 1, i32 0)
  %281 = load i32, i32* @D_SKL_PLUS, align 4
  %282 = call i32 @MMIO_F(i32 %280, i32 32, i32 0, i32 0, i32 0, i32 %281, i32* null, i32* null)
  %283 = load i32, i32* @PIPE_A, align 4
  %284 = call i32 @PLANE_WM(i32 %283, i32 2, i32 0)
  %285 = load i32, i32* @D_SKL_PLUS, align 4
  %286 = call i32 @MMIO_F(i32 %284, i32 32, i32 0, i32 0, i32 0, i32 %285, i32* null, i32* null)
  %287 = load i32, i32* @PIPE_B, align 4
  %288 = call i32 @PLANE_WM(i32 %287, i32 0, i32 0)
  %289 = load i32, i32* @D_SKL_PLUS, align 4
  %290 = call i32 @MMIO_F(i32 %288, i32 32, i32 0, i32 0, i32 0, i32 %289, i32* null, i32* null)
  %291 = load i32, i32* @PIPE_B, align 4
  %292 = call i32 @PLANE_WM(i32 %291, i32 1, i32 0)
  %293 = load i32, i32* @D_SKL_PLUS, align 4
  %294 = call i32 @MMIO_F(i32 %292, i32 32, i32 0, i32 0, i32 0, i32 %293, i32* null, i32* null)
  %295 = load i32, i32* @PIPE_B, align 4
  %296 = call i32 @PLANE_WM(i32 %295, i32 2, i32 0)
  %297 = load i32, i32* @D_SKL_PLUS, align 4
  %298 = call i32 @MMIO_F(i32 %296, i32 32, i32 0, i32 0, i32 0, i32 %297, i32* null, i32* null)
  %299 = load i32, i32* @PIPE_C, align 4
  %300 = call i32 @PLANE_WM(i32 %299, i32 0, i32 0)
  %301 = load i32, i32* @D_SKL_PLUS, align 4
  %302 = call i32 @MMIO_F(i32 %300, i32 32, i32 0, i32 0, i32 0, i32 %301, i32* null, i32* null)
  %303 = load i32, i32* @PIPE_C, align 4
  %304 = call i32 @PLANE_WM(i32 %303, i32 1, i32 0)
  %305 = load i32, i32* @D_SKL_PLUS, align 4
  %306 = call i32 @MMIO_F(i32 %304, i32 32, i32 0, i32 0, i32 0, i32 %305, i32* null, i32* null)
  %307 = load i32, i32* @PIPE_C, align 4
  %308 = call i32 @PLANE_WM(i32 %307, i32 2, i32 0)
  %309 = load i32, i32* @D_SKL_PLUS, align 4
  %310 = call i32 @MMIO_F(i32 %308, i32 32, i32 0, i32 0, i32 0, i32 %309, i32* null, i32* null)
  %311 = load i32, i32* @PIPE_A, align 4
  %312 = call i32 @CUR_WM(i32 %311, i32 0)
  %313 = load i32, i32* @D_SKL_PLUS, align 4
  %314 = call i32 @MMIO_F(i32 %312, i32 32, i32 0, i32 0, i32 0, i32 %313, i32* null, i32* null)
  %315 = load i32, i32* @PIPE_B, align 4
  %316 = call i32 @CUR_WM(i32 %315, i32 0)
  %317 = load i32, i32* @D_SKL_PLUS, align 4
  %318 = call i32 @MMIO_F(i32 %316, i32 32, i32 0, i32 0, i32 0, i32 %317, i32* null, i32* null)
  %319 = load i32, i32* @PIPE_C, align 4
  %320 = call i32 @CUR_WM(i32 %319, i32 0)
  %321 = load i32, i32* @D_SKL_PLUS, align 4
  %322 = call i32 @MMIO_F(i32 %320, i32 32, i32 0, i32 0, i32 0, i32 %321, i32* null, i32* null)
  %323 = load i32, i32* @PIPE_A, align 4
  %324 = call i32 @PLANE_WM_TRANS(i32 %323, i32 0)
  %325 = load i32, i32* @D_SKL_PLUS, align 4
  %326 = call i32 @MMIO_DH(i32 %324, i32 %325, i32* null, i32* null)
  %327 = load i32, i32* @PIPE_A, align 4
  %328 = call i32 @PLANE_WM_TRANS(i32 %327, i32 1)
  %329 = load i32, i32* @D_SKL_PLUS, align 4
  %330 = call i32 @MMIO_DH(i32 %328, i32 %329, i32* null, i32* null)
  %331 = load i32, i32* @PIPE_A, align 4
  %332 = call i32 @PLANE_WM_TRANS(i32 %331, i32 2)
  %333 = load i32, i32* @D_SKL_PLUS, align 4
  %334 = call i32 @MMIO_DH(i32 %332, i32 %333, i32* null, i32* null)
  %335 = load i32, i32* @PIPE_B, align 4
  %336 = call i32 @PLANE_WM_TRANS(i32 %335, i32 0)
  %337 = load i32, i32* @D_SKL_PLUS, align 4
  %338 = call i32 @MMIO_DH(i32 %336, i32 %337, i32* null, i32* null)
  %339 = load i32, i32* @PIPE_B, align 4
  %340 = call i32 @PLANE_WM_TRANS(i32 %339, i32 1)
  %341 = load i32, i32* @D_SKL_PLUS, align 4
  %342 = call i32 @MMIO_DH(i32 %340, i32 %341, i32* null, i32* null)
  %343 = load i32, i32* @PIPE_B, align 4
  %344 = call i32 @PLANE_WM_TRANS(i32 %343, i32 2)
  %345 = load i32, i32* @D_SKL_PLUS, align 4
  %346 = call i32 @MMIO_DH(i32 %344, i32 %345, i32* null, i32* null)
  %347 = load i32, i32* @PIPE_C, align 4
  %348 = call i32 @PLANE_WM_TRANS(i32 %347, i32 0)
  %349 = load i32, i32* @D_SKL_PLUS, align 4
  %350 = call i32 @MMIO_DH(i32 %348, i32 %349, i32* null, i32* null)
  %351 = load i32, i32* @PIPE_C, align 4
  %352 = call i32 @PLANE_WM_TRANS(i32 %351, i32 1)
  %353 = load i32, i32* @D_SKL_PLUS, align 4
  %354 = call i32 @MMIO_DH(i32 %352, i32 %353, i32* null, i32* null)
  %355 = load i32, i32* @PIPE_C, align 4
  %356 = call i32 @PLANE_WM_TRANS(i32 %355, i32 2)
  %357 = load i32, i32* @D_SKL_PLUS, align 4
  %358 = call i32 @MMIO_DH(i32 %356, i32 %357, i32* null, i32* null)
  %359 = load i32, i32* @PIPE_A, align 4
  %360 = call i32 @CUR_WM_TRANS(i32 %359)
  %361 = load i32, i32* @D_SKL_PLUS, align 4
  %362 = call i32 @MMIO_DH(i32 %360, i32 %361, i32* null, i32* null)
  %363 = load i32, i32* @PIPE_B, align 4
  %364 = call i32 @CUR_WM_TRANS(i32 %363)
  %365 = load i32, i32* @D_SKL_PLUS, align 4
  %366 = call i32 @MMIO_DH(i32 %364, i32 %365, i32* null, i32* null)
  %367 = load i32, i32* @PIPE_C, align 4
  %368 = call i32 @CUR_WM_TRANS(i32 %367)
  %369 = load i32, i32* @D_SKL_PLUS, align 4
  %370 = call i32 @MMIO_DH(i32 %368, i32 %369, i32* null, i32* null)
  %371 = load i32, i32* @PIPE_A, align 4
  %372 = call i32 @PLANE_NV12_BUF_CFG(i32 %371, i32 0)
  %373 = load i32, i32* @D_SKL_PLUS, align 4
  %374 = call i32 @MMIO_DH(i32 %372, i32 %373, i32* null, i32* null)
  %375 = load i32, i32* @PIPE_A, align 4
  %376 = call i32 @PLANE_NV12_BUF_CFG(i32 %375, i32 1)
  %377 = load i32, i32* @D_SKL_PLUS, align 4
  %378 = call i32 @MMIO_DH(i32 %376, i32 %377, i32* null, i32* null)
  %379 = load i32, i32* @PIPE_A, align 4
  %380 = call i32 @PLANE_NV12_BUF_CFG(i32 %379, i32 2)
  %381 = load i32, i32* @D_SKL_PLUS, align 4
  %382 = call i32 @MMIO_DH(i32 %380, i32 %381, i32* null, i32* null)
  %383 = load i32, i32* @PIPE_A, align 4
  %384 = call i32 @PLANE_NV12_BUF_CFG(i32 %383, i32 3)
  %385 = load i32, i32* @D_SKL_PLUS, align 4
  %386 = call i32 @MMIO_DH(i32 %384, i32 %385, i32* null, i32* null)
  %387 = load i32, i32* @PIPE_B, align 4
  %388 = call i32 @PLANE_NV12_BUF_CFG(i32 %387, i32 0)
  %389 = load i32, i32* @D_SKL_PLUS, align 4
  %390 = call i32 @MMIO_DH(i32 %388, i32 %389, i32* null, i32* null)
  %391 = load i32, i32* @PIPE_B, align 4
  %392 = call i32 @PLANE_NV12_BUF_CFG(i32 %391, i32 1)
  %393 = load i32, i32* @D_SKL_PLUS, align 4
  %394 = call i32 @MMIO_DH(i32 %392, i32 %393, i32* null, i32* null)
  %395 = load i32, i32* @PIPE_B, align 4
  %396 = call i32 @PLANE_NV12_BUF_CFG(i32 %395, i32 2)
  %397 = load i32, i32* @D_SKL_PLUS, align 4
  %398 = call i32 @MMIO_DH(i32 %396, i32 %397, i32* null, i32* null)
  %399 = load i32, i32* @PIPE_B, align 4
  %400 = call i32 @PLANE_NV12_BUF_CFG(i32 %399, i32 3)
  %401 = load i32, i32* @D_SKL_PLUS, align 4
  %402 = call i32 @MMIO_DH(i32 %400, i32 %401, i32* null, i32* null)
  %403 = load i32, i32* @PIPE_C, align 4
  %404 = call i32 @PLANE_NV12_BUF_CFG(i32 %403, i32 0)
  %405 = load i32, i32* @D_SKL_PLUS, align 4
  %406 = call i32 @MMIO_DH(i32 %404, i32 %405, i32* null, i32* null)
  %407 = load i32, i32* @PIPE_C, align 4
  %408 = call i32 @PLANE_NV12_BUF_CFG(i32 %407, i32 1)
  %409 = load i32, i32* @D_SKL_PLUS, align 4
  %410 = call i32 @MMIO_DH(i32 %408, i32 %409, i32* null, i32* null)
  %411 = load i32, i32* @PIPE_C, align 4
  %412 = call i32 @PLANE_NV12_BUF_CFG(i32 %411, i32 2)
  %413 = load i32, i32* @D_SKL_PLUS, align 4
  %414 = call i32 @MMIO_DH(i32 %412, i32 %413, i32* null, i32* null)
  %415 = load i32, i32* @PIPE_C, align 4
  %416 = call i32 @PLANE_NV12_BUF_CFG(i32 %415, i32 3)
  %417 = load i32, i32* @D_SKL_PLUS, align 4
  %418 = call i32 @MMIO_DH(i32 %416, i32 %417, i32* null, i32* null)
  %419 = load i32, i32* @PIPE_A, align 4
  %420 = call i32 @_REG_701C0(i32 %419, i32 1)
  %421 = call i32 @_MMIO(i32 %420)
  %422 = load i32, i32* @D_SKL_PLUS, align 4
  %423 = call i32 @MMIO_DH(i32 %421, i32 %422, i32* null, i32* null)
  %424 = load i32, i32* @PIPE_A, align 4
  %425 = call i32 @_REG_701C0(i32 %424, i32 2)
  %426 = call i32 @_MMIO(i32 %425)
  %427 = load i32, i32* @D_SKL_PLUS, align 4
  %428 = call i32 @MMIO_DH(i32 %426, i32 %427, i32* null, i32* null)
  %429 = load i32, i32* @PIPE_A, align 4
  %430 = call i32 @_REG_701C0(i32 %429, i32 3)
  %431 = call i32 @_MMIO(i32 %430)
  %432 = load i32, i32* @D_SKL_PLUS, align 4
  %433 = call i32 @MMIO_DH(i32 %431, i32 %432, i32* null, i32* null)
  %434 = load i32, i32* @PIPE_A, align 4
  %435 = call i32 @_REG_701C0(i32 %434, i32 4)
  %436 = call i32 @_MMIO(i32 %435)
  %437 = load i32, i32* @D_SKL_PLUS, align 4
  %438 = call i32 @MMIO_DH(i32 %436, i32 %437, i32* null, i32* null)
  %439 = load i32, i32* @PIPE_B, align 4
  %440 = call i32 @_REG_701C0(i32 %439, i32 1)
  %441 = call i32 @_MMIO(i32 %440)
  %442 = load i32, i32* @D_SKL_PLUS, align 4
  %443 = call i32 @MMIO_DH(i32 %441, i32 %442, i32* null, i32* null)
  %444 = load i32, i32* @PIPE_B, align 4
  %445 = call i32 @_REG_701C0(i32 %444, i32 2)
  %446 = call i32 @_MMIO(i32 %445)
  %447 = load i32, i32* @D_SKL_PLUS, align 4
  %448 = call i32 @MMIO_DH(i32 %446, i32 %447, i32* null, i32* null)
  %449 = load i32, i32* @PIPE_B, align 4
  %450 = call i32 @_REG_701C0(i32 %449, i32 3)
  %451 = call i32 @_MMIO(i32 %450)
  %452 = load i32, i32* @D_SKL_PLUS, align 4
  %453 = call i32 @MMIO_DH(i32 %451, i32 %452, i32* null, i32* null)
  %454 = load i32, i32* @PIPE_B, align 4
  %455 = call i32 @_REG_701C0(i32 %454, i32 4)
  %456 = call i32 @_MMIO(i32 %455)
  %457 = load i32, i32* @D_SKL_PLUS, align 4
  %458 = call i32 @MMIO_DH(i32 %456, i32 %457, i32* null, i32* null)
  %459 = load i32, i32* @PIPE_C, align 4
  %460 = call i32 @_REG_701C0(i32 %459, i32 1)
  %461 = call i32 @_MMIO(i32 %460)
  %462 = load i32, i32* @D_SKL_PLUS, align 4
  %463 = call i32 @MMIO_DH(i32 %461, i32 %462, i32* null, i32* null)
  %464 = load i32, i32* @PIPE_C, align 4
  %465 = call i32 @_REG_701C0(i32 %464, i32 2)
  %466 = call i32 @_MMIO(i32 %465)
  %467 = load i32, i32* @D_SKL_PLUS, align 4
  %468 = call i32 @MMIO_DH(i32 %466, i32 %467, i32* null, i32* null)
  %469 = load i32, i32* @PIPE_C, align 4
  %470 = call i32 @_REG_701C0(i32 %469, i32 3)
  %471 = call i32 @_MMIO(i32 %470)
  %472 = load i32, i32* @D_SKL_PLUS, align 4
  %473 = call i32 @MMIO_DH(i32 %471, i32 %472, i32* null, i32* null)
  %474 = load i32, i32* @PIPE_C, align 4
  %475 = call i32 @_REG_701C0(i32 %474, i32 4)
  %476 = call i32 @_MMIO(i32 %475)
  %477 = load i32, i32* @D_SKL_PLUS, align 4
  %478 = call i32 @MMIO_DH(i32 %476, i32 %477, i32* null, i32* null)
  %479 = load i32, i32* @PIPE_A, align 4
  %480 = call i32 @_REG_701C4(i32 %479, i32 1)
  %481 = call i32 @_MMIO(i32 %480)
  %482 = load i32, i32* @D_SKL_PLUS, align 4
  %483 = call i32 @MMIO_DH(i32 %481, i32 %482, i32* null, i32* null)
  %484 = load i32, i32* @PIPE_A, align 4
  %485 = call i32 @_REG_701C4(i32 %484, i32 2)
  %486 = call i32 @_MMIO(i32 %485)
  %487 = load i32, i32* @D_SKL_PLUS, align 4
  %488 = call i32 @MMIO_DH(i32 %486, i32 %487, i32* null, i32* null)
  %489 = load i32, i32* @PIPE_A, align 4
  %490 = call i32 @_REG_701C4(i32 %489, i32 3)
  %491 = call i32 @_MMIO(i32 %490)
  %492 = load i32, i32* @D_SKL_PLUS, align 4
  %493 = call i32 @MMIO_DH(i32 %491, i32 %492, i32* null, i32* null)
  %494 = load i32, i32* @PIPE_A, align 4
  %495 = call i32 @_REG_701C4(i32 %494, i32 4)
  %496 = call i32 @_MMIO(i32 %495)
  %497 = load i32, i32* @D_SKL_PLUS, align 4
  %498 = call i32 @MMIO_DH(i32 %496, i32 %497, i32* null, i32* null)
  %499 = load i32, i32* @PIPE_B, align 4
  %500 = call i32 @_REG_701C4(i32 %499, i32 1)
  %501 = call i32 @_MMIO(i32 %500)
  %502 = load i32, i32* @D_SKL_PLUS, align 4
  %503 = call i32 @MMIO_DH(i32 %501, i32 %502, i32* null, i32* null)
  %504 = load i32, i32* @PIPE_B, align 4
  %505 = call i32 @_REG_701C4(i32 %504, i32 2)
  %506 = call i32 @_MMIO(i32 %505)
  %507 = load i32, i32* @D_SKL_PLUS, align 4
  %508 = call i32 @MMIO_DH(i32 %506, i32 %507, i32* null, i32* null)
  %509 = load i32, i32* @PIPE_B, align 4
  %510 = call i32 @_REG_701C4(i32 %509, i32 3)
  %511 = call i32 @_MMIO(i32 %510)
  %512 = load i32, i32* @D_SKL_PLUS, align 4
  %513 = call i32 @MMIO_DH(i32 %511, i32 %512, i32* null, i32* null)
  %514 = load i32, i32* @PIPE_B, align 4
  %515 = call i32 @_REG_701C4(i32 %514, i32 4)
  %516 = call i32 @_MMIO(i32 %515)
  %517 = load i32, i32* @D_SKL_PLUS, align 4
  %518 = call i32 @MMIO_DH(i32 %516, i32 %517, i32* null, i32* null)
  %519 = load i32, i32* @PIPE_C, align 4
  %520 = call i32 @_REG_701C4(i32 %519, i32 1)
  %521 = call i32 @_MMIO(i32 %520)
  %522 = load i32, i32* @D_SKL_PLUS, align 4
  %523 = call i32 @MMIO_DH(i32 %521, i32 %522, i32* null, i32* null)
  %524 = load i32, i32* @PIPE_C, align 4
  %525 = call i32 @_REG_701C4(i32 %524, i32 2)
  %526 = call i32 @_MMIO(i32 %525)
  %527 = load i32, i32* @D_SKL_PLUS, align 4
  %528 = call i32 @MMIO_DH(i32 %526, i32 %527, i32* null, i32* null)
  %529 = load i32, i32* @PIPE_C, align 4
  %530 = call i32 @_REG_701C4(i32 %529, i32 3)
  %531 = call i32 @_MMIO(i32 %530)
  %532 = load i32, i32* @D_SKL_PLUS, align 4
  %533 = call i32 @MMIO_DH(i32 %531, i32 %532, i32* null, i32* null)
  %534 = load i32, i32* @PIPE_C, align 4
  %535 = call i32 @_REG_701C4(i32 %534, i32 4)
  %536 = call i32 @_MMIO(i32 %535)
  %537 = load i32, i32* @D_SKL_PLUS, align 4
  %538 = call i32 @MMIO_DH(i32 %536, i32 %537, i32* null, i32* null)
  %539 = load i32, i32* @_PLANE_CTL_3_A, align 4
  %540 = call i32 @_MMIO(i32 %539)
  %541 = load i32, i32* @D_SKL_PLUS, align 4
  %542 = call i32 @MMIO_D(i32 %540, i32 %541)
  %543 = load i32, i32* @_PLANE_CTL_3_B, align 4
  %544 = call i32 @_MMIO(i32 %543)
  %545 = load i32, i32* @D_SKL_PLUS, align 4
  %546 = call i32 @MMIO_D(i32 %544, i32 %545)
  %547 = call i32 @_MMIO(i32 467840)
  %548 = load i32, i32* @D_SKL_PLUS, align 4
  %549 = call i32 @MMIO_D(i32 %547, i32 %548)
  %550 = call i32 @_MMIO(i32 467868)
  %551 = load i32, i32* @D_SKL_PLUS, align 4
  %552 = call i32 @MMIO_D(i32 %550, i32 %551)
  %553 = load i32, i32* @_PLANE_SURF_3_A, align 4
  %554 = call i32 @_MMIO(i32 %553)
  %555 = load i32, i32* @D_SKL_PLUS, align 4
  %556 = call i32 @MMIO_D(i32 %554, i32 %555)
  %557 = load i32, i32* @CSR_SSP_BASE, align 4
  %558 = load i32, i32* @D_SKL_PLUS, align 4
  %559 = call i32 @MMIO_D(i32 %557, i32 %558)
  %560 = load i32, i32* @CSR_HTP_SKL, align 4
  %561 = load i32, i32* @D_SKL_PLUS, align 4
  %562 = call i32 @MMIO_D(i32 %560, i32 %561)
  %563 = load i32, i32* @CSR_LAST_WRITE, align 4
  %564 = load i32, i32* @D_SKL_PLUS, align 4
  %565 = call i32 @MMIO_D(i32 %563, i32 %564)
  %566 = load i32, i32* @BDW_SCRATCH1, align 4
  %567 = load i32, i32* @D_SKL_PLUS, align 4
  %568 = load i32, i32* @F_CMD_ACCESS, align 4
  %569 = call i32 @MMIO_DFH(i32 %566, i32 %567, i32 %568, i32* null, i32* null)
  %570 = load i32, i32* @SKL_DFSM, align 4
  %571 = load i32, i32* @D_SKL_PLUS, align 4
  %572 = call i32 @MMIO_D(i32 %570, i32 %571)
  %573 = load i32, i32* @DISPIO_CR_TX_BMU_CR0, align 4
  %574 = load i32, i32* @D_SKL_PLUS, align 4
  %575 = call i32 @MMIO_D(i32 %573, i32 %574)
  %576 = call i32 @GEN9_GFX_MOCS(i32 0)
  %577 = load i32, i32* @F_CMD_ACCESS, align 4
  %578 = load i32, i32* @D_SKL_PLUS, align 4
  %579 = call i32 @MMIO_F(i32 %576, i32 2040, i32 %577, i32 0, i32 0, i32 %578, i32* null, i32* null)
  %580 = load i32, i32* @GEN7_L3CNTLREG2, align 4
  %581 = load i32, i32* @F_CMD_ACCESS, align 4
  %582 = load i32, i32* @D_SKL_PLUS, align 4
  %583 = call i32 @MMIO_F(i32 %580, i32 128, i32 %581, i32 0, i32 0, i32 %582, i32* null, i32* null)
  %584 = load i32, i32* @RPM_CONFIG0, align 4
  %585 = load i32, i32* @D_SKL_PLUS, align 4
  %586 = call i32 @MMIO_D(i32 %584, i32 %585)
  %587 = call i32 @_MMIO(i32 3336)
  %588 = load i32, i32* @D_SKL_PLUS, align 4
  %589 = call i32 @MMIO_D(i32 %587, i32 %588)
  %590 = load i32, i32* @RC6_LOCATION, align 4
  %591 = load i32, i32* @D_SKL_PLUS, align 4
  %592 = call i32 @MMIO_D(i32 %590, i32 %591)
  %593 = load i32, i32* @GEN7_FF_SLICE_CS_CHICKEN1, align 4
  %594 = load i32, i32* @D_SKL_PLUS, align 4
  %595 = load i32, i32* @F_MODE_MASK, align 4
  %596 = load i32, i32* @F_CMD_ACCESS, align 4
  %597 = or i32 %595, %596
  %598 = call i32 @MMIO_DFH(i32 %593, i32 %594, i32 %597, i32* null, i32* null)
  %599 = load i32, i32* @GEN9_CS_DEBUG_MODE1, align 4
  %600 = load i32, i32* @D_SKL_PLUS, align 4
  %601 = load i32, i32* @F_MODE_MASK, align 4
  %602 = load i32, i32* @F_CMD_ACCESS, align 4
  %603 = or i32 %601, %602
  %604 = call i32 @MMIO_DFH(i32 %599, i32 %600, i32 %603, i32* null, i32* null)
  %605 = call i32 @TRVATTL3PTRDW(i32 0)
  %606 = load i32, i32* @D_SKL_PLUS, align 4
  %607 = load i32, i32* @F_CMD_ACCESS, align 4
  %608 = call i32 @MMIO_DFH(i32 %605, i32 %606, i32 %607, i32* null, i32* null)
  %609 = call i32 @TRVATTL3PTRDW(i32 1)
  %610 = load i32, i32* @D_SKL_PLUS, align 4
  %611 = load i32, i32* @F_CMD_ACCESS, align 4
  %612 = call i32 @MMIO_DFH(i32 %609, i32 %610, i32 %611, i32* null, i32* null)
  %613 = call i32 @TRVATTL3PTRDW(i32 2)
  %614 = load i32, i32* @D_SKL_PLUS, align 4
  %615 = load i32, i32* @F_CMD_ACCESS, align 4
  %616 = call i32 @MMIO_DFH(i32 %613, i32 %614, i32 %615, i32* null, i32* null)
  %617 = call i32 @TRVATTL3PTRDW(i32 3)
  %618 = load i32, i32* @D_SKL_PLUS, align 4
  %619 = load i32, i32* @F_CMD_ACCESS, align 4
  %620 = call i32 @MMIO_DFH(i32 %617, i32 %618, i32 %619, i32* null, i32* null)
  %621 = load i32, i32* @TRVADR, align 4
  %622 = load i32, i32* @D_SKL_PLUS, align 4
  %623 = load i32, i32* @F_CMD_ACCESS, align 4
  %624 = call i32 @MMIO_DFH(i32 %621, i32 %622, i32 %623, i32* null, i32* null)
  %625 = load i32, i32* @TRTTE, align 4
  %626 = load i32, i32* @D_SKL_PLUS, align 4
  %627 = load i32, i32* @F_CMD_ACCESS, align 4
  %628 = load i32*, i32** @gen9_trtte_write, align 8
  %629 = call i32 @MMIO_DFH(i32 %625, i32 %626, i32 %627, i32* null, i32* %628)
  %630 = call i32 @_MMIO(i32 19964)
  %631 = load i32, i32* @D_SKL_PLUS, align 4
  %632 = load i32*, i32** @gen9_trtt_chicken_write, align 8
  %633 = call i32 @MMIO_DH(i32 %630, i32 %631, i32* null, i32* %632)
  %634 = call i32 @_MMIO(i32 287792)
  %635 = load i32, i32* @D_SKL_PLUS, align 4
  %636 = call i32 @MMIO_D(i32 %634, i32 %635)
  %637 = call i32 @_MMIO(i32 288032)
  %638 = load i32, i32* @D_SKL_PLUS, align 4
  %639 = call i32 @MMIO_D(i32 %637, i32 %638)
  %640 = call i32 @_MMIO(i32 802876)
  %641 = load i32, i32* @D_SKL_PLUS, align 4
  %642 = call i32 @MMIO_D(i32 %640, i32 %641)
  %643 = load i32, i32* @GEN8_GARBCNTL, align 4
  %644 = load i32, i32* @D_SKL_PLUS, align 4
  %645 = load i32, i32* @F_CMD_ACCESS, align 4
  %646 = call i32 @MMIO_DFH(i32 %643, i32 %644, i32 %645, i32* null, i32* null)
  %647 = load i32, i32* @DMA_CTRL, align 4
  %648 = load i32, i32* @D_SKL_PLUS, align 4
  %649 = load i32*, i32** @dma_ctrl_write, align 8
  %650 = call i32 @MMIO_DH(i32 %647, i32 %648, i32* null, i32* %649)
  %651 = call i32 @_MMIO(i32 416000)
  %652 = load i32, i32* @D_SKL_PLUS, align 4
  %653 = call i32 @MMIO_D(i32 %651, i32 %652)
  %654 = load i32, i32* @GEN6_STOLEN_RESERVED, align 4
  %655 = load i32, i32* @D_SKL_PLUS, align 4
  %656 = call i32 @MMIO_D(i32 %654, i32 %655)
  %657 = call i32 @_MMIO(i32 16488)
  %658 = load i32, i32* @D_SKL_PLUS, align 4
  %659 = call i32 @MMIO_D(i32 %657, i32 %658)
  %660 = call i32 @_MMIO(i32 421972)
  %661 = load i32, i32* @D_SKL_PLUS, align 4
  %662 = call i32 @MMIO_D(i32 %660, i32 %661)
  %663 = call i32 @_MMIO(i32 451936)
  %664 = load i32, i32* @D_SKL_PLUS, align 4
  %665 = call i32 @MMIO_D(i32 %663, i32 %664)
  %666 = call i32 @_MMIO(i32 451924)
  %667 = load i32, i32* @D_SKL_PLUS, align 4
  %668 = call i32 @MMIO_D(i32 %666, i32 %667)
  %669 = call i32 @_MMIO(i32 11040)
  %670 = load i32, i32* @D_SKL_PLUS, align 4
  %671 = call i32 @MMIO_D(i32 %669, i32 %670)
  %672 = call i32 @_MMIO(i32 417536)
  %673 = load i32, i32* @D_SKL_PLUS, align 4
  %674 = call i32 @MMIO_D(i32 %672, i32 %673)
  %675 = call i32 @_MMIO(i32 417544)
  %676 = load i32, i32* @D_SKL_PLUS, align 4
  %677 = call i32 @MMIO_D(i32 %675, i32 %676)
  %678 = call i32 @_MMIO(i32 205040)
  %679 = load i32, i32* @D_SKL_PLUS, align 4
  %680 = call i32 @MMIO_D(i32 %678, i32 %679)
  %681 = call i32 @_MMIO(i32 458804)
  %682 = load i32, i32* @D_SKL_PLUS, align 4
  %683 = call i32 @MMIO_D(i32 %681, i32 %682)
  %684 = call i32 @_MMIO(i32 462900)
  %685 = load i32, i32* @D_SKL_PLUS, align 4
  %686 = call i32 @MMIO_D(i32 %684, i32 %685)
  %687 = call i32 @_MMIO(i32 466996)
  %688 = load i32, i32* @D_SKL_PLUS, align 4
  %689 = call i32 @MMIO_D(i32 %687, i32 %688)
  %690 = load i32, i32* @PIPE_A, align 4
  %691 = call i32 @_PLANE_KEYVAL_1(i32 %690)
  %692 = call i32 @_MMIO(i32 %691)
  %693 = load i32, i32* @D_SKL_PLUS, align 4
  %694 = call i32 @MMIO_D(i32 %692, i32 %693)
  %695 = load i32, i32* @PIPE_B, align 4
  %696 = call i32 @_PLANE_KEYVAL_1(i32 %695)
  %697 = call i32 @_MMIO(i32 %696)
  %698 = load i32, i32* @D_SKL_PLUS, align 4
  %699 = call i32 @MMIO_D(i32 %697, i32 %698)
  %700 = load i32, i32* @PIPE_C, align 4
  %701 = call i32 @_PLANE_KEYVAL_1(i32 %700)
  %702 = call i32 @_MMIO(i32 %701)
  %703 = load i32, i32* @D_SKL_PLUS, align 4
  %704 = call i32 @MMIO_D(i32 %702, i32 %703)
  %705 = load i32, i32* @PIPE_A, align 4
  %706 = call i32 @_PLANE_KEYMAX_1(i32 %705)
  %707 = call i32 @_MMIO(i32 %706)
  %708 = load i32, i32* @D_SKL_PLUS, align 4
  %709 = call i32 @MMIO_D(i32 %707, i32 %708)
  %710 = load i32, i32* @PIPE_B, align 4
  %711 = call i32 @_PLANE_KEYMAX_1(i32 %710)
  %712 = call i32 @_MMIO(i32 %711)
  %713 = load i32, i32* @D_SKL_PLUS, align 4
  %714 = call i32 @MMIO_D(i32 %712, i32 %713)
  %715 = load i32, i32* @PIPE_C, align 4
  %716 = call i32 @_PLANE_KEYMAX_1(i32 %715)
  %717 = call i32 @_MMIO(i32 %716)
  %718 = load i32, i32* @D_SKL_PLUS, align 4
  %719 = call i32 @MMIO_D(i32 %717, i32 %718)
  %720 = load i32, i32* @PIPE_A, align 4
  %721 = call i32 @_PLANE_KEYMSK_1(i32 %720)
  %722 = call i32 @_MMIO(i32 %721)
  %723 = load i32, i32* @D_SKL_PLUS, align 4
  %724 = call i32 @MMIO_D(i32 %722, i32 %723)
  %725 = load i32, i32* @PIPE_B, align 4
  %726 = call i32 @_PLANE_KEYMSK_1(i32 %725)
  %727 = call i32 @_MMIO(i32 %726)
  %728 = load i32, i32* @D_SKL_PLUS, align 4
  %729 = call i32 @MMIO_D(i32 %727, i32 %728)
  %730 = load i32, i32* @PIPE_C, align 4
  %731 = call i32 @_PLANE_KEYMSK_1(i32 %730)
  %732 = call i32 @_MMIO(i32 %731)
  %733 = load i32, i32* @D_SKL_PLUS, align 4
  %734 = call i32 @MMIO_D(i32 %732, i32 %733)
  %735 = call i32 @_MMIO(i32 279808)
  %736 = load i32, i32* @D_SKL_PLUS, align 4
  %737 = call i32 @MMIO_D(i32 %735, i32 %736)
  %738 = load i32, i32* @CSFE_CHICKEN1_REG, align 4
  %739 = load i32, i32* @D_SKL_PLUS, align 4
  %740 = load i32, i32* @F_MODE_MASK, align 4
  %741 = load i32, i32* @F_CMD_ACCESS, align 4
  %742 = or i32 %740, %741
  %743 = load i32, i32* @csfe_chicken1_mmio_write, align 4
  %744 = call i32 @MMIO_RING_DFH(i32 %738, i32 %739, i32 %742, i32* null, i32 %743)
  %745 = load i32, i32* @GEN8_HDC_CHICKEN1, align 4
  %746 = load i32, i32* @D_SKL_PLUS, align 4
  %747 = load i32, i32* @F_MODE_MASK, align 4
  %748 = load i32, i32* @F_CMD_ACCESS, align 4
  %749 = or i32 %747, %748
  %750 = call i32 @MMIO_DFH(i32 %745, i32 %746, i32 %749, i32* null, i32* null)
  %751 = load i32, i32* @GEN9_WM_CHICKEN3, align 4
  %752 = load i32, i32* @D_SKL_PLUS, align 4
  %753 = load i32, i32* @F_MODE_MASK, align 4
  %754 = load i32, i32* @F_CMD_ACCESS, align 4
  %755 = or i32 %753, %754
  %756 = call i32 @MMIO_DFH(i32 %751, i32 %752, i32 %755, i32* null, i32* null)
  %757 = load i32, i32* @GAMT_CHKN_BIT_REG, align 4
  %758 = load i32, i32* @D_KBL, align 4
  %759 = call i32 @MMIO_D(i32 %757, i32 %758)
  %760 = load i32, i32* @GEN9_CTX_PREEMPT_REG, align 4
  %761 = load i32, i32* @D_KBL, align 4
  %762 = load i32, i32* @D_SKL, align 4
  %763 = or i32 %761, %762
  %764 = call i32 @MMIO_D(i32 %760, i32 %763)
  ret i32 0
}

declare dso_local i32 @MMIO_DH(i32, i32, i32*, i32*) #1

declare dso_local i32 @MMIO_F(i32, i32, i32, i32, i32, i32, i32*, i32*) #1

declare dso_local i32 @_MMIO(i32) #1

declare dso_local i32 @MMIO_D(i32, i32) #1

declare dso_local i32 @MMIO_DFH(i32, i32, i32, i32*, i32*) #1

declare dso_local i32 @SKL_PS_WIN_POS(i32, i32) #1

declare dso_local i32 @SKL_PS_WIN_SZ(i32, i32) #1

declare dso_local i32 @SKL_PS_CTRL(i32, i32) #1

declare dso_local i32 @PLANE_BUF_CFG(i32, i32) #1

declare dso_local i32 @CUR_BUF_CFG(i32) #1

declare dso_local i32 @PLANE_WM(i32, i32, i32) #1

declare dso_local i32 @CUR_WM(i32, i32) #1

declare dso_local i32 @PLANE_WM_TRANS(i32, i32) #1

declare dso_local i32 @CUR_WM_TRANS(i32) #1

declare dso_local i32 @PLANE_NV12_BUF_CFG(i32, i32) #1

declare dso_local i32 @_REG_701C0(i32, i32) #1

declare dso_local i32 @_REG_701C4(i32, i32) #1

declare dso_local i32 @GEN9_GFX_MOCS(i32) #1

declare dso_local i32 @TRVATTL3PTRDW(i32) #1

declare dso_local i32 @_PLANE_KEYVAL_1(i32) #1

declare dso_local i32 @_PLANE_KEYMAX_1(i32) #1

declare dso_local i32 @_PLANE_KEYMSK_1(i32) #1

declare dso_local i32 @MMIO_RING_DFH(i32, i32, i32, i32*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
