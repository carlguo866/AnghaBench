; ModuleID = '/home/carl/AnghaBench/linux/drivers/net/can/m_can/extr_m_can.c_m_can_of_parse_mram.c'
source_filename = "/home/carl/AnghaBench/linux/drivers/net/can/m_can/extr_m_can.c_m_can_of_parse_mram.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.m_can_classdev = type { %struct.TYPE_2__*, i32 }
%struct.TYPE_2__ = type { i32, i32 }

@MRAM_SIDF = common dso_local global i64 0, align 8
@SIDF_ELEMENT_SIZE = common dso_local global i32 0, align 4
@MRAM_XIDF = common dso_local global i64 0, align 8
@XIDF_ELEMENT_SIZE = common dso_local global i32 0, align 4
@MRAM_RXF0 = common dso_local global i64 0, align 8
@RXFC_FS_MASK = common dso_local global i32 0, align 4
@RXFC_FS_SHIFT = common dso_local global i32 0, align 4
@RXF0_ELEMENT_SIZE = common dso_local global i32 0, align 4
@MRAM_RXF1 = common dso_local global i64 0, align 8
@RXF1_ELEMENT_SIZE = common dso_local global i32 0, align 4
@MRAM_RXB = common dso_local global i64 0, align 8
@RXB_ELEMENT_SIZE = common dso_local global i32 0, align 4
@MRAM_TXE = common dso_local global i64 0, align 8
@TXE_ELEMENT_SIZE = common dso_local global i32 0, align 4
@MRAM_TXB = common dso_local global i64 0, align 8
@TXBC_NDTB_MASK = common dso_local global i32 0, align 4
@TXBC_NDTB_SHIFT = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [89 x i8] c"sidf 0x%x %d xidf 0x%x %d rxf0 0x%x %d rxf1 0x%x %d rxb 0x%x %d txe 0x%x %d txb 0x%x %d\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.m_can_classdev*, i32*)* @m_can_of_parse_mram to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @m_can_of_parse_mram(%struct.m_can_classdev* %0, i32* %1) #0 {
  %3 = alloca %struct.m_can_classdev*, align 8
  %4 = alloca i32*, align 8
  store %struct.m_can_classdev* %0, %struct.m_can_classdev** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds i32, i32* %5, i64 0
  %7 = load i32, i32* %6, align 4
  %8 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %9 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %8, i32 0, i32 0
  %10 = load %struct.TYPE_2__*, %struct.TYPE_2__** %9, align 8
  %11 = load i64, i64* @MRAM_SIDF, align 8
  %12 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %10, i64 %11
  %13 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %12, i32 0, i32 0
  store i32 %7, i32* %13, align 4
  %14 = load i32*, i32** %4, align 8
  %15 = getelementptr inbounds i32, i32* %14, i64 1
  %16 = load i32, i32* %15, align 4
  %17 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %18 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %17, i32 0, i32 0
  %19 = load %struct.TYPE_2__*, %struct.TYPE_2__** %18, align 8
  %20 = load i64, i64* @MRAM_SIDF, align 8
  %21 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %19, i64 %20
  %22 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %21, i32 0, i32 1
  store i32 %16, i32* %22, align 4
  %23 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %24 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %23, i32 0, i32 0
  %25 = load %struct.TYPE_2__*, %struct.TYPE_2__** %24, align 8
  %26 = load i64, i64* @MRAM_SIDF, align 8
  %27 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %25, i64 %26
  %28 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %27, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %31 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %30, i32 0, i32 0
  %32 = load %struct.TYPE_2__*, %struct.TYPE_2__** %31, align 8
  %33 = load i64, i64* @MRAM_SIDF, align 8
  %34 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %32, i64 %33
  %35 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %34, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = load i32, i32* @SIDF_ELEMENT_SIZE, align 4
  %38 = mul nsw i32 %36, %37
  %39 = add nsw i32 %29, %38
  %40 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %41 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %40, i32 0, i32 0
  %42 = load %struct.TYPE_2__*, %struct.TYPE_2__** %41, align 8
  %43 = load i64, i64* @MRAM_XIDF, align 8
  %44 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %42, i64 %43
  %45 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %44, i32 0, i32 0
  store i32 %39, i32* %45, align 4
  %46 = load i32*, i32** %4, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 2
  %48 = load i32, i32* %47, align 4
  %49 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %50 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %49, i32 0, i32 0
  %51 = load %struct.TYPE_2__*, %struct.TYPE_2__** %50, align 8
  %52 = load i64, i64* @MRAM_XIDF, align 8
  %53 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %51, i64 %52
  %54 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %53, i32 0, i32 1
  store i32 %48, i32* %54, align 4
  %55 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %56 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %55, i32 0, i32 0
  %57 = load %struct.TYPE_2__*, %struct.TYPE_2__** %56, align 8
  %58 = load i64, i64* @MRAM_XIDF, align 8
  %59 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %57, i64 %58
  %60 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %59, i32 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %63 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %62, i32 0, i32 0
  %64 = load %struct.TYPE_2__*, %struct.TYPE_2__** %63, align 8
  %65 = load i64, i64* @MRAM_XIDF, align 8
  %66 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %64, i64 %65
  %67 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %66, i32 0, i32 1
  %68 = load i32, i32* %67, align 4
  %69 = load i32, i32* @XIDF_ELEMENT_SIZE, align 4
  %70 = mul nsw i32 %68, %69
  %71 = add nsw i32 %61, %70
  %72 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %73 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %72, i32 0, i32 0
  %74 = load %struct.TYPE_2__*, %struct.TYPE_2__** %73, align 8
  %75 = load i64, i64* @MRAM_RXF0, align 8
  %76 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %74, i64 %75
  %77 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %76, i32 0, i32 0
  store i32 %71, i32* %77, align 4
  %78 = load i32*, i32** %4, align 8
  %79 = getelementptr inbounds i32, i32* %78, i64 3
  %80 = load i32, i32* %79, align 4
  %81 = load i32, i32* @RXFC_FS_MASK, align 4
  %82 = load i32, i32* @RXFC_FS_SHIFT, align 4
  %83 = ashr i32 %81, %82
  %84 = and i32 %80, %83
  %85 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %86 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %85, i32 0, i32 0
  %87 = load %struct.TYPE_2__*, %struct.TYPE_2__** %86, align 8
  %88 = load i64, i64* @MRAM_RXF0, align 8
  %89 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %87, i64 %88
  %90 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %89, i32 0, i32 1
  store i32 %84, i32* %90, align 4
  %91 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %92 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %91, i32 0, i32 0
  %93 = load %struct.TYPE_2__*, %struct.TYPE_2__** %92, align 8
  %94 = load i64, i64* @MRAM_RXF0, align 8
  %95 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %93, i64 %94
  %96 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %95, i32 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %99 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %98, i32 0, i32 0
  %100 = load %struct.TYPE_2__*, %struct.TYPE_2__** %99, align 8
  %101 = load i64, i64* @MRAM_RXF0, align 8
  %102 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %100, i64 %101
  %103 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %102, i32 0, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = load i32, i32* @RXF0_ELEMENT_SIZE, align 4
  %106 = mul nsw i32 %104, %105
  %107 = add nsw i32 %97, %106
  %108 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %109 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %108, i32 0, i32 0
  %110 = load %struct.TYPE_2__*, %struct.TYPE_2__** %109, align 8
  %111 = load i64, i64* @MRAM_RXF1, align 8
  %112 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %110, i64 %111
  %113 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %112, i32 0, i32 0
  store i32 %107, i32* %113, align 4
  %114 = load i32*, i32** %4, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 4
  %116 = load i32, i32* %115, align 4
  %117 = load i32, i32* @RXFC_FS_MASK, align 4
  %118 = load i32, i32* @RXFC_FS_SHIFT, align 4
  %119 = ashr i32 %117, %118
  %120 = and i32 %116, %119
  %121 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %122 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %121, i32 0, i32 0
  %123 = load %struct.TYPE_2__*, %struct.TYPE_2__** %122, align 8
  %124 = load i64, i64* @MRAM_RXF1, align 8
  %125 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %123, i64 %124
  %126 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %125, i32 0, i32 1
  store i32 %120, i32* %126, align 4
  %127 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %128 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %127, i32 0, i32 0
  %129 = load %struct.TYPE_2__*, %struct.TYPE_2__** %128, align 8
  %130 = load i64, i64* @MRAM_RXF1, align 8
  %131 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %129, i64 %130
  %132 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %131, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %135 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %134, i32 0, i32 0
  %136 = load %struct.TYPE_2__*, %struct.TYPE_2__** %135, align 8
  %137 = load i64, i64* @MRAM_RXF1, align 8
  %138 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %136, i64 %137
  %139 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %138, i32 0, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = load i32, i32* @RXF1_ELEMENT_SIZE, align 4
  %142 = mul nsw i32 %140, %141
  %143 = add nsw i32 %133, %142
  %144 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %145 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %144, i32 0, i32 0
  %146 = load %struct.TYPE_2__*, %struct.TYPE_2__** %145, align 8
  %147 = load i64, i64* @MRAM_RXB, align 8
  %148 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %146, i64 %147
  %149 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %148, i32 0, i32 0
  store i32 %143, i32* %149, align 4
  %150 = load i32*, i32** %4, align 8
  %151 = getelementptr inbounds i32, i32* %150, i64 5
  %152 = load i32, i32* %151, align 4
  %153 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %154 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %153, i32 0, i32 0
  %155 = load %struct.TYPE_2__*, %struct.TYPE_2__** %154, align 8
  %156 = load i64, i64* @MRAM_RXB, align 8
  %157 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %155, i64 %156
  %158 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %157, i32 0, i32 1
  store i32 %152, i32* %158, align 4
  %159 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %160 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %159, i32 0, i32 0
  %161 = load %struct.TYPE_2__*, %struct.TYPE_2__** %160, align 8
  %162 = load i64, i64* @MRAM_RXB, align 8
  %163 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %161, i64 %162
  %164 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %163, i32 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %167 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %166, i32 0, i32 0
  %168 = load %struct.TYPE_2__*, %struct.TYPE_2__** %167, align 8
  %169 = load i64, i64* @MRAM_RXB, align 8
  %170 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %168, i64 %169
  %171 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = load i32, i32* @RXB_ELEMENT_SIZE, align 4
  %174 = mul nsw i32 %172, %173
  %175 = add nsw i32 %165, %174
  %176 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %177 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %176, i32 0, i32 0
  %178 = load %struct.TYPE_2__*, %struct.TYPE_2__** %177, align 8
  %179 = load i64, i64* @MRAM_TXE, align 8
  %180 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %178, i64 %179
  %181 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %180, i32 0, i32 0
  store i32 %175, i32* %181, align 4
  %182 = load i32*, i32** %4, align 8
  %183 = getelementptr inbounds i32, i32* %182, i64 6
  %184 = load i32, i32* %183, align 4
  %185 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %186 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %185, i32 0, i32 0
  %187 = load %struct.TYPE_2__*, %struct.TYPE_2__** %186, align 8
  %188 = load i64, i64* @MRAM_TXE, align 8
  %189 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %187, i64 %188
  %190 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %189, i32 0, i32 1
  store i32 %184, i32* %190, align 4
  %191 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %192 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %191, i32 0, i32 0
  %193 = load %struct.TYPE_2__*, %struct.TYPE_2__** %192, align 8
  %194 = load i64, i64* @MRAM_TXE, align 8
  %195 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %193, i64 %194
  %196 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %195, i32 0, i32 0
  %197 = load i32, i32* %196, align 4
  %198 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %199 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %198, i32 0, i32 0
  %200 = load %struct.TYPE_2__*, %struct.TYPE_2__** %199, align 8
  %201 = load i64, i64* @MRAM_TXE, align 8
  %202 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %200, i64 %201
  %203 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %202, i32 0, i32 1
  %204 = load i32, i32* %203, align 4
  %205 = load i32, i32* @TXE_ELEMENT_SIZE, align 4
  %206 = mul nsw i32 %204, %205
  %207 = add nsw i32 %197, %206
  %208 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %209 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %208, i32 0, i32 0
  %210 = load %struct.TYPE_2__*, %struct.TYPE_2__** %209, align 8
  %211 = load i64, i64* @MRAM_TXB, align 8
  %212 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %210, i64 %211
  %213 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %212, i32 0, i32 0
  store i32 %207, i32* %213, align 4
  %214 = load i32*, i32** %4, align 8
  %215 = getelementptr inbounds i32, i32* %214, i64 7
  %216 = load i32, i32* %215, align 4
  %217 = load i32, i32* @TXBC_NDTB_MASK, align 4
  %218 = load i32, i32* @TXBC_NDTB_SHIFT, align 4
  %219 = ashr i32 %217, %218
  %220 = and i32 %216, %219
  %221 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %222 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %221, i32 0, i32 0
  %223 = load %struct.TYPE_2__*, %struct.TYPE_2__** %222, align 8
  %224 = load i64, i64* @MRAM_TXB, align 8
  %225 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %223, i64 %224
  %226 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %225, i32 0, i32 1
  store i32 %220, i32* %226, align 4
  %227 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %228 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %227, i32 0, i32 1
  %229 = load i32, i32* %228, align 8
  %230 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %231 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %230, i32 0, i32 0
  %232 = load %struct.TYPE_2__*, %struct.TYPE_2__** %231, align 8
  %233 = load i64, i64* @MRAM_SIDF, align 8
  %234 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %232, i64 %233
  %235 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %234, i32 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %238 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %237, i32 0, i32 0
  %239 = load %struct.TYPE_2__*, %struct.TYPE_2__** %238, align 8
  %240 = load i64, i64* @MRAM_SIDF, align 8
  %241 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %239, i64 %240
  %242 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %241, i32 0, i32 1
  %243 = load i32, i32* %242, align 4
  %244 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %245 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %244, i32 0, i32 0
  %246 = load %struct.TYPE_2__*, %struct.TYPE_2__** %245, align 8
  %247 = load i64, i64* @MRAM_XIDF, align 8
  %248 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %246, i64 %247
  %249 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %248, i32 0, i32 0
  %250 = load i32, i32* %249, align 4
  %251 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %252 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %251, i32 0, i32 0
  %253 = load %struct.TYPE_2__*, %struct.TYPE_2__** %252, align 8
  %254 = load i64, i64* @MRAM_XIDF, align 8
  %255 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %253, i64 %254
  %256 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %255, i32 0, i32 1
  %257 = load i32, i32* %256, align 4
  %258 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %259 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %258, i32 0, i32 0
  %260 = load %struct.TYPE_2__*, %struct.TYPE_2__** %259, align 8
  %261 = load i64, i64* @MRAM_RXF0, align 8
  %262 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %260, i64 %261
  %263 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %262, i32 0, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %266 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %265, i32 0, i32 0
  %267 = load %struct.TYPE_2__*, %struct.TYPE_2__** %266, align 8
  %268 = load i64, i64* @MRAM_RXF0, align 8
  %269 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %267, i64 %268
  %270 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %269, i32 0, i32 1
  %271 = load i32, i32* %270, align 4
  %272 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %273 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %272, i32 0, i32 0
  %274 = load %struct.TYPE_2__*, %struct.TYPE_2__** %273, align 8
  %275 = load i64, i64* @MRAM_RXF1, align 8
  %276 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %274, i64 %275
  %277 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %276, i32 0, i32 0
  %278 = load i32, i32* %277, align 4
  %279 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %280 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %279, i32 0, i32 0
  %281 = load %struct.TYPE_2__*, %struct.TYPE_2__** %280, align 8
  %282 = load i64, i64* @MRAM_RXF1, align 8
  %283 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %281, i64 %282
  %284 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %283, i32 0, i32 1
  %285 = load i32, i32* %284, align 4
  %286 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %287 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %286, i32 0, i32 0
  %288 = load %struct.TYPE_2__*, %struct.TYPE_2__** %287, align 8
  %289 = load i64, i64* @MRAM_RXB, align 8
  %290 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %288, i64 %289
  %291 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %290, i32 0, i32 0
  %292 = load i32, i32* %291, align 4
  %293 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %294 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %293, i32 0, i32 0
  %295 = load %struct.TYPE_2__*, %struct.TYPE_2__** %294, align 8
  %296 = load i64, i64* @MRAM_RXB, align 8
  %297 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %295, i64 %296
  %298 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %297, i32 0, i32 1
  %299 = load i32, i32* %298, align 4
  %300 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %301 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %300, i32 0, i32 0
  %302 = load %struct.TYPE_2__*, %struct.TYPE_2__** %301, align 8
  %303 = load i64, i64* @MRAM_TXE, align 8
  %304 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %302, i64 %303
  %305 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %304, i32 0, i32 0
  %306 = load i32, i32* %305, align 4
  %307 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %308 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %307, i32 0, i32 0
  %309 = load %struct.TYPE_2__*, %struct.TYPE_2__** %308, align 8
  %310 = load i64, i64* @MRAM_TXE, align 8
  %311 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %309, i64 %310
  %312 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %311, i32 0, i32 1
  %313 = load i32, i32* %312, align 4
  %314 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %315 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %314, i32 0, i32 0
  %316 = load %struct.TYPE_2__*, %struct.TYPE_2__** %315, align 8
  %317 = load i64, i64* @MRAM_TXB, align 8
  %318 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %316, i64 %317
  %319 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %318, i32 0, i32 0
  %320 = load i32, i32* %319, align 4
  %321 = load %struct.m_can_classdev*, %struct.m_can_classdev** %3, align 8
  %322 = getelementptr inbounds %struct.m_can_classdev, %struct.m_can_classdev* %321, i32 0, i32 0
  %323 = load %struct.TYPE_2__*, %struct.TYPE_2__** %322, align 8
  %324 = load i64, i64* @MRAM_TXB, align 8
  %325 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %323, i64 %324
  %326 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %325, i32 0, i32 1
  %327 = load i32, i32* %326, align 4
  %328 = call i32 @dev_dbg(i32 %229, i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str, i64 0, i64 0), i32 %236, i32 %243, i32 %250, i32 %257, i32 %264, i32 %271, i32 %278, i32 %285, i32 %292, i32 %299, i32 %306, i32 %313, i32 %320, i32 %327)
  ret void
}

declare dso_local i32 @dev_dbg(i32, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
