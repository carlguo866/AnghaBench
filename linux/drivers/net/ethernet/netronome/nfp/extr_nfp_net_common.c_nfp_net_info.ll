; ModuleID = '/home/carl/AnghaBench/linux/drivers/net/ethernet/netronome/nfp/extr_nfp_net_common.c_nfp_net_info.c'
source_filename = "/home/carl/AnghaBench/linux/drivers/net/ethernet/netronome/nfp/extr_nfp_net_common.c_nfp_net_info.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.nfp_net = type { i32, i32, i32, %struct.TYPE_4__, i32, %struct.TYPE_3__, i32 }
%struct.TYPE_4__ = type { i32, i32, i32, i32 }
%struct.TYPE_3__ = type { i32, i32, i64 }

@.str = private unnamed_addr constant [52 x i8] c"Netronome NFP-6xxx %sNetdev: TxQs=%d/%d RxQs=%d/%d\0A\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"VF \00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [45 x i8] c"VER: %d.%d.%d.%d, Maximum supported MTU: %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [53 x i8] c"CAP: %#x %s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s\0A\00", align 1
@NFP_NET_CFG_CTRL_PROMISC = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [9 x i8] c"PROMISC \00", align 1
@NFP_NET_CFG_CTRL_L2BC = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [10 x i8] c"L2BCFILT \00", align 1
@NFP_NET_CFG_CTRL_L2MC = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [10 x i8] c"L2MCFILT \00", align 1
@NFP_NET_CFG_CTRL_RXCSUM = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [8 x i8] c"RXCSUM \00", align 1
@NFP_NET_CFG_CTRL_TXCSUM = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [8 x i8] c"TXCSUM \00", align 1
@NFP_NET_CFG_CTRL_RXVLAN = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [8 x i8] c"RXVLAN \00", align 1
@NFP_NET_CFG_CTRL_TXVLAN = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [8 x i8] c"TXVLAN \00", align 1
@NFP_NET_CFG_CTRL_SCATTER = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [9 x i8] c"SCATTER \00", align 1
@NFP_NET_CFG_CTRL_GATHER = common dso_local global i32 0, align 4
@.str.13 = private unnamed_addr constant [8 x i8] c"GATHER \00", align 1
@NFP_NET_CFG_CTRL_LSO = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [6 x i8] c"TSO1 \00", align 1
@NFP_NET_CFG_CTRL_LSO2 = common dso_local global i32 0, align 4
@.str.15 = private unnamed_addr constant [6 x i8] c"TSO2 \00", align 1
@NFP_NET_CFG_CTRL_RSS = common dso_local global i32 0, align 4
@.str.16 = private unnamed_addr constant [6 x i8] c"RSS1 \00", align 1
@NFP_NET_CFG_CTRL_RSS2 = common dso_local global i32 0, align 4
@.str.17 = private unnamed_addr constant [6 x i8] c"RSS2 \00", align 1
@NFP_NET_CFG_CTRL_CTAG_FILTER = common dso_local global i32 0, align 4
@.str.18 = private unnamed_addr constant [13 x i8] c"CTAG_FILTER \00", align 1
@NFP_NET_CFG_CTRL_MSIXAUTO = common dso_local global i32 0, align 4
@.str.19 = private unnamed_addr constant [10 x i8] c"AUTOMASK \00", align 1
@NFP_NET_CFG_CTRL_IRQMOD = common dso_local global i32 0, align 4
@.str.20 = private unnamed_addr constant [8 x i8] c"IRQMOD \00", align 1
@NFP_NET_CFG_CTRL_VXLAN = common dso_local global i32 0, align 4
@.str.21 = private unnamed_addr constant [7 x i8] c"VXLAN \00", align 1
@NFP_NET_CFG_CTRL_NVGRE = common dso_local global i32 0, align 4
@.str.22 = private unnamed_addr constant [7 x i8] c"NVGRE \00", align 1
@NFP_NET_CFG_CTRL_CSUM_COMPLETE = common dso_local global i32 0, align 4
@.str.23 = private unnamed_addr constant [17 x i8] c"RXCSUM_COMPLETE \00", align 1
@NFP_NET_CFG_CTRL_LIVE_ADDR = common dso_local global i32 0, align 4
@.str.24 = private unnamed_addr constant [11 x i8] c"LIVE_ADDR \00", align 1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @nfp_net_info(%struct.nfp_net* %0) #0 {
  %2 = alloca %struct.nfp_net*, align 8
  store %struct.nfp_net* %0, %struct.nfp_net** %2, align 8
  %3 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %4 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %5 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %4, i32 0, i32 5
  %6 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %5, i32 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = icmp ne i64 %7, 0
  %9 = zext i1 %8 to i64
  %10 = select i1 %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %11 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %12 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %11, i32 0, i32 5
  %13 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %12, i32 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %16 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %15, i32 0, i32 6
  %17 = load i32, i32* %16, align 8
  %18 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %19 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %18, i32 0, i32 5
  %20 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %19, i32 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %23 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %22, i32 0, i32 4
  %24 = load i32, i32* %23, align 4
  %25 = call i32 (%struct.nfp_net*, i8*, ...) @nn_info(%struct.nfp_net* %3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str, i64 0, i64 0), i8* %10, i32 %14, i32 %17, i32 %21, i32 %24)
  %26 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %27 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %28 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %27, i32 0, i32 3
  %29 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %28, i32 0, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %32 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %31, i32 0, i32 3
  %33 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %32, i32 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %36 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %35, i32 0, i32 3
  %37 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %36, i32 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %40 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %39, i32 0, i32 3
  %41 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %40, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %44 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %43, i32 0, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = call i32 (%struct.nfp_net*, i8*, ...) @nn_info(%struct.nfp_net* %26, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.3, i64 0, i64 0), i32 %30, i32 %34, i32 %38, i32 %42, i32 %45)
  %47 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %48 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %49 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %48, i32 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %52 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %51, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = load i32, i32* @NFP_NET_CFG_CTRL_PROMISC, align 4
  %55 = and i32 %53, %54
  %56 = icmp ne i32 %55, 0
  %57 = zext i1 %56 to i64
  %58 = select i1 %56, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %59 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %60 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %59, i32 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = load i32, i32* @NFP_NET_CFG_CTRL_L2BC, align 4
  %63 = and i32 %61, %62
  %64 = icmp ne i32 %63, 0
  %65 = zext i1 %64 to i64
  %66 = select i1 %64, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %67 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %68 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %67, i32 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = load i32, i32* @NFP_NET_CFG_CTRL_L2MC, align 4
  %71 = and i32 %69, %70
  %72 = icmp ne i32 %71, 0
  %73 = zext i1 %72 to i64
  %74 = select i1 %72, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %75 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %76 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %75, i32 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = load i32, i32* @NFP_NET_CFG_CTRL_RXCSUM, align 4
  %79 = and i32 %77, %78
  %80 = icmp ne i32 %79, 0
  %81 = zext i1 %80 to i64
  %82 = select i1 %80, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %83 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %84 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %83, i32 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = load i32, i32* @NFP_NET_CFG_CTRL_TXCSUM, align 4
  %87 = and i32 %85, %86
  %88 = icmp ne i32 %87, 0
  %89 = zext i1 %88 to i64
  %90 = select i1 %88, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %91 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %92 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %91, i32 0, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = load i32, i32* @NFP_NET_CFG_CTRL_RXVLAN, align 4
  %95 = and i32 %93, %94
  %96 = icmp ne i32 %95, 0
  %97 = zext i1 %96 to i64
  %98 = select i1 %96, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %99 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %100 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %99, i32 0, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = load i32, i32* @NFP_NET_CFG_CTRL_TXVLAN, align 4
  %103 = and i32 %101, %102
  %104 = icmp ne i32 %103, 0
  %105 = zext i1 %104 to i64
  %106 = select i1 %104, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %107 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %108 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %107, i32 0, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = load i32, i32* @NFP_NET_CFG_CTRL_SCATTER, align 4
  %111 = and i32 %109, %110
  %112 = icmp ne i32 %111, 0
  %113 = zext i1 %112 to i64
  %114 = select i1 %112, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %115 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %116 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %115, i32 0, i32 0
  %117 = load i32, i32* %116, align 8
  %118 = load i32, i32* @NFP_NET_CFG_CTRL_GATHER, align 4
  %119 = and i32 %117, %118
  %120 = icmp ne i32 %119, 0
  %121 = zext i1 %120 to i64
  %122 = select i1 %120, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %123 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %124 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %123, i32 0, i32 0
  %125 = load i32, i32* %124, align 8
  %126 = load i32, i32* @NFP_NET_CFG_CTRL_LSO, align 4
  %127 = and i32 %125, %126
  %128 = icmp ne i32 %127, 0
  %129 = zext i1 %128 to i64
  %130 = select i1 %128, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %131 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %132 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %131, i32 0, i32 0
  %133 = load i32, i32* %132, align 8
  %134 = load i32, i32* @NFP_NET_CFG_CTRL_LSO2, align 4
  %135 = and i32 %133, %134
  %136 = icmp ne i32 %135, 0
  %137 = zext i1 %136 to i64
  %138 = select i1 %136, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %139 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %140 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %139, i32 0, i32 0
  %141 = load i32, i32* %140, align 8
  %142 = load i32, i32* @NFP_NET_CFG_CTRL_RSS, align 4
  %143 = and i32 %141, %142
  %144 = icmp ne i32 %143, 0
  %145 = zext i1 %144 to i64
  %146 = select i1 %144, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %147 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %148 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %147, i32 0, i32 0
  %149 = load i32, i32* %148, align 8
  %150 = load i32, i32* @NFP_NET_CFG_CTRL_RSS2, align 4
  %151 = and i32 %149, %150
  %152 = icmp ne i32 %151, 0
  %153 = zext i1 %152 to i64
  %154 = select i1 %152, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %155 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %156 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %155, i32 0, i32 0
  %157 = load i32, i32* %156, align 8
  %158 = load i32, i32* @NFP_NET_CFG_CTRL_CTAG_FILTER, align 4
  %159 = and i32 %157, %158
  %160 = icmp ne i32 %159, 0
  %161 = zext i1 %160 to i64
  %162 = select i1 %160, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %163 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %164 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %163, i32 0, i32 0
  %165 = load i32, i32* %164, align 8
  %166 = load i32, i32* @NFP_NET_CFG_CTRL_MSIXAUTO, align 4
  %167 = and i32 %165, %166
  %168 = icmp ne i32 %167, 0
  %169 = zext i1 %168 to i64
  %170 = select i1 %168, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %171 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %172 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %171, i32 0, i32 0
  %173 = load i32, i32* %172, align 8
  %174 = load i32, i32* @NFP_NET_CFG_CTRL_IRQMOD, align 4
  %175 = and i32 %173, %174
  %176 = icmp ne i32 %175, 0
  %177 = zext i1 %176 to i64
  %178 = select i1 %176, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %179 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %180 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %179, i32 0, i32 0
  %181 = load i32, i32* %180, align 8
  %182 = load i32, i32* @NFP_NET_CFG_CTRL_VXLAN, align 4
  %183 = and i32 %181, %182
  %184 = icmp ne i32 %183, 0
  %185 = zext i1 %184 to i64
  %186 = select i1 %184, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %187 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %188 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %187, i32 0, i32 0
  %189 = load i32, i32* %188, align 8
  %190 = load i32, i32* @NFP_NET_CFG_CTRL_NVGRE, align 4
  %191 = and i32 %189, %190
  %192 = icmp ne i32 %191, 0
  %193 = zext i1 %192 to i64
  %194 = select i1 %192, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %195 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %196 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %195, i32 0, i32 0
  %197 = load i32, i32* %196, align 8
  %198 = load i32, i32* @NFP_NET_CFG_CTRL_CSUM_COMPLETE, align 4
  %199 = and i32 %197, %198
  %200 = icmp ne i32 %199, 0
  %201 = zext i1 %200 to i64
  %202 = select i1 %200, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %203 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %204 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %203, i32 0, i32 0
  %205 = load i32, i32* %204, align 8
  %206 = load i32, i32* @NFP_NET_CFG_CTRL_LIVE_ADDR, align 4
  %207 = and i32 %205, %206
  %208 = icmp ne i32 %207, 0
  %209 = zext i1 %208 to i64
  %210 = select i1 %208, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)
  %211 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %212 = getelementptr inbounds %struct.nfp_net, %struct.nfp_net* %211, i32 0, i32 1
  %213 = load i32, i32* %212, align 4
  %214 = load %struct.nfp_net*, %struct.nfp_net** %2, align 8
  %215 = call i32 @nfp_app_extra_cap(i32 %213, %struct.nfp_net* %214)
  %216 = call i32 (%struct.nfp_net*, i8*, ...) @nn_info(%struct.nfp_net* %47, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.4, i64 0, i64 0), i32 %50, i8* %58, i8* %66, i8* %74, i8* %82, i8* %90, i8* %98, i8* %106, i8* %114, i8* %122, i8* %130, i8* %138, i8* %146, i8* %154, i8* %162, i8* %170, i8* %178, i8* %186, i8* %194, i8* %202, i8* %210, i32 %215)
  ret void
}

declare dso_local i32 @nn_info(%struct.nfp_net*, i8*, ...) #1

declare dso_local i32 @nfp_app_extra_cap(i32, %struct.nfp_net*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
