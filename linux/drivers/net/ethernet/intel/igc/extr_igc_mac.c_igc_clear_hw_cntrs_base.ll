; ModuleID = '/home/carl/AnghaBench/linux/drivers/net/ethernet/intel/igc/extr_igc_mac.c_igc_clear_hw_cntrs_base.c'
source_filename = "/home/carl/AnghaBench/linux/drivers/net/ethernet/intel/igc/extr_igc_mac.c_igc_clear_hw_cntrs_base.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.igc_hw = type { i32 }

@IGC_CRCERRS = common dso_local global i32 0, align 4
@IGC_SYMERRS = common dso_local global i32 0, align 4
@IGC_MPC = common dso_local global i32 0, align 4
@IGC_SCC = common dso_local global i32 0, align 4
@IGC_ECOL = common dso_local global i32 0, align 4
@IGC_MCC = common dso_local global i32 0, align 4
@IGC_LATECOL = common dso_local global i32 0, align 4
@IGC_COLC = common dso_local global i32 0, align 4
@IGC_DC = common dso_local global i32 0, align 4
@IGC_SEC = common dso_local global i32 0, align 4
@IGC_RLEC = common dso_local global i32 0, align 4
@IGC_XONRXC = common dso_local global i32 0, align 4
@IGC_XONTXC = common dso_local global i32 0, align 4
@IGC_XOFFRXC = common dso_local global i32 0, align 4
@IGC_XOFFTXC = common dso_local global i32 0, align 4
@IGC_FCRUC = common dso_local global i32 0, align 4
@IGC_GPRC = common dso_local global i32 0, align 4
@IGC_BPRC = common dso_local global i32 0, align 4
@IGC_MPRC = common dso_local global i32 0, align 4
@IGC_GPTC = common dso_local global i32 0, align 4
@IGC_GORCL = common dso_local global i32 0, align 4
@IGC_GORCH = common dso_local global i32 0, align 4
@IGC_GOTCL = common dso_local global i32 0, align 4
@IGC_GOTCH = common dso_local global i32 0, align 4
@IGC_RNBC = common dso_local global i32 0, align 4
@IGC_RUC = common dso_local global i32 0, align 4
@IGC_RFC = common dso_local global i32 0, align 4
@IGC_ROC = common dso_local global i32 0, align 4
@IGC_RJC = common dso_local global i32 0, align 4
@IGC_TORL = common dso_local global i32 0, align 4
@IGC_TORH = common dso_local global i32 0, align 4
@IGC_TOTL = common dso_local global i32 0, align 4
@IGC_TOTH = common dso_local global i32 0, align 4
@IGC_TPR = common dso_local global i32 0, align 4
@IGC_TPT = common dso_local global i32 0, align 4
@IGC_MPTC = common dso_local global i32 0, align 4
@IGC_BPTC = common dso_local global i32 0, align 4
@IGC_PRC64 = common dso_local global i32 0, align 4
@IGC_PRC127 = common dso_local global i32 0, align 4
@IGC_PRC255 = common dso_local global i32 0, align 4
@IGC_PRC511 = common dso_local global i32 0, align 4
@IGC_PRC1023 = common dso_local global i32 0, align 4
@IGC_PRC1522 = common dso_local global i32 0, align 4
@IGC_PTC64 = common dso_local global i32 0, align 4
@IGC_PTC127 = common dso_local global i32 0, align 4
@IGC_PTC255 = common dso_local global i32 0, align 4
@IGC_PTC511 = common dso_local global i32 0, align 4
@IGC_PTC1023 = common dso_local global i32 0, align 4
@IGC_PTC1522 = common dso_local global i32 0, align 4
@IGC_ALGNERRC = common dso_local global i32 0, align 4
@IGC_RXERRC = common dso_local global i32 0, align 4
@IGC_TNCRS = common dso_local global i32 0, align 4
@IGC_CEXTERR = common dso_local global i32 0, align 4
@IGC_TSCTC = common dso_local global i32 0, align 4
@IGC_TSCTFC = common dso_local global i32 0, align 4
@IGC_MGTPRC = common dso_local global i32 0, align 4
@IGC_MGTPDC = common dso_local global i32 0, align 4
@IGC_MGTPTC = common dso_local global i32 0, align 4
@IGC_IAC = common dso_local global i32 0, align 4
@IGC_ICRXOC = common dso_local global i32 0, align 4
@IGC_ICRXPTC = common dso_local global i32 0, align 4
@IGC_ICRXATC = common dso_local global i32 0, align 4
@IGC_ICTXPTC = common dso_local global i32 0, align 4
@IGC_ICTXATC = common dso_local global i32 0, align 4
@IGC_ICTXQEC = common dso_local global i32 0, align 4
@IGC_ICTXQMTC = common dso_local global i32 0, align 4
@IGC_ICRXDMTC = common dso_local global i32 0, align 4
@IGC_CBTMPC = common dso_local global i32 0, align 4
@IGC_HTDPMC = common dso_local global i32 0, align 4
@IGC_CBRMPC = common dso_local global i32 0, align 4
@IGC_RPTHC = common dso_local global i32 0, align 4
@IGC_HGPTC = common dso_local global i32 0, align 4
@IGC_HTCBDPC = common dso_local global i32 0, align 4
@IGC_HGORCL = common dso_local global i32 0, align 4
@IGC_HGORCH = common dso_local global i32 0, align 4
@IGC_HGOTCL = common dso_local global i32 0, align 4
@IGC_HGOTCH = common dso_local global i32 0, align 4
@IGC_LENERRS = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @igc_clear_hw_cntrs_base(%struct.igc_hw* %0) #0 {
  %2 = alloca %struct.igc_hw*, align 8
  store %struct.igc_hw* %0, %struct.igc_hw** %2, align 8
  %3 = load i32, i32* @IGC_CRCERRS, align 4
  %4 = call i32 @rd32(i32 %3)
  %5 = load i32, i32* @IGC_SYMERRS, align 4
  %6 = call i32 @rd32(i32 %5)
  %7 = load i32, i32* @IGC_MPC, align 4
  %8 = call i32 @rd32(i32 %7)
  %9 = load i32, i32* @IGC_SCC, align 4
  %10 = call i32 @rd32(i32 %9)
  %11 = load i32, i32* @IGC_ECOL, align 4
  %12 = call i32 @rd32(i32 %11)
  %13 = load i32, i32* @IGC_MCC, align 4
  %14 = call i32 @rd32(i32 %13)
  %15 = load i32, i32* @IGC_LATECOL, align 4
  %16 = call i32 @rd32(i32 %15)
  %17 = load i32, i32* @IGC_COLC, align 4
  %18 = call i32 @rd32(i32 %17)
  %19 = load i32, i32* @IGC_DC, align 4
  %20 = call i32 @rd32(i32 %19)
  %21 = load i32, i32* @IGC_SEC, align 4
  %22 = call i32 @rd32(i32 %21)
  %23 = load i32, i32* @IGC_RLEC, align 4
  %24 = call i32 @rd32(i32 %23)
  %25 = load i32, i32* @IGC_XONRXC, align 4
  %26 = call i32 @rd32(i32 %25)
  %27 = load i32, i32* @IGC_XONTXC, align 4
  %28 = call i32 @rd32(i32 %27)
  %29 = load i32, i32* @IGC_XOFFRXC, align 4
  %30 = call i32 @rd32(i32 %29)
  %31 = load i32, i32* @IGC_XOFFTXC, align 4
  %32 = call i32 @rd32(i32 %31)
  %33 = load i32, i32* @IGC_FCRUC, align 4
  %34 = call i32 @rd32(i32 %33)
  %35 = load i32, i32* @IGC_GPRC, align 4
  %36 = call i32 @rd32(i32 %35)
  %37 = load i32, i32* @IGC_BPRC, align 4
  %38 = call i32 @rd32(i32 %37)
  %39 = load i32, i32* @IGC_MPRC, align 4
  %40 = call i32 @rd32(i32 %39)
  %41 = load i32, i32* @IGC_GPTC, align 4
  %42 = call i32 @rd32(i32 %41)
  %43 = load i32, i32* @IGC_GORCL, align 4
  %44 = call i32 @rd32(i32 %43)
  %45 = load i32, i32* @IGC_GORCH, align 4
  %46 = call i32 @rd32(i32 %45)
  %47 = load i32, i32* @IGC_GOTCL, align 4
  %48 = call i32 @rd32(i32 %47)
  %49 = load i32, i32* @IGC_GOTCH, align 4
  %50 = call i32 @rd32(i32 %49)
  %51 = load i32, i32* @IGC_RNBC, align 4
  %52 = call i32 @rd32(i32 %51)
  %53 = load i32, i32* @IGC_RUC, align 4
  %54 = call i32 @rd32(i32 %53)
  %55 = load i32, i32* @IGC_RFC, align 4
  %56 = call i32 @rd32(i32 %55)
  %57 = load i32, i32* @IGC_ROC, align 4
  %58 = call i32 @rd32(i32 %57)
  %59 = load i32, i32* @IGC_RJC, align 4
  %60 = call i32 @rd32(i32 %59)
  %61 = load i32, i32* @IGC_TORL, align 4
  %62 = call i32 @rd32(i32 %61)
  %63 = load i32, i32* @IGC_TORH, align 4
  %64 = call i32 @rd32(i32 %63)
  %65 = load i32, i32* @IGC_TOTL, align 4
  %66 = call i32 @rd32(i32 %65)
  %67 = load i32, i32* @IGC_TOTH, align 4
  %68 = call i32 @rd32(i32 %67)
  %69 = load i32, i32* @IGC_TPR, align 4
  %70 = call i32 @rd32(i32 %69)
  %71 = load i32, i32* @IGC_TPT, align 4
  %72 = call i32 @rd32(i32 %71)
  %73 = load i32, i32* @IGC_MPTC, align 4
  %74 = call i32 @rd32(i32 %73)
  %75 = load i32, i32* @IGC_BPTC, align 4
  %76 = call i32 @rd32(i32 %75)
  %77 = load i32, i32* @IGC_PRC64, align 4
  %78 = call i32 @rd32(i32 %77)
  %79 = load i32, i32* @IGC_PRC127, align 4
  %80 = call i32 @rd32(i32 %79)
  %81 = load i32, i32* @IGC_PRC255, align 4
  %82 = call i32 @rd32(i32 %81)
  %83 = load i32, i32* @IGC_PRC511, align 4
  %84 = call i32 @rd32(i32 %83)
  %85 = load i32, i32* @IGC_PRC1023, align 4
  %86 = call i32 @rd32(i32 %85)
  %87 = load i32, i32* @IGC_PRC1522, align 4
  %88 = call i32 @rd32(i32 %87)
  %89 = load i32, i32* @IGC_PTC64, align 4
  %90 = call i32 @rd32(i32 %89)
  %91 = load i32, i32* @IGC_PTC127, align 4
  %92 = call i32 @rd32(i32 %91)
  %93 = load i32, i32* @IGC_PTC255, align 4
  %94 = call i32 @rd32(i32 %93)
  %95 = load i32, i32* @IGC_PTC511, align 4
  %96 = call i32 @rd32(i32 %95)
  %97 = load i32, i32* @IGC_PTC1023, align 4
  %98 = call i32 @rd32(i32 %97)
  %99 = load i32, i32* @IGC_PTC1522, align 4
  %100 = call i32 @rd32(i32 %99)
  %101 = load i32, i32* @IGC_ALGNERRC, align 4
  %102 = call i32 @rd32(i32 %101)
  %103 = load i32, i32* @IGC_RXERRC, align 4
  %104 = call i32 @rd32(i32 %103)
  %105 = load i32, i32* @IGC_TNCRS, align 4
  %106 = call i32 @rd32(i32 %105)
  %107 = load i32, i32* @IGC_CEXTERR, align 4
  %108 = call i32 @rd32(i32 %107)
  %109 = load i32, i32* @IGC_TSCTC, align 4
  %110 = call i32 @rd32(i32 %109)
  %111 = load i32, i32* @IGC_TSCTFC, align 4
  %112 = call i32 @rd32(i32 %111)
  %113 = load i32, i32* @IGC_MGTPRC, align 4
  %114 = call i32 @rd32(i32 %113)
  %115 = load i32, i32* @IGC_MGTPDC, align 4
  %116 = call i32 @rd32(i32 %115)
  %117 = load i32, i32* @IGC_MGTPTC, align 4
  %118 = call i32 @rd32(i32 %117)
  %119 = load i32, i32* @IGC_IAC, align 4
  %120 = call i32 @rd32(i32 %119)
  %121 = load i32, i32* @IGC_ICRXOC, align 4
  %122 = call i32 @rd32(i32 %121)
  %123 = load i32, i32* @IGC_ICRXPTC, align 4
  %124 = call i32 @rd32(i32 %123)
  %125 = load i32, i32* @IGC_ICRXATC, align 4
  %126 = call i32 @rd32(i32 %125)
  %127 = load i32, i32* @IGC_ICTXPTC, align 4
  %128 = call i32 @rd32(i32 %127)
  %129 = load i32, i32* @IGC_ICTXATC, align 4
  %130 = call i32 @rd32(i32 %129)
  %131 = load i32, i32* @IGC_ICTXQEC, align 4
  %132 = call i32 @rd32(i32 %131)
  %133 = load i32, i32* @IGC_ICTXQMTC, align 4
  %134 = call i32 @rd32(i32 %133)
  %135 = load i32, i32* @IGC_ICRXDMTC, align 4
  %136 = call i32 @rd32(i32 %135)
  %137 = load i32, i32* @IGC_CBTMPC, align 4
  %138 = call i32 @rd32(i32 %137)
  %139 = load i32, i32* @IGC_HTDPMC, align 4
  %140 = call i32 @rd32(i32 %139)
  %141 = load i32, i32* @IGC_CBRMPC, align 4
  %142 = call i32 @rd32(i32 %141)
  %143 = load i32, i32* @IGC_RPTHC, align 4
  %144 = call i32 @rd32(i32 %143)
  %145 = load i32, i32* @IGC_HGPTC, align 4
  %146 = call i32 @rd32(i32 %145)
  %147 = load i32, i32* @IGC_HTCBDPC, align 4
  %148 = call i32 @rd32(i32 %147)
  %149 = load i32, i32* @IGC_HGORCL, align 4
  %150 = call i32 @rd32(i32 %149)
  %151 = load i32, i32* @IGC_HGORCH, align 4
  %152 = call i32 @rd32(i32 %151)
  %153 = load i32, i32* @IGC_HGOTCL, align 4
  %154 = call i32 @rd32(i32 %153)
  %155 = load i32, i32* @IGC_HGOTCH, align 4
  %156 = call i32 @rd32(i32 %155)
  %157 = load i32, i32* @IGC_LENERRS, align 4
  %158 = call i32 @rd32(i32 %157)
  ret void
}

declare dso_local i32 @rd32(i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
