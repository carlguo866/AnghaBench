; ModuleID = '/home/carl/AnghaBench/linux/drivers/net/wireless/ti/wl18xx/extr_debugfs.c_wl18xx_debugfs_add_files.c'
source_filename = "/home/carl/AnghaBench/linux/drivers/net/wireless/ti/wl18xx/extr_debugfs.c_wl18xx_debugfs_add_files.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.wl1271 = type { i32 }
%struct.dentry = type { i32 }

@KBUILD_MODNAME = common dso_local global i8* null, align 8
@.str = private unnamed_addr constant [9 x i8] c"fw_stats\00", align 1
@clear_fw_stats = common dso_local global i32 0, align 4
@error = common dso_local global i32 0, align 4
@error_frame_non_ctrl = common dso_local global i32 0, align 4
@error_frame_ctrl = common dso_local global i32 0, align 4
@error_frame_during_protection = common dso_local global i32 0, align 4
@null_frame_tx_start = common dso_local global i32 0, align 4
@null_frame_cts_start = common dso_local global i32 0, align 4
@bar_retry = common dso_local global i32 0, align 4
@num_frame_cts_nul_flid = common dso_local global i32 0, align 4
@tx_abort_failure = common dso_local global i32 0, align 4
@tx_resume_failure = common dso_local global i32 0, align 4
@rx_cmplt_db_overflow_cnt = common dso_local global i32 0, align 4
@elp_while_rx_exch = common dso_local global i32 0, align 4
@elp_while_tx_exch = common dso_local global i32 0, align 4
@elp_while_tx = common dso_local global i32 0, align 4
@elp_while_nvic_pending = common dso_local global i32 0, align 4
@rx_excessive_frame_len = common dso_local global i32 0, align 4
@burst_mismatch = common dso_local global i32 0, align 4
@tbc_exch_mismatch = common dso_local global i32 0, align 4
@tx = common dso_local global i32 0, align 4
@tx_prepared_descs = common dso_local global i32 0, align 4
@tx_cmplt = common dso_local global i32 0, align 4
@tx_template_prepared = common dso_local global i32 0, align 4
@tx_data_prepared = common dso_local global i32 0, align 4
@tx_template_programmed = common dso_local global i32 0, align 4
@tx_data_programmed = common dso_local global i32 0, align 4
@tx_burst_programmed = common dso_local global i32 0, align 4
@tx_starts = common dso_local global i32 0, align 4
@tx_stop = common dso_local global i32 0, align 4
@tx_start_templates = common dso_local global i32 0, align 4
@tx_start_int_templates = common dso_local global i32 0, align 4
@tx_start_fw_gen = common dso_local global i32 0, align 4
@tx_start_data = common dso_local global i32 0, align 4
@tx_start_null_frame = common dso_local global i32 0, align 4
@tx_exch = common dso_local global i32 0, align 4
@tx_retry_template = common dso_local global i32 0, align 4
@tx_retry_data = common dso_local global i32 0, align 4
@tx_retry_per_rate = common dso_local global i32 0, align 4
@tx_exch_pending = common dso_local global i32 0, align 4
@tx_exch_expiry = common dso_local global i32 0, align 4
@tx_done_template = common dso_local global i32 0, align 4
@tx_done_data = common dso_local global i32 0, align 4
@tx_done_int_template = common dso_local global i32 0, align 4
@tx_cfe1 = common dso_local global i32 0, align 4
@tx_cfe2 = common dso_local global i32 0, align 4
@frag_called = common dso_local global i32 0, align 4
@frag_mpdu_alloc_failed = common dso_local global i32 0, align 4
@frag_init_called = common dso_local global i32 0, align 4
@frag_in_process_called = common dso_local global i32 0, align 4
@frag_tkip_called = common dso_local global i32 0, align 4
@frag_key_not_found = common dso_local global i32 0, align 4
@frag_need_fragmentation = common dso_local global i32 0, align 4
@frag_bad_mblk_num = common dso_local global i32 0, align 4
@frag_failed = common dso_local global i32 0, align 4
@frag_cache_hit = common dso_local global i32 0, align 4
@frag_cache_miss = common dso_local global i32 0, align 4
@rx = common dso_local global i32 0, align 4
@rx_beacon_early_term = common dso_local global i32 0, align 4
@rx_out_of_mpdu_nodes = common dso_local global i32 0, align 4
@rx_hdr_overflow = common dso_local global i32 0, align 4
@rx_dropped_frame = common dso_local global i32 0, align 4
@rx_done = common dso_local global i32 0, align 4
@rx_defrag = common dso_local global i32 0, align 4
@rx_defrag_end = common dso_local global i32 0, align 4
@rx_cmplt = common dso_local global i32 0, align 4
@rx_pre_complt = common dso_local global i32 0, align 4
@rx_cmplt_task = common dso_local global i32 0, align 4
@rx_phy_hdr = common dso_local global i32 0, align 4
@rx_timeout = common dso_local global i32 0, align 4
@rx_rts_timeout = common dso_local global i32 0, align 4
@rx_timeout_wa = common dso_local global i32 0, align 4
@defrag_called = common dso_local global i32 0, align 4
@defrag_init_called = common dso_local global i32 0, align 4
@defrag_in_process_called = common dso_local global i32 0, align 4
@defrag_tkip_called = common dso_local global i32 0, align 4
@defrag_need_defrag = common dso_local global i32 0, align 4
@defrag_decrypt_failed = common dso_local global i32 0, align 4
@decrypt_key_not_found = common dso_local global i32 0, align 4
@defrag_need_decrypt = common dso_local global i32 0, align 4
@rx_tkip_replays = common dso_local global i32 0, align 4
@rx_xfr = common dso_local global i32 0, align 4
@isr = common dso_local global i32 0, align 4
@irqs = common dso_local global i32 0, align 4
@pwr = common dso_local global i32 0, align 4
@missing_bcns_cnt = common dso_local global i32 0, align 4
@rcvd_bcns_cnt = common dso_local global i32 0, align 4
@connection_out_of_sync = common dso_local global i32 0, align 4
@cont_miss_bcns_spread = common dso_local global i32 0, align 4
@rcvd_awake_bcns_cnt = common dso_local global i32 0, align 4
@sleep_time_count = common dso_local global i32 0, align 4
@sleep_time_avg = common dso_local global i32 0, align 4
@sleep_cycle_avg = common dso_local global i32 0, align 4
@sleep_percent = common dso_local global i32 0, align 4
@ap_sleep_active_conf = common dso_local global i32 0, align 4
@ap_sleep_user_conf = common dso_local global i32 0, align 4
@ap_sleep_counter = common dso_local global i32 0, align 4
@rx_filter = common dso_local global i32 0, align 4
@beacon_filter = common dso_local global i32 0, align 4
@arp_filter = common dso_local global i32 0, align 4
@mc_filter = common dso_local global i32 0, align 4
@dup_filter = common dso_local global i32 0, align 4
@data_filter = common dso_local global i32 0, align 4
@ibss_filter = common dso_local global i32 0, align 4
@protection_filter = common dso_local global i32 0, align 4
@accum_arp_pend_requests = common dso_local global i32 0, align 4
@max_arp_queue_dep = common dso_local global i32 0, align 4
@rx_rate = common dso_local global i32 0, align 4
@rx_frames_per_rates = common dso_local global i32 0, align 4
@aggr_size = common dso_local global i32 0, align 4
@tx_agg_rate = common dso_local global i32 0, align 4
@tx_agg_len = common dso_local global i32 0, align 4
@rx_size = common dso_local global i32 0, align 4
@pipeline = common dso_local global i32 0, align 4
@hs_tx_stat_fifo_int = common dso_local global i32 0, align 4
@enc_tx_stat_fifo_int = common dso_local global i32 0, align 4
@enc_rx_stat_fifo_int = common dso_local global i32 0, align 4
@rx_complete_stat_fifo_int = common dso_local global i32 0, align 4
@pre_proc_swi = common dso_local global i32 0, align 4
@post_proc_swi = common dso_local global i32 0, align 4
@sec_frag_swi = common dso_local global i32 0, align 4
@pre_to_defrag_swi = common dso_local global i32 0, align 4
@defrag_to_rx_xfer_swi = common dso_local global i32 0, align 4
@dec_packet_in = common dso_local global i32 0, align 4
@dec_packet_in_fifo_full = common dso_local global i32 0, align 4
@dec_packet_out = common dso_local global i32 0, align 4
@pipeline_fifo_full = common dso_local global i32 0, align 4
@diversity = common dso_local global i32 0, align 4
@num_of_packets_per_ant = common dso_local global i32 0, align 4
@total_num_of_toggles = common dso_local global i32 0, align 4
@thermal = common dso_local global i32 0, align 4
@irq_thr_low = common dso_local global i32 0, align 4
@irq_thr_high = common dso_local global i32 0, align 4
@tx_resume = common dso_local global i32 0, align 4
@false_irq = common dso_local global i32 0, align 4
@adc_source_unexpected = common dso_local global i32 0, align 4
@calib = common dso_local global i32 0, align 4
@fail_count = common dso_local global i32 0, align 4
@calib_count = common dso_local global i32 0, align 4
@roaming = common dso_local global i32 0, align 4
@rssi_level = common dso_local global i32 0, align 4
@dfs = common dso_local global i32 0, align 4
@num_of_radar_detections = common dso_local global i32 0, align 4
@conf = common dso_local global i32 0, align 4
@radar_detection = common dso_local global i32 0, align 4
@dynamic_fw_traces = common dso_local global i32 0, align 4
@radar_debug_mode = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @wl18xx_debugfs_add_files(%struct.wl1271* %0, %struct.dentry* %1) #0 {
  %3 = alloca %struct.wl1271*, align 8
  %4 = alloca %struct.dentry*, align 8
  %5 = alloca %struct.dentry*, align 8
  %6 = alloca %struct.dentry*, align 8
  store %struct.wl1271* %0, %struct.wl1271** %3, align 8
  store %struct.dentry* %1, %struct.dentry** %4, align 8
  %7 = load i8*, i8** @KBUILD_MODNAME, align 8
  %8 = load %struct.dentry*, %struct.dentry** %4, align 8
  %9 = call %struct.dentry* @debugfs_create_dir(i8* %7, %struct.dentry* %8)
  store %struct.dentry* %9, %struct.dentry** %6, align 8
  %10 = load %struct.dentry*, %struct.dentry** %6, align 8
  %11 = call %struct.dentry* @debugfs_create_dir(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), %struct.dentry* %10)
  store %struct.dentry* %11, %struct.dentry** %5, align 8
  %12 = load i32, i32* @clear_fw_stats, align 4
  %13 = load %struct.dentry*, %struct.dentry** %5, align 8
  %14 = call i32 @DEBUGFS_ADD(i32 %12, %struct.dentry* %13)
  %15 = load i32, i32* @error, align 4
  %16 = load i32, i32* @error_frame_non_ctrl, align 4
  %17 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %15, i32 %16)
  %18 = load i32, i32* @error, align 4
  %19 = load i32, i32* @error_frame_ctrl, align 4
  %20 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %18, i32 %19)
  %21 = load i32, i32* @error, align 4
  %22 = load i32, i32* @error_frame_during_protection, align 4
  %23 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %21, i32 %22)
  %24 = load i32, i32* @error, align 4
  %25 = load i32, i32* @null_frame_tx_start, align 4
  %26 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %24, i32 %25)
  %27 = load i32, i32* @error, align 4
  %28 = load i32, i32* @null_frame_cts_start, align 4
  %29 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %27, i32 %28)
  %30 = load i32, i32* @error, align 4
  %31 = load i32, i32* @bar_retry, align 4
  %32 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %30, i32 %31)
  %33 = load i32, i32* @error, align 4
  %34 = load i32, i32* @num_frame_cts_nul_flid, align 4
  %35 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %33, i32 %34)
  %36 = load i32, i32* @error, align 4
  %37 = load i32, i32* @tx_abort_failure, align 4
  %38 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %36, i32 %37)
  %39 = load i32, i32* @error, align 4
  %40 = load i32, i32* @tx_resume_failure, align 4
  %41 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %39, i32 %40)
  %42 = load i32, i32* @error, align 4
  %43 = load i32, i32* @rx_cmplt_db_overflow_cnt, align 4
  %44 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %42, i32 %43)
  %45 = load i32, i32* @error, align 4
  %46 = load i32, i32* @elp_while_rx_exch, align 4
  %47 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %45, i32 %46)
  %48 = load i32, i32* @error, align 4
  %49 = load i32, i32* @elp_while_tx_exch, align 4
  %50 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %48, i32 %49)
  %51 = load i32, i32* @error, align 4
  %52 = load i32, i32* @elp_while_tx, align 4
  %53 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %51, i32 %52)
  %54 = load i32, i32* @error, align 4
  %55 = load i32, i32* @elp_while_nvic_pending, align 4
  %56 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %54, i32 %55)
  %57 = load i32, i32* @error, align 4
  %58 = load i32, i32* @rx_excessive_frame_len, align 4
  %59 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %57, i32 %58)
  %60 = load i32, i32* @error, align 4
  %61 = load i32, i32* @burst_mismatch, align 4
  %62 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %60, i32 %61)
  %63 = load i32, i32* @error, align 4
  %64 = load i32, i32* @tbc_exch_mismatch, align 4
  %65 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %63, i32 %64)
  %66 = load i32, i32* @tx, align 4
  %67 = load i32, i32* @tx_prepared_descs, align 4
  %68 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %66, i32 %67)
  %69 = load i32, i32* @tx, align 4
  %70 = load i32, i32* @tx_cmplt, align 4
  %71 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %69, i32 %70)
  %72 = load i32, i32* @tx, align 4
  %73 = load i32, i32* @tx_template_prepared, align 4
  %74 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %72, i32 %73)
  %75 = load i32, i32* @tx, align 4
  %76 = load i32, i32* @tx_data_prepared, align 4
  %77 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %75, i32 %76)
  %78 = load i32, i32* @tx, align 4
  %79 = load i32, i32* @tx_template_programmed, align 4
  %80 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %78, i32 %79)
  %81 = load i32, i32* @tx, align 4
  %82 = load i32, i32* @tx_data_programmed, align 4
  %83 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %81, i32 %82)
  %84 = load i32, i32* @tx, align 4
  %85 = load i32, i32* @tx_burst_programmed, align 4
  %86 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %84, i32 %85)
  %87 = load i32, i32* @tx, align 4
  %88 = load i32, i32* @tx_starts, align 4
  %89 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %87, i32 %88)
  %90 = load i32, i32* @tx, align 4
  %91 = load i32, i32* @tx_stop, align 4
  %92 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %90, i32 %91)
  %93 = load i32, i32* @tx, align 4
  %94 = load i32, i32* @tx_start_templates, align 4
  %95 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %93, i32 %94)
  %96 = load i32, i32* @tx, align 4
  %97 = load i32, i32* @tx_start_int_templates, align 4
  %98 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %96, i32 %97)
  %99 = load i32, i32* @tx, align 4
  %100 = load i32, i32* @tx_start_fw_gen, align 4
  %101 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %99, i32 %100)
  %102 = load i32, i32* @tx, align 4
  %103 = load i32, i32* @tx_start_data, align 4
  %104 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %102, i32 %103)
  %105 = load i32, i32* @tx, align 4
  %106 = load i32, i32* @tx_start_null_frame, align 4
  %107 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %105, i32 %106)
  %108 = load i32, i32* @tx, align 4
  %109 = load i32, i32* @tx_exch, align 4
  %110 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %108, i32 %109)
  %111 = load i32, i32* @tx, align 4
  %112 = load i32, i32* @tx_retry_template, align 4
  %113 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %111, i32 %112)
  %114 = load i32, i32* @tx, align 4
  %115 = load i32, i32* @tx_retry_data, align 4
  %116 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %114, i32 %115)
  %117 = load i32, i32* @tx, align 4
  %118 = load i32, i32* @tx_retry_per_rate, align 4
  %119 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %117, i32 %118)
  %120 = load i32, i32* @tx, align 4
  %121 = load i32, i32* @tx_exch_pending, align 4
  %122 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %120, i32 %121)
  %123 = load i32, i32* @tx, align 4
  %124 = load i32, i32* @tx_exch_expiry, align 4
  %125 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %123, i32 %124)
  %126 = load i32, i32* @tx, align 4
  %127 = load i32, i32* @tx_done_template, align 4
  %128 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %126, i32 %127)
  %129 = load i32, i32* @tx, align 4
  %130 = load i32, i32* @tx_done_data, align 4
  %131 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %129, i32 %130)
  %132 = load i32, i32* @tx, align 4
  %133 = load i32, i32* @tx_done_int_template, align 4
  %134 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %132, i32 %133)
  %135 = load i32, i32* @tx, align 4
  %136 = load i32, i32* @tx_cfe1, align 4
  %137 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %135, i32 %136)
  %138 = load i32, i32* @tx, align 4
  %139 = load i32, i32* @tx_cfe2, align 4
  %140 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %138, i32 %139)
  %141 = load i32, i32* @tx, align 4
  %142 = load i32, i32* @frag_called, align 4
  %143 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %141, i32 %142)
  %144 = load i32, i32* @tx, align 4
  %145 = load i32, i32* @frag_mpdu_alloc_failed, align 4
  %146 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %144, i32 %145)
  %147 = load i32, i32* @tx, align 4
  %148 = load i32, i32* @frag_init_called, align 4
  %149 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %147, i32 %148)
  %150 = load i32, i32* @tx, align 4
  %151 = load i32, i32* @frag_in_process_called, align 4
  %152 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %150, i32 %151)
  %153 = load i32, i32* @tx, align 4
  %154 = load i32, i32* @frag_tkip_called, align 4
  %155 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %153, i32 %154)
  %156 = load i32, i32* @tx, align 4
  %157 = load i32, i32* @frag_key_not_found, align 4
  %158 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %156, i32 %157)
  %159 = load i32, i32* @tx, align 4
  %160 = load i32, i32* @frag_need_fragmentation, align 4
  %161 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %159, i32 %160)
  %162 = load i32, i32* @tx, align 4
  %163 = load i32, i32* @frag_bad_mblk_num, align 4
  %164 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %162, i32 %163)
  %165 = load i32, i32* @tx, align 4
  %166 = load i32, i32* @frag_failed, align 4
  %167 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %165, i32 %166)
  %168 = load i32, i32* @tx, align 4
  %169 = load i32, i32* @frag_cache_hit, align 4
  %170 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %168, i32 %169)
  %171 = load i32, i32* @tx, align 4
  %172 = load i32, i32* @frag_cache_miss, align 4
  %173 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %171, i32 %172)
  %174 = load i32, i32* @rx, align 4
  %175 = load i32, i32* @rx_beacon_early_term, align 4
  %176 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %174, i32 %175)
  %177 = load i32, i32* @rx, align 4
  %178 = load i32, i32* @rx_out_of_mpdu_nodes, align 4
  %179 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %177, i32 %178)
  %180 = load i32, i32* @rx, align 4
  %181 = load i32, i32* @rx_hdr_overflow, align 4
  %182 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %180, i32 %181)
  %183 = load i32, i32* @rx, align 4
  %184 = load i32, i32* @rx_dropped_frame, align 4
  %185 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %183, i32 %184)
  %186 = load i32, i32* @rx, align 4
  %187 = load i32, i32* @rx_done, align 4
  %188 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %186, i32 %187)
  %189 = load i32, i32* @rx, align 4
  %190 = load i32, i32* @rx_defrag, align 4
  %191 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %189, i32 %190)
  %192 = load i32, i32* @rx, align 4
  %193 = load i32, i32* @rx_defrag_end, align 4
  %194 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %192, i32 %193)
  %195 = load i32, i32* @rx, align 4
  %196 = load i32, i32* @rx_cmplt, align 4
  %197 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %195, i32 %196)
  %198 = load i32, i32* @rx, align 4
  %199 = load i32, i32* @rx_pre_complt, align 4
  %200 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %198, i32 %199)
  %201 = load i32, i32* @rx, align 4
  %202 = load i32, i32* @rx_cmplt_task, align 4
  %203 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %201, i32 %202)
  %204 = load i32, i32* @rx, align 4
  %205 = load i32, i32* @rx_phy_hdr, align 4
  %206 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %204, i32 %205)
  %207 = load i32, i32* @rx, align 4
  %208 = load i32, i32* @rx_timeout, align 4
  %209 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %207, i32 %208)
  %210 = load i32, i32* @rx, align 4
  %211 = load i32, i32* @rx_rts_timeout, align 4
  %212 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %210, i32 %211)
  %213 = load i32, i32* @rx, align 4
  %214 = load i32, i32* @rx_timeout_wa, align 4
  %215 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %213, i32 %214)
  %216 = load i32, i32* @rx, align 4
  %217 = load i32, i32* @defrag_called, align 4
  %218 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %216, i32 %217)
  %219 = load i32, i32* @rx, align 4
  %220 = load i32, i32* @defrag_init_called, align 4
  %221 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %219, i32 %220)
  %222 = load i32, i32* @rx, align 4
  %223 = load i32, i32* @defrag_in_process_called, align 4
  %224 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %222, i32 %223)
  %225 = load i32, i32* @rx, align 4
  %226 = load i32, i32* @defrag_tkip_called, align 4
  %227 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %225, i32 %226)
  %228 = load i32, i32* @rx, align 4
  %229 = load i32, i32* @defrag_need_defrag, align 4
  %230 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %228, i32 %229)
  %231 = load i32, i32* @rx, align 4
  %232 = load i32, i32* @defrag_decrypt_failed, align 4
  %233 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %231, i32 %232)
  %234 = load i32, i32* @rx, align 4
  %235 = load i32, i32* @decrypt_key_not_found, align 4
  %236 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %234, i32 %235)
  %237 = load i32, i32* @rx, align 4
  %238 = load i32, i32* @defrag_need_decrypt, align 4
  %239 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %237, i32 %238)
  %240 = load i32, i32* @rx, align 4
  %241 = load i32, i32* @rx_tkip_replays, align 4
  %242 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %240, i32 %241)
  %243 = load i32, i32* @rx, align 4
  %244 = load i32, i32* @rx_xfr, align 4
  %245 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %243, i32 %244)
  %246 = load i32, i32* @isr, align 4
  %247 = load i32, i32* @irqs, align 4
  %248 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %246, i32 %247)
  %249 = load i32, i32* @pwr, align 4
  %250 = load i32, i32* @missing_bcns_cnt, align 4
  %251 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %249, i32 %250)
  %252 = load i32, i32* @pwr, align 4
  %253 = load i32, i32* @rcvd_bcns_cnt, align 4
  %254 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %252, i32 %253)
  %255 = load i32, i32* @pwr, align 4
  %256 = load i32, i32* @connection_out_of_sync, align 4
  %257 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %255, i32 %256)
  %258 = load i32, i32* @pwr, align 4
  %259 = load i32, i32* @cont_miss_bcns_spread, align 4
  %260 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %258, i32 %259)
  %261 = load i32, i32* @pwr, align 4
  %262 = load i32, i32* @rcvd_awake_bcns_cnt, align 4
  %263 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %261, i32 %262)
  %264 = load i32, i32* @pwr, align 4
  %265 = load i32, i32* @sleep_time_count, align 4
  %266 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %264, i32 %265)
  %267 = load i32, i32* @pwr, align 4
  %268 = load i32, i32* @sleep_time_avg, align 4
  %269 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %267, i32 %268)
  %270 = load i32, i32* @pwr, align 4
  %271 = load i32, i32* @sleep_cycle_avg, align 4
  %272 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %270, i32 %271)
  %273 = load i32, i32* @pwr, align 4
  %274 = load i32, i32* @sleep_percent, align 4
  %275 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %273, i32 %274)
  %276 = load i32, i32* @pwr, align 4
  %277 = load i32, i32* @ap_sleep_active_conf, align 4
  %278 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %276, i32 %277)
  %279 = load i32, i32* @pwr, align 4
  %280 = load i32, i32* @ap_sleep_user_conf, align 4
  %281 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %279, i32 %280)
  %282 = load i32, i32* @pwr, align 4
  %283 = load i32, i32* @ap_sleep_counter, align 4
  %284 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %282, i32 %283)
  %285 = load i32, i32* @rx_filter, align 4
  %286 = load i32, i32* @beacon_filter, align 4
  %287 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %285, i32 %286)
  %288 = load i32, i32* @rx_filter, align 4
  %289 = load i32, i32* @arp_filter, align 4
  %290 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %288, i32 %289)
  %291 = load i32, i32* @rx_filter, align 4
  %292 = load i32, i32* @mc_filter, align 4
  %293 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %291, i32 %292)
  %294 = load i32, i32* @rx_filter, align 4
  %295 = load i32, i32* @dup_filter, align 4
  %296 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %294, i32 %295)
  %297 = load i32, i32* @rx_filter, align 4
  %298 = load i32, i32* @data_filter, align 4
  %299 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %297, i32 %298)
  %300 = load i32, i32* @rx_filter, align 4
  %301 = load i32, i32* @ibss_filter, align 4
  %302 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %300, i32 %301)
  %303 = load i32, i32* @rx_filter, align 4
  %304 = load i32, i32* @protection_filter, align 4
  %305 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %303, i32 %304)
  %306 = load i32, i32* @rx_filter, align 4
  %307 = load i32, i32* @accum_arp_pend_requests, align 4
  %308 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %306, i32 %307)
  %309 = load i32, i32* @rx_filter, align 4
  %310 = load i32, i32* @max_arp_queue_dep, align 4
  %311 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %309, i32 %310)
  %312 = load i32, i32* @rx_rate, align 4
  %313 = load i32, i32* @rx_frames_per_rates, align 4
  %314 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %312, i32 %313)
  %315 = load i32, i32* @aggr_size, align 4
  %316 = load i32, i32* @tx_agg_rate, align 4
  %317 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %315, i32 %316)
  %318 = load i32, i32* @aggr_size, align 4
  %319 = load i32, i32* @tx_agg_len, align 4
  %320 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %318, i32 %319)
  %321 = load i32, i32* @aggr_size, align 4
  %322 = load i32, i32* @rx_size, align 4
  %323 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %321, i32 %322)
  %324 = load i32, i32* @pipeline, align 4
  %325 = load i32, i32* @hs_tx_stat_fifo_int, align 4
  %326 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %324, i32 %325)
  %327 = load i32, i32* @pipeline, align 4
  %328 = load i32, i32* @enc_tx_stat_fifo_int, align 4
  %329 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %327, i32 %328)
  %330 = load i32, i32* @pipeline, align 4
  %331 = load i32, i32* @enc_rx_stat_fifo_int, align 4
  %332 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %330, i32 %331)
  %333 = load i32, i32* @pipeline, align 4
  %334 = load i32, i32* @rx_complete_stat_fifo_int, align 4
  %335 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %333, i32 %334)
  %336 = load i32, i32* @pipeline, align 4
  %337 = load i32, i32* @pre_proc_swi, align 4
  %338 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %336, i32 %337)
  %339 = load i32, i32* @pipeline, align 4
  %340 = load i32, i32* @post_proc_swi, align 4
  %341 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %339, i32 %340)
  %342 = load i32, i32* @pipeline, align 4
  %343 = load i32, i32* @sec_frag_swi, align 4
  %344 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %342, i32 %343)
  %345 = load i32, i32* @pipeline, align 4
  %346 = load i32, i32* @pre_to_defrag_swi, align 4
  %347 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %345, i32 %346)
  %348 = load i32, i32* @pipeline, align 4
  %349 = load i32, i32* @defrag_to_rx_xfer_swi, align 4
  %350 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %348, i32 %349)
  %351 = load i32, i32* @pipeline, align 4
  %352 = load i32, i32* @dec_packet_in, align 4
  %353 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %351, i32 %352)
  %354 = load i32, i32* @pipeline, align 4
  %355 = load i32, i32* @dec_packet_in_fifo_full, align 4
  %356 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %354, i32 %355)
  %357 = load i32, i32* @pipeline, align 4
  %358 = load i32, i32* @dec_packet_out, align 4
  %359 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %357, i32 %358)
  %360 = load i32, i32* @pipeline, align 4
  %361 = load i32, i32* @pipeline_fifo_full, align 4
  %362 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %360, i32 %361)
  %363 = load i32, i32* @diversity, align 4
  %364 = load i32, i32* @num_of_packets_per_ant, align 4
  %365 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %363, i32 %364)
  %366 = load i32, i32* @diversity, align 4
  %367 = load i32, i32* @total_num_of_toggles, align 4
  %368 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %366, i32 %367)
  %369 = load i32, i32* @thermal, align 4
  %370 = load i32, i32* @irq_thr_low, align 4
  %371 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %369, i32 %370)
  %372 = load i32, i32* @thermal, align 4
  %373 = load i32, i32* @irq_thr_high, align 4
  %374 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %372, i32 %373)
  %375 = load i32, i32* @thermal, align 4
  %376 = load i32, i32* @tx_stop, align 4
  %377 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %375, i32 %376)
  %378 = load i32, i32* @thermal, align 4
  %379 = load i32, i32* @tx_resume, align 4
  %380 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %378, i32 %379)
  %381 = load i32, i32* @thermal, align 4
  %382 = load i32, i32* @false_irq, align 4
  %383 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %381, i32 %382)
  %384 = load i32, i32* @thermal, align 4
  %385 = load i32, i32* @adc_source_unexpected, align 4
  %386 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %384, i32 %385)
  %387 = load i32, i32* @calib, align 4
  %388 = load i32, i32* @fail_count, align 4
  %389 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %387, i32 %388)
  %390 = load i32, i32* @calib, align 4
  %391 = load i32, i32* @calib_count, align 4
  %392 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %390, i32 %391)
  %393 = load i32, i32* @roaming, align 4
  %394 = load i32, i32* @rssi_level, align 4
  %395 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %393, i32 %394)
  %396 = load i32, i32* @dfs, align 4
  %397 = load i32, i32* @num_of_radar_detections, align 4
  %398 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %396, i32 %397)
  %399 = load i32, i32* @conf, align 4
  %400 = load %struct.dentry*, %struct.dentry** %6, align 8
  %401 = call i32 @DEBUGFS_ADD(i32 %399, %struct.dentry* %400)
  %402 = load i32, i32* @radar_detection, align 4
  %403 = load %struct.dentry*, %struct.dentry** %6, align 8
  %404 = call i32 @DEBUGFS_ADD(i32 %402, %struct.dentry* %403)
  %405 = load i32, i32* @dynamic_fw_traces, align 4
  %406 = load %struct.dentry*, %struct.dentry** %6, align 8
  %407 = call i32 @DEBUGFS_ADD(i32 %405, %struct.dentry* %406)
  ret i32 0
}

declare dso_local %struct.dentry* @debugfs_create_dir(i8*, %struct.dentry*) #1

declare dso_local i32 @DEBUGFS_ADD(i32, %struct.dentry*) #1

declare dso_local i32 @DEBUGFS_FWSTATS_ADD(i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
