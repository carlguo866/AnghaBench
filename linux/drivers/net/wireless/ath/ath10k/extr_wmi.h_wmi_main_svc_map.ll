; ModuleID = '/home/carl/AnghaBench/linux/drivers/net/wireless/ath/ath10k/extr_wmi.h_wmi_main_svc_map.c'
source_filename = "/home/carl/AnghaBench/linux/drivers/net/wireless/ath/ath10k/extr_wmi.h_wmi_main_svc_map.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@WMI_MAIN_SERVICE_BEACON_OFFLOAD = common dso_local global i32 0, align 4
@WMI_SERVICE_BEACON_OFFLOAD = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_SCAN_OFFLOAD = common dso_local global i32 0, align 4
@WMI_SERVICE_SCAN_OFFLOAD = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_ROAM_OFFLOAD = common dso_local global i32 0, align 4
@WMI_SERVICE_ROAM_OFFLOAD = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_BCN_MISS_OFFLOAD = common dso_local global i32 0, align 4
@WMI_SERVICE_BCN_MISS_OFFLOAD = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_STA_PWRSAVE = common dso_local global i32 0, align 4
@WMI_SERVICE_STA_PWRSAVE = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_STA_ADVANCED_PWRSAVE = common dso_local global i32 0, align 4
@WMI_SERVICE_STA_ADVANCED_PWRSAVE = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_AP_UAPSD = common dso_local global i32 0, align 4
@WMI_SERVICE_AP_UAPSD = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_AP_DFS = common dso_local global i32 0, align 4
@WMI_SERVICE_AP_DFS = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_11AC = common dso_local global i32 0, align 4
@WMI_SERVICE_11AC = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_BLOCKACK = common dso_local global i32 0, align 4
@WMI_SERVICE_BLOCKACK = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_PHYERR = common dso_local global i32 0, align 4
@WMI_SERVICE_PHYERR = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_BCN_FILTER = common dso_local global i32 0, align 4
@WMI_SERVICE_BCN_FILTER = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_RTT = common dso_local global i32 0, align 4
@WMI_SERVICE_RTT = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_RATECTRL = common dso_local global i32 0, align 4
@WMI_SERVICE_RATECTRL = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_WOW = common dso_local global i32 0, align 4
@WMI_SERVICE_WOW = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_RATECTRL_CACHE = common dso_local global i32 0, align 4
@WMI_SERVICE_RATECTRL_CACHE = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_IRAM_TIDS = common dso_local global i32 0, align 4
@WMI_SERVICE_IRAM_TIDS = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_ARPNS_OFFLOAD = common dso_local global i32 0, align 4
@WMI_SERVICE_ARPNS_OFFLOAD = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_NLO = common dso_local global i32 0, align 4
@WMI_SERVICE_NLO = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_GTK_OFFLOAD = common dso_local global i32 0, align 4
@WMI_SERVICE_GTK_OFFLOAD = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_SCAN_SCH = common dso_local global i32 0, align 4
@WMI_SERVICE_SCAN_SCH = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_CSA_OFFLOAD = common dso_local global i32 0, align 4
@WMI_SERVICE_CSA_OFFLOAD = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_CHATTER = common dso_local global i32 0, align 4
@WMI_SERVICE_CHATTER = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_COEX_FREQAVOID = common dso_local global i32 0, align 4
@WMI_SERVICE_COEX_FREQAVOID = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_PACKET_POWER_SAVE = common dso_local global i32 0, align 4
@WMI_SERVICE_PACKET_POWER_SAVE = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_FORCE_FW_HANG = common dso_local global i32 0, align 4
@WMI_SERVICE_FORCE_FW_HANG = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_GPIO = common dso_local global i32 0, align 4
@WMI_SERVICE_GPIO = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_STA_DTIM_PS_MODULATED_DTIM = common dso_local global i32 0, align 4
@WMI_SERVICE_STA_DTIM_PS_MODULATED_DTIM = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_STA_UAPSD_BASIC_AUTO_TRIG = common dso_local global i32 0, align 4
@WMI_SERVICE_STA_UAPSD_BASIC_AUTO_TRIG = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_STA_UAPSD_VAR_AUTO_TRIG = common dso_local global i32 0, align 4
@WMI_SERVICE_STA_UAPSD_VAR_AUTO_TRIG = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_STA_KEEP_ALIVE = common dso_local global i32 0, align 4
@WMI_SERVICE_STA_KEEP_ALIVE = common dso_local global i32 0, align 4
@WMI_MAIN_SERVICE_TX_ENCAP = common dso_local global i32 0, align 4
@WMI_SERVICE_TX_ENCAP = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i32*, i64*, i64)* @wmi_main_svc_map to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @wmi_main_svc_map(i32* %0, i64* %1, i64 %2) #0 {
  %4 = alloca i32*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load i32, i32* @WMI_MAIN_SERVICE_BEACON_OFFLOAD, align 4
  %8 = load i32, i32* @WMI_SERVICE_BEACON_OFFLOAD, align 4
  %9 = load i64, i64* %6, align 8
  %10 = call i32 @SVCMAP(i32 %7, i32 %8, i64 %9)
  %11 = load i32, i32* @WMI_MAIN_SERVICE_SCAN_OFFLOAD, align 4
  %12 = load i32, i32* @WMI_SERVICE_SCAN_OFFLOAD, align 4
  %13 = load i64, i64* %6, align 8
  %14 = call i32 @SVCMAP(i32 %11, i32 %12, i64 %13)
  %15 = load i32, i32* @WMI_MAIN_SERVICE_ROAM_OFFLOAD, align 4
  %16 = load i32, i32* @WMI_SERVICE_ROAM_OFFLOAD, align 4
  %17 = load i64, i64* %6, align 8
  %18 = call i32 @SVCMAP(i32 %15, i32 %16, i64 %17)
  %19 = load i32, i32* @WMI_MAIN_SERVICE_BCN_MISS_OFFLOAD, align 4
  %20 = load i32, i32* @WMI_SERVICE_BCN_MISS_OFFLOAD, align 4
  %21 = load i64, i64* %6, align 8
  %22 = call i32 @SVCMAP(i32 %19, i32 %20, i64 %21)
  %23 = load i32, i32* @WMI_MAIN_SERVICE_STA_PWRSAVE, align 4
  %24 = load i32, i32* @WMI_SERVICE_STA_PWRSAVE, align 4
  %25 = load i64, i64* %6, align 8
  %26 = call i32 @SVCMAP(i32 %23, i32 %24, i64 %25)
  %27 = load i32, i32* @WMI_MAIN_SERVICE_STA_ADVANCED_PWRSAVE, align 4
  %28 = load i32, i32* @WMI_SERVICE_STA_ADVANCED_PWRSAVE, align 4
  %29 = load i64, i64* %6, align 8
  %30 = call i32 @SVCMAP(i32 %27, i32 %28, i64 %29)
  %31 = load i32, i32* @WMI_MAIN_SERVICE_AP_UAPSD, align 4
  %32 = load i32, i32* @WMI_SERVICE_AP_UAPSD, align 4
  %33 = load i64, i64* %6, align 8
  %34 = call i32 @SVCMAP(i32 %31, i32 %32, i64 %33)
  %35 = load i32, i32* @WMI_MAIN_SERVICE_AP_DFS, align 4
  %36 = load i32, i32* @WMI_SERVICE_AP_DFS, align 4
  %37 = load i64, i64* %6, align 8
  %38 = call i32 @SVCMAP(i32 %35, i32 %36, i64 %37)
  %39 = load i32, i32* @WMI_MAIN_SERVICE_11AC, align 4
  %40 = load i32, i32* @WMI_SERVICE_11AC, align 4
  %41 = load i64, i64* %6, align 8
  %42 = call i32 @SVCMAP(i32 %39, i32 %40, i64 %41)
  %43 = load i32, i32* @WMI_MAIN_SERVICE_BLOCKACK, align 4
  %44 = load i32, i32* @WMI_SERVICE_BLOCKACK, align 4
  %45 = load i64, i64* %6, align 8
  %46 = call i32 @SVCMAP(i32 %43, i32 %44, i64 %45)
  %47 = load i32, i32* @WMI_MAIN_SERVICE_PHYERR, align 4
  %48 = load i32, i32* @WMI_SERVICE_PHYERR, align 4
  %49 = load i64, i64* %6, align 8
  %50 = call i32 @SVCMAP(i32 %47, i32 %48, i64 %49)
  %51 = load i32, i32* @WMI_MAIN_SERVICE_BCN_FILTER, align 4
  %52 = load i32, i32* @WMI_SERVICE_BCN_FILTER, align 4
  %53 = load i64, i64* %6, align 8
  %54 = call i32 @SVCMAP(i32 %51, i32 %52, i64 %53)
  %55 = load i32, i32* @WMI_MAIN_SERVICE_RTT, align 4
  %56 = load i32, i32* @WMI_SERVICE_RTT, align 4
  %57 = load i64, i64* %6, align 8
  %58 = call i32 @SVCMAP(i32 %55, i32 %56, i64 %57)
  %59 = load i32, i32* @WMI_MAIN_SERVICE_RATECTRL, align 4
  %60 = load i32, i32* @WMI_SERVICE_RATECTRL, align 4
  %61 = load i64, i64* %6, align 8
  %62 = call i32 @SVCMAP(i32 %59, i32 %60, i64 %61)
  %63 = load i32, i32* @WMI_MAIN_SERVICE_WOW, align 4
  %64 = load i32, i32* @WMI_SERVICE_WOW, align 4
  %65 = load i64, i64* %6, align 8
  %66 = call i32 @SVCMAP(i32 %63, i32 %64, i64 %65)
  %67 = load i32, i32* @WMI_MAIN_SERVICE_RATECTRL_CACHE, align 4
  %68 = load i32, i32* @WMI_SERVICE_RATECTRL_CACHE, align 4
  %69 = load i64, i64* %6, align 8
  %70 = call i32 @SVCMAP(i32 %67, i32 %68, i64 %69)
  %71 = load i32, i32* @WMI_MAIN_SERVICE_IRAM_TIDS, align 4
  %72 = load i32, i32* @WMI_SERVICE_IRAM_TIDS, align 4
  %73 = load i64, i64* %6, align 8
  %74 = call i32 @SVCMAP(i32 %71, i32 %72, i64 %73)
  %75 = load i32, i32* @WMI_MAIN_SERVICE_ARPNS_OFFLOAD, align 4
  %76 = load i32, i32* @WMI_SERVICE_ARPNS_OFFLOAD, align 4
  %77 = load i64, i64* %6, align 8
  %78 = call i32 @SVCMAP(i32 %75, i32 %76, i64 %77)
  %79 = load i32, i32* @WMI_MAIN_SERVICE_NLO, align 4
  %80 = load i32, i32* @WMI_SERVICE_NLO, align 4
  %81 = load i64, i64* %6, align 8
  %82 = call i32 @SVCMAP(i32 %79, i32 %80, i64 %81)
  %83 = load i32, i32* @WMI_MAIN_SERVICE_GTK_OFFLOAD, align 4
  %84 = load i32, i32* @WMI_SERVICE_GTK_OFFLOAD, align 4
  %85 = load i64, i64* %6, align 8
  %86 = call i32 @SVCMAP(i32 %83, i32 %84, i64 %85)
  %87 = load i32, i32* @WMI_MAIN_SERVICE_SCAN_SCH, align 4
  %88 = load i32, i32* @WMI_SERVICE_SCAN_SCH, align 4
  %89 = load i64, i64* %6, align 8
  %90 = call i32 @SVCMAP(i32 %87, i32 %88, i64 %89)
  %91 = load i32, i32* @WMI_MAIN_SERVICE_CSA_OFFLOAD, align 4
  %92 = load i32, i32* @WMI_SERVICE_CSA_OFFLOAD, align 4
  %93 = load i64, i64* %6, align 8
  %94 = call i32 @SVCMAP(i32 %91, i32 %92, i64 %93)
  %95 = load i32, i32* @WMI_MAIN_SERVICE_CHATTER, align 4
  %96 = load i32, i32* @WMI_SERVICE_CHATTER, align 4
  %97 = load i64, i64* %6, align 8
  %98 = call i32 @SVCMAP(i32 %95, i32 %96, i64 %97)
  %99 = load i32, i32* @WMI_MAIN_SERVICE_COEX_FREQAVOID, align 4
  %100 = load i32, i32* @WMI_SERVICE_COEX_FREQAVOID, align 4
  %101 = load i64, i64* %6, align 8
  %102 = call i32 @SVCMAP(i32 %99, i32 %100, i64 %101)
  %103 = load i32, i32* @WMI_MAIN_SERVICE_PACKET_POWER_SAVE, align 4
  %104 = load i32, i32* @WMI_SERVICE_PACKET_POWER_SAVE, align 4
  %105 = load i64, i64* %6, align 8
  %106 = call i32 @SVCMAP(i32 %103, i32 %104, i64 %105)
  %107 = load i32, i32* @WMI_MAIN_SERVICE_FORCE_FW_HANG, align 4
  %108 = load i32, i32* @WMI_SERVICE_FORCE_FW_HANG, align 4
  %109 = load i64, i64* %6, align 8
  %110 = call i32 @SVCMAP(i32 %107, i32 %108, i64 %109)
  %111 = load i32, i32* @WMI_MAIN_SERVICE_GPIO, align 4
  %112 = load i32, i32* @WMI_SERVICE_GPIO, align 4
  %113 = load i64, i64* %6, align 8
  %114 = call i32 @SVCMAP(i32 %111, i32 %112, i64 %113)
  %115 = load i32, i32* @WMI_MAIN_SERVICE_STA_DTIM_PS_MODULATED_DTIM, align 4
  %116 = load i32, i32* @WMI_SERVICE_STA_DTIM_PS_MODULATED_DTIM, align 4
  %117 = load i64, i64* %6, align 8
  %118 = call i32 @SVCMAP(i32 %115, i32 %116, i64 %117)
  %119 = load i32, i32* @WMI_MAIN_SERVICE_STA_UAPSD_BASIC_AUTO_TRIG, align 4
  %120 = load i32, i32* @WMI_SERVICE_STA_UAPSD_BASIC_AUTO_TRIG, align 4
  %121 = load i64, i64* %6, align 8
  %122 = call i32 @SVCMAP(i32 %119, i32 %120, i64 %121)
  %123 = load i32, i32* @WMI_MAIN_SERVICE_STA_UAPSD_VAR_AUTO_TRIG, align 4
  %124 = load i32, i32* @WMI_SERVICE_STA_UAPSD_VAR_AUTO_TRIG, align 4
  %125 = load i64, i64* %6, align 8
  %126 = call i32 @SVCMAP(i32 %123, i32 %124, i64 %125)
  %127 = load i32, i32* @WMI_MAIN_SERVICE_STA_KEEP_ALIVE, align 4
  %128 = load i32, i32* @WMI_SERVICE_STA_KEEP_ALIVE, align 4
  %129 = load i64, i64* %6, align 8
  %130 = call i32 @SVCMAP(i32 %127, i32 %128, i64 %129)
  %131 = load i32, i32* @WMI_MAIN_SERVICE_TX_ENCAP, align 4
  %132 = load i32, i32* @WMI_SERVICE_TX_ENCAP, align 4
  %133 = load i64, i64* %6, align 8
  %134 = call i32 @SVCMAP(i32 %131, i32 %132, i64 %133)
  ret void
}

declare dso_local i32 @SVCMAP(i32, i32, i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
