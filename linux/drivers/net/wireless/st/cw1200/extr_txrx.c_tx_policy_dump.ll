; ModuleID = '/home/carl/AnghaBench/linux/drivers/net/wireless/st/cw1200/extr_txrx.c_tx_policy_dump.c'
source_filename = "/home/carl/AnghaBench/linux/drivers/net/wireless/st/cw1200/extr_txrx.c_tx_policy_dump.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.tx_policy = type { i32*, i32 }

@.str = private unnamed_addr constant [116 x i8] c"[TX policy] %.1X%.1X%.1X%.1X%.1X%.1X%.1X%.1X %.1X%.1X%.1X%.1X%.1X%.1X%.1X%.1X %.1X%.1X%.1X%.1X%.1X%.1X%.1X%.1X: %d\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.tx_policy*)* @tx_policy_dump to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @tx_policy_dump(%struct.tx_policy* %0) #0 {
  %2 = alloca %struct.tx_policy*, align 8
  store %struct.tx_policy* %0, %struct.tx_policy** %2, align 8
  %3 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %4 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds i32, i32* %5, i64 0
  %7 = load i32, i32* %6, align 4
  %8 = and i32 %7, 15
  %9 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %10 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds i32, i32* %11, i64 0
  %13 = load i32, i32* %12, align 4
  %14 = ashr i32 %13, 4
  %15 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %16 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %15, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds i32, i32* %17, i64 1
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 15
  %21 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %22 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %21, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = getelementptr inbounds i32, i32* %23, i64 1
  %25 = load i32, i32* %24, align 4
  %26 = ashr i32 %25, 4
  %27 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %28 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %27, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 2
  %31 = load i32, i32* %30, align 4
  %32 = and i32 %31, 15
  %33 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %34 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = getelementptr inbounds i32, i32* %35, i64 2
  %37 = load i32, i32* %36, align 4
  %38 = ashr i32 %37, 4
  %39 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %40 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %39, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 3
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 15
  %45 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %46 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %45, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = getelementptr inbounds i32, i32* %47, i64 3
  %49 = load i32, i32* %48, align 4
  %50 = ashr i32 %49, 4
  %51 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %52 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %51, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 4
  %55 = load i32, i32* %54, align 4
  %56 = and i32 %55, 15
  %57 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %58 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %57, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = getelementptr inbounds i32, i32* %59, i64 4
  %61 = load i32, i32* %60, align 4
  %62 = ashr i32 %61, 4
  %63 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %64 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %63, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  %66 = getelementptr inbounds i32, i32* %65, i64 5
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 15
  %69 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %70 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %69, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = getelementptr inbounds i32, i32* %71, i64 5
  %73 = load i32, i32* %72, align 4
  %74 = ashr i32 %73, 4
  %75 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %76 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %75, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  %78 = getelementptr inbounds i32, i32* %77, i64 6
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %79, 15
  %81 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %82 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %81, i32 0, i32 0
  %83 = load i32*, i32** %82, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 6
  %85 = load i32, i32* %84, align 4
  %86 = ashr i32 %85, 4
  %87 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %88 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %87, i32 0, i32 0
  %89 = load i32*, i32** %88, align 8
  %90 = getelementptr inbounds i32, i32* %89, i64 7
  %91 = load i32, i32* %90, align 4
  %92 = and i32 %91, 15
  %93 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %94 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %93, i32 0, i32 0
  %95 = load i32*, i32** %94, align 8
  %96 = getelementptr inbounds i32, i32* %95, i64 7
  %97 = load i32, i32* %96, align 4
  %98 = ashr i32 %97, 4
  %99 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %100 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %99, i32 0, i32 0
  %101 = load i32*, i32** %100, align 8
  %102 = getelementptr inbounds i32, i32* %101, i64 8
  %103 = load i32, i32* %102, align 4
  %104 = and i32 %103, 15
  %105 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %106 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %105, i32 0, i32 0
  %107 = load i32*, i32** %106, align 8
  %108 = getelementptr inbounds i32, i32* %107, i64 8
  %109 = load i32, i32* %108, align 4
  %110 = ashr i32 %109, 4
  %111 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %112 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %111, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = getelementptr inbounds i32, i32* %113, i64 9
  %115 = load i32, i32* %114, align 4
  %116 = and i32 %115, 15
  %117 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %118 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %117, i32 0, i32 0
  %119 = load i32*, i32** %118, align 8
  %120 = getelementptr inbounds i32, i32* %119, i64 9
  %121 = load i32, i32* %120, align 4
  %122 = ashr i32 %121, 4
  %123 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %124 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %123, i32 0, i32 0
  %125 = load i32*, i32** %124, align 8
  %126 = getelementptr inbounds i32, i32* %125, i64 10
  %127 = load i32, i32* %126, align 4
  %128 = and i32 %127, 15
  %129 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %130 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %129, i32 0, i32 0
  %131 = load i32*, i32** %130, align 8
  %132 = getelementptr inbounds i32, i32* %131, i64 10
  %133 = load i32, i32* %132, align 4
  %134 = ashr i32 %133, 4
  %135 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %136 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %135, i32 0, i32 0
  %137 = load i32*, i32** %136, align 8
  %138 = getelementptr inbounds i32, i32* %137, i64 11
  %139 = load i32, i32* %138, align 4
  %140 = and i32 %139, 15
  %141 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %142 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %141, i32 0, i32 0
  %143 = load i32*, i32** %142, align 8
  %144 = getelementptr inbounds i32, i32* %143, i64 11
  %145 = load i32, i32* %144, align 4
  %146 = ashr i32 %145, 4
  %147 = load %struct.tx_policy*, %struct.tx_policy** %2, align 8
  %148 = getelementptr inbounds %struct.tx_policy, %struct.tx_policy* %147, i32 0, i32 1
  %149 = load i32, i32* %148, align 8
  %150 = call i32 @pr_debug(i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str, i64 0, i64 0), i32 %8, i32 %14, i32 %20, i32 %26, i32 %32, i32 %38, i32 %44, i32 %50, i32 %56, i32 %62, i32 %68, i32 %74, i32 %80, i32 %86, i32 %92, i32 %98, i32 %104, i32 %110, i32 %116, i32 %122, i32 %128, i32 %134, i32 %140, i32 %146, i32 %149)
  ret void
}

declare dso_local i32 @pr_debug(i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
