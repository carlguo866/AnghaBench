; ModuleID = '/home/carl/AnghaBench/linux/drivers/infiniband/hw/ocrdma/extr_ocrdma_stats.c_ocrdma_driver_dbg_stats.c'
source_filename = "/home/carl/AnghaBench/linux/drivers/infiniband/hw/ocrdma/extr_ocrdma_stats.c_ocrdma_driver_dbg_stats.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ocrdma_dev = type { %struct.TYPE_6__*, %struct.TYPE_5__*, %struct.TYPE_4__ }
%struct.TYPE_6__ = type { i64 }
%struct.TYPE_5__ = type { i64 }
%struct.TYPE_4__ = type { i8* }

@OCRDMA_MAX_DBGFS_MEM = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [13 x i8] c"async_cq_err\00", align 1
@OCRDMA_CQ_ERROR = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [21 x i8] c"async_cq_overrun_err\00", align 1
@OCRDMA_CQ_OVERRUN_ERROR = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [19 x i8] c"async_cq_qpcat_err\00", align 1
@OCRDMA_CQ_QPCAT_ERROR = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [20 x i8] c"async_qp_access_err\00", align 1
@OCRDMA_QP_ACCESS_ERROR = common dso_local global i64 0, align 8
@.str.4 = private unnamed_addr constant [23 x i8] c"async_qp_commm_est_evt\00", align 1
@OCRDMA_QP_COMM_EST_EVENT = common dso_local global i64 0, align 8
@.str.5 = private unnamed_addr constant [21 x i8] c"async_sq_drained_evt\00", align 1
@OCRDMA_SQ_DRAINED_EVENT = common dso_local global i64 0, align 8
@.str.6 = private unnamed_addr constant [20 x i8] c"async_dev_fatal_evt\00", align 1
@OCRDMA_DEVICE_FATAL_EVENT = common dso_local global i64 0, align 8
@.str.7 = private unnamed_addr constant [17 x i8] c"async_srqcat_err\00", align 1
@OCRDMA_SRQCAT_ERROR = common dso_local global i64 0, align 8
@.str.8 = private unnamed_addr constant [20 x i8] c"async_srq_limit_evt\00", align 1
@OCRDMA_SRQ_LIMIT_EVENT = common dso_local global i64 0, align 8
@.str.9 = private unnamed_addr constant [22 x i8] c"async_qp_last_wqe_evt\00", align 1
@OCRDMA_QP_LAST_WQE_EVENT = common dso_local global i64 0, align 8
@.str.10 = private unnamed_addr constant [16 x i8] c"cqe_loc_len_err\00", align 1
@OCRDMA_CQE_LOC_LEN_ERR = common dso_local global i64 0, align 8
@.str.11 = private unnamed_addr constant [18 x i8] c"cqe_loc_qp_op_err\00", align 1
@OCRDMA_CQE_LOC_QP_OP_ERR = common dso_local global i64 0, align 8
@.str.12 = private unnamed_addr constant [19 x i8] c"cqe_loc_eec_op_err\00", align 1
@OCRDMA_CQE_LOC_EEC_OP_ERR = common dso_local global i64 0, align 8
@.str.13 = private unnamed_addr constant [17 x i8] c"cqe_loc_prot_err\00", align 1
@OCRDMA_CQE_LOC_PROT_ERR = common dso_local global i64 0, align 8
@.str.14 = private unnamed_addr constant [17 x i8] c"cqe_wr_flush_err\00", align 1
@OCRDMA_CQE_WR_FLUSH_ERR = common dso_local global i64 0, align 8
@.str.15 = private unnamed_addr constant [16 x i8] c"cqe_mw_bind_err\00", align 1
@OCRDMA_CQE_MW_BIND_ERR = common dso_local global i64 0, align 8
@.str.16 = private unnamed_addr constant [17 x i8] c"cqe_bad_resp_err\00", align 1
@OCRDMA_CQE_BAD_RESP_ERR = common dso_local global i64 0, align 8
@.str.17 = private unnamed_addr constant [19 x i8] c"cqe_loc_access_err\00", align 1
@OCRDMA_CQE_LOC_ACCESS_ERR = common dso_local global i64 0, align 8
@.str.18 = private unnamed_addr constant [20 x i8] c"cqe_rem_inv_req_err\00", align 1
@OCRDMA_CQE_REM_INV_REQ_ERR = common dso_local global i64 0, align 8
@.str.19 = private unnamed_addr constant [19 x i8] c"cqe_rem_access_err\00", align 1
@OCRDMA_CQE_REM_ACCESS_ERR = common dso_local global i64 0, align 8
@.str.20 = private unnamed_addr constant [15 x i8] c"cqe_rem_op_err\00", align 1
@OCRDMA_CQE_REM_OP_ERR = common dso_local global i64 0, align 8
@.str.21 = private unnamed_addr constant [18 x i8] c"cqe_retry_exc_err\00", align 1
@OCRDMA_CQE_RETRY_EXC_ERR = common dso_local global i64 0, align 8
@.str.22 = private unnamed_addr constant [22 x i8] c"cqe_rnr_retry_exc_err\00", align 1
@OCRDMA_CQE_RNR_RETRY_EXC_ERR = common dso_local global i64 0, align 8
@.str.23 = private unnamed_addr constant [21 x i8] c"cqe_loc_rdd_viol_err\00", align 1
@OCRDMA_CQE_LOC_RDD_VIOL_ERR = common dso_local global i64 0, align 8
@.str.24 = private unnamed_addr constant [23 x i8] c"cqe_rem_inv_rd_req_err\00", align 1
@OCRDMA_CQE_REM_INV_RD_REQ_ERR = common dso_local global i64 0, align 8
@.str.25 = private unnamed_addr constant [18 x i8] c"cqe_rem_abort_err\00", align 1
@OCRDMA_CQE_REM_ABORT_ERR = common dso_local global i64 0, align 8
@.str.26 = private unnamed_addr constant [17 x i8] c"cqe_inv_eecn_err\00", align 1
@OCRDMA_CQE_INV_EECN_ERR = common dso_local global i64 0, align 8
@.str.27 = private unnamed_addr constant [22 x i8] c"cqe_inv_eec_state_err\00", align 1
@OCRDMA_CQE_INV_EEC_STATE_ERR = common dso_local global i64 0, align 8
@.str.28 = private unnamed_addr constant [14 x i8] c"cqe_fatal_err\00", align 1
@OCRDMA_CQE_FATAL_ERR = common dso_local global i64 0, align 8
@.str.29 = private unnamed_addr constant [21 x i8] c"cqe_resp_timeout_err\00", align 1
@OCRDMA_CQE_RESP_TIMEOUT_ERR = common dso_local global i64 0, align 8
@.str.30 = private unnamed_addr constant [16 x i8] c"cqe_general_err\00", align 1
@OCRDMA_CQE_GENERAL_ERR = common dso_local global i64 0, align 8
@llvm.used = appending global [1 x i8*] [i8* bitcast (i8* (%struct.ocrdma_dev*)* @ocrdma_driver_dbg_stats to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i8* @ocrdma_driver_dbg_stats(%struct.ocrdma_dev* %0) #0 {
  %2 = alloca %struct.ocrdma_dev*, align 8
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store %struct.ocrdma_dev* %0, %struct.ocrdma_dev** %2, align 8
  %5 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %6 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %5, i32 0, i32 2
  %7 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %6, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  store i8* %8, i8** %3, align 8
  %9 = load i8*, i8** %3, align 8
  %10 = load i32, i32* @OCRDMA_MAX_DBGFS_MEM, align 4
  %11 = call i32 @memset(i8* %9, i32 0, i32 %10)
  %12 = load i8*, i8** %3, align 8
  store i8* %12, i8** %4, align 8
  %13 = load i8*, i8** %3, align 8
  %14 = load i8*, i8** %4, align 8
  %15 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %16 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %15, i32 0, i32 1
  %17 = load %struct.TYPE_5__*, %struct.TYPE_5__** %16, align 8
  %18 = load i64, i64* @OCRDMA_CQ_ERROR, align 8
  %19 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %17, i64 %18
  %20 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %19, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = trunc i64 %21 to i32
  %23 = call i32 @ocrdma_add_stat(i8* %13, i8* %14, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i32 %22)
  %24 = load i8*, i8** %4, align 8
  %25 = sext i32 %23 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  store i8* %26, i8** %4, align 8
  %27 = load i8*, i8** %3, align 8
  %28 = load i8*, i8** %4, align 8
  %29 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %30 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %29, i32 0, i32 1
  %31 = load %struct.TYPE_5__*, %struct.TYPE_5__** %30, align 8
  %32 = load i64, i64* @OCRDMA_CQ_OVERRUN_ERROR, align 8
  %33 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %31, i64 %32
  %34 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %33, i32 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = trunc i64 %35 to i32
  %37 = call i32 @ocrdma_add_stat(i8* %27, i8* %28, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i32 %36)
  %38 = load i8*, i8** %4, align 8
  %39 = sext i32 %37 to i64
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  store i8* %40, i8** %4, align 8
  %41 = load i8*, i8** %3, align 8
  %42 = load i8*, i8** %4, align 8
  %43 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %44 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %43, i32 0, i32 1
  %45 = load %struct.TYPE_5__*, %struct.TYPE_5__** %44, align 8
  %46 = load i64, i64* @OCRDMA_CQ_QPCAT_ERROR, align 8
  %47 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %45, i64 %46
  %48 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %47, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = trunc i64 %49 to i32
  %51 = call i32 @ocrdma_add_stat(i8* %41, i8* %42, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i32 %50)
  %52 = load i8*, i8** %4, align 8
  %53 = sext i32 %51 to i64
  %54 = getelementptr inbounds i8, i8* %52, i64 %53
  store i8* %54, i8** %4, align 8
  %55 = load i8*, i8** %3, align 8
  %56 = load i8*, i8** %4, align 8
  %57 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %58 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %57, i32 0, i32 1
  %59 = load %struct.TYPE_5__*, %struct.TYPE_5__** %58, align 8
  %60 = load i64, i64* @OCRDMA_QP_ACCESS_ERROR, align 8
  %61 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %59, i64 %60
  %62 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %61, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = trunc i64 %63 to i32
  %65 = call i32 @ocrdma_add_stat(i8* %55, i8* %56, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0), i32 %64)
  %66 = load i8*, i8** %4, align 8
  %67 = sext i32 %65 to i64
  %68 = getelementptr inbounds i8, i8* %66, i64 %67
  store i8* %68, i8** %4, align 8
  %69 = load i8*, i8** %3, align 8
  %70 = load i8*, i8** %4, align 8
  %71 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %72 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %71, i32 0, i32 1
  %73 = load %struct.TYPE_5__*, %struct.TYPE_5__** %72, align 8
  %74 = load i64, i64* @OCRDMA_QP_COMM_EST_EVENT, align 8
  %75 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %73, i64 %74
  %76 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %75, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = trunc i64 %77 to i32
  %79 = call i32 @ocrdma_add_stat(i8* %69, i8* %70, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i32 %78)
  %80 = load i8*, i8** %4, align 8
  %81 = sext i32 %79 to i64
  %82 = getelementptr inbounds i8, i8* %80, i64 %81
  store i8* %82, i8** %4, align 8
  %83 = load i8*, i8** %3, align 8
  %84 = load i8*, i8** %4, align 8
  %85 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %86 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %85, i32 0, i32 1
  %87 = load %struct.TYPE_5__*, %struct.TYPE_5__** %86, align 8
  %88 = load i64, i64* @OCRDMA_SQ_DRAINED_EVENT, align 8
  %89 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %87, i64 %88
  %90 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %89, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = trunc i64 %91 to i32
  %93 = call i32 @ocrdma_add_stat(i8* %83, i8* %84, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i32 %92)
  %94 = load i8*, i8** %4, align 8
  %95 = sext i32 %93 to i64
  %96 = getelementptr inbounds i8, i8* %94, i64 %95
  store i8* %96, i8** %4, align 8
  %97 = load i8*, i8** %3, align 8
  %98 = load i8*, i8** %4, align 8
  %99 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %100 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %99, i32 0, i32 1
  %101 = load %struct.TYPE_5__*, %struct.TYPE_5__** %100, align 8
  %102 = load i64, i64* @OCRDMA_DEVICE_FATAL_EVENT, align 8
  %103 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %101, i64 %102
  %104 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %103, i32 0, i32 0
  %105 = load i64, i64* %104, align 8
  %106 = trunc i64 %105 to i32
  %107 = call i32 @ocrdma_add_stat(i8* %97, i8* %98, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i32 %106)
  %108 = load i8*, i8** %4, align 8
  %109 = sext i32 %107 to i64
  %110 = getelementptr inbounds i8, i8* %108, i64 %109
  store i8* %110, i8** %4, align 8
  %111 = load i8*, i8** %3, align 8
  %112 = load i8*, i8** %4, align 8
  %113 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %114 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %113, i32 0, i32 1
  %115 = load %struct.TYPE_5__*, %struct.TYPE_5__** %114, align 8
  %116 = load i64, i64* @OCRDMA_SRQCAT_ERROR, align 8
  %117 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %115, i64 %116
  %118 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %117, i32 0, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = trunc i64 %119 to i32
  %121 = call i32 @ocrdma_add_stat(i8* %111, i8* %112, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i32 %120)
  %122 = load i8*, i8** %4, align 8
  %123 = sext i32 %121 to i64
  %124 = getelementptr inbounds i8, i8* %122, i64 %123
  store i8* %124, i8** %4, align 8
  %125 = load i8*, i8** %3, align 8
  %126 = load i8*, i8** %4, align 8
  %127 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %128 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %127, i32 0, i32 1
  %129 = load %struct.TYPE_5__*, %struct.TYPE_5__** %128, align 8
  %130 = load i64, i64* @OCRDMA_SRQ_LIMIT_EVENT, align 8
  %131 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %129, i64 %130
  %132 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %131, i32 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = trunc i64 %133 to i32
  %135 = call i32 @ocrdma_add_stat(i8* %125, i8* %126, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i32 %134)
  %136 = load i8*, i8** %4, align 8
  %137 = sext i32 %135 to i64
  %138 = getelementptr inbounds i8, i8* %136, i64 %137
  store i8* %138, i8** %4, align 8
  %139 = load i8*, i8** %3, align 8
  %140 = load i8*, i8** %4, align 8
  %141 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %142 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %141, i32 0, i32 1
  %143 = load %struct.TYPE_5__*, %struct.TYPE_5__** %142, align 8
  %144 = load i64, i64* @OCRDMA_QP_LAST_WQE_EVENT, align 8
  %145 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %143, i64 %144
  %146 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %145, i32 0, i32 0
  %147 = load i64, i64* %146, align 8
  %148 = trunc i64 %147 to i32
  %149 = call i32 @ocrdma_add_stat(i8* %139, i8* %140, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), i32 %148)
  %150 = load i8*, i8** %4, align 8
  %151 = sext i32 %149 to i64
  %152 = getelementptr inbounds i8, i8* %150, i64 %151
  store i8* %152, i8** %4, align 8
  %153 = load i8*, i8** %3, align 8
  %154 = load i8*, i8** %4, align 8
  %155 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %156 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %155, i32 0, i32 0
  %157 = load %struct.TYPE_6__*, %struct.TYPE_6__** %156, align 8
  %158 = load i64, i64* @OCRDMA_CQE_LOC_LEN_ERR, align 8
  %159 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %157, i64 %158
  %160 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %159, i32 0, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = trunc i64 %161 to i32
  %163 = call i32 @ocrdma_add_stat(i8* %153, i8* %154, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i32 %162)
  %164 = load i8*, i8** %4, align 8
  %165 = sext i32 %163 to i64
  %166 = getelementptr inbounds i8, i8* %164, i64 %165
  store i8* %166, i8** %4, align 8
  %167 = load i8*, i8** %3, align 8
  %168 = load i8*, i8** %4, align 8
  %169 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %170 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %169, i32 0, i32 0
  %171 = load %struct.TYPE_6__*, %struct.TYPE_6__** %170, align 8
  %172 = load i64, i64* @OCRDMA_CQE_LOC_QP_OP_ERR, align 8
  %173 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %171, i64 %172
  %174 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %173, i32 0, i32 0
  %175 = load i64, i64* %174, align 8
  %176 = trunc i64 %175 to i32
  %177 = call i32 @ocrdma_add_stat(i8* %167, i8* %168, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.11, i64 0, i64 0), i32 %176)
  %178 = load i8*, i8** %4, align 8
  %179 = sext i32 %177 to i64
  %180 = getelementptr inbounds i8, i8* %178, i64 %179
  store i8* %180, i8** %4, align 8
  %181 = load i8*, i8** %3, align 8
  %182 = load i8*, i8** %4, align 8
  %183 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %184 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %183, i32 0, i32 0
  %185 = load %struct.TYPE_6__*, %struct.TYPE_6__** %184, align 8
  %186 = load i64, i64* @OCRDMA_CQE_LOC_EEC_OP_ERR, align 8
  %187 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %185, i64 %186
  %188 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %187, i32 0, i32 0
  %189 = load i64, i64* %188, align 8
  %190 = trunc i64 %189 to i32
  %191 = call i32 @ocrdma_add_stat(i8* %181, i8* %182, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 %190)
  %192 = load i8*, i8** %4, align 8
  %193 = sext i32 %191 to i64
  %194 = getelementptr inbounds i8, i8* %192, i64 %193
  store i8* %194, i8** %4, align 8
  %195 = load i8*, i8** %3, align 8
  %196 = load i8*, i8** %4, align 8
  %197 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %198 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %197, i32 0, i32 0
  %199 = load %struct.TYPE_6__*, %struct.TYPE_6__** %198, align 8
  %200 = load i64, i64* @OCRDMA_CQE_LOC_PROT_ERR, align 8
  %201 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %199, i64 %200
  %202 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %201, i32 0, i32 0
  %203 = load i64, i64* %202, align 8
  %204 = trunc i64 %203 to i32
  %205 = call i32 @ocrdma_add_stat(i8* %195, i8* %196, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i32 %204)
  %206 = load i8*, i8** %4, align 8
  %207 = sext i32 %205 to i64
  %208 = getelementptr inbounds i8, i8* %206, i64 %207
  store i8* %208, i8** %4, align 8
  %209 = load i8*, i8** %3, align 8
  %210 = load i8*, i8** %4, align 8
  %211 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %212 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %211, i32 0, i32 0
  %213 = load %struct.TYPE_6__*, %struct.TYPE_6__** %212, align 8
  %214 = load i64, i64* @OCRDMA_CQE_WR_FLUSH_ERR, align 8
  %215 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %213, i64 %214
  %216 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %215, i32 0, i32 0
  %217 = load i64, i64* %216, align 8
  %218 = trunc i64 %217 to i32
  %219 = call i32 @ocrdma_add_stat(i8* %209, i8* %210, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0), i32 %218)
  %220 = load i8*, i8** %4, align 8
  %221 = sext i32 %219 to i64
  %222 = getelementptr inbounds i8, i8* %220, i64 %221
  store i8* %222, i8** %4, align 8
  %223 = load i8*, i8** %3, align 8
  %224 = load i8*, i8** %4, align 8
  %225 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %226 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %225, i32 0, i32 0
  %227 = load %struct.TYPE_6__*, %struct.TYPE_6__** %226, align 8
  %228 = load i64, i64* @OCRDMA_CQE_MW_BIND_ERR, align 8
  %229 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %227, i64 %228
  %230 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %229, i32 0, i32 0
  %231 = load i64, i64* %230, align 8
  %232 = trunc i64 %231 to i32
  %233 = call i32 @ocrdma_add_stat(i8* %223, i8* %224, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0), i32 %232)
  %234 = load i8*, i8** %4, align 8
  %235 = sext i32 %233 to i64
  %236 = getelementptr inbounds i8, i8* %234, i64 %235
  store i8* %236, i8** %4, align 8
  %237 = load i8*, i8** %3, align 8
  %238 = load i8*, i8** %4, align 8
  %239 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %240 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %239, i32 0, i32 0
  %241 = load %struct.TYPE_6__*, %struct.TYPE_6__** %240, align 8
  %242 = load i64, i64* @OCRDMA_CQE_BAD_RESP_ERR, align 8
  %243 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %241, i64 %242
  %244 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %243, i32 0, i32 0
  %245 = load i64, i64* %244, align 8
  %246 = trunc i64 %245 to i32
  %247 = call i32 @ocrdma_add_stat(i8* %237, i8* %238, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.16, i64 0, i64 0), i32 %246)
  %248 = load i8*, i8** %4, align 8
  %249 = sext i32 %247 to i64
  %250 = getelementptr inbounds i8, i8* %248, i64 %249
  store i8* %250, i8** %4, align 8
  %251 = load i8*, i8** %3, align 8
  %252 = load i8*, i8** %4, align 8
  %253 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %254 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %253, i32 0, i32 0
  %255 = load %struct.TYPE_6__*, %struct.TYPE_6__** %254, align 8
  %256 = load i64, i64* @OCRDMA_CQE_LOC_ACCESS_ERR, align 8
  %257 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %255, i64 %256
  %258 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %257, i32 0, i32 0
  %259 = load i64, i64* %258, align 8
  %260 = trunc i64 %259 to i32
  %261 = call i32 @ocrdma_add_stat(i8* %251, i8* %252, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.17, i64 0, i64 0), i32 %260)
  %262 = load i8*, i8** %4, align 8
  %263 = sext i32 %261 to i64
  %264 = getelementptr inbounds i8, i8* %262, i64 %263
  store i8* %264, i8** %4, align 8
  %265 = load i8*, i8** %3, align 8
  %266 = load i8*, i8** %4, align 8
  %267 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %268 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %267, i32 0, i32 0
  %269 = load %struct.TYPE_6__*, %struct.TYPE_6__** %268, align 8
  %270 = load i64, i64* @OCRDMA_CQE_REM_INV_REQ_ERR, align 8
  %271 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %269, i64 %270
  %272 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %271, i32 0, i32 0
  %273 = load i64, i64* %272, align 8
  %274 = trunc i64 %273 to i32
  %275 = call i32 @ocrdma_add_stat(i8* %265, i8* %266, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0), i32 %274)
  %276 = load i8*, i8** %4, align 8
  %277 = sext i32 %275 to i64
  %278 = getelementptr inbounds i8, i8* %276, i64 %277
  store i8* %278, i8** %4, align 8
  %279 = load i8*, i8** %3, align 8
  %280 = load i8*, i8** %4, align 8
  %281 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %282 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %281, i32 0, i32 0
  %283 = load %struct.TYPE_6__*, %struct.TYPE_6__** %282, align 8
  %284 = load i64, i64* @OCRDMA_CQE_REM_ACCESS_ERR, align 8
  %285 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %283, i64 %284
  %286 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %285, i32 0, i32 0
  %287 = load i64, i64* %286, align 8
  %288 = trunc i64 %287 to i32
  %289 = call i32 @ocrdma_add_stat(i8* %279, i8* %280, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.19, i64 0, i64 0), i32 %288)
  %290 = load i8*, i8** %4, align 8
  %291 = sext i32 %289 to i64
  %292 = getelementptr inbounds i8, i8* %290, i64 %291
  store i8* %292, i8** %4, align 8
  %293 = load i8*, i8** %3, align 8
  %294 = load i8*, i8** %4, align 8
  %295 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %296 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %295, i32 0, i32 0
  %297 = load %struct.TYPE_6__*, %struct.TYPE_6__** %296, align 8
  %298 = load i64, i64* @OCRDMA_CQE_REM_OP_ERR, align 8
  %299 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %297, i64 %298
  %300 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %299, i32 0, i32 0
  %301 = load i64, i64* %300, align 8
  %302 = trunc i64 %301 to i32
  %303 = call i32 @ocrdma_add_stat(i8* %293, i8* %294, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i64 0, i64 0), i32 %302)
  %304 = load i8*, i8** %4, align 8
  %305 = sext i32 %303 to i64
  %306 = getelementptr inbounds i8, i8* %304, i64 %305
  store i8* %306, i8** %4, align 8
  %307 = load i8*, i8** %3, align 8
  %308 = load i8*, i8** %4, align 8
  %309 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %310 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %309, i32 0, i32 0
  %311 = load %struct.TYPE_6__*, %struct.TYPE_6__** %310, align 8
  %312 = load i64, i64* @OCRDMA_CQE_RETRY_EXC_ERR, align 8
  %313 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %311, i64 %312
  %314 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %313, i32 0, i32 0
  %315 = load i64, i64* %314, align 8
  %316 = trunc i64 %315 to i32
  %317 = call i32 @ocrdma_add_stat(i8* %307, i8* %308, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i32 %316)
  %318 = load i8*, i8** %4, align 8
  %319 = sext i32 %317 to i64
  %320 = getelementptr inbounds i8, i8* %318, i64 %319
  store i8* %320, i8** %4, align 8
  %321 = load i8*, i8** %3, align 8
  %322 = load i8*, i8** %4, align 8
  %323 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %324 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %323, i32 0, i32 0
  %325 = load %struct.TYPE_6__*, %struct.TYPE_6__** %324, align 8
  %326 = load i64, i64* @OCRDMA_CQE_RNR_RETRY_EXC_ERR, align 8
  %327 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %325, i64 %326
  %328 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %327, i32 0, i32 0
  %329 = load i64, i64* %328, align 8
  %330 = trunc i64 %329 to i32
  %331 = call i32 @ocrdma_add_stat(i8* %321, i8* %322, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.22, i64 0, i64 0), i32 %330)
  %332 = load i8*, i8** %4, align 8
  %333 = sext i32 %331 to i64
  %334 = getelementptr inbounds i8, i8* %332, i64 %333
  store i8* %334, i8** %4, align 8
  %335 = load i8*, i8** %3, align 8
  %336 = load i8*, i8** %4, align 8
  %337 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %338 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %337, i32 0, i32 0
  %339 = load %struct.TYPE_6__*, %struct.TYPE_6__** %338, align 8
  %340 = load i64, i64* @OCRDMA_CQE_LOC_RDD_VIOL_ERR, align 8
  %341 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %339, i64 %340
  %342 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %341, i32 0, i32 0
  %343 = load i64, i64* %342, align 8
  %344 = trunc i64 %343 to i32
  %345 = call i32 @ocrdma_add_stat(i8* %335, i8* %336, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), i32 %344)
  %346 = load i8*, i8** %4, align 8
  %347 = sext i32 %345 to i64
  %348 = getelementptr inbounds i8, i8* %346, i64 %347
  store i8* %348, i8** %4, align 8
  %349 = load i8*, i8** %3, align 8
  %350 = load i8*, i8** %4, align 8
  %351 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %352 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %351, i32 0, i32 0
  %353 = load %struct.TYPE_6__*, %struct.TYPE_6__** %352, align 8
  %354 = load i64, i64* @OCRDMA_CQE_REM_INV_RD_REQ_ERR, align 8
  %355 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %353, i64 %354
  %356 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %355, i32 0, i32 0
  %357 = load i64, i64* %356, align 8
  %358 = trunc i64 %357 to i32
  %359 = call i32 @ocrdma_add_stat(i8* %349, i8* %350, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.24, i64 0, i64 0), i32 %358)
  %360 = load i8*, i8** %4, align 8
  %361 = sext i32 %359 to i64
  %362 = getelementptr inbounds i8, i8* %360, i64 %361
  store i8* %362, i8** %4, align 8
  %363 = load i8*, i8** %3, align 8
  %364 = load i8*, i8** %4, align 8
  %365 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %366 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %365, i32 0, i32 0
  %367 = load %struct.TYPE_6__*, %struct.TYPE_6__** %366, align 8
  %368 = load i64, i64* @OCRDMA_CQE_REM_ABORT_ERR, align 8
  %369 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %367, i64 %368
  %370 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %369, i32 0, i32 0
  %371 = load i64, i64* %370, align 8
  %372 = trunc i64 %371 to i32
  %373 = call i32 @ocrdma_add_stat(i8* %363, i8* %364, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.25, i64 0, i64 0), i32 %372)
  %374 = load i8*, i8** %4, align 8
  %375 = sext i32 %373 to i64
  %376 = getelementptr inbounds i8, i8* %374, i64 %375
  store i8* %376, i8** %4, align 8
  %377 = load i8*, i8** %3, align 8
  %378 = load i8*, i8** %4, align 8
  %379 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %380 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %379, i32 0, i32 0
  %381 = load %struct.TYPE_6__*, %struct.TYPE_6__** %380, align 8
  %382 = load i64, i64* @OCRDMA_CQE_INV_EECN_ERR, align 8
  %383 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %381, i64 %382
  %384 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %383, i32 0, i32 0
  %385 = load i64, i64* %384, align 8
  %386 = trunc i64 %385 to i32
  %387 = call i32 @ocrdma_add_stat(i8* %377, i8* %378, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i64 0, i64 0), i32 %386)
  %388 = load i8*, i8** %4, align 8
  %389 = sext i32 %387 to i64
  %390 = getelementptr inbounds i8, i8* %388, i64 %389
  store i8* %390, i8** %4, align 8
  %391 = load i8*, i8** %3, align 8
  %392 = load i8*, i8** %4, align 8
  %393 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %394 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %393, i32 0, i32 0
  %395 = load %struct.TYPE_6__*, %struct.TYPE_6__** %394, align 8
  %396 = load i64, i64* @OCRDMA_CQE_INV_EEC_STATE_ERR, align 8
  %397 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %395, i64 %396
  %398 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %397, i32 0, i32 0
  %399 = load i64, i64* %398, align 8
  %400 = trunc i64 %399 to i32
  %401 = call i32 @ocrdma_add_stat(i8* %391, i8* %392, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i64 0, i64 0), i32 %400)
  %402 = load i8*, i8** %4, align 8
  %403 = sext i32 %401 to i64
  %404 = getelementptr inbounds i8, i8* %402, i64 %403
  store i8* %404, i8** %4, align 8
  %405 = load i8*, i8** %3, align 8
  %406 = load i8*, i8** %4, align 8
  %407 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %408 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %407, i32 0, i32 0
  %409 = load %struct.TYPE_6__*, %struct.TYPE_6__** %408, align 8
  %410 = load i64, i64* @OCRDMA_CQE_FATAL_ERR, align 8
  %411 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %409, i64 %410
  %412 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %411, i32 0, i32 0
  %413 = load i64, i64* %412, align 8
  %414 = trunc i64 %413 to i32
  %415 = call i32 @ocrdma_add_stat(i8* %405, i8* %406, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0), i32 %414)
  %416 = load i8*, i8** %4, align 8
  %417 = sext i32 %415 to i64
  %418 = getelementptr inbounds i8, i8* %416, i64 %417
  store i8* %418, i8** %4, align 8
  %419 = load i8*, i8** %3, align 8
  %420 = load i8*, i8** %4, align 8
  %421 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %422 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %421, i32 0, i32 0
  %423 = load %struct.TYPE_6__*, %struct.TYPE_6__** %422, align 8
  %424 = load i64, i64* @OCRDMA_CQE_RESP_TIMEOUT_ERR, align 8
  %425 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %423, i64 %424
  %426 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %425, i32 0, i32 0
  %427 = load i64, i64* %426, align 8
  %428 = trunc i64 %427 to i32
  %429 = call i32 @ocrdma_add_stat(i8* %419, i8* %420, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.29, i64 0, i64 0), i32 %428)
  %430 = load i8*, i8** %4, align 8
  %431 = sext i32 %429 to i64
  %432 = getelementptr inbounds i8, i8* %430, i64 %431
  store i8* %432, i8** %4, align 8
  %433 = load i8*, i8** %3, align 8
  %434 = load i8*, i8** %4, align 8
  %435 = load %struct.ocrdma_dev*, %struct.ocrdma_dev** %2, align 8
  %436 = getelementptr inbounds %struct.ocrdma_dev, %struct.ocrdma_dev* %435, i32 0, i32 0
  %437 = load %struct.TYPE_6__*, %struct.TYPE_6__** %436, align 8
  %438 = load i64, i64* @OCRDMA_CQE_GENERAL_ERR, align 8
  %439 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %437, i64 %438
  %440 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %439, i32 0, i32 0
  %441 = load i64, i64* %440, align 8
  %442 = trunc i64 %441 to i32
  %443 = call i32 @ocrdma_add_stat(i8* %433, i8* %434, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i64 0, i64 0), i32 %442)
  %444 = load i8*, i8** %4, align 8
  %445 = sext i32 %443 to i64
  %446 = getelementptr inbounds i8, i8* %444, i64 %445
  store i8* %446, i8** %4, align 8
  %447 = load i8*, i8** %3, align 8
  ret i8* %447
}

declare dso_local i32 @memset(i8*, i32, i32) #1

declare dso_local i32 @ocrdma_add_stat(i8*, i8*, i8*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
