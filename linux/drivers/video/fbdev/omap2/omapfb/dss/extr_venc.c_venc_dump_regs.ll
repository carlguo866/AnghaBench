; ModuleID = '/home/carl/AnghaBench/linux/drivers/video/fbdev/omap2/omapfb/dss/extr_venc.c_venc_dump_regs.c'
source_filename = "/home/carl/AnghaBench/linux/drivers/video/fbdev/omap2/omapfb/dss/extr_venc.c_venc_dump_regs.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.seq_file = type { i32 }

@.str = private unnamed_addr constant [12 x i8] c"%-35s %08x\0A\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"VENC_F_CONTROL\00", align 1
@VENC_F_CONTROL = common dso_local global i32 0, align 4
@.str.2 = private unnamed_addr constant [17 x i8] c"VENC_VIDOUT_CTRL\00", align 1
@VENC_VIDOUT_CTRL = common dso_local global i32 0, align 4
@.str.3 = private unnamed_addr constant [15 x i8] c"VENC_SYNC_CTRL\00", align 1
@VENC_SYNC_CTRL = common dso_local global i32 0, align 4
@.str.4 = private unnamed_addr constant [10 x i8] c"VENC_LLEN\00", align 1
@VENC_LLEN = common dso_local global i32 0, align 4
@.str.5 = private unnamed_addr constant [11 x i8] c"VENC_FLENS\00", align 1
@VENC_FLENS = common dso_local global i32 0, align 4
@.str.6 = private unnamed_addr constant [16 x i8] c"VENC_HFLTR_CTRL\00", align 1
@VENC_HFLTR_CTRL = common dso_local global i32 0, align 4
@.str.7 = private unnamed_addr constant [22 x i8] c"VENC_CC_CARR_WSS_CARR\00", align 1
@VENC_CC_CARR_WSS_CARR = common dso_local global i32 0, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"VENC_C_PHASE\00", align 1
@VENC_C_PHASE = common dso_local global i32 0, align 4
@.str.9 = private unnamed_addr constant [12 x i8] c"VENC_GAIN_U\00", align 1
@VENC_GAIN_U = common dso_local global i32 0, align 4
@.str.10 = private unnamed_addr constant [12 x i8] c"VENC_GAIN_V\00", align 1
@VENC_GAIN_V = common dso_local global i32 0, align 4
@.str.11 = private unnamed_addr constant [12 x i8] c"VENC_GAIN_Y\00", align 1
@VENC_GAIN_Y = common dso_local global i32 0, align 4
@.str.12 = private unnamed_addr constant [17 x i8] c"VENC_BLACK_LEVEL\00", align 1
@VENC_BLACK_LEVEL = common dso_local global i32 0, align 4
@.str.13 = private unnamed_addr constant [17 x i8] c"VENC_BLANK_LEVEL\00", align 1
@VENC_BLANK_LEVEL = common dso_local global i32 0, align 4
@.str.14 = private unnamed_addr constant [13 x i8] c"VENC_X_COLOR\00", align 1
@VENC_X_COLOR = common dso_local global i32 0, align 4
@.str.15 = private unnamed_addr constant [15 x i8] c"VENC_M_CONTROL\00", align 1
@VENC_M_CONTROL = common dso_local global i32 0, align 4
@.str.16 = private unnamed_addr constant [21 x i8] c"VENC_BSTAMP_WSS_DATA\00", align 1
@VENC_BSTAMP_WSS_DATA = common dso_local global i32 0, align 4
@.str.17 = private unnamed_addr constant [12 x i8] c"VENC_S_CARR\00", align 1
@VENC_S_CARR = common dso_local global i32 0, align 4
@.str.18 = private unnamed_addr constant [12 x i8] c"VENC_LINE21\00", align 1
@VENC_LINE21 = common dso_local global i32 0, align 4
@.str.19 = private unnamed_addr constant [12 x i8] c"VENC_LN_SEL\00", align 1
@VENC_LN_SEL = common dso_local global i32 0, align 4
@.str.20 = private unnamed_addr constant [17 x i8] c"VENC_L21__WC_CTL\00", align 1
@VENC_L21__WC_CTL = common dso_local global i32 0, align 4
@.str.21 = private unnamed_addr constant [23 x i8] c"VENC_HTRIGGER_VTRIGGER\00", align 1
@VENC_HTRIGGER_VTRIGGER = common dso_local global i32 0, align 4
@.str.22 = private unnamed_addr constant [18 x i8] c"VENC_SAVID__EAVID\00", align 1
@VENC_SAVID__EAVID = common dso_local global i32 0, align 4
@.str.23 = private unnamed_addr constant [15 x i8] c"VENC_FLEN__FAL\00", align 1
@VENC_FLEN__FAL = common dso_local global i32 0, align 4
@.str.24 = private unnamed_addr constant [22 x i8] c"VENC_LAL__PHASE_RESET\00", align 1
@VENC_LAL__PHASE_RESET = common dso_local global i32 0, align 4
@.str.25 = private unnamed_addr constant [25 x i8] c"VENC_HS_INT_START_STOP_X\00", align 1
@VENC_HS_INT_START_STOP_X = common dso_local global i32 0, align 4
@.str.26 = private unnamed_addr constant [25 x i8] c"VENC_HS_EXT_START_STOP_X\00", align 1
@VENC_HS_EXT_START_STOP_X = common dso_local global i32 0, align 4
@.str.27 = private unnamed_addr constant [20 x i8] c"VENC_VS_INT_START_X\00", align 1
@VENC_VS_INT_START_X = common dso_local global i32 0, align 4
@.str.28 = private unnamed_addr constant [35 x i8] c"VENC_VS_INT_STOP_X__VS_INT_START_Y\00", align 1
@VENC_VS_INT_STOP_X__VS_INT_START_Y = common dso_local global i32 0, align 4
@.str.29 = private unnamed_addr constant [35 x i8] c"VENC_VS_INT_STOP_Y__VS_EXT_START_X\00", align 1
@VENC_VS_INT_STOP_Y__VS_EXT_START_X = common dso_local global i32 0, align 4
@.str.30 = private unnamed_addr constant [35 x i8] c"VENC_VS_EXT_STOP_X__VS_EXT_START_Y\00", align 1
@VENC_VS_EXT_STOP_X__VS_EXT_START_Y = common dso_local global i32 0, align 4
@.str.31 = private unnamed_addr constant [19 x i8] c"VENC_VS_EXT_STOP_Y\00", align 1
@VENC_VS_EXT_STOP_Y = common dso_local global i32 0, align 4
@.str.32 = private unnamed_addr constant [23 x i8] c"VENC_AVID_START_STOP_X\00", align 1
@VENC_AVID_START_STOP_X = common dso_local global i32 0, align 4
@.str.33 = private unnamed_addr constant [23 x i8] c"VENC_AVID_START_STOP_Y\00", align 1
@VENC_AVID_START_STOP_Y = common dso_local global i32 0, align 4
@.str.34 = private unnamed_addr constant [38 x i8] c"VENC_FID_INT_START_X__FID_INT_START_Y\00", align 1
@VENC_FID_INT_START_X__FID_INT_START_Y = common dso_local global i32 0, align 4
@.str.35 = private unnamed_addr constant [39 x i8] c"VENC_FID_INT_OFFSET_Y__FID_EXT_START_X\00", align 1
@VENC_FID_INT_OFFSET_Y__FID_EXT_START_X = common dso_local global i32 0, align 4
@.str.36 = private unnamed_addr constant [39 x i8] c"VENC_FID_EXT_START_Y__FID_EXT_OFFSET_Y\00", align 1
@VENC_FID_EXT_START_Y__FID_EXT_OFFSET_Y = common dso_local global i32 0, align 4
@.str.37 = private unnamed_addr constant [30 x i8] c"VENC_TVDETGP_INT_START_STOP_X\00", align 1
@VENC_TVDETGP_INT_START_STOP_X = common dso_local global i32 0, align 4
@.str.38 = private unnamed_addr constant [30 x i8] c"VENC_TVDETGP_INT_START_STOP_Y\00", align 1
@VENC_TVDETGP_INT_START_STOP_Y = common dso_local global i32 0, align 4
@.str.39 = private unnamed_addr constant [14 x i8] c"VENC_GEN_CTRL\00", align 1
@VENC_GEN_CTRL = common dso_local global i32 0, align 4
@.str.40 = private unnamed_addr constant [20 x i8] c"VENC_OUTPUT_CONTROL\00", align 1
@VENC_OUTPUT_CONTROL = common dso_local global i32 0, align 4
@.str.41 = private unnamed_addr constant [17 x i8] c"VENC_OUTPUT_TEST\00", align 1
@VENC_OUTPUT_TEST = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.seq_file*)* @venc_dump_regs to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @venc_dump_regs(%struct.seq_file* %0) #0 {
  %2 = alloca %struct.seq_file*, align 8
  store %struct.seq_file* %0, %struct.seq_file** %2, align 8
  %3 = call i64 (...) @venc_runtime_get()
  %4 = icmp ne i64 %3, 0
  br i1 %4, label %5, label %6

5:                                                ; preds = %1
  br label %172

6:                                                ; preds = %1
  %7 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %8 = load i32, i32* @VENC_F_CONTROL, align 4
  %9 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %8)
  %10 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %7, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 %9)
  %11 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %12 = load i32, i32* @VENC_VIDOUT_CTRL, align 4
  %13 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %12)
  %14 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0), i32 %13)
  %15 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %16 = load i32, i32* @VENC_SYNC_CTRL, align 4
  %17 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %16)
  %18 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %15, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i32 %17)
  %19 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %20 = load i32, i32* @VENC_LLEN, align 4
  %21 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %20)
  %22 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %19, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i32 %21)
  %23 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %24 = load i32, i32* @VENC_FLENS, align 4
  %25 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %24)
  %26 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %23, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i32 %25)
  %27 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %28 = load i32, i32* @VENC_HFLTR_CTRL, align 4
  %29 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %28)
  %30 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %27, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i32 %29)
  %31 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %32 = load i32, i32* @VENC_CC_CARR_WSS_CARR, align 4
  %33 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %32)
  %34 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %31, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i32 %33)
  %35 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %36 = load i32, i32* @VENC_C_PHASE, align 4
  %37 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %36)
  %38 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %35, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i32 %37)
  %39 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %40 = load i32, i32* @VENC_GAIN_U, align 4
  %41 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %40)
  %42 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %39, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i32 %41)
  %43 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %44 = load i32, i32* @VENC_GAIN_V, align 4
  %45 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %44)
  %46 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %43, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), i32 %45)
  %47 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %48 = load i32, i32* @VENC_GAIN_Y, align 4
  %49 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %48)
  %50 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %47, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i32 %49)
  %51 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %52 = load i32, i32* @VENC_BLACK_LEVEL, align 4
  %53 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %52)
  %54 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %51, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i32 %53)
  %55 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %56 = load i32, i32* @VENC_BLANK_LEVEL, align 4
  %57 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %56)
  %58 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %55, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i32 %57)
  %59 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %60 = load i32, i32* @VENC_X_COLOR, align 4
  %61 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %60)
  %62 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %59, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i64 0, i64 0), i32 %61)
  %63 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %64 = load i32, i32* @VENC_M_CONTROL, align 4
  %65 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %64)
  %66 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %63, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), i32 %65)
  %67 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %68 = load i32, i32* @VENC_BSTAMP_WSS_DATA, align 4
  %69 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %68)
  %70 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %67, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i32 %69)
  %71 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %72 = load i32, i32* @VENC_S_CARR, align 4
  %73 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %72)
  %74 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %71, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i32 %73)
  %75 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %76 = load i32, i32* @VENC_LINE21, align 4
  %77 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %76)
  %78 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %75, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i64 0, i64 0), i32 %77)
  %79 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %80 = load i32, i32* @VENC_LN_SEL, align 4
  %81 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %80)
  %82 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %79, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i32 %81)
  %83 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %84 = load i32, i32* @VENC_L21__WC_CTL, align 4
  %85 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %84)
  %86 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %83, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0), i32 %85)
  %87 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %88 = load i32, i32* @VENC_HTRIGGER_VTRIGGER, align 4
  %89 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %88)
  %90 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %87, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i32 %89)
  %91 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %92 = load i32, i32* @VENC_SAVID__EAVID, align 4
  %93 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %92)
  %94 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %91, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.22, i64 0, i64 0), i32 %93)
  %95 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %96 = load i32, i32* @VENC_FLEN__FAL, align 4
  %97 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %96)
  %98 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %95, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23, i64 0, i64 0), i32 %97)
  %99 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %100 = load i32, i32* @VENC_LAL__PHASE_RESET, align 4
  %101 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %100)
  %102 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %99, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.24, i64 0, i64 0), i32 %101)
  %103 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %104 = load i32, i32* @VENC_HS_INT_START_STOP_X, align 4
  %105 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %104)
  %106 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %103, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0), i32 %105)
  %107 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %108 = load i32, i32* @VENC_HS_EXT_START_STOP_X, align 4
  %109 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %108)
  %110 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %107, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.26, i64 0, i64 0), i32 %109)
  %111 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %112 = load i32, i32* @VENC_VS_INT_START_X, align 4
  %113 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %112)
  %114 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %111, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i64 0, i64 0), i32 %113)
  %115 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %116 = load i32, i32* @VENC_VS_INT_STOP_X__VS_INT_START_Y, align 4
  %117 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %116)
  %118 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %115, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.28, i64 0, i64 0), i32 %117)
  %119 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %120 = load i32, i32* @VENC_VS_INT_STOP_Y__VS_EXT_START_X, align 4
  %121 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %120)
  %122 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %119, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.29, i64 0, i64 0), i32 %121)
  %123 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %124 = load i32, i32* @VENC_VS_EXT_STOP_X__VS_EXT_START_Y, align 4
  %125 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %124)
  %126 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %123, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.30, i64 0, i64 0), i32 %125)
  %127 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %128 = load i32, i32* @VENC_VS_EXT_STOP_Y, align 4
  %129 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %128)
  %130 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %127, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.31, i64 0, i64 0), i32 %129)
  %131 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %132 = load i32, i32* @VENC_AVID_START_STOP_X, align 4
  %133 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %132)
  %134 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %131, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.32, i64 0, i64 0), i32 %133)
  %135 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %136 = load i32, i32* @VENC_AVID_START_STOP_Y, align 4
  %137 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %136)
  %138 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %135, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0), i32 %137)
  %139 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %140 = load i32, i32* @VENC_FID_INT_START_X__FID_INT_START_Y, align 4
  %141 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %140)
  %142 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %139, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.34, i64 0, i64 0), i32 %141)
  %143 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %144 = load i32, i32* @VENC_FID_INT_OFFSET_Y__FID_EXT_START_X, align 4
  %145 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %144)
  %146 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %143, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.35, i64 0, i64 0), i32 %145)
  %147 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %148 = load i32, i32* @VENC_FID_EXT_START_Y__FID_EXT_OFFSET_Y, align 4
  %149 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %148)
  %150 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %147, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.36, i64 0, i64 0), i32 %149)
  %151 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %152 = load i32, i32* @VENC_TVDETGP_INT_START_STOP_X, align 4
  %153 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %152)
  %154 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %151, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37, i64 0, i64 0), i32 %153)
  %155 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %156 = load i32, i32* @VENC_TVDETGP_INT_START_STOP_Y, align 4
  %157 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %156)
  %158 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %155, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.38, i64 0, i64 0), i32 %157)
  %159 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %160 = load i32, i32* @VENC_GEN_CTRL, align 4
  %161 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %160)
  %162 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %159, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i64 0, i64 0), i32 %161)
  %163 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %164 = load i32, i32* @VENC_OUTPUT_CONTROL, align 4
  %165 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %164)
  %166 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %163, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.40, i64 0, i64 0), i32 %165)
  %167 = load %struct.seq_file*, %struct.seq_file** %2, align 8
  %168 = load i32, i32* @VENC_OUTPUT_TEST, align 4
  %169 = call i32 (i32, ...) bitcast (i32 (...)* @venc_read_reg to i32 (i32, ...)*)(i32 %168)
  %170 = call i32 (%struct.seq_file*, i8*, i8*, i32, ...) bitcast (i32 (...)* @seq_printf to i32 (%struct.seq_file*, i8*, i8*, i32, ...)*)(%struct.seq_file* %167, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.41, i64 0, i64 0), i32 %169)
  %171 = call i32 (...) @venc_runtime_put()
  br label %172

172:                                              ; preds = %6, %5
  ret void
}

declare dso_local i64 @venc_runtime_get(...) #1

declare dso_local i32 @seq_printf(...) #1

declare dso_local i32 @venc_read_reg(...) #1

declare dso_local i32 @venc_runtime_put(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
