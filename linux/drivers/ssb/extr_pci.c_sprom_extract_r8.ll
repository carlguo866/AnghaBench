; ModuleID = '/home/carl/AnghaBench/linux/drivers/ssb/extr_pci.c_sprom_extract_r8.c'
source_filename = "/home/carl/AnghaBench/linux/drivers/ssb/extr_pci.c_sprom_extract_r8.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_10__ = type { i32*, i32*, i32*, i32, i32, i32, i32, i32*, i32, i32 }
%struct.TYPE_9__ = type { %struct.TYPE_8__, %struct.TYPE_7__ }
%struct.TYPE_8__ = type { i32, i32, i32, i32, i32 }
%struct.TYPE_7__ = type { i32, i32, i32, i32, i32 }
%struct.ssb_sprom = type { i32, %struct.TYPE_6__, i32, i64* }
%struct.TYPE_6__ = type { i8*, i8*, i8*, i8* }

@sprom_extract_r8.pwr_info_offset = internal constant [4 x i64] [i64 131, i64 130, i64 129, i64 128], align 16
@SSB_SPROM8_IL0MAC = common dso_local global i32 0, align 4
@board_rev = common dso_local global i32 0, align 4
@SSB_SPROM8_BOARDREV = common dso_local global i64 0, align 8
@board_type = common dso_local global i32 0, align 4
@SSB_SPROM1_SPID = common dso_local global i64 0, align 8
@alpha2 = common dso_local global i32* null, align 8
@SSB_SPROM8_CCODE = common dso_local global i64 0, align 8
@boardflags_lo = common dso_local global i32 0, align 4
@SSB_SPROM8_BFLLO = common dso_local global i64 0, align 8
@boardflags_hi = common dso_local global i32 0, align 4
@SSB_SPROM8_BFLHI = common dso_local global i64 0, align 8
@boardflags2_lo = common dso_local global i32 0, align 4
@SSB_SPROM8_BFL2LO = common dso_local global i64 0, align 8
@boardflags2_hi = common dso_local global i32 0, align 4
@SSB_SPROM8_BFL2HI = common dso_local global i64 0, align 8
@ant_available_a = common dso_local global i32 0, align 4
@SSB_SPROM8_ANTAVAIL = common dso_local global i64 0, align 8
@SSB_SPROM8_ANTAVAIL_A = common dso_local global i32 0, align 4
@SSB_SPROM8_ANTAVAIL_A_SHIFT = common dso_local global i32 0, align 4
@ant_available_bg = common dso_local global i32 0, align 4
@SSB_SPROM8_ANTAVAIL_BG = common dso_local global i32 0, align 4
@SSB_SPROM8_ANTAVAIL_BG_SHIFT = common dso_local global i32 0, align 4
@maxpwr_bg = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_BG = common dso_local global i64 0, align 8
@SSB_SPROM8_MAXP_BG_MASK = common dso_local global i32 0, align 4
@itssi_bg = common dso_local global i32 0, align 4
@SSB_SPROM8_ITSSI_BG = common dso_local global i32 0, align 4
@SSB_SPROM8_ITSSI_BG_SHIFT = common dso_local global i32 0, align 4
@maxpwr_a = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_A = common dso_local global i64 0, align 8
@SSB_SPROM8_MAXP_A_MASK = common dso_local global i32 0, align 4
@itssi_a = common dso_local global i32 0, align 4
@SSB_SPROM8_ITSSI_A = common dso_local global i32 0, align 4
@SSB_SPROM8_ITSSI_A_SHIFT = common dso_local global i32 0, align 4
@maxpwr_ah = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_AHL = common dso_local global i64 0, align 8
@SSB_SPROM8_MAXP_AH_MASK = common dso_local global i32 0, align 4
@maxpwr_al = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_AL_MASK = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_AL_SHIFT = common dso_local global i32 0, align 4
@gpio0 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOA = common dso_local global i64 0, align 8
@SSB_SPROM8_GPIOA_P0 = common dso_local global i32 0, align 4
@gpio1 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOA_P1 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOA_P1_SHIFT = common dso_local global i32 0, align 4
@gpio2 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOB = common dso_local global i64 0, align 8
@SSB_SPROM8_GPIOB_P2 = common dso_local global i32 0, align 4
@gpio3 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOB_P3 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOB_P3_SHIFT = common dso_local global i32 0, align 4
@tri2g = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI25G = common dso_local global i64 0, align 8
@SSB_SPROM8_TRI2G = common dso_local global i32 0, align 4
@tri5g = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5G = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5G_SHIFT = common dso_local global i32 0, align 4
@tri5gl = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5GHL = common dso_local global i64 0, align 8
@SSB_SPROM8_TRI5GL = common dso_local global i32 0, align 4
@tri5gh = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5GH = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5GH_SHIFT = common dso_local global i32 0, align 4
@rxpo2g = common dso_local global i32 0, align 4
@SSB_SPROM8_RXPO = common dso_local global i64 0, align 8
@SSB_SPROM8_RXPO2G = common dso_local global i32 0, align 4
@rxpo5g = common dso_local global i32 0, align 4
@SSB_SPROM8_RXPO5G = common dso_local global i32 0, align 4
@SSB_SPROM8_RXPO5G_SHIFT = common dso_local global i32 0, align 4
@rssismf2g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSIPARM2G = common dso_local global i64 0, align 8
@SSB_SPROM8_RSSISMF2G = common dso_local global i32 0, align 4
@rssismc2g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMC2G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMC2G_SHIFT = common dso_local global i32 0, align 4
@rssisav2g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISAV2G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISAV2G_SHIFT = common dso_local global i32 0, align 4
@bxa2g = common dso_local global i32 0, align 4
@SSB_SPROM8_BXA2G = common dso_local global i32 0, align 4
@SSB_SPROM8_BXA2G_SHIFT = common dso_local global i32 0, align 4
@rssismf5g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSIPARM5G = common dso_local global i64 0, align 8
@SSB_SPROM8_RSSISMF5G = common dso_local global i32 0, align 4
@rssismc5g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMC5G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMC5G_SHIFT = common dso_local global i32 0, align 4
@rssisav5g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISAV5G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISAV5G_SHIFT = common dso_local global i32 0, align 4
@bxa5g = common dso_local global i32 0, align 4
@SSB_SPROM8_BXA5G = common dso_local global i32 0, align 4
@SSB_SPROM8_BXA5G_SHIFT = common dso_local global i32 0, align 4
@pa0b0 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA0B0 = common dso_local global i64 0, align 8
@pa0b1 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA0B1 = common dso_local global i64 0, align 8
@pa0b2 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA0B2 = common dso_local global i64 0, align 8
@pa1b0 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1B0 = common dso_local global i64 0, align 8
@pa1b1 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1B1 = common dso_local global i64 0, align 8
@pa1b2 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1B2 = common dso_local global i64 0, align 8
@pa1lob0 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1LOB0 = common dso_local global i64 0, align 8
@pa1lob1 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1LOB1 = common dso_local global i64 0, align 8
@pa1lob2 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1LOB2 = common dso_local global i64 0, align 8
@pa1hib0 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1HIB0 = common dso_local global i64 0, align 8
@pa1hib1 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1HIB1 = common dso_local global i64 0, align 8
@pa1hib2 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1HIB2 = common dso_local global i64 0, align 8
@cck2gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_CCK2GPO = common dso_local global i64 0, align 8
@ofdm2gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_OFDM2GPO = common dso_local global i64 0, align 8
@ofdm5glpo = common dso_local global i32 0, align 4
@SSB_SPROM8_OFDM5GLPO = common dso_local global i64 0, align 8
@ofdm5gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_OFDM5GPO = common dso_local global i64 0, align 8
@ofdm5ghpo = common dso_local global i32 0, align 4
@SSB_SPROM8_OFDM5GHPO = common dso_local global i64 0, align 8
@SSB_SPROM8_AGAIN01 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN0 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN0_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN1 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN1_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN23 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN2 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN2_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN3 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN3_SHIFT = common dso_local global i32 0, align 4
@core_pwr_info = common dso_local global %struct.TYPE_10__* null, align 8
@SSB_SROM8_2G_MAXP_ITSSI = common dso_local global i64 0, align 8
@SSB_SPROM8_2G_ITSSI = common dso_local global i32 0, align 4
@SSB_SPROM8_2G_ITSSI_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_2G_MAXP = common dso_local global i32 0, align 4
@SSB_SROM8_2G_PA_0 = common dso_local global i64 0, align 8
@SSB_SROM8_2G_PA_1 = common dso_local global i64 0, align 8
@SSB_SROM8_2G_PA_2 = common dso_local global i64 0, align 8
@SSB_SROM8_5G_MAXP_ITSSI = common dso_local global i64 0, align 8
@SSB_SPROM8_5G_ITSSI = common dso_local global i32 0, align 4
@SSB_SPROM8_5G_ITSSI_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_5G_MAXP = common dso_local global i32 0, align 4
@SSB_SPROM8_5GHL_MAXP = common dso_local global i64 0, align 8
@SSB_SPROM8_5GH_MAXP = common dso_local global i32 0, align 4
@SSB_SPROM8_5GL_MAXP = common dso_local global i32 0, align 4
@SSB_SPROM8_5GL_MAXP_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_5GL_PA_0 = common dso_local global i64 0, align 8
@SSB_SROM8_5GL_PA_1 = common dso_local global i64 0, align 8
@SSB_SROM8_5GL_PA_2 = common dso_local global i64 0, align 8
@SSB_SROM8_5G_PA_0 = common dso_local global i64 0, align 8
@SSB_SROM8_5G_PA_1 = common dso_local global i64 0, align 8
@SSB_SROM8_5G_PA_2 = common dso_local global i64 0, align 8
@SSB_SROM8_5GH_PA_0 = common dso_local global i64 0, align 8
@SSB_SROM8_5GH_PA_1 = common dso_local global i64 0, align 8
@SSB_SROM8_5GH_PA_2 = common dso_local global i64 0, align 8
@fem = common dso_local global %struct.TYPE_9__ zeroinitializer, align 4
@SSB_SPROM8_FEM2G = common dso_local global i64 0, align 8
@SSB_SROM8_FEM_TSSIPOS = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_TSSIPOS_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_EXTPA_GAIN = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_EXTPA_GAIN_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_PDET_RANGE = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_PDET_RANGE_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_TR_ISO = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_TR_ISO_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_ANTSWLUT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_ANTSWLUT_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_FEM5G = common dso_local global i64 0, align 8
@leddc_on_time = common dso_local global i32 0, align 4
@SSB_SPROM8_LEDDC = common dso_local global i64 0, align 8
@SSB_SPROM8_LEDDC_ON = common dso_local global i32 0, align 4
@SSB_SPROM8_LEDDC_ON_SHIFT = common dso_local global i32 0, align 4
@leddc_off_time = common dso_local global i32 0, align 4
@SSB_SPROM8_LEDDC_OFF = common dso_local global i32 0, align 4
@SSB_SPROM8_LEDDC_OFF_SHIFT = common dso_local global i32 0, align 4
@txchain = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC = common dso_local global i64 0, align 8
@SSB_SPROM8_TXRXC_TXCHAIN = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_TXCHAIN_SHIFT = common dso_local global i32 0, align 4
@rxchain = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_RXCHAIN = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_RXCHAIN_SHIFT = common dso_local global i32 0, align 4
@antswitch = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_SWITCH = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_SWITCH_SHIFT = common dso_local global i32 0, align 4
@opo = common dso_local global i32 0, align 4
@mcs2gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_2G_MCSPO = common dso_local global i32 0, align 4
@mcs5gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_5G_MCSPO = common dso_local global i32 0, align 4
@mcs5glpo = common dso_local global i32 0, align 4
@SSB_SPROM8_5GL_MCSPO = common dso_local global i32 0, align 4
@mcs5ghpo = common dso_local global i32 0, align 4
@SSB_SPROM8_5GH_MCSPO = common dso_local global i32 0, align 4
@rawtempsense = common dso_local global i32 0, align 4
@SSB_SPROM8_RAWTS = common dso_local global i64 0, align 8
@SSB_SPROM8_RAWTS_RAWTEMP = common dso_local global i32 0, align 4
@SSB_SPROM8_RAWTS_RAWTEMP_SHIFT = common dso_local global i32 0, align 4
@measpower = common dso_local global i32 0, align 4
@SSB_SPROM8_RAWTS_MEASPOWER = common dso_local global i32 0, align 4
@SSB_SPROM8_RAWTS_MEASPOWER_SHIFT = common dso_local global i32 0, align 4
@tempsense_slope = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX = common dso_local global i64 0, align 8
@SSB_SPROM8_OPT_CORRX_TEMP_SLOPE = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMP_SLOPE_SHIFT = common dso_local global i32 0, align 4
@tempcorrx = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMPCORRX = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMPCORRX_SHIFT = common dso_local global i32 0, align 4
@tempsense_option = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMP_OPTION = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMP_OPTION_SHIFT = common dso_local global i32 0, align 4
@freqoffset_corr = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP = common dso_local global i64 0, align 8
@SSB_SPROM8_HWIQ_IQSWP_FREQ_CORR = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_FREQ_CORR_SHIFT = common dso_local global i32 0, align 4
@iqcal_swp_dis = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_IQCAL_SWP = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_IQCAL_SWP_SHIFT = common dso_local global i32 0, align 4
@hw_iqcal_en = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_HW_IQCAL = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_HW_IQCAL_SHIFT = common dso_local global i32 0, align 4
@bw40po = common dso_local global i32 0, align 4
@SSB_SPROM8_BW40PO = common dso_local global i64 0, align 8
@cddpo = common dso_local global i32 0, align 4
@SSB_SPROM8_CDDPO = common dso_local global i64 0, align 8
@stbcpo = common dso_local global i32 0, align 4
@SSB_SPROM8_STBCPO = common dso_local global i64 0, align 8
@bwduppo = common dso_local global i32 0, align 4
@SSB_SPROM8_BWDUPPO = common dso_local global i64 0, align 8
@tempthresh = common dso_local global i32 0, align 4
@SSB_SPROM8_THERMAL = common dso_local global i64 0, align 8
@SSB_SPROM8_THERMAL_TRESH = common dso_local global i32 0, align 4
@SSB_SPROM8_THERMAL_TRESH_SHIFT = common dso_local global i32 0, align 4
@tempoffset = common dso_local global i32 0, align 4
@SSB_SPROM8_THERMAL_OFFSET = common dso_local global i32 0, align 4
@SSB_SPROM8_THERMAL_OFFSET_SHIFT = common dso_local global i32 0, align 4
@phycal_tempdelta = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA = common dso_local global i64 0, align 8
@SSB_SPROM8_TEMPDELTA_PHYCAL = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_PHYCAL_SHIFT = common dso_local global i32 0, align 4
@temps_period = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_PERIOD = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_PERIOD_SHIFT = common dso_local global i32 0, align 4
@temps_hysteresis = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_HYSTERESIS = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_HYSTERESIS_SHIFT = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.ssb_sprom*, i64*)* @sprom_extract_r8 to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sprom_extract_r8(%struct.ssb_sprom* %0, i64* %1) #0 {
  %3 = alloca %struct.ssb_sprom*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  store %struct.ssb_sprom* %0, %struct.ssb_sprom** %3, align 8
  store i64* %1, i64** %4, align 8
  %7 = call i32 @ARRAY_SIZE(i64* getelementptr inbounds ([4 x i64], [4 x i64]* @sprom_extract_r8.pwr_info_offset, i64 0, i64 0))
  %8 = load %struct.ssb_sprom*, %struct.ssb_sprom** %3, align 8
  %9 = getelementptr inbounds %struct.ssb_sprom, %struct.ssb_sprom* %8, i32 0, i32 3
  %10 = load i64*, i64** %9, align 8
  %11 = call i32 @ARRAY_SIZE(i64* %10)
  %12 = icmp ne i32 %7, %11
  %13 = zext i1 %12 to i32
  %14 = call i32 @BUILD_BUG_ON(i32 %13)
  %15 = load %struct.ssb_sprom*, %struct.ssb_sprom** %3, align 8
  %16 = getelementptr inbounds %struct.ssb_sprom, %struct.ssb_sprom* %15, i32 0, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = load i64*, i64** %4, align 8
  %19 = load i32, i32* @SSB_SPROM8_IL0MAC, align 4
  %20 = call i64 @SPOFF(i32 %19)
  %21 = getelementptr inbounds i64, i64* %18, i64 %20
  %22 = call i32 @sprom_get_mac(i32 %17, i64* %21)
  %23 = load i32, i32* @board_rev, align 4
  %24 = load i64, i64* @SSB_SPROM8_BOARDREV, align 8
  %25 = call i32 @SPEX(i32 %23, i64 %24, i32 65535, i32 0)
  %26 = load i32, i32* @board_type, align 4
  %27 = load i64, i64* @SSB_SPROM1_SPID, align 8
  %28 = call i32 @SPEX(i32 %26, i64 %27, i32 65535, i32 0)
  %29 = load i32*, i32** @alpha2, align 8
  %30 = getelementptr inbounds i32, i32* %29, i64 0
  %31 = load i32, i32* %30, align 4
  %32 = load i64, i64* @SSB_SPROM8_CCODE, align 8
  %33 = call i32 @SPEX(i32 %31, i64 %32, i32 65280, i32 8)
  %34 = load i32*, i32** @alpha2, align 8
  %35 = getelementptr inbounds i32, i32* %34, i64 1
  %36 = load i32, i32* %35, align 4
  %37 = load i64, i64* @SSB_SPROM8_CCODE, align 8
  %38 = call i32 @SPEX(i32 %36, i64 %37, i32 255, i32 0)
  %39 = load i32, i32* @boardflags_lo, align 4
  %40 = load i64, i64* @SSB_SPROM8_BFLLO, align 8
  %41 = call i32 @SPEX(i32 %39, i64 %40, i32 65535, i32 0)
  %42 = load i32, i32* @boardflags_hi, align 4
  %43 = load i64, i64* @SSB_SPROM8_BFLHI, align 8
  %44 = call i32 @SPEX(i32 %42, i64 %43, i32 65535, i32 0)
  %45 = load i32, i32* @boardflags2_lo, align 4
  %46 = load i64, i64* @SSB_SPROM8_BFL2LO, align 8
  %47 = call i32 @SPEX(i32 %45, i64 %46, i32 65535, i32 0)
  %48 = load i32, i32* @boardflags2_hi, align 4
  %49 = load i64, i64* @SSB_SPROM8_BFL2HI, align 8
  %50 = call i32 @SPEX(i32 %48, i64 %49, i32 65535, i32 0)
  %51 = load i32, i32* @ant_available_a, align 4
  %52 = load i64, i64* @SSB_SPROM8_ANTAVAIL, align 8
  %53 = load i32, i32* @SSB_SPROM8_ANTAVAIL_A, align 4
  %54 = load i32, i32* @SSB_SPROM8_ANTAVAIL_A_SHIFT, align 4
  %55 = call i32 @SPEX(i32 %51, i64 %52, i32 %53, i32 %54)
  %56 = load i32, i32* @ant_available_bg, align 4
  %57 = load i64, i64* @SSB_SPROM8_ANTAVAIL, align 8
  %58 = load i32, i32* @SSB_SPROM8_ANTAVAIL_BG, align 4
  %59 = load i32, i32* @SSB_SPROM8_ANTAVAIL_BG_SHIFT, align 4
  %60 = call i32 @SPEX(i32 %56, i64 %57, i32 %58, i32 %59)
  %61 = load i32, i32* @maxpwr_bg, align 4
  %62 = load i64, i64* @SSB_SPROM8_MAXP_BG, align 8
  %63 = load i32, i32* @SSB_SPROM8_MAXP_BG_MASK, align 4
  %64 = call i32 @SPEX(i32 %61, i64 %62, i32 %63, i32 0)
  %65 = load i32, i32* @itssi_bg, align 4
  %66 = load i64, i64* @SSB_SPROM8_MAXP_BG, align 8
  %67 = load i32, i32* @SSB_SPROM8_ITSSI_BG, align 4
  %68 = load i32, i32* @SSB_SPROM8_ITSSI_BG_SHIFT, align 4
  %69 = call i32 @SPEX(i32 %65, i64 %66, i32 %67, i32 %68)
  %70 = load i32, i32* @maxpwr_a, align 4
  %71 = load i64, i64* @SSB_SPROM8_MAXP_A, align 8
  %72 = load i32, i32* @SSB_SPROM8_MAXP_A_MASK, align 4
  %73 = call i32 @SPEX(i32 %70, i64 %71, i32 %72, i32 0)
  %74 = load i32, i32* @itssi_a, align 4
  %75 = load i64, i64* @SSB_SPROM8_MAXP_A, align 8
  %76 = load i32, i32* @SSB_SPROM8_ITSSI_A, align 4
  %77 = load i32, i32* @SSB_SPROM8_ITSSI_A_SHIFT, align 4
  %78 = call i32 @SPEX(i32 %74, i64 %75, i32 %76, i32 %77)
  %79 = load i32, i32* @maxpwr_ah, align 4
  %80 = load i64, i64* @SSB_SPROM8_MAXP_AHL, align 8
  %81 = load i32, i32* @SSB_SPROM8_MAXP_AH_MASK, align 4
  %82 = call i32 @SPEX(i32 %79, i64 %80, i32 %81, i32 0)
  %83 = load i32, i32* @maxpwr_al, align 4
  %84 = load i64, i64* @SSB_SPROM8_MAXP_AHL, align 8
  %85 = load i32, i32* @SSB_SPROM8_MAXP_AL_MASK, align 4
  %86 = load i32, i32* @SSB_SPROM8_MAXP_AL_SHIFT, align 4
  %87 = call i32 @SPEX(i32 %83, i64 %84, i32 %85, i32 %86)
  %88 = load i32, i32* @gpio0, align 4
  %89 = load i64, i64* @SSB_SPROM8_GPIOA, align 8
  %90 = load i32, i32* @SSB_SPROM8_GPIOA_P0, align 4
  %91 = call i32 @SPEX(i32 %88, i64 %89, i32 %90, i32 0)
  %92 = load i32, i32* @gpio1, align 4
  %93 = load i64, i64* @SSB_SPROM8_GPIOA, align 8
  %94 = load i32, i32* @SSB_SPROM8_GPIOA_P1, align 4
  %95 = load i32, i32* @SSB_SPROM8_GPIOA_P1_SHIFT, align 4
  %96 = call i32 @SPEX(i32 %92, i64 %93, i32 %94, i32 %95)
  %97 = load i32, i32* @gpio2, align 4
  %98 = load i64, i64* @SSB_SPROM8_GPIOB, align 8
  %99 = load i32, i32* @SSB_SPROM8_GPIOB_P2, align 4
  %100 = call i32 @SPEX(i32 %97, i64 %98, i32 %99, i32 0)
  %101 = load i32, i32* @gpio3, align 4
  %102 = load i64, i64* @SSB_SPROM8_GPIOB, align 8
  %103 = load i32, i32* @SSB_SPROM8_GPIOB_P3, align 4
  %104 = load i32, i32* @SSB_SPROM8_GPIOB_P3_SHIFT, align 4
  %105 = call i32 @SPEX(i32 %101, i64 %102, i32 %103, i32 %104)
  %106 = load i32, i32* @tri2g, align 4
  %107 = load i64, i64* @SSB_SPROM8_TRI25G, align 8
  %108 = load i32, i32* @SSB_SPROM8_TRI2G, align 4
  %109 = call i32 @SPEX(i32 %106, i64 %107, i32 %108, i32 0)
  %110 = load i32, i32* @tri5g, align 4
  %111 = load i64, i64* @SSB_SPROM8_TRI25G, align 8
  %112 = load i32, i32* @SSB_SPROM8_TRI5G, align 4
  %113 = load i32, i32* @SSB_SPROM8_TRI5G_SHIFT, align 4
  %114 = call i32 @SPEX(i32 %110, i64 %111, i32 %112, i32 %113)
  %115 = load i32, i32* @tri5gl, align 4
  %116 = load i64, i64* @SSB_SPROM8_TRI5GHL, align 8
  %117 = load i32, i32* @SSB_SPROM8_TRI5GL, align 4
  %118 = call i32 @SPEX(i32 %115, i64 %116, i32 %117, i32 0)
  %119 = load i32, i32* @tri5gh, align 4
  %120 = load i64, i64* @SSB_SPROM8_TRI5GHL, align 8
  %121 = load i32, i32* @SSB_SPROM8_TRI5GH, align 4
  %122 = load i32, i32* @SSB_SPROM8_TRI5GH_SHIFT, align 4
  %123 = call i32 @SPEX(i32 %119, i64 %120, i32 %121, i32 %122)
  %124 = load i32, i32* @rxpo2g, align 4
  %125 = load i64, i64* @SSB_SPROM8_RXPO, align 8
  %126 = load i32, i32* @SSB_SPROM8_RXPO2G, align 4
  %127 = call i32 @SPEX(i32 %124, i64 %125, i32 %126, i32 0)
  %128 = load i32, i32* @rxpo5g, align 4
  %129 = load i64, i64* @SSB_SPROM8_RXPO, align 8
  %130 = load i32, i32* @SSB_SPROM8_RXPO5G, align 4
  %131 = load i32, i32* @SSB_SPROM8_RXPO5G_SHIFT, align 4
  %132 = call i32 @SPEX(i32 %128, i64 %129, i32 %130, i32 %131)
  %133 = load i32, i32* @rssismf2g, align 4
  %134 = load i64, i64* @SSB_SPROM8_RSSIPARM2G, align 8
  %135 = load i32, i32* @SSB_SPROM8_RSSISMF2G, align 4
  %136 = call i32 @SPEX(i32 %133, i64 %134, i32 %135, i32 0)
  %137 = load i32, i32* @rssismc2g, align 4
  %138 = load i64, i64* @SSB_SPROM8_RSSIPARM2G, align 8
  %139 = load i32, i32* @SSB_SPROM8_RSSISMC2G, align 4
  %140 = load i32, i32* @SSB_SPROM8_RSSISMC2G_SHIFT, align 4
  %141 = call i32 @SPEX(i32 %137, i64 %138, i32 %139, i32 %140)
  %142 = load i32, i32* @rssisav2g, align 4
  %143 = load i64, i64* @SSB_SPROM8_RSSIPARM2G, align 8
  %144 = load i32, i32* @SSB_SPROM8_RSSISAV2G, align 4
  %145 = load i32, i32* @SSB_SPROM8_RSSISAV2G_SHIFT, align 4
  %146 = call i32 @SPEX(i32 %142, i64 %143, i32 %144, i32 %145)
  %147 = load i32, i32* @bxa2g, align 4
  %148 = load i64, i64* @SSB_SPROM8_RSSIPARM2G, align 8
  %149 = load i32, i32* @SSB_SPROM8_BXA2G, align 4
  %150 = load i32, i32* @SSB_SPROM8_BXA2G_SHIFT, align 4
  %151 = call i32 @SPEX(i32 %147, i64 %148, i32 %149, i32 %150)
  %152 = load i32, i32* @rssismf5g, align 4
  %153 = load i64, i64* @SSB_SPROM8_RSSIPARM5G, align 8
  %154 = load i32, i32* @SSB_SPROM8_RSSISMF5G, align 4
  %155 = call i32 @SPEX(i32 %152, i64 %153, i32 %154, i32 0)
  %156 = load i32, i32* @rssismc5g, align 4
  %157 = load i64, i64* @SSB_SPROM8_RSSIPARM5G, align 8
  %158 = load i32, i32* @SSB_SPROM8_RSSISMC5G, align 4
  %159 = load i32, i32* @SSB_SPROM8_RSSISMC5G_SHIFT, align 4
  %160 = call i32 @SPEX(i32 %156, i64 %157, i32 %158, i32 %159)
  %161 = load i32, i32* @rssisav5g, align 4
  %162 = load i64, i64* @SSB_SPROM8_RSSIPARM5G, align 8
  %163 = load i32, i32* @SSB_SPROM8_RSSISAV5G, align 4
  %164 = load i32, i32* @SSB_SPROM8_RSSISAV5G_SHIFT, align 4
  %165 = call i32 @SPEX(i32 %161, i64 %162, i32 %163, i32 %164)
  %166 = load i32, i32* @bxa5g, align 4
  %167 = load i64, i64* @SSB_SPROM8_RSSIPARM5G, align 8
  %168 = load i32, i32* @SSB_SPROM8_BXA5G, align 4
  %169 = load i32, i32* @SSB_SPROM8_BXA5G_SHIFT, align 4
  %170 = call i32 @SPEX(i32 %166, i64 %167, i32 %168, i32 %169)
  %171 = load i32, i32* @pa0b0, align 4
  %172 = load i64, i64* @SSB_SPROM8_PA0B0, align 8
  %173 = call i32 @SPEX(i32 %171, i64 %172, i32 65535, i32 0)
  %174 = load i32, i32* @pa0b1, align 4
  %175 = load i64, i64* @SSB_SPROM8_PA0B1, align 8
  %176 = call i32 @SPEX(i32 %174, i64 %175, i32 65535, i32 0)
  %177 = load i32, i32* @pa0b2, align 4
  %178 = load i64, i64* @SSB_SPROM8_PA0B2, align 8
  %179 = call i32 @SPEX(i32 %177, i64 %178, i32 65535, i32 0)
  %180 = load i32, i32* @pa1b0, align 4
  %181 = load i64, i64* @SSB_SPROM8_PA1B0, align 8
  %182 = call i32 @SPEX(i32 %180, i64 %181, i32 65535, i32 0)
  %183 = load i32, i32* @pa1b1, align 4
  %184 = load i64, i64* @SSB_SPROM8_PA1B1, align 8
  %185 = call i32 @SPEX(i32 %183, i64 %184, i32 65535, i32 0)
  %186 = load i32, i32* @pa1b2, align 4
  %187 = load i64, i64* @SSB_SPROM8_PA1B2, align 8
  %188 = call i32 @SPEX(i32 %186, i64 %187, i32 65535, i32 0)
  %189 = load i32, i32* @pa1lob0, align 4
  %190 = load i64, i64* @SSB_SPROM8_PA1LOB0, align 8
  %191 = call i32 @SPEX(i32 %189, i64 %190, i32 65535, i32 0)
  %192 = load i32, i32* @pa1lob1, align 4
  %193 = load i64, i64* @SSB_SPROM8_PA1LOB1, align 8
  %194 = call i32 @SPEX(i32 %192, i64 %193, i32 65535, i32 0)
  %195 = load i32, i32* @pa1lob2, align 4
  %196 = load i64, i64* @SSB_SPROM8_PA1LOB2, align 8
  %197 = call i32 @SPEX(i32 %195, i64 %196, i32 65535, i32 0)
  %198 = load i32, i32* @pa1hib0, align 4
  %199 = load i64, i64* @SSB_SPROM8_PA1HIB0, align 8
  %200 = call i32 @SPEX(i32 %198, i64 %199, i32 65535, i32 0)
  %201 = load i32, i32* @pa1hib1, align 4
  %202 = load i64, i64* @SSB_SPROM8_PA1HIB1, align 8
  %203 = call i32 @SPEX(i32 %201, i64 %202, i32 65535, i32 0)
  %204 = load i32, i32* @pa1hib2, align 4
  %205 = load i64, i64* @SSB_SPROM8_PA1HIB2, align 8
  %206 = call i32 @SPEX(i32 %204, i64 %205, i32 65535, i32 0)
  %207 = load i32, i32* @cck2gpo, align 4
  %208 = load i64, i64* @SSB_SPROM8_CCK2GPO, align 8
  %209 = call i32 @SPEX(i32 %207, i64 %208, i32 65535, i32 0)
  %210 = load i32, i32* @ofdm2gpo, align 4
  %211 = load i64, i64* @SSB_SPROM8_OFDM2GPO, align 8
  %212 = call i32 @SPEX32(i32 %210, i64 %211, i32 -1, i32 0)
  %213 = load i32, i32* @ofdm5glpo, align 4
  %214 = load i64, i64* @SSB_SPROM8_OFDM5GLPO, align 8
  %215 = call i32 @SPEX32(i32 %213, i64 %214, i32 -1, i32 0)
  %216 = load i32, i32* @ofdm5gpo, align 4
  %217 = load i64, i64* @SSB_SPROM8_OFDM5GPO, align 8
  %218 = call i32 @SPEX32(i32 %216, i64 %217, i32 -1, i32 0)
  %219 = load i32, i32* @ofdm5ghpo, align 4
  %220 = load i64, i64* @SSB_SPROM8_OFDM5GHPO, align 8
  %221 = call i32 @SPEX32(i32 %219, i64 %220, i32 -1, i32 0)
  %222 = load %struct.ssb_sprom*, %struct.ssb_sprom** %3, align 8
  %223 = getelementptr inbounds %struct.ssb_sprom, %struct.ssb_sprom* %222, i32 0, i32 0
  %224 = load i32, i32* %223, align 8
  %225 = load i64*, i64** %4, align 8
  %226 = load i32, i32* @SSB_SPROM8_AGAIN01, align 4
  %227 = load i32, i32* @SSB_SPROM8_AGAIN0, align 4
  %228 = load i32, i32* @SSB_SPROM8_AGAIN0_SHIFT, align 4
  %229 = call i8* @sprom_extract_antgain(i32 %224, i64* %225, i32 %226, i32 %227, i32 %228)
  %230 = load %struct.ssb_sprom*, %struct.ssb_sprom** %3, align 8
  %231 = getelementptr inbounds %struct.ssb_sprom, %struct.ssb_sprom* %230, i32 0, i32 1
  %232 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %231, i32 0, i32 3
  store i8* %229, i8** %232, align 8
  %233 = load %struct.ssb_sprom*, %struct.ssb_sprom** %3, align 8
  %234 = getelementptr inbounds %struct.ssb_sprom, %struct.ssb_sprom* %233, i32 0, i32 0
  %235 = load i32, i32* %234, align 8
  %236 = load i64*, i64** %4, align 8
  %237 = load i32, i32* @SSB_SPROM8_AGAIN01, align 4
  %238 = load i32, i32* @SSB_SPROM8_AGAIN1, align 4
  %239 = load i32, i32* @SSB_SPROM8_AGAIN1_SHIFT, align 4
  %240 = call i8* @sprom_extract_antgain(i32 %235, i64* %236, i32 %237, i32 %238, i32 %239)
  %241 = load %struct.ssb_sprom*, %struct.ssb_sprom** %3, align 8
  %242 = getelementptr inbounds %struct.ssb_sprom, %struct.ssb_sprom* %241, i32 0, i32 1
  %243 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %242, i32 0, i32 2
  store i8* %240, i8** %243, align 8
  %244 = load %struct.ssb_sprom*, %struct.ssb_sprom** %3, align 8
  %245 = getelementptr inbounds %struct.ssb_sprom, %struct.ssb_sprom* %244, i32 0, i32 0
  %246 = load i32, i32* %245, align 8
  %247 = load i64*, i64** %4, align 8
  %248 = load i32, i32* @SSB_SPROM8_AGAIN23, align 4
  %249 = load i32, i32* @SSB_SPROM8_AGAIN2, align 4
  %250 = load i32, i32* @SSB_SPROM8_AGAIN2_SHIFT, align 4
  %251 = call i8* @sprom_extract_antgain(i32 %246, i64* %247, i32 %248, i32 %249, i32 %250)
  %252 = load %struct.ssb_sprom*, %struct.ssb_sprom** %3, align 8
  %253 = getelementptr inbounds %struct.ssb_sprom, %struct.ssb_sprom* %252, i32 0, i32 1
  %254 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %253, i32 0, i32 1
  store i8* %251, i8** %254, align 8
  %255 = load %struct.ssb_sprom*, %struct.ssb_sprom** %3, align 8
  %256 = getelementptr inbounds %struct.ssb_sprom, %struct.ssb_sprom* %255, i32 0, i32 0
  %257 = load i32, i32* %256, align 8
  %258 = load i64*, i64** %4, align 8
  %259 = load i32, i32* @SSB_SPROM8_AGAIN23, align 4
  %260 = load i32, i32* @SSB_SPROM8_AGAIN3, align 4
  %261 = load i32, i32* @SSB_SPROM8_AGAIN3_SHIFT, align 4
  %262 = call i8* @sprom_extract_antgain(i32 %257, i64* %258, i32 %259, i32 %260, i32 %261)
  %263 = load %struct.ssb_sprom*, %struct.ssb_sprom** %3, align 8
  %264 = getelementptr inbounds %struct.ssb_sprom, %struct.ssb_sprom* %263, i32 0, i32 1
  %265 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %264, i32 0, i32 0
  store i8* %262, i8** %265, align 8
  store i32 0, i32* %5, align 4
  br label %266

266:                                              ; preds = %488, %2
  %267 = load i32, i32* %5, align 4
  %268 = call i32 @ARRAY_SIZE(i64* getelementptr inbounds ([4 x i64], [4 x i64]* @sprom_extract_r8.pwr_info_offset, i64 0, i64 0))
  %269 = icmp slt i32 %267, %268
  br i1 %269, label %270, label %491

270:                                              ; preds = %266
  %271 = load i32, i32* %5, align 4
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds [4 x i64], [4 x i64]* @sprom_extract_r8.pwr_info_offset, i64 0, i64 %272
  %274 = load i64, i64* %273, align 8
  store i64 %274, i64* %6, align 8
  %275 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %276 = load i32, i32* %5, align 4
  %277 = sext i32 %276 to i64
  %278 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %275, i64 %277
  %279 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %278, i32 0, i32 9
  %280 = load i32, i32* %279, align 4
  %281 = load i64, i64* %6, align 8
  %282 = load i64, i64* @SSB_SROM8_2G_MAXP_ITSSI, align 8
  %283 = add nsw i64 %281, %282
  %284 = load i32, i32* @SSB_SPROM8_2G_ITSSI, align 4
  %285 = load i32, i32* @SSB_SPROM8_2G_ITSSI_SHIFT, align 4
  %286 = call i32 @SPEX(i32 %280, i64 %283, i32 %284, i32 %285)
  %287 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %288 = load i32, i32* %5, align 4
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %287, i64 %289
  %291 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %290, i32 0, i32 8
  %292 = load i32, i32* %291, align 8
  %293 = load i64, i64* %6, align 8
  %294 = load i64, i64* @SSB_SROM8_2G_MAXP_ITSSI, align 8
  %295 = add nsw i64 %293, %294
  %296 = load i32, i32* @SSB_SPROM8_2G_MAXP, align 4
  %297 = call i32 @SPEX(i32 %292, i64 %295, i32 %296, i32 0)
  %298 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %299 = load i32, i32* %5, align 4
  %300 = sext i32 %299 to i64
  %301 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %298, i64 %300
  %302 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %301, i32 0, i32 7
  %303 = load i32*, i32** %302, align 8
  %304 = getelementptr inbounds i32, i32* %303, i64 0
  %305 = load i32, i32* %304, align 4
  %306 = load i64, i64* %6, align 8
  %307 = load i64, i64* @SSB_SROM8_2G_PA_0, align 8
  %308 = add nsw i64 %306, %307
  %309 = call i32 @SPEX(i32 %305, i64 %308, i32 -1, i32 0)
  %310 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %311 = load i32, i32* %5, align 4
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %310, i64 %312
  %314 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %313, i32 0, i32 7
  %315 = load i32*, i32** %314, align 8
  %316 = getelementptr inbounds i32, i32* %315, i64 1
  %317 = load i32, i32* %316, align 4
  %318 = load i64, i64* %6, align 8
  %319 = load i64, i64* @SSB_SROM8_2G_PA_1, align 8
  %320 = add nsw i64 %318, %319
  %321 = call i32 @SPEX(i32 %317, i64 %320, i32 -1, i32 0)
  %322 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %323 = load i32, i32* %5, align 4
  %324 = sext i32 %323 to i64
  %325 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %322, i64 %324
  %326 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %325, i32 0, i32 7
  %327 = load i32*, i32** %326, align 8
  %328 = getelementptr inbounds i32, i32* %327, i64 2
  %329 = load i32, i32* %328, align 4
  %330 = load i64, i64* %6, align 8
  %331 = load i64, i64* @SSB_SROM8_2G_PA_2, align 8
  %332 = add nsw i64 %330, %331
  %333 = call i32 @SPEX(i32 %329, i64 %332, i32 -1, i32 0)
  %334 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %335 = load i32, i32* %5, align 4
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %334, i64 %336
  %338 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %337, i32 0, i32 6
  %339 = load i32, i32* %338, align 4
  %340 = load i64, i64* %6, align 8
  %341 = load i64, i64* @SSB_SROM8_5G_MAXP_ITSSI, align 8
  %342 = add nsw i64 %340, %341
  %343 = load i32, i32* @SSB_SPROM8_5G_ITSSI, align 4
  %344 = load i32, i32* @SSB_SPROM8_5G_ITSSI_SHIFT, align 4
  %345 = call i32 @SPEX(i32 %339, i64 %342, i32 %343, i32 %344)
  %346 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %347 = load i32, i32* %5, align 4
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %346, i64 %348
  %350 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %349, i32 0, i32 5
  %351 = load i32, i32* %350, align 8
  %352 = load i64, i64* %6, align 8
  %353 = load i64, i64* @SSB_SROM8_5G_MAXP_ITSSI, align 8
  %354 = add nsw i64 %352, %353
  %355 = load i32, i32* @SSB_SPROM8_5G_MAXP, align 4
  %356 = call i32 @SPEX(i32 %351, i64 %354, i32 %355, i32 0)
  %357 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %358 = load i32, i32* %5, align 4
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %357, i64 %359
  %361 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %360, i32 0, i32 4
  %362 = load i32, i32* %361, align 4
  %363 = load i64, i64* %6, align 8
  %364 = load i64, i64* @SSB_SPROM8_5GHL_MAXP, align 8
  %365 = add nsw i64 %363, %364
  %366 = load i32, i32* @SSB_SPROM8_5GH_MAXP, align 4
  %367 = call i32 @SPEX(i32 %362, i64 %365, i32 %366, i32 0)
  %368 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %369 = load i32, i32* %5, align 4
  %370 = sext i32 %369 to i64
  %371 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %368, i64 %370
  %372 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %371, i32 0, i32 3
  %373 = load i32, i32* %372, align 8
  %374 = load i64, i64* %6, align 8
  %375 = load i64, i64* @SSB_SPROM8_5GHL_MAXP, align 8
  %376 = add nsw i64 %374, %375
  %377 = load i32, i32* @SSB_SPROM8_5GL_MAXP, align 4
  %378 = load i32, i32* @SSB_SPROM8_5GL_MAXP_SHIFT, align 4
  %379 = call i32 @SPEX(i32 %373, i64 %376, i32 %377, i32 %378)
  %380 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %381 = load i32, i32* %5, align 4
  %382 = sext i32 %381 to i64
  %383 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %380, i64 %382
  %384 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %383, i32 0, i32 2
  %385 = load i32*, i32** %384, align 8
  %386 = getelementptr inbounds i32, i32* %385, i64 0
  %387 = load i32, i32* %386, align 4
  %388 = load i64, i64* %6, align 8
  %389 = load i64, i64* @SSB_SROM8_5GL_PA_0, align 8
  %390 = add nsw i64 %388, %389
  %391 = call i32 @SPEX(i32 %387, i64 %390, i32 -1, i32 0)
  %392 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %393 = load i32, i32* %5, align 4
  %394 = sext i32 %393 to i64
  %395 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %392, i64 %394
  %396 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %395, i32 0, i32 2
  %397 = load i32*, i32** %396, align 8
  %398 = getelementptr inbounds i32, i32* %397, i64 1
  %399 = load i32, i32* %398, align 4
  %400 = load i64, i64* %6, align 8
  %401 = load i64, i64* @SSB_SROM8_5GL_PA_1, align 8
  %402 = add nsw i64 %400, %401
  %403 = call i32 @SPEX(i32 %399, i64 %402, i32 -1, i32 0)
  %404 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %405 = load i32, i32* %5, align 4
  %406 = sext i32 %405 to i64
  %407 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %404, i64 %406
  %408 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %407, i32 0, i32 2
  %409 = load i32*, i32** %408, align 8
  %410 = getelementptr inbounds i32, i32* %409, i64 2
  %411 = load i32, i32* %410, align 4
  %412 = load i64, i64* %6, align 8
  %413 = load i64, i64* @SSB_SROM8_5GL_PA_2, align 8
  %414 = add nsw i64 %412, %413
  %415 = call i32 @SPEX(i32 %411, i64 %414, i32 -1, i32 0)
  %416 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %417 = load i32, i32* %5, align 4
  %418 = sext i32 %417 to i64
  %419 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %416, i64 %418
  %420 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %419, i32 0, i32 1
  %421 = load i32*, i32** %420, align 8
  %422 = getelementptr inbounds i32, i32* %421, i64 0
  %423 = load i32, i32* %422, align 4
  %424 = load i64, i64* %6, align 8
  %425 = load i64, i64* @SSB_SROM8_5G_PA_0, align 8
  %426 = add nsw i64 %424, %425
  %427 = call i32 @SPEX(i32 %423, i64 %426, i32 -1, i32 0)
  %428 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %429 = load i32, i32* %5, align 4
  %430 = sext i32 %429 to i64
  %431 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %428, i64 %430
  %432 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %431, i32 0, i32 1
  %433 = load i32*, i32** %432, align 8
  %434 = getelementptr inbounds i32, i32* %433, i64 1
  %435 = load i32, i32* %434, align 4
  %436 = load i64, i64* %6, align 8
  %437 = load i64, i64* @SSB_SROM8_5G_PA_1, align 8
  %438 = add nsw i64 %436, %437
  %439 = call i32 @SPEX(i32 %435, i64 %438, i32 -1, i32 0)
  %440 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %441 = load i32, i32* %5, align 4
  %442 = sext i32 %441 to i64
  %443 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %440, i64 %442
  %444 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %443, i32 0, i32 1
  %445 = load i32*, i32** %444, align 8
  %446 = getelementptr inbounds i32, i32* %445, i64 2
  %447 = load i32, i32* %446, align 4
  %448 = load i64, i64* %6, align 8
  %449 = load i64, i64* @SSB_SROM8_5G_PA_2, align 8
  %450 = add nsw i64 %448, %449
  %451 = call i32 @SPEX(i32 %447, i64 %450, i32 -1, i32 0)
  %452 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %453 = load i32, i32* %5, align 4
  %454 = sext i32 %453 to i64
  %455 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %452, i64 %454
  %456 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %455, i32 0, i32 0
  %457 = load i32*, i32** %456, align 8
  %458 = getelementptr inbounds i32, i32* %457, i64 0
  %459 = load i32, i32* %458, align 4
  %460 = load i64, i64* %6, align 8
  %461 = load i64, i64* @SSB_SROM8_5GH_PA_0, align 8
  %462 = add nsw i64 %460, %461
  %463 = call i32 @SPEX(i32 %459, i64 %462, i32 -1, i32 0)
  %464 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %465 = load i32, i32* %5, align 4
  %466 = sext i32 %465 to i64
  %467 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %464, i64 %466
  %468 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %467, i32 0, i32 0
  %469 = load i32*, i32** %468, align 8
  %470 = getelementptr inbounds i32, i32* %469, i64 1
  %471 = load i32, i32* %470, align 4
  %472 = load i64, i64* %6, align 8
  %473 = load i64, i64* @SSB_SROM8_5GH_PA_1, align 8
  %474 = add nsw i64 %472, %473
  %475 = call i32 @SPEX(i32 %471, i64 %474, i32 -1, i32 0)
  %476 = load %struct.TYPE_10__*, %struct.TYPE_10__** @core_pwr_info, align 8
  %477 = load i32, i32* %5, align 4
  %478 = sext i32 %477 to i64
  %479 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %476, i64 %478
  %480 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %479, i32 0, i32 0
  %481 = load i32*, i32** %480, align 8
  %482 = getelementptr inbounds i32, i32* %481, i64 2
  %483 = load i32, i32* %482, align 4
  %484 = load i64, i64* %6, align 8
  %485 = load i64, i64* @SSB_SROM8_5GH_PA_2, align 8
  %486 = add nsw i64 %484, %485
  %487 = call i32 @SPEX(i32 %483, i64 %486, i32 -1, i32 0)
  br label %488

488:                                              ; preds = %270
  %489 = load i32, i32* %5, align 4
  %490 = add nsw i32 %489, 1
  store i32 %490, i32* %5, align 4
  br label %266

491:                                              ; preds = %266
  %492 = load i32, i32* getelementptr inbounds (%struct.TYPE_9__, %struct.TYPE_9__* @fem, i32 0, i32 1, i32 4), align 4
  %493 = load i64, i64* @SSB_SPROM8_FEM2G, align 8
  %494 = load i32, i32* @SSB_SROM8_FEM_TSSIPOS, align 4
  %495 = load i32, i32* @SSB_SROM8_FEM_TSSIPOS_SHIFT, align 4
  %496 = call i32 @SPEX(i32 %492, i64 %493, i32 %494, i32 %495)
  %497 = load i32, i32* getelementptr inbounds (%struct.TYPE_9__, %struct.TYPE_9__* @fem, i32 0, i32 1, i32 3), align 4
  %498 = load i64, i64* @SSB_SPROM8_FEM2G, align 8
  %499 = load i32, i32* @SSB_SROM8_FEM_EXTPA_GAIN, align 4
  %500 = load i32, i32* @SSB_SROM8_FEM_EXTPA_GAIN_SHIFT, align 4
  %501 = call i32 @SPEX(i32 %497, i64 %498, i32 %499, i32 %500)
  %502 = load i32, i32* getelementptr inbounds (%struct.TYPE_9__, %struct.TYPE_9__* @fem, i32 0, i32 1, i32 2), align 4
  %503 = load i64, i64* @SSB_SPROM8_FEM2G, align 8
  %504 = load i32, i32* @SSB_SROM8_FEM_PDET_RANGE, align 4
  %505 = load i32, i32* @SSB_SROM8_FEM_PDET_RANGE_SHIFT, align 4
  %506 = call i32 @SPEX(i32 %502, i64 %503, i32 %504, i32 %505)
  %507 = load i32, i32* getelementptr inbounds (%struct.TYPE_9__, %struct.TYPE_9__* @fem, i32 0, i32 1, i32 1), align 4
  %508 = load i64, i64* @SSB_SPROM8_FEM2G, align 8
  %509 = load i32, i32* @SSB_SROM8_FEM_TR_ISO, align 4
  %510 = load i32, i32* @SSB_SROM8_FEM_TR_ISO_SHIFT, align 4
  %511 = call i32 @SPEX(i32 %507, i64 %508, i32 %509, i32 %510)
  %512 = load i32, i32* getelementptr inbounds (%struct.TYPE_9__, %struct.TYPE_9__* @fem, i32 0, i32 1, i32 0), align 4
  %513 = load i64, i64* @SSB_SPROM8_FEM2G, align 8
  %514 = load i32, i32* @SSB_SROM8_FEM_ANTSWLUT, align 4
  %515 = load i32, i32* @SSB_SROM8_FEM_ANTSWLUT_SHIFT, align 4
  %516 = call i32 @SPEX(i32 %512, i64 %513, i32 %514, i32 %515)
  %517 = load i32, i32* getelementptr inbounds (%struct.TYPE_9__, %struct.TYPE_9__* @fem, i32 0, i32 0, i32 4), align 4
  %518 = load i64, i64* @SSB_SPROM8_FEM5G, align 8
  %519 = load i32, i32* @SSB_SROM8_FEM_TSSIPOS, align 4
  %520 = load i32, i32* @SSB_SROM8_FEM_TSSIPOS_SHIFT, align 4
  %521 = call i32 @SPEX(i32 %517, i64 %518, i32 %519, i32 %520)
  %522 = load i32, i32* getelementptr inbounds (%struct.TYPE_9__, %struct.TYPE_9__* @fem, i32 0, i32 0, i32 3), align 4
  %523 = load i64, i64* @SSB_SPROM8_FEM5G, align 8
  %524 = load i32, i32* @SSB_SROM8_FEM_EXTPA_GAIN, align 4
  %525 = load i32, i32* @SSB_SROM8_FEM_EXTPA_GAIN_SHIFT, align 4
  %526 = call i32 @SPEX(i32 %522, i64 %523, i32 %524, i32 %525)
  %527 = load i32, i32* getelementptr inbounds (%struct.TYPE_9__, %struct.TYPE_9__* @fem, i32 0, i32 0, i32 2), align 4
  %528 = load i64, i64* @SSB_SPROM8_FEM5G, align 8
  %529 = load i32, i32* @SSB_SROM8_FEM_PDET_RANGE, align 4
  %530 = load i32, i32* @SSB_SROM8_FEM_PDET_RANGE_SHIFT, align 4
  %531 = call i32 @SPEX(i32 %527, i64 %528, i32 %529, i32 %530)
  %532 = load i32, i32* getelementptr inbounds (%struct.TYPE_9__, %struct.TYPE_9__* @fem, i32 0, i32 0, i32 1), align 4
  %533 = load i64, i64* @SSB_SPROM8_FEM5G, align 8
  %534 = load i32, i32* @SSB_SROM8_FEM_TR_ISO, align 4
  %535 = load i32, i32* @SSB_SROM8_FEM_TR_ISO_SHIFT, align 4
  %536 = call i32 @SPEX(i32 %532, i64 %533, i32 %534, i32 %535)
  %537 = load i32, i32* getelementptr inbounds (%struct.TYPE_9__, %struct.TYPE_9__* @fem, i32 0, i32 0, i32 0), align 4
  %538 = load i64, i64* @SSB_SPROM8_FEM5G, align 8
  %539 = load i32, i32* @SSB_SROM8_FEM_ANTSWLUT, align 4
  %540 = load i32, i32* @SSB_SROM8_FEM_ANTSWLUT_SHIFT, align 4
  %541 = call i32 @SPEX(i32 %537, i64 %538, i32 %539, i32 %540)
  %542 = load i32, i32* @leddc_on_time, align 4
  %543 = load i64, i64* @SSB_SPROM8_LEDDC, align 8
  %544 = load i32, i32* @SSB_SPROM8_LEDDC_ON, align 4
  %545 = load i32, i32* @SSB_SPROM8_LEDDC_ON_SHIFT, align 4
  %546 = call i32 @SPEX(i32 %542, i64 %543, i32 %544, i32 %545)
  %547 = load i32, i32* @leddc_off_time, align 4
  %548 = load i64, i64* @SSB_SPROM8_LEDDC, align 8
  %549 = load i32, i32* @SSB_SPROM8_LEDDC_OFF, align 4
  %550 = load i32, i32* @SSB_SPROM8_LEDDC_OFF_SHIFT, align 4
  %551 = call i32 @SPEX(i32 %547, i64 %548, i32 %549, i32 %550)
  %552 = load i32, i32* @txchain, align 4
  %553 = load i64, i64* @SSB_SPROM8_TXRXC, align 8
  %554 = load i32, i32* @SSB_SPROM8_TXRXC_TXCHAIN, align 4
  %555 = load i32, i32* @SSB_SPROM8_TXRXC_TXCHAIN_SHIFT, align 4
  %556 = call i32 @SPEX(i32 %552, i64 %553, i32 %554, i32 %555)
  %557 = load i32, i32* @rxchain, align 4
  %558 = load i64, i64* @SSB_SPROM8_TXRXC, align 8
  %559 = load i32, i32* @SSB_SPROM8_TXRXC_RXCHAIN, align 4
  %560 = load i32, i32* @SSB_SPROM8_TXRXC_RXCHAIN_SHIFT, align 4
  %561 = call i32 @SPEX(i32 %557, i64 %558, i32 %559, i32 %560)
  %562 = load i32, i32* @antswitch, align 4
  %563 = load i64, i64* @SSB_SPROM8_TXRXC, align 8
  %564 = load i32, i32* @SSB_SPROM8_TXRXC_SWITCH, align 4
  %565 = load i32, i32* @SSB_SPROM8_TXRXC_SWITCH_SHIFT, align 4
  %566 = call i32 @SPEX(i32 %562, i64 %563, i32 %564, i32 %565)
  %567 = load i32, i32* @opo, align 4
  %568 = load i64, i64* @SSB_SPROM8_OFDM2GPO, align 8
  %569 = call i32 @SPEX(i32 %567, i64 %568, i32 255, i32 0)
  %570 = load i32, i32* @mcs2gpo, align 4
  %571 = load i32, i32* @SSB_SPROM8_2G_MCSPO, align 4
  %572 = call i32 @SPEX_ARRAY8(i32 %570, i32 %571, i32 -1, i32 0)
  %573 = load i32, i32* @mcs5gpo, align 4
  %574 = load i32, i32* @SSB_SPROM8_5G_MCSPO, align 4
  %575 = call i32 @SPEX_ARRAY8(i32 %573, i32 %574, i32 -1, i32 0)
  %576 = load i32, i32* @mcs5glpo, align 4
  %577 = load i32, i32* @SSB_SPROM8_5GL_MCSPO, align 4
  %578 = call i32 @SPEX_ARRAY8(i32 %576, i32 %577, i32 -1, i32 0)
  %579 = load i32, i32* @mcs5ghpo, align 4
  %580 = load i32, i32* @SSB_SPROM8_5GH_MCSPO, align 4
  %581 = call i32 @SPEX_ARRAY8(i32 %579, i32 %580, i32 -1, i32 0)
  %582 = load i32, i32* @rawtempsense, align 4
  %583 = load i64, i64* @SSB_SPROM8_RAWTS, align 8
  %584 = load i32, i32* @SSB_SPROM8_RAWTS_RAWTEMP, align 4
  %585 = load i32, i32* @SSB_SPROM8_RAWTS_RAWTEMP_SHIFT, align 4
  %586 = call i32 @SPEX(i32 %582, i64 %583, i32 %584, i32 %585)
  %587 = load i32, i32* @measpower, align 4
  %588 = load i64, i64* @SSB_SPROM8_RAWTS, align 8
  %589 = load i32, i32* @SSB_SPROM8_RAWTS_MEASPOWER, align 4
  %590 = load i32, i32* @SSB_SPROM8_RAWTS_MEASPOWER_SHIFT, align 4
  %591 = call i32 @SPEX(i32 %587, i64 %588, i32 %589, i32 %590)
  %592 = load i32, i32* @tempsense_slope, align 4
  %593 = load i64, i64* @SSB_SPROM8_OPT_CORRX, align 8
  %594 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMP_SLOPE, align 4
  %595 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMP_SLOPE_SHIFT, align 4
  %596 = call i32 @SPEX(i32 %592, i64 %593, i32 %594, i32 %595)
  %597 = load i32, i32* @tempcorrx, align 4
  %598 = load i64, i64* @SSB_SPROM8_OPT_CORRX, align 8
  %599 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMPCORRX, align 4
  %600 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMPCORRX_SHIFT, align 4
  %601 = call i32 @SPEX(i32 %597, i64 %598, i32 %599, i32 %600)
  %602 = load i32, i32* @tempsense_option, align 4
  %603 = load i64, i64* @SSB_SPROM8_OPT_CORRX, align 8
  %604 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMP_OPTION, align 4
  %605 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMP_OPTION_SHIFT, align 4
  %606 = call i32 @SPEX(i32 %602, i64 %603, i32 %604, i32 %605)
  %607 = load i32, i32* @freqoffset_corr, align 4
  %608 = load i64, i64* @SSB_SPROM8_HWIQ_IQSWP, align 8
  %609 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_FREQ_CORR, align 4
  %610 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_FREQ_CORR_SHIFT, align 4
  %611 = call i32 @SPEX(i32 %607, i64 %608, i32 %609, i32 %610)
  %612 = load i32, i32* @iqcal_swp_dis, align 4
  %613 = load i64, i64* @SSB_SPROM8_HWIQ_IQSWP, align 8
  %614 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_IQCAL_SWP, align 4
  %615 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_IQCAL_SWP_SHIFT, align 4
  %616 = call i32 @SPEX(i32 %612, i64 %613, i32 %614, i32 %615)
  %617 = load i32, i32* @hw_iqcal_en, align 4
  %618 = load i64, i64* @SSB_SPROM8_HWIQ_IQSWP, align 8
  %619 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_HW_IQCAL, align 4
  %620 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_HW_IQCAL_SHIFT, align 4
  %621 = call i32 @SPEX(i32 %617, i64 %618, i32 %619, i32 %620)
  %622 = load i32, i32* @bw40po, align 4
  %623 = load i64, i64* @SSB_SPROM8_BW40PO, align 8
  %624 = call i32 @SPEX(i32 %622, i64 %623, i32 -1, i32 0)
  %625 = load i32, i32* @cddpo, align 4
  %626 = load i64, i64* @SSB_SPROM8_CDDPO, align 8
  %627 = call i32 @SPEX(i32 %625, i64 %626, i32 -1, i32 0)
  %628 = load i32, i32* @stbcpo, align 4
  %629 = load i64, i64* @SSB_SPROM8_STBCPO, align 8
  %630 = call i32 @SPEX(i32 %628, i64 %629, i32 -1, i32 0)
  %631 = load i32, i32* @bwduppo, align 4
  %632 = load i64, i64* @SSB_SPROM8_BWDUPPO, align 8
  %633 = call i32 @SPEX(i32 %631, i64 %632, i32 -1, i32 0)
  %634 = load i32, i32* @tempthresh, align 4
  %635 = load i64, i64* @SSB_SPROM8_THERMAL, align 8
  %636 = load i32, i32* @SSB_SPROM8_THERMAL_TRESH, align 4
  %637 = load i32, i32* @SSB_SPROM8_THERMAL_TRESH_SHIFT, align 4
  %638 = call i32 @SPEX(i32 %634, i64 %635, i32 %636, i32 %637)
  %639 = load i32, i32* @tempoffset, align 4
  %640 = load i64, i64* @SSB_SPROM8_THERMAL, align 8
  %641 = load i32, i32* @SSB_SPROM8_THERMAL_OFFSET, align 4
  %642 = load i32, i32* @SSB_SPROM8_THERMAL_OFFSET_SHIFT, align 4
  %643 = call i32 @SPEX(i32 %639, i64 %640, i32 %641, i32 %642)
  %644 = load i32, i32* @phycal_tempdelta, align 4
  %645 = load i64, i64* @SSB_SPROM8_TEMPDELTA, align 8
  %646 = load i32, i32* @SSB_SPROM8_TEMPDELTA_PHYCAL, align 4
  %647 = load i32, i32* @SSB_SPROM8_TEMPDELTA_PHYCAL_SHIFT, align 4
  %648 = call i32 @SPEX(i32 %644, i64 %645, i32 %646, i32 %647)
  %649 = load i32, i32* @temps_period, align 4
  %650 = load i64, i64* @SSB_SPROM8_TEMPDELTA, align 8
  %651 = load i32, i32* @SSB_SPROM8_TEMPDELTA_PERIOD, align 4
  %652 = load i32, i32* @SSB_SPROM8_TEMPDELTA_PERIOD_SHIFT, align 4
  %653 = call i32 @SPEX(i32 %649, i64 %650, i32 %651, i32 %652)
  %654 = load i32, i32* @temps_hysteresis, align 4
  %655 = load i64, i64* @SSB_SPROM8_TEMPDELTA, align 8
  %656 = load i32, i32* @SSB_SPROM8_TEMPDELTA_HYSTERESIS, align 4
  %657 = load i32, i32* @SSB_SPROM8_TEMPDELTA_HYSTERESIS_SHIFT, align 4
  %658 = call i32 @SPEX(i32 %654, i64 %655, i32 %656, i32 %657)
  %659 = load %struct.ssb_sprom*, %struct.ssb_sprom** %3, align 8
  %660 = load i64*, i64** %4, align 8
  %661 = call i32 @sprom_extract_r458(%struct.ssb_sprom* %659, i64* %660)
  ret void
}

declare dso_local i32 @BUILD_BUG_ON(i32) #1

declare dso_local i32 @ARRAY_SIZE(i64*) #1

declare dso_local i32 @sprom_get_mac(i32, i64*) #1

declare dso_local i64 @SPOFF(i32) #1

declare dso_local i32 @SPEX(i32, i64, i32, i32) #1

declare dso_local i32 @SPEX32(i32, i64, i32, i32) #1

declare dso_local i8* @sprom_extract_antgain(i32, i64*, i32, i32, i32) #1

declare dso_local i32 @SPEX_ARRAY8(i32, i32, i32, i32) #1

declare dso_local i32 @sprom_extract_r458(%struct.ssb_sprom*, i64*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
