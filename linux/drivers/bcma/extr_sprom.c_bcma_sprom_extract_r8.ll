; ModuleID = '/home/carl/AnghaBench/linux/drivers/bcma/extr_sprom.c_bcma_sprom_extract_r8.c'
source_filename = "/home/carl/AnghaBench/linux/drivers/bcma/extr_sprom.c_bcma_sprom_extract_r8.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_12__ = type { i32*, i32*, i32*, i32, i32, i32, i32, i32*, i32, i32 }
%struct.TYPE_11__ = type { %struct.TYPE_8__, %struct.TYPE_7__ }
%struct.TYPE_8__ = type { i32, i32, i32, i32, i32 }
%struct.TYPE_7__ = type { i32, i32, i32, i32, i32 }
%struct.bcma_bus = type { %struct.TYPE_10__ }
%struct.TYPE_10__ = type { %struct.TYPE_9__, i64, i64* }
%struct.TYPE_9__ = type { i8*, i8*, i8*, i8* }

@bcma_sprom_extract_r8.pwr_info_offset = internal constant [4 x i64] [i64 131, i64 130, i64 129, i64 128], align 16
@SSB_SPROM8_IL0MAC = common dso_local global i32 0, align 4
@board_rev = common dso_local global i32 0, align 4
@SSB_SPROM8_BOARDREV = common dso_local global i64 0, align 8
@board_type = common dso_local global i32 0, align 4
@SSB_SPROM1_SPID = common dso_local global i64 0, align 8
@txpid2g = common dso_local global i32* null, align 8
@SSB_SPROM4_TXPID2G01 = common dso_local global i64 0, align 8
@SSB_SPROM4_TXPID2G0 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID2G0_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID2G1 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID2G1_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID2G23 = common dso_local global i64 0, align 8
@SSB_SPROM4_TXPID2G2 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID2G2_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID2G3 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID2G3_SHIFT = common dso_local global i32 0, align 4
@txpid5gl = common dso_local global i32* null, align 8
@SSB_SPROM4_TXPID5GL01 = common dso_local global i64 0, align 8
@SSB_SPROM4_TXPID5GL0 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GL0_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GL1 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GL1_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GL23 = common dso_local global i64 0, align 8
@SSB_SPROM4_TXPID5GL2 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GL2_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GL3 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GL3_SHIFT = common dso_local global i32 0, align 4
@txpid5g = common dso_local global i32* null, align 8
@SSB_SPROM4_TXPID5G01 = common dso_local global i64 0, align 8
@SSB_SPROM4_TXPID5G0 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5G0_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5G1 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5G1_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5G23 = common dso_local global i64 0, align 8
@SSB_SPROM4_TXPID5G2 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5G2_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5G3 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5G3_SHIFT = common dso_local global i32 0, align 4
@txpid5gh = common dso_local global i32* null, align 8
@SSB_SPROM4_TXPID5GH01 = common dso_local global i64 0, align 8
@SSB_SPROM4_TXPID5GH0 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GH0_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GH1 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GH1_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GH23 = common dso_local global i64 0, align 8
@SSB_SPROM4_TXPID5GH2 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GH2_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GH3 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GH3_SHIFT = common dso_local global i32 0, align 4
@boardflags_lo = common dso_local global i32 0, align 4
@SSB_SPROM8_BFLLO = common dso_local global i64 0, align 8
@boardflags_hi = common dso_local global i32 0, align 4
@SSB_SPROM8_BFLHI = common dso_local global i64 0, align 8
@boardflags2_lo = common dso_local global i32 0, align 4
@SSB_SPROM8_BFL2LO = common dso_local global i64 0, align 8
@boardflags2_hi = common dso_local global i32 0, align 4
@SSB_SPROM8_BFL2HI = common dso_local global i64 0, align 8
@alpha2 = common dso_local global i32* null, align 8
@SSB_SPROM8_CCODE = common dso_local global i64 0, align 8
@core_pwr_info = common dso_local global %struct.TYPE_12__* null, align 8
@SSB_SROM8_2G_MAXP_ITSSI = common dso_local global i64 0, align 8
@SSB_SPROM8_2G_ITSSI = common dso_local global i32 0, align 4
@SSB_SPROM8_2G_ITSSI_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_2G_MAXP = common dso_local global i32 0, align 4
@SSB_SROM8_2G_PA_0 = common dso_local global i64 0, align 8
@SSB_SROM8_2G_PA_1 = common dso_local global i64 0, align 8
@SSB_SROM8_2G_PA_2 = common dso_local global i64 0, align 8
@SSB_SROM8_5G_MAXP_ITSSI = common dso_local global i64 0, align 8
@SSB_SPROM8_5G_ITSSI = common dso_local global i32 0, align 4
@SSB_SPROM8_5G_ITSSI_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_5G_MAXP = common dso_local global i32 0, align 4
@SSB_SPROM8_5GHL_MAXP = common dso_local global i64 0, align 8
@SSB_SPROM8_5GH_MAXP = common dso_local global i32 0, align 4
@SSB_SPROM8_5GL_MAXP = common dso_local global i32 0, align 4
@SSB_SPROM8_5GL_MAXP_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_5GL_PA_0 = common dso_local global i64 0, align 8
@SSB_SROM8_5GL_PA_1 = common dso_local global i64 0, align 8
@SSB_SROM8_5GL_PA_2 = common dso_local global i64 0, align 8
@SSB_SROM8_5G_PA_0 = common dso_local global i64 0, align 8
@SSB_SROM8_5G_PA_1 = common dso_local global i64 0, align 8
@SSB_SROM8_5G_PA_2 = common dso_local global i64 0, align 8
@SSB_SROM8_5GH_PA_0 = common dso_local global i64 0, align 8
@SSB_SROM8_5GH_PA_1 = common dso_local global i64 0, align 8
@SSB_SROM8_5GH_PA_2 = common dso_local global i64 0, align 8
@fem = common dso_local global %struct.TYPE_11__ zeroinitializer, align 4
@SSB_SPROM8_FEM2G = common dso_local global i64 0, align 8
@SSB_SROM8_FEM_TSSIPOS = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_TSSIPOS_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_EXTPA_GAIN = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_EXTPA_GAIN_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_PDET_RANGE = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_PDET_RANGE_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_TR_ISO = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_TR_ISO_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_ANTSWLUT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_ANTSWLUT_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_FEM5G = common dso_local global i64 0, align 8
@ant_available_a = common dso_local global i32 0, align 4
@SSB_SPROM8_ANTAVAIL = common dso_local global i64 0, align 8
@SSB_SPROM8_ANTAVAIL_A = common dso_local global i32 0, align 4
@SSB_SPROM8_ANTAVAIL_A_SHIFT = common dso_local global i32 0, align 4
@ant_available_bg = common dso_local global i32 0, align 4
@SSB_SPROM8_ANTAVAIL_BG = common dso_local global i32 0, align 4
@SSB_SPROM8_ANTAVAIL_BG_SHIFT = common dso_local global i32 0, align 4
@maxpwr_bg = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_BG = common dso_local global i64 0, align 8
@SSB_SPROM8_MAXP_BG_MASK = common dso_local global i32 0, align 4
@itssi_bg = common dso_local global i32 0, align 4
@SSB_SPROM8_ITSSI_BG = common dso_local global i32 0, align 4
@SSB_SPROM8_ITSSI_BG_SHIFT = common dso_local global i32 0, align 4
@maxpwr_a = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_A = common dso_local global i64 0, align 8
@SSB_SPROM8_MAXP_A_MASK = common dso_local global i32 0, align 4
@itssi_a = common dso_local global i32 0, align 4
@SSB_SPROM8_ITSSI_A = common dso_local global i32 0, align 4
@SSB_SPROM8_ITSSI_A_SHIFT = common dso_local global i32 0, align 4
@maxpwr_ah = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_AHL = common dso_local global i64 0, align 8
@SSB_SPROM8_MAXP_AH_MASK = common dso_local global i32 0, align 4
@maxpwr_al = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_AL_MASK = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_AL_SHIFT = common dso_local global i32 0, align 4
@gpio0 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOA = common dso_local global i64 0, align 8
@SSB_SPROM8_GPIOA_P0 = common dso_local global i32 0, align 4
@gpio1 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOA_P1 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOA_P1_SHIFT = common dso_local global i32 0, align 4
@gpio2 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOB = common dso_local global i64 0, align 8
@SSB_SPROM8_GPIOB_P2 = common dso_local global i32 0, align 4
@gpio3 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOB_P3 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOB_P3_SHIFT = common dso_local global i32 0, align 4
@tri2g = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI25G = common dso_local global i64 0, align 8
@SSB_SPROM8_TRI2G = common dso_local global i32 0, align 4
@tri5g = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5G = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5G_SHIFT = common dso_local global i32 0, align 4
@tri5gl = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5GHL = common dso_local global i64 0, align 8
@SSB_SPROM8_TRI5GL = common dso_local global i32 0, align 4
@tri5gh = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5GH = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5GH_SHIFT = common dso_local global i32 0, align 4
@rxpo2g = common dso_local global i32 0, align 4
@SSB_SPROM8_RXPO = common dso_local global i64 0, align 8
@SSB_SPROM8_RXPO2G = common dso_local global i32 0, align 4
@SSB_SPROM8_RXPO2G_SHIFT = common dso_local global i32 0, align 4
@rxpo5g = common dso_local global i32 0, align 4
@SSB_SPROM8_RXPO5G = common dso_local global i32 0, align 4
@SSB_SPROM8_RXPO5G_SHIFT = common dso_local global i32 0, align 4
@rssismf2g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSIPARM2G = common dso_local global i64 0, align 8
@SSB_SPROM8_RSSISMF2G = common dso_local global i32 0, align 4
@rssismc2g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMC2G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMC2G_SHIFT = common dso_local global i32 0, align 4
@rssisav2g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISAV2G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISAV2G_SHIFT = common dso_local global i32 0, align 4
@bxa2g = common dso_local global i32 0, align 4
@SSB_SPROM8_BXA2G = common dso_local global i32 0, align 4
@SSB_SPROM8_BXA2G_SHIFT = common dso_local global i32 0, align 4
@rssismf5g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSIPARM5G = common dso_local global i64 0, align 8
@SSB_SPROM8_RSSISMF5G = common dso_local global i32 0, align 4
@rssismc5g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMC5G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMC5G_SHIFT = common dso_local global i32 0, align 4
@rssisav5g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISAV5G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISAV5G_SHIFT = common dso_local global i32 0, align 4
@bxa5g = common dso_local global i32 0, align 4
@SSB_SPROM8_BXA5G = common dso_local global i32 0, align 4
@SSB_SPROM8_BXA5G_SHIFT = common dso_local global i32 0, align 4
@pa0b0 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA0B0 = common dso_local global i64 0, align 8
@pa0b1 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA0B1 = common dso_local global i64 0, align 8
@pa0b2 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA0B2 = common dso_local global i64 0, align 8
@pa1b0 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1B0 = common dso_local global i64 0, align 8
@pa1b1 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1B1 = common dso_local global i64 0, align 8
@pa1b2 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1B2 = common dso_local global i64 0, align 8
@pa1lob0 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1LOB0 = common dso_local global i64 0, align 8
@pa1lob1 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1LOB1 = common dso_local global i64 0, align 8
@pa1lob2 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1LOB2 = common dso_local global i64 0, align 8
@pa1hib0 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1HIB0 = common dso_local global i64 0, align 8
@pa1hib1 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1HIB1 = common dso_local global i64 0, align 8
@pa1hib2 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1HIB2 = common dso_local global i64 0, align 8
@cck2gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_CCK2GPO = common dso_local global i64 0, align 8
@ofdm2gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_OFDM2GPO = common dso_local global i64 0, align 8
@ofdm5glpo = common dso_local global i32 0, align 4
@SSB_SPROM8_OFDM5GLPO = common dso_local global i64 0, align 8
@ofdm5gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_OFDM5GPO = common dso_local global i64 0, align 8
@ofdm5ghpo = common dso_local global i32 0, align 4
@SSB_SPROM8_OFDM5GHPO = common dso_local global i64 0, align 8
@SSB_SPROM8_AGAIN01 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN0 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN0_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN1 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN1_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN23 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN2 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN2_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN3 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN3_SHIFT = common dso_local global i32 0, align 4
@leddc_on_time = common dso_local global i32 0, align 4
@SSB_SPROM8_LEDDC = common dso_local global i64 0, align 8
@SSB_SPROM8_LEDDC_ON = common dso_local global i32 0, align 4
@SSB_SPROM8_LEDDC_ON_SHIFT = common dso_local global i32 0, align 4
@leddc_off_time = common dso_local global i32 0, align 4
@SSB_SPROM8_LEDDC_OFF = common dso_local global i32 0, align 4
@SSB_SPROM8_LEDDC_OFF_SHIFT = common dso_local global i32 0, align 4
@txchain = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC = common dso_local global i64 0, align 8
@SSB_SPROM8_TXRXC_TXCHAIN = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_TXCHAIN_SHIFT = common dso_local global i32 0, align 4
@rxchain = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_RXCHAIN = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_RXCHAIN_SHIFT = common dso_local global i32 0, align 4
@antswitch = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_SWITCH = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_SWITCH_SHIFT = common dso_local global i32 0, align 4
@opo = common dso_local global i32 0, align 4
@mcs2gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_2G_MCSPO = common dso_local global i32 0, align 4
@mcs5gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_5G_MCSPO = common dso_local global i32 0, align 4
@mcs5glpo = common dso_local global i32 0, align 4
@SSB_SPROM8_5GL_MCSPO = common dso_local global i32 0, align 4
@mcs5ghpo = common dso_local global i32 0, align 4
@SSB_SPROM8_5GH_MCSPO = common dso_local global i32 0, align 4
@rawtempsense = common dso_local global i32 0, align 4
@SSB_SPROM8_RAWTS = common dso_local global i64 0, align 8
@SSB_SPROM8_RAWTS_RAWTEMP = common dso_local global i32 0, align 4
@SSB_SPROM8_RAWTS_RAWTEMP_SHIFT = common dso_local global i32 0, align 4
@measpower = common dso_local global i32 0, align 4
@SSB_SPROM8_RAWTS_MEASPOWER = common dso_local global i32 0, align 4
@SSB_SPROM8_RAWTS_MEASPOWER_SHIFT = common dso_local global i32 0, align 4
@tempsense_slope = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX = common dso_local global i64 0, align 8
@SSB_SPROM8_OPT_CORRX_TEMP_SLOPE = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMP_SLOPE_SHIFT = common dso_local global i32 0, align 4
@tempcorrx = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMPCORRX = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMPCORRX_SHIFT = common dso_local global i32 0, align 4
@tempsense_option = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMP_OPTION = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMP_OPTION_SHIFT = common dso_local global i32 0, align 4
@freqoffset_corr = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP = common dso_local global i64 0, align 8
@SSB_SPROM8_HWIQ_IQSWP_FREQ_CORR = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_FREQ_CORR_SHIFT = common dso_local global i32 0, align 4
@iqcal_swp_dis = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_IQCAL_SWP = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_IQCAL_SWP_SHIFT = common dso_local global i32 0, align 4
@hw_iqcal_en = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_HW_IQCAL = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_HW_IQCAL_SHIFT = common dso_local global i32 0, align 4
@bw40po = common dso_local global i32 0, align 4
@SSB_SPROM8_BW40PO = common dso_local global i64 0, align 8
@cddpo = common dso_local global i32 0, align 4
@SSB_SPROM8_CDDPO = common dso_local global i64 0, align 8
@stbcpo = common dso_local global i32 0, align 4
@SSB_SPROM8_STBCPO = common dso_local global i64 0, align 8
@bwduppo = common dso_local global i32 0, align 4
@SSB_SPROM8_BWDUPPO = common dso_local global i64 0, align 8
@tempthresh = common dso_local global i32 0, align 4
@SSB_SPROM8_THERMAL = common dso_local global i64 0, align 8
@SSB_SPROM8_THERMAL_TRESH = common dso_local global i32 0, align 4
@SSB_SPROM8_THERMAL_TRESH_SHIFT = common dso_local global i32 0, align 4
@tempoffset = common dso_local global i32 0, align 4
@SSB_SPROM8_THERMAL_OFFSET = common dso_local global i32 0, align 4
@SSB_SPROM8_THERMAL_OFFSET_SHIFT = common dso_local global i32 0, align 4
@phycal_tempdelta = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA = common dso_local global i64 0, align 8
@SSB_SPROM8_TEMPDELTA_PHYCAL = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_PHYCAL_SHIFT = common dso_local global i32 0, align 4
@temps_period = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_PERIOD = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_PERIOD_SHIFT = common dso_local global i32 0, align 4
@temps_hysteresis = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_HYSTERESIS = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_HYSTERESIS_SHIFT = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.bcma_bus*, i64*)* @bcma_sprom_extract_r8 to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @bcma_sprom_extract_r8(%struct.bcma_bus* %0, i64* %1) #0 {
  %3 = alloca %struct.bcma_bus*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32, align 4
  store %struct.bcma_bus* %0, %struct.bcma_bus** %3, align 8
  store i64* %1, i64** %4, align 8
  %8 = call i32 @ARRAY_SIZE(i64* getelementptr inbounds ([4 x i64], [4 x i64]* @bcma_sprom_extract_r8.pwr_info_offset, i64 0, i64 0))
  %9 = load %struct.bcma_bus*, %struct.bcma_bus** %3, align 8
  %10 = getelementptr inbounds %struct.bcma_bus, %struct.bcma_bus* %9, i32 0, i32 0
  %11 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %10, i32 0, i32 2
  %12 = load i64*, i64** %11, align 8
  %13 = call i32 @ARRAY_SIZE(i64* %12)
  %14 = icmp ne i32 %8, %13
  %15 = zext i1 %14 to i32
  %16 = call i32 @BUILD_BUG_ON(i32 %15)
  store i32 0, i32* %7, align 4
  br label %17

17:                                               ; preds = %39, %2
  %18 = load i32, i32* %7, align 4
  %19 = icmp slt i32 %18, 3
  br i1 %19, label %20, label %42

20:                                               ; preds = %17
  %21 = load i64*, i64** %4, align 8
  %22 = load i32, i32* @SSB_SPROM8_IL0MAC, align 4
  %23 = call i32 @SPOFF(i32 %22)
  %24 = load i32, i32* %7, align 4
  %25 = add nsw i32 %23, %24
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i64, i64* %21, i64 %26
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %5, align 8
  %29 = load i64, i64* %5, align 8
  %30 = call i32 @cpu_to_be16(i64 %29)
  %31 = load %struct.bcma_bus*, %struct.bcma_bus** %3, align 8
  %32 = getelementptr inbounds %struct.bcma_bus, %struct.bcma_bus* %31, i32 0, i32 0
  %33 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %32, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %7, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %35, i64 %37
  store i32 %30, i32* %38, align 4
  br label %39

39:                                               ; preds = %20
  %40 = load i32, i32* %7, align 4
  %41 = add nsw i32 %40, 1
  store i32 %41, i32* %7, align 4
  br label %17

42:                                               ; preds = %17
  %43 = load i32, i32* @board_rev, align 4
  %44 = load i64, i64* @SSB_SPROM8_BOARDREV, align 8
  %45 = call i32 @SPEX(i32 %43, i64 %44, i32 -1, i32 0)
  %46 = load i32, i32* @board_type, align 4
  %47 = load i64, i64* @SSB_SPROM1_SPID, align 8
  %48 = call i32 @SPEX(i32 %46, i64 %47, i32 -1, i32 0)
  %49 = load i32*, i32** @txpid2g, align 8
  %50 = getelementptr inbounds i32, i32* %49, i64 0
  %51 = load i32, i32* %50, align 4
  %52 = load i64, i64* @SSB_SPROM4_TXPID2G01, align 8
  %53 = load i32, i32* @SSB_SPROM4_TXPID2G0, align 4
  %54 = load i32, i32* @SSB_SPROM4_TXPID2G0_SHIFT, align 4
  %55 = call i32 @SPEX(i32 %51, i64 %52, i32 %53, i32 %54)
  %56 = load i32*, i32** @txpid2g, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 1
  %58 = load i32, i32* %57, align 4
  %59 = load i64, i64* @SSB_SPROM4_TXPID2G01, align 8
  %60 = load i32, i32* @SSB_SPROM4_TXPID2G1, align 4
  %61 = load i32, i32* @SSB_SPROM4_TXPID2G1_SHIFT, align 4
  %62 = call i32 @SPEX(i32 %58, i64 %59, i32 %60, i32 %61)
  %63 = load i32*, i32** @txpid2g, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 2
  %65 = load i32, i32* %64, align 4
  %66 = load i64, i64* @SSB_SPROM4_TXPID2G23, align 8
  %67 = load i32, i32* @SSB_SPROM4_TXPID2G2, align 4
  %68 = load i32, i32* @SSB_SPROM4_TXPID2G2_SHIFT, align 4
  %69 = call i32 @SPEX(i32 %65, i64 %66, i32 %67, i32 %68)
  %70 = load i32*, i32** @txpid2g, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 3
  %72 = load i32, i32* %71, align 4
  %73 = load i64, i64* @SSB_SPROM4_TXPID2G23, align 8
  %74 = load i32, i32* @SSB_SPROM4_TXPID2G3, align 4
  %75 = load i32, i32* @SSB_SPROM4_TXPID2G3_SHIFT, align 4
  %76 = call i32 @SPEX(i32 %72, i64 %73, i32 %74, i32 %75)
  %77 = load i32*, i32** @txpid5gl, align 8
  %78 = getelementptr inbounds i32, i32* %77, i64 0
  %79 = load i32, i32* %78, align 4
  %80 = load i64, i64* @SSB_SPROM4_TXPID5GL01, align 8
  %81 = load i32, i32* @SSB_SPROM4_TXPID5GL0, align 4
  %82 = load i32, i32* @SSB_SPROM4_TXPID5GL0_SHIFT, align 4
  %83 = call i32 @SPEX(i32 %79, i64 %80, i32 %81, i32 %82)
  %84 = load i32*, i32** @txpid5gl, align 8
  %85 = getelementptr inbounds i32, i32* %84, i64 1
  %86 = load i32, i32* %85, align 4
  %87 = load i64, i64* @SSB_SPROM4_TXPID5GL01, align 8
  %88 = load i32, i32* @SSB_SPROM4_TXPID5GL1, align 4
  %89 = load i32, i32* @SSB_SPROM4_TXPID5GL1_SHIFT, align 4
  %90 = call i32 @SPEX(i32 %86, i64 %87, i32 %88, i32 %89)
  %91 = load i32*, i32** @txpid5gl, align 8
  %92 = getelementptr inbounds i32, i32* %91, i64 2
  %93 = load i32, i32* %92, align 4
  %94 = load i64, i64* @SSB_SPROM4_TXPID5GL23, align 8
  %95 = load i32, i32* @SSB_SPROM4_TXPID5GL2, align 4
  %96 = load i32, i32* @SSB_SPROM4_TXPID5GL2_SHIFT, align 4
  %97 = call i32 @SPEX(i32 %93, i64 %94, i32 %95, i32 %96)
  %98 = load i32*, i32** @txpid5gl, align 8
  %99 = getelementptr inbounds i32, i32* %98, i64 3
  %100 = load i32, i32* %99, align 4
  %101 = load i64, i64* @SSB_SPROM4_TXPID5GL23, align 8
  %102 = load i32, i32* @SSB_SPROM4_TXPID5GL3, align 4
  %103 = load i32, i32* @SSB_SPROM4_TXPID5GL3_SHIFT, align 4
  %104 = call i32 @SPEX(i32 %100, i64 %101, i32 %102, i32 %103)
  %105 = load i32*, i32** @txpid5g, align 8
  %106 = getelementptr inbounds i32, i32* %105, i64 0
  %107 = load i32, i32* %106, align 4
  %108 = load i64, i64* @SSB_SPROM4_TXPID5G01, align 8
  %109 = load i32, i32* @SSB_SPROM4_TXPID5G0, align 4
  %110 = load i32, i32* @SSB_SPROM4_TXPID5G0_SHIFT, align 4
  %111 = call i32 @SPEX(i32 %107, i64 %108, i32 %109, i32 %110)
  %112 = load i32*, i32** @txpid5g, align 8
  %113 = getelementptr inbounds i32, i32* %112, i64 1
  %114 = load i32, i32* %113, align 4
  %115 = load i64, i64* @SSB_SPROM4_TXPID5G01, align 8
  %116 = load i32, i32* @SSB_SPROM4_TXPID5G1, align 4
  %117 = load i32, i32* @SSB_SPROM4_TXPID5G1_SHIFT, align 4
  %118 = call i32 @SPEX(i32 %114, i64 %115, i32 %116, i32 %117)
  %119 = load i32*, i32** @txpid5g, align 8
  %120 = getelementptr inbounds i32, i32* %119, i64 2
  %121 = load i32, i32* %120, align 4
  %122 = load i64, i64* @SSB_SPROM4_TXPID5G23, align 8
  %123 = load i32, i32* @SSB_SPROM4_TXPID5G2, align 4
  %124 = load i32, i32* @SSB_SPROM4_TXPID5G2_SHIFT, align 4
  %125 = call i32 @SPEX(i32 %121, i64 %122, i32 %123, i32 %124)
  %126 = load i32*, i32** @txpid5g, align 8
  %127 = getelementptr inbounds i32, i32* %126, i64 3
  %128 = load i32, i32* %127, align 4
  %129 = load i64, i64* @SSB_SPROM4_TXPID5G23, align 8
  %130 = load i32, i32* @SSB_SPROM4_TXPID5G3, align 4
  %131 = load i32, i32* @SSB_SPROM4_TXPID5G3_SHIFT, align 4
  %132 = call i32 @SPEX(i32 %128, i64 %129, i32 %130, i32 %131)
  %133 = load i32*, i32** @txpid5gh, align 8
  %134 = getelementptr inbounds i32, i32* %133, i64 0
  %135 = load i32, i32* %134, align 4
  %136 = load i64, i64* @SSB_SPROM4_TXPID5GH01, align 8
  %137 = load i32, i32* @SSB_SPROM4_TXPID5GH0, align 4
  %138 = load i32, i32* @SSB_SPROM4_TXPID5GH0_SHIFT, align 4
  %139 = call i32 @SPEX(i32 %135, i64 %136, i32 %137, i32 %138)
  %140 = load i32*, i32** @txpid5gh, align 8
  %141 = getelementptr inbounds i32, i32* %140, i64 1
  %142 = load i32, i32* %141, align 4
  %143 = load i64, i64* @SSB_SPROM4_TXPID5GH01, align 8
  %144 = load i32, i32* @SSB_SPROM4_TXPID5GH1, align 4
  %145 = load i32, i32* @SSB_SPROM4_TXPID5GH1_SHIFT, align 4
  %146 = call i32 @SPEX(i32 %142, i64 %143, i32 %144, i32 %145)
  %147 = load i32*, i32** @txpid5gh, align 8
  %148 = getelementptr inbounds i32, i32* %147, i64 2
  %149 = load i32, i32* %148, align 4
  %150 = load i64, i64* @SSB_SPROM4_TXPID5GH23, align 8
  %151 = load i32, i32* @SSB_SPROM4_TXPID5GH2, align 4
  %152 = load i32, i32* @SSB_SPROM4_TXPID5GH2_SHIFT, align 4
  %153 = call i32 @SPEX(i32 %149, i64 %150, i32 %151, i32 %152)
  %154 = load i32*, i32** @txpid5gh, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 3
  %156 = load i32, i32* %155, align 4
  %157 = load i64, i64* @SSB_SPROM4_TXPID5GH23, align 8
  %158 = load i32, i32* @SSB_SPROM4_TXPID5GH3, align 4
  %159 = load i32, i32* @SSB_SPROM4_TXPID5GH3_SHIFT, align 4
  %160 = call i32 @SPEX(i32 %156, i64 %157, i32 %158, i32 %159)
  %161 = load i32, i32* @boardflags_lo, align 4
  %162 = load i64, i64* @SSB_SPROM8_BFLLO, align 8
  %163 = call i32 @SPEX(i32 %161, i64 %162, i32 -1, i32 0)
  %164 = load i32, i32* @boardflags_hi, align 4
  %165 = load i64, i64* @SSB_SPROM8_BFLHI, align 8
  %166 = call i32 @SPEX(i32 %164, i64 %165, i32 -1, i32 0)
  %167 = load i32, i32* @boardflags2_lo, align 4
  %168 = load i64, i64* @SSB_SPROM8_BFL2LO, align 8
  %169 = call i32 @SPEX(i32 %167, i64 %168, i32 -1, i32 0)
  %170 = load i32, i32* @boardflags2_hi, align 4
  %171 = load i64, i64* @SSB_SPROM8_BFL2HI, align 8
  %172 = call i32 @SPEX(i32 %170, i64 %171, i32 -1, i32 0)
  %173 = load i32*, i32** @alpha2, align 8
  %174 = getelementptr inbounds i32, i32* %173, i64 0
  %175 = load i32, i32* %174, align 4
  %176 = load i64, i64* @SSB_SPROM8_CCODE, align 8
  %177 = call i32 @SPEX(i32 %175, i64 %176, i32 65280, i32 8)
  %178 = load i32*, i32** @alpha2, align 8
  %179 = getelementptr inbounds i32, i32* %178, i64 1
  %180 = load i32, i32* %179, align 4
  %181 = load i64, i64* @SSB_SPROM8_CCODE, align 8
  %182 = call i32 @SPEX(i32 %180, i64 %181, i32 255, i32 0)
  store i32 0, i32* %7, align 4
  br label %183

183:                                              ; preds = %405, %42
  %184 = load i32, i32* %7, align 4
  %185 = call i32 @ARRAY_SIZE(i64* getelementptr inbounds ([4 x i64], [4 x i64]* @bcma_sprom_extract_r8.pwr_info_offset, i64 0, i64 0))
  %186 = icmp slt i32 %184, %185
  br i1 %186, label %187, label %408

187:                                              ; preds = %183
  %188 = load i32, i32* %7, align 4
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds [4 x i64], [4 x i64]* @bcma_sprom_extract_r8.pwr_info_offset, i64 0, i64 %189
  %191 = load i64, i64* %190, align 8
  store i64 %191, i64* %6, align 8
  %192 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %193 = load i32, i32* %7, align 4
  %194 = sext i32 %193 to i64
  %195 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %192, i64 %194
  %196 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %195, i32 0, i32 9
  %197 = load i32, i32* %196, align 4
  %198 = load i64, i64* %6, align 8
  %199 = load i64, i64* @SSB_SROM8_2G_MAXP_ITSSI, align 8
  %200 = add nsw i64 %198, %199
  %201 = load i32, i32* @SSB_SPROM8_2G_ITSSI, align 4
  %202 = load i32, i32* @SSB_SPROM8_2G_ITSSI_SHIFT, align 4
  %203 = call i32 @SPEX(i32 %197, i64 %200, i32 %201, i32 %202)
  %204 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %205 = load i32, i32* %7, align 4
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %204, i64 %206
  %208 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %207, i32 0, i32 8
  %209 = load i32, i32* %208, align 8
  %210 = load i64, i64* %6, align 8
  %211 = load i64, i64* @SSB_SROM8_2G_MAXP_ITSSI, align 8
  %212 = add nsw i64 %210, %211
  %213 = load i32, i32* @SSB_SPROM8_2G_MAXP, align 4
  %214 = call i32 @SPEX(i32 %209, i64 %212, i32 %213, i32 0)
  %215 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %216 = load i32, i32* %7, align 4
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %215, i64 %217
  %219 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %218, i32 0, i32 7
  %220 = load i32*, i32** %219, align 8
  %221 = getelementptr inbounds i32, i32* %220, i64 0
  %222 = load i32, i32* %221, align 4
  %223 = load i64, i64* %6, align 8
  %224 = load i64, i64* @SSB_SROM8_2G_PA_0, align 8
  %225 = add nsw i64 %223, %224
  %226 = call i32 @SPEX(i32 %222, i64 %225, i32 -1, i32 0)
  %227 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %228 = load i32, i32* %7, align 4
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %227, i64 %229
  %231 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %230, i32 0, i32 7
  %232 = load i32*, i32** %231, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 1
  %234 = load i32, i32* %233, align 4
  %235 = load i64, i64* %6, align 8
  %236 = load i64, i64* @SSB_SROM8_2G_PA_1, align 8
  %237 = add nsw i64 %235, %236
  %238 = call i32 @SPEX(i32 %234, i64 %237, i32 -1, i32 0)
  %239 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %240 = load i32, i32* %7, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %239, i64 %241
  %243 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %242, i32 0, i32 7
  %244 = load i32*, i32** %243, align 8
  %245 = getelementptr inbounds i32, i32* %244, i64 2
  %246 = load i32, i32* %245, align 4
  %247 = load i64, i64* %6, align 8
  %248 = load i64, i64* @SSB_SROM8_2G_PA_2, align 8
  %249 = add nsw i64 %247, %248
  %250 = call i32 @SPEX(i32 %246, i64 %249, i32 -1, i32 0)
  %251 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %252 = load i32, i32* %7, align 4
  %253 = sext i32 %252 to i64
  %254 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %251, i64 %253
  %255 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %254, i32 0, i32 6
  %256 = load i32, i32* %255, align 4
  %257 = load i64, i64* %6, align 8
  %258 = load i64, i64* @SSB_SROM8_5G_MAXP_ITSSI, align 8
  %259 = add nsw i64 %257, %258
  %260 = load i32, i32* @SSB_SPROM8_5G_ITSSI, align 4
  %261 = load i32, i32* @SSB_SPROM8_5G_ITSSI_SHIFT, align 4
  %262 = call i32 @SPEX(i32 %256, i64 %259, i32 %260, i32 %261)
  %263 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %264 = load i32, i32* %7, align 4
  %265 = sext i32 %264 to i64
  %266 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %263, i64 %265
  %267 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %266, i32 0, i32 5
  %268 = load i32, i32* %267, align 8
  %269 = load i64, i64* %6, align 8
  %270 = load i64, i64* @SSB_SROM8_5G_MAXP_ITSSI, align 8
  %271 = add nsw i64 %269, %270
  %272 = load i32, i32* @SSB_SPROM8_5G_MAXP, align 4
  %273 = call i32 @SPEX(i32 %268, i64 %271, i32 %272, i32 0)
  %274 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %275 = load i32, i32* %7, align 4
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %274, i64 %276
  %278 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %277, i32 0, i32 4
  %279 = load i32, i32* %278, align 4
  %280 = load i64, i64* %6, align 8
  %281 = load i64, i64* @SSB_SPROM8_5GHL_MAXP, align 8
  %282 = add nsw i64 %280, %281
  %283 = load i32, i32* @SSB_SPROM8_5GH_MAXP, align 4
  %284 = call i32 @SPEX(i32 %279, i64 %282, i32 %283, i32 0)
  %285 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %286 = load i32, i32* %7, align 4
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %285, i64 %287
  %289 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %288, i32 0, i32 3
  %290 = load i32, i32* %289, align 8
  %291 = load i64, i64* %6, align 8
  %292 = load i64, i64* @SSB_SPROM8_5GHL_MAXP, align 8
  %293 = add nsw i64 %291, %292
  %294 = load i32, i32* @SSB_SPROM8_5GL_MAXP, align 4
  %295 = load i32, i32* @SSB_SPROM8_5GL_MAXP_SHIFT, align 4
  %296 = call i32 @SPEX(i32 %290, i64 %293, i32 %294, i32 %295)
  %297 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %298 = load i32, i32* %7, align 4
  %299 = sext i32 %298 to i64
  %300 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %297, i64 %299
  %301 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %300, i32 0, i32 2
  %302 = load i32*, i32** %301, align 8
  %303 = getelementptr inbounds i32, i32* %302, i64 0
  %304 = load i32, i32* %303, align 4
  %305 = load i64, i64* %6, align 8
  %306 = load i64, i64* @SSB_SROM8_5GL_PA_0, align 8
  %307 = add nsw i64 %305, %306
  %308 = call i32 @SPEX(i32 %304, i64 %307, i32 -1, i32 0)
  %309 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %310 = load i32, i32* %7, align 4
  %311 = sext i32 %310 to i64
  %312 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %309, i64 %311
  %313 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %312, i32 0, i32 2
  %314 = load i32*, i32** %313, align 8
  %315 = getelementptr inbounds i32, i32* %314, i64 1
  %316 = load i32, i32* %315, align 4
  %317 = load i64, i64* %6, align 8
  %318 = load i64, i64* @SSB_SROM8_5GL_PA_1, align 8
  %319 = add nsw i64 %317, %318
  %320 = call i32 @SPEX(i32 %316, i64 %319, i32 -1, i32 0)
  %321 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %322 = load i32, i32* %7, align 4
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %321, i64 %323
  %325 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %324, i32 0, i32 2
  %326 = load i32*, i32** %325, align 8
  %327 = getelementptr inbounds i32, i32* %326, i64 2
  %328 = load i32, i32* %327, align 4
  %329 = load i64, i64* %6, align 8
  %330 = load i64, i64* @SSB_SROM8_5GL_PA_2, align 8
  %331 = add nsw i64 %329, %330
  %332 = call i32 @SPEX(i32 %328, i64 %331, i32 -1, i32 0)
  %333 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %334 = load i32, i32* %7, align 4
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %333, i64 %335
  %337 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %336, i32 0, i32 1
  %338 = load i32*, i32** %337, align 8
  %339 = getelementptr inbounds i32, i32* %338, i64 0
  %340 = load i32, i32* %339, align 4
  %341 = load i64, i64* %6, align 8
  %342 = load i64, i64* @SSB_SROM8_5G_PA_0, align 8
  %343 = add nsw i64 %341, %342
  %344 = call i32 @SPEX(i32 %340, i64 %343, i32 -1, i32 0)
  %345 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %346 = load i32, i32* %7, align 4
  %347 = sext i32 %346 to i64
  %348 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %345, i64 %347
  %349 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %348, i32 0, i32 1
  %350 = load i32*, i32** %349, align 8
  %351 = getelementptr inbounds i32, i32* %350, i64 1
  %352 = load i32, i32* %351, align 4
  %353 = load i64, i64* %6, align 8
  %354 = load i64, i64* @SSB_SROM8_5G_PA_1, align 8
  %355 = add nsw i64 %353, %354
  %356 = call i32 @SPEX(i32 %352, i64 %355, i32 -1, i32 0)
  %357 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %358 = load i32, i32* %7, align 4
  %359 = sext i32 %358 to i64
  %360 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %357, i64 %359
  %361 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %360, i32 0, i32 1
  %362 = load i32*, i32** %361, align 8
  %363 = getelementptr inbounds i32, i32* %362, i64 2
  %364 = load i32, i32* %363, align 4
  %365 = load i64, i64* %6, align 8
  %366 = load i64, i64* @SSB_SROM8_5G_PA_2, align 8
  %367 = add nsw i64 %365, %366
  %368 = call i32 @SPEX(i32 %364, i64 %367, i32 -1, i32 0)
  %369 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %370 = load i32, i32* %7, align 4
  %371 = sext i32 %370 to i64
  %372 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %369, i64 %371
  %373 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %372, i32 0, i32 0
  %374 = load i32*, i32** %373, align 8
  %375 = getelementptr inbounds i32, i32* %374, i64 0
  %376 = load i32, i32* %375, align 4
  %377 = load i64, i64* %6, align 8
  %378 = load i64, i64* @SSB_SROM8_5GH_PA_0, align 8
  %379 = add nsw i64 %377, %378
  %380 = call i32 @SPEX(i32 %376, i64 %379, i32 -1, i32 0)
  %381 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %382 = load i32, i32* %7, align 4
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %381, i64 %383
  %385 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %384, i32 0, i32 0
  %386 = load i32*, i32** %385, align 8
  %387 = getelementptr inbounds i32, i32* %386, i64 1
  %388 = load i32, i32* %387, align 4
  %389 = load i64, i64* %6, align 8
  %390 = load i64, i64* @SSB_SROM8_5GH_PA_1, align 8
  %391 = add nsw i64 %389, %390
  %392 = call i32 @SPEX(i32 %388, i64 %391, i32 -1, i32 0)
  %393 = load %struct.TYPE_12__*, %struct.TYPE_12__** @core_pwr_info, align 8
  %394 = load i32, i32* %7, align 4
  %395 = sext i32 %394 to i64
  %396 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %393, i64 %395
  %397 = getelementptr inbounds %struct.TYPE_12__, %struct.TYPE_12__* %396, i32 0, i32 0
  %398 = load i32*, i32** %397, align 8
  %399 = getelementptr inbounds i32, i32* %398, i64 2
  %400 = load i32, i32* %399, align 4
  %401 = load i64, i64* %6, align 8
  %402 = load i64, i64* @SSB_SROM8_5GH_PA_2, align 8
  %403 = add nsw i64 %401, %402
  %404 = call i32 @SPEX(i32 %400, i64 %403, i32 -1, i32 0)
  br label %405

405:                                              ; preds = %187
  %406 = load i32, i32* %7, align 4
  %407 = add nsw i32 %406, 1
  store i32 %407, i32* %7, align 4
  br label %183

408:                                              ; preds = %183
  %409 = load i32, i32* getelementptr inbounds (%struct.TYPE_11__, %struct.TYPE_11__* @fem, i32 0, i32 1, i32 4), align 4
  %410 = load i64, i64* @SSB_SPROM8_FEM2G, align 8
  %411 = load i32, i32* @SSB_SROM8_FEM_TSSIPOS, align 4
  %412 = load i32, i32* @SSB_SROM8_FEM_TSSIPOS_SHIFT, align 4
  %413 = call i32 @SPEX(i32 %409, i64 %410, i32 %411, i32 %412)
  %414 = load i32, i32* getelementptr inbounds (%struct.TYPE_11__, %struct.TYPE_11__* @fem, i32 0, i32 1, i32 3), align 4
  %415 = load i64, i64* @SSB_SPROM8_FEM2G, align 8
  %416 = load i32, i32* @SSB_SROM8_FEM_EXTPA_GAIN, align 4
  %417 = load i32, i32* @SSB_SROM8_FEM_EXTPA_GAIN_SHIFT, align 4
  %418 = call i32 @SPEX(i32 %414, i64 %415, i32 %416, i32 %417)
  %419 = load i32, i32* getelementptr inbounds (%struct.TYPE_11__, %struct.TYPE_11__* @fem, i32 0, i32 1, i32 2), align 4
  %420 = load i64, i64* @SSB_SPROM8_FEM2G, align 8
  %421 = load i32, i32* @SSB_SROM8_FEM_PDET_RANGE, align 4
  %422 = load i32, i32* @SSB_SROM8_FEM_PDET_RANGE_SHIFT, align 4
  %423 = call i32 @SPEX(i32 %419, i64 %420, i32 %421, i32 %422)
  %424 = load i32, i32* getelementptr inbounds (%struct.TYPE_11__, %struct.TYPE_11__* @fem, i32 0, i32 1, i32 1), align 4
  %425 = load i64, i64* @SSB_SPROM8_FEM2G, align 8
  %426 = load i32, i32* @SSB_SROM8_FEM_TR_ISO, align 4
  %427 = load i32, i32* @SSB_SROM8_FEM_TR_ISO_SHIFT, align 4
  %428 = call i32 @SPEX(i32 %424, i64 %425, i32 %426, i32 %427)
  %429 = load i32, i32* getelementptr inbounds (%struct.TYPE_11__, %struct.TYPE_11__* @fem, i32 0, i32 1, i32 0), align 4
  %430 = load i64, i64* @SSB_SPROM8_FEM2G, align 8
  %431 = load i32, i32* @SSB_SROM8_FEM_ANTSWLUT, align 4
  %432 = load i32, i32* @SSB_SROM8_FEM_ANTSWLUT_SHIFT, align 4
  %433 = call i32 @SPEX(i32 %429, i64 %430, i32 %431, i32 %432)
  %434 = load i32, i32* getelementptr inbounds (%struct.TYPE_11__, %struct.TYPE_11__* @fem, i32 0, i32 0, i32 4), align 4
  %435 = load i64, i64* @SSB_SPROM8_FEM5G, align 8
  %436 = load i32, i32* @SSB_SROM8_FEM_TSSIPOS, align 4
  %437 = load i32, i32* @SSB_SROM8_FEM_TSSIPOS_SHIFT, align 4
  %438 = call i32 @SPEX(i32 %434, i64 %435, i32 %436, i32 %437)
  %439 = load i32, i32* getelementptr inbounds (%struct.TYPE_11__, %struct.TYPE_11__* @fem, i32 0, i32 0, i32 3), align 4
  %440 = load i64, i64* @SSB_SPROM8_FEM5G, align 8
  %441 = load i32, i32* @SSB_SROM8_FEM_EXTPA_GAIN, align 4
  %442 = load i32, i32* @SSB_SROM8_FEM_EXTPA_GAIN_SHIFT, align 4
  %443 = call i32 @SPEX(i32 %439, i64 %440, i32 %441, i32 %442)
  %444 = load i32, i32* getelementptr inbounds (%struct.TYPE_11__, %struct.TYPE_11__* @fem, i32 0, i32 0, i32 2), align 4
  %445 = load i64, i64* @SSB_SPROM8_FEM5G, align 8
  %446 = load i32, i32* @SSB_SROM8_FEM_PDET_RANGE, align 4
  %447 = load i32, i32* @SSB_SROM8_FEM_PDET_RANGE_SHIFT, align 4
  %448 = call i32 @SPEX(i32 %444, i64 %445, i32 %446, i32 %447)
  %449 = load i32, i32* getelementptr inbounds (%struct.TYPE_11__, %struct.TYPE_11__* @fem, i32 0, i32 0, i32 1), align 4
  %450 = load i64, i64* @SSB_SPROM8_FEM5G, align 8
  %451 = load i32, i32* @SSB_SROM8_FEM_TR_ISO, align 4
  %452 = load i32, i32* @SSB_SROM8_FEM_TR_ISO_SHIFT, align 4
  %453 = call i32 @SPEX(i32 %449, i64 %450, i32 %451, i32 %452)
  %454 = load i32, i32* getelementptr inbounds (%struct.TYPE_11__, %struct.TYPE_11__* @fem, i32 0, i32 0, i32 0), align 4
  %455 = load i64, i64* @SSB_SPROM8_FEM5G, align 8
  %456 = load i32, i32* @SSB_SROM8_FEM_ANTSWLUT, align 4
  %457 = load i32, i32* @SSB_SROM8_FEM_ANTSWLUT_SHIFT, align 4
  %458 = call i32 @SPEX(i32 %454, i64 %455, i32 %456, i32 %457)
  %459 = load i32, i32* @ant_available_a, align 4
  %460 = load i64, i64* @SSB_SPROM8_ANTAVAIL, align 8
  %461 = load i32, i32* @SSB_SPROM8_ANTAVAIL_A, align 4
  %462 = load i32, i32* @SSB_SPROM8_ANTAVAIL_A_SHIFT, align 4
  %463 = call i32 @SPEX(i32 %459, i64 %460, i32 %461, i32 %462)
  %464 = load i32, i32* @ant_available_bg, align 4
  %465 = load i64, i64* @SSB_SPROM8_ANTAVAIL, align 8
  %466 = load i32, i32* @SSB_SPROM8_ANTAVAIL_BG, align 4
  %467 = load i32, i32* @SSB_SPROM8_ANTAVAIL_BG_SHIFT, align 4
  %468 = call i32 @SPEX(i32 %464, i64 %465, i32 %466, i32 %467)
  %469 = load i32, i32* @maxpwr_bg, align 4
  %470 = load i64, i64* @SSB_SPROM8_MAXP_BG, align 8
  %471 = load i32, i32* @SSB_SPROM8_MAXP_BG_MASK, align 4
  %472 = call i32 @SPEX(i32 %469, i64 %470, i32 %471, i32 0)
  %473 = load i32, i32* @itssi_bg, align 4
  %474 = load i64, i64* @SSB_SPROM8_MAXP_BG, align 8
  %475 = load i32, i32* @SSB_SPROM8_ITSSI_BG, align 4
  %476 = load i32, i32* @SSB_SPROM8_ITSSI_BG_SHIFT, align 4
  %477 = call i32 @SPEX(i32 %473, i64 %474, i32 %475, i32 %476)
  %478 = load i32, i32* @maxpwr_a, align 4
  %479 = load i64, i64* @SSB_SPROM8_MAXP_A, align 8
  %480 = load i32, i32* @SSB_SPROM8_MAXP_A_MASK, align 4
  %481 = call i32 @SPEX(i32 %478, i64 %479, i32 %480, i32 0)
  %482 = load i32, i32* @itssi_a, align 4
  %483 = load i64, i64* @SSB_SPROM8_MAXP_A, align 8
  %484 = load i32, i32* @SSB_SPROM8_ITSSI_A, align 4
  %485 = load i32, i32* @SSB_SPROM8_ITSSI_A_SHIFT, align 4
  %486 = call i32 @SPEX(i32 %482, i64 %483, i32 %484, i32 %485)
  %487 = load i32, i32* @maxpwr_ah, align 4
  %488 = load i64, i64* @SSB_SPROM8_MAXP_AHL, align 8
  %489 = load i32, i32* @SSB_SPROM8_MAXP_AH_MASK, align 4
  %490 = call i32 @SPEX(i32 %487, i64 %488, i32 %489, i32 0)
  %491 = load i32, i32* @maxpwr_al, align 4
  %492 = load i64, i64* @SSB_SPROM8_MAXP_AHL, align 8
  %493 = load i32, i32* @SSB_SPROM8_MAXP_AL_MASK, align 4
  %494 = load i32, i32* @SSB_SPROM8_MAXP_AL_SHIFT, align 4
  %495 = call i32 @SPEX(i32 %491, i64 %492, i32 %493, i32 %494)
  %496 = load i32, i32* @gpio0, align 4
  %497 = load i64, i64* @SSB_SPROM8_GPIOA, align 8
  %498 = load i32, i32* @SSB_SPROM8_GPIOA_P0, align 4
  %499 = call i32 @SPEX(i32 %496, i64 %497, i32 %498, i32 0)
  %500 = load i32, i32* @gpio1, align 4
  %501 = load i64, i64* @SSB_SPROM8_GPIOA, align 8
  %502 = load i32, i32* @SSB_SPROM8_GPIOA_P1, align 4
  %503 = load i32, i32* @SSB_SPROM8_GPIOA_P1_SHIFT, align 4
  %504 = call i32 @SPEX(i32 %500, i64 %501, i32 %502, i32 %503)
  %505 = load i32, i32* @gpio2, align 4
  %506 = load i64, i64* @SSB_SPROM8_GPIOB, align 8
  %507 = load i32, i32* @SSB_SPROM8_GPIOB_P2, align 4
  %508 = call i32 @SPEX(i32 %505, i64 %506, i32 %507, i32 0)
  %509 = load i32, i32* @gpio3, align 4
  %510 = load i64, i64* @SSB_SPROM8_GPIOB, align 8
  %511 = load i32, i32* @SSB_SPROM8_GPIOB_P3, align 4
  %512 = load i32, i32* @SSB_SPROM8_GPIOB_P3_SHIFT, align 4
  %513 = call i32 @SPEX(i32 %509, i64 %510, i32 %511, i32 %512)
  %514 = load i32, i32* @tri2g, align 4
  %515 = load i64, i64* @SSB_SPROM8_TRI25G, align 8
  %516 = load i32, i32* @SSB_SPROM8_TRI2G, align 4
  %517 = call i32 @SPEX(i32 %514, i64 %515, i32 %516, i32 0)
  %518 = load i32, i32* @tri5g, align 4
  %519 = load i64, i64* @SSB_SPROM8_TRI25G, align 8
  %520 = load i32, i32* @SSB_SPROM8_TRI5G, align 4
  %521 = load i32, i32* @SSB_SPROM8_TRI5G_SHIFT, align 4
  %522 = call i32 @SPEX(i32 %518, i64 %519, i32 %520, i32 %521)
  %523 = load i32, i32* @tri5gl, align 4
  %524 = load i64, i64* @SSB_SPROM8_TRI5GHL, align 8
  %525 = load i32, i32* @SSB_SPROM8_TRI5GL, align 4
  %526 = call i32 @SPEX(i32 %523, i64 %524, i32 %525, i32 0)
  %527 = load i32, i32* @tri5gh, align 4
  %528 = load i64, i64* @SSB_SPROM8_TRI5GHL, align 8
  %529 = load i32, i32* @SSB_SPROM8_TRI5GH, align 4
  %530 = load i32, i32* @SSB_SPROM8_TRI5GH_SHIFT, align 4
  %531 = call i32 @SPEX(i32 %527, i64 %528, i32 %529, i32 %530)
  %532 = load i32, i32* @rxpo2g, align 4
  %533 = load i64, i64* @SSB_SPROM8_RXPO, align 8
  %534 = load i32, i32* @SSB_SPROM8_RXPO2G, align 4
  %535 = load i32, i32* @SSB_SPROM8_RXPO2G_SHIFT, align 4
  %536 = call i32 @SPEX(i32 %532, i64 %533, i32 %534, i32 %535)
  %537 = load i32, i32* @rxpo5g, align 4
  %538 = load i64, i64* @SSB_SPROM8_RXPO, align 8
  %539 = load i32, i32* @SSB_SPROM8_RXPO5G, align 4
  %540 = load i32, i32* @SSB_SPROM8_RXPO5G_SHIFT, align 4
  %541 = call i32 @SPEX(i32 %537, i64 %538, i32 %539, i32 %540)
  %542 = load i32, i32* @rssismf2g, align 4
  %543 = load i64, i64* @SSB_SPROM8_RSSIPARM2G, align 8
  %544 = load i32, i32* @SSB_SPROM8_RSSISMF2G, align 4
  %545 = call i32 @SPEX(i32 %542, i64 %543, i32 %544, i32 0)
  %546 = load i32, i32* @rssismc2g, align 4
  %547 = load i64, i64* @SSB_SPROM8_RSSIPARM2G, align 8
  %548 = load i32, i32* @SSB_SPROM8_RSSISMC2G, align 4
  %549 = load i32, i32* @SSB_SPROM8_RSSISMC2G_SHIFT, align 4
  %550 = call i32 @SPEX(i32 %546, i64 %547, i32 %548, i32 %549)
  %551 = load i32, i32* @rssisav2g, align 4
  %552 = load i64, i64* @SSB_SPROM8_RSSIPARM2G, align 8
  %553 = load i32, i32* @SSB_SPROM8_RSSISAV2G, align 4
  %554 = load i32, i32* @SSB_SPROM8_RSSISAV2G_SHIFT, align 4
  %555 = call i32 @SPEX(i32 %551, i64 %552, i32 %553, i32 %554)
  %556 = load i32, i32* @bxa2g, align 4
  %557 = load i64, i64* @SSB_SPROM8_RSSIPARM2G, align 8
  %558 = load i32, i32* @SSB_SPROM8_BXA2G, align 4
  %559 = load i32, i32* @SSB_SPROM8_BXA2G_SHIFT, align 4
  %560 = call i32 @SPEX(i32 %556, i64 %557, i32 %558, i32 %559)
  %561 = load i32, i32* @rssismf5g, align 4
  %562 = load i64, i64* @SSB_SPROM8_RSSIPARM5G, align 8
  %563 = load i32, i32* @SSB_SPROM8_RSSISMF5G, align 4
  %564 = call i32 @SPEX(i32 %561, i64 %562, i32 %563, i32 0)
  %565 = load i32, i32* @rssismc5g, align 4
  %566 = load i64, i64* @SSB_SPROM8_RSSIPARM5G, align 8
  %567 = load i32, i32* @SSB_SPROM8_RSSISMC5G, align 4
  %568 = load i32, i32* @SSB_SPROM8_RSSISMC5G_SHIFT, align 4
  %569 = call i32 @SPEX(i32 %565, i64 %566, i32 %567, i32 %568)
  %570 = load i32, i32* @rssisav5g, align 4
  %571 = load i64, i64* @SSB_SPROM8_RSSIPARM5G, align 8
  %572 = load i32, i32* @SSB_SPROM8_RSSISAV5G, align 4
  %573 = load i32, i32* @SSB_SPROM8_RSSISAV5G_SHIFT, align 4
  %574 = call i32 @SPEX(i32 %570, i64 %571, i32 %572, i32 %573)
  %575 = load i32, i32* @bxa5g, align 4
  %576 = load i64, i64* @SSB_SPROM8_RSSIPARM5G, align 8
  %577 = load i32, i32* @SSB_SPROM8_BXA5G, align 4
  %578 = load i32, i32* @SSB_SPROM8_BXA5G_SHIFT, align 4
  %579 = call i32 @SPEX(i32 %575, i64 %576, i32 %577, i32 %578)
  %580 = load i32, i32* @pa0b0, align 4
  %581 = load i64, i64* @SSB_SPROM8_PA0B0, align 8
  %582 = call i32 @SPEX(i32 %580, i64 %581, i32 -1, i32 0)
  %583 = load i32, i32* @pa0b1, align 4
  %584 = load i64, i64* @SSB_SPROM8_PA0B1, align 8
  %585 = call i32 @SPEX(i32 %583, i64 %584, i32 -1, i32 0)
  %586 = load i32, i32* @pa0b2, align 4
  %587 = load i64, i64* @SSB_SPROM8_PA0B2, align 8
  %588 = call i32 @SPEX(i32 %586, i64 %587, i32 -1, i32 0)
  %589 = load i32, i32* @pa1b0, align 4
  %590 = load i64, i64* @SSB_SPROM8_PA1B0, align 8
  %591 = call i32 @SPEX(i32 %589, i64 %590, i32 -1, i32 0)
  %592 = load i32, i32* @pa1b1, align 4
  %593 = load i64, i64* @SSB_SPROM8_PA1B1, align 8
  %594 = call i32 @SPEX(i32 %592, i64 %593, i32 -1, i32 0)
  %595 = load i32, i32* @pa1b2, align 4
  %596 = load i64, i64* @SSB_SPROM8_PA1B2, align 8
  %597 = call i32 @SPEX(i32 %595, i64 %596, i32 -1, i32 0)
  %598 = load i32, i32* @pa1lob0, align 4
  %599 = load i64, i64* @SSB_SPROM8_PA1LOB0, align 8
  %600 = call i32 @SPEX(i32 %598, i64 %599, i32 -1, i32 0)
  %601 = load i32, i32* @pa1lob1, align 4
  %602 = load i64, i64* @SSB_SPROM8_PA1LOB1, align 8
  %603 = call i32 @SPEX(i32 %601, i64 %602, i32 -1, i32 0)
  %604 = load i32, i32* @pa1lob2, align 4
  %605 = load i64, i64* @SSB_SPROM8_PA1LOB2, align 8
  %606 = call i32 @SPEX(i32 %604, i64 %605, i32 -1, i32 0)
  %607 = load i32, i32* @pa1hib0, align 4
  %608 = load i64, i64* @SSB_SPROM8_PA1HIB0, align 8
  %609 = call i32 @SPEX(i32 %607, i64 %608, i32 -1, i32 0)
  %610 = load i32, i32* @pa1hib1, align 4
  %611 = load i64, i64* @SSB_SPROM8_PA1HIB1, align 8
  %612 = call i32 @SPEX(i32 %610, i64 %611, i32 -1, i32 0)
  %613 = load i32, i32* @pa1hib2, align 4
  %614 = load i64, i64* @SSB_SPROM8_PA1HIB2, align 8
  %615 = call i32 @SPEX(i32 %613, i64 %614, i32 -1, i32 0)
  %616 = load i32, i32* @cck2gpo, align 4
  %617 = load i64, i64* @SSB_SPROM8_CCK2GPO, align 8
  %618 = call i32 @SPEX(i32 %616, i64 %617, i32 -1, i32 0)
  %619 = load i32, i32* @ofdm2gpo, align 4
  %620 = load i64, i64* @SSB_SPROM8_OFDM2GPO, align 8
  %621 = call i32 @SPEX32(i32 %619, i64 %620, i32 -1, i32 0)
  %622 = load i32, i32* @ofdm5glpo, align 4
  %623 = load i64, i64* @SSB_SPROM8_OFDM5GLPO, align 8
  %624 = call i32 @SPEX32(i32 %622, i64 %623, i32 -1, i32 0)
  %625 = load i32, i32* @ofdm5gpo, align 4
  %626 = load i64, i64* @SSB_SPROM8_OFDM5GPO, align 8
  %627 = call i32 @SPEX32(i32 %625, i64 %626, i32 -1, i32 0)
  %628 = load i32, i32* @ofdm5ghpo, align 4
  %629 = load i64, i64* @SSB_SPROM8_OFDM5GHPO, align 8
  %630 = call i32 @SPEX32(i32 %628, i64 %629, i32 -1, i32 0)
  %631 = load i64*, i64** %4, align 8
  %632 = load i32, i32* @SSB_SPROM8_AGAIN01, align 4
  %633 = load i32, i32* @SSB_SPROM8_AGAIN0, align 4
  %634 = load i32, i32* @SSB_SPROM8_AGAIN0_SHIFT, align 4
  %635 = call i8* @sprom_extract_antgain(i64* %631, i32 %632, i32 %633, i32 %634)
  %636 = load %struct.bcma_bus*, %struct.bcma_bus** %3, align 8
  %637 = getelementptr inbounds %struct.bcma_bus, %struct.bcma_bus* %636, i32 0, i32 0
  %638 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %637, i32 0, i32 0
  %639 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %638, i32 0, i32 3
  store i8* %635, i8** %639, align 8
  %640 = load i64*, i64** %4, align 8
  %641 = load i32, i32* @SSB_SPROM8_AGAIN01, align 4
  %642 = load i32, i32* @SSB_SPROM8_AGAIN1, align 4
  %643 = load i32, i32* @SSB_SPROM8_AGAIN1_SHIFT, align 4
  %644 = call i8* @sprom_extract_antgain(i64* %640, i32 %641, i32 %642, i32 %643)
  %645 = load %struct.bcma_bus*, %struct.bcma_bus** %3, align 8
  %646 = getelementptr inbounds %struct.bcma_bus, %struct.bcma_bus* %645, i32 0, i32 0
  %647 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %646, i32 0, i32 0
  %648 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %647, i32 0, i32 2
  store i8* %644, i8** %648, align 8
  %649 = load i64*, i64** %4, align 8
  %650 = load i32, i32* @SSB_SPROM8_AGAIN23, align 4
  %651 = load i32, i32* @SSB_SPROM8_AGAIN2, align 4
  %652 = load i32, i32* @SSB_SPROM8_AGAIN2_SHIFT, align 4
  %653 = call i8* @sprom_extract_antgain(i64* %649, i32 %650, i32 %651, i32 %652)
  %654 = load %struct.bcma_bus*, %struct.bcma_bus** %3, align 8
  %655 = getelementptr inbounds %struct.bcma_bus, %struct.bcma_bus* %654, i32 0, i32 0
  %656 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %655, i32 0, i32 0
  %657 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %656, i32 0, i32 1
  store i8* %653, i8** %657, align 8
  %658 = load i64*, i64** %4, align 8
  %659 = load i32, i32* @SSB_SPROM8_AGAIN23, align 4
  %660 = load i32, i32* @SSB_SPROM8_AGAIN3, align 4
  %661 = load i32, i32* @SSB_SPROM8_AGAIN3_SHIFT, align 4
  %662 = call i8* @sprom_extract_antgain(i64* %658, i32 %659, i32 %660, i32 %661)
  %663 = load %struct.bcma_bus*, %struct.bcma_bus** %3, align 8
  %664 = getelementptr inbounds %struct.bcma_bus, %struct.bcma_bus* %663, i32 0, i32 0
  %665 = getelementptr inbounds %struct.TYPE_10__, %struct.TYPE_10__* %664, i32 0, i32 0
  %666 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %665, i32 0, i32 0
  store i8* %662, i8** %666, align 8
  %667 = load i32, i32* @leddc_on_time, align 4
  %668 = load i64, i64* @SSB_SPROM8_LEDDC, align 8
  %669 = load i32, i32* @SSB_SPROM8_LEDDC_ON, align 4
  %670 = load i32, i32* @SSB_SPROM8_LEDDC_ON_SHIFT, align 4
  %671 = call i32 @SPEX(i32 %667, i64 %668, i32 %669, i32 %670)
  %672 = load i32, i32* @leddc_off_time, align 4
  %673 = load i64, i64* @SSB_SPROM8_LEDDC, align 8
  %674 = load i32, i32* @SSB_SPROM8_LEDDC_OFF, align 4
  %675 = load i32, i32* @SSB_SPROM8_LEDDC_OFF_SHIFT, align 4
  %676 = call i32 @SPEX(i32 %672, i64 %673, i32 %674, i32 %675)
  %677 = load i32, i32* @txchain, align 4
  %678 = load i64, i64* @SSB_SPROM8_TXRXC, align 8
  %679 = load i32, i32* @SSB_SPROM8_TXRXC_TXCHAIN, align 4
  %680 = load i32, i32* @SSB_SPROM8_TXRXC_TXCHAIN_SHIFT, align 4
  %681 = call i32 @SPEX(i32 %677, i64 %678, i32 %679, i32 %680)
  %682 = load i32, i32* @rxchain, align 4
  %683 = load i64, i64* @SSB_SPROM8_TXRXC, align 8
  %684 = load i32, i32* @SSB_SPROM8_TXRXC_RXCHAIN, align 4
  %685 = load i32, i32* @SSB_SPROM8_TXRXC_RXCHAIN_SHIFT, align 4
  %686 = call i32 @SPEX(i32 %682, i64 %683, i32 %684, i32 %685)
  %687 = load i32, i32* @antswitch, align 4
  %688 = load i64, i64* @SSB_SPROM8_TXRXC, align 8
  %689 = load i32, i32* @SSB_SPROM8_TXRXC_SWITCH, align 4
  %690 = load i32, i32* @SSB_SPROM8_TXRXC_SWITCH_SHIFT, align 4
  %691 = call i32 @SPEX(i32 %687, i64 %688, i32 %689, i32 %690)
  %692 = load i32, i32* @opo, align 4
  %693 = load i64, i64* @SSB_SPROM8_OFDM2GPO, align 8
  %694 = call i32 @SPEX(i32 %692, i64 %693, i32 255, i32 0)
  %695 = load i32, i32* @mcs2gpo, align 4
  %696 = load i32, i32* @SSB_SPROM8_2G_MCSPO, align 4
  %697 = call i32 @SPEX_ARRAY8(i32 %695, i32 %696, i32 -1, i32 0)
  %698 = load i32, i32* @mcs5gpo, align 4
  %699 = load i32, i32* @SSB_SPROM8_5G_MCSPO, align 4
  %700 = call i32 @SPEX_ARRAY8(i32 %698, i32 %699, i32 -1, i32 0)
  %701 = load i32, i32* @mcs5glpo, align 4
  %702 = load i32, i32* @SSB_SPROM8_5GL_MCSPO, align 4
  %703 = call i32 @SPEX_ARRAY8(i32 %701, i32 %702, i32 -1, i32 0)
  %704 = load i32, i32* @mcs5ghpo, align 4
  %705 = load i32, i32* @SSB_SPROM8_5GH_MCSPO, align 4
  %706 = call i32 @SPEX_ARRAY8(i32 %704, i32 %705, i32 -1, i32 0)
  %707 = load i32, i32* @rawtempsense, align 4
  %708 = load i64, i64* @SSB_SPROM8_RAWTS, align 8
  %709 = load i32, i32* @SSB_SPROM8_RAWTS_RAWTEMP, align 4
  %710 = load i32, i32* @SSB_SPROM8_RAWTS_RAWTEMP_SHIFT, align 4
  %711 = call i32 @SPEX(i32 %707, i64 %708, i32 %709, i32 %710)
  %712 = load i32, i32* @measpower, align 4
  %713 = load i64, i64* @SSB_SPROM8_RAWTS, align 8
  %714 = load i32, i32* @SSB_SPROM8_RAWTS_MEASPOWER, align 4
  %715 = load i32, i32* @SSB_SPROM8_RAWTS_MEASPOWER_SHIFT, align 4
  %716 = call i32 @SPEX(i32 %712, i64 %713, i32 %714, i32 %715)
  %717 = load i32, i32* @tempsense_slope, align 4
  %718 = load i64, i64* @SSB_SPROM8_OPT_CORRX, align 8
  %719 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMP_SLOPE, align 4
  %720 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMP_SLOPE_SHIFT, align 4
  %721 = call i32 @SPEX(i32 %717, i64 %718, i32 %719, i32 %720)
  %722 = load i32, i32* @tempcorrx, align 4
  %723 = load i64, i64* @SSB_SPROM8_OPT_CORRX, align 8
  %724 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMPCORRX, align 4
  %725 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMPCORRX_SHIFT, align 4
  %726 = call i32 @SPEX(i32 %722, i64 %723, i32 %724, i32 %725)
  %727 = load i32, i32* @tempsense_option, align 4
  %728 = load i64, i64* @SSB_SPROM8_OPT_CORRX, align 8
  %729 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMP_OPTION, align 4
  %730 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMP_OPTION_SHIFT, align 4
  %731 = call i32 @SPEX(i32 %727, i64 %728, i32 %729, i32 %730)
  %732 = load i32, i32* @freqoffset_corr, align 4
  %733 = load i64, i64* @SSB_SPROM8_HWIQ_IQSWP, align 8
  %734 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_FREQ_CORR, align 4
  %735 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_FREQ_CORR_SHIFT, align 4
  %736 = call i32 @SPEX(i32 %732, i64 %733, i32 %734, i32 %735)
  %737 = load i32, i32* @iqcal_swp_dis, align 4
  %738 = load i64, i64* @SSB_SPROM8_HWIQ_IQSWP, align 8
  %739 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_IQCAL_SWP, align 4
  %740 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_IQCAL_SWP_SHIFT, align 4
  %741 = call i32 @SPEX(i32 %737, i64 %738, i32 %739, i32 %740)
  %742 = load i32, i32* @hw_iqcal_en, align 4
  %743 = load i64, i64* @SSB_SPROM8_HWIQ_IQSWP, align 8
  %744 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_HW_IQCAL, align 4
  %745 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_HW_IQCAL_SHIFT, align 4
  %746 = call i32 @SPEX(i32 %742, i64 %743, i32 %744, i32 %745)
  %747 = load i32, i32* @bw40po, align 4
  %748 = load i64, i64* @SSB_SPROM8_BW40PO, align 8
  %749 = call i32 @SPEX(i32 %747, i64 %748, i32 -1, i32 0)
  %750 = load i32, i32* @cddpo, align 4
  %751 = load i64, i64* @SSB_SPROM8_CDDPO, align 8
  %752 = call i32 @SPEX(i32 %750, i64 %751, i32 -1, i32 0)
  %753 = load i32, i32* @stbcpo, align 4
  %754 = load i64, i64* @SSB_SPROM8_STBCPO, align 8
  %755 = call i32 @SPEX(i32 %753, i64 %754, i32 -1, i32 0)
  %756 = load i32, i32* @bwduppo, align 4
  %757 = load i64, i64* @SSB_SPROM8_BWDUPPO, align 8
  %758 = call i32 @SPEX(i32 %756, i64 %757, i32 -1, i32 0)
  %759 = load i32, i32* @tempthresh, align 4
  %760 = load i64, i64* @SSB_SPROM8_THERMAL, align 8
  %761 = load i32, i32* @SSB_SPROM8_THERMAL_TRESH, align 4
  %762 = load i32, i32* @SSB_SPROM8_THERMAL_TRESH_SHIFT, align 4
  %763 = call i32 @SPEX(i32 %759, i64 %760, i32 %761, i32 %762)
  %764 = load i32, i32* @tempoffset, align 4
  %765 = load i64, i64* @SSB_SPROM8_THERMAL, align 8
  %766 = load i32, i32* @SSB_SPROM8_THERMAL_OFFSET, align 4
  %767 = load i32, i32* @SSB_SPROM8_THERMAL_OFFSET_SHIFT, align 4
  %768 = call i32 @SPEX(i32 %764, i64 %765, i32 %766, i32 %767)
  %769 = load i32, i32* @phycal_tempdelta, align 4
  %770 = load i64, i64* @SSB_SPROM8_TEMPDELTA, align 8
  %771 = load i32, i32* @SSB_SPROM8_TEMPDELTA_PHYCAL, align 4
  %772 = load i32, i32* @SSB_SPROM8_TEMPDELTA_PHYCAL_SHIFT, align 4
  %773 = call i32 @SPEX(i32 %769, i64 %770, i32 %771, i32 %772)
  %774 = load i32, i32* @temps_period, align 4
  %775 = load i64, i64* @SSB_SPROM8_TEMPDELTA, align 8
  %776 = load i32, i32* @SSB_SPROM8_TEMPDELTA_PERIOD, align 4
  %777 = load i32, i32* @SSB_SPROM8_TEMPDELTA_PERIOD_SHIFT, align 4
  %778 = call i32 @SPEX(i32 %774, i64 %775, i32 %776, i32 %777)
  %779 = load i32, i32* @temps_hysteresis, align 4
  %780 = load i64, i64* @SSB_SPROM8_TEMPDELTA, align 8
  %781 = load i32, i32* @SSB_SPROM8_TEMPDELTA_HYSTERESIS, align 4
  %782 = load i32, i32* @SSB_SPROM8_TEMPDELTA_HYSTERESIS_SHIFT, align 4
  %783 = call i32 @SPEX(i32 %779, i64 %780, i32 %781, i32 %782)
  ret void
}

declare dso_local i32 @BUILD_BUG_ON(i32) #1

declare dso_local i32 @ARRAY_SIZE(i64*) #1

declare dso_local i32 @SPOFF(i32) #1

declare dso_local i32 @cpu_to_be16(i64) #1

declare dso_local i32 @SPEX(i32, i64, i32, i32) #1

declare dso_local i32 @SPEX32(i32, i64, i32, i32) #1

declare dso_local i8* @sprom_extract_antgain(i64*, i32, i32, i32) #1

declare dso_local i32 @SPEX_ARRAY8(i32, i32, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
