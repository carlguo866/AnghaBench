; ModuleID = '/home/carl/AnghaBench/linux/drivers/misc/habanalabs/goya/extr_goya_security.c_goya_init_protection_bits.c'
source_filename = "/home/carl/AnghaBench/linux/drivers/misc/habanalabs/goya/extr_goya_security.c_goya_init_protection_bits.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.hl_device = type { i32 }

@mmPCI_NRTR_BASE = common dso_local global i32 0, align 4
@mmPCI_RD_REGULATOR_BASE = common dso_local global i32 0, align 4
@mmPCI_WR_REGULATOR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y0_X0_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y0_X0_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y0_X1_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y0_X1_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y0_X2_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y0_X2_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y0_X3_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y0_X3_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y0_X4_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y0_X4_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y1_X0_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y1_X0_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y1_X1_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y1_X1_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y1_X2_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y1_X2_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y1_X3_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y1_X3_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y1_X4_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y1_X4_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y2_X0_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y2_X0_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y2_X1_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y2_X1_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y2_X2_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y2_X2_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y2_X3_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y2_X3_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y2_X4_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y2_X4_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y3_X0_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y3_X0_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y3_X1_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y3_X1_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y3_X2_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y3_X2_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y3_X3_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y3_X3_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y3_X4_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y3_X4_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y4_X0_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y4_X0_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y4_X1_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y4_X1_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y4_X2_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y4_X2_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y4_X3_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y4_X3_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y4_X4_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y4_X4_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y5_X0_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y5_X0_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y5_X1_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y5_X1_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y5_X2_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y5_X2_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y5_X3_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y5_X3_RTR_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y5_X4_BANK_BASE = common dso_local global i32 0, align 4
@mmSRAM_Y5_X4_RTR_BASE = common dso_local global i32 0, align 4
@mmPCIE_WRAP_BASE = common dso_local global i32 0, align 4
@mmPCIE_CORE_BASE = common dso_local global i32 0, align 4
@mmPCIE_DB_CFG_BASE = common dso_local global i32 0, align 4
@mmPCIE_DB_CMD_BASE = common dso_local global i32 0, align 4
@mmPCIE_AUX_BASE = common dso_local global i32 0, align 4
@mmPCIE_DB_RSV_BASE = common dso_local global i32 0, align 4
@mmPCIE_PHY_BASE = common dso_local global i32 0, align 4
@mmTPC0_NRTR_BASE = common dso_local global i32 0, align 4
@mmTPC_PLL_BASE = common dso_local global i32 0, align 4
@mmTPC_PLL_CLK_RLX_0 = common dso_local global i32 0, align 4
@PROT_BITS_OFFS = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.hl_device*)* @goya_init_protection_bits to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @goya_init_protection_bits(%struct.hl_device* %0) #0 {
  %2 = alloca %struct.hl_device*, align 8
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store %struct.hl_device* %0, %struct.hl_device** %2, align 8
  %6 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %7 = load i32, i32* @mmPCI_NRTR_BASE, align 4
  %8 = call i32 @goya_pb_set_block(%struct.hl_device* %6, i32 %7)
  %9 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %10 = load i32, i32* @mmPCI_RD_REGULATOR_BASE, align 4
  %11 = call i32 @goya_pb_set_block(%struct.hl_device* %9, i32 %10)
  %12 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %13 = load i32, i32* @mmPCI_WR_REGULATOR_BASE, align 4
  %14 = call i32 @goya_pb_set_block(%struct.hl_device* %12, i32 %13)
  %15 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %16 = load i32, i32* @mmSRAM_Y0_X0_BANK_BASE, align 4
  %17 = call i32 @goya_pb_set_block(%struct.hl_device* %15, i32 %16)
  %18 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %19 = load i32, i32* @mmSRAM_Y0_X0_RTR_BASE, align 4
  %20 = call i32 @goya_pb_set_block(%struct.hl_device* %18, i32 %19)
  %21 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %22 = load i32, i32* @mmSRAM_Y0_X1_BANK_BASE, align 4
  %23 = call i32 @goya_pb_set_block(%struct.hl_device* %21, i32 %22)
  %24 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %25 = load i32, i32* @mmSRAM_Y0_X1_RTR_BASE, align 4
  %26 = call i32 @goya_pb_set_block(%struct.hl_device* %24, i32 %25)
  %27 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %28 = load i32, i32* @mmSRAM_Y0_X2_BANK_BASE, align 4
  %29 = call i32 @goya_pb_set_block(%struct.hl_device* %27, i32 %28)
  %30 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %31 = load i32, i32* @mmSRAM_Y0_X2_RTR_BASE, align 4
  %32 = call i32 @goya_pb_set_block(%struct.hl_device* %30, i32 %31)
  %33 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %34 = load i32, i32* @mmSRAM_Y0_X3_BANK_BASE, align 4
  %35 = call i32 @goya_pb_set_block(%struct.hl_device* %33, i32 %34)
  %36 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %37 = load i32, i32* @mmSRAM_Y0_X3_RTR_BASE, align 4
  %38 = call i32 @goya_pb_set_block(%struct.hl_device* %36, i32 %37)
  %39 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %40 = load i32, i32* @mmSRAM_Y0_X4_BANK_BASE, align 4
  %41 = call i32 @goya_pb_set_block(%struct.hl_device* %39, i32 %40)
  %42 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %43 = load i32, i32* @mmSRAM_Y0_X4_RTR_BASE, align 4
  %44 = call i32 @goya_pb_set_block(%struct.hl_device* %42, i32 %43)
  %45 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %46 = load i32, i32* @mmSRAM_Y1_X0_BANK_BASE, align 4
  %47 = call i32 @goya_pb_set_block(%struct.hl_device* %45, i32 %46)
  %48 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %49 = load i32, i32* @mmSRAM_Y1_X0_RTR_BASE, align 4
  %50 = call i32 @goya_pb_set_block(%struct.hl_device* %48, i32 %49)
  %51 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %52 = load i32, i32* @mmSRAM_Y1_X1_BANK_BASE, align 4
  %53 = call i32 @goya_pb_set_block(%struct.hl_device* %51, i32 %52)
  %54 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %55 = load i32, i32* @mmSRAM_Y1_X1_RTR_BASE, align 4
  %56 = call i32 @goya_pb_set_block(%struct.hl_device* %54, i32 %55)
  %57 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %58 = load i32, i32* @mmSRAM_Y1_X2_BANK_BASE, align 4
  %59 = call i32 @goya_pb_set_block(%struct.hl_device* %57, i32 %58)
  %60 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %61 = load i32, i32* @mmSRAM_Y1_X2_RTR_BASE, align 4
  %62 = call i32 @goya_pb_set_block(%struct.hl_device* %60, i32 %61)
  %63 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %64 = load i32, i32* @mmSRAM_Y1_X3_BANK_BASE, align 4
  %65 = call i32 @goya_pb_set_block(%struct.hl_device* %63, i32 %64)
  %66 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %67 = load i32, i32* @mmSRAM_Y1_X3_RTR_BASE, align 4
  %68 = call i32 @goya_pb_set_block(%struct.hl_device* %66, i32 %67)
  %69 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %70 = load i32, i32* @mmSRAM_Y1_X4_BANK_BASE, align 4
  %71 = call i32 @goya_pb_set_block(%struct.hl_device* %69, i32 %70)
  %72 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %73 = load i32, i32* @mmSRAM_Y1_X4_RTR_BASE, align 4
  %74 = call i32 @goya_pb_set_block(%struct.hl_device* %72, i32 %73)
  %75 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %76 = load i32, i32* @mmSRAM_Y2_X0_BANK_BASE, align 4
  %77 = call i32 @goya_pb_set_block(%struct.hl_device* %75, i32 %76)
  %78 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %79 = load i32, i32* @mmSRAM_Y2_X0_RTR_BASE, align 4
  %80 = call i32 @goya_pb_set_block(%struct.hl_device* %78, i32 %79)
  %81 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %82 = load i32, i32* @mmSRAM_Y2_X1_BANK_BASE, align 4
  %83 = call i32 @goya_pb_set_block(%struct.hl_device* %81, i32 %82)
  %84 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %85 = load i32, i32* @mmSRAM_Y2_X1_RTR_BASE, align 4
  %86 = call i32 @goya_pb_set_block(%struct.hl_device* %84, i32 %85)
  %87 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %88 = load i32, i32* @mmSRAM_Y2_X2_BANK_BASE, align 4
  %89 = call i32 @goya_pb_set_block(%struct.hl_device* %87, i32 %88)
  %90 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %91 = load i32, i32* @mmSRAM_Y2_X2_RTR_BASE, align 4
  %92 = call i32 @goya_pb_set_block(%struct.hl_device* %90, i32 %91)
  %93 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %94 = load i32, i32* @mmSRAM_Y2_X3_BANK_BASE, align 4
  %95 = call i32 @goya_pb_set_block(%struct.hl_device* %93, i32 %94)
  %96 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %97 = load i32, i32* @mmSRAM_Y2_X3_RTR_BASE, align 4
  %98 = call i32 @goya_pb_set_block(%struct.hl_device* %96, i32 %97)
  %99 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %100 = load i32, i32* @mmSRAM_Y2_X4_BANK_BASE, align 4
  %101 = call i32 @goya_pb_set_block(%struct.hl_device* %99, i32 %100)
  %102 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %103 = load i32, i32* @mmSRAM_Y2_X4_RTR_BASE, align 4
  %104 = call i32 @goya_pb_set_block(%struct.hl_device* %102, i32 %103)
  %105 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %106 = load i32, i32* @mmSRAM_Y3_X0_BANK_BASE, align 4
  %107 = call i32 @goya_pb_set_block(%struct.hl_device* %105, i32 %106)
  %108 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %109 = load i32, i32* @mmSRAM_Y3_X0_RTR_BASE, align 4
  %110 = call i32 @goya_pb_set_block(%struct.hl_device* %108, i32 %109)
  %111 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %112 = load i32, i32* @mmSRAM_Y3_X1_BANK_BASE, align 4
  %113 = call i32 @goya_pb_set_block(%struct.hl_device* %111, i32 %112)
  %114 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %115 = load i32, i32* @mmSRAM_Y3_X1_RTR_BASE, align 4
  %116 = call i32 @goya_pb_set_block(%struct.hl_device* %114, i32 %115)
  %117 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %118 = load i32, i32* @mmSRAM_Y3_X2_BANK_BASE, align 4
  %119 = call i32 @goya_pb_set_block(%struct.hl_device* %117, i32 %118)
  %120 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %121 = load i32, i32* @mmSRAM_Y3_X2_RTR_BASE, align 4
  %122 = call i32 @goya_pb_set_block(%struct.hl_device* %120, i32 %121)
  %123 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %124 = load i32, i32* @mmSRAM_Y3_X3_BANK_BASE, align 4
  %125 = call i32 @goya_pb_set_block(%struct.hl_device* %123, i32 %124)
  %126 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %127 = load i32, i32* @mmSRAM_Y3_X3_RTR_BASE, align 4
  %128 = call i32 @goya_pb_set_block(%struct.hl_device* %126, i32 %127)
  %129 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %130 = load i32, i32* @mmSRAM_Y3_X4_BANK_BASE, align 4
  %131 = call i32 @goya_pb_set_block(%struct.hl_device* %129, i32 %130)
  %132 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %133 = load i32, i32* @mmSRAM_Y3_X4_RTR_BASE, align 4
  %134 = call i32 @goya_pb_set_block(%struct.hl_device* %132, i32 %133)
  %135 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %136 = load i32, i32* @mmSRAM_Y4_X0_BANK_BASE, align 4
  %137 = call i32 @goya_pb_set_block(%struct.hl_device* %135, i32 %136)
  %138 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %139 = load i32, i32* @mmSRAM_Y4_X0_RTR_BASE, align 4
  %140 = call i32 @goya_pb_set_block(%struct.hl_device* %138, i32 %139)
  %141 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %142 = load i32, i32* @mmSRAM_Y4_X1_BANK_BASE, align 4
  %143 = call i32 @goya_pb_set_block(%struct.hl_device* %141, i32 %142)
  %144 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %145 = load i32, i32* @mmSRAM_Y4_X1_RTR_BASE, align 4
  %146 = call i32 @goya_pb_set_block(%struct.hl_device* %144, i32 %145)
  %147 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %148 = load i32, i32* @mmSRAM_Y4_X2_BANK_BASE, align 4
  %149 = call i32 @goya_pb_set_block(%struct.hl_device* %147, i32 %148)
  %150 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %151 = load i32, i32* @mmSRAM_Y4_X2_RTR_BASE, align 4
  %152 = call i32 @goya_pb_set_block(%struct.hl_device* %150, i32 %151)
  %153 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %154 = load i32, i32* @mmSRAM_Y4_X3_BANK_BASE, align 4
  %155 = call i32 @goya_pb_set_block(%struct.hl_device* %153, i32 %154)
  %156 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %157 = load i32, i32* @mmSRAM_Y4_X3_RTR_BASE, align 4
  %158 = call i32 @goya_pb_set_block(%struct.hl_device* %156, i32 %157)
  %159 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %160 = load i32, i32* @mmSRAM_Y4_X4_BANK_BASE, align 4
  %161 = call i32 @goya_pb_set_block(%struct.hl_device* %159, i32 %160)
  %162 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %163 = load i32, i32* @mmSRAM_Y4_X4_RTR_BASE, align 4
  %164 = call i32 @goya_pb_set_block(%struct.hl_device* %162, i32 %163)
  %165 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %166 = load i32, i32* @mmSRAM_Y5_X0_BANK_BASE, align 4
  %167 = call i32 @goya_pb_set_block(%struct.hl_device* %165, i32 %166)
  %168 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %169 = load i32, i32* @mmSRAM_Y5_X0_RTR_BASE, align 4
  %170 = call i32 @goya_pb_set_block(%struct.hl_device* %168, i32 %169)
  %171 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %172 = load i32, i32* @mmSRAM_Y5_X1_BANK_BASE, align 4
  %173 = call i32 @goya_pb_set_block(%struct.hl_device* %171, i32 %172)
  %174 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %175 = load i32, i32* @mmSRAM_Y5_X1_RTR_BASE, align 4
  %176 = call i32 @goya_pb_set_block(%struct.hl_device* %174, i32 %175)
  %177 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %178 = load i32, i32* @mmSRAM_Y5_X2_BANK_BASE, align 4
  %179 = call i32 @goya_pb_set_block(%struct.hl_device* %177, i32 %178)
  %180 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %181 = load i32, i32* @mmSRAM_Y5_X2_RTR_BASE, align 4
  %182 = call i32 @goya_pb_set_block(%struct.hl_device* %180, i32 %181)
  %183 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %184 = load i32, i32* @mmSRAM_Y5_X3_BANK_BASE, align 4
  %185 = call i32 @goya_pb_set_block(%struct.hl_device* %183, i32 %184)
  %186 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %187 = load i32, i32* @mmSRAM_Y5_X3_RTR_BASE, align 4
  %188 = call i32 @goya_pb_set_block(%struct.hl_device* %186, i32 %187)
  %189 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %190 = load i32, i32* @mmSRAM_Y5_X4_BANK_BASE, align 4
  %191 = call i32 @goya_pb_set_block(%struct.hl_device* %189, i32 %190)
  %192 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %193 = load i32, i32* @mmSRAM_Y5_X4_RTR_BASE, align 4
  %194 = call i32 @goya_pb_set_block(%struct.hl_device* %192, i32 %193)
  %195 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %196 = load i32, i32* @mmPCIE_WRAP_BASE, align 4
  %197 = call i32 @goya_pb_set_block(%struct.hl_device* %195, i32 %196)
  %198 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %199 = load i32, i32* @mmPCIE_CORE_BASE, align 4
  %200 = call i32 @goya_pb_set_block(%struct.hl_device* %198, i32 %199)
  %201 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %202 = load i32, i32* @mmPCIE_DB_CFG_BASE, align 4
  %203 = call i32 @goya_pb_set_block(%struct.hl_device* %201, i32 %202)
  %204 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %205 = load i32, i32* @mmPCIE_DB_CMD_BASE, align 4
  %206 = call i32 @goya_pb_set_block(%struct.hl_device* %204, i32 %205)
  %207 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %208 = load i32, i32* @mmPCIE_AUX_BASE, align 4
  %209 = call i32 @goya_pb_set_block(%struct.hl_device* %207, i32 %208)
  %210 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %211 = load i32, i32* @mmPCIE_DB_RSV_BASE, align 4
  %212 = call i32 @goya_pb_set_block(%struct.hl_device* %210, i32 %211)
  %213 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %214 = load i32, i32* @mmPCIE_PHY_BASE, align 4
  %215 = call i32 @goya_pb_set_block(%struct.hl_device* %213, i32 %214)
  %216 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %217 = load i32, i32* @mmTPC0_NRTR_BASE, align 4
  %218 = call i32 @goya_pb_set_block(%struct.hl_device* %216, i32 %217)
  %219 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %220 = load i32, i32* @mmTPC_PLL_BASE, align 4
  %221 = call i32 @goya_pb_set_block(%struct.hl_device* %219, i32 %220)
  %222 = load i32, i32* @mmTPC_PLL_CLK_RLX_0, align 4
  %223 = and i32 %222, -4096
  %224 = load i32, i32* @PROT_BITS_OFFS, align 4
  %225 = add nsw i32 %223, %224
  store i32 %225, i32* %3, align 4
  %226 = load i32, i32* @mmTPC_PLL_CLK_RLX_0, align 4
  %227 = load i32, i32* @PROT_BITS_OFFS, align 4
  %228 = and i32 %226, %227
  %229 = ashr i32 %228, 7
  %230 = shl i32 %229, 2
  store i32 %230, i32* %5, align 4
  %231 = load i32, i32* @mmTPC_PLL_CLK_RLX_0, align 4
  %232 = and i32 %231, 124
  %233 = ashr i32 %232, 2
  %234 = shl i32 1, %233
  store i32 %234, i32* %4, align 4
  %235 = load i32, i32* %3, align 4
  %236 = load i32, i32* %5, align 4
  %237 = add nsw i32 %235, %236
  %238 = load i32, i32* %4, align 4
  %239 = call i32 @WREG32(i32 %237, i32 %238)
  %240 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %241 = call i32 @goya_init_mme_protection_bits(%struct.hl_device* %240)
  %242 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %243 = call i32 @goya_init_dma_protection_bits(%struct.hl_device* %242)
  %244 = load %struct.hl_device*, %struct.hl_device** %2, align 8
  %245 = call i32 @goya_init_tpc_protection_bits(%struct.hl_device* %244)
  ret void
}

declare dso_local i32 @goya_pb_set_block(%struct.hl_device*, i32) #1

declare dso_local i32 @WREG32(i32, i32) #1

declare dso_local i32 @goya_init_mme_protection_bits(%struct.hl_device*) #1

declare dso_local i32 @goya_init_dma_protection_bits(%struct.hl_device*) #1

declare dso_local i32 @goya_init_tpc_protection_bits(%struct.hl_device*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
