; ModuleID = '/home/carl/AnghaBench/linux/crypto/extr_rmd256.c_rmd256_transform.c'
source_filename = "/home/carl/AnghaBench/linux/crypto/extr_rmd256.c_rmd256_transform.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@F1 = common dso_local global i32 0, align 4
@K1 = common dso_local global i32 0, align 4
@F4 = common dso_local global i32 0, align 4
@KK1 = common dso_local global i32 0, align 4
@F2 = common dso_local global i32 0, align 4
@K2 = common dso_local global i32 0, align 4
@F3 = common dso_local global i32 0, align 4
@KK2 = common dso_local global i32 0, align 4
@K3 = common dso_local global i32 0, align 4
@KK3 = common dso_local global i32 0, align 4
@K4 = common dso_local global i32 0, align 4
@KK4 = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (i64*, i32*)* @rmd256_transform to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @rmd256_transform(i64* %0, i32* %1) #0 {
  %3 = alloca i64*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store i64* %0, i64** %3, align 8
  store i32* %1, i32** %4, align 8
  %13 = load i64*, i64** %3, align 8
  %14 = getelementptr inbounds i64, i64* %13, i64 0
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %5, align 8
  %16 = load i64*, i64** %3, align 8
  %17 = getelementptr inbounds i64, i64* %16, i64 1
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %6, align 8
  %19 = load i64*, i64** %3, align 8
  %20 = getelementptr inbounds i64, i64* %19, i64 2
  %21 = load i64, i64* %20, align 8
  store i64 %21, i64* %7, align 8
  %22 = load i64*, i64** %3, align 8
  %23 = getelementptr inbounds i64, i64* %22, i64 3
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %8, align 8
  %25 = load i64*, i64** %3, align 8
  %26 = getelementptr inbounds i64, i64* %25, i64 4
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %9, align 8
  %28 = load i64*, i64** %3, align 8
  %29 = getelementptr inbounds i64, i64* %28, i64 5
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %10, align 8
  %31 = load i64*, i64** %3, align 8
  %32 = getelementptr inbounds i64, i64* %31, i64 6
  %33 = load i64, i64* %32, align 8
  store i64 %33, i64* %11, align 8
  %34 = load i64*, i64** %3, align 8
  %35 = getelementptr inbounds i64, i64* %34, i64 7
  %36 = load i64, i64* %35, align 8
  store i64 %36, i64* %12, align 8
  %37 = load i64, i64* %5, align 8
  %38 = load i64, i64* %6, align 8
  %39 = load i64, i64* %7, align 8
  %40 = load i64, i64* %8, align 8
  %41 = load i32, i32* @F1, align 4
  %42 = load i32, i32* @K1, align 4
  %43 = load i32*, i32** %4, align 8
  %44 = getelementptr inbounds i32, i32* %43, i64 0
  %45 = load i32, i32* %44, align 4
  %46 = call i32 @ROUND(i64 %37, i64 %38, i64 %39, i64 %40, i32 %41, i32 %42, i32 %45, i32 11)
  %47 = load i64, i64* %8, align 8
  %48 = load i64, i64* %5, align 8
  %49 = load i64, i64* %6, align 8
  %50 = load i64, i64* %7, align 8
  %51 = load i32, i32* @F1, align 4
  %52 = load i32, i32* @K1, align 4
  %53 = load i32*, i32** %4, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 1
  %55 = load i32, i32* %54, align 4
  %56 = call i32 @ROUND(i64 %47, i64 %48, i64 %49, i64 %50, i32 %51, i32 %52, i32 %55, i32 14)
  %57 = load i64, i64* %7, align 8
  %58 = load i64, i64* %8, align 8
  %59 = load i64, i64* %5, align 8
  %60 = load i64, i64* %6, align 8
  %61 = load i32, i32* @F1, align 4
  %62 = load i32, i32* @K1, align 4
  %63 = load i32*, i32** %4, align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 2
  %65 = load i32, i32* %64, align 4
  %66 = call i32 @ROUND(i64 %57, i64 %58, i64 %59, i64 %60, i32 %61, i32 %62, i32 %65, i32 15)
  %67 = load i64, i64* %6, align 8
  %68 = load i64, i64* %7, align 8
  %69 = load i64, i64* %8, align 8
  %70 = load i64, i64* %5, align 8
  %71 = load i32, i32* @F1, align 4
  %72 = load i32, i32* @K1, align 4
  %73 = load i32*, i32** %4, align 8
  %74 = getelementptr inbounds i32, i32* %73, i64 3
  %75 = load i32, i32* %74, align 4
  %76 = call i32 @ROUND(i64 %67, i64 %68, i64 %69, i64 %70, i32 %71, i32 %72, i32 %75, i32 12)
  %77 = load i64, i64* %5, align 8
  %78 = load i64, i64* %6, align 8
  %79 = load i64, i64* %7, align 8
  %80 = load i64, i64* %8, align 8
  %81 = load i32, i32* @F1, align 4
  %82 = load i32, i32* @K1, align 4
  %83 = load i32*, i32** %4, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 4
  %85 = load i32, i32* %84, align 4
  %86 = call i32 @ROUND(i64 %77, i64 %78, i64 %79, i64 %80, i32 %81, i32 %82, i32 %85, i32 5)
  %87 = load i64, i64* %8, align 8
  %88 = load i64, i64* %5, align 8
  %89 = load i64, i64* %6, align 8
  %90 = load i64, i64* %7, align 8
  %91 = load i32, i32* @F1, align 4
  %92 = load i32, i32* @K1, align 4
  %93 = load i32*, i32** %4, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 5
  %95 = load i32, i32* %94, align 4
  %96 = call i32 @ROUND(i64 %87, i64 %88, i64 %89, i64 %90, i32 %91, i32 %92, i32 %95, i32 8)
  %97 = load i64, i64* %7, align 8
  %98 = load i64, i64* %8, align 8
  %99 = load i64, i64* %5, align 8
  %100 = load i64, i64* %6, align 8
  %101 = load i32, i32* @F1, align 4
  %102 = load i32, i32* @K1, align 4
  %103 = load i32*, i32** %4, align 8
  %104 = getelementptr inbounds i32, i32* %103, i64 6
  %105 = load i32, i32* %104, align 4
  %106 = call i32 @ROUND(i64 %97, i64 %98, i64 %99, i64 %100, i32 %101, i32 %102, i32 %105, i32 7)
  %107 = load i64, i64* %6, align 8
  %108 = load i64, i64* %7, align 8
  %109 = load i64, i64* %8, align 8
  %110 = load i64, i64* %5, align 8
  %111 = load i32, i32* @F1, align 4
  %112 = load i32, i32* @K1, align 4
  %113 = load i32*, i32** %4, align 8
  %114 = getelementptr inbounds i32, i32* %113, i64 7
  %115 = load i32, i32* %114, align 4
  %116 = call i32 @ROUND(i64 %107, i64 %108, i64 %109, i64 %110, i32 %111, i32 %112, i32 %115, i32 9)
  %117 = load i64, i64* %5, align 8
  %118 = load i64, i64* %6, align 8
  %119 = load i64, i64* %7, align 8
  %120 = load i64, i64* %8, align 8
  %121 = load i32, i32* @F1, align 4
  %122 = load i32, i32* @K1, align 4
  %123 = load i32*, i32** %4, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 8
  %125 = load i32, i32* %124, align 4
  %126 = call i32 @ROUND(i64 %117, i64 %118, i64 %119, i64 %120, i32 %121, i32 %122, i32 %125, i32 11)
  %127 = load i64, i64* %8, align 8
  %128 = load i64, i64* %5, align 8
  %129 = load i64, i64* %6, align 8
  %130 = load i64, i64* %7, align 8
  %131 = load i32, i32* @F1, align 4
  %132 = load i32, i32* @K1, align 4
  %133 = load i32*, i32** %4, align 8
  %134 = getelementptr inbounds i32, i32* %133, i64 9
  %135 = load i32, i32* %134, align 4
  %136 = call i32 @ROUND(i64 %127, i64 %128, i64 %129, i64 %130, i32 %131, i32 %132, i32 %135, i32 13)
  %137 = load i64, i64* %7, align 8
  %138 = load i64, i64* %8, align 8
  %139 = load i64, i64* %5, align 8
  %140 = load i64, i64* %6, align 8
  %141 = load i32, i32* @F1, align 4
  %142 = load i32, i32* @K1, align 4
  %143 = load i32*, i32** %4, align 8
  %144 = getelementptr inbounds i32, i32* %143, i64 10
  %145 = load i32, i32* %144, align 4
  %146 = call i32 @ROUND(i64 %137, i64 %138, i64 %139, i64 %140, i32 %141, i32 %142, i32 %145, i32 14)
  %147 = load i64, i64* %6, align 8
  %148 = load i64, i64* %7, align 8
  %149 = load i64, i64* %8, align 8
  %150 = load i64, i64* %5, align 8
  %151 = load i32, i32* @F1, align 4
  %152 = load i32, i32* @K1, align 4
  %153 = load i32*, i32** %4, align 8
  %154 = getelementptr inbounds i32, i32* %153, i64 11
  %155 = load i32, i32* %154, align 4
  %156 = call i32 @ROUND(i64 %147, i64 %148, i64 %149, i64 %150, i32 %151, i32 %152, i32 %155, i32 15)
  %157 = load i64, i64* %5, align 8
  %158 = load i64, i64* %6, align 8
  %159 = load i64, i64* %7, align 8
  %160 = load i64, i64* %8, align 8
  %161 = load i32, i32* @F1, align 4
  %162 = load i32, i32* @K1, align 4
  %163 = load i32*, i32** %4, align 8
  %164 = getelementptr inbounds i32, i32* %163, i64 12
  %165 = load i32, i32* %164, align 4
  %166 = call i32 @ROUND(i64 %157, i64 %158, i64 %159, i64 %160, i32 %161, i32 %162, i32 %165, i32 6)
  %167 = load i64, i64* %8, align 8
  %168 = load i64, i64* %5, align 8
  %169 = load i64, i64* %6, align 8
  %170 = load i64, i64* %7, align 8
  %171 = load i32, i32* @F1, align 4
  %172 = load i32, i32* @K1, align 4
  %173 = load i32*, i32** %4, align 8
  %174 = getelementptr inbounds i32, i32* %173, i64 13
  %175 = load i32, i32* %174, align 4
  %176 = call i32 @ROUND(i64 %167, i64 %168, i64 %169, i64 %170, i32 %171, i32 %172, i32 %175, i32 7)
  %177 = load i64, i64* %7, align 8
  %178 = load i64, i64* %8, align 8
  %179 = load i64, i64* %5, align 8
  %180 = load i64, i64* %6, align 8
  %181 = load i32, i32* @F1, align 4
  %182 = load i32, i32* @K1, align 4
  %183 = load i32*, i32** %4, align 8
  %184 = getelementptr inbounds i32, i32* %183, i64 14
  %185 = load i32, i32* %184, align 4
  %186 = call i32 @ROUND(i64 %177, i64 %178, i64 %179, i64 %180, i32 %181, i32 %182, i32 %185, i32 9)
  %187 = load i64, i64* %6, align 8
  %188 = load i64, i64* %7, align 8
  %189 = load i64, i64* %8, align 8
  %190 = load i64, i64* %5, align 8
  %191 = load i32, i32* @F1, align 4
  %192 = load i32, i32* @K1, align 4
  %193 = load i32*, i32** %4, align 8
  %194 = getelementptr inbounds i32, i32* %193, i64 15
  %195 = load i32, i32* %194, align 4
  %196 = call i32 @ROUND(i64 %187, i64 %188, i64 %189, i64 %190, i32 %191, i32 %192, i32 %195, i32 8)
  %197 = load i64, i64* %9, align 8
  %198 = load i64, i64* %10, align 8
  %199 = load i64, i64* %11, align 8
  %200 = load i64, i64* %12, align 8
  %201 = load i32, i32* @F4, align 4
  %202 = load i32, i32* @KK1, align 4
  %203 = load i32*, i32** %4, align 8
  %204 = getelementptr inbounds i32, i32* %203, i64 5
  %205 = load i32, i32* %204, align 4
  %206 = call i32 @ROUND(i64 %197, i64 %198, i64 %199, i64 %200, i32 %201, i32 %202, i32 %205, i32 8)
  %207 = load i64, i64* %12, align 8
  %208 = load i64, i64* %9, align 8
  %209 = load i64, i64* %10, align 8
  %210 = load i64, i64* %11, align 8
  %211 = load i32, i32* @F4, align 4
  %212 = load i32, i32* @KK1, align 4
  %213 = load i32*, i32** %4, align 8
  %214 = getelementptr inbounds i32, i32* %213, i64 14
  %215 = load i32, i32* %214, align 4
  %216 = call i32 @ROUND(i64 %207, i64 %208, i64 %209, i64 %210, i32 %211, i32 %212, i32 %215, i32 9)
  %217 = load i64, i64* %11, align 8
  %218 = load i64, i64* %12, align 8
  %219 = load i64, i64* %9, align 8
  %220 = load i64, i64* %10, align 8
  %221 = load i32, i32* @F4, align 4
  %222 = load i32, i32* @KK1, align 4
  %223 = load i32*, i32** %4, align 8
  %224 = getelementptr inbounds i32, i32* %223, i64 7
  %225 = load i32, i32* %224, align 4
  %226 = call i32 @ROUND(i64 %217, i64 %218, i64 %219, i64 %220, i32 %221, i32 %222, i32 %225, i32 9)
  %227 = load i64, i64* %10, align 8
  %228 = load i64, i64* %11, align 8
  %229 = load i64, i64* %12, align 8
  %230 = load i64, i64* %9, align 8
  %231 = load i32, i32* @F4, align 4
  %232 = load i32, i32* @KK1, align 4
  %233 = load i32*, i32** %4, align 8
  %234 = getelementptr inbounds i32, i32* %233, i64 0
  %235 = load i32, i32* %234, align 4
  %236 = call i32 @ROUND(i64 %227, i64 %228, i64 %229, i64 %230, i32 %231, i32 %232, i32 %235, i32 11)
  %237 = load i64, i64* %9, align 8
  %238 = load i64, i64* %10, align 8
  %239 = load i64, i64* %11, align 8
  %240 = load i64, i64* %12, align 8
  %241 = load i32, i32* @F4, align 4
  %242 = load i32, i32* @KK1, align 4
  %243 = load i32*, i32** %4, align 8
  %244 = getelementptr inbounds i32, i32* %243, i64 9
  %245 = load i32, i32* %244, align 4
  %246 = call i32 @ROUND(i64 %237, i64 %238, i64 %239, i64 %240, i32 %241, i32 %242, i32 %245, i32 13)
  %247 = load i64, i64* %12, align 8
  %248 = load i64, i64* %9, align 8
  %249 = load i64, i64* %10, align 8
  %250 = load i64, i64* %11, align 8
  %251 = load i32, i32* @F4, align 4
  %252 = load i32, i32* @KK1, align 4
  %253 = load i32*, i32** %4, align 8
  %254 = getelementptr inbounds i32, i32* %253, i64 2
  %255 = load i32, i32* %254, align 4
  %256 = call i32 @ROUND(i64 %247, i64 %248, i64 %249, i64 %250, i32 %251, i32 %252, i32 %255, i32 15)
  %257 = load i64, i64* %11, align 8
  %258 = load i64, i64* %12, align 8
  %259 = load i64, i64* %9, align 8
  %260 = load i64, i64* %10, align 8
  %261 = load i32, i32* @F4, align 4
  %262 = load i32, i32* @KK1, align 4
  %263 = load i32*, i32** %4, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 11
  %265 = load i32, i32* %264, align 4
  %266 = call i32 @ROUND(i64 %257, i64 %258, i64 %259, i64 %260, i32 %261, i32 %262, i32 %265, i32 15)
  %267 = load i64, i64* %10, align 8
  %268 = load i64, i64* %11, align 8
  %269 = load i64, i64* %12, align 8
  %270 = load i64, i64* %9, align 8
  %271 = load i32, i32* @F4, align 4
  %272 = load i32, i32* @KK1, align 4
  %273 = load i32*, i32** %4, align 8
  %274 = getelementptr inbounds i32, i32* %273, i64 4
  %275 = load i32, i32* %274, align 4
  %276 = call i32 @ROUND(i64 %267, i64 %268, i64 %269, i64 %270, i32 %271, i32 %272, i32 %275, i32 5)
  %277 = load i64, i64* %9, align 8
  %278 = load i64, i64* %10, align 8
  %279 = load i64, i64* %11, align 8
  %280 = load i64, i64* %12, align 8
  %281 = load i32, i32* @F4, align 4
  %282 = load i32, i32* @KK1, align 4
  %283 = load i32*, i32** %4, align 8
  %284 = getelementptr inbounds i32, i32* %283, i64 13
  %285 = load i32, i32* %284, align 4
  %286 = call i32 @ROUND(i64 %277, i64 %278, i64 %279, i64 %280, i32 %281, i32 %282, i32 %285, i32 7)
  %287 = load i64, i64* %12, align 8
  %288 = load i64, i64* %9, align 8
  %289 = load i64, i64* %10, align 8
  %290 = load i64, i64* %11, align 8
  %291 = load i32, i32* @F4, align 4
  %292 = load i32, i32* @KK1, align 4
  %293 = load i32*, i32** %4, align 8
  %294 = getelementptr inbounds i32, i32* %293, i64 6
  %295 = load i32, i32* %294, align 4
  %296 = call i32 @ROUND(i64 %287, i64 %288, i64 %289, i64 %290, i32 %291, i32 %292, i32 %295, i32 7)
  %297 = load i64, i64* %11, align 8
  %298 = load i64, i64* %12, align 8
  %299 = load i64, i64* %9, align 8
  %300 = load i64, i64* %10, align 8
  %301 = load i32, i32* @F4, align 4
  %302 = load i32, i32* @KK1, align 4
  %303 = load i32*, i32** %4, align 8
  %304 = getelementptr inbounds i32, i32* %303, i64 15
  %305 = load i32, i32* %304, align 4
  %306 = call i32 @ROUND(i64 %297, i64 %298, i64 %299, i64 %300, i32 %301, i32 %302, i32 %305, i32 8)
  %307 = load i64, i64* %10, align 8
  %308 = load i64, i64* %11, align 8
  %309 = load i64, i64* %12, align 8
  %310 = load i64, i64* %9, align 8
  %311 = load i32, i32* @F4, align 4
  %312 = load i32, i32* @KK1, align 4
  %313 = load i32*, i32** %4, align 8
  %314 = getelementptr inbounds i32, i32* %313, i64 8
  %315 = load i32, i32* %314, align 4
  %316 = call i32 @ROUND(i64 %307, i64 %308, i64 %309, i64 %310, i32 %311, i32 %312, i32 %315, i32 11)
  %317 = load i64, i64* %9, align 8
  %318 = load i64, i64* %10, align 8
  %319 = load i64, i64* %11, align 8
  %320 = load i64, i64* %12, align 8
  %321 = load i32, i32* @F4, align 4
  %322 = load i32, i32* @KK1, align 4
  %323 = load i32*, i32** %4, align 8
  %324 = getelementptr inbounds i32, i32* %323, i64 1
  %325 = load i32, i32* %324, align 4
  %326 = call i32 @ROUND(i64 %317, i64 %318, i64 %319, i64 %320, i32 %321, i32 %322, i32 %325, i32 14)
  %327 = load i64, i64* %12, align 8
  %328 = load i64, i64* %9, align 8
  %329 = load i64, i64* %10, align 8
  %330 = load i64, i64* %11, align 8
  %331 = load i32, i32* @F4, align 4
  %332 = load i32, i32* @KK1, align 4
  %333 = load i32*, i32** %4, align 8
  %334 = getelementptr inbounds i32, i32* %333, i64 10
  %335 = load i32, i32* %334, align 4
  %336 = call i32 @ROUND(i64 %327, i64 %328, i64 %329, i64 %330, i32 %331, i32 %332, i32 %335, i32 14)
  %337 = load i64, i64* %11, align 8
  %338 = load i64, i64* %12, align 8
  %339 = load i64, i64* %9, align 8
  %340 = load i64, i64* %10, align 8
  %341 = load i32, i32* @F4, align 4
  %342 = load i32, i32* @KK1, align 4
  %343 = load i32*, i32** %4, align 8
  %344 = getelementptr inbounds i32, i32* %343, i64 3
  %345 = load i32, i32* %344, align 4
  %346 = call i32 @ROUND(i64 %337, i64 %338, i64 %339, i64 %340, i32 %341, i32 %342, i32 %345, i32 12)
  %347 = load i64, i64* %10, align 8
  %348 = load i64, i64* %11, align 8
  %349 = load i64, i64* %12, align 8
  %350 = load i64, i64* %9, align 8
  %351 = load i32, i32* @F4, align 4
  %352 = load i32, i32* @KK1, align 4
  %353 = load i32*, i32** %4, align 8
  %354 = getelementptr inbounds i32, i32* %353, i64 12
  %355 = load i32, i32* %354, align 4
  %356 = call i32 @ROUND(i64 %347, i64 %348, i64 %349, i64 %350, i32 %351, i32 %352, i32 %355, i32 6)
  %357 = load i64, i64* %5, align 8
  %358 = load i64, i64* %9, align 8
  %359 = call i32 @swap(i64 %357, i64 %358)
  %360 = load i64, i64* %5, align 8
  %361 = load i64, i64* %6, align 8
  %362 = load i64, i64* %7, align 8
  %363 = load i64, i64* %8, align 8
  %364 = load i32, i32* @F2, align 4
  %365 = load i32, i32* @K2, align 4
  %366 = load i32*, i32** %4, align 8
  %367 = getelementptr inbounds i32, i32* %366, i64 7
  %368 = load i32, i32* %367, align 4
  %369 = call i32 @ROUND(i64 %360, i64 %361, i64 %362, i64 %363, i32 %364, i32 %365, i32 %368, i32 7)
  %370 = load i64, i64* %8, align 8
  %371 = load i64, i64* %5, align 8
  %372 = load i64, i64* %6, align 8
  %373 = load i64, i64* %7, align 8
  %374 = load i32, i32* @F2, align 4
  %375 = load i32, i32* @K2, align 4
  %376 = load i32*, i32** %4, align 8
  %377 = getelementptr inbounds i32, i32* %376, i64 4
  %378 = load i32, i32* %377, align 4
  %379 = call i32 @ROUND(i64 %370, i64 %371, i64 %372, i64 %373, i32 %374, i32 %375, i32 %378, i32 6)
  %380 = load i64, i64* %7, align 8
  %381 = load i64, i64* %8, align 8
  %382 = load i64, i64* %5, align 8
  %383 = load i64, i64* %6, align 8
  %384 = load i32, i32* @F2, align 4
  %385 = load i32, i32* @K2, align 4
  %386 = load i32*, i32** %4, align 8
  %387 = getelementptr inbounds i32, i32* %386, i64 13
  %388 = load i32, i32* %387, align 4
  %389 = call i32 @ROUND(i64 %380, i64 %381, i64 %382, i64 %383, i32 %384, i32 %385, i32 %388, i32 8)
  %390 = load i64, i64* %6, align 8
  %391 = load i64, i64* %7, align 8
  %392 = load i64, i64* %8, align 8
  %393 = load i64, i64* %5, align 8
  %394 = load i32, i32* @F2, align 4
  %395 = load i32, i32* @K2, align 4
  %396 = load i32*, i32** %4, align 8
  %397 = getelementptr inbounds i32, i32* %396, i64 1
  %398 = load i32, i32* %397, align 4
  %399 = call i32 @ROUND(i64 %390, i64 %391, i64 %392, i64 %393, i32 %394, i32 %395, i32 %398, i32 13)
  %400 = load i64, i64* %5, align 8
  %401 = load i64, i64* %6, align 8
  %402 = load i64, i64* %7, align 8
  %403 = load i64, i64* %8, align 8
  %404 = load i32, i32* @F2, align 4
  %405 = load i32, i32* @K2, align 4
  %406 = load i32*, i32** %4, align 8
  %407 = getelementptr inbounds i32, i32* %406, i64 10
  %408 = load i32, i32* %407, align 4
  %409 = call i32 @ROUND(i64 %400, i64 %401, i64 %402, i64 %403, i32 %404, i32 %405, i32 %408, i32 11)
  %410 = load i64, i64* %8, align 8
  %411 = load i64, i64* %5, align 8
  %412 = load i64, i64* %6, align 8
  %413 = load i64, i64* %7, align 8
  %414 = load i32, i32* @F2, align 4
  %415 = load i32, i32* @K2, align 4
  %416 = load i32*, i32** %4, align 8
  %417 = getelementptr inbounds i32, i32* %416, i64 6
  %418 = load i32, i32* %417, align 4
  %419 = call i32 @ROUND(i64 %410, i64 %411, i64 %412, i64 %413, i32 %414, i32 %415, i32 %418, i32 9)
  %420 = load i64, i64* %7, align 8
  %421 = load i64, i64* %8, align 8
  %422 = load i64, i64* %5, align 8
  %423 = load i64, i64* %6, align 8
  %424 = load i32, i32* @F2, align 4
  %425 = load i32, i32* @K2, align 4
  %426 = load i32*, i32** %4, align 8
  %427 = getelementptr inbounds i32, i32* %426, i64 15
  %428 = load i32, i32* %427, align 4
  %429 = call i32 @ROUND(i64 %420, i64 %421, i64 %422, i64 %423, i32 %424, i32 %425, i32 %428, i32 7)
  %430 = load i64, i64* %6, align 8
  %431 = load i64, i64* %7, align 8
  %432 = load i64, i64* %8, align 8
  %433 = load i64, i64* %5, align 8
  %434 = load i32, i32* @F2, align 4
  %435 = load i32, i32* @K2, align 4
  %436 = load i32*, i32** %4, align 8
  %437 = getelementptr inbounds i32, i32* %436, i64 3
  %438 = load i32, i32* %437, align 4
  %439 = call i32 @ROUND(i64 %430, i64 %431, i64 %432, i64 %433, i32 %434, i32 %435, i32 %438, i32 15)
  %440 = load i64, i64* %5, align 8
  %441 = load i64, i64* %6, align 8
  %442 = load i64, i64* %7, align 8
  %443 = load i64, i64* %8, align 8
  %444 = load i32, i32* @F2, align 4
  %445 = load i32, i32* @K2, align 4
  %446 = load i32*, i32** %4, align 8
  %447 = getelementptr inbounds i32, i32* %446, i64 12
  %448 = load i32, i32* %447, align 4
  %449 = call i32 @ROUND(i64 %440, i64 %441, i64 %442, i64 %443, i32 %444, i32 %445, i32 %448, i32 7)
  %450 = load i64, i64* %8, align 8
  %451 = load i64, i64* %5, align 8
  %452 = load i64, i64* %6, align 8
  %453 = load i64, i64* %7, align 8
  %454 = load i32, i32* @F2, align 4
  %455 = load i32, i32* @K2, align 4
  %456 = load i32*, i32** %4, align 8
  %457 = getelementptr inbounds i32, i32* %456, i64 0
  %458 = load i32, i32* %457, align 4
  %459 = call i32 @ROUND(i64 %450, i64 %451, i64 %452, i64 %453, i32 %454, i32 %455, i32 %458, i32 12)
  %460 = load i64, i64* %7, align 8
  %461 = load i64, i64* %8, align 8
  %462 = load i64, i64* %5, align 8
  %463 = load i64, i64* %6, align 8
  %464 = load i32, i32* @F2, align 4
  %465 = load i32, i32* @K2, align 4
  %466 = load i32*, i32** %4, align 8
  %467 = getelementptr inbounds i32, i32* %466, i64 9
  %468 = load i32, i32* %467, align 4
  %469 = call i32 @ROUND(i64 %460, i64 %461, i64 %462, i64 %463, i32 %464, i32 %465, i32 %468, i32 15)
  %470 = load i64, i64* %6, align 8
  %471 = load i64, i64* %7, align 8
  %472 = load i64, i64* %8, align 8
  %473 = load i64, i64* %5, align 8
  %474 = load i32, i32* @F2, align 4
  %475 = load i32, i32* @K2, align 4
  %476 = load i32*, i32** %4, align 8
  %477 = getelementptr inbounds i32, i32* %476, i64 5
  %478 = load i32, i32* %477, align 4
  %479 = call i32 @ROUND(i64 %470, i64 %471, i64 %472, i64 %473, i32 %474, i32 %475, i32 %478, i32 9)
  %480 = load i64, i64* %5, align 8
  %481 = load i64, i64* %6, align 8
  %482 = load i64, i64* %7, align 8
  %483 = load i64, i64* %8, align 8
  %484 = load i32, i32* @F2, align 4
  %485 = load i32, i32* @K2, align 4
  %486 = load i32*, i32** %4, align 8
  %487 = getelementptr inbounds i32, i32* %486, i64 2
  %488 = load i32, i32* %487, align 4
  %489 = call i32 @ROUND(i64 %480, i64 %481, i64 %482, i64 %483, i32 %484, i32 %485, i32 %488, i32 11)
  %490 = load i64, i64* %8, align 8
  %491 = load i64, i64* %5, align 8
  %492 = load i64, i64* %6, align 8
  %493 = load i64, i64* %7, align 8
  %494 = load i32, i32* @F2, align 4
  %495 = load i32, i32* @K2, align 4
  %496 = load i32*, i32** %4, align 8
  %497 = getelementptr inbounds i32, i32* %496, i64 14
  %498 = load i32, i32* %497, align 4
  %499 = call i32 @ROUND(i64 %490, i64 %491, i64 %492, i64 %493, i32 %494, i32 %495, i32 %498, i32 7)
  %500 = load i64, i64* %7, align 8
  %501 = load i64, i64* %8, align 8
  %502 = load i64, i64* %5, align 8
  %503 = load i64, i64* %6, align 8
  %504 = load i32, i32* @F2, align 4
  %505 = load i32, i32* @K2, align 4
  %506 = load i32*, i32** %4, align 8
  %507 = getelementptr inbounds i32, i32* %506, i64 11
  %508 = load i32, i32* %507, align 4
  %509 = call i32 @ROUND(i64 %500, i64 %501, i64 %502, i64 %503, i32 %504, i32 %505, i32 %508, i32 13)
  %510 = load i64, i64* %6, align 8
  %511 = load i64, i64* %7, align 8
  %512 = load i64, i64* %8, align 8
  %513 = load i64, i64* %5, align 8
  %514 = load i32, i32* @F2, align 4
  %515 = load i32, i32* @K2, align 4
  %516 = load i32*, i32** %4, align 8
  %517 = getelementptr inbounds i32, i32* %516, i64 8
  %518 = load i32, i32* %517, align 4
  %519 = call i32 @ROUND(i64 %510, i64 %511, i64 %512, i64 %513, i32 %514, i32 %515, i32 %518, i32 12)
  %520 = load i64, i64* %9, align 8
  %521 = load i64, i64* %10, align 8
  %522 = load i64, i64* %11, align 8
  %523 = load i64, i64* %12, align 8
  %524 = load i32, i32* @F3, align 4
  %525 = load i32, i32* @KK2, align 4
  %526 = load i32*, i32** %4, align 8
  %527 = getelementptr inbounds i32, i32* %526, i64 6
  %528 = load i32, i32* %527, align 4
  %529 = call i32 @ROUND(i64 %520, i64 %521, i64 %522, i64 %523, i32 %524, i32 %525, i32 %528, i32 9)
  %530 = load i64, i64* %12, align 8
  %531 = load i64, i64* %9, align 8
  %532 = load i64, i64* %10, align 8
  %533 = load i64, i64* %11, align 8
  %534 = load i32, i32* @F3, align 4
  %535 = load i32, i32* @KK2, align 4
  %536 = load i32*, i32** %4, align 8
  %537 = getelementptr inbounds i32, i32* %536, i64 11
  %538 = load i32, i32* %537, align 4
  %539 = call i32 @ROUND(i64 %530, i64 %531, i64 %532, i64 %533, i32 %534, i32 %535, i32 %538, i32 13)
  %540 = load i64, i64* %11, align 8
  %541 = load i64, i64* %12, align 8
  %542 = load i64, i64* %9, align 8
  %543 = load i64, i64* %10, align 8
  %544 = load i32, i32* @F3, align 4
  %545 = load i32, i32* @KK2, align 4
  %546 = load i32*, i32** %4, align 8
  %547 = getelementptr inbounds i32, i32* %546, i64 3
  %548 = load i32, i32* %547, align 4
  %549 = call i32 @ROUND(i64 %540, i64 %541, i64 %542, i64 %543, i32 %544, i32 %545, i32 %548, i32 15)
  %550 = load i64, i64* %10, align 8
  %551 = load i64, i64* %11, align 8
  %552 = load i64, i64* %12, align 8
  %553 = load i64, i64* %9, align 8
  %554 = load i32, i32* @F3, align 4
  %555 = load i32, i32* @KK2, align 4
  %556 = load i32*, i32** %4, align 8
  %557 = getelementptr inbounds i32, i32* %556, i64 7
  %558 = load i32, i32* %557, align 4
  %559 = call i32 @ROUND(i64 %550, i64 %551, i64 %552, i64 %553, i32 %554, i32 %555, i32 %558, i32 7)
  %560 = load i64, i64* %9, align 8
  %561 = load i64, i64* %10, align 8
  %562 = load i64, i64* %11, align 8
  %563 = load i64, i64* %12, align 8
  %564 = load i32, i32* @F3, align 4
  %565 = load i32, i32* @KK2, align 4
  %566 = load i32*, i32** %4, align 8
  %567 = getelementptr inbounds i32, i32* %566, i64 0
  %568 = load i32, i32* %567, align 4
  %569 = call i32 @ROUND(i64 %560, i64 %561, i64 %562, i64 %563, i32 %564, i32 %565, i32 %568, i32 12)
  %570 = load i64, i64* %12, align 8
  %571 = load i64, i64* %9, align 8
  %572 = load i64, i64* %10, align 8
  %573 = load i64, i64* %11, align 8
  %574 = load i32, i32* @F3, align 4
  %575 = load i32, i32* @KK2, align 4
  %576 = load i32*, i32** %4, align 8
  %577 = getelementptr inbounds i32, i32* %576, i64 13
  %578 = load i32, i32* %577, align 4
  %579 = call i32 @ROUND(i64 %570, i64 %571, i64 %572, i64 %573, i32 %574, i32 %575, i32 %578, i32 8)
  %580 = load i64, i64* %11, align 8
  %581 = load i64, i64* %12, align 8
  %582 = load i64, i64* %9, align 8
  %583 = load i64, i64* %10, align 8
  %584 = load i32, i32* @F3, align 4
  %585 = load i32, i32* @KK2, align 4
  %586 = load i32*, i32** %4, align 8
  %587 = getelementptr inbounds i32, i32* %586, i64 5
  %588 = load i32, i32* %587, align 4
  %589 = call i32 @ROUND(i64 %580, i64 %581, i64 %582, i64 %583, i32 %584, i32 %585, i32 %588, i32 9)
  %590 = load i64, i64* %10, align 8
  %591 = load i64, i64* %11, align 8
  %592 = load i64, i64* %12, align 8
  %593 = load i64, i64* %9, align 8
  %594 = load i32, i32* @F3, align 4
  %595 = load i32, i32* @KK2, align 4
  %596 = load i32*, i32** %4, align 8
  %597 = getelementptr inbounds i32, i32* %596, i64 10
  %598 = load i32, i32* %597, align 4
  %599 = call i32 @ROUND(i64 %590, i64 %591, i64 %592, i64 %593, i32 %594, i32 %595, i32 %598, i32 11)
  %600 = load i64, i64* %9, align 8
  %601 = load i64, i64* %10, align 8
  %602 = load i64, i64* %11, align 8
  %603 = load i64, i64* %12, align 8
  %604 = load i32, i32* @F3, align 4
  %605 = load i32, i32* @KK2, align 4
  %606 = load i32*, i32** %4, align 8
  %607 = getelementptr inbounds i32, i32* %606, i64 14
  %608 = load i32, i32* %607, align 4
  %609 = call i32 @ROUND(i64 %600, i64 %601, i64 %602, i64 %603, i32 %604, i32 %605, i32 %608, i32 7)
  %610 = load i64, i64* %12, align 8
  %611 = load i64, i64* %9, align 8
  %612 = load i64, i64* %10, align 8
  %613 = load i64, i64* %11, align 8
  %614 = load i32, i32* @F3, align 4
  %615 = load i32, i32* @KK2, align 4
  %616 = load i32*, i32** %4, align 8
  %617 = getelementptr inbounds i32, i32* %616, i64 15
  %618 = load i32, i32* %617, align 4
  %619 = call i32 @ROUND(i64 %610, i64 %611, i64 %612, i64 %613, i32 %614, i32 %615, i32 %618, i32 7)
  %620 = load i64, i64* %11, align 8
  %621 = load i64, i64* %12, align 8
  %622 = load i64, i64* %9, align 8
  %623 = load i64, i64* %10, align 8
  %624 = load i32, i32* @F3, align 4
  %625 = load i32, i32* @KK2, align 4
  %626 = load i32*, i32** %4, align 8
  %627 = getelementptr inbounds i32, i32* %626, i64 8
  %628 = load i32, i32* %627, align 4
  %629 = call i32 @ROUND(i64 %620, i64 %621, i64 %622, i64 %623, i32 %624, i32 %625, i32 %628, i32 12)
  %630 = load i64, i64* %10, align 8
  %631 = load i64, i64* %11, align 8
  %632 = load i64, i64* %12, align 8
  %633 = load i64, i64* %9, align 8
  %634 = load i32, i32* @F3, align 4
  %635 = load i32, i32* @KK2, align 4
  %636 = load i32*, i32** %4, align 8
  %637 = getelementptr inbounds i32, i32* %636, i64 12
  %638 = load i32, i32* %637, align 4
  %639 = call i32 @ROUND(i64 %630, i64 %631, i64 %632, i64 %633, i32 %634, i32 %635, i32 %638, i32 7)
  %640 = load i64, i64* %9, align 8
  %641 = load i64, i64* %10, align 8
  %642 = load i64, i64* %11, align 8
  %643 = load i64, i64* %12, align 8
  %644 = load i32, i32* @F3, align 4
  %645 = load i32, i32* @KK2, align 4
  %646 = load i32*, i32** %4, align 8
  %647 = getelementptr inbounds i32, i32* %646, i64 4
  %648 = load i32, i32* %647, align 4
  %649 = call i32 @ROUND(i64 %640, i64 %641, i64 %642, i64 %643, i32 %644, i32 %645, i32 %648, i32 6)
  %650 = load i64, i64* %12, align 8
  %651 = load i64, i64* %9, align 8
  %652 = load i64, i64* %10, align 8
  %653 = load i64, i64* %11, align 8
  %654 = load i32, i32* @F3, align 4
  %655 = load i32, i32* @KK2, align 4
  %656 = load i32*, i32** %4, align 8
  %657 = getelementptr inbounds i32, i32* %656, i64 9
  %658 = load i32, i32* %657, align 4
  %659 = call i32 @ROUND(i64 %650, i64 %651, i64 %652, i64 %653, i32 %654, i32 %655, i32 %658, i32 15)
  %660 = load i64, i64* %11, align 8
  %661 = load i64, i64* %12, align 8
  %662 = load i64, i64* %9, align 8
  %663 = load i64, i64* %10, align 8
  %664 = load i32, i32* @F3, align 4
  %665 = load i32, i32* @KK2, align 4
  %666 = load i32*, i32** %4, align 8
  %667 = getelementptr inbounds i32, i32* %666, i64 1
  %668 = load i32, i32* %667, align 4
  %669 = call i32 @ROUND(i64 %660, i64 %661, i64 %662, i64 %663, i32 %664, i32 %665, i32 %668, i32 13)
  %670 = load i64, i64* %10, align 8
  %671 = load i64, i64* %11, align 8
  %672 = load i64, i64* %12, align 8
  %673 = load i64, i64* %9, align 8
  %674 = load i32, i32* @F3, align 4
  %675 = load i32, i32* @KK2, align 4
  %676 = load i32*, i32** %4, align 8
  %677 = getelementptr inbounds i32, i32* %676, i64 2
  %678 = load i32, i32* %677, align 4
  %679 = call i32 @ROUND(i64 %670, i64 %671, i64 %672, i64 %673, i32 %674, i32 %675, i32 %678, i32 11)
  %680 = load i64, i64* %6, align 8
  %681 = load i64, i64* %10, align 8
  %682 = call i32 @swap(i64 %680, i64 %681)
  %683 = load i64, i64* %5, align 8
  %684 = load i64, i64* %6, align 8
  %685 = load i64, i64* %7, align 8
  %686 = load i64, i64* %8, align 8
  %687 = load i32, i32* @F3, align 4
  %688 = load i32, i32* @K3, align 4
  %689 = load i32*, i32** %4, align 8
  %690 = getelementptr inbounds i32, i32* %689, i64 3
  %691 = load i32, i32* %690, align 4
  %692 = call i32 @ROUND(i64 %683, i64 %684, i64 %685, i64 %686, i32 %687, i32 %688, i32 %691, i32 11)
  %693 = load i64, i64* %8, align 8
  %694 = load i64, i64* %5, align 8
  %695 = load i64, i64* %6, align 8
  %696 = load i64, i64* %7, align 8
  %697 = load i32, i32* @F3, align 4
  %698 = load i32, i32* @K3, align 4
  %699 = load i32*, i32** %4, align 8
  %700 = getelementptr inbounds i32, i32* %699, i64 10
  %701 = load i32, i32* %700, align 4
  %702 = call i32 @ROUND(i64 %693, i64 %694, i64 %695, i64 %696, i32 %697, i32 %698, i32 %701, i32 13)
  %703 = load i64, i64* %7, align 8
  %704 = load i64, i64* %8, align 8
  %705 = load i64, i64* %5, align 8
  %706 = load i64, i64* %6, align 8
  %707 = load i32, i32* @F3, align 4
  %708 = load i32, i32* @K3, align 4
  %709 = load i32*, i32** %4, align 8
  %710 = getelementptr inbounds i32, i32* %709, i64 14
  %711 = load i32, i32* %710, align 4
  %712 = call i32 @ROUND(i64 %703, i64 %704, i64 %705, i64 %706, i32 %707, i32 %708, i32 %711, i32 6)
  %713 = load i64, i64* %6, align 8
  %714 = load i64, i64* %7, align 8
  %715 = load i64, i64* %8, align 8
  %716 = load i64, i64* %5, align 8
  %717 = load i32, i32* @F3, align 4
  %718 = load i32, i32* @K3, align 4
  %719 = load i32*, i32** %4, align 8
  %720 = getelementptr inbounds i32, i32* %719, i64 4
  %721 = load i32, i32* %720, align 4
  %722 = call i32 @ROUND(i64 %713, i64 %714, i64 %715, i64 %716, i32 %717, i32 %718, i32 %721, i32 7)
  %723 = load i64, i64* %5, align 8
  %724 = load i64, i64* %6, align 8
  %725 = load i64, i64* %7, align 8
  %726 = load i64, i64* %8, align 8
  %727 = load i32, i32* @F3, align 4
  %728 = load i32, i32* @K3, align 4
  %729 = load i32*, i32** %4, align 8
  %730 = getelementptr inbounds i32, i32* %729, i64 9
  %731 = load i32, i32* %730, align 4
  %732 = call i32 @ROUND(i64 %723, i64 %724, i64 %725, i64 %726, i32 %727, i32 %728, i32 %731, i32 14)
  %733 = load i64, i64* %8, align 8
  %734 = load i64, i64* %5, align 8
  %735 = load i64, i64* %6, align 8
  %736 = load i64, i64* %7, align 8
  %737 = load i32, i32* @F3, align 4
  %738 = load i32, i32* @K3, align 4
  %739 = load i32*, i32** %4, align 8
  %740 = getelementptr inbounds i32, i32* %739, i64 15
  %741 = load i32, i32* %740, align 4
  %742 = call i32 @ROUND(i64 %733, i64 %734, i64 %735, i64 %736, i32 %737, i32 %738, i32 %741, i32 9)
  %743 = load i64, i64* %7, align 8
  %744 = load i64, i64* %8, align 8
  %745 = load i64, i64* %5, align 8
  %746 = load i64, i64* %6, align 8
  %747 = load i32, i32* @F3, align 4
  %748 = load i32, i32* @K3, align 4
  %749 = load i32*, i32** %4, align 8
  %750 = getelementptr inbounds i32, i32* %749, i64 8
  %751 = load i32, i32* %750, align 4
  %752 = call i32 @ROUND(i64 %743, i64 %744, i64 %745, i64 %746, i32 %747, i32 %748, i32 %751, i32 13)
  %753 = load i64, i64* %6, align 8
  %754 = load i64, i64* %7, align 8
  %755 = load i64, i64* %8, align 8
  %756 = load i64, i64* %5, align 8
  %757 = load i32, i32* @F3, align 4
  %758 = load i32, i32* @K3, align 4
  %759 = load i32*, i32** %4, align 8
  %760 = getelementptr inbounds i32, i32* %759, i64 1
  %761 = load i32, i32* %760, align 4
  %762 = call i32 @ROUND(i64 %753, i64 %754, i64 %755, i64 %756, i32 %757, i32 %758, i32 %761, i32 15)
  %763 = load i64, i64* %5, align 8
  %764 = load i64, i64* %6, align 8
  %765 = load i64, i64* %7, align 8
  %766 = load i64, i64* %8, align 8
  %767 = load i32, i32* @F3, align 4
  %768 = load i32, i32* @K3, align 4
  %769 = load i32*, i32** %4, align 8
  %770 = getelementptr inbounds i32, i32* %769, i64 2
  %771 = load i32, i32* %770, align 4
  %772 = call i32 @ROUND(i64 %763, i64 %764, i64 %765, i64 %766, i32 %767, i32 %768, i32 %771, i32 14)
  %773 = load i64, i64* %8, align 8
  %774 = load i64, i64* %5, align 8
  %775 = load i64, i64* %6, align 8
  %776 = load i64, i64* %7, align 8
  %777 = load i32, i32* @F3, align 4
  %778 = load i32, i32* @K3, align 4
  %779 = load i32*, i32** %4, align 8
  %780 = getelementptr inbounds i32, i32* %779, i64 7
  %781 = load i32, i32* %780, align 4
  %782 = call i32 @ROUND(i64 %773, i64 %774, i64 %775, i64 %776, i32 %777, i32 %778, i32 %781, i32 8)
  %783 = load i64, i64* %7, align 8
  %784 = load i64, i64* %8, align 8
  %785 = load i64, i64* %5, align 8
  %786 = load i64, i64* %6, align 8
  %787 = load i32, i32* @F3, align 4
  %788 = load i32, i32* @K3, align 4
  %789 = load i32*, i32** %4, align 8
  %790 = getelementptr inbounds i32, i32* %789, i64 0
  %791 = load i32, i32* %790, align 4
  %792 = call i32 @ROUND(i64 %783, i64 %784, i64 %785, i64 %786, i32 %787, i32 %788, i32 %791, i32 13)
  %793 = load i64, i64* %6, align 8
  %794 = load i64, i64* %7, align 8
  %795 = load i64, i64* %8, align 8
  %796 = load i64, i64* %5, align 8
  %797 = load i32, i32* @F3, align 4
  %798 = load i32, i32* @K3, align 4
  %799 = load i32*, i32** %4, align 8
  %800 = getelementptr inbounds i32, i32* %799, i64 6
  %801 = load i32, i32* %800, align 4
  %802 = call i32 @ROUND(i64 %793, i64 %794, i64 %795, i64 %796, i32 %797, i32 %798, i32 %801, i32 6)
  %803 = load i64, i64* %5, align 8
  %804 = load i64, i64* %6, align 8
  %805 = load i64, i64* %7, align 8
  %806 = load i64, i64* %8, align 8
  %807 = load i32, i32* @F3, align 4
  %808 = load i32, i32* @K3, align 4
  %809 = load i32*, i32** %4, align 8
  %810 = getelementptr inbounds i32, i32* %809, i64 13
  %811 = load i32, i32* %810, align 4
  %812 = call i32 @ROUND(i64 %803, i64 %804, i64 %805, i64 %806, i32 %807, i32 %808, i32 %811, i32 5)
  %813 = load i64, i64* %8, align 8
  %814 = load i64, i64* %5, align 8
  %815 = load i64, i64* %6, align 8
  %816 = load i64, i64* %7, align 8
  %817 = load i32, i32* @F3, align 4
  %818 = load i32, i32* @K3, align 4
  %819 = load i32*, i32** %4, align 8
  %820 = getelementptr inbounds i32, i32* %819, i64 11
  %821 = load i32, i32* %820, align 4
  %822 = call i32 @ROUND(i64 %813, i64 %814, i64 %815, i64 %816, i32 %817, i32 %818, i32 %821, i32 12)
  %823 = load i64, i64* %7, align 8
  %824 = load i64, i64* %8, align 8
  %825 = load i64, i64* %5, align 8
  %826 = load i64, i64* %6, align 8
  %827 = load i32, i32* @F3, align 4
  %828 = load i32, i32* @K3, align 4
  %829 = load i32*, i32** %4, align 8
  %830 = getelementptr inbounds i32, i32* %829, i64 5
  %831 = load i32, i32* %830, align 4
  %832 = call i32 @ROUND(i64 %823, i64 %824, i64 %825, i64 %826, i32 %827, i32 %828, i32 %831, i32 7)
  %833 = load i64, i64* %6, align 8
  %834 = load i64, i64* %7, align 8
  %835 = load i64, i64* %8, align 8
  %836 = load i64, i64* %5, align 8
  %837 = load i32, i32* @F3, align 4
  %838 = load i32, i32* @K3, align 4
  %839 = load i32*, i32** %4, align 8
  %840 = getelementptr inbounds i32, i32* %839, i64 12
  %841 = load i32, i32* %840, align 4
  %842 = call i32 @ROUND(i64 %833, i64 %834, i64 %835, i64 %836, i32 %837, i32 %838, i32 %841, i32 5)
  %843 = load i64, i64* %9, align 8
  %844 = load i64, i64* %10, align 8
  %845 = load i64, i64* %11, align 8
  %846 = load i64, i64* %12, align 8
  %847 = load i32, i32* @F2, align 4
  %848 = load i32, i32* @KK3, align 4
  %849 = load i32*, i32** %4, align 8
  %850 = getelementptr inbounds i32, i32* %849, i64 15
  %851 = load i32, i32* %850, align 4
  %852 = call i32 @ROUND(i64 %843, i64 %844, i64 %845, i64 %846, i32 %847, i32 %848, i32 %851, i32 9)
  %853 = load i64, i64* %12, align 8
  %854 = load i64, i64* %9, align 8
  %855 = load i64, i64* %10, align 8
  %856 = load i64, i64* %11, align 8
  %857 = load i32, i32* @F2, align 4
  %858 = load i32, i32* @KK3, align 4
  %859 = load i32*, i32** %4, align 8
  %860 = getelementptr inbounds i32, i32* %859, i64 5
  %861 = load i32, i32* %860, align 4
  %862 = call i32 @ROUND(i64 %853, i64 %854, i64 %855, i64 %856, i32 %857, i32 %858, i32 %861, i32 7)
  %863 = load i64, i64* %11, align 8
  %864 = load i64, i64* %12, align 8
  %865 = load i64, i64* %9, align 8
  %866 = load i64, i64* %10, align 8
  %867 = load i32, i32* @F2, align 4
  %868 = load i32, i32* @KK3, align 4
  %869 = load i32*, i32** %4, align 8
  %870 = getelementptr inbounds i32, i32* %869, i64 1
  %871 = load i32, i32* %870, align 4
  %872 = call i32 @ROUND(i64 %863, i64 %864, i64 %865, i64 %866, i32 %867, i32 %868, i32 %871, i32 15)
  %873 = load i64, i64* %10, align 8
  %874 = load i64, i64* %11, align 8
  %875 = load i64, i64* %12, align 8
  %876 = load i64, i64* %9, align 8
  %877 = load i32, i32* @F2, align 4
  %878 = load i32, i32* @KK3, align 4
  %879 = load i32*, i32** %4, align 8
  %880 = getelementptr inbounds i32, i32* %879, i64 3
  %881 = load i32, i32* %880, align 4
  %882 = call i32 @ROUND(i64 %873, i64 %874, i64 %875, i64 %876, i32 %877, i32 %878, i32 %881, i32 11)
  %883 = load i64, i64* %9, align 8
  %884 = load i64, i64* %10, align 8
  %885 = load i64, i64* %11, align 8
  %886 = load i64, i64* %12, align 8
  %887 = load i32, i32* @F2, align 4
  %888 = load i32, i32* @KK3, align 4
  %889 = load i32*, i32** %4, align 8
  %890 = getelementptr inbounds i32, i32* %889, i64 7
  %891 = load i32, i32* %890, align 4
  %892 = call i32 @ROUND(i64 %883, i64 %884, i64 %885, i64 %886, i32 %887, i32 %888, i32 %891, i32 8)
  %893 = load i64, i64* %12, align 8
  %894 = load i64, i64* %9, align 8
  %895 = load i64, i64* %10, align 8
  %896 = load i64, i64* %11, align 8
  %897 = load i32, i32* @F2, align 4
  %898 = load i32, i32* @KK3, align 4
  %899 = load i32*, i32** %4, align 8
  %900 = getelementptr inbounds i32, i32* %899, i64 14
  %901 = load i32, i32* %900, align 4
  %902 = call i32 @ROUND(i64 %893, i64 %894, i64 %895, i64 %896, i32 %897, i32 %898, i32 %901, i32 6)
  %903 = load i64, i64* %11, align 8
  %904 = load i64, i64* %12, align 8
  %905 = load i64, i64* %9, align 8
  %906 = load i64, i64* %10, align 8
  %907 = load i32, i32* @F2, align 4
  %908 = load i32, i32* @KK3, align 4
  %909 = load i32*, i32** %4, align 8
  %910 = getelementptr inbounds i32, i32* %909, i64 6
  %911 = load i32, i32* %910, align 4
  %912 = call i32 @ROUND(i64 %903, i64 %904, i64 %905, i64 %906, i32 %907, i32 %908, i32 %911, i32 6)
  %913 = load i64, i64* %10, align 8
  %914 = load i64, i64* %11, align 8
  %915 = load i64, i64* %12, align 8
  %916 = load i64, i64* %9, align 8
  %917 = load i32, i32* @F2, align 4
  %918 = load i32, i32* @KK3, align 4
  %919 = load i32*, i32** %4, align 8
  %920 = getelementptr inbounds i32, i32* %919, i64 9
  %921 = load i32, i32* %920, align 4
  %922 = call i32 @ROUND(i64 %913, i64 %914, i64 %915, i64 %916, i32 %917, i32 %918, i32 %921, i32 14)
  %923 = load i64, i64* %9, align 8
  %924 = load i64, i64* %10, align 8
  %925 = load i64, i64* %11, align 8
  %926 = load i64, i64* %12, align 8
  %927 = load i32, i32* @F2, align 4
  %928 = load i32, i32* @KK3, align 4
  %929 = load i32*, i32** %4, align 8
  %930 = getelementptr inbounds i32, i32* %929, i64 11
  %931 = load i32, i32* %930, align 4
  %932 = call i32 @ROUND(i64 %923, i64 %924, i64 %925, i64 %926, i32 %927, i32 %928, i32 %931, i32 12)
  %933 = load i64, i64* %12, align 8
  %934 = load i64, i64* %9, align 8
  %935 = load i64, i64* %10, align 8
  %936 = load i64, i64* %11, align 8
  %937 = load i32, i32* @F2, align 4
  %938 = load i32, i32* @KK3, align 4
  %939 = load i32*, i32** %4, align 8
  %940 = getelementptr inbounds i32, i32* %939, i64 8
  %941 = load i32, i32* %940, align 4
  %942 = call i32 @ROUND(i64 %933, i64 %934, i64 %935, i64 %936, i32 %937, i32 %938, i32 %941, i32 13)
  %943 = load i64, i64* %11, align 8
  %944 = load i64, i64* %12, align 8
  %945 = load i64, i64* %9, align 8
  %946 = load i64, i64* %10, align 8
  %947 = load i32, i32* @F2, align 4
  %948 = load i32, i32* @KK3, align 4
  %949 = load i32*, i32** %4, align 8
  %950 = getelementptr inbounds i32, i32* %949, i64 12
  %951 = load i32, i32* %950, align 4
  %952 = call i32 @ROUND(i64 %943, i64 %944, i64 %945, i64 %946, i32 %947, i32 %948, i32 %951, i32 5)
  %953 = load i64, i64* %10, align 8
  %954 = load i64, i64* %11, align 8
  %955 = load i64, i64* %12, align 8
  %956 = load i64, i64* %9, align 8
  %957 = load i32, i32* @F2, align 4
  %958 = load i32, i32* @KK3, align 4
  %959 = load i32*, i32** %4, align 8
  %960 = getelementptr inbounds i32, i32* %959, i64 2
  %961 = load i32, i32* %960, align 4
  %962 = call i32 @ROUND(i64 %953, i64 %954, i64 %955, i64 %956, i32 %957, i32 %958, i32 %961, i32 14)
  %963 = load i64, i64* %9, align 8
  %964 = load i64, i64* %10, align 8
  %965 = load i64, i64* %11, align 8
  %966 = load i64, i64* %12, align 8
  %967 = load i32, i32* @F2, align 4
  %968 = load i32, i32* @KK3, align 4
  %969 = load i32*, i32** %4, align 8
  %970 = getelementptr inbounds i32, i32* %969, i64 10
  %971 = load i32, i32* %970, align 4
  %972 = call i32 @ROUND(i64 %963, i64 %964, i64 %965, i64 %966, i32 %967, i32 %968, i32 %971, i32 13)
  %973 = load i64, i64* %12, align 8
  %974 = load i64, i64* %9, align 8
  %975 = load i64, i64* %10, align 8
  %976 = load i64, i64* %11, align 8
  %977 = load i32, i32* @F2, align 4
  %978 = load i32, i32* @KK3, align 4
  %979 = load i32*, i32** %4, align 8
  %980 = getelementptr inbounds i32, i32* %979, i64 0
  %981 = load i32, i32* %980, align 4
  %982 = call i32 @ROUND(i64 %973, i64 %974, i64 %975, i64 %976, i32 %977, i32 %978, i32 %981, i32 13)
  %983 = load i64, i64* %11, align 8
  %984 = load i64, i64* %12, align 8
  %985 = load i64, i64* %9, align 8
  %986 = load i64, i64* %10, align 8
  %987 = load i32, i32* @F2, align 4
  %988 = load i32, i32* @KK3, align 4
  %989 = load i32*, i32** %4, align 8
  %990 = getelementptr inbounds i32, i32* %989, i64 4
  %991 = load i32, i32* %990, align 4
  %992 = call i32 @ROUND(i64 %983, i64 %984, i64 %985, i64 %986, i32 %987, i32 %988, i32 %991, i32 7)
  %993 = load i64, i64* %10, align 8
  %994 = load i64, i64* %11, align 8
  %995 = load i64, i64* %12, align 8
  %996 = load i64, i64* %9, align 8
  %997 = load i32, i32* @F2, align 4
  %998 = load i32, i32* @KK3, align 4
  %999 = load i32*, i32** %4, align 8
  %1000 = getelementptr inbounds i32, i32* %999, i64 13
  %1001 = load i32, i32* %1000, align 4
  %1002 = call i32 @ROUND(i64 %993, i64 %994, i64 %995, i64 %996, i32 %997, i32 %998, i32 %1001, i32 5)
  %1003 = load i64, i64* %7, align 8
  %1004 = load i64, i64* %11, align 8
  %1005 = call i32 @swap(i64 %1003, i64 %1004)
  %1006 = load i64, i64* %5, align 8
  %1007 = load i64, i64* %6, align 8
  %1008 = load i64, i64* %7, align 8
  %1009 = load i64, i64* %8, align 8
  %1010 = load i32, i32* @F4, align 4
  %1011 = load i32, i32* @K4, align 4
  %1012 = load i32*, i32** %4, align 8
  %1013 = getelementptr inbounds i32, i32* %1012, i64 1
  %1014 = load i32, i32* %1013, align 4
  %1015 = call i32 @ROUND(i64 %1006, i64 %1007, i64 %1008, i64 %1009, i32 %1010, i32 %1011, i32 %1014, i32 11)
  %1016 = load i64, i64* %8, align 8
  %1017 = load i64, i64* %5, align 8
  %1018 = load i64, i64* %6, align 8
  %1019 = load i64, i64* %7, align 8
  %1020 = load i32, i32* @F4, align 4
  %1021 = load i32, i32* @K4, align 4
  %1022 = load i32*, i32** %4, align 8
  %1023 = getelementptr inbounds i32, i32* %1022, i64 9
  %1024 = load i32, i32* %1023, align 4
  %1025 = call i32 @ROUND(i64 %1016, i64 %1017, i64 %1018, i64 %1019, i32 %1020, i32 %1021, i32 %1024, i32 12)
  %1026 = load i64, i64* %7, align 8
  %1027 = load i64, i64* %8, align 8
  %1028 = load i64, i64* %5, align 8
  %1029 = load i64, i64* %6, align 8
  %1030 = load i32, i32* @F4, align 4
  %1031 = load i32, i32* @K4, align 4
  %1032 = load i32*, i32** %4, align 8
  %1033 = getelementptr inbounds i32, i32* %1032, i64 11
  %1034 = load i32, i32* %1033, align 4
  %1035 = call i32 @ROUND(i64 %1026, i64 %1027, i64 %1028, i64 %1029, i32 %1030, i32 %1031, i32 %1034, i32 14)
  %1036 = load i64, i64* %6, align 8
  %1037 = load i64, i64* %7, align 8
  %1038 = load i64, i64* %8, align 8
  %1039 = load i64, i64* %5, align 8
  %1040 = load i32, i32* @F4, align 4
  %1041 = load i32, i32* @K4, align 4
  %1042 = load i32*, i32** %4, align 8
  %1043 = getelementptr inbounds i32, i32* %1042, i64 10
  %1044 = load i32, i32* %1043, align 4
  %1045 = call i32 @ROUND(i64 %1036, i64 %1037, i64 %1038, i64 %1039, i32 %1040, i32 %1041, i32 %1044, i32 15)
  %1046 = load i64, i64* %5, align 8
  %1047 = load i64, i64* %6, align 8
  %1048 = load i64, i64* %7, align 8
  %1049 = load i64, i64* %8, align 8
  %1050 = load i32, i32* @F4, align 4
  %1051 = load i32, i32* @K4, align 4
  %1052 = load i32*, i32** %4, align 8
  %1053 = getelementptr inbounds i32, i32* %1052, i64 0
  %1054 = load i32, i32* %1053, align 4
  %1055 = call i32 @ROUND(i64 %1046, i64 %1047, i64 %1048, i64 %1049, i32 %1050, i32 %1051, i32 %1054, i32 14)
  %1056 = load i64, i64* %8, align 8
  %1057 = load i64, i64* %5, align 8
  %1058 = load i64, i64* %6, align 8
  %1059 = load i64, i64* %7, align 8
  %1060 = load i32, i32* @F4, align 4
  %1061 = load i32, i32* @K4, align 4
  %1062 = load i32*, i32** %4, align 8
  %1063 = getelementptr inbounds i32, i32* %1062, i64 8
  %1064 = load i32, i32* %1063, align 4
  %1065 = call i32 @ROUND(i64 %1056, i64 %1057, i64 %1058, i64 %1059, i32 %1060, i32 %1061, i32 %1064, i32 15)
  %1066 = load i64, i64* %7, align 8
  %1067 = load i64, i64* %8, align 8
  %1068 = load i64, i64* %5, align 8
  %1069 = load i64, i64* %6, align 8
  %1070 = load i32, i32* @F4, align 4
  %1071 = load i32, i32* @K4, align 4
  %1072 = load i32*, i32** %4, align 8
  %1073 = getelementptr inbounds i32, i32* %1072, i64 12
  %1074 = load i32, i32* %1073, align 4
  %1075 = call i32 @ROUND(i64 %1066, i64 %1067, i64 %1068, i64 %1069, i32 %1070, i32 %1071, i32 %1074, i32 9)
  %1076 = load i64, i64* %6, align 8
  %1077 = load i64, i64* %7, align 8
  %1078 = load i64, i64* %8, align 8
  %1079 = load i64, i64* %5, align 8
  %1080 = load i32, i32* @F4, align 4
  %1081 = load i32, i32* @K4, align 4
  %1082 = load i32*, i32** %4, align 8
  %1083 = getelementptr inbounds i32, i32* %1082, i64 4
  %1084 = load i32, i32* %1083, align 4
  %1085 = call i32 @ROUND(i64 %1076, i64 %1077, i64 %1078, i64 %1079, i32 %1080, i32 %1081, i32 %1084, i32 8)
  %1086 = load i64, i64* %5, align 8
  %1087 = load i64, i64* %6, align 8
  %1088 = load i64, i64* %7, align 8
  %1089 = load i64, i64* %8, align 8
  %1090 = load i32, i32* @F4, align 4
  %1091 = load i32, i32* @K4, align 4
  %1092 = load i32*, i32** %4, align 8
  %1093 = getelementptr inbounds i32, i32* %1092, i64 13
  %1094 = load i32, i32* %1093, align 4
  %1095 = call i32 @ROUND(i64 %1086, i64 %1087, i64 %1088, i64 %1089, i32 %1090, i32 %1091, i32 %1094, i32 9)
  %1096 = load i64, i64* %8, align 8
  %1097 = load i64, i64* %5, align 8
  %1098 = load i64, i64* %6, align 8
  %1099 = load i64, i64* %7, align 8
  %1100 = load i32, i32* @F4, align 4
  %1101 = load i32, i32* @K4, align 4
  %1102 = load i32*, i32** %4, align 8
  %1103 = getelementptr inbounds i32, i32* %1102, i64 3
  %1104 = load i32, i32* %1103, align 4
  %1105 = call i32 @ROUND(i64 %1096, i64 %1097, i64 %1098, i64 %1099, i32 %1100, i32 %1101, i32 %1104, i32 14)
  %1106 = load i64, i64* %7, align 8
  %1107 = load i64, i64* %8, align 8
  %1108 = load i64, i64* %5, align 8
  %1109 = load i64, i64* %6, align 8
  %1110 = load i32, i32* @F4, align 4
  %1111 = load i32, i32* @K4, align 4
  %1112 = load i32*, i32** %4, align 8
  %1113 = getelementptr inbounds i32, i32* %1112, i64 7
  %1114 = load i32, i32* %1113, align 4
  %1115 = call i32 @ROUND(i64 %1106, i64 %1107, i64 %1108, i64 %1109, i32 %1110, i32 %1111, i32 %1114, i32 5)
  %1116 = load i64, i64* %6, align 8
  %1117 = load i64, i64* %7, align 8
  %1118 = load i64, i64* %8, align 8
  %1119 = load i64, i64* %5, align 8
  %1120 = load i32, i32* @F4, align 4
  %1121 = load i32, i32* @K4, align 4
  %1122 = load i32*, i32** %4, align 8
  %1123 = getelementptr inbounds i32, i32* %1122, i64 15
  %1124 = load i32, i32* %1123, align 4
  %1125 = call i32 @ROUND(i64 %1116, i64 %1117, i64 %1118, i64 %1119, i32 %1120, i32 %1121, i32 %1124, i32 6)
  %1126 = load i64, i64* %5, align 8
  %1127 = load i64, i64* %6, align 8
  %1128 = load i64, i64* %7, align 8
  %1129 = load i64, i64* %8, align 8
  %1130 = load i32, i32* @F4, align 4
  %1131 = load i32, i32* @K4, align 4
  %1132 = load i32*, i32** %4, align 8
  %1133 = getelementptr inbounds i32, i32* %1132, i64 14
  %1134 = load i32, i32* %1133, align 4
  %1135 = call i32 @ROUND(i64 %1126, i64 %1127, i64 %1128, i64 %1129, i32 %1130, i32 %1131, i32 %1134, i32 8)
  %1136 = load i64, i64* %8, align 8
  %1137 = load i64, i64* %5, align 8
  %1138 = load i64, i64* %6, align 8
  %1139 = load i64, i64* %7, align 8
  %1140 = load i32, i32* @F4, align 4
  %1141 = load i32, i32* @K4, align 4
  %1142 = load i32*, i32** %4, align 8
  %1143 = getelementptr inbounds i32, i32* %1142, i64 5
  %1144 = load i32, i32* %1143, align 4
  %1145 = call i32 @ROUND(i64 %1136, i64 %1137, i64 %1138, i64 %1139, i32 %1140, i32 %1141, i32 %1144, i32 6)
  %1146 = load i64, i64* %7, align 8
  %1147 = load i64, i64* %8, align 8
  %1148 = load i64, i64* %5, align 8
  %1149 = load i64, i64* %6, align 8
  %1150 = load i32, i32* @F4, align 4
  %1151 = load i32, i32* @K4, align 4
  %1152 = load i32*, i32** %4, align 8
  %1153 = getelementptr inbounds i32, i32* %1152, i64 6
  %1154 = load i32, i32* %1153, align 4
  %1155 = call i32 @ROUND(i64 %1146, i64 %1147, i64 %1148, i64 %1149, i32 %1150, i32 %1151, i32 %1154, i32 5)
  %1156 = load i64, i64* %6, align 8
  %1157 = load i64, i64* %7, align 8
  %1158 = load i64, i64* %8, align 8
  %1159 = load i64, i64* %5, align 8
  %1160 = load i32, i32* @F4, align 4
  %1161 = load i32, i32* @K4, align 4
  %1162 = load i32*, i32** %4, align 8
  %1163 = getelementptr inbounds i32, i32* %1162, i64 2
  %1164 = load i32, i32* %1163, align 4
  %1165 = call i32 @ROUND(i64 %1156, i64 %1157, i64 %1158, i64 %1159, i32 %1160, i32 %1161, i32 %1164, i32 12)
  %1166 = load i64, i64* %9, align 8
  %1167 = load i64, i64* %10, align 8
  %1168 = load i64, i64* %11, align 8
  %1169 = load i64, i64* %12, align 8
  %1170 = load i32, i32* @F1, align 4
  %1171 = load i32, i32* @KK4, align 4
  %1172 = load i32*, i32** %4, align 8
  %1173 = getelementptr inbounds i32, i32* %1172, i64 8
  %1174 = load i32, i32* %1173, align 4
  %1175 = call i32 @ROUND(i64 %1166, i64 %1167, i64 %1168, i64 %1169, i32 %1170, i32 %1171, i32 %1174, i32 15)
  %1176 = load i64, i64* %12, align 8
  %1177 = load i64, i64* %9, align 8
  %1178 = load i64, i64* %10, align 8
  %1179 = load i64, i64* %11, align 8
  %1180 = load i32, i32* @F1, align 4
  %1181 = load i32, i32* @KK4, align 4
  %1182 = load i32*, i32** %4, align 8
  %1183 = getelementptr inbounds i32, i32* %1182, i64 6
  %1184 = load i32, i32* %1183, align 4
  %1185 = call i32 @ROUND(i64 %1176, i64 %1177, i64 %1178, i64 %1179, i32 %1180, i32 %1181, i32 %1184, i32 5)
  %1186 = load i64, i64* %11, align 8
  %1187 = load i64, i64* %12, align 8
  %1188 = load i64, i64* %9, align 8
  %1189 = load i64, i64* %10, align 8
  %1190 = load i32, i32* @F1, align 4
  %1191 = load i32, i32* @KK4, align 4
  %1192 = load i32*, i32** %4, align 8
  %1193 = getelementptr inbounds i32, i32* %1192, i64 4
  %1194 = load i32, i32* %1193, align 4
  %1195 = call i32 @ROUND(i64 %1186, i64 %1187, i64 %1188, i64 %1189, i32 %1190, i32 %1191, i32 %1194, i32 8)
  %1196 = load i64, i64* %10, align 8
  %1197 = load i64, i64* %11, align 8
  %1198 = load i64, i64* %12, align 8
  %1199 = load i64, i64* %9, align 8
  %1200 = load i32, i32* @F1, align 4
  %1201 = load i32, i32* @KK4, align 4
  %1202 = load i32*, i32** %4, align 8
  %1203 = getelementptr inbounds i32, i32* %1202, i64 1
  %1204 = load i32, i32* %1203, align 4
  %1205 = call i32 @ROUND(i64 %1196, i64 %1197, i64 %1198, i64 %1199, i32 %1200, i32 %1201, i32 %1204, i32 11)
  %1206 = load i64, i64* %9, align 8
  %1207 = load i64, i64* %10, align 8
  %1208 = load i64, i64* %11, align 8
  %1209 = load i64, i64* %12, align 8
  %1210 = load i32, i32* @F1, align 4
  %1211 = load i32, i32* @KK4, align 4
  %1212 = load i32*, i32** %4, align 8
  %1213 = getelementptr inbounds i32, i32* %1212, i64 3
  %1214 = load i32, i32* %1213, align 4
  %1215 = call i32 @ROUND(i64 %1206, i64 %1207, i64 %1208, i64 %1209, i32 %1210, i32 %1211, i32 %1214, i32 14)
  %1216 = load i64, i64* %12, align 8
  %1217 = load i64, i64* %9, align 8
  %1218 = load i64, i64* %10, align 8
  %1219 = load i64, i64* %11, align 8
  %1220 = load i32, i32* @F1, align 4
  %1221 = load i32, i32* @KK4, align 4
  %1222 = load i32*, i32** %4, align 8
  %1223 = getelementptr inbounds i32, i32* %1222, i64 11
  %1224 = load i32, i32* %1223, align 4
  %1225 = call i32 @ROUND(i64 %1216, i64 %1217, i64 %1218, i64 %1219, i32 %1220, i32 %1221, i32 %1224, i32 14)
  %1226 = load i64, i64* %11, align 8
  %1227 = load i64, i64* %12, align 8
  %1228 = load i64, i64* %9, align 8
  %1229 = load i64, i64* %10, align 8
  %1230 = load i32, i32* @F1, align 4
  %1231 = load i32, i32* @KK4, align 4
  %1232 = load i32*, i32** %4, align 8
  %1233 = getelementptr inbounds i32, i32* %1232, i64 15
  %1234 = load i32, i32* %1233, align 4
  %1235 = call i32 @ROUND(i64 %1226, i64 %1227, i64 %1228, i64 %1229, i32 %1230, i32 %1231, i32 %1234, i32 6)
  %1236 = load i64, i64* %10, align 8
  %1237 = load i64, i64* %11, align 8
  %1238 = load i64, i64* %12, align 8
  %1239 = load i64, i64* %9, align 8
  %1240 = load i32, i32* @F1, align 4
  %1241 = load i32, i32* @KK4, align 4
  %1242 = load i32*, i32** %4, align 8
  %1243 = getelementptr inbounds i32, i32* %1242, i64 0
  %1244 = load i32, i32* %1243, align 4
  %1245 = call i32 @ROUND(i64 %1236, i64 %1237, i64 %1238, i64 %1239, i32 %1240, i32 %1241, i32 %1244, i32 14)
  %1246 = load i64, i64* %9, align 8
  %1247 = load i64, i64* %10, align 8
  %1248 = load i64, i64* %11, align 8
  %1249 = load i64, i64* %12, align 8
  %1250 = load i32, i32* @F1, align 4
  %1251 = load i32, i32* @KK4, align 4
  %1252 = load i32*, i32** %4, align 8
  %1253 = getelementptr inbounds i32, i32* %1252, i64 5
  %1254 = load i32, i32* %1253, align 4
  %1255 = call i32 @ROUND(i64 %1246, i64 %1247, i64 %1248, i64 %1249, i32 %1250, i32 %1251, i32 %1254, i32 6)
  %1256 = load i64, i64* %12, align 8
  %1257 = load i64, i64* %9, align 8
  %1258 = load i64, i64* %10, align 8
  %1259 = load i64, i64* %11, align 8
  %1260 = load i32, i32* @F1, align 4
  %1261 = load i32, i32* @KK4, align 4
  %1262 = load i32*, i32** %4, align 8
  %1263 = getelementptr inbounds i32, i32* %1262, i64 12
  %1264 = load i32, i32* %1263, align 4
  %1265 = call i32 @ROUND(i64 %1256, i64 %1257, i64 %1258, i64 %1259, i32 %1260, i32 %1261, i32 %1264, i32 9)
  %1266 = load i64, i64* %11, align 8
  %1267 = load i64, i64* %12, align 8
  %1268 = load i64, i64* %9, align 8
  %1269 = load i64, i64* %10, align 8
  %1270 = load i32, i32* @F1, align 4
  %1271 = load i32, i32* @KK4, align 4
  %1272 = load i32*, i32** %4, align 8
  %1273 = getelementptr inbounds i32, i32* %1272, i64 2
  %1274 = load i32, i32* %1273, align 4
  %1275 = call i32 @ROUND(i64 %1266, i64 %1267, i64 %1268, i64 %1269, i32 %1270, i32 %1271, i32 %1274, i32 12)
  %1276 = load i64, i64* %10, align 8
  %1277 = load i64, i64* %11, align 8
  %1278 = load i64, i64* %12, align 8
  %1279 = load i64, i64* %9, align 8
  %1280 = load i32, i32* @F1, align 4
  %1281 = load i32, i32* @KK4, align 4
  %1282 = load i32*, i32** %4, align 8
  %1283 = getelementptr inbounds i32, i32* %1282, i64 13
  %1284 = load i32, i32* %1283, align 4
  %1285 = call i32 @ROUND(i64 %1276, i64 %1277, i64 %1278, i64 %1279, i32 %1280, i32 %1281, i32 %1284, i32 9)
  %1286 = load i64, i64* %9, align 8
  %1287 = load i64, i64* %10, align 8
  %1288 = load i64, i64* %11, align 8
  %1289 = load i64, i64* %12, align 8
  %1290 = load i32, i32* @F1, align 4
  %1291 = load i32, i32* @KK4, align 4
  %1292 = load i32*, i32** %4, align 8
  %1293 = getelementptr inbounds i32, i32* %1292, i64 9
  %1294 = load i32, i32* %1293, align 4
  %1295 = call i32 @ROUND(i64 %1286, i64 %1287, i64 %1288, i64 %1289, i32 %1290, i32 %1291, i32 %1294, i32 12)
  %1296 = load i64, i64* %12, align 8
  %1297 = load i64, i64* %9, align 8
  %1298 = load i64, i64* %10, align 8
  %1299 = load i64, i64* %11, align 8
  %1300 = load i32, i32* @F1, align 4
  %1301 = load i32, i32* @KK4, align 4
  %1302 = load i32*, i32** %4, align 8
  %1303 = getelementptr inbounds i32, i32* %1302, i64 7
  %1304 = load i32, i32* %1303, align 4
  %1305 = call i32 @ROUND(i64 %1296, i64 %1297, i64 %1298, i64 %1299, i32 %1300, i32 %1301, i32 %1304, i32 5)
  %1306 = load i64, i64* %11, align 8
  %1307 = load i64, i64* %12, align 8
  %1308 = load i64, i64* %9, align 8
  %1309 = load i64, i64* %10, align 8
  %1310 = load i32, i32* @F1, align 4
  %1311 = load i32, i32* @KK4, align 4
  %1312 = load i32*, i32** %4, align 8
  %1313 = getelementptr inbounds i32, i32* %1312, i64 10
  %1314 = load i32, i32* %1313, align 4
  %1315 = call i32 @ROUND(i64 %1306, i64 %1307, i64 %1308, i64 %1309, i32 %1310, i32 %1311, i32 %1314, i32 15)
  %1316 = load i64, i64* %10, align 8
  %1317 = load i64, i64* %11, align 8
  %1318 = load i64, i64* %12, align 8
  %1319 = load i64, i64* %9, align 8
  %1320 = load i32, i32* @F1, align 4
  %1321 = load i32, i32* @KK4, align 4
  %1322 = load i32*, i32** %4, align 8
  %1323 = getelementptr inbounds i32, i32* %1322, i64 14
  %1324 = load i32, i32* %1323, align 4
  %1325 = call i32 @ROUND(i64 %1316, i64 %1317, i64 %1318, i64 %1319, i32 %1320, i32 %1321, i32 %1324, i32 8)
  %1326 = load i64, i64* %8, align 8
  %1327 = load i64, i64* %12, align 8
  %1328 = call i32 @swap(i64 %1326, i64 %1327)
  %1329 = load i64, i64* %5, align 8
  %1330 = load i64*, i64** %3, align 8
  %1331 = getelementptr inbounds i64, i64* %1330, i64 0
  %1332 = load i64, i64* %1331, align 8
  %1333 = add nsw i64 %1332, %1329
  store i64 %1333, i64* %1331, align 8
  %1334 = load i64, i64* %6, align 8
  %1335 = load i64*, i64** %3, align 8
  %1336 = getelementptr inbounds i64, i64* %1335, i64 1
  %1337 = load i64, i64* %1336, align 8
  %1338 = add nsw i64 %1337, %1334
  store i64 %1338, i64* %1336, align 8
  %1339 = load i64, i64* %7, align 8
  %1340 = load i64*, i64** %3, align 8
  %1341 = getelementptr inbounds i64, i64* %1340, i64 2
  %1342 = load i64, i64* %1341, align 8
  %1343 = add nsw i64 %1342, %1339
  store i64 %1343, i64* %1341, align 8
  %1344 = load i64, i64* %8, align 8
  %1345 = load i64*, i64** %3, align 8
  %1346 = getelementptr inbounds i64, i64* %1345, i64 3
  %1347 = load i64, i64* %1346, align 8
  %1348 = add nsw i64 %1347, %1344
  store i64 %1348, i64* %1346, align 8
  %1349 = load i64, i64* %9, align 8
  %1350 = load i64*, i64** %3, align 8
  %1351 = getelementptr inbounds i64, i64* %1350, i64 4
  %1352 = load i64, i64* %1351, align 8
  %1353 = add nsw i64 %1352, %1349
  store i64 %1353, i64* %1351, align 8
  %1354 = load i64, i64* %10, align 8
  %1355 = load i64*, i64** %3, align 8
  %1356 = getelementptr inbounds i64, i64* %1355, i64 5
  %1357 = load i64, i64* %1356, align 8
  %1358 = add nsw i64 %1357, %1354
  store i64 %1358, i64* %1356, align 8
  %1359 = load i64, i64* %11, align 8
  %1360 = load i64*, i64** %3, align 8
  %1361 = getelementptr inbounds i64, i64* %1360, i64 6
  %1362 = load i64, i64* %1361, align 8
  %1363 = add nsw i64 %1362, %1359
  store i64 %1363, i64* %1361, align 8
  %1364 = load i64, i64* %12, align 8
  %1365 = load i64*, i64** %3, align 8
  %1366 = getelementptr inbounds i64, i64* %1365, i64 7
  %1367 = load i64, i64* %1366, align 8
  %1368 = add nsw i64 %1367, %1364
  store i64 %1368, i64* %1366, align 8
  ret void
}

declare dso_local i32 @ROUND(i64, i64, i64, i64, i32, i32, i32, i32) #1

declare dso_local i32 @swap(i64, i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
