; ModuleID = '/home/carl/AnghaBench/linux/fs/cifs/extr_smb2ops.c_smb2_print_stats.c'
source_filename = "/home/carl/AnghaBench/linux/fs/cifs/extr_smb2ops.c_smb2_print_stats.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.seq_file = type { i32 }
%struct.cifs_tcon = type { i32, i32, i64, i64, %struct.TYPE_4__ }
%struct.TYPE_4__ = type { %struct.TYPE_3__ }
%struct.TYPE_3__ = type { i32*, i32* }

@.str = private unnamed_addr constant [39 x i8] c"\0ABytes read: %llu  Bytes written: %llu\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"\0AOpen files: %d total (local), %d open on server\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"\0ATreeConnects: %d total %d failed\00", align 1
@SMB2_TREE_CONNECT_HE = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [37 x i8] c"\0ATreeDisconnects: %d total %d failed\00", align 1
@SMB2_TREE_DISCONNECT_HE = common dso_local global i64 0, align 8
@.str.4 = private unnamed_addr constant [29 x i8] c"\0ACreates: %d total %d failed\00", align 1
@SMB2_CREATE_HE = common dso_local global i64 0, align 8
@.str.5 = private unnamed_addr constant [28 x i8] c"\0ACloses: %d total %d failed\00", align 1
@SMB2_CLOSE_HE = common dso_local global i64 0, align 8
@.str.6 = private unnamed_addr constant [29 x i8] c"\0AFlushes: %d total %d failed\00", align 1
@SMB2_FLUSH_HE = common dso_local global i64 0, align 8
@.str.7 = private unnamed_addr constant [27 x i8] c"\0AReads: %d total %d failed\00", align 1
@SMB2_READ_HE = common dso_local global i64 0, align 8
@.str.8 = private unnamed_addr constant [28 x i8] c"\0AWrites: %d total %d failed\00", align 1
@SMB2_WRITE_HE = common dso_local global i64 0, align 8
@.str.9 = private unnamed_addr constant [27 x i8] c"\0ALocks: %d total %d failed\00", align 1
@SMB2_LOCK_HE = common dso_local global i64 0, align 8
@.str.10 = private unnamed_addr constant [28 x i8] c"\0AIOCTLs: %d total %d failed\00", align 1
@SMB2_IOCTL_HE = common dso_local global i64 0, align 8
@.str.11 = private unnamed_addr constant [38 x i8] c"\0AQueryDirectories: %d total %d failed\00", align 1
@SMB2_QUERY_DIRECTORY_HE = common dso_local global i64 0, align 8
@.str.12 = private unnamed_addr constant [36 x i8] c"\0AChangeNotifies: %d total %d failed\00", align 1
@SMB2_CHANGE_NOTIFY_HE = common dso_local global i64 0, align 8
@.str.13 = private unnamed_addr constant [32 x i8] c"\0AQueryInfos: %d total %d failed\00", align 1
@SMB2_QUERY_INFO_HE = common dso_local global i64 0, align 8
@.str.14 = private unnamed_addr constant [30 x i8] c"\0ASetInfos: %d total %d failed\00", align 1
@SMB2_SET_INFO_HE = common dso_local global i64 0, align 8
@.str.15 = private unnamed_addr constant [33 x i8] c"\0AOplockBreaks: %d sent %d failed\00", align 1
@SMB2_OPLOCK_BREAK_HE = common dso_local global i64 0, align 8
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.seq_file*, %struct.cifs_tcon*)* @smb2_print_stats to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @smb2_print_stats(%struct.seq_file* %0, %struct.cifs_tcon* %1) #0 {
  %3 = alloca %struct.seq_file*, align 8
  %4 = alloca %struct.cifs_tcon*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %struct.seq_file* %0, %struct.seq_file** %3, align 8
  store %struct.cifs_tcon* %1, %struct.cifs_tcon** %4, align 8
  %7 = load %struct.cifs_tcon*, %struct.cifs_tcon** %4, align 8
  %8 = getelementptr inbounds %struct.cifs_tcon, %struct.cifs_tcon* %7, i32 0, i32 4
  %9 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %8, i32 0, i32 0
  %10 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %9, i32 0, i32 1
  %11 = load i32*, i32** %10, align 8
  store i32* %11, i32** %5, align 8
  %12 = load %struct.cifs_tcon*, %struct.cifs_tcon** %4, align 8
  %13 = getelementptr inbounds %struct.cifs_tcon, %struct.cifs_tcon* %12, i32 0, i32 4
  %14 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %13, i32 0, i32 0
  %15 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %14, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  store i32* %16, i32** %6, align 8
  %17 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %18 = load %struct.cifs_tcon*, %struct.cifs_tcon** %4, align 8
  %19 = getelementptr inbounds %struct.cifs_tcon, %struct.cifs_tcon* %18, i32 0, i32 3
  %20 = load i64, i64* %19, align 8
  %21 = load %struct.cifs_tcon*, %struct.cifs_tcon** %4, align 8
  %22 = getelementptr inbounds %struct.cifs_tcon, %struct.cifs_tcon* %21, i32 0, i32 2
  %23 = load i64, i64* %22, align 8
  %24 = call i32 @seq_printf(%struct.seq_file* %17, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i64 %20, i64 %23)
  %25 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %26 = load %struct.cifs_tcon*, %struct.cifs_tcon** %4, align 8
  %27 = getelementptr inbounds %struct.cifs_tcon, %struct.cifs_tcon* %26, i32 0, i32 1
  %28 = call i64 @atomic_read(i32* %27)
  %29 = load %struct.cifs_tcon*, %struct.cifs_tcon** %4, align 8
  %30 = getelementptr inbounds %struct.cifs_tcon, %struct.cifs_tcon* %29, i32 0, i32 0
  %31 = call i64 @atomic_read(i32* %30)
  %32 = call i32 @seq_printf(%struct.seq_file* %25, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i64 %28, i64 %31)
  %33 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %34 = load i32*, i32** %5, align 8
  %35 = load i64, i64* @SMB2_TREE_CONNECT_HE, align 8
  %36 = getelementptr inbounds i32, i32* %34, i64 %35
  %37 = call i64 @atomic_read(i32* %36)
  %38 = load i32*, i32** %6, align 8
  %39 = load i64, i64* @SMB2_TREE_CONNECT_HE, align 8
  %40 = getelementptr inbounds i32, i32* %38, i64 %39
  %41 = call i64 @atomic_read(i32* %40)
  %42 = call i32 @seq_printf(%struct.seq_file* %33, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i64 %37, i64 %41)
  %43 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %44 = load i32*, i32** %5, align 8
  %45 = load i64, i64* @SMB2_TREE_DISCONNECT_HE, align 8
  %46 = getelementptr inbounds i32, i32* %44, i64 %45
  %47 = call i64 @atomic_read(i32* %46)
  %48 = load i32*, i32** %6, align 8
  %49 = load i64, i64* @SMB2_TREE_DISCONNECT_HE, align 8
  %50 = getelementptr inbounds i32, i32* %48, i64 %49
  %51 = call i64 @atomic_read(i32* %50)
  %52 = call i32 @seq_printf(%struct.seq_file* %43, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i64 %47, i64 %51)
  %53 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %54 = load i32*, i32** %5, align 8
  %55 = load i64, i64* @SMB2_CREATE_HE, align 8
  %56 = getelementptr inbounds i32, i32* %54, i64 %55
  %57 = call i64 @atomic_read(i32* %56)
  %58 = load i32*, i32** %6, align 8
  %59 = load i64, i64* @SMB2_CREATE_HE, align 8
  %60 = getelementptr inbounds i32, i32* %58, i64 %59
  %61 = call i64 @atomic_read(i32* %60)
  %62 = call i32 @seq_printf(%struct.seq_file* %53, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.4, i64 0, i64 0), i64 %57, i64 %61)
  %63 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %64 = load i32*, i32** %5, align 8
  %65 = load i64, i64* @SMB2_CLOSE_HE, align 8
  %66 = getelementptr inbounds i32, i32* %64, i64 %65
  %67 = call i64 @atomic_read(i32* %66)
  %68 = load i32*, i32** %6, align 8
  %69 = load i64, i64* @SMB2_CLOSE_HE, align 8
  %70 = getelementptr inbounds i32, i32* %68, i64 %69
  %71 = call i64 @atomic_read(i32* %70)
  %72 = call i32 @seq_printf(%struct.seq_file* %63, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i64 0, i64 0), i64 %67, i64 %71)
  %73 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %74 = load i32*, i32** %5, align 8
  %75 = load i64, i64* @SMB2_FLUSH_HE, align 8
  %76 = getelementptr inbounds i32, i32* %74, i64 %75
  %77 = call i64 @atomic_read(i32* %76)
  %78 = load i32*, i32** %6, align 8
  %79 = load i64, i64* @SMB2_FLUSH_HE, align 8
  %80 = getelementptr inbounds i32, i32* %78, i64 %79
  %81 = call i64 @atomic_read(i32* %80)
  %82 = call i32 @seq_printf(%struct.seq_file* %73, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i64 %77, i64 %81)
  %83 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %84 = load i32*, i32** %5, align 8
  %85 = load i64, i64* @SMB2_READ_HE, align 8
  %86 = getelementptr inbounds i32, i32* %84, i64 %85
  %87 = call i64 @atomic_read(i32* %86)
  %88 = load i32*, i32** %6, align 8
  %89 = load i64, i64* @SMB2_READ_HE, align 8
  %90 = getelementptr inbounds i32, i32* %88, i64 %89
  %91 = call i64 @atomic_read(i32* %90)
  %92 = call i32 @seq_printf(%struct.seq_file* %83, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i64 %87, i64 %91)
  %93 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %94 = load i32*, i32** %5, align 8
  %95 = load i64, i64* @SMB2_WRITE_HE, align 8
  %96 = getelementptr inbounds i32, i32* %94, i64 %95
  %97 = call i64 @atomic_read(i32* %96)
  %98 = load i32*, i32** %6, align 8
  %99 = load i64, i64* @SMB2_WRITE_HE, align 8
  %100 = getelementptr inbounds i32, i32* %98, i64 %99
  %101 = call i64 @atomic_read(i32* %100)
  %102 = call i32 @seq_printf(%struct.seq_file* %93, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i64 %97, i64 %101)
  %103 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %104 = load i32*, i32** %5, align 8
  %105 = load i64, i64* @SMB2_LOCK_HE, align 8
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = call i64 @atomic_read(i32* %106)
  %108 = load i32*, i32** %6, align 8
  %109 = load i64, i64* @SMB2_LOCK_HE, align 8
  %110 = getelementptr inbounds i32, i32* %108, i64 %109
  %111 = call i64 @atomic_read(i32* %110)
  %112 = call i32 @seq_printf(%struct.seq_file* %103, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i64 %107, i64 %111)
  %113 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %114 = load i32*, i32** %5, align 8
  %115 = load i64, i64* @SMB2_IOCTL_HE, align 8
  %116 = getelementptr inbounds i32, i32* %114, i64 %115
  %117 = call i64 @atomic_read(i32* %116)
  %118 = load i32*, i32** %6, align 8
  %119 = load i64, i64* @SMB2_IOCTL_HE, align 8
  %120 = getelementptr inbounds i32, i32* %118, i64 %119
  %121 = call i64 @atomic_read(i32* %120)
  %122 = call i32 @seq_printf(%struct.seq_file* %113, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.10, i64 0, i64 0), i64 %117, i64 %121)
  %123 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %124 = load i32*, i32** %5, align 8
  %125 = load i64, i64* @SMB2_QUERY_DIRECTORY_HE, align 8
  %126 = getelementptr inbounds i32, i32* %124, i64 %125
  %127 = call i64 @atomic_read(i32* %126)
  %128 = load i32*, i32** %6, align 8
  %129 = load i64, i64* @SMB2_QUERY_DIRECTORY_HE, align 8
  %130 = getelementptr inbounds i32, i32* %128, i64 %129
  %131 = call i64 @atomic_read(i32* %130)
  %132 = call i32 @seq_printf(%struct.seq_file* %123, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.11, i64 0, i64 0), i64 %127, i64 %131)
  %133 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %134 = load i32*, i32** %5, align 8
  %135 = load i64, i64* @SMB2_CHANGE_NOTIFY_HE, align 8
  %136 = getelementptr inbounds i32, i32* %134, i64 %135
  %137 = call i64 @atomic_read(i32* %136)
  %138 = load i32*, i32** %6, align 8
  %139 = load i64, i64* @SMB2_CHANGE_NOTIFY_HE, align 8
  %140 = getelementptr inbounds i32, i32* %138, i64 %139
  %141 = call i64 @atomic_read(i32* %140)
  %142 = call i32 @seq_printf(%struct.seq_file* %133, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.12, i64 0, i64 0), i64 %137, i64 %141)
  %143 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %144 = load i32*, i32** %5, align 8
  %145 = load i64, i64* @SMB2_QUERY_INFO_HE, align 8
  %146 = getelementptr inbounds i32, i32* %144, i64 %145
  %147 = call i64 @atomic_read(i32* %146)
  %148 = load i32*, i32** %6, align 8
  %149 = load i64, i64* @SMB2_QUERY_INFO_HE, align 8
  %150 = getelementptr inbounds i32, i32* %148, i64 %149
  %151 = call i64 @atomic_read(i32* %150)
  %152 = call i32 @seq_printf(%struct.seq_file* %143, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i64 0, i64 0), i64 %147, i64 %151)
  %153 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %154 = load i32*, i32** %5, align 8
  %155 = load i64, i64* @SMB2_SET_INFO_HE, align 8
  %156 = getelementptr inbounds i32, i32* %154, i64 %155
  %157 = call i64 @atomic_read(i32* %156)
  %158 = load i32*, i32** %6, align 8
  %159 = load i64, i64* @SMB2_SET_INFO_HE, align 8
  %160 = getelementptr inbounds i32, i32* %158, i64 %159
  %161 = call i64 @atomic_read(i32* %160)
  %162 = call i32 @seq_printf(%struct.seq_file* %153, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14, i64 0, i64 0), i64 %157, i64 %161)
  %163 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %164 = load i32*, i32** %5, align 8
  %165 = load i64, i64* @SMB2_OPLOCK_BREAK_HE, align 8
  %166 = getelementptr inbounds i32, i32* %164, i64 %165
  %167 = call i64 @atomic_read(i32* %166)
  %168 = load i32*, i32** %6, align 8
  %169 = load i64, i64* @SMB2_OPLOCK_BREAK_HE, align 8
  %170 = getelementptr inbounds i32, i32* %168, i64 %169
  %171 = call i64 @atomic_read(i32* %170)
  %172 = call i32 @seq_printf(%struct.seq_file* %163, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0), i64 %167, i64 %171)
  ret void
}

declare dso_local i32 @seq_printf(%struct.seq_file*, i8*, i64, i64) #1

declare dso_local i64 @atomic_read(i32*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
