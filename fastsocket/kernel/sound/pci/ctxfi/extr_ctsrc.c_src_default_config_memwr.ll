; ModuleID = '/home/carl/AnghaBench/fastsocket/kernel/sound/pci/ctxfi/extr_ctsrc.c_src_default_config_memwr.c'
source_filename = "/home/carl/AnghaBench/fastsocket/kernel/sound/pci/ctxfi/extr_ctsrc.c_src_default_config_memwr.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.src = type { %struct.TYPE_5__ }
%struct.TYPE_5__ = type { i32, %struct.TYPE_4__*, %struct.hw* }
%struct.TYPE_4__ = type { i32 (%struct.TYPE_5__*)*, i32 (%struct.TYPE_5__*)* }
%struct.hw = type { i32 (%struct.hw*, i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)*, i32 (i32, i32)* }

@SRC_STATE_OFF = common dso_local global i32 0, align 4
@SRC_SF_S16 = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (%struct.src*)* @src_default_config_memwr to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @src_default_config_memwr(%struct.src* %0) #0 {
  %2 = alloca %struct.src*, align 8
  %3 = alloca %struct.hw*, align 8
  store %struct.src* %0, %struct.src** %2, align 8
  %4 = load %struct.src*, %struct.src** %2, align 8
  %5 = getelementptr inbounds %struct.src, %struct.src* %4, i32 0, i32 0
  %6 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %5, i32 0, i32 2
  %7 = load %struct.hw*, %struct.hw** %6, align 8
  store %struct.hw* %7, %struct.hw** %3, align 8
  %8 = load %struct.hw*, %struct.hw** %3, align 8
  %9 = getelementptr inbounds %struct.hw, %struct.hw* %8, i32 0, i32 16
  %10 = load i32 (i32, i32)*, i32 (i32, i32)** %9, align 8
  %11 = load %struct.src*, %struct.src** %2, align 8
  %12 = getelementptr inbounds %struct.src, %struct.src* %11, i32 0, i32 0
  %13 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %12, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = load i32, i32* @SRC_STATE_OFF, align 4
  %16 = call i32 %10(i32 %14, i32 %15)
  %17 = load %struct.hw*, %struct.hw** %3, align 8
  %18 = getelementptr inbounds %struct.hw, %struct.hw* %17, i32 0, i32 15
  %19 = load i32 (i32, i32)*, i32 (i32, i32)** %18, align 8
  %20 = load %struct.src*, %struct.src** %2, align 8
  %21 = getelementptr inbounds %struct.src, %struct.src* %20, i32 0, i32 0
  %22 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %21, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = call i32 %19(i32 %23, i32 1)
  %25 = load %struct.hw*, %struct.hw** %3, align 8
  %26 = getelementptr inbounds %struct.hw, %struct.hw* %25, i32 0, i32 14
  %27 = load i32 (i32, i32)*, i32 (i32, i32)** %26, align 8
  %28 = load %struct.src*, %struct.src** %2, align 8
  %29 = getelementptr inbounds %struct.src, %struct.src* %28, i32 0, i32 0
  %30 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %29, i32 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = call i32 %27(i32 %31, i32 0)
  %33 = load %struct.hw*, %struct.hw** %3, align 8
  %34 = getelementptr inbounds %struct.hw, %struct.hw* %33, i32 0, i32 13
  %35 = load i32 (i32, i32)*, i32 (i32, i32)** %34, align 8
  %36 = load %struct.src*, %struct.src** %2, align 8
  %37 = getelementptr inbounds %struct.src, %struct.src* %36, i32 0, i32 0
  %38 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %37, i32 0, i32 0
  %39 = load i32, i32* %38, align 8
  %40 = load i32, i32* @SRC_SF_S16, align 4
  %41 = call i32 %35(i32 %39, i32 %40)
  %42 = load %struct.hw*, %struct.hw** %3, align 8
  %43 = getelementptr inbounds %struct.hw, %struct.hw* %42, i32 0, i32 12
  %44 = load i32 (i32, i32)*, i32 (i32, i32)** %43, align 8
  %45 = load %struct.src*, %struct.src** %2, align 8
  %46 = getelementptr inbounds %struct.src, %struct.src* %45, i32 0, i32 0
  %47 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %46, i32 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = call i32 %44(i32 %48, i32 1)
  %50 = load %struct.hw*, %struct.hw** %3, align 8
  %51 = getelementptr inbounds %struct.hw, %struct.hw* %50, i32 0, i32 11
  %52 = load i32 (i32, i32)*, i32 (i32, i32)** %51, align 8
  %53 = load %struct.src*, %struct.src** %2, align 8
  %54 = getelementptr inbounds %struct.src, %struct.src* %53, i32 0, i32 0
  %55 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = call i32 %52(i32 %56, i32 0)
  %58 = load %struct.hw*, %struct.hw** %3, align 8
  %59 = getelementptr inbounds %struct.hw, %struct.hw* %58, i32 0, i32 10
  %60 = load i32 (i32, i32)*, i32 (i32, i32)** %59, align 8
  %61 = load %struct.src*, %struct.src** %2, align 8
  %62 = getelementptr inbounds %struct.src, %struct.src* %61, i32 0, i32 0
  %63 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %62, i32 0, i32 0
  %64 = load i32, i32* %63, align 8
  %65 = call i32 %60(i32 %64, i32 0)
  %66 = load %struct.hw*, %struct.hw** %3, align 8
  %67 = getelementptr inbounds %struct.hw, %struct.hw* %66, i32 0, i32 9
  %68 = load i32 (i32, i32)*, i32 (i32, i32)** %67, align 8
  %69 = load %struct.src*, %struct.src** %2, align 8
  %70 = getelementptr inbounds %struct.src, %struct.src* %69, i32 0, i32 0
  %71 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %70, i32 0, i32 0
  %72 = load i32, i32* %71, align 8
  %73 = call i32 %68(i32 %72, i32 0)
  %74 = load %struct.hw*, %struct.hw** %3, align 8
  %75 = getelementptr inbounds %struct.hw, %struct.hw* %74, i32 0, i32 8
  %76 = load i32 (i32, i32)*, i32 (i32, i32)** %75, align 8
  %77 = load %struct.src*, %struct.src** %2, align 8
  %78 = getelementptr inbounds %struct.src, %struct.src* %77, i32 0, i32 0
  %79 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %78, i32 0, i32 0
  %80 = load i32, i32* %79, align 8
  %81 = call i32 %76(i32 %80, i32 0)
  %82 = load %struct.hw*, %struct.hw** %3, align 8
  %83 = getelementptr inbounds %struct.hw, %struct.hw* %82, i32 0, i32 7
  %84 = load i32 (i32, i32)*, i32 (i32, i32)** %83, align 8
  %85 = load %struct.src*, %struct.src** %2, align 8
  %86 = getelementptr inbounds %struct.src, %struct.src* %85, i32 0, i32 0
  %87 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %86, i32 0, i32 0
  %88 = load i32, i32* %87, align 8
  %89 = call i32 %84(i32 %88, i32 0)
  %90 = load %struct.hw*, %struct.hw** %3, align 8
  %91 = getelementptr inbounds %struct.hw, %struct.hw* %90, i32 0, i32 6
  %92 = load i32 (i32, i32)*, i32 (i32, i32)** %91, align 8
  %93 = load %struct.src*, %struct.src** %2, align 8
  %94 = getelementptr inbounds %struct.src, %struct.src* %93, i32 0, i32 0
  %95 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %94, i32 0, i32 0
  %96 = load i32, i32* %95, align 8
  %97 = call i32 %92(i32 %96, i32 128)
  %98 = load %struct.hw*, %struct.hw** %3, align 8
  %99 = getelementptr inbounds %struct.hw, %struct.hw* %98, i32 0, i32 5
  %100 = load i32 (i32, i32)*, i32 (i32, i32)** %99, align 8
  %101 = load %struct.src*, %struct.src** %2, align 8
  %102 = getelementptr inbounds %struct.src, %struct.src* %101, i32 0, i32 0
  %103 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %102, i32 0, i32 0
  %104 = load i32, i32* %103, align 8
  %105 = call i32 %100(i32 %104, i32 0)
  %106 = load %struct.hw*, %struct.hw** %3, align 8
  %107 = getelementptr inbounds %struct.hw, %struct.hw* %106, i32 0, i32 4
  %108 = load i32 (i32, i32)*, i32 (i32, i32)** %107, align 8
  %109 = load %struct.src*, %struct.src** %2, align 8
  %110 = getelementptr inbounds %struct.src, %struct.src* %109, i32 0, i32 0
  %111 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %110, i32 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = call i32 %108(i32 %112, i32 4096)
  %114 = load %struct.hw*, %struct.hw** %3, align 8
  %115 = getelementptr inbounds %struct.hw, %struct.hw* %114, i32 0, i32 3
  %116 = load i32 (i32, i32)*, i32 (i32, i32)** %115, align 8
  %117 = load %struct.src*, %struct.src** %2, align 8
  %118 = getelementptr inbounds %struct.src, %struct.src* %117, i32 0, i32 0
  %119 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %118, i32 0, i32 0
  %120 = load i32, i32* %119, align 8
  %121 = call i32 %116(i32 %120, i32 128)
  %122 = load %struct.hw*, %struct.hw** %3, align 8
  %123 = getelementptr inbounds %struct.hw, %struct.hw* %122, i32 0, i32 2
  %124 = load i32 (i32, i32)*, i32 (i32, i32)** %123, align 8
  %125 = load %struct.src*, %struct.src** %2, align 8
  %126 = getelementptr inbounds %struct.src, %struct.src* %125, i32 0, i32 0
  %127 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %126, i32 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = call i32 %124(i32 %128, i32 16777216)
  %130 = load %struct.hw*, %struct.hw** %3, align 8
  %131 = getelementptr inbounds %struct.hw, %struct.hw* %130, i32 0, i32 1
  %132 = load i32 (i32, i32)*, i32 (i32, i32)** %131, align 8
  %133 = load %struct.src*, %struct.src** %2, align 8
  %134 = getelementptr inbounds %struct.src, %struct.src* %133, i32 0, i32 0
  %135 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %134, i32 0, i32 0
  %136 = load i32, i32* %135, align 8
  %137 = call i32 %132(i32 %136, i32 1)
  %138 = load %struct.src*, %struct.src** %2, align 8
  %139 = getelementptr inbounds %struct.src, %struct.src* %138, i32 0, i32 0
  %140 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %139, i32 0, i32 1
  %141 = load %struct.TYPE_4__*, %struct.TYPE_4__** %140, align 8
  %142 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %141, i32 0, i32 1
  %143 = load i32 (%struct.TYPE_5__*)*, i32 (%struct.TYPE_5__*)** %142, align 8
  %144 = load %struct.src*, %struct.src** %2, align 8
  %145 = getelementptr inbounds %struct.src, %struct.src* %144, i32 0, i32 0
  %146 = call i32 %143(%struct.TYPE_5__* %145)
  %147 = load %struct.hw*, %struct.hw** %3, align 8
  %148 = getelementptr inbounds %struct.hw, %struct.hw* %147, i32 0, i32 0
  %149 = load i32 (%struct.hw*, i32, i32)*, i32 (%struct.hw*, i32, i32)** %148, align 8
  %150 = load %struct.hw*, %struct.hw** %3, align 8
  %151 = load %struct.src*, %struct.src** %2, align 8
  %152 = getelementptr inbounds %struct.src, %struct.src* %151, i32 0, i32 0
  %153 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %152, i32 0, i32 1
  %154 = load %struct.TYPE_4__*, %struct.TYPE_4__** %153, align 8
  %155 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %154, i32 0, i32 0
  %156 = load i32 (%struct.TYPE_5__*)*, i32 (%struct.TYPE_5__*)** %155, align 8
  %157 = load %struct.src*, %struct.src** %2, align 8
  %158 = getelementptr inbounds %struct.src, %struct.src* %157, i32 0, i32 0
  %159 = call i32 %156(%struct.TYPE_5__* %158)
  %160 = load %struct.src*, %struct.src** %2, align 8
  %161 = getelementptr inbounds %struct.src, %struct.src* %160, i32 0, i32 0
  %162 = getelementptr inbounds %struct.TYPE_5__, %struct.TYPE_5__* %161, i32 0, i32 0
  %163 = load i32, i32* %162, align 8
  %164 = call i32 %149(%struct.hw* %150, i32 %159, i32 %163)
  ret i32 0
}

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
