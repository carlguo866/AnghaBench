; ModuleID = '/home/carl/AnghaBench/fastsocket/kernel/sound/sparc/extr_amd7930.c___amd7930_write_map.c'
source_filename = "/home/carl/AnghaBench/fastsocket/kernel/sound/sparc/extr_amd7930.c___amd7930_write_map.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.snd_amd7930 = type { i64, %struct.amd7930_map }
%struct.amd7930_map = type { i32, i32, i32, i32, i32, i32 }

@AMR_MAP_GX = common dso_local global i32 0, align 4
@AMD7930_CR = common dso_local global i64 0, align 8
@AMD7930_DR = common dso_local global i64 0, align 8
@AMR_MAP_GR = common dso_local global i32 0, align 4
@AMR_MAP_STGR = common dso_local global i32 0, align 4
@AMR_MAP_GER = common dso_local global i32 0, align 4
@AMR_MAP_MMR1 = common dso_local global i32 0, align 4
@AMR_MAP_MMR2 = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.snd_amd7930*)* @__amd7930_write_map to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @__amd7930_write_map(%struct.snd_amd7930* %0) #0 {
  %2 = alloca %struct.snd_amd7930*, align 8
  %3 = alloca %struct.amd7930_map*, align 8
  store %struct.snd_amd7930* %0, %struct.snd_amd7930** %2, align 8
  %4 = load %struct.snd_amd7930*, %struct.snd_amd7930** %2, align 8
  %5 = getelementptr inbounds %struct.snd_amd7930, %struct.snd_amd7930* %4, i32 0, i32 1
  store %struct.amd7930_map* %5, %struct.amd7930_map** %3, align 8
  %6 = load i32, i32* @AMR_MAP_GX, align 4
  %7 = load %struct.snd_amd7930*, %struct.snd_amd7930** %2, align 8
  %8 = getelementptr inbounds %struct.snd_amd7930, %struct.snd_amd7930* %7, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = load i64, i64* @AMD7930_CR, align 8
  %11 = add nsw i64 %9, %10
  %12 = call i32 @sbus_writeb(i32 %6, i64 %11)
  %13 = load %struct.amd7930_map*, %struct.amd7930_map** %3, align 8
  %14 = getelementptr inbounds %struct.amd7930_map, %struct.amd7930_map* %13, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = ashr i32 %15, 0
  %17 = and i32 %16, 255
  %18 = load %struct.snd_amd7930*, %struct.snd_amd7930** %2, align 8
  %19 = getelementptr inbounds %struct.snd_amd7930, %struct.snd_amd7930* %18, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = load i64, i64* @AMD7930_DR, align 8
  %22 = add nsw i64 %20, %21
  %23 = call i32 @sbus_writeb(i32 %17, i64 %22)
  %24 = load %struct.amd7930_map*, %struct.amd7930_map** %3, align 8
  %25 = getelementptr inbounds %struct.amd7930_map, %struct.amd7930_map* %24, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = ashr i32 %26, 8
  %28 = and i32 %27, 255
  %29 = load %struct.snd_amd7930*, %struct.snd_amd7930** %2, align 8
  %30 = getelementptr inbounds %struct.snd_amd7930, %struct.snd_amd7930* %29, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = load i64, i64* @AMD7930_DR, align 8
  %33 = add nsw i64 %31, %32
  %34 = call i32 @sbus_writeb(i32 %28, i64 %33)
  %35 = load i32, i32* @AMR_MAP_GR, align 4
  %36 = load %struct.snd_amd7930*, %struct.snd_amd7930** %2, align 8
  %37 = getelementptr inbounds %struct.snd_amd7930, %struct.snd_amd7930* %36, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = load i64, i64* @AMD7930_CR, align 8
  %40 = add nsw i64 %38, %39
  %41 = call i32 @sbus_writeb(i32 %35, i64 %40)
  %42 = load %struct.amd7930_map*, %struct.amd7930_map** %3, align 8
  %43 = getelementptr inbounds %struct.amd7930_map, %struct.amd7930_map* %42, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = ashr i32 %44, 0
  %46 = and i32 %45, 255
  %47 = load %struct.snd_amd7930*, %struct.snd_amd7930** %2, align 8
  %48 = getelementptr inbounds %struct.snd_amd7930, %struct.snd_amd7930* %47, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = load i64, i64* @AMD7930_DR, align 8
  %51 = add nsw i64 %49, %50
  %52 = call i32 @sbus_writeb(i32 %46, i64 %51)
  %53 = load %struct.amd7930_map*, %struct.amd7930_map** %3, align 8
  %54 = getelementptr inbounds %struct.amd7930_map, %struct.amd7930_map* %53, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = ashr i32 %55, 8
  %57 = and i32 %56, 255
  %58 = load %struct.snd_amd7930*, %struct.snd_amd7930** %2, align 8
  %59 = getelementptr inbounds %struct.snd_amd7930, %struct.snd_amd7930* %58, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = load i64, i64* @AMD7930_DR, align 8
  %62 = add nsw i64 %60, %61
  %63 = call i32 @sbus_writeb(i32 %57, i64 %62)
  %64 = load i32, i32* @AMR_MAP_STGR, align 4
  %65 = load %struct.snd_amd7930*, %struct.snd_amd7930** %2, align 8
  %66 = getelementptr inbounds %struct.snd_amd7930, %struct.snd_amd7930* %65, i32 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = load i64, i64* @AMD7930_CR, align 8
  %69 = add nsw i64 %67, %68
  %70 = call i32 @sbus_writeb(i32 %64, i64 %69)
  %71 = load %struct.amd7930_map*, %struct.amd7930_map** %3, align 8
  %72 = getelementptr inbounds %struct.amd7930_map, %struct.amd7930_map* %71, i32 0, i32 2
  %73 = load i32, i32* %72, align 4
  %74 = ashr i32 %73, 0
  %75 = and i32 %74, 255
  %76 = load %struct.snd_amd7930*, %struct.snd_amd7930** %2, align 8
  %77 = getelementptr inbounds %struct.snd_amd7930, %struct.snd_amd7930* %76, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = load i64, i64* @AMD7930_DR, align 8
  %80 = add nsw i64 %78, %79
  %81 = call i32 @sbus_writeb(i32 %75, i64 %80)
  %82 = load %struct.amd7930_map*, %struct.amd7930_map** %3, align 8
  %83 = getelementptr inbounds %struct.amd7930_map, %struct.amd7930_map* %82, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = ashr i32 %84, 8
  %86 = and i32 %85, 255
  %87 = load %struct.snd_amd7930*, %struct.snd_amd7930** %2, align 8
  %88 = getelementptr inbounds %struct.snd_amd7930, %struct.snd_amd7930* %87, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = load i64, i64* @AMD7930_DR, align 8
  %91 = add nsw i64 %89, %90
  %92 = call i32 @sbus_writeb(i32 %86, i64 %91)
  %93 = load i32, i32* @AMR_MAP_GER, align 4
  %94 = load %struct.snd_amd7930*, %struct.snd_amd7930** %2, align 8
  %95 = getelementptr inbounds %struct.snd_amd7930, %struct.snd_amd7930* %94, i32 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = load i64, i64* @AMD7930_CR, align 8
  %98 = add nsw i64 %96, %97
  %99 = call i32 @sbus_writeb(i32 %93, i64 %98)
  %100 = load %struct.amd7930_map*, %struct.amd7930_map** %3, align 8
  %101 = getelementptr inbounds %struct.amd7930_map, %struct.amd7930_map* %100, i32 0, i32 3
  %102 = load i32, i32* %101, align 4
  %103 = ashr i32 %102, 0
  %104 = and i32 %103, 255
  %105 = load %struct.snd_amd7930*, %struct.snd_amd7930** %2, align 8
  %106 = getelementptr inbounds %struct.snd_amd7930, %struct.snd_amd7930* %105, i32 0, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = load i64, i64* @AMD7930_DR, align 8
  %109 = add nsw i64 %107, %108
  %110 = call i32 @sbus_writeb(i32 %104, i64 %109)
  %111 = load %struct.amd7930_map*, %struct.amd7930_map** %3, align 8
  %112 = getelementptr inbounds %struct.amd7930_map, %struct.amd7930_map* %111, i32 0, i32 3
  %113 = load i32, i32* %112, align 4
  %114 = ashr i32 %113, 8
  %115 = and i32 %114, 255
  %116 = load %struct.snd_amd7930*, %struct.snd_amd7930** %2, align 8
  %117 = getelementptr inbounds %struct.snd_amd7930, %struct.snd_amd7930* %116, i32 0, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = load i64, i64* @AMD7930_DR, align 8
  %120 = add nsw i64 %118, %119
  %121 = call i32 @sbus_writeb(i32 %115, i64 %120)
  %122 = load i32, i32* @AMR_MAP_MMR1, align 4
  %123 = load %struct.snd_amd7930*, %struct.snd_amd7930** %2, align 8
  %124 = getelementptr inbounds %struct.snd_amd7930, %struct.snd_amd7930* %123, i32 0, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = load i64, i64* @AMD7930_CR, align 8
  %127 = add nsw i64 %125, %126
  %128 = call i32 @sbus_writeb(i32 %122, i64 %127)
  %129 = load %struct.amd7930_map*, %struct.amd7930_map** %3, align 8
  %130 = getelementptr inbounds %struct.amd7930_map, %struct.amd7930_map* %129, i32 0, i32 4
  %131 = load i32, i32* %130, align 4
  %132 = load %struct.snd_amd7930*, %struct.snd_amd7930** %2, align 8
  %133 = getelementptr inbounds %struct.snd_amd7930, %struct.snd_amd7930* %132, i32 0, i32 0
  %134 = load i64, i64* %133, align 8
  %135 = load i64, i64* @AMD7930_DR, align 8
  %136 = add nsw i64 %134, %135
  %137 = call i32 @sbus_writeb(i32 %131, i64 %136)
  %138 = load i32, i32* @AMR_MAP_MMR2, align 4
  %139 = load %struct.snd_amd7930*, %struct.snd_amd7930** %2, align 8
  %140 = getelementptr inbounds %struct.snd_amd7930, %struct.snd_amd7930* %139, i32 0, i32 0
  %141 = load i64, i64* %140, align 8
  %142 = load i64, i64* @AMD7930_CR, align 8
  %143 = add nsw i64 %141, %142
  %144 = call i32 @sbus_writeb(i32 %138, i64 %143)
  %145 = load %struct.amd7930_map*, %struct.amd7930_map** %3, align 8
  %146 = getelementptr inbounds %struct.amd7930_map, %struct.amd7930_map* %145, i32 0, i32 5
  %147 = load i32, i32* %146, align 4
  %148 = load %struct.snd_amd7930*, %struct.snd_amd7930** %2, align 8
  %149 = getelementptr inbounds %struct.snd_amd7930, %struct.snd_amd7930* %148, i32 0, i32 0
  %150 = load i64, i64* %149, align 8
  %151 = load i64, i64* @AMD7930_DR, align 8
  %152 = add nsw i64 %150, %151
  %153 = call i32 @sbus_writeb(i32 %147, i64 %152)
  ret void
}

declare dso_local i32 @sbus_writeb(i32, i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
