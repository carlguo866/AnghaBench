; ModuleID = '/home/carl/AnghaBench/fastsocket/kernel/tools/perf/util/extr_session.c_perf_session__warn_about_errors.c'
source_filename = "/home/carl/AnghaBench/fastsocket/kernel/tools/perf/util/extr_session.c_perf_session__warn_about_errors.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.perf_session = type { %struct.TYPE_4__ }
%struct.TYPE_4__ = type { %struct.TYPE_3__ }
%struct.TYPE_3__ = type { i64, i64, i64, i64, i32* }
%struct.perf_tool = type { i64 }

@perf_event__process_lost = common dso_local global i64 0, align 8
@PERF_RECORD_LOST = common dso_local global i64 0, align 8
@.str = private unnamed_addr constant [66 x i8] c"Processed %d events and lost %d chunks!\0A\0ACheck IO/CPU overload!\0A\0A\00", align 1
@.str.1 = private unnamed_addr constant [189 x i8] c"Found %u unknown events!\0A\0AIs this an older tool processing a perf.data file generated by a more recent tool?\0A\0AIf that is not the case, consider reporting to linux-kernel@vger.kernel.org.\0A\0A\00", align 1
@.str.2 = private unnamed_addr constant [46 x i8] c"%u samples with id not present in the header\0A\00", align 1
@.str.3 = private unnamed_addr constant [134 x i8] c"Found invalid callchains!\0A\0A%u out of %u events were discarded for this reason.\0A\0AConsider reporting to linux-kernel@vger.kernel.org.\0A\0A\00", align 1
@PERF_RECORD_SAMPLE = common dso_local global i64 0, align 8
@.str.4 = private unnamed_addr constant [94 x i8] c"%u unprocessable samples recorded.\0ADo you have a KVM guest running and not using 'perf kvm'?\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.perf_session*, %struct.perf_tool*)* @perf_session__warn_about_errors to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @perf_session__warn_about_errors(%struct.perf_session* %0, %struct.perf_tool* %1) #0 {
  %3 = alloca %struct.perf_session*, align 8
  %4 = alloca %struct.perf_tool*, align 8
  store %struct.perf_session* %0, %struct.perf_session** %3, align 8
  store %struct.perf_tool* %1, %struct.perf_tool** %4, align 8
  %5 = load %struct.perf_tool*, %struct.perf_tool** %4, align 8
  %6 = getelementptr inbounds %struct.perf_tool, %struct.perf_tool* %5, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = load i64, i64* @perf_event__process_lost, align 8
  %9 = icmp eq i64 %7, %8
  br i1 %9, label %10, label %38

10:                                               ; preds = %2
  %11 = load %struct.perf_session*, %struct.perf_session** %3, align 8
  %12 = getelementptr inbounds %struct.perf_session, %struct.perf_session* %11, i32 0, i32 0
  %13 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %12, i32 0, i32 0
  %14 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %13, i32 0, i32 4
  %15 = load i32*, i32** %14, align 8
  %16 = load i64, i64* @PERF_RECORD_LOST, align 8
  %17 = getelementptr inbounds i32, i32* %15, i64 %16
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %38

20:                                               ; preds = %10
  %21 = load %struct.perf_session*, %struct.perf_session** %3, align 8
  %22 = getelementptr inbounds %struct.perf_session, %struct.perf_session* %21, i32 0, i32 0
  %23 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %22, i32 0, i32 0
  %24 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %23, i32 0, i32 4
  %25 = load i32*, i32** %24, align 8
  %26 = getelementptr inbounds i32, i32* %25, i64 0
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = load %struct.perf_session*, %struct.perf_session** %3, align 8
  %30 = getelementptr inbounds %struct.perf_session, %struct.perf_session* %29, i32 0, i32 0
  %31 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %30, i32 0, i32 0
  %32 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %31, i32 0, i32 4
  %33 = load i32*, i32** %32, align 8
  %34 = load i64, i64* @PERF_RECORD_LOST, align 8
  %35 = getelementptr inbounds i32, i32* %33, i64 %34
  %36 = load i32, i32* %35, align 4
  %37 = call i32 (i8*, i64, ...) @ui__warning(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str, i64 0, i64 0), i64 %28, i32 %36)
  br label %38

38:                                               ; preds = %20, %10, %2
  %39 = load %struct.perf_session*, %struct.perf_session** %3, align 8
  %40 = getelementptr inbounds %struct.perf_session, %struct.perf_session* %39, i32 0, i32 0
  %41 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %40, i32 0, i32 0
  %42 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %41, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp ne i64 %43, 0
  br i1 %44, label %45, label %52

45:                                               ; preds = %38
  %46 = load %struct.perf_session*, %struct.perf_session** %3, align 8
  %47 = getelementptr inbounds %struct.perf_session, %struct.perf_session* %46, i32 0, i32 0
  %48 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %47, i32 0, i32 0
  %49 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %48, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = call i32 (i8*, i64, ...) @ui__warning(i8* getelementptr inbounds ([189 x i8], [189 x i8]* @.str.1, i64 0, i64 0), i64 %50)
  br label %52

52:                                               ; preds = %45, %38
  %53 = load %struct.perf_session*, %struct.perf_session** %3, align 8
  %54 = getelementptr inbounds %struct.perf_session, %struct.perf_session* %53, i32 0, i32 0
  %55 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %54, i32 0, i32 0
  %56 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %55, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %59, label %66

59:                                               ; preds = %52
  %60 = load %struct.perf_session*, %struct.perf_session** %3, align 8
  %61 = getelementptr inbounds %struct.perf_session, %struct.perf_session* %60, i32 0, i32 0
  %62 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %61, i32 0, i32 0
  %63 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %62, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = call i32 (i8*, i64, ...) @ui__warning(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.2, i64 0, i64 0), i64 %64)
  br label %66

66:                                               ; preds = %59, %52
  %67 = load %struct.perf_session*, %struct.perf_session** %3, align 8
  %68 = getelementptr inbounds %struct.perf_session, %struct.perf_session* %67, i32 0, i32 0
  %69 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %68, i32 0, i32 0
  %70 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %69, i32 0, i32 2
  %71 = load i64, i64* %70, align 8
  %72 = icmp ne i64 %71, 0
  br i1 %72, label %73, label %88

73:                                               ; preds = %66
  %74 = load %struct.perf_session*, %struct.perf_session** %3, align 8
  %75 = getelementptr inbounds %struct.perf_session, %struct.perf_session* %74, i32 0, i32 0
  %76 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %75, i32 0, i32 0
  %77 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %76, i32 0, i32 2
  %78 = load i64, i64* %77, align 8
  %79 = load %struct.perf_session*, %struct.perf_session** %3, align 8
  %80 = getelementptr inbounds %struct.perf_session, %struct.perf_session* %79, i32 0, i32 0
  %81 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %80, i32 0, i32 0
  %82 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %81, i32 0, i32 4
  %83 = load i32*, i32** %82, align 8
  %84 = load i64, i64* @PERF_RECORD_SAMPLE, align 8
  %85 = getelementptr inbounds i32, i32* %83, i64 %84
  %86 = load i32, i32* %85, align 4
  %87 = call i32 (i8*, i64, ...) @ui__warning(i8* getelementptr inbounds ([134 x i8], [134 x i8]* @.str.3, i64 0, i64 0), i64 %78, i32 %86)
  br label %88

88:                                               ; preds = %73, %66
  %89 = load %struct.perf_session*, %struct.perf_session** %3, align 8
  %90 = getelementptr inbounds %struct.perf_session, %struct.perf_session* %89, i32 0, i32 0
  %91 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %90, i32 0, i32 0
  %92 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %91, i32 0, i32 3
  %93 = load i64, i64* %92, align 8
  %94 = icmp ne i64 %93, 0
  br i1 %94, label %95, label %102

95:                                               ; preds = %88
  %96 = load %struct.perf_session*, %struct.perf_session** %3, align 8
  %97 = getelementptr inbounds %struct.perf_session, %struct.perf_session* %96, i32 0, i32 0
  %98 = getelementptr inbounds %struct.TYPE_4__, %struct.TYPE_4__* %97, i32 0, i32 0
  %99 = getelementptr inbounds %struct.TYPE_3__, %struct.TYPE_3__* %98, i32 0, i32 3
  %100 = load i64, i64* %99, align 8
  %101 = call i32 (i8*, i64, ...) @ui__warning(i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.4, i64 0, i64 0), i64 %100)
  br label %102

102:                                              ; preds = %95, %88
  ret void
}

declare dso_local i32 @ui__warning(i8*, i64, ...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
