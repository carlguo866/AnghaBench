; ModuleID = '/home/carl/AnghaBench/fastsocket/kernel/tools/perf/util/scripting-engines/extr_trace-event-python.c_python_generate_script.c'
source_filename = "/home/carl/AnghaBench/fastsocket/kernel/tools/perf/util/scripting-engines/extr_trace-event-python.c_python_generate_script.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.pevent = type { i32 }
%struct.event_format = type { i8*, i8*, %struct.TYPE_2__ }
%struct.TYPE_2__ = type { %struct.format_field* }
%struct.format_field = type { i8*, i32, %struct.format_field* }

@PATH_MAX = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [6 x i8] c"%s.py\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@stderr = common dso_local global i32* null, align 8
@.str.2 = private unnamed_addr constant [18 x i8] c"couldn't open %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [66 x i8] c"# perf script event handlers, generated by perf script -g python\0A\00", align 1
@.str.4 = private unnamed_addr constant [62 x i8] c"# Licensed under the terms of the GNU GPL License version 2\0A\0A\00", align 1
@.str.5 = private unnamed_addr constant [74 x i8] c"# The common_* event handler fields are the most useful fields common to\0A\00", align 1
@.str.6 = private unnamed_addr constant [75 x i8] c"# all events.  They don't necessarily correspond to the 'common_*' fields\0A\00", align 1
@.str.7 = private unnamed_addr constant [74 x i8] c"# in the format files.  Those fields not available as handler params can\0A\00", align 1
@.str.8 = private unnamed_addr constant [70 x i8] c"# be retrieved using Python functions of the form common_*(context).\0A\00", align 1
@.str.9 = private unnamed_addr constant [81 x i8] c"# See the perf-trace-python Documentation for the list of available functions.\0A\0A\00", align 1
@.str.10 = private unnamed_addr constant [11 x i8] c"import os\0A\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"import sys\0A\0A\00", align 1
@.str.12 = private unnamed_addr constant [50 x i8] c"sys.path.append(os.environ['PERF_EXEC_PATH'] + \\\0A\00", align 1
@.str.13 = private unnamed_addr constant [52 x i8] c"\09'/scripts/python/Perf-Trace-Util/lib/Perf/Trace')\0A\00", align 1
@.str.14 = private unnamed_addr constant [35 x i8] c"\0Afrom perf_trace_context import *\0A\00", align 1
@.str.15 = private unnamed_addr constant [22 x i8] c"from Core import *\0A\0A\0A\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"def trace_begin():\0A\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"\09print \22in trace_begin\22\0A\0A\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c"def trace_end():\0A\00", align 1
@.str.19 = private unnamed_addr constant [24 x i8] c"\09print \22in trace_end\22\0A\0A\00", align 1
@.str.20 = private unnamed_addr constant [12 x i8] c"def %s__%s(\00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"event_name, \00", align 1
@.str.22 = private unnamed_addr constant [10 x i8] c"context, \00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"common_cpu,\0A\00", align 1
@.str.24 = private unnamed_addr constant [15 x i8] c"\09common_secs, \00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"common_nsecs, \00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c"common_pid, \00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"common_comm,\0A\09\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"\0A\09\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.31 = private unnamed_addr constant [4 x i8] c"):\0A\00", align 1
@.str.32 = private unnamed_addr constant [96 x i8] c"\09\09print_header(event_name, common_cpu, common_secs, common_nsecs,\0A\09\09\09common_pid, common_comm)\0A\0A\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"\09\09print \22\00", align 1
@.str.34 = private unnamed_addr constant [8 x i8] c"\22 \\\0A\09\09\22\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"%s=\00", align 1
@FIELD_IS_STRING = common dso_local global i32 0, align 4
@FIELD_IS_FLAG = common dso_local global i32 0, align 4
@FIELD_IS_SYMBOLIC = common dso_local global i32 0, align 4
@.str.36 = private unnamed_addr constant [4 x i8] c"%%s\00", align 1
@FIELD_IS_SIGNED = common dso_local global i32 0, align 4
@.str.37 = private unnamed_addr constant [4 x i8] c"%%d\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"%%u\00", align 1
@.str.39 = private unnamed_addr constant [13 x i8] c"\\n\22 %% \\\0A\09\09(\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"\0A\09\09\00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"flag_str(\22\00", align 1
@.str.42 = private unnamed_addr constant [10 x i8] c"%s__%s\22, \00", align 1
@.str.43 = private unnamed_addr constant [10 x i8] c"\22%s\22, %s)\00", align 1
@.str.44 = private unnamed_addr constant [13 x i8] c"symbol_str(\22\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"),\0A\0A\00", align 1
@.str.46 = private unnamed_addr constant [62 x i8] c"def trace_unhandled(event_name, context, event_fields_dict):\0A\00", align 1
@.str.47 = private unnamed_addr constant [88 x i8] c"\09\09print ' '.join(['%%s=%%s'%%(k,str(v))for k,v in sorted(event_fields_dict.items())])\0A\0A\00", align 1
@.str.48 = private unnamed_addr constant [155 x i8] c"def print_header(event_name, cpu, secs, nsecs, pid, comm):\0A\09print \22%%-20s %%5u %%05u.%%09u %%8u %%-20s \22 %% \\\0A\09(event_name, cpu, secs, nsecs, pid, comm),\0A\00", align 1
@.str.49 = private unnamed_addr constant [29 x i8] c"generated Python script: %s\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (%struct.pevent*, i8*)* @python_generate_script to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @python_generate_script(%struct.pevent* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.pevent*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.event_format*, align 8
  %7 = alloca %struct.format_field*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32*, align 8
  %13 = alloca i32, align 4
  store %struct.pevent* %0, %struct.pevent** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.event_format* null, %struct.event_format** %6, align 8
  %14 = load i32, i32* @PATH_MAX, align 4
  %15 = zext i32 %14 to i64
  %16 = call i8* @llvm.stacksave()
  store i8* %16, i8** %8, align 8
  %17 = alloca i8, i64 %15, align 16
  store i64 %15, i64* %9, align 8
  %18 = load i8*, i8** %5, align 8
  %19 = call i32 @sprintf(i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* %18)
  %20 = call i32* @fopen(i8* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  store i32* %20, i32** %12, align 8
  %21 = load i32*, i32** %12, align 8
  %22 = icmp eq i32* %21, null
  br i1 %22, label %23, label %26

23:                                               ; preds = %2
  %24 = load i32*, i32** @stderr, align 8
  %25 = call i32 (i32*, i8*, ...) @fprintf(i32* %24, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* %17)
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %13, align 4
  br label %321

26:                                               ; preds = %2
  %27 = load i32*, i32** %12, align 8
  %28 = call i32 (i32*, i8*, ...) @fprintf(i32* %27, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.3, i64 0, i64 0))
  %29 = load i32*, i32** %12, align 8
  %30 = call i32 (i32*, i8*, ...) @fprintf(i32* %29, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0))
  %31 = load i32*, i32** %12, align 8
  %32 = call i32 (i32*, i8*, ...) @fprintf(i32* %31, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.5, i64 0, i64 0))
  %33 = load i32*, i32** %12, align 8
  %34 = call i32 (i32*, i8*, ...) @fprintf(i32* %33, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i64 0, i64 0))
  %35 = load i32*, i32** %12, align 8
  %36 = call i32 (i32*, i8*, ...) @fprintf(i32* %35, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0))
  %37 = load i32*, i32** %12, align 8
  %38 = call i32 (i32*, i8*, ...) @fprintf(i32* %37, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.8, i64 0, i64 0))
  %39 = load i32*, i32** %12, align 8
  %40 = call i32 (i32*, i8*, ...) @fprintf(i32* %39, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.9, i64 0, i64 0))
  %41 = load i32*, i32** %12, align 8
  %42 = call i32 (i32*, i8*, ...) @fprintf(i32* %41, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0))
  %43 = load i32*, i32** %12, align 8
  %44 = call i32 (i32*, i8*, ...) @fprintf(i32* %43, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0))
  %45 = load i32*, i32** %12, align 8
  %46 = call i32 (i32*, i8*, ...) @fprintf(i32* %45, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.12, i64 0, i64 0))
  %47 = load i32*, i32** %12, align 8
  %48 = call i32 (i32*, i8*, ...) @fprintf(i32* %47, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.13, i64 0, i64 0))
  %49 = load i32*, i32** %12, align 8
  %50 = call i32 (i32*, i8*, ...) @fprintf(i32* %49, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0))
  %51 = load i32*, i32** %12, align 8
  %52 = call i32 (i32*, i8*, ...) @fprintf(i32* %51, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.15, i64 0, i64 0))
  %53 = load i32*, i32** %12, align 8
  %54 = call i32 (i32*, i8*, ...) @fprintf(i32* %53, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.16, i64 0, i64 0))
  %55 = load i32*, i32** %12, align 8
  %56 = call i32 (i32*, i8*, ...) @fprintf(i32* %55, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0))
  %57 = load i32*, i32** %12, align 8
  %58 = call i32 (i32*, i8*, ...) @fprintf(i32* %57, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0))
  %59 = load i32*, i32** %12, align 8
  %60 = call i32 (i32*, i8*, ...) @fprintf(i32* %59, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.19, i64 0, i64 0))
  br label %61

61:                                               ; preds = %307, %26
  %62 = load %struct.pevent*, %struct.pevent** %4, align 8
  %63 = load %struct.event_format*, %struct.event_format** %6, align 8
  %64 = call %struct.event_format* @trace_find_next_event(%struct.pevent* %62, %struct.event_format* %63)
  store %struct.event_format* %64, %struct.event_format** %6, align 8
  %65 = icmp ne %struct.event_format* %64, null
  br i1 %65, label %66, label %310

66:                                               ; preds = %61
  %67 = load i32*, i32** %12, align 8
  %68 = load %struct.event_format*, %struct.event_format** %6, align 8
  %69 = getelementptr inbounds %struct.event_format, %struct.event_format* %68, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = load %struct.event_format*, %struct.event_format** %6, align 8
  %72 = getelementptr inbounds %struct.event_format, %struct.event_format* %71, i32 0, i32 1
  %73 = load i8*, i8** %72, align 8
  %74 = call i32 (i32*, i8*, ...) @fprintf(i32* %67, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.20, i64 0, i64 0), i8* %70, i8* %73)
  %75 = load i32*, i32** %12, align 8
  %76 = call i32 (i32*, i8*, ...) @fprintf(i32* %75, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0))
  %77 = load i32*, i32** %12, align 8
  %78 = call i32 (i32*, i8*, ...) @fprintf(i32* %77, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.22, i64 0, i64 0))
  %79 = load i32*, i32** %12, align 8
  %80 = call i32 (i32*, i8*, ...) @fprintf(i32* %79, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0))
  %81 = load i32*, i32** %12, align 8
  %82 = call i32 (i32*, i8*, ...) @fprintf(i32* %81, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i64 0, i64 0))
  %83 = load i32*, i32** %12, align 8
  %84 = call i32 (i32*, i8*, ...) @fprintf(i32* %83, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0))
  %85 = load i32*, i32** %12, align 8
  %86 = call i32 (i32*, i8*, ...) @fprintf(i32* %85, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0))
  %87 = load i32*, i32** %12, align 8
  %88 = call i32 (i32*, i8*, ...) @fprintf(i32* %87, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0))
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  %89 = load %struct.event_format*, %struct.event_format** %6, align 8
  %90 = getelementptr inbounds %struct.event_format, %struct.event_format* %89, i32 0, i32 2
  %91 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %90, i32 0, i32 0
  %92 = load %struct.format_field*, %struct.format_field** %91, align 8
  store %struct.format_field* %92, %struct.format_field** %7, align 8
  br label %93

93:                                               ; preds = %117, %66
  %94 = load %struct.format_field*, %struct.format_field** %7, align 8
  %95 = icmp ne %struct.format_field* %94, null
  br i1 %95, label %96, label %121

96:                                               ; preds = %93
  %97 = load i32, i32* %10, align 4
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %10, align 4
  %99 = icmp ne i32 %97, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %96
  %101 = load i32*, i32** %12, align 8
  %102 = call i32 (i32*, i8*, ...) @fprintf(i32* %101, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0))
  br label %103

103:                                              ; preds = %100, %96
  %104 = load i32, i32* %11, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %11, align 4
  %106 = srem i32 %105, 5
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %103
  %109 = load i32*, i32** %12, align 8
  %110 = call i32 (i32*, i8*, ...) @fprintf(i32* %109, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0))
  br label %111

111:                                              ; preds = %108, %103
  %112 = load i32*, i32** %12, align 8
  %113 = load %struct.format_field*, %struct.format_field** %7, align 8
  %114 = getelementptr inbounds %struct.format_field, %struct.format_field* %113, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = call i32 (i32*, i8*, ...) @fprintf(i32* %112, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0), i8* %115)
  br label %117

117:                                              ; preds = %111
  %118 = load %struct.format_field*, %struct.format_field** %7, align 8
  %119 = getelementptr inbounds %struct.format_field, %struct.format_field* %118, i32 0, i32 2
  %120 = load %struct.format_field*, %struct.format_field** %119, align 8
  store %struct.format_field* %120, %struct.format_field** %7, align 8
  br label %93

121:                                              ; preds = %93
  %122 = load i32*, i32** %12, align 8
  %123 = call i32 (i32*, i8*, ...) @fprintf(i32* %122, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0))
  %124 = load i32*, i32** %12, align 8
  %125 = call i32 (i32*, i8*, ...) @fprintf(i32* %124, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.32, i64 0, i64 0))
  %126 = load i32*, i32** %12, align 8
  %127 = call i32 (i32*, i8*, ...) @fprintf(i32* %126, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0))
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  %128 = load %struct.event_format*, %struct.event_format** %6, align 8
  %129 = getelementptr inbounds %struct.event_format, %struct.event_format* %128, i32 0, i32 2
  %130 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %129, i32 0, i32 0
  %131 = load %struct.format_field*, %struct.format_field** %130, align 8
  store %struct.format_field* %131, %struct.format_field** %7, align 8
  br label %132

132:                                              ; preds = %198, %121
  %133 = load %struct.format_field*, %struct.format_field** %7, align 8
  %134 = icmp ne %struct.format_field* %133, null
  br i1 %134, label %135, label %202

135:                                              ; preds = %132
  %136 = load i32, i32* %10, align 4
  %137 = add nsw i32 %136, 1
  store i32 %137, i32* %10, align 4
  %138 = icmp ne i32 %136, 0
  br i1 %138, label %139, label %142

139:                                              ; preds = %135
  %140 = load i32*, i32** %12, align 8
  %141 = call i32 (i32*, i8*, ...) @fprintf(i32* %140, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0))
  br label %142

142:                                              ; preds = %139, %135
  %143 = load i32, i32* %11, align 4
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %145, label %152

145:                                              ; preds = %142
  %146 = load i32, i32* %11, align 4
  %147 = srem i32 %146, 3
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %145
  %150 = load i32*, i32** %12, align 8
  %151 = call i32 (i32*, i8*, ...) @fprintf(i32* %150, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.34, i64 0, i64 0))
  br label %152

152:                                              ; preds = %149, %145, %142
  %153 = load i32, i32* %11, align 4
  %154 = add nsw i32 %153, 1
  store i32 %154, i32* %11, align 4
  %155 = load i32*, i32** %12, align 8
  %156 = load %struct.format_field*, %struct.format_field** %7, align 8
  %157 = getelementptr inbounds %struct.format_field, %struct.format_field* %156, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = call i32 (i32*, i8*, ...) @fprintf(i32* %155, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0), i8* %158)
  %160 = load %struct.format_field*, %struct.format_field** %7, align 8
  %161 = getelementptr inbounds %struct.format_field, %struct.format_field* %160, i32 0, i32 1
  %162 = load i32, i32* %161, align 8
  %163 = load i32, i32* @FIELD_IS_STRING, align 4
  %164 = and i32 %162, %163
  %165 = icmp ne i32 %164, 0
  br i1 %165, label %180, label %166

166:                                              ; preds = %152
  %167 = load %struct.format_field*, %struct.format_field** %7, align 8
  %168 = getelementptr inbounds %struct.format_field, %struct.format_field* %167, i32 0, i32 1
  %169 = load i32, i32* %168, align 8
  %170 = load i32, i32* @FIELD_IS_FLAG, align 4
  %171 = and i32 %169, %170
  %172 = icmp ne i32 %171, 0
  br i1 %172, label %180, label %173

173:                                              ; preds = %166
  %174 = load %struct.format_field*, %struct.format_field** %7, align 8
  %175 = getelementptr inbounds %struct.format_field, %struct.format_field* %174, i32 0, i32 1
  %176 = load i32, i32* %175, align 8
  %177 = load i32, i32* @FIELD_IS_SYMBOLIC, align 4
  %178 = and i32 %176, %177
  %179 = icmp ne i32 %178, 0
  br i1 %179, label %180, label %183

180:                                              ; preds = %173, %166, %152
  %181 = load i32*, i32** %12, align 8
  %182 = call i32 (i32*, i8*, ...) @fprintf(i32* %181, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0))
  br label %197

183:                                              ; preds = %173
  %184 = load %struct.format_field*, %struct.format_field** %7, align 8
  %185 = getelementptr inbounds %struct.format_field, %struct.format_field* %184, i32 0, i32 1
  %186 = load i32, i32* %185, align 8
  %187 = load i32, i32* @FIELD_IS_SIGNED, align 4
  %188 = and i32 %186, %187
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %190, label %193

190:                                              ; preds = %183
  %191 = load i32*, i32** %12, align 8
  %192 = call i32 (i32*, i8*, ...) @fprintf(i32* %191, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0))
  br label %196

193:                                              ; preds = %183
  %194 = load i32*, i32** %12, align 8
  %195 = call i32 (i32*, i8*, ...) @fprintf(i32* %194, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0))
  br label %196

196:                                              ; preds = %193, %190
  br label %197

197:                                              ; preds = %196, %180
  br label %198

198:                                              ; preds = %197
  %199 = load %struct.format_field*, %struct.format_field** %7, align 8
  %200 = getelementptr inbounds %struct.format_field, %struct.format_field* %199, i32 0, i32 2
  %201 = load %struct.format_field*, %struct.format_field** %200, align 8
  store %struct.format_field* %201, %struct.format_field** %7, align 8
  br label %132

202:                                              ; preds = %132
  %203 = load i32*, i32** %12, align 8
  %204 = call i32 (i32*, i8*, ...) @fprintf(i32* %203, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0))
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  %205 = load %struct.event_format*, %struct.event_format** %6, align 8
  %206 = getelementptr inbounds %struct.event_format, %struct.event_format* %205, i32 0, i32 2
  %207 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %206, i32 0, i32 0
  %208 = load %struct.format_field*, %struct.format_field** %207, align 8
  store %struct.format_field* %208, %struct.format_field** %7, align 8
  br label %209

209:                                              ; preds = %303, %202
  %210 = load %struct.format_field*, %struct.format_field** %7, align 8
  %211 = icmp ne %struct.format_field* %210, null
  br i1 %211, label %212, label %307

212:                                              ; preds = %209
  %213 = load i32, i32* %10, align 4
  %214 = add nsw i32 %213, 1
  store i32 %214, i32* %10, align 4
  %215 = icmp ne i32 %213, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %212
  %217 = load i32*, i32** %12, align 8
  %218 = call i32 (i32*, i8*, ...) @fprintf(i32* %217, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0))
  br label %219

219:                                              ; preds = %216, %212
  %220 = load i32, i32* %11, align 4
  %221 = add nsw i32 %220, 1
  store i32 %221, i32* %11, align 4
  %222 = srem i32 %221, 5
  %223 = icmp eq i32 %222, 0
  br i1 %223, label %224, label %227

224:                                              ; preds = %219
  %225 = load i32*, i32** %12, align 8
  %226 = call i32 (i32*, i8*, ...) @fprintf(i32* %225, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0))
  br label %227

227:                                              ; preds = %224, %219
  %228 = load %struct.format_field*, %struct.format_field** %7, align 8
  %229 = getelementptr inbounds %struct.format_field, %struct.format_field* %228, i32 0, i32 1
  %230 = load i32, i32* %229, align 8
  %231 = load i32, i32* @FIELD_IS_FLAG, align 4
  %232 = and i32 %230, %231
  %233 = icmp ne i32 %232, 0
  br i1 %233, label %234, label %261

234:                                              ; preds = %227
  %235 = load i32, i32* %11, align 4
  %236 = sub nsw i32 %235, 1
  %237 = srem i32 %236, 5
  %238 = icmp ne i32 %237, 0
  br i1 %238, label %239, label %242

239:                                              ; preds = %234
  %240 = load i32*, i32** %12, align 8
  %241 = call i32 (i32*, i8*, ...) @fprintf(i32* %240, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0))
  store i32 4, i32* %11, align 4
  br label %242

242:                                              ; preds = %239, %234
  %243 = load i32*, i32** %12, align 8
  %244 = call i32 (i32*, i8*, ...) @fprintf(i32* %243, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0))
  %245 = load i32*, i32** %12, align 8
  %246 = load %struct.event_format*, %struct.event_format** %6, align 8
  %247 = getelementptr inbounds %struct.event_format, %struct.event_format* %246, i32 0, i32 0
  %248 = load i8*, i8** %247, align 8
  %249 = load %struct.event_format*, %struct.event_format** %6, align 8
  %250 = getelementptr inbounds %struct.event_format, %struct.event_format* %249, i32 0, i32 1
  %251 = load i8*, i8** %250, align 8
  %252 = call i32 (i32*, i8*, ...) @fprintf(i32* %245, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i64 0, i64 0), i8* %248, i8* %251)
  %253 = load i32*, i32** %12, align 8
  %254 = load %struct.format_field*, %struct.format_field** %7, align 8
  %255 = getelementptr inbounds %struct.format_field, %struct.format_field* %254, i32 0, i32 0
  %256 = load i8*, i8** %255, align 8
  %257 = load %struct.format_field*, %struct.format_field** %7, align 8
  %258 = getelementptr inbounds %struct.format_field, %struct.format_field* %257, i32 0, i32 0
  %259 = load i8*, i8** %258, align 8
  %260 = call i32 (i32*, i8*, ...) @fprintf(i32* %253, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i64 0, i64 0), i8* %256, i8* %259)
  br label %302

261:                                              ; preds = %227
  %262 = load %struct.format_field*, %struct.format_field** %7, align 8
  %263 = getelementptr inbounds %struct.format_field, %struct.format_field* %262, i32 0, i32 1
  %264 = load i32, i32* %263, align 8
  %265 = load i32, i32* @FIELD_IS_SYMBOLIC, align 4
  %266 = and i32 %264, %265
  %267 = icmp ne i32 %266, 0
  br i1 %267, label %268, label %295

268:                                              ; preds = %261
  %269 = load i32, i32* %11, align 4
  %270 = sub nsw i32 %269, 1
  %271 = srem i32 %270, 5
  %272 = icmp ne i32 %271, 0
  br i1 %272, label %273, label %276

273:                                              ; preds = %268
  %274 = load i32*, i32** %12, align 8
  %275 = call i32 (i32*, i8*, ...) @fprintf(i32* %274, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i64 0, i64 0))
  store i32 4, i32* %11, align 4
  br label %276

276:                                              ; preds = %273, %268
  %277 = load i32*, i32** %12, align 8
  %278 = call i32 (i32*, i8*, ...) @fprintf(i32* %277, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i64 0, i64 0))
  %279 = load i32*, i32** %12, align 8
  %280 = load %struct.event_format*, %struct.event_format** %6, align 8
  %281 = getelementptr inbounds %struct.event_format, %struct.event_format* %280, i32 0, i32 0
  %282 = load i8*, i8** %281, align 8
  %283 = load %struct.event_format*, %struct.event_format** %6, align 8
  %284 = getelementptr inbounds %struct.event_format, %struct.event_format* %283, i32 0, i32 1
  %285 = load i8*, i8** %284, align 8
  %286 = call i32 (i32*, i8*, ...) @fprintf(i32* %279, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42, i64 0, i64 0), i8* %282, i8* %285)
  %287 = load i32*, i32** %12, align 8
  %288 = load %struct.format_field*, %struct.format_field** %7, align 8
  %289 = getelementptr inbounds %struct.format_field, %struct.format_field* %288, i32 0, i32 0
  %290 = load i8*, i8** %289, align 8
  %291 = load %struct.format_field*, %struct.format_field** %7, align 8
  %292 = getelementptr inbounds %struct.format_field, %struct.format_field* %291, i32 0, i32 0
  %293 = load i8*, i8** %292, align 8
  %294 = call i32 (i32*, i8*, ...) @fprintf(i32* %287, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.43, i64 0, i64 0), i8* %290, i8* %293)
  br label %301

295:                                              ; preds = %261
  %296 = load i32*, i32** %12, align 8
  %297 = load %struct.format_field*, %struct.format_field** %7, align 8
  %298 = getelementptr inbounds %struct.format_field, %struct.format_field* %297, i32 0, i32 0
  %299 = load i8*, i8** %298, align 8
  %300 = call i32 (i32*, i8*, ...) @fprintf(i32* %296, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.30, i64 0, i64 0), i8* %299)
  br label %301

301:                                              ; preds = %295, %276
  br label %302

302:                                              ; preds = %301, %242
  br label %303

303:                                              ; preds = %302
  %304 = load %struct.format_field*, %struct.format_field** %7, align 8
  %305 = getelementptr inbounds %struct.format_field, %struct.format_field* %304, i32 0, i32 2
  %306 = load %struct.format_field*, %struct.format_field** %305, align 8
  store %struct.format_field* %306, %struct.format_field** %7, align 8
  br label %209

307:                                              ; preds = %209
  %308 = load i32*, i32** %12, align 8
  %309 = call i32 (i32*, i8*, ...) @fprintf(i32* %308, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0))
  br label %61

310:                                              ; preds = %61
  %311 = load i32*, i32** %12, align 8
  %312 = call i32 (i32*, i8*, ...) @fprintf(i32* %311, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.46, i64 0, i64 0))
  %313 = load i32*, i32** %12, align 8
  %314 = call i32 (i32*, i8*, ...) @fprintf(i32* %313, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.47, i64 0, i64 0))
  %315 = load i32*, i32** %12, align 8
  %316 = call i32 (i32*, i8*, ...) @fprintf(i32* %315, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @.str.48, i64 0, i64 0))
  %317 = load i32*, i32** %12, align 8
  %318 = call i32 @fclose(i32* %317)
  %319 = load i32*, i32** @stderr, align 8
  %320 = call i32 (i32*, i8*, ...) @fprintf(i32* %319, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.49, i64 0, i64 0), i8* %17)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %13, align 4
  br label %321

321:                                              ; preds = %310, %23
  %322 = load i8*, i8** %8, align 8
  call void @llvm.stackrestore(i8* %322)
  %323 = load i32, i32* %3, align 4
  ret i32 %323
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #2

declare dso_local i32* @fopen(i8*, i8*) #2

declare dso_local i32 @fprintf(i32*, i8*, ...) #2

declare dso_local %struct.event_format* @trace_find_next_event(%struct.pevent*, %struct.event_format*) #2

declare dso_local i32 @fclose(i32*) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
