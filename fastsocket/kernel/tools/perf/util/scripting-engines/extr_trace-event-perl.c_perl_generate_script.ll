; ModuleID = '/home/carl/AnghaBench/fastsocket/kernel/tools/perf/util/scripting-engines/extr_trace-event-perl.c_perl_generate_script.c'
source_filename = "/home/carl/AnghaBench/fastsocket/kernel/tools/perf/util/scripting-engines/extr_trace-event-perl.c_perl_generate_script.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.pevent = type { i32 }
%struct.event_format = type { i8*, i8*, %struct.TYPE_2__ }
%struct.TYPE_2__ = type { %struct.format_field* }
%struct.format_field = type { i8*, i32, %struct.format_field* }

@PATH_MAX = common dso_local global i32 0, align 4
@.str = private unnamed_addr constant [6 x i8] c"%s.pl\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@stderr = common dso_local global i32* null, align 8
@.str.2 = private unnamed_addr constant [18 x i8] c"couldn't open %s\0A\00", align 1
@.str.3 = private unnamed_addr constant [64 x i8] c"# perf script event handlers, generated by perf script -g perl\0A\00", align 1
@.str.4 = private unnamed_addr constant [62 x i8] c"# Licensed under the terms of the GNU GPL License version 2\0A\0A\00", align 1
@.str.5 = private unnamed_addr constant [74 x i8] c"# The common_* event handler fields are the most useful fields common to\0A\00", align 1
@.str.6 = private unnamed_addr constant [75 x i8] c"# all events.  They don't necessarily correspond to the 'common_*' fields\0A\00", align 1
@.str.7 = private unnamed_addr constant [74 x i8] c"# in the format files.  Those fields not available as handler params can\0A\00", align 1
@.str.8 = private unnamed_addr constant [69 x i8] c"# be retrieved using Perl functions of the form common_*($context).\0A\00", align 1
@.str.9 = private unnamed_addr constant [56 x i8] c"# See Context.pm for the list of available functions.\0A\0A\00", align 1
@.str.10 = private unnamed_addr constant [68 x i8] c"use lib \22$ENV{'PERF_EXEC_PATH'}/scripts/perl/Perf-Trace-Util/lib\22;\0A\00", align 1
@.str.11 = private unnamed_addr constant [34 x i8] c"use lib \22./Perf-Trace-Util/lib\22;\0A\00", align 1
@.str.12 = private unnamed_addr constant [24 x i8] c"use Perf::Trace::Core;\0A\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"use Perf::Trace::Context;\0A\00", align 1
@.str.14 = private unnamed_addr constant [25 x i8] c"use Perf::Trace::Util;\0A\0A\00", align 1
@.str.15 = private unnamed_addr constant [34 x i8] c"sub trace_begin\0A{\0A\09# optional\0A}\0A\0A\00", align 1
@.str.16 = private unnamed_addr constant [32 x i8] c"sub trace_end\0A{\0A\09# optional\0A}\0A\0A\00", align 1
@.str.17 = private unnamed_addr constant [14 x i8] c"sub %s::%s\0A{\0A\00", align 1
@.str.18 = private unnamed_addr constant [6 x i8] c"\09my (\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"$event_name, \00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"$context, \00", align 1
@.str.21 = private unnamed_addr constant [14 x i8] c"$common_cpu, \00", align 1
@.str.22 = private unnamed_addr constant [15 x i8] c"$common_secs, \00", align 1
@.str.23 = private unnamed_addr constant [16 x i8] c"$common_nsecs,\0A\00", align 1
@.str.24 = private unnamed_addr constant [19 x i8] c"\09    $common_pid, \00", align 1
@.str.25 = private unnamed_addr constant [20 x i8] c"$common_comm,\0A\09    \00", align 1
@.str.26 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"\0A\09    \00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"$%s\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c") = @_;\0A\0A\00", align 1
@.str.30 = private unnamed_addr constant [113 x i8] c"\09print_header($event_name, $common_cpu, $common_secs, $common_nsecs,\0A\09             $common_pid, $common_comm);\0A\0A\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"\09printf(\22\00", align 1
@.str.32 = private unnamed_addr constant [13 x i8] c"\22.\0A\09       \22\00", align 1
@.str.33 = private unnamed_addr constant [4 x i8] c"%s=\00", align 1
@FIELD_IS_STRING = common dso_local global i32 0, align 4
@FIELD_IS_FLAG = common dso_local global i32 0, align 4
@FIELD_IS_SYMBOLIC = common dso_local global i32 0, align 4
@.str.34 = private unnamed_addr constant [4 x i8] c"%%s\00", align 1
@FIELD_IS_SIGNED = common dso_local global i32 0, align 4
@.str.35 = private unnamed_addr constant [4 x i8] c"%%d\00", align 1
@.str.36 = private unnamed_addr constant [4 x i8] c"%%u\00", align 1
@.str.37 = private unnamed_addr constant [14 x i8] c"\\n\22,\0A\09       \00", align 1
@.str.38 = private unnamed_addr constant [10 x i8] c"\0A\09       \00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"flag_str(\22\00", align 1
@.str.40 = private unnamed_addr constant [10 x i8] c"%s::%s\22, \00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"\22%s\22, $%s)\00", align 1
@.str.42 = private unnamed_addr constant [13 x i8] c"symbol_str(\22\00", align 1
@.str.43 = private unnamed_addr constant [4 x i8] c");\0A\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"}\0A\0A\00", align 1
@.str.45 = private unnamed_addr constant [132 x i8] c"sub trace_unhandled\0A{\0A\09my ($event_name, $context, $common_cpu, $common_secs, $common_nsecs,\0A\09    $common_pid, $common_comm) = @_;\0A\0A\00", align 1
@.str.46 = private unnamed_addr constant [115 x i8] c"\09print_header($event_name, $common_cpu, $common_secs, $common_nsecs,\0A\09             $common_pid, $common_comm);\0A}\0A\0A\00", align 1
@.str.47 = private unnamed_addr constant [185 x i8] c"sub print_header\0A{\0A\09my ($event_name, $cpu, $secs, $nsecs, $pid, $comm) = @_;\0A\0A\09printf(\22%%-20s %%5u %%05u.%%09u %%8u %%-20s \22,\0A\09       $event_name, $cpu, $secs, $nsecs, $pid, $comm);\0A}\0A\00", align 1
@.str.48 = private unnamed_addr constant [539 x i8] c"\0A# Packed byte string args of process_event():\0A#\0A# $event:\09union perf_event\09util/event.h\0A# $attr:\09struct perf_event_attr\09linux/perf_event.h\0A# $sample:\09struct perf_sample\09util/event.h\0A# $raw_data:\09perf_sample->raw_data\09util/event.h\0A\0Asub process_event\0A{\0A\09my ($event, $attr, $sample, $raw_data) = @_;\0A\0A\09my @event\09= unpack(\22LSS\22, $event);\0A\09my @attr\09= unpack(\22LLQQQQQLLQQ\22, $attr);\0A\09my @sample\09= unpack(\22QLLQQQQQLL\22, $sample);\0A\09my @raw_data\09= unpack(\22C*\22, $raw_data);\0A\0A\09use Data::Dumper;\0A\09print Dumper \\@event, \\@attr, \\@sample, \\@raw_data;\0A}\0A\00", align 1
@.str.49 = private unnamed_addr constant [27 x i8] c"generated Perl script: %s\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (%struct.pevent*, i8*)* @perl_generate_script to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @perl_generate_script(%struct.pevent* %0, i8* %1) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.pevent*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %struct.event_format*, align 8
  %7 = alloca %struct.format_field*, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32*, align 8
  %13 = alloca i32, align 4
  store %struct.pevent* %0, %struct.pevent** %4, align 8
  store i8* %1, i8** %5, align 8
  store %struct.event_format* null, %struct.event_format** %6, align 8
  %14 = load i32, i32* @PATH_MAX, align 4
  %15 = zext i32 %14 to i64
  %16 = call i8* @llvm.stacksave()
  store i8* %16, i8** %8, align 8
  %17 = alloca i8, i64 %15, align 16
  store i64 %15, i64* %9, align 8
  %18 = load i8*, i8** %5, align 8
  %19 = call i32 @sprintf(i8* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i8* %18)
  %20 = call i32* @fopen(i8* %17, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0))
  store i32* %20, i32** %12, align 8
  %21 = load i32*, i32** %12, align 8
  %22 = icmp eq i32* %21, null
  br i1 %22, label %23, label %26

23:                                               ; preds = %2
  %24 = load i32*, i32** @stderr, align 8
  %25 = call i32 (i32*, i8*, ...) @fprintf(i32* %24, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* %17)
  store i32 -1, i32* %3, align 4
  store i32 1, i32* %13, align 4
  br label %321

26:                                               ; preds = %2
  %27 = load i32*, i32** %12, align 8
  %28 = call i32 (i32*, i8*, ...) @fprintf(i32* %27, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.3, i64 0, i64 0))
  %29 = load i32*, i32** %12, align 8
  %30 = call i32 (i32*, i8*, ...) @fprintf(i32* %29, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0))
  %31 = load i32*, i32** %12, align 8
  %32 = call i32 (i32*, i8*, ...) @fprintf(i32* %31, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.5, i64 0, i64 0))
  %33 = load i32*, i32** %12, align 8
  %34 = call i32 (i32*, i8*, ...) @fprintf(i32* %33, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6, i64 0, i64 0))
  %35 = load i32*, i32** %12, align 8
  %36 = call i32 (i32*, i8*, ...) @fprintf(i32* %35, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.7, i64 0, i64 0))
  %37 = load i32*, i32** %12, align 8
  %38 = call i32 (i32*, i8*, ...) @fprintf(i32* %37, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.8, i64 0, i64 0))
  %39 = load i32*, i32** %12, align 8
  %40 = call i32 (i32*, i8*, ...) @fprintf(i32* %39, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0))
  %41 = load i32*, i32** %12, align 8
  %42 = call i32 (i32*, i8*, ...) @fprintf(i32* %41, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.10, i64 0, i64 0))
  %43 = load i32*, i32** %12, align 8
  %44 = call i32 (i32*, i8*, ...) @fprintf(i32* %43, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.11, i64 0, i64 0))
  %45 = load i32*, i32** %12, align 8
  %46 = call i32 (i32*, i8*, ...) @fprintf(i32* %45, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0))
  %47 = load i32*, i32** %12, align 8
  %48 = call i32 (i32*, i8*, ...) @fprintf(i32* %47, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0))
  %49 = load i32*, i32** %12, align 8
  %50 = call i32 (i32*, i8*, ...) @fprintf(i32* %49, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.14, i64 0, i64 0))
  %51 = load i32*, i32** %12, align 8
  %52 = call i32 (i32*, i8*, ...) @fprintf(i32* %51, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0))
  %53 = load i32*, i32** %12, align 8
  %54 = call i32 (i32*, i8*, ...) @fprintf(i32* %53, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16, i64 0, i64 0))
  br label %55

55:                                               ; preds = %303, %26
  %56 = load %struct.pevent*, %struct.pevent** %4, align 8
  %57 = load %struct.event_format*, %struct.event_format** %6, align 8
  %58 = call %struct.event_format* @trace_find_next_event(%struct.pevent* %56, %struct.event_format* %57)
  store %struct.event_format* %58, %struct.event_format** %6, align 8
  %59 = icmp ne %struct.event_format* %58, null
  br i1 %59, label %60, label %308

60:                                               ; preds = %55
  %61 = load i32*, i32** %12, align 8
  %62 = load %struct.event_format*, %struct.event_format** %6, align 8
  %63 = getelementptr inbounds %struct.event_format, %struct.event_format* %62, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = load %struct.event_format*, %struct.event_format** %6, align 8
  %66 = getelementptr inbounds %struct.event_format, %struct.event_format* %65, i32 0, i32 1
  %67 = load i8*, i8** %66, align 8
  %68 = call i32 (i32*, i8*, ...) @fprintf(i32* %61, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17, i64 0, i64 0), i8* %64, i8* %67)
  %69 = load i32*, i32** %12, align 8
  %70 = call i32 (i32*, i8*, ...) @fprintf(i32* %69, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.18, i64 0, i64 0))
  %71 = load i32*, i32** %12, align 8
  %72 = call i32 (i32*, i8*, ...) @fprintf(i32* %71, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.19, i64 0, i64 0))
  %73 = load i32*, i32** %12, align 8
  %74 = call i32 (i32*, i8*, ...) @fprintf(i32* %73, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0))
  %75 = load i32*, i32** %12, align 8
  %76 = call i32 (i32*, i8*, ...) @fprintf(i32* %75, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.21, i64 0, i64 0))
  %77 = load i32*, i32** %12, align 8
  %78 = call i32 (i32*, i8*, ...) @fprintf(i32* %77, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0))
  %79 = load i32*, i32** %12, align 8
  %80 = call i32 (i32*, i8*, ...) @fprintf(i32* %79, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i64 0, i64 0))
  %81 = load i32*, i32** %12, align 8
  %82 = call i32 (i32*, i8*, ...) @fprintf(i32* %81, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.24, i64 0, i64 0))
  %83 = load i32*, i32** %12, align 8
  %84 = call i32 (i32*, i8*, ...) @fprintf(i32* %83, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.25, i64 0, i64 0))
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  %85 = load %struct.event_format*, %struct.event_format** %6, align 8
  %86 = getelementptr inbounds %struct.event_format, %struct.event_format* %85, i32 0, i32 2
  %87 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %86, i32 0, i32 0
  %88 = load %struct.format_field*, %struct.format_field** %87, align 8
  store %struct.format_field* %88, %struct.format_field** %7, align 8
  br label %89

89:                                               ; preds = %113, %60
  %90 = load %struct.format_field*, %struct.format_field** %7, align 8
  %91 = icmp ne %struct.format_field* %90, null
  br i1 %91, label %92, label %117

92:                                               ; preds = %89
  %93 = load i32, i32* %10, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %10, align 4
  %95 = icmp ne i32 %93, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %92
  %97 = load i32*, i32** %12, align 8
  %98 = call i32 (i32*, i8*, ...) @fprintf(i32* %97, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0))
  br label %99

99:                                               ; preds = %96, %92
  %100 = load i32, i32* %11, align 4
  %101 = add nsw i32 %100, 1
  store i32 %101, i32* %11, align 4
  %102 = srem i32 %101, 5
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %99
  %105 = load i32*, i32** %12, align 8
  %106 = call i32 (i32*, i8*, ...) @fprintf(i32* %105, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i64 0, i64 0))
  br label %107

107:                                              ; preds = %104, %99
  %108 = load i32*, i32** %12, align 8
  %109 = load %struct.format_field*, %struct.format_field** %7, align 8
  %110 = getelementptr inbounds %struct.format_field, %struct.format_field* %109, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  %112 = call i32 (i32*, i8*, ...) @fprintf(i32* %108, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8* %111)
  br label %113

113:                                              ; preds = %107
  %114 = load %struct.format_field*, %struct.format_field** %7, align 8
  %115 = getelementptr inbounds %struct.format_field, %struct.format_field* %114, i32 0, i32 2
  %116 = load %struct.format_field*, %struct.format_field** %115, align 8
  store %struct.format_field* %116, %struct.format_field** %7, align 8
  br label %89

117:                                              ; preds = %89
  %118 = load i32*, i32** %12, align 8
  %119 = call i32 (i32*, i8*, ...) @fprintf(i32* %118, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0))
  %120 = load i32*, i32** %12, align 8
  %121 = call i32 (i32*, i8*, ...) @fprintf(i32* %120, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.30, i64 0, i64 0))
  %122 = load i32*, i32** %12, align 8
  %123 = call i32 (i32*, i8*, ...) @fprintf(i32* %122, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i64 0, i64 0))
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  %124 = load %struct.event_format*, %struct.event_format** %6, align 8
  %125 = getelementptr inbounds %struct.event_format, %struct.event_format* %124, i32 0, i32 2
  %126 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %125, i32 0, i32 0
  %127 = load %struct.format_field*, %struct.format_field** %126, align 8
  store %struct.format_field* %127, %struct.format_field** %7, align 8
  br label %128

128:                                              ; preds = %194, %117
  %129 = load %struct.format_field*, %struct.format_field** %7, align 8
  %130 = icmp ne %struct.format_field* %129, null
  br i1 %130, label %131, label %198

131:                                              ; preds = %128
  %132 = load i32, i32* %10, align 4
  %133 = add nsw i32 %132, 1
  store i32 %133, i32* %10, align 4
  %134 = icmp ne i32 %132, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %131
  %136 = load i32*, i32** %12, align 8
  %137 = call i32 (i32*, i8*, ...) @fprintf(i32* %136, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0))
  br label %138

138:                                              ; preds = %135, %131
  %139 = load i32, i32* %11, align 4
  %140 = icmp ne i32 %139, 0
  br i1 %140, label %141, label %148

141:                                              ; preds = %138
  %142 = load i32, i32* %11, align 4
  %143 = srem i32 %142, 4
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %148

145:                                              ; preds = %141
  %146 = load i32*, i32** %12, align 8
  %147 = call i32 (i32*, i8*, ...) @fprintf(i32* %146, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i64 0, i64 0))
  br label %148

148:                                              ; preds = %145, %141, %138
  %149 = load i32, i32* %11, align 4
  %150 = add nsw i32 %149, 1
  store i32 %150, i32* %11, align 4
  %151 = load i32*, i32** %12, align 8
  %152 = load %struct.format_field*, %struct.format_field** %7, align 8
  %153 = getelementptr inbounds %struct.format_field, %struct.format_field* %152, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8
  %155 = call i32 (i32*, i8*, ...) @fprintf(i32* %151, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.33, i64 0, i64 0), i8* %154)
  %156 = load %struct.format_field*, %struct.format_field** %7, align 8
  %157 = getelementptr inbounds %struct.format_field, %struct.format_field* %156, i32 0, i32 1
  %158 = load i32, i32* %157, align 8
  %159 = load i32, i32* @FIELD_IS_STRING, align 4
  %160 = and i32 %158, %159
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %176, label %162

162:                                              ; preds = %148
  %163 = load %struct.format_field*, %struct.format_field** %7, align 8
  %164 = getelementptr inbounds %struct.format_field, %struct.format_field* %163, i32 0, i32 1
  %165 = load i32, i32* %164, align 8
  %166 = load i32, i32* @FIELD_IS_FLAG, align 4
  %167 = and i32 %165, %166
  %168 = icmp ne i32 %167, 0
  br i1 %168, label %176, label %169

169:                                              ; preds = %162
  %170 = load %struct.format_field*, %struct.format_field** %7, align 8
  %171 = getelementptr inbounds %struct.format_field, %struct.format_field* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 8
  %173 = load i32, i32* @FIELD_IS_SYMBOLIC, align 4
  %174 = and i32 %172, %173
  %175 = icmp ne i32 %174, 0
  br i1 %175, label %176, label %179

176:                                              ; preds = %169, %162, %148
  %177 = load i32*, i32** %12, align 8
  %178 = call i32 (i32*, i8*, ...) @fprintf(i32* %177, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.34, i64 0, i64 0))
  br label %193

179:                                              ; preds = %169
  %180 = load %struct.format_field*, %struct.format_field** %7, align 8
  %181 = getelementptr inbounds %struct.format_field, %struct.format_field* %180, i32 0, i32 1
  %182 = load i32, i32* %181, align 8
  %183 = load i32, i32* @FIELD_IS_SIGNED, align 4
  %184 = and i32 %182, %183
  %185 = icmp ne i32 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %179
  %187 = load i32*, i32** %12, align 8
  %188 = call i32 (i32*, i8*, ...) @fprintf(i32* %187, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0))
  br label %192

189:                                              ; preds = %179
  %190 = load i32*, i32** %12, align 8
  %191 = call i32 (i32*, i8*, ...) @fprintf(i32* %190, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.36, i64 0, i64 0))
  br label %192

192:                                              ; preds = %189, %186
  br label %193

193:                                              ; preds = %192, %176
  br label %194

194:                                              ; preds = %193
  %195 = load %struct.format_field*, %struct.format_field** %7, align 8
  %196 = getelementptr inbounds %struct.format_field, %struct.format_field* %195, i32 0, i32 2
  %197 = load %struct.format_field*, %struct.format_field** %196, align 8
  store %struct.format_field* %197, %struct.format_field** %7, align 8
  br label %128

198:                                              ; preds = %128
  %199 = load i32*, i32** %12, align 8
  %200 = call i32 (i32*, i8*, ...) @fprintf(i32* %199, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.37, i64 0, i64 0))
  store i32 0, i32* %10, align 4
  store i32 0, i32* %11, align 4
  %201 = load %struct.event_format*, %struct.event_format** %6, align 8
  %202 = getelementptr inbounds %struct.event_format, %struct.event_format* %201, i32 0, i32 2
  %203 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %202, i32 0, i32 0
  %204 = load %struct.format_field*, %struct.format_field** %203, align 8
  store %struct.format_field* %204, %struct.format_field** %7, align 8
  br label %205

205:                                              ; preds = %299, %198
  %206 = load %struct.format_field*, %struct.format_field** %7, align 8
  %207 = icmp ne %struct.format_field* %206, null
  br i1 %207, label %208, label %303

208:                                              ; preds = %205
  %209 = load i32, i32* %10, align 4
  %210 = add nsw i32 %209, 1
  store i32 %210, i32* %10, align 4
  %211 = icmp ne i32 %209, 0
  br i1 %211, label %212, label %215

212:                                              ; preds = %208
  %213 = load i32*, i32** %12, align 8
  %214 = call i32 (i32*, i8*, ...) @fprintf(i32* %213, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.26, i64 0, i64 0))
  br label %215

215:                                              ; preds = %212, %208
  %216 = load i32, i32* %11, align 4
  %217 = add nsw i32 %216, 1
  store i32 %217, i32* %11, align 4
  %218 = srem i32 %217, 5
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %223

220:                                              ; preds = %215
  %221 = load i32*, i32** %12, align 8
  %222 = call i32 (i32*, i8*, ...) @fprintf(i32* %221, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i64 0, i64 0))
  br label %223

223:                                              ; preds = %220, %215
  %224 = load %struct.format_field*, %struct.format_field** %7, align 8
  %225 = getelementptr inbounds %struct.format_field, %struct.format_field* %224, i32 0, i32 1
  %226 = load i32, i32* %225, align 8
  %227 = load i32, i32* @FIELD_IS_FLAG, align 4
  %228 = and i32 %226, %227
  %229 = icmp ne i32 %228, 0
  br i1 %229, label %230, label %257

230:                                              ; preds = %223
  %231 = load i32, i32* %11, align 4
  %232 = sub nsw i32 %231, 1
  %233 = srem i32 %232, 5
  %234 = icmp ne i32 %233, 0
  br i1 %234, label %235, label %238

235:                                              ; preds = %230
  %236 = load i32*, i32** %12, align 8
  %237 = call i32 (i32*, i8*, ...) @fprintf(i32* %236, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i64 0, i64 0))
  store i32 4, i32* %11, align 4
  br label %238

238:                                              ; preds = %235, %230
  %239 = load i32*, i32** %12, align 8
  %240 = call i32 (i32*, i8*, ...) @fprintf(i32* %239, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0))
  %241 = load i32*, i32** %12, align 8
  %242 = load %struct.event_format*, %struct.event_format** %6, align 8
  %243 = getelementptr inbounds %struct.event_format, %struct.event_format* %242, i32 0, i32 0
  %244 = load i8*, i8** %243, align 8
  %245 = load %struct.event_format*, %struct.event_format** %6, align 8
  %246 = getelementptr inbounds %struct.event_format, %struct.event_format* %245, i32 0, i32 1
  %247 = load i8*, i8** %246, align 8
  %248 = call i32 (i32*, i8*, ...) @fprintf(i32* %241, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0), i8* %244, i8* %247)
  %249 = load i32*, i32** %12, align 8
  %250 = load %struct.format_field*, %struct.format_field** %7, align 8
  %251 = getelementptr inbounds %struct.format_field, %struct.format_field* %250, i32 0, i32 0
  %252 = load i8*, i8** %251, align 8
  %253 = load %struct.format_field*, %struct.format_field** %7, align 8
  %254 = getelementptr inbounds %struct.format_field, %struct.format_field* %253, i32 0, i32 0
  %255 = load i8*, i8** %254, align 8
  %256 = call i32 (i32*, i8*, ...) @fprintf(i32* %249, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0), i8* %252, i8* %255)
  br label %298

257:                                              ; preds = %223
  %258 = load %struct.format_field*, %struct.format_field** %7, align 8
  %259 = getelementptr inbounds %struct.format_field, %struct.format_field* %258, i32 0, i32 1
  %260 = load i32, i32* %259, align 8
  %261 = load i32, i32* @FIELD_IS_SYMBOLIC, align 4
  %262 = and i32 %260, %261
  %263 = icmp ne i32 %262, 0
  br i1 %263, label %264, label %291

264:                                              ; preds = %257
  %265 = load i32, i32* %11, align 4
  %266 = sub nsw i32 %265, 1
  %267 = srem i32 %266, 5
  %268 = icmp ne i32 %267, 0
  br i1 %268, label %269, label %272

269:                                              ; preds = %264
  %270 = load i32*, i32** %12, align 8
  %271 = call i32 (i32*, i8*, ...) @fprintf(i32* %270, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.38, i64 0, i64 0))
  store i32 4, i32* %11, align 4
  br label %272

272:                                              ; preds = %269, %264
  %273 = load i32*, i32** %12, align 8
  %274 = call i32 (i32*, i8*, ...) @fprintf(i32* %273, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.42, i64 0, i64 0))
  %275 = load i32*, i32** %12, align 8
  %276 = load %struct.event_format*, %struct.event_format** %6, align 8
  %277 = getelementptr inbounds %struct.event_format, %struct.event_format* %276, i32 0, i32 0
  %278 = load i8*, i8** %277, align 8
  %279 = load %struct.event_format*, %struct.event_format** %6, align 8
  %280 = getelementptr inbounds %struct.event_format, %struct.event_format* %279, i32 0, i32 1
  %281 = load i8*, i8** %280, align 8
  %282 = call i32 (i32*, i8*, ...) @fprintf(i32* %275, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.40, i64 0, i64 0), i8* %278, i8* %281)
  %283 = load i32*, i32** %12, align 8
  %284 = load %struct.format_field*, %struct.format_field** %7, align 8
  %285 = getelementptr inbounds %struct.format_field, %struct.format_field* %284, i32 0, i32 0
  %286 = load i8*, i8** %285, align 8
  %287 = load %struct.format_field*, %struct.format_field** %7, align 8
  %288 = getelementptr inbounds %struct.format_field, %struct.format_field* %287, i32 0, i32 0
  %289 = load i8*, i8** %288, align 8
  %290 = call i32 (i32*, i8*, ...) @fprintf(i32* %283, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i64 0, i64 0), i8* %286, i8* %289)
  br label %297

291:                                              ; preds = %257
  %292 = load i32*, i32** %12, align 8
  %293 = load %struct.format_field*, %struct.format_field** %7, align 8
  %294 = getelementptr inbounds %struct.format_field, %struct.format_field* %293, i32 0, i32 0
  %295 = load i8*, i8** %294, align 8
  %296 = call i32 (i32*, i8*, ...) @fprintf(i32* %292, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i8* %295)
  br label %297

297:                                              ; preds = %291, %272
  br label %298

298:                                              ; preds = %297, %238
  br label %299

299:                                              ; preds = %298
  %300 = load %struct.format_field*, %struct.format_field** %7, align 8
  %301 = getelementptr inbounds %struct.format_field, %struct.format_field* %300, i32 0, i32 2
  %302 = load %struct.format_field*, %struct.format_field** %301, align 8
  store %struct.format_field* %302, %struct.format_field** %7, align 8
  br label %205

303:                                              ; preds = %205
  %304 = load i32*, i32** %12, align 8
  %305 = call i32 (i32*, i8*, ...) @fprintf(i32* %304, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i64 0, i64 0))
  %306 = load i32*, i32** %12, align 8
  %307 = call i32 (i32*, i8*, ...) @fprintf(i32* %306, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0))
  br label %55

308:                                              ; preds = %55
  %309 = load i32*, i32** %12, align 8
  %310 = call i32 (i32*, i8*, ...) @fprintf(i32* %309, i8* getelementptr inbounds ([132 x i8], [132 x i8]* @.str.45, i64 0, i64 0))
  %311 = load i32*, i32** %12, align 8
  %312 = call i32 (i32*, i8*, ...) @fprintf(i32* %311, i8* getelementptr inbounds ([115 x i8], [115 x i8]* @.str.46, i64 0, i64 0))
  %313 = load i32*, i32** %12, align 8
  %314 = call i32 (i32*, i8*, ...) @fprintf(i32* %313, i8* getelementptr inbounds ([185 x i8], [185 x i8]* @.str.47, i64 0, i64 0))
  %315 = load i32*, i32** %12, align 8
  %316 = call i32 (i32*, i8*, ...) @fprintf(i32* %315, i8* getelementptr inbounds ([539 x i8], [539 x i8]* @.str.48, i64 0, i64 0))
  %317 = load i32*, i32** %12, align 8
  %318 = call i32 @fclose(i32* %317)
  %319 = load i32*, i32** @stderr, align 8
  %320 = call i32 (i32*, i8*, ...) @fprintf(i32* %319, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.49, i64 0, i64 0), i8* %17)
  store i32 0, i32* %3, align 4
  store i32 1, i32* %13, align 4
  br label %321

321:                                              ; preds = %308, %23
  %322 = load i8*, i8** %8, align 8
  call void @llvm.stackrestore(i8* %322)
  %323 = load i32, i32* %3, align 4
  ret i32 %323
}

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #1

declare dso_local i32 @sprintf(i8*, i8*, i8*) #2

declare dso_local i32* @fopen(i8*, i8*) #2

declare dso_local i32 @fprintf(i32*, i8*, ...) #2

declare dso_local %struct.event_format* @trace_find_next_event(%struct.pevent*, %struct.event_format*) #2

declare dso_local i32 @fclose(i32*) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
