; ModuleID = '/home/carl/AnghaBench/fastsocket/kernel/drivers/misc/sgi-gru/extr_gruprocfs.c_statistics_show.c'
source_filename = "/home/carl/AnghaBench/fastsocket/kernel/drivers/misc/sgi-gru/extr_gruprocfs.c_statistics_show.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.seq_file = type { i32 }

@vdata_alloc = common dso_local global i32 0, align 4
@vdata_free = common dso_local global i32 0, align 4
@gts_alloc = common dso_local global i32 0, align 4
@gts_free = common dso_local global i32 0, align 4
@gms_alloc = common dso_local global i32 0, align 4
@gms_free = common dso_local global i32 0, align 4
@gts_double_allocate = common dso_local global i32 0, align 4
@assign_context = common dso_local global i32 0, align 4
@assign_context_failed = common dso_local global i32 0, align 4
@free_context = common dso_local global i32 0, align 4
@load_user_context = common dso_local global i32 0, align 4
@load_kernel_context = common dso_local global i32 0, align 4
@lock_kernel_context = common dso_local global i32 0, align 4
@unlock_kernel_context = common dso_local global i32 0, align 4
@steal_user_context = common dso_local global i32 0, align 4
@steal_kernel_context = common dso_local global i32 0, align 4
@steal_context_failed = common dso_local global i32 0, align 4
@nopfn = common dso_local global i32 0, align 4
@asid_new = common dso_local global i32 0, align 4
@asid_next = common dso_local global i32 0, align 4
@asid_wrap = common dso_local global i32 0, align 4
@asid_reuse = common dso_local global i32 0, align 4
@intr = common dso_local global i32 0, align 4
@intr_cbr = common dso_local global i32 0, align 4
@intr_tfh = common dso_local global i32 0, align 4
@intr_spurious = common dso_local global i32 0, align 4
@intr_mm_lock_failed = common dso_local global i32 0, align 4
@call_os = common dso_local global i32 0, align 4
@call_os_wait_queue = common dso_local global i32 0, align 4
@user_flush_tlb = common dso_local global i32 0, align 4
@user_unload_context = common dso_local global i32 0, align 4
@user_exception = common dso_local global i32 0, align 4
@set_context_option = common dso_local global i32 0, align 4
@check_context_retarget_intr = common dso_local global i32 0, align 4
@check_context_unload = common dso_local global i32 0, align 4
@tlb_dropin = common dso_local global i32 0, align 4
@tlb_preload_page = common dso_local global i32 0, align 4
@tlb_dropin_fail_no_asid = common dso_local global i32 0, align 4
@tlb_dropin_fail_upm = common dso_local global i32 0, align 4
@tlb_dropin_fail_invalid = common dso_local global i32 0, align 4
@tlb_dropin_fail_range_active = common dso_local global i32 0, align 4
@tlb_dropin_fail_idle = common dso_local global i32 0, align 4
@tlb_dropin_fail_fmm = common dso_local global i32 0, align 4
@tlb_dropin_fail_no_exception = common dso_local global i32 0, align 4
@tfh_stale_on_fault = common dso_local global i32 0, align 4
@mmu_invalidate_range = common dso_local global i32 0, align 4
@mmu_invalidate_page = common dso_local global i32 0, align 4
@flush_tlb = common dso_local global i32 0, align 4
@flush_tlb_gru = common dso_local global i32 0, align 4
@flush_tlb_gru_tgh = common dso_local global i32 0, align 4
@flush_tlb_gru_zero_asid = common dso_local global i32 0, align 4
@copy_gpa = common dso_local global i32 0, align 4
@read_gpa = common dso_local global i32 0, align 4
@mesq_receive = common dso_local global i32 0, align 4
@mesq_receive_none = common dso_local global i32 0, align 4
@mesq_send = common dso_local global i32 0, align 4
@mesq_send_failed = common dso_local global i32 0, align 4
@mesq_noop = common dso_local global i32 0, align 4
@mesq_send_unexpected_error = common dso_local global i32 0, align 4
@mesq_send_lb_overflow = common dso_local global i32 0, align 4
@mesq_send_qlimit_reached = common dso_local global i32 0, align 4
@mesq_send_amo_nacked = common dso_local global i32 0, align 4
@mesq_send_put_nacked = common dso_local global i32 0, align 4
@mesq_qf_locked = common dso_local global i32 0, align 4
@mesq_qf_noop_not_full = common dso_local global i32 0, align 4
@mesq_qf_switch_head_failed = common dso_local global i32 0, align 4
@mesq_qf_unexpected_error = common dso_local global i32 0, align 4
@mesq_noop_unexpected_error = common dso_local global i32 0, align 4
@mesq_noop_lb_overflow = common dso_local global i32 0, align 4
@mesq_noop_qlimit_reached = common dso_local global i32 0, align 4
@mesq_noop_amo_nacked = common dso_local global i32 0, align 4
@mesq_noop_put_nacked = common dso_local global i32 0, align 4
@mesq_noop_page_overflow = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (%struct.seq_file*, i8*)* @statistics_show to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @statistics_show(%struct.seq_file* %0, i8* %1) #0 {
  %3 = alloca %struct.seq_file*, align 8
  %4 = alloca i8*, align 8
  store %struct.seq_file* %0, %struct.seq_file** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %6 = load i32, i32* @vdata_alloc, align 4
  %7 = call i32 @printstat(%struct.seq_file* %5, i32 %6)
  %8 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %9 = load i32, i32* @vdata_free, align 4
  %10 = call i32 @printstat(%struct.seq_file* %8, i32 %9)
  %11 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %12 = load i32, i32* @gts_alloc, align 4
  %13 = call i32 @printstat(%struct.seq_file* %11, i32 %12)
  %14 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %15 = load i32, i32* @gts_free, align 4
  %16 = call i32 @printstat(%struct.seq_file* %14, i32 %15)
  %17 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %18 = load i32, i32* @gms_alloc, align 4
  %19 = call i32 @printstat(%struct.seq_file* %17, i32 %18)
  %20 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %21 = load i32, i32* @gms_free, align 4
  %22 = call i32 @printstat(%struct.seq_file* %20, i32 %21)
  %23 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %24 = load i32, i32* @gts_double_allocate, align 4
  %25 = call i32 @printstat(%struct.seq_file* %23, i32 %24)
  %26 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %27 = load i32, i32* @assign_context, align 4
  %28 = call i32 @printstat(%struct.seq_file* %26, i32 %27)
  %29 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %30 = load i32, i32* @assign_context_failed, align 4
  %31 = call i32 @printstat(%struct.seq_file* %29, i32 %30)
  %32 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %33 = load i32, i32* @free_context, align 4
  %34 = call i32 @printstat(%struct.seq_file* %32, i32 %33)
  %35 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %36 = load i32, i32* @load_user_context, align 4
  %37 = call i32 @printstat(%struct.seq_file* %35, i32 %36)
  %38 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %39 = load i32, i32* @load_kernel_context, align 4
  %40 = call i32 @printstat(%struct.seq_file* %38, i32 %39)
  %41 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %42 = load i32, i32* @lock_kernel_context, align 4
  %43 = call i32 @printstat(%struct.seq_file* %41, i32 %42)
  %44 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %45 = load i32, i32* @unlock_kernel_context, align 4
  %46 = call i32 @printstat(%struct.seq_file* %44, i32 %45)
  %47 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %48 = load i32, i32* @steal_user_context, align 4
  %49 = call i32 @printstat(%struct.seq_file* %47, i32 %48)
  %50 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %51 = load i32, i32* @steal_kernel_context, align 4
  %52 = call i32 @printstat(%struct.seq_file* %50, i32 %51)
  %53 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %54 = load i32, i32* @steal_context_failed, align 4
  %55 = call i32 @printstat(%struct.seq_file* %53, i32 %54)
  %56 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %57 = load i32, i32* @nopfn, align 4
  %58 = call i32 @printstat(%struct.seq_file* %56, i32 %57)
  %59 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %60 = load i32, i32* @asid_new, align 4
  %61 = call i32 @printstat(%struct.seq_file* %59, i32 %60)
  %62 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %63 = load i32, i32* @asid_next, align 4
  %64 = call i32 @printstat(%struct.seq_file* %62, i32 %63)
  %65 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %66 = load i32, i32* @asid_wrap, align 4
  %67 = call i32 @printstat(%struct.seq_file* %65, i32 %66)
  %68 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %69 = load i32, i32* @asid_reuse, align 4
  %70 = call i32 @printstat(%struct.seq_file* %68, i32 %69)
  %71 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %72 = load i32, i32* @intr, align 4
  %73 = call i32 @printstat(%struct.seq_file* %71, i32 %72)
  %74 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %75 = load i32, i32* @intr_cbr, align 4
  %76 = call i32 @printstat(%struct.seq_file* %74, i32 %75)
  %77 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %78 = load i32, i32* @intr_tfh, align 4
  %79 = call i32 @printstat(%struct.seq_file* %77, i32 %78)
  %80 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %81 = load i32, i32* @intr_spurious, align 4
  %82 = call i32 @printstat(%struct.seq_file* %80, i32 %81)
  %83 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %84 = load i32, i32* @intr_mm_lock_failed, align 4
  %85 = call i32 @printstat(%struct.seq_file* %83, i32 %84)
  %86 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %87 = load i32, i32* @call_os, align 4
  %88 = call i32 @printstat(%struct.seq_file* %86, i32 %87)
  %89 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %90 = load i32, i32* @call_os_wait_queue, align 4
  %91 = call i32 @printstat(%struct.seq_file* %89, i32 %90)
  %92 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %93 = load i32, i32* @user_flush_tlb, align 4
  %94 = call i32 @printstat(%struct.seq_file* %92, i32 %93)
  %95 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %96 = load i32, i32* @user_unload_context, align 4
  %97 = call i32 @printstat(%struct.seq_file* %95, i32 %96)
  %98 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %99 = load i32, i32* @user_exception, align 4
  %100 = call i32 @printstat(%struct.seq_file* %98, i32 %99)
  %101 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %102 = load i32, i32* @set_context_option, align 4
  %103 = call i32 @printstat(%struct.seq_file* %101, i32 %102)
  %104 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %105 = load i32, i32* @check_context_retarget_intr, align 4
  %106 = call i32 @printstat(%struct.seq_file* %104, i32 %105)
  %107 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %108 = load i32, i32* @check_context_unload, align 4
  %109 = call i32 @printstat(%struct.seq_file* %107, i32 %108)
  %110 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %111 = load i32, i32* @tlb_dropin, align 4
  %112 = call i32 @printstat(%struct.seq_file* %110, i32 %111)
  %113 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %114 = load i32, i32* @tlb_preload_page, align 4
  %115 = call i32 @printstat(%struct.seq_file* %113, i32 %114)
  %116 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %117 = load i32, i32* @tlb_dropin_fail_no_asid, align 4
  %118 = call i32 @printstat(%struct.seq_file* %116, i32 %117)
  %119 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %120 = load i32, i32* @tlb_dropin_fail_upm, align 4
  %121 = call i32 @printstat(%struct.seq_file* %119, i32 %120)
  %122 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %123 = load i32, i32* @tlb_dropin_fail_invalid, align 4
  %124 = call i32 @printstat(%struct.seq_file* %122, i32 %123)
  %125 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %126 = load i32, i32* @tlb_dropin_fail_range_active, align 4
  %127 = call i32 @printstat(%struct.seq_file* %125, i32 %126)
  %128 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %129 = load i32, i32* @tlb_dropin_fail_idle, align 4
  %130 = call i32 @printstat(%struct.seq_file* %128, i32 %129)
  %131 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %132 = load i32, i32* @tlb_dropin_fail_fmm, align 4
  %133 = call i32 @printstat(%struct.seq_file* %131, i32 %132)
  %134 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %135 = load i32, i32* @tlb_dropin_fail_no_exception, align 4
  %136 = call i32 @printstat(%struct.seq_file* %134, i32 %135)
  %137 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %138 = load i32, i32* @tfh_stale_on_fault, align 4
  %139 = call i32 @printstat(%struct.seq_file* %137, i32 %138)
  %140 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %141 = load i32, i32* @mmu_invalidate_range, align 4
  %142 = call i32 @printstat(%struct.seq_file* %140, i32 %141)
  %143 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %144 = load i32, i32* @mmu_invalidate_page, align 4
  %145 = call i32 @printstat(%struct.seq_file* %143, i32 %144)
  %146 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %147 = load i32, i32* @flush_tlb, align 4
  %148 = call i32 @printstat(%struct.seq_file* %146, i32 %147)
  %149 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %150 = load i32, i32* @flush_tlb_gru, align 4
  %151 = call i32 @printstat(%struct.seq_file* %149, i32 %150)
  %152 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %153 = load i32, i32* @flush_tlb_gru_tgh, align 4
  %154 = call i32 @printstat(%struct.seq_file* %152, i32 %153)
  %155 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %156 = load i32, i32* @flush_tlb_gru_zero_asid, align 4
  %157 = call i32 @printstat(%struct.seq_file* %155, i32 %156)
  %158 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %159 = load i32, i32* @copy_gpa, align 4
  %160 = call i32 @printstat(%struct.seq_file* %158, i32 %159)
  %161 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %162 = load i32, i32* @read_gpa, align 4
  %163 = call i32 @printstat(%struct.seq_file* %161, i32 %162)
  %164 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %165 = load i32, i32* @mesq_receive, align 4
  %166 = call i32 @printstat(%struct.seq_file* %164, i32 %165)
  %167 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %168 = load i32, i32* @mesq_receive_none, align 4
  %169 = call i32 @printstat(%struct.seq_file* %167, i32 %168)
  %170 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %171 = load i32, i32* @mesq_send, align 4
  %172 = call i32 @printstat(%struct.seq_file* %170, i32 %171)
  %173 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %174 = load i32, i32* @mesq_send_failed, align 4
  %175 = call i32 @printstat(%struct.seq_file* %173, i32 %174)
  %176 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %177 = load i32, i32* @mesq_noop, align 4
  %178 = call i32 @printstat(%struct.seq_file* %176, i32 %177)
  %179 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %180 = load i32, i32* @mesq_send_unexpected_error, align 4
  %181 = call i32 @printstat(%struct.seq_file* %179, i32 %180)
  %182 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %183 = load i32, i32* @mesq_send_lb_overflow, align 4
  %184 = call i32 @printstat(%struct.seq_file* %182, i32 %183)
  %185 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %186 = load i32, i32* @mesq_send_qlimit_reached, align 4
  %187 = call i32 @printstat(%struct.seq_file* %185, i32 %186)
  %188 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %189 = load i32, i32* @mesq_send_amo_nacked, align 4
  %190 = call i32 @printstat(%struct.seq_file* %188, i32 %189)
  %191 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %192 = load i32, i32* @mesq_send_put_nacked, align 4
  %193 = call i32 @printstat(%struct.seq_file* %191, i32 %192)
  %194 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %195 = load i32, i32* @mesq_qf_locked, align 4
  %196 = call i32 @printstat(%struct.seq_file* %194, i32 %195)
  %197 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %198 = load i32, i32* @mesq_qf_noop_not_full, align 4
  %199 = call i32 @printstat(%struct.seq_file* %197, i32 %198)
  %200 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %201 = load i32, i32* @mesq_qf_switch_head_failed, align 4
  %202 = call i32 @printstat(%struct.seq_file* %200, i32 %201)
  %203 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %204 = load i32, i32* @mesq_qf_unexpected_error, align 4
  %205 = call i32 @printstat(%struct.seq_file* %203, i32 %204)
  %206 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %207 = load i32, i32* @mesq_noop_unexpected_error, align 4
  %208 = call i32 @printstat(%struct.seq_file* %206, i32 %207)
  %209 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %210 = load i32, i32* @mesq_noop_lb_overflow, align 4
  %211 = call i32 @printstat(%struct.seq_file* %209, i32 %210)
  %212 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %213 = load i32, i32* @mesq_noop_qlimit_reached, align 4
  %214 = call i32 @printstat(%struct.seq_file* %212, i32 %213)
  %215 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %216 = load i32, i32* @mesq_noop_amo_nacked, align 4
  %217 = call i32 @printstat(%struct.seq_file* %215, i32 %216)
  %218 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %219 = load i32, i32* @mesq_noop_put_nacked, align 4
  %220 = call i32 @printstat(%struct.seq_file* %218, i32 %219)
  %221 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %222 = load i32, i32* @mesq_noop_page_overflow, align 4
  %223 = call i32 @printstat(%struct.seq_file* %221, i32 %222)
  ret i32 0
}

declare dso_local i32 @printstat(%struct.seq_file*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
