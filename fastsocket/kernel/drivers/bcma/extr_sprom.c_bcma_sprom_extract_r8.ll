; ModuleID = '/home/carl/AnghaBench/fastsocket/kernel/drivers/bcma/extr_sprom.c_bcma_sprom_extract_r8.c'
source_filename = "/home/carl/AnghaBench/fastsocket/kernel/drivers/bcma/extr_sprom.c_bcma_sprom_extract_r8.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_11__ = type { i32*, i32*, i32*, i32, i32, i32, i32, i32*, i32, i32 }
%struct.TYPE_10__ = type { %struct.TYPE_9__, %struct.TYPE_8__ }
%struct.TYPE_9__ = type { i32, i32, i32, i32, i32 }
%struct.TYPE_8__ = type { i32, i32, i32, i32, i32 }
%struct.TYPE_12__ = type { i32, i32, i32, i32 }
%struct.bcma_bus = type { %struct.TYPE_7__ }
%struct.TYPE_7__ = type { i32*, i32, i64 }

@SSB_SROM8_PWR_INFO_CORE0 = common dso_local global i32 0, align 4
@SSB_SROM8_PWR_INFO_CORE1 = common dso_local global i32 0, align 4
@SSB_SROM8_PWR_INFO_CORE2 = common dso_local global i32 0, align 4
@SSB_SROM8_PWR_INFO_CORE3 = common dso_local global i32 0, align 4
@SSB_SPROMSIZE_WORDS_R4 = common dso_local global i32 0, align 4
@SSB_SPROM_REVISION_REV = common dso_local global i32 0, align 4
@SSB_SPROM8_IL0MAC = common dso_local global i32 0, align 4
@board_rev = common dso_local global i32 0, align 4
@SSB_SPROM8_BOARDREV = common dso_local global i32 0, align 4
@txpid2g = common dso_local global i32* null, align 8
@SSB_SPROM4_TXPID2G01 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID2G0 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID2G0_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID2G1 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID2G1_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID2G23 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID2G2 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID2G2_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID2G3 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID2G3_SHIFT = common dso_local global i32 0, align 4
@txpid5gl = common dso_local global i32* null, align 8
@SSB_SPROM4_TXPID5GL01 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GL0 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GL0_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GL1 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GL1_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GL23 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GL2 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GL2_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GL3 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GL3_SHIFT = common dso_local global i32 0, align 4
@txpid5g = common dso_local global i32* null, align 8
@SSB_SPROM4_TXPID5G01 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5G0 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5G0_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5G1 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5G1_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5G23 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5G2 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5G2_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5G3 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5G3_SHIFT = common dso_local global i32 0, align 4
@txpid5gh = common dso_local global i32* null, align 8
@SSB_SPROM4_TXPID5GH01 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GH0 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GH0_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GH1 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GH1_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GH23 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GH2 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GH2_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GH3 = common dso_local global i32 0, align 4
@SSB_SPROM4_TXPID5GH3_SHIFT = common dso_local global i32 0, align 4
@boardflags_lo = common dso_local global i32 0, align 4
@SSB_SPROM8_BFLLO = common dso_local global i32 0, align 4
@boardflags_hi = common dso_local global i32 0, align 4
@SSB_SPROM8_BFLHI = common dso_local global i32 0, align 4
@boardflags2_lo = common dso_local global i32 0, align 4
@SSB_SPROM8_BFL2LO = common dso_local global i32 0, align 4
@boardflags2_hi = common dso_local global i32 0, align 4
@SSB_SPROM8_BFL2HI = common dso_local global i32 0, align 4
@alpha2 = common dso_local global i32* null, align 8
@SSB_SPROM8_CCODE = common dso_local global i32 0, align 4
@core_pwr_info = common dso_local global %struct.TYPE_11__* null, align 8
@SSB_SROM8_2G_MAXP_ITSSI = common dso_local global i32 0, align 4
@SSB_SPROM8_2G_ITSSI = common dso_local global i32 0, align 4
@SSB_SPROM8_2G_ITSSI_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_2G_MAXP = common dso_local global i32 0, align 4
@SSB_SROM8_2G_PA_0 = common dso_local global i32 0, align 4
@SSB_SROM8_2G_PA_1 = common dso_local global i32 0, align 4
@SSB_SROM8_2G_PA_2 = common dso_local global i32 0, align 4
@SSB_SROM8_5G_MAXP_ITSSI = common dso_local global i32 0, align 4
@SSB_SPROM8_5G_ITSSI = common dso_local global i32 0, align 4
@SSB_SPROM8_5G_ITSSI_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_5G_MAXP = common dso_local global i32 0, align 4
@SSB_SPROM8_5GHL_MAXP = common dso_local global i32 0, align 4
@SSB_SPROM8_5GH_MAXP = common dso_local global i32 0, align 4
@SSB_SPROM8_5GL_MAXP = common dso_local global i32 0, align 4
@SSB_SPROM8_5GL_MAXP_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_5GL_PA_0 = common dso_local global i32 0, align 4
@SSB_SROM8_5GL_PA_1 = common dso_local global i32 0, align 4
@SSB_SROM8_5GL_PA_2 = common dso_local global i32 0, align 4
@SSB_SROM8_5G_PA_0 = common dso_local global i32 0, align 4
@SSB_SROM8_5G_PA_1 = common dso_local global i32 0, align 4
@SSB_SROM8_5G_PA_2 = common dso_local global i32 0, align 4
@SSB_SROM8_5GH_PA_0 = common dso_local global i32 0, align 4
@SSB_SROM8_5GH_PA_1 = common dso_local global i32 0, align 4
@SSB_SROM8_5GH_PA_2 = common dso_local global i32 0, align 4
@fem = common dso_local global %struct.TYPE_10__ zeroinitializer, align 4
@SSB_SPROM8_FEM2G = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_TSSIPOS = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_TSSIPOS_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_EXTPA_GAIN = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_EXTPA_GAIN_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_PDET_RANGE = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_PDET_RANGE_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_TR_ISO = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_TR_ISO_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_ANTSWLUT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_ANTSWLUT_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_FEM5G = common dso_local global i32 0, align 4
@ant_available_a = common dso_local global i32 0, align 4
@SSB_SPROM8_ANTAVAIL = common dso_local global i32 0, align 4
@SSB_SPROM8_ANTAVAIL_A = common dso_local global i32 0, align 4
@SSB_SPROM8_ANTAVAIL_A_SHIFT = common dso_local global i32 0, align 4
@ant_available_bg = common dso_local global i32 0, align 4
@SSB_SPROM8_ANTAVAIL_BG = common dso_local global i32 0, align 4
@SSB_SPROM8_ANTAVAIL_BG_SHIFT = common dso_local global i32 0, align 4
@maxpwr_bg = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_BG = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_BG_MASK = common dso_local global i32 0, align 4
@itssi_bg = common dso_local global i32 0, align 4
@SSB_SPROM8_ITSSI_BG = common dso_local global i32 0, align 4
@SSB_SPROM8_ITSSI_BG_SHIFT = common dso_local global i32 0, align 4
@maxpwr_a = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_A = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_A_MASK = common dso_local global i32 0, align 4
@itssi_a = common dso_local global i32 0, align 4
@SSB_SPROM8_ITSSI_A = common dso_local global i32 0, align 4
@SSB_SPROM8_ITSSI_A_SHIFT = common dso_local global i32 0, align 4
@maxpwr_ah = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_AHL = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_AH_MASK = common dso_local global i32 0, align 4
@maxpwr_al = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_AL_MASK = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_AL_SHIFT = common dso_local global i32 0, align 4
@gpio0 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOA = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOA_P0 = common dso_local global i32 0, align 4
@gpio1 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOA_P1 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOA_P1_SHIFT = common dso_local global i32 0, align 4
@gpio2 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOB = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOB_P2 = common dso_local global i32 0, align 4
@gpio3 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOB_P3 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOB_P3_SHIFT = common dso_local global i32 0, align 4
@tri2g = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI25G = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI2G = common dso_local global i32 0, align 4
@tri5g = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5G = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5G_SHIFT = common dso_local global i32 0, align 4
@tri5gl = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5GHL = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5GL = common dso_local global i32 0, align 4
@tri5gh = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5GH = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5GH_SHIFT = common dso_local global i32 0, align 4
@rxpo2g = common dso_local global i32 0, align 4
@SSB_SPROM8_RXPO = common dso_local global i32 0, align 4
@SSB_SPROM8_RXPO2G = common dso_local global i32 0, align 4
@SSB_SPROM8_RXPO2G_SHIFT = common dso_local global i32 0, align 4
@rxpo5g = common dso_local global i32 0, align 4
@SSB_SPROM8_RXPO5G = common dso_local global i32 0, align 4
@SSB_SPROM8_RXPO5G_SHIFT = common dso_local global i32 0, align 4
@rssismf2g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSIPARM2G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMF2G = common dso_local global i32 0, align 4
@rssismc2g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMC2G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMC2G_SHIFT = common dso_local global i32 0, align 4
@rssisav2g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISAV2G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISAV2G_SHIFT = common dso_local global i32 0, align 4
@bxa2g = common dso_local global i32 0, align 4
@SSB_SPROM8_BXA2G = common dso_local global i32 0, align 4
@SSB_SPROM8_BXA2G_SHIFT = common dso_local global i32 0, align 4
@rssismf5g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSIPARM5G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMF5G = common dso_local global i32 0, align 4
@rssismc5g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMC5G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMC5G_SHIFT = common dso_local global i32 0, align 4
@rssisav5g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISAV5G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISAV5G_SHIFT = common dso_local global i32 0, align 4
@bxa5g = common dso_local global i32 0, align 4
@SSB_SPROM8_BXA5G = common dso_local global i32 0, align 4
@SSB_SPROM8_BXA5G_SHIFT = common dso_local global i32 0, align 4
@pa0b0 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA0B0 = common dso_local global i32 0, align 4
@pa0b1 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA0B1 = common dso_local global i32 0, align 4
@pa0b2 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA0B2 = common dso_local global i32 0, align 4
@pa1b0 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1B0 = common dso_local global i32 0, align 4
@pa1b1 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1B1 = common dso_local global i32 0, align 4
@pa1b2 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1B2 = common dso_local global i32 0, align 4
@pa1lob0 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1LOB0 = common dso_local global i32 0, align 4
@pa1lob1 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1LOB1 = common dso_local global i32 0, align 4
@pa1lob2 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1LOB2 = common dso_local global i32 0, align 4
@pa1hib0 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1HIB0 = common dso_local global i32 0, align 4
@pa1hib1 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1HIB1 = common dso_local global i32 0, align 4
@pa1hib2 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1HIB2 = common dso_local global i32 0, align 4
@cck2gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_CCK2GPO = common dso_local global i32 0, align 4
@ofdm2gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_OFDM2GPO = common dso_local global i32 0, align 4
@ofdm5glpo = common dso_local global i32 0, align 4
@SSB_SPROM8_OFDM5GLPO = common dso_local global i32 0, align 4
@ofdm5gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_OFDM5GPO = common dso_local global i32 0, align 4
@ofdm5ghpo = common dso_local global i32 0, align 4
@SSB_SPROM8_OFDM5GHPO = common dso_local global i32 0, align 4
@antenna_gain = common dso_local global %struct.TYPE_12__ zeroinitializer, align 4
@SSB_SPROM8_AGAIN01 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN0 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN0_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN1 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN1_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN23 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN2 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN2_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN3 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN3_SHIFT = common dso_local global i32 0, align 4
@leddc_on_time = common dso_local global i32 0, align 4
@SSB_SPROM8_LEDDC = common dso_local global i32 0, align 4
@SSB_SPROM8_LEDDC_ON = common dso_local global i32 0, align 4
@SSB_SPROM8_LEDDC_ON_SHIFT = common dso_local global i32 0, align 4
@leddc_off_time = common dso_local global i32 0, align 4
@SSB_SPROM8_LEDDC_OFF = common dso_local global i32 0, align 4
@SSB_SPROM8_LEDDC_OFF_SHIFT = common dso_local global i32 0, align 4
@txchain = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_TXCHAIN = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_TXCHAIN_SHIFT = common dso_local global i32 0, align 4
@rxchain = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_RXCHAIN = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_RXCHAIN_SHIFT = common dso_local global i32 0, align 4
@antswitch = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_SWITCH = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_SWITCH_SHIFT = common dso_local global i32 0, align 4
@opo = common dso_local global i32 0, align 4
@mcs2gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_2G_MCSPO = common dso_local global i32 0, align 4
@mcs5gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_5G_MCSPO = common dso_local global i32 0, align 4
@mcs5glpo = common dso_local global i32 0, align 4
@SSB_SPROM8_5GL_MCSPO = common dso_local global i32 0, align 4
@mcs5ghpo = common dso_local global i32 0, align 4
@SSB_SPROM8_5GH_MCSPO = common dso_local global i32 0, align 4
@rawtempsense = common dso_local global i32 0, align 4
@SSB_SPROM8_RAWTS = common dso_local global i32 0, align 4
@SSB_SPROM8_RAWTS_RAWTEMP = common dso_local global i32 0, align 4
@SSB_SPROM8_RAWTS_RAWTEMP_SHIFT = common dso_local global i32 0, align 4
@measpower = common dso_local global i32 0, align 4
@SSB_SPROM8_RAWTS_MEASPOWER = common dso_local global i32 0, align 4
@SSB_SPROM8_RAWTS_MEASPOWER_SHIFT = common dso_local global i32 0, align 4
@tempsense_slope = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMP_SLOPE = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMP_SLOPE_SHIFT = common dso_local global i32 0, align 4
@tempcorrx = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMPCORRX = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMPCORRX_SHIFT = common dso_local global i32 0, align 4
@tempsense_option = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMP_OPTION = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMP_OPTION_SHIFT = common dso_local global i32 0, align 4
@freqoffset_corr = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_FREQ_CORR = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_FREQ_CORR_SHIFT = common dso_local global i32 0, align 4
@iqcal_swp_dis = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_IQCAL_SWP = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_IQCAL_SWP_SHIFT = common dso_local global i32 0, align 4
@hw_iqcal_en = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_HW_IQCAL = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_HW_IQCAL_SHIFT = common dso_local global i32 0, align 4
@bw40po = common dso_local global i32 0, align 4
@SSB_SPROM8_BW40PO = common dso_local global i32 0, align 4
@cddpo = common dso_local global i32 0, align 4
@SSB_SPROM8_CDDPO = common dso_local global i32 0, align 4
@stbcpo = common dso_local global i32 0, align 4
@SSB_SPROM8_STBCPO = common dso_local global i32 0, align 4
@bwduppo = common dso_local global i32 0, align 4
@SSB_SPROM8_BWDUPPO = common dso_local global i32 0, align 4
@tempthresh = common dso_local global i32 0, align 4
@SSB_SPROM8_THERMAL = common dso_local global i32 0, align 4
@SSB_SPROM8_THERMAL_TRESH = common dso_local global i32 0, align 4
@SSB_SPROM8_THERMAL_TRESH_SHIFT = common dso_local global i32 0, align 4
@tempoffset = common dso_local global i32 0, align 4
@SSB_SPROM8_THERMAL_OFFSET = common dso_local global i32 0, align 4
@SSB_SPROM8_THERMAL_OFFSET_SHIFT = common dso_local global i32 0, align 4
@phycal_tempdelta = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_PHYCAL = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_PHYCAL_SHIFT = common dso_local global i32 0, align 4
@temps_period = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_PERIOD = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_PERIOD_SHIFT = common dso_local global i32 0, align 4
@temps_hysteresis = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_HYSTERESIS = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_HYSTERESIS_SHIFT = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.bcma_bus*, i32*)* @bcma_sprom_extract_r8 to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @bcma_sprom_extract_r8(%struct.bcma_bus* %0, i32* %1) #0 {
  %3 = alloca %struct.bcma_bus*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca [4 x i32], align 16
  store %struct.bcma_bus* %0, %struct.bcma_bus** %3, align 8
  store i32* %1, i32** %4, align 8
  %9 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 0
  %10 = load i32, i32* @SSB_SROM8_PWR_INFO_CORE0, align 4
  store i32 %10, i32* %9, align 4
  %11 = getelementptr inbounds i32, i32* %9, i64 1
  %12 = load i32, i32* @SSB_SROM8_PWR_INFO_CORE1, align 4
  store i32 %12, i32* %11, align 4
  %13 = getelementptr inbounds i32, i32* %11, i64 1
  %14 = load i32, i32* @SSB_SROM8_PWR_INFO_CORE2, align 4
  store i32 %14, i32* %13, align 4
  %15 = getelementptr inbounds i32, i32* %13, i64 1
  %16 = load i32, i32* @SSB_SROM8_PWR_INFO_CORE3, align 4
  store i32 %16, i32* %15, align 4
  %17 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 0
  %18 = call i32 @ARRAY_SIZE(i32* %17)
  %19 = load %struct.bcma_bus*, %struct.bcma_bus** %3, align 8
  %20 = getelementptr inbounds %struct.bcma_bus, %struct.bcma_bus* %19, i32 0, i32 0
  %21 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %20, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = call i32 @ARRAY_SIZE(i32* %22)
  %24 = icmp ne i32 %18, %23
  %25 = zext i1 %24 to i32
  %26 = call i32 @BUILD_BUG_ON(i32 %25)
  %27 = load i32*, i32** %4, align 8
  %28 = load i32, i32* @SSB_SPROMSIZE_WORDS_R4, align 4
  %29 = sub nsw i32 %28, 1
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i32, i32* %27, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = load i32, i32* @SSB_SPROM_REVISION_REV, align 4
  %34 = and i32 %32, %33
  %35 = load %struct.bcma_bus*, %struct.bcma_bus** %3, align 8
  %36 = getelementptr inbounds %struct.bcma_bus, %struct.bcma_bus* %35, i32 0, i32 0
  %37 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %36, i32 0, i32 1
  store i32 %34, i32* %37, align 8
  store i32 0, i32* %7, align 4
  br label %38

38:                                               ; preds = %60, %2
  %39 = load i32, i32* %7, align 4
  %40 = icmp slt i32 %39, 3
  br i1 %40, label %41, label %63

41:                                               ; preds = %38
  %42 = load i32*, i32** %4, align 8
  %43 = load i32, i32* @SSB_SPROM8_IL0MAC, align 4
  %44 = call i32 @SPOFF(i32 %43)
  %45 = load i32, i32* %7, align 4
  %46 = add nsw i32 %44, %45
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i32, i32* %42, i64 %47
  %49 = load i32, i32* %48, align 4
  store i32 %49, i32* %5, align 4
  %50 = load i32, i32* %5, align 4
  %51 = call i32 @cpu_to_be16(i32 %50)
  %52 = load %struct.bcma_bus*, %struct.bcma_bus** %3, align 8
  %53 = getelementptr inbounds %struct.bcma_bus, %struct.bcma_bus* %52, i32 0, i32 0
  %54 = getelementptr inbounds %struct.TYPE_7__, %struct.TYPE_7__* %53, i32 0, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = inttoptr i64 %55 to i32*
  %57 = load i32, i32* %7, align 4
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i32, i32* %56, i64 %58
  store i32 %51, i32* %59, align 4
  br label %60

60:                                               ; preds = %41
  %61 = load i32, i32* %7, align 4
  %62 = add nsw i32 %61, 1
  store i32 %62, i32* %7, align 4
  br label %38

63:                                               ; preds = %38
  %64 = load i32, i32* @board_rev, align 4
  %65 = load i32, i32* @SSB_SPROM8_BOARDREV, align 4
  %66 = call i32 @SPEX(i32 %64, i32 %65, i32 -1, i32 0)
  %67 = load i32*, i32** @txpid2g, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 0
  %69 = load i32, i32* %68, align 4
  %70 = load i32, i32* @SSB_SPROM4_TXPID2G01, align 4
  %71 = load i32, i32* @SSB_SPROM4_TXPID2G0, align 4
  %72 = load i32, i32* @SSB_SPROM4_TXPID2G0_SHIFT, align 4
  %73 = call i32 @SPEX(i32 %69, i32 %70, i32 %71, i32 %72)
  %74 = load i32*, i32** @txpid2g, align 8
  %75 = getelementptr inbounds i32, i32* %74, i64 1
  %76 = load i32, i32* %75, align 4
  %77 = load i32, i32* @SSB_SPROM4_TXPID2G01, align 4
  %78 = load i32, i32* @SSB_SPROM4_TXPID2G1, align 4
  %79 = load i32, i32* @SSB_SPROM4_TXPID2G1_SHIFT, align 4
  %80 = call i32 @SPEX(i32 %76, i32 %77, i32 %78, i32 %79)
  %81 = load i32*, i32** @txpid2g, align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 2
  %83 = load i32, i32* %82, align 4
  %84 = load i32, i32* @SSB_SPROM4_TXPID2G23, align 4
  %85 = load i32, i32* @SSB_SPROM4_TXPID2G2, align 4
  %86 = load i32, i32* @SSB_SPROM4_TXPID2G2_SHIFT, align 4
  %87 = call i32 @SPEX(i32 %83, i32 %84, i32 %85, i32 %86)
  %88 = load i32*, i32** @txpid2g, align 8
  %89 = getelementptr inbounds i32, i32* %88, i64 3
  %90 = load i32, i32* %89, align 4
  %91 = load i32, i32* @SSB_SPROM4_TXPID2G23, align 4
  %92 = load i32, i32* @SSB_SPROM4_TXPID2G3, align 4
  %93 = load i32, i32* @SSB_SPROM4_TXPID2G3_SHIFT, align 4
  %94 = call i32 @SPEX(i32 %90, i32 %91, i32 %92, i32 %93)
  %95 = load i32*, i32** @txpid5gl, align 8
  %96 = getelementptr inbounds i32, i32* %95, i64 0
  %97 = load i32, i32* %96, align 4
  %98 = load i32, i32* @SSB_SPROM4_TXPID5GL01, align 4
  %99 = load i32, i32* @SSB_SPROM4_TXPID5GL0, align 4
  %100 = load i32, i32* @SSB_SPROM4_TXPID5GL0_SHIFT, align 4
  %101 = call i32 @SPEX(i32 %97, i32 %98, i32 %99, i32 %100)
  %102 = load i32*, i32** @txpid5gl, align 8
  %103 = getelementptr inbounds i32, i32* %102, i64 1
  %104 = load i32, i32* %103, align 4
  %105 = load i32, i32* @SSB_SPROM4_TXPID5GL01, align 4
  %106 = load i32, i32* @SSB_SPROM4_TXPID5GL1, align 4
  %107 = load i32, i32* @SSB_SPROM4_TXPID5GL1_SHIFT, align 4
  %108 = call i32 @SPEX(i32 %104, i32 %105, i32 %106, i32 %107)
  %109 = load i32*, i32** @txpid5gl, align 8
  %110 = getelementptr inbounds i32, i32* %109, i64 2
  %111 = load i32, i32* %110, align 4
  %112 = load i32, i32* @SSB_SPROM4_TXPID5GL23, align 4
  %113 = load i32, i32* @SSB_SPROM4_TXPID5GL2, align 4
  %114 = load i32, i32* @SSB_SPROM4_TXPID5GL2_SHIFT, align 4
  %115 = call i32 @SPEX(i32 %111, i32 %112, i32 %113, i32 %114)
  %116 = load i32*, i32** @txpid5gl, align 8
  %117 = getelementptr inbounds i32, i32* %116, i64 3
  %118 = load i32, i32* %117, align 4
  %119 = load i32, i32* @SSB_SPROM4_TXPID5GL23, align 4
  %120 = load i32, i32* @SSB_SPROM4_TXPID5GL3, align 4
  %121 = load i32, i32* @SSB_SPROM4_TXPID5GL3_SHIFT, align 4
  %122 = call i32 @SPEX(i32 %118, i32 %119, i32 %120, i32 %121)
  %123 = load i32*, i32** @txpid5g, align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 0
  %125 = load i32, i32* %124, align 4
  %126 = load i32, i32* @SSB_SPROM4_TXPID5G01, align 4
  %127 = load i32, i32* @SSB_SPROM4_TXPID5G0, align 4
  %128 = load i32, i32* @SSB_SPROM4_TXPID5G0_SHIFT, align 4
  %129 = call i32 @SPEX(i32 %125, i32 %126, i32 %127, i32 %128)
  %130 = load i32*, i32** @txpid5g, align 8
  %131 = getelementptr inbounds i32, i32* %130, i64 1
  %132 = load i32, i32* %131, align 4
  %133 = load i32, i32* @SSB_SPROM4_TXPID5G01, align 4
  %134 = load i32, i32* @SSB_SPROM4_TXPID5G1, align 4
  %135 = load i32, i32* @SSB_SPROM4_TXPID5G1_SHIFT, align 4
  %136 = call i32 @SPEX(i32 %132, i32 %133, i32 %134, i32 %135)
  %137 = load i32*, i32** @txpid5g, align 8
  %138 = getelementptr inbounds i32, i32* %137, i64 2
  %139 = load i32, i32* %138, align 4
  %140 = load i32, i32* @SSB_SPROM4_TXPID5G23, align 4
  %141 = load i32, i32* @SSB_SPROM4_TXPID5G2, align 4
  %142 = load i32, i32* @SSB_SPROM4_TXPID5G2_SHIFT, align 4
  %143 = call i32 @SPEX(i32 %139, i32 %140, i32 %141, i32 %142)
  %144 = load i32*, i32** @txpid5g, align 8
  %145 = getelementptr inbounds i32, i32* %144, i64 3
  %146 = load i32, i32* %145, align 4
  %147 = load i32, i32* @SSB_SPROM4_TXPID5G23, align 4
  %148 = load i32, i32* @SSB_SPROM4_TXPID5G3, align 4
  %149 = load i32, i32* @SSB_SPROM4_TXPID5G3_SHIFT, align 4
  %150 = call i32 @SPEX(i32 %146, i32 %147, i32 %148, i32 %149)
  %151 = load i32*, i32** @txpid5gh, align 8
  %152 = getelementptr inbounds i32, i32* %151, i64 0
  %153 = load i32, i32* %152, align 4
  %154 = load i32, i32* @SSB_SPROM4_TXPID5GH01, align 4
  %155 = load i32, i32* @SSB_SPROM4_TXPID5GH0, align 4
  %156 = load i32, i32* @SSB_SPROM4_TXPID5GH0_SHIFT, align 4
  %157 = call i32 @SPEX(i32 %153, i32 %154, i32 %155, i32 %156)
  %158 = load i32*, i32** @txpid5gh, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 1
  %160 = load i32, i32* %159, align 4
  %161 = load i32, i32* @SSB_SPROM4_TXPID5GH01, align 4
  %162 = load i32, i32* @SSB_SPROM4_TXPID5GH1, align 4
  %163 = load i32, i32* @SSB_SPROM4_TXPID5GH1_SHIFT, align 4
  %164 = call i32 @SPEX(i32 %160, i32 %161, i32 %162, i32 %163)
  %165 = load i32*, i32** @txpid5gh, align 8
  %166 = getelementptr inbounds i32, i32* %165, i64 2
  %167 = load i32, i32* %166, align 4
  %168 = load i32, i32* @SSB_SPROM4_TXPID5GH23, align 4
  %169 = load i32, i32* @SSB_SPROM4_TXPID5GH2, align 4
  %170 = load i32, i32* @SSB_SPROM4_TXPID5GH2_SHIFT, align 4
  %171 = call i32 @SPEX(i32 %167, i32 %168, i32 %169, i32 %170)
  %172 = load i32*, i32** @txpid5gh, align 8
  %173 = getelementptr inbounds i32, i32* %172, i64 3
  %174 = load i32, i32* %173, align 4
  %175 = load i32, i32* @SSB_SPROM4_TXPID5GH23, align 4
  %176 = load i32, i32* @SSB_SPROM4_TXPID5GH3, align 4
  %177 = load i32, i32* @SSB_SPROM4_TXPID5GH3_SHIFT, align 4
  %178 = call i32 @SPEX(i32 %174, i32 %175, i32 %176, i32 %177)
  %179 = load i32, i32* @boardflags_lo, align 4
  %180 = load i32, i32* @SSB_SPROM8_BFLLO, align 4
  %181 = call i32 @SPEX(i32 %179, i32 %180, i32 -1, i32 0)
  %182 = load i32, i32* @boardflags_hi, align 4
  %183 = load i32, i32* @SSB_SPROM8_BFLHI, align 4
  %184 = call i32 @SPEX(i32 %182, i32 %183, i32 -1, i32 0)
  %185 = load i32, i32* @boardflags2_lo, align 4
  %186 = load i32, i32* @SSB_SPROM8_BFL2LO, align 4
  %187 = call i32 @SPEX(i32 %185, i32 %186, i32 -1, i32 0)
  %188 = load i32, i32* @boardflags2_hi, align 4
  %189 = load i32, i32* @SSB_SPROM8_BFL2HI, align 4
  %190 = call i32 @SPEX(i32 %188, i32 %189, i32 -1, i32 0)
  %191 = load i32*, i32** @alpha2, align 8
  %192 = getelementptr inbounds i32, i32* %191, i64 0
  %193 = load i32, i32* %192, align 4
  %194 = load i32, i32* @SSB_SPROM8_CCODE, align 4
  %195 = call i32 @SPEX(i32 %193, i32 %194, i32 65280, i32 8)
  %196 = load i32*, i32** @alpha2, align 8
  %197 = getelementptr inbounds i32, i32* %196, i64 1
  %198 = load i32, i32* %197, align 4
  %199 = load i32, i32* @SSB_SPROM8_CCODE, align 4
  %200 = call i32 @SPEX(i32 %198, i32 %199, i32 255, i32 0)
  store i32 0, i32* %7, align 4
  br label %201

201:                                              ; preds = %424, %63
  %202 = load i32, i32* %7, align 4
  %203 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 0
  %204 = call i32 @ARRAY_SIZE(i32* %203)
  %205 = icmp slt i32 %202, %204
  br i1 %205, label %206, label %427

206:                                              ; preds = %201
  %207 = load i32, i32* %7, align 4
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds [4 x i32], [4 x i32]* %8, i64 0, i64 %208
  %210 = load i32, i32* %209, align 4
  store i32 %210, i32* %6, align 4
  %211 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %212 = load i32, i32* %7, align 4
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %211, i64 %213
  %215 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %214, i32 0, i32 9
  %216 = load i32, i32* %215, align 4
  %217 = load i32, i32* %6, align 4
  %218 = load i32, i32* @SSB_SROM8_2G_MAXP_ITSSI, align 4
  %219 = add nsw i32 %217, %218
  %220 = load i32, i32* @SSB_SPROM8_2G_ITSSI, align 4
  %221 = load i32, i32* @SSB_SPROM8_2G_ITSSI_SHIFT, align 4
  %222 = call i32 @SPEX(i32 %216, i32 %219, i32 %220, i32 %221)
  %223 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %224 = load i32, i32* %7, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %223, i64 %225
  %227 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %226, i32 0, i32 8
  %228 = load i32, i32* %227, align 8
  %229 = load i32, i32* %6, align 4
  %230 = load i32, i32* @SSB_SROM8_2G_MAXP_ITSSI, align 4
  %231 = add nsw i32 %229, %230
  %232 = load i32, i32* @SSB_SPROM8_2G_MAXP, align 4
  %233 = call i32 @SPEX(i32 %228, i32 %231, i32 %232, i32 0)
  %234 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %235 = load i32, i32* %7, align 4
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %234, i64 %236
  %238 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %237, i32 0, i32 7
  %239 = load i32*, i32** %238, align 8
  %240 = getelementptr inbounds i32, i32* %239, i64 0
  %241 = load i32, i32* %240, align 4
  %242 = load i32, i32* %6, align 4
  %243 = load i32, i32* @SSB_SROM8_2G_PA_0, align 4
  %244 = add nsw i32 %242, %243
  %245 = call i32 @SPEX(i32 %241, i32 %244, i32 -1, i32 0)
  %246 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %247 = load i32, i32* %7, align 4
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %246, i64 %248
  %250 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %249, i32 0, i32 7
  %251 = load i32*, i32** %250, align 8
  %252 = getelementptr inbounds i32, i32* %251, i64 1
  %253 = load i32, i32* %252, align 4
  %254 = load i32, i32* %6, align 4
  %255 = load i32, i32* @SSB_SROM8_2G_PA_1, align 4
  %256 = add nsw i32 %254, %255
  %257 = call i32 @SPEX(i32 %253, i32 %256, i32 -1, i32 0)
  %258 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %259 = load i32, i32* %7, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %258, i64 %260
  %262 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %261, i32 0, i32 7
  %263 = load i32*, i32** %262, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 2
  %265 = load i32, i32* %264, align 4
  %266 = load i32, i32* %6, align 4
  %267 = load i32, i32* @SSB_SROM8_2G_PA_2, align 4
  %268 = add nsw i32 %266, %267
  %269 = call i32 @SPEX(i32 %265, i32 %268, i32 -1, i32 0)
  %270 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %271 = load i32, i32* %7, align 4
  %272 = sext i32 %271 to i64
  %273 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %270, i64 %272
  %274 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %273, i32 0, i32 6
  %275 = load i32, i32* %274, align 4
  %276 = load i32, i32* %6, align 4
  %277 = load i32, i32* @SSB_SROM8_5G_MAXP_ITSSI, align 4
  %278 = add nsw i32 %276, %277
  %279 = load i32, i32* @SSB_SPROM8_5G_ITSSI, align 4
  %280 = load i32, i32* @SSB_SPROM8_5G_ITSSI_SHIFT, align 4
  %281 = call i32 @SPEX(i32 %275, i32 %278, i32 %279, i32 %280)
  %282 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %283 = load i32, i32* %7, align 4
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %282, i64 %284
  %286 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %285, i32 0, i32 5
  %287 = load i32, i32* %286, align 8
  %288 = load i32, i32* %6, align 4
  %289 = load i32, i32* @SSB_SROM8_5G_MAXP_ITSSI, align 4
  %290 = add nsw i32 %288, %289
  %291 = load i32, i32* @SSB_SPROM8_5G_MAXP, align 4
  %292 = call i32 @SPEX(i32 %287, i32 %290, i32 %291, i32 0)
  %293 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %294 = load i32, i32* %7, align 4
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %293, i64 %295
  %297 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %296, i32 0, i32 4
  %298 = load i32, i32* %297, align 4
  %299 = load i32, i32* %6, align 4
  %300 = load i32, i32* @SSB_SPROM8_5GHL_MAXP, align 4
  %301 = add nsw i32 %299, %300
  %302 = load i32, i32* @SSB_SPROM8_5GH_MAXP, align 4
  %303 = call i32 @SPEX(i32 %298, i32 %301, i32 %302, i32 0)
  %304 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %305 = load i32, i32* %7, align 4
  %306 = sext i32 %305 to i64
  %307 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %304, i64 %306
  %308 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %307, i32 0, i32 3
  %309 = load i32, i32* %308, align 8
  %310 = load i32, i32* %6, align 4
  %311 = load i32, i32* @SSB_SPROM8_5GHL_MAXP, align 4
  %312 = add nsw i32 %310, %311
  %313 = load i32, i32* @SSB_SPROM8_5GL_MAXP, align 4
  %314 = load i32, i32* @SSB_SPROM8_5GL_MAXP_SHIFT, align 4
  %315 = call i32 @SPEX(i32 %309, i32 %312, i32 %313, i32 %314)
  %316 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %317 = load i32, i32* %7, align 4
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %316, i64 %318
  %320 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %319, i32 0, i32 2
  %321 = load i32*, i32** %320, align 8
  %322 = getelementptr inbounds i32, i32* %321, i64 0
  %323 = load i32, i32* %322, align 4
  %324 = load i32, i32* %6, align 4
  %325 = load i32, i32* @SSB_SROM8_5GL_PA_0, align 4
  %326 = add nsw i32 %324, %325
  %327 = call i32 @SPEX(i32 %323, i32 %326, i32 -1, i32 0)
  %328 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %329 = load i32, i32* %7, align 4
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %328, i64 %330
  %332 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %331, i32 0, i32 2
  %333 = load i32*, i32** %332, align 8
  %334 = getelementptr inbounds i32, i32* %333, i64 1
  %335 = load i32, i32* %334, align 4
  %336 = load i32, i32* %6, align 4
  %337 = load i32, i32* @SSB_SROM8_5GL_PA_1, align 4
  %338 = add nsw i32 %336, %337
  %339 = call i32 @SPEX(i32 %335, i32 %338, i32 -1, i32 0)
  %340 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %341 = load i32, i32* %7, align 4
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %340, i64 %342
  %344 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %343, i32 0, i32 2
  %345 = load i32*, i32** %344, align 8
  %346 = getelementptr inbounds i32, i32* %345, i64 2
  %347 = load i32, i32* %346, align 4
  %348 = load i32, i32* %6, align 4
  %349 = load i32, i32* @SSB_SROM8_5GL_PA_2, align 4
  %350 = add nsw i32 %348, %349
  %351 = call i32 @SPEX(i32 %347, i32 %350, i32 -1, i32 0)
  %352 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %353 = load i32, i32* %7, align 4
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %352, i64 %354
  %356 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %355, i32 0, i32 1
  %357 = load i32*, i32** %356, align 8
  %358 = getelementptr inbounds i32, i32* %357, i64 0
  %359 = load i32, i32* %358, align 4
  %360 = load i32, i32* %6, align 4
  %361 = load i32, i32* @SSB_SROM8_5G_PA_0, align 4
  %362 = add nsw i32 %360, %361
  %363 = call i32 @SPEX(i32 %359, i32 %362, i32 -1, i32 0)
  %364 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %365 = load i32, i32* %7, align 4
  %366 = sext i32 %365 to i64
  %367 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %364, i64 %366
  %368 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %367, i32 0, i32 1
  %369 = load i32*, i32** %368, align 8
  %370 = getelementptr inbounds i32, i32* %369, i64 1
  %371 = load i32, i32* %370, align 4
  %372 = load i32, i32* %6, align 4
  %373 = load i32, i32* @SSB_SROM8_5G_PA_1, align 4
  %374 = add nsw i32 %372, %373
  %375 = call i32 @SPEX(i32 %371, i32 %374, i32 -1, i32 0)
  %376 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %377 = load i32, i32* %7, align 4
  %378 = sext i32 %377 to i64
  %379 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %376, i64 %378
  %380 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %379, i32 0, i32 1
  %381 = load i32*, i32** %380, align 8
  %382 = getelementptr inbounds i32, i32* %381, i64 2
  %383 = load i32, i32* %382, align 4
  %384 = load i32, i32* %6, align 4
  %385 = load i32, i32* @SSB_SROM8_5G_PA_2, align 4
  %386 = add nsw i32 %384, %385
  %387 = call i32 @SPEX(i32 %383, i32 %386, i32 -1, i32 0)
  %388 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %389 = load i32, i32* %7, align 4
  %390 = sext i32 %389 to i64
  %391 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %388, i64 %390
  %392 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %391, i32 0, i32 0
  %393 = load i32*, i32** %392, align 8
  %394 = getelementptr inbounds i32, i32* %393, i64 0
  %395 = load i32, i32* %394, align 4
  %396 = load i32, i32* %6, align 4
  %397 = load i32, i32* @SSB_SROM8_5GH_PA_0, align 4
  %398 = add nsw i32 %396, %397
  %399 = call i32 @SPEX(i32 %395, i32 %398, i32 -1, i32 0)
  %400 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %401 = load i32, i32* %7, align 4
  %402 = sext i32 %401 to i64
  %403 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %400, i64 %402
  %404 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %403, i32 0, i32 0
  %405 = load i32*, i32** %404, align 8
  %406 = getelementptr inbounds i32, i32* %405, i64 1
  %407 = load i32, i32* %406, align 4
  %408 = load i32, i32* %6, align 4
  %409 = load i32, i32* @SSB_SROM8_5GH_PA_1, align 4
  %410 = add nsw i32 %408, %409
  %411 = call i32 @SPEX(i32 %407, i32 %410, i32 -1, i32 0)
  %412 = load %struct.TYPE_11__*, %struct.TYPE_11__** @core_pwr_info, align 8
  %413 = load i32, i32* %7, align 4
  %414 = sext i32 %413 to i64
  %415 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %412, i64 %414
  %416 = getelementptr inbounds %struct.TYPE_11__, %struct.TYPE_11__* %415, i32 0, i32 0
  %417 = load i32*, i32** %416, align 8
  %418 = getelementptr inbounds i32, i32* %417, i64 2
  %419 = load i32, i32* %418, align 4
  %420 = load i32, i32* %6, align 4
  %421 = load i32, i32* @SSB_SROM8_5GH_PA_2, align 4
  %422 = add nsw i32 %420, %421
  %423 = call i32 @SPEX(i32 %419, i32 %422, i32 -1, i32 0)
  br label %424

424:                                              ; preds = %206
  %425 = load i32, i32* %7, align 4
  %426 = add nsw i32 %425, 1
  store i32 %426, i32* %7, align 4
  br label %201

427:                                              ; preds = %201
  %428 = load i32, i32* getelementptr inbounds (%struct.TYPE_10__, %struct.TYPE_10__* @fem, i32 0, i32 1, i32 4), align 4
  %429 = load i32, i32* @SSB_SPROM8_FEM2G, align 4
  %430 = load i32, i32* @SSB_SROM8_FEM_TSSIPOS, align 4
  %431 = load i32, i32* @SSB_SROM8_FEM_TSSIPOS_SHIFT, align 4
  %432 = call i32 @SPEX(i32 %428, i32 %429, i32 %430, i32 %431)
  %433 = load i32, i32* getelementptr inbounds (%struct.TYPE_10__, %struct.TYPE_10__* @fem, i32 0, i32 1, i32 3), align 4
  %434 = load i32, i32* @SSB_SPROM8_FEM2G, align 4
  %435 = load i32, i32* @SSB_SROM8_FEM_EXTPA_GAIN, align 4
  %436 = load i32, i32* @SSB_SROM8_FEM_EXTPA_GAIN_SHIFT, align 4
  %437 = call i32 @SPEX(i32 %433, i32 %434, i32 %435, i32 %436)
  %438 = load i32, i32* getelementptr inbounds (%struct.TYPE_10__, %struct.TYPE_10__* @fem, i32 0, i32 1, i32 2), align 4
  %439 = load i32, i32* @SSB_SPROM8_FEM2G, align 4
  %440 = load i32, i32* @SSB_SROM8_FEM_PDET_RANGE, align 4
  %441 = load i32, i32* @SSB_SROM8_FEM_PDET_RANGE_SHIFT, align 4
  %442 = call i32 @SPEX(i32 %438, i32 %439, i32 %440, i32 %441)
  %443 = load i32, i32* getelementptr inbounds (%struct.TYPE_10__, %struct.TYPE_10__* @fem, i32 0, i32 1, i32 1), align 4
  %444 = load i32, i32* @SSB_SPROM8_FEM2G, align 4
  %445 = load i32, i32* @SSB_SROM8_FEM_TR_ISO, align 4
  %446 = load i32, i32* @SSB_SROM8_FEM_TR_ISO_SHIFT, align 4
  %447 = call i32 @SPEX(i32 %443, i32 %444, i32 %445, i32 %446)
  %448 = load i32, i32* getelementptr inbounds (%struct.TYPE_10__, %struct.TYPE_10__* @fem, i32 0, i32 1, i32 0), align 4
  %449 = load i32, i32* @SSB_SPROM8_FEM2G, align 4
  %450 = load i32, i32* @SSB_SROM8_FEM_ANTSWLUT, align 4
  %451 = load i32, i32* @SSB_SROM8_FEM_ANTSWLUT_SHIFT, align 4
  %452 = call i32 @SPEX(i32 %448, i32 %449, i32 %450, i32 %451)
  %453 = load i32, i32* getelementptr inbounds (%struct.TYPE_10__, %struct.TYPE_10__* @fem, i32 0, i32 0, i32 4), align 4
  %454 = load i32, i32* @SSB_SPROM8_FEM5G, align 4
  %455 = load i32, i32* @SSB_SROM8_FEM_TSSIPOS, align 4
  %456 = load i32, i32* @SSB_SROM8_FEM_TSSIPOS_SHIFT, align 4
  %457 = call i32 @SPEX(i32 %453, i32 %454, i32 %455, i32 %456)
  %458 = load i32, i32* getelementptr inbounds (%struct.TYPE_10__, %struct.TYPE_10__* @fem, i32 0, i32 0, i32 3), align 4
  %459 = load i32, i32* @SSB_SPROM8_FEM5G, align 4
  %460 = load i32, i32* @SSB_SROM8_FEM_EXTPA_GAIN, align 4
  %461 = load i32, i32* @SSB_SROM8_FEM_EXTPA_GAIN_SHIFT, align 4
  %462 = call i32 @SPEX(i32 %458, i32 %459, i32 %460, i32 %461)
  %463 = load i32, i32* getelementptr inbounds (%struct.TYPE_10__, %struct.TYPE_10__* @fem, i32 0, i32 0, i32 2), align 4
  %464 = load i32, i32* @SSB_SPROM8_FEM5G, align 4
  %465 = load i32, i32* @SSB_SROM8_FEM_PDET_RANGE, align 4
  %466 = load i32, i32* @SSB_SROM8_FEM_PDET_RANGE_SHIFT, align 4
  %467 = call i32 @SPEX(i32 %463, i32 %464, i32 %465, i32 %466)
  %468 = load i32, i32* getelementptr inbounds (%struct.TYPE_10__, %struct.TYPE_10__* @fem, i32 0, i32 0, i32 1), align 4
  %469 = load i32, i32* @SSB_SPROM8_FEM5G, align 4
  %470 = load i32, i32* @SSB_SROM8_FEM_TR_ISO, align 4
  %471 = load i32, i32* @SSB_SROM8_FEM_TR_ISO_SHIFT, align 4
  %472 = call i32 @SPEX(i32 %468, i32 %469, i32 %470, i32 %471)
  %473 = load i32, i32* getelementptr inbounds (%struct.TYPE_10__, %struct.TYPE_10__* @fem, i32 0, i32 0, i32 0), align 4
  %474 = load i32, i32* @SSB_SPROM8_FEM5G, align 4
  %475 = load i32, i32* @SSB_SROM8_FEM_ANTSWLUT, align 4
  %476 = load i32, i32* @SSB_SROM8_FEM_ANTSWLUT_SHIFT, align 4
  %477 = call i32 @SPEX(i32 %473, i32 %474, i32 %475, i32 %476)
  %478 = load i32, i32* @ant_available_a, align 4
  %479 = load i32, i32* @SSB_SPROM8_ANTAVAIL, align 4
  %480 = load i32, i32* @SSB_SPROM8_ANTAVAIL_A, align 4
  %481 = load i32, i32* @SSB_SPROM8_ANTAVAIL_A_SHIFT, align 4
  %482 = call i32 @SPEX(i32 %478, i32 %479, i32 %480, i32 %481)
  %483 = load i32, i32* @ant_available_bg, align 4
  %484 = load i32, i32* @SSB_SPROM8_ANTAVAIL, align 4
  %485 = load i32, i32* @SSB_SPROM8_ANTAVAIL_BG, align 4
  %486 = load i32, i32* @SSB_SPROM8_ANTAVAIL_BG_SHIFT, align 4
  %487 = call i32 @SPEX(i32 %483, i32 %484, i32 %485, i32 %486)
  %488 = load i32, i32* @maxpwr_bg, align 4
  %489 = load i32, i32* @SSB_SPROM8_MAXP_BG, align 4
  %490 = load i32, i32* @SSB_SPROM8_MAXP_BG_MASK, align 4
  %491 = call i32 @SPEX(i32 %488, i32 %489, i32 %490, i32 0)
  %492 = load i32, i32* @itssi_bg, align 4
  %493 = load i32, i32* @SSB_SPROM8_MAXP_BG, align 4
  %494 = load i32, i32* @SSB_SPROM8_ITSSI_BG, align 4
  %495 = load i32, i32* @SSB_SPROM8_ITSSI_BG_SHIFT, align 4
  %496 = call i32 @SPEX(i32 %492, i32 %493, i32 %494, i32 %495)
  %497 = load i32, i32* @maxpwr_a, align 4
  %498 = load i32, i32* @SSB_SPROM8_MAXP_A, align 4
  %499 = load i32, i32* @SSB_SPROM8_MAXP_A_MASK, align 4
  %500 = call i32 @SPEX(i32 %497, i32 %498, i32 %499, i32 0)
  %501 = load i32, i32* @itssi_a, align 4
  %502 = load i32, i32* @SSB_SPROM8_MAXP_A, align 4
  %503 = load i32, i32* @SSB_SPROM8_ITSSI_A, align 4
  %504 = load i32, i32* @SSB_SPROM8_ITSSI_A_SHIFT, align 4
  %505 = call i32 @SPEX(i32 %501, i32 %502, i32 %503, i32 %504)
  %506 = load i32, i32* @maxpwr_ah, align 4
  %507 = load i32, i32* @SSB_SPROM8_MAXP_AHL, align 4
  %508 = load i32, i32* @SSB_SPROM8_MAXP_AH_MASK, align 4
  %509 = call i32 @SPEX(i32 %506, i32 %507, i32 %508, i32 0)
  %510 = load i32, i32* @maxpwr_al, align 4
  %511 = load i32, i32* @SSB_SPROM8_MAXP_AHL, align 4
  %512 = load i32, i32* @SSB_SPROM8_MAXP_AL_MASK, align 4
  %513 = load i32, i32* @SSB_SPROM8_MAXP_AL_SHIFT, align 4
  %514 = call i32 @SPEX(i32 %510, i32 %511, i32 %512, i32 %513)
  %515 = load i32, i32* @gpio0, align 4
  %516 = load i32, i32* @SSB_SPROM8_GPIOA, align 4
  %517 = load i32, i32* @SSB_SPROM8_GPIOA_P0, align 4
  %518 = call i32 @SPEX(i32 %515, i32 %516, i32 %517, i32 0)
  %519 = load i32, i32* @gpio1, align 4
  %520 = load i32, i32* @SSB_SPROM8_GPIOA, align 4
  %521 = load i32, i32* @SSB_SPROM8_GPIOA_P1, align 4
  %522 = load i32, i32* @SSB_SPROM8_GPIOA_P1_SHIFT, align 4
  %523 = call i32 @SPEX(i32 %519, i32 %520, i32 %521, i32 %522)
  %524 = load i32, i32* @gpio2, align 4
  %525 = load i32, i32* @SSB_SPROM8_GPIOB, align 4
  %526 = load i32, i32* @SSB_SPROM8_GPIOB_P2, align 4
  %527 = call i32 @SPEX(i32 %524, i32 %525, i32 %526, i32 0)
  %528 = load i32, i32* @gpio3, align 4
  %529 = load i32, i32* @SSB_SPROM8_GPIOB, align 4
  %530 = load i32, i32* @SSB_SPROM8_GPIOB_P3, align 4
  %531 = load i32, i32* @SSB_SPROM8_GPIOB_P3_SHIFT, align 4
  %532 = call i32 @SPEX(i32 %528, i32 %529, i32 %530, i32 %531)
  %533 = load i32, i32* @tri2g, align 4
  %534 = load i32, i32* @SSB_SPROM8_TRI25G, align 4
  %535 = load i32, i32* @SSB_SPROM8_TRI2G, align 4
  %536 = call i32 @SPEX(i32 %533, i32 %534, i32 %535, i32 0)
  %537 = load i32, i32* @tri5g, align 4
  %538 = load i32, i32* @SSB_SPROM8_TRI25G, align 4
  %539 = load i32, i32* @SSB_SPROM8_TRI5G, align 4
  %540 = load i32, i32* @SSB_SPROM8_TRI5G_SHIFT, align 4
  %541 = call i32 @SPEX(i32 %537, i32 %538, i32 %539, i32 %540)
  %542 = load i32, i32* @tri5gl, align 4
  %543 = load i32, i32* @SSB_SPROM8_TRI5GHL, align 4
  %544 = load i32, i32* @SSB_SPROM8_TRI5GL, align 4
  %545 = call i32 @SPEX(i32 %542, i32 %543, i32 %544, i32 0)
  %546 = load i32, i32* @tri5gh, align 4
  %547 = load i32, i32* @SSB_SPROM8_TRI5GHL, align 4
  %548 = load i32, i32* @SSB_SPROM8_TRI5GH, align 4
  %549 = load i32, i32* @SSB_SPROM8_TRI5GH_SHIFT, align 4
  %550 = call i32 @SPEX(i32 %546, i32 %547, i32 %548, i32 %549)
  %551 = load i32, i32* @rxpo2g, align 4
  %552 = load i32, i32* @SSB_SPROM8_RXPO, align 4
  %553 = load i32, i32* @SSB_SPROM8_RXPO2G, align 4
  %554 = load i32, i32* @SSB_SPROM8_RXPO2G_SHIFT, align 4
  %555 = call i32 @SPEX(i32 %551, i32 %552, i32 %553, i32 %554)
  %556 = load i32, i32* @rxpo5g, align 4
  %557 = load i32, i32* @SSB_SPROM8_RXPO, align 4
  %558 = load i32, i32* @SSB_SPROM8_RXPO5G, align 4
  %559 = load i32, i32* @SSB_SPROM8_RXPO5G_SHIFT, align 4
  %560 = call i32 @SPEX(i32 %556, i32 %557, i32 %558, i32 %559)
  %561 = load i32, i32* @rssismf2g, align 4
  %562 = load i32, i32* @SSB_SPROM8_RSSIPARM2G, align 4
  %563 = load i32, i32* @SSB_SPROM8_RSSISMF2G, align 4
  %564 = call i32 @SPEX(i32 %561, i32 %562, i32 %563, i32 0)
  %565 = load i32, i32* @rssismc2g, align 4
  %566 = load i32, i32* @SSB_SPROM8_RSSIPARM2G, align 4
  %567 = load i32, i32* @SSB_SPROM8_RSSISMC2G, align 4
  %568 = load i32, i32* @SSB_SPROM8_RSSISMC2G_SHIFT, align 4
  %569 = call i32 @SPEX(i32 %565, i32 %566, i32 %567, i32 %568)
  %570 = load i32, i32* @rssisav2g, align 4
  %571 = load i32, i32* @SSB_SPROM8_RSSIPARM2G, align 4
  %572 = load i32, i32* @SSB_SPROM8_RSSISAV2G, align 4
  %573 = load i32, i32* @SSB_SPROM8_RSSISAV2G_SHIFT, align 4
  %574 = call i32 @SPEX(i32 %570, i32 %571, i32 %572, i32 %573)
  %575 = load i32, i32* @bxa2g, align 4
  %576 = load i32, i32* @SSB_SPROM8_RSSIPARM2G, align 4
  %577 = load i32, i32* @SSB_SPROM8_BXA2G, align 4
  %578 = load i32, i32* @SSB_SPROM8_BXA2G_SHIFT, align 4
  %579 = call i32 @SPEX(i32 %575, i32 %576, i32 %577, i32 %578)
  %580 = load i32, i32* @rssismf5g, align 4
  %581 = load i32, i32* @SSB_SPROM8_RSSIPARM5G, align 4
  %582 = load i32, i32* @SSB_SPROM8_RSSISMF5G, align 4
  %583 = call i32 @SPEX(i32 %580, i32 %581, i32 %582, i32 0)
  %584 = load i32, i32* @rssismc5g, align 4
  %585 = load i32, i32* @SSB_SPROM8_RSSIPARM5G, align 4
  %586 = load i32, i32* @SSB_SPROM8_RSSISMC5G, align 4
  %587 = load i32, i32* @SSB_SPROM8_RSSISMC5G_SHIFT, align 4
  %588 = call i32 @SPEX(i32 %584, i32 %585, i32 %586, i32 %587)
  %589 = load i32, i32* @rssisav5g, align 4
  %590 = load i32, i32* @SSB_SPROM8_RSSIPARM5G, align 4
  %591 = load i32, i32* @SSB_SPROM8_RSSISAV5G, align 4
  %592 = load i32, i32* @SSB_SPROM8_RSSISAV5G_SHIFT, align 4
  %593 = call i32 @SPEX(i32 %589, i32 %590, i32 %591, i32 %592)
  %594 = load i32, i32* @bxa5g, align 4
  %595 = load i32, i32* @SSB_SPROM8_RSSIPARM5G, align 4
  %596 = load i32, i32* @SSB_SPROM8_BXA5G, align 4
  %597 = load i32, i32* @SSB_SPROM8_BXA5G_SHIFT, align 4
  %598 = call i32 @SPEX(i32 %594, i32 %595, i32 %596, i32 %597)
  %599 = load i32, i32* @pa0b0, align 4
  %600 = load i32, i32* @SSB_SPROM8_PA0B0, align 4
  %601 = call i32 @SPEX(i32 %599, i32 %600, i32 -1, i32 0)
  %602 = load i32, i32* @pa0b1, align 4
  %603 = load i32, i32* @SSB_SPROM8_PA0B1, align 4
  %604 = call i32 @SPEX(i32 %602, i32 %603, i32 -1, i32 0)
  %605 = load i32, i32* @pa0b2, align 4
  %606 = load i32, i32* @SSB_SPROM8_PA0B2, align 4
  %607 = call i32 @SPEX(i32 %605, i32 %606, i32 -1, i32 0)
  %608 = load i32, i32* @pa1b0, align 4
  %609 = load i32, i32* @SSB_SPROM8_PA1B0, align 4
  %610 = call i32 @SPEX(i32 %608, i32 %609, i32 -1, i32 0)
  %611 = load i32, i32* @pa1b1, align 4
  %612 = load i32, i32* @SSB_SPROM8_PA1B1, align 4
  %613 = call i32 @SPEX(i32 %611, i32 %612, i32 -1, i32 0)
  %614 = load i32, i32* @pa1b2, align 4
  %615 = load i32, i32* @SSB_SPROM8_PA1B2, align 4
  %616 = call i32 @SPEX(i32 %614, i32 %615, i32 -1, i32 0)
  %617 = load i32, i32* @pa1lob0, align 4
  %618 = load i32, i32* @SSB_SPROM8_PA1LOB0, align 4
  %619 = call i32 @SPEX(i32 %617, i32 %618, i32 -1, i32 0)
  %620 = load i32, i32* @pa1lob1, align 4
  %621 = load i32, i32* @SSB_SPROM8_PA1LOB1, align 4
  %622 = call i32 @SPEX(i32 %620, i32 %621, i32 -1, i32 0)
  %623 = load i32, i32* @pa1lob2, align 4
  %624 = load i32, i32* @SSB_SPROM8_PA1LOB2, align 4
  %625 = call i32 @SPEX(i32 %623, i32 %624, i32 -1, i32 0)
  %626 = load i32, i32* @pa1hib0, align 4
  %627 = load i32, i32* @SSB_SPROM8_PA1HIB0, align 4
  %628 = call i32 @SPEX(i32 %626, i32 %627, i32 -1, i32 0)
  %629 = load i32, i32* @pa1hib1, align 4
  %630 = load i32, i32* @SSB_SPROM8_PA1HIB1, align 4
  %631 = call i32 @SPEX(i32 %629, i32 %630, i32 -1, i32 0)
  %632 = load i32, i32* @pa1hib2, align 4
  %633 = load i32, i32* @SSB_SPROM8_PA1HIB2, align 4
  %634 = call i32 @SPEX(i32 %632, i32 %633, i32 -1, i32 0)
  %635 = load i32, i32* @cck2gpo, align 4
  %636 = load i32, i32* @SSB_SPROM8_CCK2GPO, align 4
  %637 = call i32 @SPEX(i32 %635, i32 %636, i32 -1, i32 0)
  %638 = load i32, i32* @ofdm2gpo, align 4
  %639 = load i32, i32* @SSB_SPROM8_OFDM2GPO, align 4
  %640 = call i32 @SPEX32(i32 %638, i32 %639, i32 -1, i32 0)
  %641 = load i32, i32* @ofdm5glpo, align 4
  %642 = load i32, i32* @SSB_SPROM8_OFDM5GLPO, align 4
  %643 = call i32 @SPEX32(i32 %641, i32 %642, i32 -1, i32 0)
  %644 = load i32, i32* @ofdm5gpo, align 4
  %645 = load i32, i32* @SSB_SPROM8_OFDM5GPO, align 4
  %646 = call i32 @SPEX32(i32 %644, i32 %645, i32 -1, i32 0)
  %647 = load i32, i32* @ofdm5ghpo, align 4
  %648 = load i32, i32* @SSB_SPROM8_OFDM5GHPO, align 4
  %649 = call i32 @SPEX32(i32 %647, i32 %648, i32 -1, i32 0)
  %650 = load i32, i32* getelementptr inbounds (%struct.TYPE_12__, %struct.TYPE_12__* @antenna_gain, i32 0, i32 3), align 4
  %651 = load i32, i32* @SSB_SPROM8_AGAIN01, align 4
  %652 = load i32, i32* @SSB_SPROM8_AGAIN0, align 4
  %653 = load i32, i32* @SSB_SPROM8_AGAIN0_SHIFT, align 4
  %654 = call i32 @SPEX(i32 %650, i32 %651, i32 %652, i32 %653)
  %655 = load i32, i32* getelementptr inbounds (%struct.TYPE_12__, %struct.TYPE_12__* @antenna_gain, i32 0, i32 2), align 4
  %656 = load i32, i32* @SSB_SPROM8_AGAIN01, align 4
  %657 = load i32, i32* @SSB_SPROM8_AGAIN1, align 4
  %658 = load i32, i32* @SSB_SPROM8_AGAIN1_SHIFT, align 4
  %659 = call i32 @SPEX(i32 %655, i32 %656, i32 %657, i32 %658)
  %660 = load i32, i32* getelementptr inbounds (%struct.TYPE_12__, %struct.TYPE_12__* @antenna_gain, i32 0, i32 1), align 4
  %661 = load i32, i32* @SSB_SPROM8_AGAIN23, align 4
  %662 = load i32, i32* @SSB_SPROM8_AGAIN2, align 4
  %663 = load i32, i32* @SSB_SPROM8_AGAIN2_SHIFT, align 4
  %664 = call i32 @SPEX(i32 %660, i32 %661, i32 %662, i32 %663)
  %665 = load i32, i32* getelementptr inbounds (%struct.TYPE_12__, %struct.TYPE_12__* @antenna_gain, i32 0, i32 0), align 4
  %666 = load i32, i32* @SSB_SPROM8_AGAIN23, align 4
  %667 = load i32, i32* @SSB_SPROM8_AGAIN3, align 4
  %668 = load i32, i32* @SSB_SPROM8_AGAIN3_SHIFT, align 4
  %669 = call i32 @SPEX(i32 %665, i32 %666, i32 %667, i32 %668)
  %670 = load i32, i32* @leddc_on_time, align 4
  %671 = load i32, i32* @SSB_SPROM8_LEDDC, align 4
  %672 = load i32, i32* @SSB_SPROM8_LEDDC_ON, align 4
  %673 = load i32, i32* @SSB_SPROM8_LEDDC_ON_SHIFT, align 4
  %674 = call i32 @SPEX(i32 %670, i32 %671, i32 %672, i32 %673)
  %675 = load i32, i32* @leddc_off_time, align 4
  %676 = load i32, i32* @SSB_SPROM8_LEDDC, align 4
  %677 = load i32, i32* @SSB_SPROM8_LEDDC_OFF, align 4
  %678 = load i32, i32* @SSB_SPROM8_LEDDC_OFF_SHIFT, align 4
  %679 = call i32 @SPEX(i32 %675, i32 %676, i32 %677, i32 %678)
  %680 = load i32, i32* @txchain, align 4
  %681 = load i32, i32* @SSB_SPROM8_TXRXC, align 4
  %682 = load i32, i32* @SSB_SPROM8_TXRXC_TXCHAIN, align 4
  %683 = load i32, i32* @SSB_SPROM8_TXRXC_TXCHAIN_SHIFT, align 4
  %684 = call i32 @SPEX(i32 %680, i32 %681, i32 %682, i32 %683)
  %685 = load i32, i32* @rxchain, align 4
  %686 = load i32, i32* @SSB_SPROM8_TXRXC, align 4
  %687 = load i32, i32* @SSB_SPROM8_TXRXC_RXCHAIN, align 4
  %688 = load i32, i32* @SSB_SPROM8_TXRXC_RXCHAIN_SHIFT, align 4
  %689 = call i32 @SPEX(i32 %685, i32 %686, i32 %687, i32 %688)
  %690 = load i32, i32* @antswitch, align 4
  %691 = load i32, i32* @SSB_SPROM8_TXRXC, align 4
  %692 = load i32, i32* @SSB_SPROM8_TXRXC_SWITCH, align 4
  %693 = load i32, i32* @SSB_SPROM8_TXRXC_SWITCH_SHIFT, align 4
  %694 = call i32 @SPEX(i32 %690, i32 %691, i32 %692, i32 %693)
  %695 = load i32, i32* @opo, align 4
  %696 = load i32, i32* @SSB_SPROM8_OFDM2GPO, align 4
  %697 = call i32 @SPEX(i32 %695, i32 %696, i32 255, i32 0)
  %698 = load i32, i32* @mcs2gpo, align 4
  %699 = load i32, i32* @SSB_SPROM8_2G_MCSPO, align 4
  %700 = call i32 @SPEX_ARRAY8(i32 %698, i32 %699, i32 -1, i32 0)
  %701 = load i32, i32* @mcs5gpo, align 4
  %702 = load i32, i32* @SSB_SPROM8_5G_MCSPO, align 4
  %703 = call i32 @SPEX_ARRAY8(i32 %701, i32 %702, i32 -1, i32 0)
  %704 = load i32, i32* @mcs5glpo, align 4
  %705 = load i32, i32* @SSB_SPROM8_5GL_MCSPO, align 4
  %706 = call i32 @SPEX_ARRAY8(i32 %704, i32 %705, i32 -1, i32 0)
  %707 = load i32, i32* @mcs5ghpo, align 4
  %708 = load i32, i32* @SSB_SPROM8_5GH_MCSPO, align 4
  %709 = call i32 @SPEX_ARRAY8(i32 %707, i32 %708, i32 -1, i32 0)
  %710 = load i32, i32* @rawtempsense, align 4
  %711 = load i32, i32* @SSB_SPROM8_RAWTS, align 4
  %712 = load i32, i32* @SSB_SPROM8_RAWTS_RAWTEMP, align 4
  %713 = load i32, i32* @SSB_SPROM8_RAWTS_RAWTEMP_SHIFT, align 4
  %714 = call i32 @SPEX(i32 %710, i32 %711, i32 %712, i32 %713)
  %715 = load i32, i32* @measpower, align 4
  %716 = load i32, i32* @SSB_SPROM8_RAWTS, align 4
  %717 = load i32, i32* @SSB_SPROM8_RAWTS_MEASPOWER, align 4
  %718 = load i32, i32* @SSB_SPROM8_RAWTS_MEASPOWER_SHIFT, align 4
  %719 = call i32 @SPEX(i32 %715, i32 %716, i32 %717, i32 %718)
  %720 = load i32, i32* @tempsense_slope, align 4
  %721 = load i32, i32* @SSB_SPROM8_OPT_CORRX, align 4
  %722 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMP_SLOPE, align 4
  %723 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMP_SLOPE_SHIFT, align 4
  %724 = call i32 @SPEX(i32 %720, i32 %721, i32 %722, i32 %723)
  %725 = load i32, i32* @tempcorrx, align 4
  %726 = load i32, i32* @SSB_SPROM8_OPT_CORRX, align 4
  %727 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMPCORRX, align 4
  %728 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMPCORRX_SHIFT, align 4
  %729 = call i32 @SPEX(i32 %725, i32 %726, i32 %727, i32 %728)
  %730 = load i32, i32* @tempsense_option, align 4
  %731 = load i32, i32* @SSB_SPROM8_OPT_CORRX, align 4
  %732 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMP_OPTION, align 4
  %733 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMP_OPTION_SHIFT, align 4
  %734 = call i32 @SPEX(i32 %730, i32 %731, i32 %732, i32 %733)
  %735 = load i32, i32* @freqoffset_corr, align 4
  %736 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP, align 4
  %737 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_FREQ_CORR, align 4
  %738 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_FREQ_CORR_SHIFT, align 4
  %739 = call i32 @SPEX(i32 %735, i32 %736, i32 %737, i32 %738)
  %740 = load i32, i32* @iqcal_swp_dis, align 4
  %741 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP, align 4
  %742 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_IQCAL_SWP, align 4
  %743 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_IQCAL_SWP_SHIFT, align 4
  %744 = call i32 @SPEX(i32 %740, i32 %741, i32 %742, i32 %743)
  %745 = load i32, i32* @hw_iqcal_en, align 4
  %746 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP, align 4
  %747 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_HW_IQCAL, align 4
  %748 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_HW_IQCAL_SHIFT, align 4
  %749 = call i32 @SPEX(i32 %745, i32 %746, i32 %747, i32 %748)
  %750 = load i32, i32* @bw40po, align 4
  %751 = load i32, i32* @SSB_SPROM8_BW40PO, align 4
  %752 = call i32 @SPEX(i32 %750, i32 %751, i32 -1, i32 0)
  %753 = load i32, i32* @cddpo, align 4
  %754 = load i32, i32* @SSB_SPROM8_CDDPO, align 4
  %755 = call i32 @SPEX(i32 %753, i32 %754, i32 -1, i32 0)
  %756 = load i32, i32* @stbcpo, align 4
  %757 = load i32, i32* @SSB_SPROM8_STBCPO, align 4
  %758 = call i32 @SPEX(i32 %756, i32 %757, i32 -1, i32 0)
  %759 = load i32, i32* @bwduppo, align 4
  %760 = load i32, i32* @SSB_SPROM8_BWDUPPO, align 4
  %761 = call i32 @SPEX(i32 %759, i32 %760, i32 -1, i32 0)
  %762 = load i32, i32* @tempthresh, align 4
  %763 = load i32, i32* @SSB_SPROM8_THERMAL, align 4
  %764 = load i32, i32* @SSB_SPROM8_THERMAL_TRESH, align 4
  %765 = load i32, i32* @SSB_SPROM8_THERMAL_TRESH_SHIFT, align 4
  %766 = call i32 @SPEX(i32 %762, i32 %763, i32 %764, i32 %765)
  %767 = load i32, i32* @tempoffset, align 4
  %768 = load i32, i32* @SSB_SPROM8_THERMAL, align 4
  %769 = load i32, i32* @SSB_SPROM8_THERMAL_OFFSET, align 4
  %770 = load i32, i32* @SSB_SPROM8_THERMAL_OFFSET_SHIFT, align 4
  %771 = call i32 @SPEX(i32 %767, i32 %768, i32 %769, i32 %770)
  %772 = load i32, i32* @phycal_tempdelta, align 4
  %773 = load i32, i32* @SSB_SPROM8_TEMPDELTA, align 4
  %774 = load i32, i32* @SSB_SPROM8_TEMPDELTA_PHYCAL, align 4
  %775 = load i32, i32* @SSB_SPROM8_TEMPDELTA_PHYCAL_SHIFT, align 4
  %776 = call i32 @SPEX(i32 %772, i32 %773, i32 %774, i32 %775)
  %777 = load i32, i32* @temps_period, align 4
  %778 = load i32, i32* @SSB_SPROM8_TEMPDELTA, align 4
  %779 = load i32, i32* @SSB_SPROM8_TEMPDELTA_PERIOD, align 4
  %780 = load i32, i32* @SSB_SPROM8_TEMPDELTA_PERIOD_SHIFT, align 4
  %781 = call i32 @SPEX(i32 %777, i32 %778, i32 %779, i32 %780)
  %782 = load i32, i32* @temps_hysteresis, align 4
  %783 = load i32, i32* @SSB_SPROM8_TEMPDELTA, align 4
  %784 = load i32, i32* @SSB_SPROM8_TEMPDELTA_HYSTERESIS, align 4
  %785 = load i32, i32* @SSB_SPROM8_TEMPDELTA_HYSTERESIS_SHIFT, align 4
  %786 = call i32 @SPEX(i32 %782, i32 %783, i32 %784, i32 %785)
  ret void
}

declare dso_local i32 @BUILD_BUG_ON(i32) #1

declare dso_local i32 @ARRAY_SIZE(i32*) #1

declare dso_local i32 @SPOFF(i32) #1

declare dso_local i32 @cpu_to_be16(i32) #1

declare dso_local i32 @SPEX(i32, i32, i32, i32) #1

declare dso_local i32 @SPEX32(i32, i32, i32, i32) #1

declare dso_local i32 @SPEX_ARRAY8(i32, i32, i32, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
