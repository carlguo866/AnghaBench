; ModuleID = '/home/carl/AnghaBench/fastsocket/kernel/drivers/media/video/extr_tvp514x.c_tvp514x_reg_dump.c'
source_filename = "/home/carl/AnghaBench/fastsocket/kernel/drivers/media/video/extr_tvp514x.c_tvp514x_reg_dump.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.v4l2_subdev = type { i32 }

@REG_INPUT_SEL = common dso_local global i32 0, align 4
@REG_AFE_GAIN_CTRL = common dso_local global i32 0, align 4
@REG_VIDEO_STD = common dso_local global i32 0, align 4
@REG_OPERATION_MODE = common dso_local global i32 0, align 4
@REG_COLOR_KILLER = common dso_local global i32 0, align 4
@REG_LUMA_CONTROL1 = common dso_local global i32 0, align 4
@REG_LUMA_CONTROL2 = common dso_local global i32 0, align 4
@REG_LUMA_CONTROL3 = common dso_local global i32 0, align 4
@REG_BRIGHTNESS = common dso_local global i32 0, align 4
@REG_CONTRAST = common dso_local global i32 0, align 4
@REG_SATURATION = common dso_local global i32 0, align 4
@REG_HUE = common dso_local global i32 0, align 4
@REG_CHROMA_CONTROL1 = common dso_local global i32 0, align 4
@REG_CHROMA_CONTROL2 = common dso_local global i32 0, align 4
@REG_COMP_PR_SATURATION = common dso_local global i32 0, align 4
@REG_COMP_Y_CONTRAST = common dso_local global i32 0, align 4
@REG_COMP_PB_SATURATION = common dso_local global i32 0, align 4
@REG_COMP_Y_BRIGHTNESS = common dso_local global i32 0, align 4
@REG_AVID_START_PIXEL_LSB = common dso_local global i32 0, align 4
@REG_AVID_START_PIXEL_MSB = common dso_local global i32 0, align 4
@REG_AVID_STOP_PIXEL_LSB = common dso_local global i32 0, align 4
@REG_AVID_STOP_PIXEL_MSB = common dso_local global i32 0, align 4
@REG_HSYNC_START_PIXEL_LSB = common dso_local global i32 0, align 4
@REG_HSYNC_START_PIXEL_MSB = common dso_local global i32 0, align 4
@REG_HSYNC_STOP_PIXEL_LSB = common dso_local global i32 0, align 4
@REG_HSYNC_STOP_PIXEL_MSB = common dso_local global i32 0, align 4
@REG_VSYNC_START_LINE_LSB = common dso_local global i32 0, align 4
@REG_VSYNC_START_LINE_MSB = common dso_local global i32 0, align 4
@REG_VSYNC_STOP_LINE_LSB = common dso_local global i32 0, align 4
@REG_VSYNC_STOP_LINE_MSB = common dso_local global i32 0, align 4
@REG_VBLK_START_LINE_LSB = common dso_local global i32 0, align 4
@REG_VBLK_START_LINE_MSB = common dso_local global i32 0, align 4
@REG_VBLK_STOP_LINE_LSB = common dso_local global i32 0, align 4
@REG_VBLK_STOP_LINE_MSB = common dso_local global i32 0, align 4
@REG_SYNC_CONTROL = common dso_local global i32 0, align 4
@REG_OUTPUT_FORMATTER1 = common dso_local global i32 0, align 4
@REG_OUTPUT_FORMATTER2 = common dso_local global i32 0, align 4
@REG_OUTPUT_FORMATTER3 = common dso_local global i32 0, align 4
@REG_OUTPUT_FORMATTER4 = common dso_local global i32 0, align 4
@REG_OUTPUT_FORMATTER5 = common dso_local global i32 0, align 4
@REG_OUTPUT_FORMATTER6 = common dso_local global i32 0, align 4
@REG_CLEAR_LOST_LOCK = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.v4l2_subdev*)* @tvp514x_reg_dump to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @tvp514x_reg_dump(%struct.v4l2_subdev* %0) #0 {
  %2 = alloca %struct.v4l2_subdev*, align 8
  store %struct.v4l2_subdev* %0, %struct.v4l2_subdev** %2, align 8
  %3 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %4 = load i32, i32* @REG_INPUT_SEL, align 4
  %5 = call i32 @dump_reg(%struct.v4l2_subdev* %3, i32 %4)
  %6 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %7 = load i32, i32* @REG_AFE_GAIN_CTRL, align 4
  %8 = call i32 @dump_reg(%struct.v4l2_subdev* %6, i32 %7)
  %9 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %10 = load i32, i32* @REG_VIDEO_STD, align 4
  %11 = call i32 @dump_reg(%struct.v4l2_subdev* %9, i32 %10)
  %12 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %13 = load i32, i32* @REG_OPERATION_MODE, align 4
  %14 = call i32 @dump_reg(%struct.v4l2_subdev* %12, i32 %13)
  %15 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %16 = load i32, i32* @REG_COLOR_KILLER, align 4
  %17 = call i32 @dump_reg(%struct.v4l2_subdev* %15, i32 %16)
  %18 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %19 = load i32, i32* @REG_LUMA_CONTROL1, align 4
  %20 = call i32 @dump_reg(%struct.v4l2_subdev* %18, i32 %19)
  %21 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %22 = load i32, i32* @REG_LUMA_CONTROL2, align 4
  %23 = call i32 @dump_reg(%struct.v4l2_subdev* %21, i32 %22)
  %24 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %25 = load i32, i32* @REG_LUMA_CONTROL3, align 4
  %26 = call i32 @dump_reg(%struct.v4l2_subdev* %24, i32 %25)
  %27 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %28 = load i32, i32* @REG_BRIGHTNESS, align 4
  %29 = call i32 @dump_reg(%struct.v4l2_subdev* %27, i32 %28)
  %30 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %31 = load i32, i32* @REG_CONTRAST, align 4
  %32 = call i32 @dump_reg(%struct.v4l2_subdev* %30, i32 %31)
  %33 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %34 = load i32, i32* @REG_SATURATION, align 4
  %35 = call i32 @dump_reg(%struct.v4l2_subdev* %33, i32 %34)
  %36 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %37 = load i32, i32* @REG_HUE, align 4
  %38 = call i32 @dump_reg(%struct.v4l2_subdev* %36, i32 %37)
  %39 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %40 = load i32, i32* @REG_CHROMA_CONTROL1, align 4
  %41 = call i32 @dump_reg(%struct.v4l2_subdev* %39, i32 %40)
  %42 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %43 = load i32, i32* @REG_CHROMA_CONTROL2, align 4
  %44 = call i32 @dump_reg(%struct.v4l2_subdev* %42, i32 %43)
  %45 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %46 = load i32, i32* @REG_COMP_PR_SATURATION, align 4
  %47 = call i32 @dump_reg(%struct.v4l2_subdev* %45, i32 %46)
  %48 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %49 = load i32, i32* @REG_COMP_Y_CONTRAST, align 4
  %50 = call i32 @dump_reg(%struct.v4l2_subdev* %48, i32 %49)
  %51 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %52 = load i32, i32* @REG_COMP_PB_SATURATION, align 4
  %53 = call i32 @dump_reg(%struct.v4l2_subdev* %51, i32 %52)
  %54 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %55 = load i32, i32* @REG_COMP_Y_BRIGHTNESS, align 4
  %56 = call i32 @dump_reg(%struct.v4l2_subdev* %54, i32 %55)
  %57 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %58 = load i32, i32* @REG_AVID_START_PIXEL_LSB, align 4
  %59 = call i32 @dump_reg(%struct.v4l2_subdev* %57, i32 %58)
  %60 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %61 = load i32, i32* @REG_AVID_START_PIXEL_MSB, align 4
  %62 = call i32 @dump_reg(%struct.v4l2_subdev* %60, i32 %61)
  %63 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %64 = load i32, i32* @REG_AVID_STOP_PIXEL_LSB, align 4
  %65 = call i32 @dump_reg(%struct.v4l2_subdev* %63, i32 %64)
  %66 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %67 = load i32, i32* @REG_AVID_STOP_PIXEL_MSB, align 4
  %68 = call i32 @dump_reg(%struct.v4l2_subdev* %66, i32 %67)
  %69 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %70 = load i32, i32* @REG_HSYNC_START_PIXEL_LSB, align 4
  %71 = call i32 @dump_reg(%struct.v4l2_subdev* %69, i32 %70)
  %72 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %73 = load i32, i32* @REG_HSYNC_START_PIXEL_MSB, align 4
  %74 = call i32 @dump_reg(%struct.v4l2_subdev* %72, i32 %73)
  %75 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %76 = load i32, i32* @REG_HSYNC_STOP_PIXEL_LSB, align 4
  %77 = call i32 @dump_reg(%struct.v4l2_subdev* %75, i32 %76)
  %78 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %79 = load i32, i32* @REG_HSYNC_STOP_PIXEL_MSB, align 4
  %80 = call i32 @dump_reg(%struct.v4l2_subdev* %78, i32 %79)
  %81 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %82 = load i32, i32* @REG_VSYNC_START_LINE_LSB, align 4
  %83 = call i32 @dump_reg(%struct.v4l2_subdev* %81, i32 %82)
  %84 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %85 = load i32, i32* @REG_VSYNC_START_LINE_MSB, align 4
  %86 = call i32 @dump_reg(%struct.v4l2_subdev* %84, i32 %85)
  %87 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %88 = load i32, i32* @REG_VSYNC_STOP_LINE_LSB, align 4
  %89 = call i32 @dump_reg(%struct.v4l2_subdev* %87, i32 %88)
  %90 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %91 = load i32, i32* @REG_VSYNC_STOP_LINE_MSB, align 4
  %92 = call i32 @dump_reg(%struct.v4l2_subdev* %90, i32 %91)
  %93 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %94 = load i32, i32* @REG_VBLK_START_LINE_LSB, align 4
  %95 = call i32 @dump_reg(%struct.v4l2_subdev* %93, i32 %94)
  %96 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %97 = load i32, i32* @REG_VBLK_START_LINE_MSB, align 4
  %98 = call i32 @dump_reg(%struct.v4l2_subdev* %96, i32 %97)
  %99 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %100 = load i32, i32* @REG_VBLK_STOP_LINE_LSB, align 4
  %101 = call i32 @dump_reg(%struct.v4l2_subdev* %99, i32 %100)
  %102 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %103 = load i32, i32* @REG_VBLK_STOP_LINE_MSB, align 4
  %104 = call i32 @dump_reg(%struct.v4l2_subdev* %102, i32 %103)
  %105 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %106 = load i32, i32* @REG_SYNC_CONTROL, align 4
  %107 = call i32 @dump_reg(%struct.v4l2_subdev* %105, i32 %106)
  %108 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %109 = load i32, i32* @REG_OUTPUT_FORMATTER1, align 4
  %110 = call i32 @dump_reg(%struct.v4l2_subdev* %108, i32 %109)
  %111 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %112 = load i32, i32* @REG_OUTPUT_FORMATTER2, align 4
  %113 = call i32 @dump_reg(%struct.v4l2_subdev* %111, i32 %112)
  %114 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %115 = load i32, i32* @REG_OUTPUT_FORMATTER3, align 4
  %116 = call i32 @dump_reg(%struct.v4l2_subdev* %114, i32 %115)
  %117 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %118 = load i32, i32* @REG_OUTPUT_FORMATTER4, align 4
  %119 = call i32 @dump_reg(%struct.v4l2_subdev* %117, i32 %118)
  %120 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %121 = load i32, i32* @REG_OUTPUT_FORMATTER5, align 4
  %122 = call i32 @dump_reg(%struct.v4l2_subdev* %120, i32 %121)
  %123 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %124 = load i32, i32* @REG_OUTPUT_FORMATTER6, align 4
  %125 = call i32 @dump_reg(%struct.v4l2_subdev* %123, i32 %124)
  %126 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %2, align 8
  %127 = load i32, i32* @REG_CLEAR_LOST_LOCK, align 4
  %128 = call i32 @dump_reg(%struct.v4l2_subdev* %126, i32 %127)
  ret void
}

declare dso_local i32 @dump_reg(%struct.v4l2_subdev*, i32) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
