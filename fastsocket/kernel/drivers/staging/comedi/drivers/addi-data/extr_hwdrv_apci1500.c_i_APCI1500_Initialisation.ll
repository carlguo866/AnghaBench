; ModuleID = '/home/carl/AnghaBench/fastsocket/kernel/drivers/staging/comedi/drivers/addi-data/extr_hwdrv_apci1500.c_i_APCI1500_Initialisation.c'
source_filename = "/home/carl/AnghaBench/fastsocket/kernel/drivers/staging/comedi/drivers/addi-data/extr_hwdrv_apci1500.c_i_APCI1500_Initialisation.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_2__ = type { i64 }
%struct.comedi_device = type { i32 }
%struct.comedi_subdevice = type { i32 }
%struct.comedi_insn = type { i32 }

@devpriv = common dso_local global %struct.TYPE_2__* null, align 8
@APCI1500_Z8536_CONTROL_REGISTER = common dso_local global i64 0, align 8
@APCI1500_RW_MASTER_CONFIGURATION_CONTROL = common dso_local global i32 0, align 4
@APCI1500_RW_PORT_A_SPECIFICATION = common dso_local global i32 0, align 4
@APCI1500_RW_PORT_A_DATA_PCITCH_POLARITY = common dso_local global i32 0, align 4
@APCI1500_RW_PORT_A_DATA_DIRECTION = common dso_local global i32 0, align 4
@APCI1500_RW_PORT_A_COMMAND_AND_STATUS = common dso_local global i32 0, align 4
@APCI1500_RW_PORT_A_HANDSHAKE_SPECIFICATION = common dso_local global i32 0, align 4
@APCI1500_RW_PORT_B_SPECIFICATION = common dso_local global i32 0, align 4
@APCI1500_RW_PORT_B_DATA_PCITCH_POLARITY = common dso_local global i32 0, align 4
@APCI1500_RW_PORT_B_DATA_DIRECTION = common dso_local global i32 0, align 4
@APCI1500_RW_PORT_B_COMMAND_AND_STATUS = common dso_local global i32 0, align 4
@APCI1500_RW_PORT_B_HANDSHAKE_SPECIFICATION = common dso_local global i32 0, align 4
@APCI1500_RW_PORT_C_DATA_PCITCH_POLARITY = common dso_local global i32 0, align 4
@APCI1500_RW_PORT_C_DATA_DIRECTION = common dso_local global i32 0, align 4
@APCI1500_RW_PORT_C_SPECIAL_IO_CONTROL = common dso_local global i32 0, align 4
@APCI1500_RW_CPT_TMR1_CMD_STATUS = common dso_local global i32 0, align 4
@APCI1500_RW_CPT_TMR2_CMD_STATUS = common dso_local global i32 0, align 4
@APCI1500_RW_CPT_TMR3_CMD_STATUS = common dso_local global i32 0, align 4
@APCI1500_RW_MASTER_INTERRUPT_CONTROL = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @i_APCI1500_Initialisation(%struct.comedi_device* %0, %struct.comedi_subdevice* %1, %struct.comedi_insn* %2, i32* %3) #0 {
  %5 = alloca %struct.comedi_device*, align 8
  %6 = alloca %struct.comedi_subdevice*, align 8
  %7 = alloca %struct.comedi_insn*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32, align 4
  store %struct.comedi_device* %0, %struct.comedi_device** %5, align 8
  store %struct.comedi_subdevice* %1, %struct.comedi_subdevice** %6, align 8
  store %struct.comedi_insn* %2, %struct.comedi_insn** %7, align 8
  store i32* %3, i32** %8, align 8
  store i32 0, i32* %9, align 4
  %10 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %11 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %10, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %14 = add nsw i64 %12, %13
  %15 = call i32 @inb(i64 %14)
  store i32 %15, i32* %9, align 4
  %16 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %17 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %16, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %20 = add nsw i64 %18, %19
  %21 = call i32 @outb(i32 0, i64 %20)
  %22 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %23 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %22, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %26 = add nsw i64 %24, %25
  %27 = call i32 @inb(i64 %26)
  store i32 %27, i32* %9, align 4
  %28 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %29 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %28, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %32 = add nsw i64 %30, %31
  %33 = call i32 @outb(i32 0, i64 %32)
  %34 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %35 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %34, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %38 = add nsw i64 %36, %37
  %39 = call i32 @outb(i32 1, i64 %38)
  %40 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %41 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %40, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %44 = add nsw i64 %42, %43
  %45 = call i32 @outb(i32 0, i64 %44)
  %46 = load i32, i32* @APCI1500_RW_MASTER_CONFIGURATION_CONTROL, align 4
  %47 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %48 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %47, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %51 = add nsw i64 %49, %50
  %52 = call i32 @outb(i32 %46, i64 %51)
  %53 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %54 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %53, i32 0, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %57 = add nsw i64 %55, %56
  %58 = call i32 @outb(i32 244, i64 %57)
  %59 = load i32, i32* @APCI1500_RW_PORT_A_SPECIFICATION, align 4
  %60 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %61 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %60, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %64 = add nsw i64 %62, %63
  %65 = call i32 @outb(i32 %59, i64 %64)
  %66 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %67 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %66, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %70 = add nsw i64 %68, %69
  %71 = call i32 @outb(i32 16, i64 %70)
  %72 = load i32, i32* @APCI1500_RW_PORT_A_DATA_PCITCH_POLARITY, align 4
  %73 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %74 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %73, i32 0, i32 0
  %75 = load i64, i64* %74, align 8
  %76 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %77 = add nsw i64 %75, %76
  %78 = call i32 @outb(i32 %72, i64 %77)
  %79 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %80 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %79, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %83 = add nsw i64 %81, %82
  %84 = call i32 @outb(i32 255, i64 %83)
  %85 = load i32, i32* @APCI1500_RW_PORT_A_DATA_DIRECTION, align 4
  %86 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %87 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %86, i32 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %90 = add nsw i64 %88, %89
  %91 = call i32 @outb(i32 %85, i64 %90)
  %92 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %93 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %92, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %96 = add nsw i64 %94, %95
  %97 = call i32 @outb(i32 255, i64 %96)
  %98 = load i32, i32* @APCI1500_RW_PORT_A_COMMAND_AND_STATUS, align 4
  %99 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %100 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %99, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %103 = add nsw i64 %101, %102
  %104 = call i32 @outb(i32 %98, i64 %103)
  %105 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %106 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %105, i32 0, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %109 = add nsw i64 %107, %108
  %110 = call i32 @outb(i32 32, i64 %109)
  %111 = load i32, i32* @APCI1500_RW_PORT_A_COMMAND_AND_STATUS, align 4
  %112 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %113 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %112, i32 0, i32 0
  %114 = load i64, i64* %113, align 8
  %115 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %116 = add nsw i64 %114, %115
  %117 = call i32 @outb(i32 %111, i64 %116)
  %118 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %119 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %118, i32 0, i32 0
  %120 = load i64, i64* %119, align 8
  %121 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %122 = add nsw i64 %120, %121
  %123 = call i32 @outb(i32 224, i64 %122)
  %124 = load i32, i32* @APCI1500_RW_PORT_A_HANDSHAKE_SPECIFICATION, align 4
  %125 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %126 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %125, i32 0, i32 0
  %127 = load i64, i64* %126, align 8
  %128 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %129 = add nsw i64 %127, %128
  %130 = call i32 @outb(i32 %124, i64 %129)
  %131 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %132 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %131, i32 0, i32 0
  %133 = load i64, i64* %132, align 8
  %134 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %135 = add nsw i64 %133, %134
  %136 = call i32 @outb(i32 0, i64 %135)
  %137 = load i32, i32* @APCI1500_RW_PORT_B_SPECIFICATION, align 4
  %138 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %139 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %138, i32 0, i32 0
  %140 = load i64, i64* %139, align 8
  %141 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %142 = add nsw i64 %140, %141
  %143 = call i32 @outb(i32 %137, i64 %142)
  %144 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %145 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %144, i32 0, i32 0
  %146 = load i64, i64* %145, align 8
  %147 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %148 = add nsw i64 %146, %147
  %149 = call i32 @outb(i32 16, i64 %148)
  %150 = load i32, i32* @APCI1500_RW_PORT_B_DATA_PCITCH_POLARITY, align 4
  %151 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %152 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %151, i32 0, i32 0
  %153 = load i64, i64* %152, align 8
  %154 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %155 = add nsw i64 %153, %154
  %156 = call i32 @outb(i32 %150, i64 %155)
  %157 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %158 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %157, i32 0, i32 0
  %159 = load i64, i64* %158, align 8
  %160 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %161 = add nsw i64 %159, %160
  %162 = call i32 @outb(i32 127, i64 %161)
  %163 = load i32, i32* @APCI1500_RW_PORT_B_DATA_DIRECTION, align 4
  %164 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %165 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %164, i32 0, i32 0
  %166 = load i64, i64* %165, align 8
  %167 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %168 = add nsw i64 %166, %167
  %169 = call i32 @outb(i32 %163, i64 %168)
  %170 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %171 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %170, i32 0, i32 0
  %172 = load i64, i64* %171, align 8
  %173 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %174 = add nsw i64 %172, %173
  %175 = call i32 @outb(i32 255, i64 %174)
  %176 = load i32, i32* @APCI1500_RW_PORT_B_COMMAND_AND_STATUS, align 4
  %177 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %178 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %177, i32 0, i32 0
  %179 = load i64, i64* %178, align 8
  %180 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %181 = add nsw i64 %179, %180
  %182 = call i32 @outb(i32 %176, i64 %181)
  %183 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %184 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %183, i32 0, i32 0
  %185 = load i64, i64* %184, align 8
  %186 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %187 = add nsw i64 %185, %186
  %188 = call i32 @outb(i32 32, i64 %187)
  %189 = load i32, i32* @APCI1500_RW_PORT_B_COMMAND_AND_STATUS, align 4
  %190 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %191 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %190, i32 0, i32 0
  %192 = load i64, i64* %191, align 8
  %193 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %194 = add nsw i64 %192, %193
  %195 = call i32 @outb(i32 %189, i64 %194)
  %196 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %197 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %196, i32 0, i32 0
  %198 = load i64, i64* %197, align 8
  %199 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %200 = add nsw i64 %198, %199
  %201 = call i32 @outb(i32 224, i64 %200)
  %202 = load i32, i32* @APCI1500_RW_PORT_B_HANDSHAKE_SPECIFICATION, align 4
  %203 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %204 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %203, i32 0, i32 0
  %205 = load i64, i64* %204, align 8
  %206 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %207 = add nsw i64 %205, %206
  %208 = call i32 @outb(i32 %202, i64 %207)
  %209 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %210 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %209, i32 0, i32 0
  %211 = load i64, i64* %210, align 8
  %212 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %213 = add nsw i64 %211, %212
  %214 = call i32 @outb(i32 0, i64 %213)
  %215 = load i32, i32* @APCI1500_RW_PORT_C_DATA_PCITCH_POLARITY, align 4
  %216 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %217 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %216, i32 0, i32 0
  %218 = load i64, i64* %217, align 8
  %219 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %220 = add nsw i64 %218, %219
  %221 = call i32 @outb(i32 %215, i64 %220)
  %222 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %223 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %222, i32 0, i32 0
  %224 = load i64, i64* %223, align 8
  %225 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %226 = add nsw i64 %224, %225
  %227 = call i32 @outb(i32 9, i64 %226)
  %228 = load i32, i32* @APCI1500_RW_PORT_C_DATA_DIRECTION, align 4
  %229 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %230 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %229, i32 0, i32 0
  %231 = load i64, i64* %230, align 8
  %232 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %233 = add nsw i64 %231, %232
  %234 = call i32 @outb(i32 %228, i64 %233)
  %235 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %236 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %235, i32 0, i32 0
  %237 = load i64, i64* %236, align 8
  %238 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %239 = add nsw i64 %237, %238
  %240 = call i32 @outb(i32 14, i64 %239)
  %241 = load i32, i32* @APCI1500_RW_PORT_C_SPECIAL_IO_CONTROL, align 4
  %242 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %243 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %242, i32 0, i32 0
  %244 = load i64, i64* %243, align 8
  %245 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %246 = add nsw i64 %244, %245
  %247 = call i32 @outb(i32 %241, i64 %246)
  %248 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %249 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %248, i32 0, i32 0
  %250 = load i64, i64* %249, align 8
  %251 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %252 = add nsw i64 %250, %251
  %253 = call i32 @outb(i32 0, i64 %252)
  %254 = load i32, i32* @APCI1500_RW_CPT_TMR1_CMD_STATUS, align 4
  %255 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %256 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %255, i32 0, i32 0
  %257 = load i64, i64* %256, align 8
  %258 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %259 = add nsw i64 %257, %258
  %260 = call i32 @outb(i32 %254, i64 %259)
  %261 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %262 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %261, i32 0, i32 0
  %263 = load i64, i64* %262, align 8
  %264 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %265 = add nsw i64 %263, %264
  %266 = call i32 @outb(i32 32, i64 %265)
  %267 = load i32, i32* @APCI1500_RW_CPT_TMR1_CMD_STATUS, align 4
  %268 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %269 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %268, i32 0, i32 0
  %270 = load i64, i64* %269, align 8
  %271 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %272 = add nsw i64 %270, %271
  %273 = call i32 @outb(i32 %267, i64 %272)
  %274 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %275 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %274, i32 0, i32 0
  %276 = load i64, i64* %275, align 8
  %277 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %278 = add nsw i64 %276, %277
  %279 = call i32 @outb(i32 224, i64 %278)
  %280 = load i32, i32* @APCI1500_RW_CPT_TMR2_CMD_STATUS, align 4
  %281 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %282 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %281, i32 0, i32 0
  %283 = load i64, i64* %282, align 8
  %284 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %285 = add nsw i64 %283, %284
  %286 = call i32 @outb(i32 %280, i64 %285)
  %287 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %288 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %287, i32 0, i32 0
  %289 = load i64, i64* %288, align 8
  %290 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %291 = add nsw i64 %289, %290
  %292 = call i32 @outb(i32 32, i64 %291)
  %293 = load i32, i32* @APCI1500_RW_CPT_TMR2_CMD_STATUS, align 4
  %294 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %295 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %294, i32 0, i32 0
  %296 = load i64, i64* %295, align 8
  %297 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %298 = add nsw i64 %296, %297
  %299 = call i32 @outb(i32 %293, i64 %298)
  %300 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %301 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %300, i32 0, i32 0
  %302 = load i64, i64* %301, align 8
  %303 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %304 = add nsw i64 %302, %303
  %305 = call i32 @outb(i32 224, i64 %304)
  %306 = load i32, i32* @APCI1500_RW_CPT_TMR3_CMD_STATUS, align 4
  %307 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %308 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %307, i32 0, i32 0
  %309 = load i64, i64* %308, align 8
  %310 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %311 = add nsw i64 %309, %310
  %312 = call i32 @outb(i32 %306, i64 %311)
  %313 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %314 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %313, i32 0, i32 0
  %315 = load i64, i64* %314, align 8
  %316 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %317 = add nsw i64 %315, %316
  %318 = call i32 @outb(i32 32, i64 %317)
  %319 = load i32, i32* @APCI1500_RW_CPT_TMR3_CMD_STATUS, align 4
  %320 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %321 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %320, i32 0, i32 0
  %322 = load i64, i64* %321, align 8
  %323 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %324 = add nsw i64 %322, %323
  %325 = call i32 @outb(i32 %319, i64 %324)
  %326 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %327 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %326, i32 0, i32 0
  %328 = load i64, i64* %327, align 8
  %329 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %330 = add nsw i64 %328, %329
  %331 = call i32 @outb(i32 224, i64 %330)
  %332 = load i32, i32* @APCI1500_RW_MASTER_INTERRUPT_CONTROL, align 4
  %333 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %334 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %333, i32 0, i32 0
  %335 = load i64, i64* %334, align 8
  %336 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %337 = add nsw i64 %335, %336
  %338 = call i32 @outb(i32 %332, i64 %337)
  %339 = load %struct.TYPE_2__*, %struct.TYPE_2__** @devpriv, align 8
  %340 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %339, i32 0, i32 0
  %341 = load i64, i64* %340, align 8
  %342 = load i64, i64* @APCI1500_Z8536_CONTROL_REGISTER, align 8
  %343 = add nsw i64 %341, %342
  %344 = call i32 @outb(i32 0, i64 %343)
  %345 = load %struct.comedi_insn*, %struct.comedi_insn** %7, align 8
  %346 = getelementptr inbounds %struct.comedi_insn, %struct.comedi_insn* %345, i32 0, i32 0
  %347 = load i32, i32* %346, align 4
  ret i32 %347
}

declare dso_local i32 @inb(i64) #1

declare dso_local i32 @outb(i32, i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
