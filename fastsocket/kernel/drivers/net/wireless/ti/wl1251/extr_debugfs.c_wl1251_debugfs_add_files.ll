; ModuleID = '/home/carl/AnghaBench/fastsocket/kernel/drivers/net/wireless/ti/wl1251/extr_debugfs.c_wl1251_debugfs_add_files.c'
source_filename = "/home/carl/AnghaBench/fastsocket/kernel/drivers/net/wireless/ti/wl1251/extr_debugfs.c_wl1251_debugfs_add_files.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.wl1251 = type { %struct.TYPE_2__ }
%struct.TYPE_2__ = type { i32 }

@tx = common dso_local global i32 0, align 4
@internal_desc_overflow = common dso_local global i32 0, align 4
@rx = common dso_local global i32 0, align 4
@out_of_mem = common dso_local global i32 0, align 4
@hdr_overflow = common dso_local global i32 0, align 4
@hw_stuck = common dso_local global i32 0, align 4
@dropped = common dso_local global i32 0, align 4
@fcs_err = common dso_local global i32 0, align 4
@xfr_hint_trig = common dso_local global i32 0, align 4
@path_reset = common dso_local global i32 0, align 4
@reset_counter = common dso_local global i32 0, align 4
@dma = common dso_local global i32 0, align 4
@rx_requested = common dso_local global i32 0, align 4
@rx_errors = common dso_local global i32 0, align 4
@tx_requested = common dso_local global i32 0, align 4
@tx_errors = common dso_local global i32 0, align 4
@isr = common dso_local global i32 0, align 4
@cmd_cmplt = common dso_local global i32 0, align 4
@fiqs = common dso_local global i32 0, align 4
@rx_headers = common dso_local global i32 0, align 4
@rx_mem_overflow = common dso_local global i32 0, align 4
@rx_rdys = common dso_local global i32 0, align 4
@irqs = common dso_local global i32 0, align 4
@tx_procs = common dso_local global i32 0, align 4
@decrypt_done = common dso_local global i32 0, align 4
@dma0_done = common dso_local global i32 0, align 4
@dma1_done = common dso_local global i32 0, align 4
@tx_exch_complete = common dso_local global i32 0, align 4
@commands = common dso_local global i32 0, align 4
@rx_procs = common dso_local global i32 0, align 4
@hw_pm_mode_changes = common dso_local global i32 0, align 4
@host_acknowledges = common dso_local global i32 0, align 4
@pci_pm = common dso_local global i32 0, align 4
@wakeups = common dso_local global i32 0, align 4
@low_rssi = common dso_local global i32 0, align 4
@wep = common dso_local global i32 0, align 4
@addr_key_count = common dso_local global i32 0, align 4
@default_key_count = common dso_local global i32 0, align 4
@key_not_found = common dso_local global i32 0, align 4
@decrypt_fail = common dso_local global i32 0, align 4
@packets = common dso_local global i32 0, align 4
@interrupt = common dso_local global i32 0, align 4
@pwr = common dso_local global i32 0, align 4
@ps_enter = common dso_local global i32 0, align 4
@elp_enter = common dso_local global i32 0, align 4
@missing_bcns = common dso_local global i32 0, align 4
@wake_on_host = common dso_local global i32 0, align 4
@wake_on_timer_exp = common dso_local global i32 0, align 4
@tx_with_ps = common dso_local global i32 0, align 4
@tx_without_ps = common dso_local global i32 0, align 4
@rcvd_beacons = common dso_local global i32 0, align 4
@power_save_off = common dso_local global i32 0, align 4
@enable_ps = common dso_local global i32 0, align 4
@disable_ps = common dso_local global i32 0, align 4
@fix_tsf_ps = common dso_local global i32 0, align 4
@rcvd_awake_beacons = common dso_local global i32 0, align 4
@mic = common dso_local global i32 0, align 4
@rx_pkts = common dso_local global i32 0, align 4
@calc_failure = common dso_local global i32 0, align 4
@aes = common dso_local global i32 0, align 4
@encrypt_fail = common dso_local global i32 0, align 4
@encrypt_packets = common dso_local global i32 0, align 4
@decrypt_packets = common dso_local global i32 0, align 4
@encrypt_interrupt = common dso_local global i32 0, align 4
@decrypt_interrupt = common dso_local global i32 0, align 4
@event = common dso_local global i32 0, align 4
@heart_beat = common dso_local global i32 0, align 4
@calibration = common dso_local global i32 0, align 4
@rx_mismatch = common dso_local global i32 0, align 4
@rx_mem_empty = common dso_local global i32 0, align 4
@rx_pool = common dso_local global i32 0, align 4
@oom_late = common dso_local global i32 0, align 4
@phy_transmit_error = common dso_local global i32 0, align 4
@tx_stuck = common dso_local global i32 0, align 4
@ps = common dso_local global i32 0, align 4
@pspoll_timeouts = common dso_local global i32 0, align 4
@upsd_timeouts = common dso_local global i32 0, align 4
@upsd_max_sptime = common dso_local global i32 0, align 4
@upsd_max_apturn = common dso_local global i32 0, align 4
@pspoll_max_apturn = common dso_local global i32 0, align 4
@pspoll_utilization = common dso_local global i32 0, align 4
@upsd_utilization = common dso_local global i32 0, align 4
@rxpipe = common dso_local global i32 0, align 4
@rx_prep_beacon_drop = common dso_local global i32 0, align 4
@descr_host_int_trig_rx_data = common dso_local global i32 0, align 4
@beacon_buffer_thres_host_int_trig_rx_data = common dso_local global i32 0, align 4
@missed_beacon_host_int_trig_rx_data = common dso_local global i32 0, align 4
@tx_xfr_host_int_trig_rx_data = common dso_local global i32 0, align 4
@tx_queue_len = common dso_local global i32 0, align 4
@tx_queue_status = common dso_local global i32 0, align 4
@retry_count = common dso_local global i32 0, align 4
@excessive_retries = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (%struct.wl1251*)* @wl1251_debugfs_add_files to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @wl1251_debugfs_add_files(%struct.wl1251* %0) #0 {
  %2 = alloca %struct.wl1251*, align 8
  %3 = alloca i32, align 4
  store %struct.wl1251* %0, %struct.wl1251** %2, align 8
  store i32 0, i32* %3, align 4
  %4 = load i32, i32* @tx, align 4
  %5 = load i32, i32* @internal_desc_overflow, align 4
  %6 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %4, i32 %5)
  %7 = load i32, i32* @rx, align 4
  %8 = load i32, i32* @out_of_mem, align 4
  %9 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %7, i32 %8)
  %10 = load i32, i32* @rx, align 4
  %11 = load i32, i32* @hdr_overflow, align 4
  %12 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %10, i32 %11)
  %13 = load i32, i32* @rx, align 4
  %14 = load i32, i32* @hw_stuck, align 4
  %15 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %13, i32 %14)
  %16 = load i32, i32* @rx, align 4
  %17 = load i32, i32* @dropped, align 4
  %18 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %16, i32 %17)
  %19 = load i32, i32* @rx, align 4
  %20 = load i32, i32* @fcs_err, align 4
  %21 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %19, i32 %20)
  %22 = load i32, i32* @rx, align 4
  %23 = load i32, i32* @xfr_hint_trig, align 4
  %24 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %22, i32 %23)
  %25 = load i32, i32* @rx, align 4
  %26 = load i32, i32* @path_reset, align 4
  %27 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %25, i32 %26)
  %28 = load i32, i32* @rx, align 4
  %29 = load i32, i32* @reset_counter, align 4
  %30 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %28, i32 %29)
  %31 = load i32, i32* @dma, align 4
  %32 = load i32, i32* @rx_requested, align 4
  %33 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %31, i32 %32)
  %34 = load i32, i32* @dma, align 4
  %35 = load i32, i32* @rx_errors, align 4
  %36 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %34, i32 %35)
  %37 = load i32, i32* @dma, align 4
  %38 = load i32, i32* @tx_requested, align 4
  %39 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %37, i32 %38)
  %40 = load i32, i32* @dma, align 4
  %41 = load i32, i32* @tx_errors, align 4
  %42 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %40, i32 %41)
  %43 = load i32, i32* @isr, align 4
  %44 = load i32, i32* @cmd_cmplt, align 4
  %45 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %43, i32 %44)
  %46 = load i32, i32* @isr, align 4
  %47 = load i32, i32* @fiqs, align 4
  %48 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %46, i32 %47)
  %49 = load i32, i32* @isr, align 4
  %50 = load i32, i32* @rx_headers, align 4
  %51 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %49, i32 %50)
  %52 = load i32, i32* @isr, align 4
  %53 = load i32, i32* @rx_mem_overflow, align 4
  %54 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %52, i32 %53)
  %55 = load i32, i32* @isr, align 4
  %56 = load i32, i32* @rx_rdys, align 4
  %57 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %55, i32 %56)
  %58 = load i32, i32* @isr, align 4
  %59 = load i32, i32* @irqs, align 4
  %60 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %58, i32 %59)
  %61 = load i32, i32* @isr, align 4
  %62 = load i32, i32* @tx_procs, align 4
  %63 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %61, i32 %62)
  %64 = load i32, i32* @isr, align 4
  %65 = load i32, i32* @decrypt_done, align 4
  %66 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %64, i32 %65)
  %67 = load i32, i32* @isr, align 4
  %68 = load i32, i32* @dma0_done, align 4
  %69 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %67, i32 %68)
  %70 = load i32, i32* @isr, align 4
  %71 = load i32, i32* @dma1_done, align 4
  %72 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %70, i32 %71)
  %73 = load i32, i32* @isr, align 4
  %74 = load i32, i32* @tx_exch_complete, align 4
  %75 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %73, i32 %74)
  %76 = load i32, i32* @isr, align 4
  %77 = load i32, i32* @commands, align 4
  %78 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %76, i32 %77)
  %79 = load i32, i32* @isr, align 4
  %80 = load i32, i32* @rx_procs, align 4
  %81 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %79, i32 %80)
  %82 = load i32, i32* @isr, align 4
  %83 = load i32, i32* @hw_pm_mode_changes, align 4
  %84 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %82, i32 %83)
  %85 = load i32, i32* @isr, align 4
  %86 = load i32, i32* @host_acknowledges, align 4
  %87 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %85, i32 %86)
  %88 = load i32, i32* @isr, align 4
  %89 = load i32, i32* @pci_pm, align 4
  %90 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %88, i32 %89)
  %91 = load i32, i32* @isr, align 4
  %92 = load i32, i32* @wakeups, align 4
  %93 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %91, i32 %92)
  %94 = load i32, i32* @isr, align 4
  %95 = load i32, i32* @low_rssi, align 4
  %96 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %94, i32 %95)
  %97 = load i32, i32* @wep, align 4
  %98 = load i32, i32* @addr_key_count, align 4
  %99 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %97, i32 %98)
  %100 = load i32, i32* @wep, align 4
  %101 = load i32, i32* @default_key_count, align 4
  %102 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %100, i32 %101)
  %103 = load i32, i32* @wep, align 4
  %104 = load i32, i32* @key_not_found, align 4
  %105 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %103, i32 %104)
  %106 = load i32, i32* @wep, align 4
  %107 = load i32, i32* @decrypt_fail, align 4
  %108 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %106, i32 %107)
  %109 = load i32, i32* @wep, align 4
  %110 = load i32, i32* @packets, align 4
  %111 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %109, i32 %110)
  %112 = load i32, i32* @wep, align 4
  %113 = load i32, i32* @interrupt, align 4
  %114 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %112, i32 %113)
  %115 = load i32, i32* @pwr, align 4
  %116 = load i32, i32* @ps_enter, align 4
  %117 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %115, i32 %116)
  %118 = load i32, i32* @pwr, align 4
  %119 = load i32, i32* @elp_enter, align 4
  %120 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %118, i32 %119)
  %121 = load i32, i32* @pwr, align 4
  %122 = load i32, i32* @missing_bcns, align 4
  %123 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %121, i32 %122)
  %124 = load i32, i32* @pwr, align 4
  %125 = load i32, i32* @wake_on_host, align 4
  %126 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %124, i32 %125)
  %127 = load i32, i32* @pwr, align 4
  %128 = load i32, i32* @wake_on_timer_exp, align 4
  %129 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %127, i32 %128)
  %130 = load i32, i32* @pwr, align 4
  %131 = load i32, i32* @tx_with_ps, align 4
  %132 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %130, i32 %131)
  %133 = load i32, i32* @pwr, align 4
  %134 = load i32, i32* @tx_without_ps, align 4
  %135 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %133, i32 %134)
  %136 = load i32, i32* @pwr, align 4
  %137 = load i32, i32* @rcvd_beacons, align 4
  %138 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %136, i32 %137)
  %139 = load i32, i32* @pwr, align 4
  %140 = load i32, i32* @power_save_off, align 4
  %141 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %139, i32 %140)
  %142 = load i32, i32* @pwr, align 4
  %143 = load i32, i32* @enable_ps, align 4
  %144 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %142, i32 %143)
  %145 = load i32, i32* @pwr, align 4
  %146 = load i32, i32* @disable_ps, align 4
  %147 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %145, i32 %146)
  %148 = load i32, i32* @pwr, align 4
  %149 = load i32, i32* @fix_tsf_ps, align 4
  %150 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %148, i32 %149)
  %151 = load i32, i32* @pwr, align 4
  %152 = load i32, i32* @rcvd_awake_beacons, align 4
  %153 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %151, i32 %152)
  %154 = load i32, i32* @mic, align 4
  %155 = load i32, i32* @rx_pkts, align 4
  %156 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %154, i32 %155)
  %157 = load i32, i32* @mic, align 4
  %158 = load i32, i32* @calc_failure, align 4
  %159 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %157, i32 %158)
  %160 = load i32, i32* @aes, align 4
  %161 = load i32, i32* @encrypt_fail, align 4
  %162 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %160, i32 %161)
  %163 = load i32, i32* @aes, align 4
  %164 = load i32, i32* @decrypt_fail, align 4
  %165 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %163, i32 %164)
  %166 = load i32, i32* @aes, align 4
  %167 = load i32, i32* @encrypt_packets, align 4
  %168 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %166, i32 %167)
  %169 = load i32, i32* @aes, align 4
  %170 = load i32, i32* @decrypt_packets, align 4
  %171 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %169, i32 %170)
  %172 = load i32, i32* @aes, align 4
  %173 = load i32, i32* @encrypt_interrupt, align 4
  %174 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %172, i32 %173)
  %175 = load i32, i32* @aes, align 4
  %176 = load i32, i32* @decrypt_interrupt, align 4
  %177 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %175, i32 %176)
  %178 = load i32, i32* @event, align 4
  %179 = load i32, i32* @heart_beat, align 4
  %180 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %178, i32 %179)
  %181 = load i32, i32* @event, align 4
  %182 = load i32, i32* @calibration, align 4
  %183 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %181, i32 %182)
  %184 = load i32, i32* @event, align 4
  %185 = load i32, i32* @rx_mismatch, align 4
  %186 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %184, i32 %185)
  %187 = load i32, i32* @event, align 4
  %188 = load i32, i32* @rx_mem_empty, align 4
  %189 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %187, i32 %188)
  %190 = load i32, i32* @event, align 4
  %191 = load i32, i32* @rx_pool, align 4
  %192 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %190, i32 %191)
  %193 = load i32, i32* @event, align 4
  %194 = load i32, i32* @oom_late, align 4
  %195 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %193, i32 %194)
  %196 = load i32, i32* @event, align 4
  %197 = load i32, i32* @phy_transmit_error, align 4
  %198 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %196, i32 %197)
  %199 = load i32, i32* @event, align 4
  %200 = load i32, i32* @tx_stuck, align 4
  %201 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %199, i32 %200)
  %202 = load i32, i32* @ps, align 4
  %203 = load i32, i32* @pspoll_timeouts, align 4
  %204 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %202, i32 %203)
  %205 = load i32, i32* @ps, align 4
  %206 = load i32, i32* @upsd_timeouts, align 4
  %207 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %205, i32 %206)
  %208 = load i32, i32* @ps, align 4
  %209 = load i32, i32* @upsd_max_sptime, align 4
  %210 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %208, i32 %209)
  %211 = load i32, i32* @ps, align 4
  %212 = load i32, i32* @upsd_max_apturn, align 4
  %213 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %211, i32 %212)
  %214 = load i32, i32* @ps, align 4
  %215 = load i32, i32* @pspoll_max_apturn, align 4
  %216 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %214, i32 %215)
  %217 = load i32, i32* @ps, align 4
  %218 = load i32, i32* @pspoll_utilization, align 4
  %219 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %217, i32 %218)
  %220 = load i32, i32* @ps, align 4
  %221 = load i32, i32* @upsd_utilization, align 4
  %222 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %220, i32 %221)
  %223 = load i32, i32* @rxpipe, align 4
  %224 = load i32, i32* @rx_prep_beacon_drop, align 4
  %225 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %223, i32 %224)
  %226 = load i32, i32* @rxpipe, align 4
  %227 = load i32, i32* @descr_host_int_trig_rx_data, align 4
  %228 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %226, i32 %227)
  %229 = load i32, i32* @rxpipe, align 4
  %230 = load i32, i32* @beacon_buffer_thres_host_int_trig_rx_data, align 4
  %231 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %229, i32 %230)
  %232 = load i32, i32* @rxpipe, align 4
  %233 = load i32, i32* @missed_beacon_host_int_trig_rx_data, align 4
  %234 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %232, i32 %233)
  %235 = load i32, i32* @rxpipe, align 4
  %236 = load i32, i32* @tx_xfr_host_int_trig_rx_data, align 4
  %237 = call i32 @DEBUGFS_FWSTATS_ADD(i32 %235, i32 %236)
  %238 = load i32, i32* @tx_queue_len, align 4
  %239 = load %struct.wl1251*, %struct.wl1251** %2, align 8
  %240 = getelementptr inbounds %struct.wl1251, %struct.wl1251* %239, i32 0, i32 0
  %241 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %240, i32 0, i32 0
  %242 = load i32, i32* %241, align 4
  %243 = call i32 @DEBUGFS_ADD(i32 %238, i32 %242)
  %244 = load i32, i32* @tx_queue_status, align 4
  %245 = load %struct.wl1251*, %struct.wl1251** %2, align 8
  %246 = getelementptr inbounds %struct.wl1251, %struct.wl1251* %245, i32 0, i32 0
  %247 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %246, i32 0, i32 0
  %248 = load i32, i32* %247, align 4
  %249 = call i32 @DEBUGFS_ADD(i32 %244, i32 %248)
  %250 = load i32, i32* @retry_count, align 4
  %251 = load %struct.wl1251*, %struct.wl1251** %2, align 8
  %252 = getelementptr inbounds %struct.wl1251, %struct.wl1251* %251, i32 0, i32 0
  %253 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %252, i32 0, i32 0
  %254 = load i32, i32* %253, align 4
  %255 = call i32 @DEBUGFS_ADD(i32 %250, i32 %254)
  %256 = load i32, i32* @excessive_retries, align 4
  %257 = load %struct.wl1251*, %struct.wl1251** %2, align 8
  %258 = getelementptr inbounds %struct.wl1251, %struct.wl1251* %257, i32 0, i32 0
  %259 = getelementptr inbounds %struct.TYPE_2__, %struct.TYPE_2__* %258, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = call i32 @DEBUGFS_ADD(i32 %256, i32 %260)
  br label %262

262:                                              ; preds = %1
  %263 = load i32, i32* %3, align 4
  %264 = icmp slt i32 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %262
  %266 = load %struct.wl1251*, %struct.wl1251** %2, align 8
  %267 = call i32 @wl1251_debugfs_delete_files(%struct.wl1251* %266)
  br label %268

268:                                              ; preds = %265, %262
  %269 = load i32, i32* %3, align 4
  ret i32 %269
}

declare dso_local i32 @DEBUGFS_FWSTATS_ADD(i32, i32) #1

declare dso_local i32 @DEBUGFS_ADD(i32, i32) #1

declare dso_local i32 @wl1251_debugfs_delete_files(%struct.wl1251*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
