; ModuleID = '/home/carl/AnghaBench/fastsocket/kernel/drivers/net/sfc/extr_falcon_xmac.c_falcon_update_stats_xmac.c'
source_filename = "/home/carl/AnghaBench/fastsocket/kernel/drivers/net/sfc/extr_falcon_xmac.c_falcon_update_stats_xmac.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.efx_nic = type { %struct.efx_mac_stats }
%struct.efx_mac_stats = type { i32, i32, i64, i64, i32, i64, i64, i32 }

@XgRxOctets = common dso_local global i32 0, align 4
@rx_bytes = common dso_local global i32 0, align 4
@XgRxOctetsOK = common dso_local global i32 0, align 4
@rx_good_bytes = common dso_local global i32 0, align 4
@XgRxPkts = common dso_local global i32 0, align 4
@rx_packets = common dso_local global i32 0, align 4
@XgRxPktsOK = common dso_local global i32 0, align 4
@rx_good = common dso_local global i32 0, align 4
@XgRxBroadcastPkts = common dso_local global i32 0, align 4
@rx_broadcast = common dso_local global i32 0, align 4
@XgRxMulticastPkts = common dso_local global i32 0, align 4
@rx_multicast = common dso_local global i32 0, align 4
@XgRxUnicastPkts = common dso_local global i32 0, align 4
@rx_unicast = common dso_local global i32 0, align 4
@XgRxUndersizePkts = common dso_local global i32 0, align 4
@rx_lt64 = common dso_local global i32 0, align 4
@XgRxOversizePkts = common dso_local global i32 0, align 4
@rx_gtjumbo = common dso_local global i32 0, align 4
@XgRxJabberPkts = common dso_local global i32 0, align 4
@rx_bad_gtjumbo = common dso_local global i32 0, align 4
@XgRxUndersizeFCSerrorPkts = common dso_local global i32 0, align 4
@rx_bad_lt64 = common dso_local global i32 0, align 4
@XgRxDropEvents = common dso_local global i32 0, align 4
@rx_overflow = common dso_local global i32 0, align 4
@XgRxFCSerrorPkts = common dso_local global i32 0, align 4
@rx_bad = common dso_local global i32 0, align 4
@XgRxAlignError = common dso_local global i32 0, align 4
@rx_align_error = common dso_local global i32 0, align 4
@XgRxSymbolError = common dso_local global i32 0, align 4
@rx_symbol_error = common dso_local global i32 0, align 4
@XgRxInternalMACError = common dso_local global i32 0, align 4
@rx_internal_error = common dso_local global i32 0, align 4
@XgRxControlPkts = common dso_local global i32 0, align 4
@rx_control = common dso_local global i32 0, align 4
@XgRxPausePkts = common dso_local global i32 0, align 4
@rx_pause = common dso_local global i32 0, align 4
@XgRxPkts64Octets = common dso_local global i32 0, align 4
@rx_64 = common dso_local global i32 0, align 4
@XgRxPkts65to127Octets = common dso_local global i32 0, align 4
@rx_65_to_127 = common dso_local global i32 0, align 4
@XgRxPkts128to255Octets = common dso_local global i32 0, align 4
@rx_128_to_255 = common dso_local global i32 0, align 4
@XgRxPkts256to511Octets = common dso_local global i32 0, align 4
@rx_256_to_511 = common dso_local global i32 0, align 4
@XgRxPkts512to1023Octets = common dso_local global i32 0, align 4
@rx_512_to_1023 = common dso_local global i32 0, align 4
@XgRxPkts1024to15xxOctets = common dso_local global i32 0, align 4
@rx_1024_to_15xx = common dso_local global i32 0, align 4
@XgRxPkts15xxtoMaxOctets = common dso_local global i32 0, align 4
@rx_15xx_to_jumbo = common dso_local global i32 0, align 4
@XgRxLengthError = common dso_local global i32 0, align 4
@rx_length_error = common dso_local global i32 0, align 4
@XgTxPkts = common dso_local global i32 0, align 4
@tx_packets = common dso_local global i32 0, align 4
@XgTxOctets = common dso_local global i32 0, align 4
@tx_bytes = common dso_local global i32 0, align 4
@XgTxMulticastPkts = common dso_local global i32 0, align 4
@tx_multicast = common dso_local global i32 0, align 4
@XgTxBroadcastPkts = common dso_local global i32 0, align 4
@tx_broadcast = common dso_local global i32 0, align 4
@XgTxUnicastPkts = common dso_local global i32 0, align 4
@tx_unicast = common dso_local global i32 0, align 4
@XgTxControlPkts = common dso_local global i32 0, align 4
@tx_control = common dso_local global i32 0, align 4
@XgTxPausePkts = common dso_local global i32 0, align 4
@tx_pause = common dso_local global i32 0, align 4
@XgTxPkts64Octets = common dso_local global i32 0, align 4
@tx_64 = common dso_local global i32 0, align 4
@XgTxPkts65to127Octets = common dso_local global i32 0, align 4
@tx_65_to_127 = common dso_local global i32 0, align 4
@XgTxPkts128to255Octets = common dso_local global i32 0, align 4
@tx_128_to_255 = common dso_local global i32 0, align 4
@XgTxPkts256to511Octets = common dso_local global i32 0, align 4
@tx_256_to_511 = common dso_local global i32 0, align 4
@XgTxPkts512to1023Octets = common dso_local global i32 0, align 4
@tx_512_to_1023 = common dso_local global i32 0, align 4
@XgTxPkts1024to15xxOctets = common dso_local global i32 0, align 4
@tx_1024_to_15xx = common dso_local global i32 0, align 4
@XgTxPkts1519toMaxOctets = common dso_local global i32 0, align 4
@tx_15xx_to_jumbo = common dso_local global i32 0, align 4
@XgTxUndersizePkts = common dso_local global i32 0, align 4
@tx_lt64 = common dso_local global i32 0, align 4
@XgTxOversizePkts = common dso_local global i32 0, align 4
@tx_gtjumbo = common dso_local global i32 0, align 4
@XgTxNonTcpUdpPkt = common dso_local global i32 0, align 4
@tx_non_tcpudp = common dso_local global i32 0, align 4
@XgTxMacSrcErrPkt = common dso_local global i32 0, align 4
@tx_mac_src_error = common dso_local global i32 0, align 4
@XgTxIpSrcErrPkt = common dso_local global i32 0, align 4
@tx_ip_src_error = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @falcon_update_stats_xmac(%struct.efx_nic* %0) #0 {
  %2 = alloca %struct.efx_nic*, align 8
  %3 = alloca %struct.efx_mac_stats*, align 8
  store %struct.efx_nic* %0, %struct.efx_nic** %2, align 8
  %4 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %5 = getelementptr inbounds %struct.efx_nic, %struct.efx_nic* %4, i32 0, i32 0
  store %struct.efx_mac_stats* %5, %struct.efx_mac_stats** %3, align 8
  %6 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %7 = load i32, i32* @XgRxOctets, align 4
  %8 = load i32, i32* @rx_bytes, align 4
  %9 = call i32 @FALCON_STAT(%struct.efx_nic* %6, i32 %7, i32 %8)
  %10 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %11 = load i32, i32* @XgRxOctetsOK, align 4
  %12 = load i32, i32* @rx_good_bytes, align 4
  %13 = call i32 @FALCON_STAT(%struct.efx_nic* %10, i32 %11, i32 %12)
  %14 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %15 = load i32, i32* @XgRxPkts, align 4
  %16 = load i32, i32* @rx_packets, align 4
  %17 = call i32 @FALCON_STAT(%struct.efx_nic* %14, i32 %15, i32 %16)
  %18 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %19 = load i32, i32* @XgRxPktsOK, align 4
  %20 = load i32, i32* @rx_good, align 4
  %21 = call i32 @FALCON_STAT(%struct.efx_nic* %18, i32 %19, i32 %20)
  %22 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %23 = load i32, i32* @XgRxBroadcastPkts, align 4
  %24 = load i32, i32* @rx_broadcast, align 4
  %25 = call i32 @FALCON_STAT(%struct.efx_nic* %22, i32 %23, i32 %24)
  %26 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %27 = load i32, i32* @XgRxMulticastPkts, align 4
  %28 = load i32, i32* @rx_multicast, align 4
  %29 = call i32 @FALCON_STAT(%struct.efx_nic* %26, i32 %27, i32 %28)
  %30 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %31 = load i32, i32* @XgRxUnicastPkts, align 4
  %32 = load i32, i32* @rx_unicast, align 4
  %33 = call i32 @FALCON_STAT(%struct.efx_nic* %30, i32 %31, i32 %32)
  %34 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %35 = load i32, i32* @XgRxUndersizePkts, align 4
  %36 = load i32, i32* @rx_lt64, align 4
  %37 = call i32 @FALCON_STAT(%struct.efx_nic* %34, i32 %35, i32 %36)
  %38 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %39 = load i32, i32* @XgRxOversizePkts, align 4
  %40 = load i32, i32* @rx_gtjumbo, align 4
  %41 = call i32 @FALCON_STAT(%struct.efx_nic* %38, i32 %39, i32 %40)
  %42 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %43 = load i32, i32* @XgRxJabberPkts, align 4
  %44 = load i32, i32* @rx_bad_gtjumbo, align 4
  %45 = call i32 @FALCON_STAT(%struct.efx_nic* %42, i32 %43, i32 %44)
  %46 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %47 = load i32, i32* @XgRxUndersizeFCSerrorPkts, align 4
  %48 = load i32, i32* @rx_bad_lt64, align 4
  %49 = call i32 @FALCON_STAT(%struct.efx_nic* %46, i32 %47, i32 %48)
  %50 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %51 = load i32, i32* @XgRxDropEvents, align 4
  %52 = load i32, i32* @rx_overflow, align 4
  %53 = call i32 @FALCON_STAT(%struct.efx_nic* %50, i32 %51, i32 %52)
  %54 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %55 = load i32, i32* @XgRxFCSerrorPkts, align 4
  %56 = load i32, i32* @rx_bad, align 4
  %57 = call i32 @FALCON_STAT(%struct.efx_nic* %54, i32 %55, i32 %56)
  %58 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %59 = load i32, i32* @XgRxAlignError, align 4
  %60 = load i32, i32* @rx_align_error, align 4
  %61 = call i32 @FALCON_STAT(%struct.efx_nic* %58, i32 %59, i32 %60)
  %62 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %63 = load i32, i32* @XgRxSymbolError, align 4
  %64 = load i32, i32* @rx_symbol_error, align 4
  %65 = call i32 @FALCON_STAT(%struct.efx_nic* %62, i32 %63, i32 %64)
  %66 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %67 = load i32, i32* @XgRxInternalMACError, align 4
  %68 = load i32, i32* @rx_internal_error, align 4
  %69 = call i32 @FALCON_STAT(%struct.efx_nic* %66, i32 %67, i32 %68)
  %70 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %71 = load i32, i32* @XgRxControlPkts, align 4
  %72 = load i32, i32* @rx_control, align 4
  %73 = call i32 @FALCON_STAT(%struct.efx_nic* %70, i32 %71, i32 %72)
  %74 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %75 = load i32, i32* @XgRxPausePkts, align 4
  %76 = load i32, i32* @rx_pause, align 4
  %77 = call i32 @FALCON_STAT(%struct.efx_nic* %74, i32 %75, i32 %76)
  %78 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %79 = load i32, i32* @XgRxPkts64Octets, align 4
  %80 = load i32, i32* @rx_64, align 4
  %81 = call i32 @FALCON_STAT(%struct.efx_nic* %78, i32 %79, i32 %80)
  %82 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %83 = load i32, i32* @XgRxPkts65to127Octets, align 4
  %84 = load i32, i32* @rx_65_to_127, align 4
  %85 = call i32 @FALCON_STAT(%struct.efx_nic* %82, i32 %83, i32 %84)
  %86 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %87 = load i32, i32* @XgRxPkts128to255Octets, align 4
  %88 = load i32, i32* @rx_128_to_255, align 4
  %89 = call i32 @FALCON_STAT(%struct.efx_nic* %86, i32 %87, i32 %88)
  %90 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %91 = load i32, i32* @XgRxPkts256to511Octets, align 4
  %92 = load i32, i32* @rx_256_to_511, align 4
  %93 = call i32 @FALCON_STAT(%struct.efx_nic* %90, i32 %91, i32 %92)
  %94 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %95 = load i32, i32* @XgRxPkts512to1023Octets, align 4
  %96 = load i32, i32* @rx_512_to_1023, align 4
  %97 = call i32 @FALCON_STAT(%struct.efx_nic* %94, i32 %95, i32 %96)
  %98 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %99 = load i32, i32* @XgRxPkts1024to15xxOctets, align 4
  %100 = load i32, i32* @rx_1024_to_15xx, align 4
  %101 = call i32 @FALCON_STAT(%struct.efx_nic* %98, i32 %99, i32 %100)
  %102 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %103 = load i32, i32* @XgRxPkts15xxtoMaxOctets, align 4
  %104 = load i32, i32* @rx_15xx_to_jumbo, align 4
  %105 = call i32 @FALCON_STAT(%struct.efx_nic* %102, i32 %103, i32 %104)
  %106 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %107 = load i32, i32* @XgRxLengthError, align 4
  %108 = load i32, i32* @rx_length_error, align 4
  %109 = call i32 @FALCON_STAT(%struct.efx_nic* %106, i32 %107, i32 %108)
  %110 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %111 = load i32, i32* @XgTxPkts, align 4
  %112 = load i32, i32* @tx_packets, align 4
  %113 = call i32 @FALCON_STAT(%struct.efx_nic* %110, i32 %111, i32 %112)
  %114 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %115 = load i32, i32* @XgTxOctets, align 4
  %116 = load i32, i32* @tx_bytes, align 4
  %117 = call i32 @FALCON_STAT(%struct.efx_nic* %114, i32 %115, i32 %116)
  %118 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %119 = load i32, i32* @XgTxMulticastPkts, align 4
  %120 = load i32, i32* @tx_multicast, align 4
  %121 = call i32 @FALCON_STAT(%struct.efx_nic* %118, i32 %119, i32 %120)
  %122 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %123 = load i32, i32* @XgTxBroadcastPkts, align 4
  %124 = load i32, i32* @tx_broadcast, align 4
  %125 = call i32 @FALCON_STAT(%struct.efx_nic* %122, i32 %123, i32 %124)
  %126 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %127 = load i32, i32* @XgTxUnicastPkts, align 4
  %128 = load i32, i32* @tx_unicast, align 4
  %129 = call i32 @FALCON_STAT(%struct.efx_nic* %126, i32 %127, i32 %128)
  %130 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %131 = load i32, i32* @XgTxControlPkts, align 4
  %132 = load i32, i32* @tx_control, align 4
  %133 = call i32 @FALCON_STAT(%struct.efx_nic* %130, i32 %131, i32 %132)
  %134 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %135 = load i32, i32* @XgTxPausePkts, align 4
  %136 = load i32, i32* @tx_pause, align 4
  %137 = call i32 @FALCON_STAT(%struct.efx_nic* %134, i32 %135, i32 %136)
  %138 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %139 = load i32, i32* @XgTxPkts64Octets, align 4
  %140 = load i32, i32* @tx_64, align 4
  %141 = call i32 @FALCON_STAT(%struct.efx_nic* %138, i32 %139, i32 %140)
  %142 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %143 = load i32, i32* @XgTxPkts65to127Octets, align 4
  %144 = load i32, i32* @tx_65_to_127, align 4
  %145 = call i32 @FALCON_STAT(%struct.efx_nic* %142, i32 %143, i32 %144)
  %146 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %147 = load i32, i32* @XgTxPkts128to255Octets, align 4
  %148 = load i32, i32* @tx_128_to_255, align 4
  %149 = call i32 @FALCON_STAT(%struct.efx_nic* %146, i32 %147, i32 %148)
  %150 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %151 = load i32, i32* @XgTxPkts256to511Octets, align 4
  %152 = load i32, i32* @tx_256_to_511, align 4
  %153 = call i32 @FALCON_STAT(%struct.efx_nic* %150, i32 %151, i32 %152)
  %154 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %155 = load i32, i32* @XgTxPkts512to1023Octets, align 4
  %156 = load i32, i32* @tx_512_to_1023, align 4
  %157 = call i32 @FALCON_STAT(%struct.efx_nic* %154, i32 %155, i32 %156)
  %158 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %159 = load i32, i32* @XgTxPkts1024to15xxOctets, align 4
  %160 = load i32, i32* @tx_1024_to_15xx, align 4
  %161 = call i32 @FALCON_STAT(%struct.efx_nic* %158, i32 %159, i32 %160)
  %162 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %163 = load i32, i32* @XgTxPkts1519toMaxOctets, align 4
  %164 = load i32, i32* @tx_15xx_to_jumbo, align 4
  %165 = call i32 @FALCON_STAT(%struct.efx_nic* %162, i32 %163, i32 %164)
  %166 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %167 = load i32, i32* @XgTxUndersizePkts, align 4
  %168 = load i32, i32* @tx_lt64, align 4
  %169 = call i32 @FALCON_STAT(%struct.efx_nic* %166, i32 %167, i32 %168)
  %170 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %171 = load i32, i32* @XgTxOversizePkts, align 4
  %172 = load i32, i32* @tx_gtjumbo, align 4
  %173 = call i32 @FALCON_STAT(%struct.efx_nic* %170, i32 %171, i32 %172)
  %174 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %175 = load i32, i32* @XgTxNonTcpUdpPkt, align 4
  %176 = load i32, i32* @tx_non_tcpudp, align 4
  %177 = call i32 @FALCON_STAT(%struct.efx_nic* %174, i32 %175, i32 %176)
  %178 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %179 = load i32, i32* @XgTxMacSrcErrPkt, align 4
  %180 = load i32, i32* @tx_mac_src_error, align 4
  %181 = call i32 @FALCON_STAT(%struct.efx_nic* %178, i32 %179, i32 %180)
  %182 = load %struct.efx_nic*, %struct.efx_nic** %2, align 8
  %183 = load i32, i32* @XgTxIpSrcErrPkt, align 4
  %184 = load i32, i32* @tx_ip_src_error, align 4
  %185 = call i32 @FALCON_STAT(%struct.efx_nic* %182, i32 %183, i32 %184)
  %186 = load %struct.efx_mac_stats*, %struct.efx_mac_stats** %3, align 8
  %187 = getelementptr inbounds %struct.efx_mac_stats, %struct.efx_mac_stats* %186, i32 0, i32 7
  %188 = load %struct.efx_mac_stats*, %struct.efx_mac_stats** %3, align 8
  %189 = getelementptr inbounds %struct.efx_mac_stats, %struct.efx_mac_stats* %188, i32 0, i32 6
  %190 = load i64, i64* %189, align 8
  %191 = load %struct.efx_mac_stats*, %struct.efx_mac_stats** %3, align 8
  %192 = getelementptr inbounds %struct.efx_mac_stats, %struct.efx_mac_stats* %191, i32 0, i32 5
  %193 = load i64, i64* %192, align 8
  %194 = sub nsw i64 %190, %193
  %195 = load %struct.efx_mac_stats*, %struct.efx_mac_stats** %3, align 8
  %196 = getelementptr inbounds %struct.efx_mac_stats, %struct.efx_mac_stats* %195, i32 0, i32 0
  %197 = load i32, i32* %196, align 8
  %198 = mul nsw i32 %197, 64
  %199 = sext i32 %198 to i64
  %200 = sub nsw i64 %194, %199
  %201 = call i32 @efx_update_diff_stat(i32* %187, i64 %200)
  %202 = load %struct.efx_mac_stats*, %struct.efx_mac_stats** %3, align 8
  %203 = getelementptr inbounds %struct.efx_mac_stats, %struct.efx_mac_stats* %202, i32 0, i32 4
  %204 = load %struct.efx_mac_stats*, %struct.efx_mac_stats** %3, align 8
  %205 = getelementptr inbounds %struct.efx_mac_stats, %struct.efx_mac_stats* %204, i32 0, i32 3
  %206 = load i64, i64* %205, align 8
  %207 = load %struct.efx_mac_stats*, %struct.efx_mac_stats** %3, align 8
  %208 = getelementptr inbounds %struct.efx_mac_stats, %struct.efx_mac_stats* %207, i32 0, i32 2
  %209 = load i64, i64* %208, align 8
  %210 = sub nsw i64 %206, %209
  %211 = load %struct.efx_mac_stats*, %struct.efx_mac_stats** %3, align 8
  %212 = getelementptr inbounds %struct.efx_mac_stats, %struct.efx_mac_stats* %211, i32 0, i32 1
  %213 = load i32, i32* %212, align 4
  %214 = mul nsw i32 %213, 64
  %215 = sext i32 %214 to i64
  %216 = sub nsw i64 %210, %215
  %217 = call i32 @efx_update_diff_stat(i32* %203, i64 %216)
  ret void
}

declare dso_local i32 @FALCON_STAT(%struct.efx_nic*, i32, i32) #1

declare dso_local i32 @efx_update_diff_stat(i32*, i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
