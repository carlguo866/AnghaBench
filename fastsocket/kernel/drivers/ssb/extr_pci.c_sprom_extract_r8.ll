; ModuleID = '/home/carl/AnghaBench/fastsocket/kernel/drivers/ssb/extr_pci.c_sprom_extract_r8.c'
source_filename = "/home/carl/AnghaBench/fastsocket/kernel/drivers/ssb/extr_pci.c_sprom_extract_r8.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_10__ = type { i32, i32, i32, i32 }
%struct.TYPE_9__ = type { i32*, i32*, i32*, i32, i32, i32, i32, i32*, i32, i32 }
%struct.TYPE_8__ = type { %struct.TYPE_7__, %struct.TYPE_6__ }
%struct.TYPE_7__ = type { i32, i32, i32, i32, i32 }
%struct.TYPE_6__ = type { i32, i32, i32, i32, i32 }
%struct.ssb_sprom = type { i64, i64* }

@SSB_SROM8_PWR_INFO_CORE0 = common dso_local global i64 0, align 8
@SSB_SROM8_PWR_INFO_CORE1 = common dso_local global i64 0, align 8
@SSB_SROM8_PWR_INFO_CORE2 = common dso_local global i64 0, align 8
@SSB_SROM8_PWR_INFO_CORE3 = common dso_local global i64 0, align 8
@SSB_SPROM8_IL0MAC = common dso_local global i32 0, align 4
@board_rev = common dso_local global i32 0, align 4
@SSB_SPROM8_BOARDREV = common dso_local global i64 0, align 8
@alpha2 = common dso_local global i32* null, align 8
@SSB_SPROM8_CCODE = common dso_local global i64 0, align 8
@boardflags_lo = common dso_local global i32 0, align 4
@SSB_SPROM8_BFLLO = common dso_local global i64 0, align 8
@boardflags_hi = common dso_local global i32 0, align 4
@SSB_SPROM8_BFLHI = common dso_local global i64 0, align 8
@boardflags2_lo = common dso_local global i32 0, align 4
@SSB_SPROM8_BFL2LO = common dso_local global i64 0, align 8
@boardflags2_hi = common dso_local global i32 0, align 4
@SSB_SPROM8_BFL2HI = common dso_local global i64 0, align 8
@ant_available_a = common dso_local global i32 0, align 4
@SSB_SPROM8_ANTAVAIL = common dso_local global i64 0, align 8
@SSB_SPROM8_ANTAVAIL_A = common dso_local global i32 0, align 4
@SSB_SPROM8_ANTAVAIL_A_SHIFT = common dso_local global i32 0, align 4
@ant_available_bg = common dso_local global i32 0, align 4
@SSB_SPROM8_ANTAVAIL_BG = common dso_local global i32 0, align 4
@SSB_SPROM8_ANTAVAIL_BG_SHIFT = common dso_local global i32 0, align 4
@maxpwr_bg = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_BG = common dso_local global i64 0, align 8
@SSB_SPROM8_MAXP_BG_MASK = common dso_local global i32 0, align 4
@itssi_bg = common dso_local global i32 0, align 4
@SSB_SPROM8_ITSSI_BG = common dso_local global i32 0, align 4
@SSB_SPROM8_ITSSI_BG_SHIFT = common dso_local global i32 0, align 4
@maxpwr_a = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_A = common dso_local global i64 0, align 8
@SSB_SPROM8_MAXP_A_MASK = common dso_local global i32 0, align 4
@itssi_a = common dso_local global i32 0, align 4
@SSB_SPROM8_ITSSI_A = common dso_local global i32 0, align 4
@SSB_SPROM8_ITSSI_A_SHIFT = common dso_local global i32 0, align 4
@maxpwr_ah = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_AHL = common dso_local global i64 0, align 8
@SSB_SPROM8_MAXP_AH_MASK = common dso_local global i32 0, align 4
@maxpwr_al = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_AL_MASK = common dso_local global i32 0, align 4
@SSB_SPROM8_MAXP_AL_SHIFT = common dso_local global i32 0, align 4
@gpio0 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOA = common dso_local global i64 0, align 8
@SSB_SPROM8_GPIOA_P0 = common dso_local global i32 0, align 4
@gpio1 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOA_P1 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOA_P1_SHIFT = common dso_local global i32 0, align 4
@gpio2 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOB = common dso_local global i64 0, align 8
@SSB_SPROM8_GPIOB_P2 = common dso_local global i32 0, align 4
@gpio3 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOB_P3 = common dso_local global i32 0, align 4
@SSB_SPROM8_GPIOB_P3_SHIFT = common dso_local global i32 0, align 4
@tri2g = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI25G = common dso_local global i64 0, align 8
@SSB_SPROM8_TRI2G = common dso_local global i32 0, align 4
@tri5g = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5G = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5G_SHIFT = common dso_local global i32 0, align 4
@tri5gl = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5GHL = common dso_local global i64 0, align 8
@SSB_SPROM8_TRI5GL = common dso_local global i32 0, align 4
@tri5gh = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5GH = common dso_local global i32 0, align 4
@SSB_SPROM8_TRI5GH_SHIFT = common dso_local global i32 0, align 4
@rxpo2g = common dso_local global i32 0, align 4
@SSB_SPROM8_RXPO = common dso_local global i64 0, align 8
@SSB_SPROM8_RXPO2G = common dso_local global i32 0, align 4
@rxpo5g = common dso_local global i32 0, align 4
@SSB_SPROM8_RXPO5G = common dso_local global i32 0, align 4
@SSB_SPROM8_RXPO5G_SHIFT = common dso_local global i32 0, align 4
@rssismf2g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSIPARM2G = common dso_local global i64 0, align 8
@SSB_SPROM8_RSSISMF2G = common dso_local global i32 0, align 4
@rssismc2g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMC2G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMC2G_SHIFT = common dso_local global i32 0, align 4
@rssisav2g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISAV2G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISAV2G_SHIFT = common dso_local global i32 0, align 4
@bxa2g = common dso_local global i32 0, align 4
@SSB_SPROM8_BXA2G = common dso_local global i32 0, align 4
@SSB_SPROM8_BXA2G_SHIFT = common dso_local global i32 0, align 4
@rssismf5g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSIPARM5G = common dso_local global i64 0, align 8
@SSB_SPROM8_RSSISMF5G = common dso_local global i32 0, align 4
@rssismc5g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMC5G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISMC5G_SHIFT = common dso_local global i32 0, align 4
@rssisav5g = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISAV5G = common dso_local global i32 0, align 4
@SSB_SPROM8_RSSISAV5G_SHIFT = common dso_local global i32 0, align 4
@bxa5g = common dso_local global i32 0, align 4
@SSB_SPROM8_BXA5G = common dso_local global i32 0, align 4
@SSB_SPROM8_BXA5G_SHIFT = common dso_local global i32 0, align 4
@pa0b0 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA0B0 = common dso_local global i64 0, align 8
@pa0b1 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA0B1 = common dso_local global i64 0, align 8
@pa0b2 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA0B2 = common dso_local global i64 0, align 8
@pa1b0 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1B0 = common dso_local global i64 0, align 8
@pa1b1 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1B1 = common dso_local global i64 0, align 8
@pa1b2 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1B2 = common dso_local global i64 0, align 8
@pa1lob0 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1LOB0 = common dso_local global i64 0, align 8
@pa1lob1 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1LOB1 = common dso_local global i64 0, align 8
@pa1lob2 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1LOB2 = common dso_local global i64 0, align 8
@pa1hib0 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1HIB0 = common dso_local global i64 0, align 8
@pa1hib1 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1HIB1 = common dso_local global i64 0, align 8
@pa1hib2 = common dso_local global i32 0, align 4
@SSB_SPROM8_PA1HIB2 = common dso_local global i64 0, align 8
@cck2gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_CCK2GPO = common dso_local global i64 0, align 8
@ofdm2gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_OFDM2GPO = common dso_local global i64 0, align 8
@ofdm5glpo = common dso_local global i32 0, align 4
@SSB_SPROM8_OFDM5GLPO = common dso_local global i64 0, align 8
@ofdm5gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_OFDM5GPO = common dso_local global i64 0, align 8
@ofdm5ghpo = common dso_local global i32 0, align 4
@SSB_SPROM8_OFDM5GHPO = common dso_local global i64 0, align 8
@antenna_gain = common dso_local global %struct.TYPE_10__ zeroinitializer, align 4
@SSB_SPROM8_AGAIN01 = common dso_local global i64 0, align 8
@SSB_SPROM8_AGAIN0 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN0_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN1 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN1_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN23 = common dso_local global i64 0, align 8
@SSB_SPROM8_AGAIN2 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN2_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN3 = common dso_local global i32 0, align 4
@SSB_SPROM8_AGAIN3_SHIFT = common dso_local global i32 0, align 4
@core_pwr_info = common dso_local global %struct.TYPE_9__* null, align 8
@SSB_SROM8_2G_MAXP_ITSSI = common dso_local global i64 0, align 8
@SSB_SPROM8_2G_ITSSI = common dso_local global i32 0, align 4
@SSB_SPROM8_2G_ITSSI_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_2G_MAXP = common dso_local global i32 0, align 4
@SSB_SROM8_2G_PA_0 = common dso_local global i64 0, align 8
@SSB_SROM8_2G_PA_1 = common dso_local global i64 0, align 8
@SSB_SROM8_2G_PA_2 = common dso_local global i64 0, align 8
@SSB_SROM8_5G_MAXP_ITSSI = common dso_local global i64 0, align 8
@SSB_SPROM8_5G_ITSSI = common dso_local global i32 0, align 4
@SSB_SPROM8_5G_ITSSI_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_5G_MAXP = common dso_local global i32 0, align 4
@SSB_SPROM8_5GHL_MAXP = common dso_local global i64 0, align 8
@SSB_SPROM8_5GH_MAXP = common dso_local global i32 0, align 4
@SSB_SPROM8_5GL_MAXP = common dso_local global i32 0, align 4
@SSB_SPROM8_5GL_MAXP_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_5GL_PA_0 = common dso_local global i64 0, align 8
@SSB_SROM8_5GL_PA_1 = common dso_local global i64 0, align 8
@SSB_SROM8_5GL_PA_2 = common dso_local global i64 0, align 8
@SSB_SROM8_5G_PA_0 = common dso_local global i64 0, align 8
@SSB_SROM8_5G_PA_1 = common dso_local global i64 0, align 8
@SSB_SROM8_5G_PA_2 = common dso_local global i64 0, align 8
@SSB_SROM8_5GH_PA_0 = common dso_local global i64 0, align 8
@SSB_SROM8_5GH_PA_1 = common dso_local global i64 0, align 8
@SSB_SROM8_5GH_PA_2 = common dso_local global i64 0, align 8
@fem = common dso_local global %struct.TYPE_8__ zeroinitializer, align 4
@SSB_SPROM8_FEM2G = common dso_local global i64 0, align 8
@SSB_SROM8_FEM_TSSIPOS = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_TSSIPOS_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_EXTPA_GAIN = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_EXTPA_GAIN_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_PDET_RANGE = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_PDET_RANGE_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_TR_ISO = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_TR_ISO_SHIFT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_ANTSWLUT = common dso_local global i32 0, align 4
@SSB_SROM8_FEM_ANTSWLUT_SHIFT = common dso_local global i32 0, align 4
@SSB_SPROM8_FEM5G = common dso_local global i64 0, align 8
@leddc_on_time = common dso_local global i32 0, align 4
@SSB_SPROM8_LEDDC = common dso_local global i64 0, align 8
@SSB_SPROM8_LEDDC_ON = common dso_local global i32 0, align 4
@SSB_SPROM8_LEDDC_ON_SHIFT = common dso_local global i32 0, align 4
@leddc_off_time = common dso_local global i32 0, align 4
@SSB_SPROM8_LEDDC_OFF = common dso_local global i32 0, align 4
@SSB_SPROM8_LEDDC_OFF_SHIFT = common dso_local global i32 0, align 4
@txchain = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC = common dso_local global i64 0, align 8
@SSB_SPROM8_TXRXC_TXCHAIN = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_TXCHAIN_SHIFT = common dso_local global i32 0, align 4
@rxchain = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_RXCHAIN = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_RXCHAIN_SHIFT = common dso_local global i32 0, align 4
@antswitch = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_SWITCH = common dso_local global i32 0, align 4
@SSB_SPROM8_TXRXC_SWITCH_SHIFT = common dso_local global i32 0, align 4
@opo = common dso_local global i32 0, align 4
@mcs2gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_2G_MCSPO = common dso_local global i32 0, align 4
@mcs5gpo = common dso_local global i32 0, align 4
@SSB_SPROM8_5G_MCSPO = common dso_local global i32 0, align 4
@mcs5glpo = common dso_local global i32 0, align 4
@SSB_SPROM8_5GL_MCSPO = common dso_local global i32 0, align 4
@mcs5ghpo = common dso_local global i32 0, align 4
@SSB_SPROM8_5GH_MCSPO = common dso_local global i32 0, align 4
@rawtempsense = common dso_local global i32 0, align 4
@SSB_SPROM8_RAWTS = common dso_local global i64 0, align 8
@SSB_SPROM8_RAWTS_RAWTEMP = common dso_local global i32 0, align 4
@SSB_SPROM8_RAWTS_RAWTEMP_SHIFT = common dso_local global i32 0, align 4
@measpower = common dso_local global i32 0, align 4
@SSB_SPROM8_RAWTS_MEASPOWER = common dso_local global i32 0, align 4
@SSB_SPROM8_RAWTS_MEASPOWER_SHIFT = common dso_local global i32 0, align 4
@tempsense_slope = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX = common dso_local global i64 0, align 8
@SSB_SPROM8_OPT_CORRX_TEMP_SLOPE = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMP_SLOPE_SHIFT = common dso_local global i32 0, align 4
@tempcorrx = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMPCORRX = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMPCORRX_SHIFT = common dso_local global i32 0, align 4
@tempsense_option = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMP_OPTION = common dso_local global i32 0, align 4
@SSB_SPROM8_OPT_CORRX_TEMP_OPTION_SHIFT = common dso_local global i32 0, align 4
@freqoffset_corr = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP = common dso_local global i64 0, align 8
@SSB_SPROM8_HWIQ_IQSWP_FREQ_CORR = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_FREQ_CORR_SHIFT = common dso_local global i32 0, align 4
@iqcal_swp_dis = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_IQCAL_SWP = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_IQCAL_SWP_SHIFT = common dso_local global i32 0, align 4
@hw_iqcal_en = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_HW_IQCAL = common dso_local global i32 0, align 4
@SSB_SPROM8_HWIQ_IQSWP_HW_IQCAL_SHIFT = common dso_local global i32 0, align 4
@bw40po = common dso_local global i32 0, align 4
@SSB_SPROM8_BW40PO = common dso_local global i64 0, align 8
@cddpo = common dso_local global i32 0, align 4
@SSB_SPROM8_CDDPO = common dso_local global i64 0, align 8
@stbcpo = common dso_local global i32 0, align 4
@SSB_SPROM8_STBCPO = common dso_local global i64 0, align 8
@bwduppo = common dso_local global i32 0, align 4
@SSB_SPROM8_BWDUPPO = common dso_local global i64 0, align 8
@tempthresh = common dso_local global i32 0, align 4
@SSB_SPROM8_THERMAL = common dso_local global i64 0, align 8
@SSB_SPROM8_THERMAL_TRESH = common dso_local global i32 0, align 4
@SSB_SPROM8_THERMAL_TRESH_SHIFT = common dso_local global i32 0, align 4
@tempoffset = common dso_local global i32 0, align 4
@SSB_SPROM8_THERMAL_OFFSET = common dso_local global i32 0, align 4
@SSB_SPROM8_THERMAL_OFFSET_SHIFT = common dso_local global i32 0, align 4
@phycal_tempdelta = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA = common dso_local global i64 0, align 8
@SSB_SPROM8_TEMPDELTA_PHYCAL = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_PHYCAL_SHIFT = common dso_local global i32 0, align 4
@temps_period = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_PERIOD = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_PERIOD_SHIFT = common dso_local global i32 0, align 4
@temps_hysteresis = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_HYSTERESIS = common dso_local global i32 0, align 4
@SSB_SPROM8_TEMPDELTA_HYSTERESIS_SHIFT = common dso_local global i32 0, align 4
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.ssb_sprom*, i64*)* @sprom_extract_r8 to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @sprom_extract_r8(%struct.ssb_sprom* %0, i64* %1) #0 {
  %3 = alloca %struct.ssb_sprom*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca [4 x i64], align 16
  store %struct.ssb_sprom* %0, %struct.ssb_sprom** %3, align 8
  store i64* %1, i64** %4, align 8
  %9 = getelementptr inbounds [4 x i64], [4 x i64]* %8, i64 0, i64 0
  %10 = load i64, i64* @SSB_SROM8_PWR_INFO_CORE0, align 8
  store i64 %10, i64* %9, align 8
  %11 = getelementptr inbounds i64, i64* %9, i64 1
  %12 = load i64, i64* @SSB_SROM8_PWR_INFO_CORE1, align 8
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds i64, i64* %11, i64 1
  %14 = load i64, i64* @SSB_SROM8_PWR_INFO_CORE2, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds i64, i64* %13, i64 1
  %16 = load i64, i64* @SSB_SROM8_PWR_INFO_CORE3, align 8
  store i64 %16, i64* %15, align 8
  %17 = getelementptr inbounds [4 x i64], [4 x i64]* %8, i64 0, i64 0
  %18 = call i32 @ARRAY_SIZE(i64* %17)
  %19 = load %struct.ssb_sprom*, %struct.ssb_sprom** %3, align 8
  %20 = getelementptr inbounds %struct.ssb_sprom, %struct.ssb_sprom* %19, i32 0, i32 1
  %21 = load i64*, i64** %20, align 8
  %22 = call i32 @ARRAY_SIZE(i64* %21)
  %23 = icmp ne i32 %18, %22
  %24 = zext i1 %23 to i32
  %25 = call i32 @BUILD_BUG_ON(i32 %24)
  store i32 0, i32* %5, align 4
  br label %26

26:                                               ; preds = %47, %2
  %27 = load i32, i32* %5, align 4
  %28 = icmp slt i32 %27, 3
  br i1 %28, label %29, label %50

29:                                               ; preds = %26
  %30 = load i64*, i64** %4, align 8
  %31 = load i32, i32* @SSB_SPROM8_IL0MAC, align 4
  %32 = call i32 @SPOFF(i32 %31)
  %33 = load i32, i32* %5, align 4
  %34 = add nsw i32 %32, %33
  %35 = sext i32 %34 to i64
  %36 = getelementptr inbounds i64, i64* %30, i64 %35
  %37 = load i64, i64* %36, align 8
  store i64 %37, i64* %6, align 8
  %38 = load i64, i64* %6, align 8
  %39 = call i32 @cpu_to_be16(i64 %38)
  %40 = load %struct.ssb_sprom*, %struct.ssb_sprom** %3, align 8
  %41 = getelementptr inbounds %struct.ssb_sprom, %struct.ssb_sprom* %40, i32 0, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %42 to i32*
  %44 = load i32, i32* %5, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i32, i32* %43, i64 %45
  store i32 %39, i32* %46, align 4
  br label %47

47:                                               ; preds = %29
  %48 = load i32, i32* %5, align 4
  %49 = add nsw i32 %48, 1
  store i32 %49, i32* %5, align 4
  br label %26

50:                                               ; preds = %26
  %51 = load i32, i32* @board_rev, align 4
  %52 = load i64, i64* @SSB_SPROM8_BOARDREV, align 8
  %53 = call i32 @SPEX(i32 %51, i64 %52, i32 65535, i32 0)
  %54 = load i32*, i32** @alpha2, align 8
  %55 = getelementptr inbounds i32, i32* %54, i64 0
  %56 = load i32, i32* %55, align 4
  %57 = load i64, i64* @SSB_SPROM8_CCODE, align 8
  %58 = call i32 @SPEX(i32 %56, i64 %57, i32 65280, i32 8)
  %59 = load i32*, i32** @alpha2, align 8
  %60 = getelementptr inbounds i32, i32* %59, i64 1
  %61 = load i32, i32* %60, align 4
  %62 = load i64, i64* @SSB_SPROM8_CCODE, align 8
  %63 = call i32 @SPEX(i32 %61, i64 %62, i32 255, i32 0)
  %64 = load i32, i32* @boardflags_lo, align 4
  %65 = load i64, i64* @SSB_SPROM8_BFLLO, align 8
  %66 = call i32 @SPEX(i32 %64, i64 %65, i32 65535, i32 0)
  %67 = load i32, i32* @boardflags_hi, align 4
  %68 = load i64, i64* @SSB_SPROM8_BFLHI, align 8
  %69 = call i32 @SPEX(i32 %67, i64 %68, i32 65535, i32 0)
  %70 = load i32, i32* @boardflags2_lo, align 4
  %71 = load i64, i64* @SSB_SPROM8_BFL2LO, align 8
  %72 = call i32 @SPEX(i32 %70, i64 %71, i32 65535, i32 0)
  %73 = load i32, i32* @boardflags2_hi, align 4
  %74 = load i64, i64* @SSB_SPROM8_BFL2HI, align 8
  %75 = call i32 @SPEX(i32 %73, i64 %74, i32 65535, i32 0)
  %76 = load i32, i32* @ant_available_a, align 4
  %77 = load i64, i64* @SSB_SPROM8_ANTAVAIL, align 8
  %78 = load i32, i32* @SSB_SPROM8_ANTAVAIL_A, align 4
  %79 = load i32, i32* @SSB_SPROM8_ANTAVAIL_A_SHIFT, align 4
  %80 = call i32 @SPEX(i32 %76, i64 %77, i32 %78, i32 %79)
  %81 = load i32, i32* @ant_available_bg, align 4
  %82 = load i64, i64* @SSB_SPROM8_ANTAVAIL, align 8
  %83 = load i32, i32* @SSB_SPROM8_ANTAVAIL_BG, align 4
  %84 = load i32, i32* @SSB_SPROM8_ANTAVAIL_BG_SHIFT, align 4
  %85 = call i32 @SPEX(i32 %81, i64 %82, i32 %83, i32 %84)
  %86 = load i32, i32* @maxpwr_bg, align 4
  %87 = load i64, i64* @SSB_SPROM8_MAXP_BG, align 8
  %88 = load i32, i32* @SSB_SPROM8_MAXP_BG_MASK, align 4
  %89 = call i32 @SPEX(i32 %86, i64 %87, i32 %88, i32 0)
  %90 = load i32, i32* @itssi_bg, align 4
  %91 = load i64, i64* @SSB_SPROM8_MAXP_BG, align 8
  %92 = load i32, i32* @SSB_SPROM8_ITSSI_BG, align 4
  %93 = load i32, i32* @SSB_SPROM8_ITSSI_BG_SHIFT, align 4
  %94 = call i32 @SPEX(i32 %90, i64 %91, i32 %92, i32 %93)
  %95 = load i32, i32* @maxpwr_a, align 4
  %96 = load i64, i64* @SSB_SPROM8_MAXP_A, align 8
  %97 = load i32, i32* @SSB_SPROM8_MAXP_A_MASK, align 4
  %98 = call i32 @SPEX(i32 %95, i64 %96, i32 %97, i32 0)
  %99 = load i32, i32* @itssi_a, align 4
  %100 = load i64, i64* @SSB_SPROM8_MAXP_A, align 8
  %101 = load i32, i32* @SSB_SPROM8_ITSSI_A, align 4
  %102 = load i32, i32* @SSB_SPROM8_ITSSI_A_SHIFT, align 4
  %103 = call i32 @SPEX(i32 %99, i64 %100, i32 %101, i32 %102)
  %104 = load i32, i32* @maxpwr_ah, align 4
  %105 = load i64, i64* @SSB_SPROM8_MAXP_AHL, align 8
  %106 = load i32, i32* @SSB_SPROM8_MAXP_AH_MASK, align 4
  %107 = call i32 @SPEX(i32 %104, i64 %105, i32 %106, i32 0)
  %108 = load i32, i32* @maxpwr_al, align 4
  %109 = load i64, i64* @SSB_SPROM8_MAXP_AHL, align 8
  %110 = load i32, i32* @SSB_SPROM8_MAXP_AL_MASK, align 4
  %111 = load i32, i32* @SSB_SPROM8_MAXP_AL_SHIFT, align 4
  %112 = call i32 @SPEX(i32 %108, i64 %109, i32 %110, i32 %111)
  %113 = load i32, i32* @gpio0, align 4
  %114 = load i64, i64* @SSB_SPROM8_GPIOA, align 8
  %115 = load i32, i32* @SSB_SPROM8_GPIOA_P0, align 4
  %116 = call i32 @SPEX(i32 %113, i64 %114, i32 %115, i32 0)
  %117 = load i32, i32* @gpio1, align 4
  %118 = load i64, i64* @SSB_SPROM8_GPIOA, align 8
  %119 = load i32, i32* @SSB_SPROM8_GPIOA_P1, align 4
  %120 = load i32, i32* @SSB_SPROM8_GPIOA_P1_SHIFT, align 4
  %121 = call i32 @SPEX(i32 %117, i64 %118, i32 %119, i32 %120)
  %122 = load i32, i32* @gpio2, align 4
  %123 = load i64, i64* @SSB_SPROM8_GPIOB, align 8
  %124 = load i32, i32* @SSB_SPROM8_GPIOB_P2, align 4
  %125 = call i32 @SPEX(i32 %122, i64 %123, i32 %124, i32 0)
  %126 = load i32, i32* @gpio3, align 4
  %127 = load i64, i64* @SSB_SPROM8_GPIOB, align 8
  %128 = load i32, i32* @SSB_SPROM8_GPIOB_P3, align 4
  %129 = load i32, i32* @SSB_SPROM8_GPIOB_P3_SHIFT, align 4
  %130 = call i32 @SPEX(i32 %126, i64 %127, i32 %128, i32 %129)
  %131 = load i32, i32* @tri2g, align 4
  %132 = load i64, i64* @SSB_SPROM8_TRI25G, align 8
  %133 = load i32, i32* @SSB_SPROM8_TRI2G, align 4
  %134 = call i32 @SPEX(i32 %131, i64 %132, i32 %133, i32 0)
  %135 = load i32, i32* @tri5g, align 4
  %136 = load i64, i64* @SSB_SPROM8_TRI25G, align 8
  %137 = load i32, i32* @SSB_SPROM8_TRI5G, align 4
  %138 = load i32, i32* @SSB_SPROM8_TRI5G_SHIFT, align 4
  %139 = call i32 @SPEX(i32 %135, i64 %136, i32 %137, i32 %138)
  %140 = load i32, i32* @tri5gl, align 4
  %141 = load i64, i64* @SSB_SPROM8_TRI5GHL, align 8
  %142 = load i32, i32* @SSB_SPROM8_TRI5GL, align 4
  %143 = call i32 @SPEX(i32 %140, i64 %141, i32 %142, i32 0)
  %144 = load i32, i32* @tri5gh, align 4
  %145 = load i64, i64* @SSB_SPROM8_TRI5GHL, align 8
  %146 = load i32, i32* @SSB_SPROM8_TRI5GH, align 4
  %147 = load i32, i32* @SSB_SPROM8_TRI5GH_SHIFT, align 4
  %148 = call i32 @SPEX(i32 %144, i64 %145, i32 %146, i32 %147)
  %149 = load i32, i32* @rxpo2g, align 4
  %150 = load i64, i64* @SSB_SPROM8_RXPO, align 8
  %151 = load i32, i32* @SSB_SPROM8_RXPO2G, align 4
  %152 = call i32 @SPEX(i32 %149, i64 %150, i32 %151, i32 0)
  %153 = load i32, i32* @rxpo5g, align 4
  %154 = load i64, i64* @SSB_SPROM8_RXPO, align 8
  %155 = load i32, i32* @SSB_SPROM8_RXPO5G, align 4
  %156 = load i32, i32* @SSB_SPROM8_RXPO5G_SHIFT, align 4
  %157 = call i32 @SPEX(i32 %153, i64 %154, i32 %155, i32 %156)
  %158 = load i32, i32* @rssismf2g, align 4
  %159 = load i64, i64* @SSB_SPROM8_RSSIPARM2G, align 8
  %160 = load i32, i32* @SSB_SPROM8_RSSISMF2G, align 4
  %161 = call i32 @SPEX(i32 %158, i64 %159, i32 %160, i32 0)
  %162 = load i32, i32* @rssismc2g, align 4
  %163 = load i64, i64* @SSB_SPROM8_RSSIPARM2G, align 8
  %164 = load i32, i32* @SSB_SPROM8_RSSISMC2G, align 4
  %165 = load i32, i32* @SSB_SPROM8_RSSISMC2G_SHIFT, align 4
  %166 = call i32 @SPEX(i32 %162, i64 %163, i32 %164, i32 %165)
  %167 = load i32, i32* @rssisav2g, align 4
  %168 = load i64, i64* @SSB_SPROM8_RSSIPARM2G, align 8
  %169 = load i32, i32* @SSB_SPROM8_RSSISAV2G, align 4
  %170 = load i32, i32* @SSB_SPROM8_RSSISAV2G_SHIFT, align 4
  %171 = call i32 @SPEX(i32 %167, i64 %168, i32 %169, i32 %170)
  %172 = load i32, i32* @bxa2g, align 4
  %173 = load i64, i64* @SSB_SPROM8_RSSIPARM2G, align 8
  %174 = load i32, i32* @SSB_SPROM8_BXA2G, align 4
  %175 = load i32, i32* @SSB_SPROM8_BXA2G_SHIFT, align 4
  %176 = call i32 @SPEX(i32 %172, i64 %173, i32 %174, i32 %175)
  %177 = load i32, i32* @rssismf5g, align 4
  %178 = load i64, i64* @SSB_SPROM8_RSSIPARM5G, align 8
  %179 = load i32, i32* @SSB_SPROM8_RSSISMF5G, align 4
  %180 = call i32 @SPEX(i32 %177, i64 %178, i32 %179, i32 0)
  %181 = load i32, i32* @rssismc5g, align 4
  %182 = load i64, i64* @SSB_SPROM8_RSSIPARM5G, align 8
  %183 = load i32, i32* @SSB_SPROM8_RSSISMC5G, align 4
  %184 = load i32, i32* @SSB_SPROM8_RSSISMC5G_SHIFT, align 4
  %185 = call i32 @SPEX(i32 %181, i64 %182, i32 %183, i32 %184)
  %186 = load i32, i32* @rssisav5g, align 4
  %187 = load i64, i64* @SSB_SPROM8_RSSIPARM5G, align 8
  %188 = load i32, i32* @SSB_SPROM8_RSSISAV5G, align 4
  %189 = load i32, i32* @SSB_SPROM8_RSSISAV5G_SHIFT, align 4
  %190 = call i32 @SPEX(i32 %186, i64 %187, i32 %188, i32 %189)
  %191 = load i32, i32* @bxa5g, align 4
  %192 = load i64, i64* @SSB_SPROM8_RSSIPARM5G, align 8
  %193 = load i32, i32* @SSB_SPROM8_BXA5G, align 4
  %194 = load i32, i32* @SSB_SPROM8_BXA5G_SHIFT, align 4
  %195 = call i32 @SPEX(i32 %191, i64 %192, i32 %193, i32 %194)
  %196 = load i32, i32* @pa0b0, align 4
  %197 = load i64, i64* @SSB_SPROM8_PA0B0, align 8
  %198 = call i32 @SPEX(i32 %196, i64 %197, i32 65535, i32 0)
  %199 = load i32, i32* @pa0b1, align 4
  %200 = load i64, i64* @SSB_SPROM8_PA0B1, align 8
  %201 = call i32 @SPEX(i32 %199, i64 %200, i32 65535, i32 0)
  %202 = load i32, i32* @pa0b2, align 4
  %203 = load i64, i64* @SSB_SPROM8_PA0B2, align 8
  %204 = call i32 @SPEX(i32 %202, i64 %203, i32 65535, i32 0)
  %205 = load i32, i32* @pa1b0, align 4
  %206 = load i64, i64* @SSB_SPROM8_PA1B0, align 8
  %207 = call i32 @SPEX(i32 %205, i64 %206, i32 65535, i32 0)
  %208 = load i32, i32* @pa1b1, align 4
  %209 = load i64, i64* @SSB_SPROM8_PA1B1, align 8
  %210 = call i32 @SPEX(i32 %208, i64 %209, i32 65535, i32 0)
  %211 = load i32, i32* @pa1b2, align 4
  %212 = load i64, i64* @SSB_SPROM8_PA1B2, align 8
  %213 = call i32 @SPEX(i32 %211, i64 %212, i32 65535, i32 0)
  %214 = load i32, i32* @pa1lob0, align 4
  %215 = load i64, i64* @SSB_SPROM8_PA1LOB0, align 8
  %216 = call i32 @SPEX(i32 %214, i64 %215, i32 65535, i32 0)
  %217 = load i32, i32* @pa1lob1, align 4
  %218 = load i64, i64* @SSB_SPROM8_PA1LOB1, align 8
  %219 = call i32 @SPEX(i32 %217, i64 %218, i32 65535, i32 0)
  %220 = load i32, i32* @pa1lob2, align 4
  %221 = load i64, i64* @SSB_SPROM8_PA1LOB2, align 8
  %222 = call i32 @SPEX(i32 %220, i64 %221, i32 65535, i32 0)
  %223 = load i32, i32* @pa1hib0, align 4
  %224 = load i64, i64* @SSB_SPROM8_PA1HIB0, align 8
  %225 = call i32 @SPEX(i32 %223, i64 %224, i32 65535, i32 0)
  %226 = load i32, i32* @pa1hib1, align 4
  %227 = load i64, i64* @SSB_SPROM8_PA1HIB1, align 8
  %228 = call i32 @SPEX(i32 %226, i64 %227, i32 65535, i32 0)
  %229 = load i32, i32* @pa1hib2, align 4
  %230 = load i64, i64* @SSB_SPROM8_PA1HIB2, align 8
  %231 = call i32 @SPEX(i32 %229, i64 %230, i32 65535, i32 0)
  %232 = load i32, i32* @cck2gpo, align 4
  %233 = load i64, i64* @SSB_SPROM8_CCK2GPO, align 8
  %234 = call i32 @SPEX(i32 %232, i64 %233, i32 65535, i32 0)
  %235 = load i32, i32* @ofdm2gpo, align 4
  %236 = load i64, i64* @SSB_SPROM8_OFDM2GPO, align 8
  %237 = call i32 @SPEX32(i32 %235, i64 %236, i32 -1, i32 0)
  %238 = load i32, i32* @ofdm5glpo, align 4
  %239 = load i64, i64* @SSB_SPROM8_OFDM5GLPO, align 8
  %240 = call i32 @SPEX32(i32 %238, i64 %239, i32 -1, i32 0)
  %241 = load i32, i32* @ofdm5gpo, align 4
  %242 = load i64, i64* @SSB_SPROM8_OFDM5GPO, align 8
  %243 = call i32 @SPEX32(i32 %241, i64 %242, i32 -1, i32 0)
  %244 = load i32, i32* @ofdm5ghpo, align 4
  %245 = load i64, i64* @SSB_SPROM8_OFDM5GHPO, align 8
  %246 = call i32 @SPEX32(i32 %244, i64 %245, i32 -1, i32 0)
  %247 = load i32, i32* getelementptr inbounds (%struct.TYPE_10__, %struct.TYPE_10__* @antenna_gain, i32 0, i32 3), align 4
  %248 = load i64, i64* @SSB_SPROM8_AGAIN01, align 8
  %249 = load i32, i32* @SSB_SPROM8_AGAIN0, align 4
  %250 = load i32, i32* @SSB_SPROM8_AGAIN0_SHIFT, align 4
  %251 = call i32 @SPEX(i32 %247, i64 %248, i32 %249, i32 %250)
  %252 = load i32, i32* getelementptr inbounds (%struct.TYPE_10__, %struct.TYPE_10__* @antenna_gain, i32 0, i32 2), align 4
  %253 = load i64, i64* @SSB_SPROM8_AGAIN01, align 8
  %254 = load i32, i32* @SSB_SPROM8_AGAIN1, align 4
  %255 = load i32, i32* @SSB_SPROM8_AGAIN1_SHIFT, align 4
  %256 = call i32 @SPEX(i32 %252, i64 %253, i32 %254, i32 %255)
  %257 = load i32, i32* getelementptr inbounds (%struct.TYPE_10__, %struct.TYPE_10__* @antenna_gain, i32 0, i32 1), align 4
  %258 = load i64, i64* @SSB_SPROM8_AGAIN23, align 8
  %259 = load i32, i32* @SSB_SPROM8_AGAIN2, align 4
  %260 = load i32, i32* @SSB_SPROM8_AGAIN2_SHIFT, align 4
  %261 = call i32 @SPEX(i32 %257, i64 %258, i32 %259, i32 %260)
  %262 = load i32, i32* getelementptr inbounds (%struct.TYPE_10__, %struct.TYPE_10__* @antenna_gain, i32 0, i32 0), align 4
  %263 = load i64, i64* @SSB_SPROM8_AGAIN23, align 8
  %264 = load i32, i32* @SSB_SPROM8_AGAIN3, align 4
  %265 = load i32, i32* @SSB_SPROM8_AGAIN3_SHIFT, align 4
  %266 = call i32 @SPEX(i32 %262, i64 %263, i32 %264, i32 %265)
  store i32 0, i32* %5, align 4
  br label %267

267:                                              ; preds = %490, %50
  %268 = load i32, i32* %5, align 4
  %269 = getelementptr inbounds [4 x i64], [4 x i64]* %8, i64 0, i64 0
  %270 = call i32 @ARRAY_SIZE(i64* %269)
  %271 = icmp slt i32 %268, %270
  br i1 %271, label %272, label %493

272:                                              ; preds = %267
  %273 = load i32, i32* %5, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds [4 x i64], [4 x i64]* %8, i64 0, i64 %274
  %276 = load i64, i64* %275, align 8
  store i64 %276, i64* %7, align 8
  %277 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %278 = load i32, i32* %5, align 4
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %277, i64 %279
  %281 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %280, i32 0, i32 9
  %282 = load i32, i32* %281, align 4
  %283 = load i64, i64* %7, align 8
  %284 = load i64, i64* @SSB_SROM8_2G_MAXP_ITSSI, align 8
  %285 = add nsw i64 %283, %284
  %286 = load i32, i32* @SSB_SPROM8_2G_ITSSI, align 4
  %287 = load i32, i32* @SSB_SPROM8_2G_ITSSI_SHIFT, align 4
  %288 = call i32 @SPEX(i32 %282, i64 %285, i32 %286, i32 %287)
  %289 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %290 = load i32, i32* %5, align 4
  %291 = sext i32 %290 to i64
  %292 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %289, i64 %291
  %293 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %292, i32 0, i32 8
  %294 = load i32, i32* %293, align 8
  %295 = load i64, i64* %7, align 8
  %296 = load i64, i64* @SSB_SROM8_2G_MAXP_ITSSI, align 8
  %297 = add nsw i64 %295, %296
  %298 = load i32, i32* @SSB_SPROM8_2G_MAXP, align 4
  %299 = call i32 @SPEX(i32 %294, i64 %297, i32 %298, i32 0)
  %300 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %301 = load i32, i32* %5, align 4
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %300, i64 %302
  %304 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %303, i32 0, i32 7
  %305 = load i32*, i32** %304, align 8
  %306 = getelementptr inbounds i32, i32* %305, i64 0
  %307 = load i32, i32* %306, align 4
  %308 = load i64, i64* %7, align 8
  %309 = load i64, i64* @SSB_SROM8_2G_PA_0, align 8
  %310 = add nsw i64 %308, %309
  %311 = call i32 @SPEX(i32 %307, i64 %310, i32 -1, i32 0)
  %312 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %313 = load i32, i32* %5, align 4
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %312, i64 %314
  %316 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %315, i32 0, i32 7
  %317 = load i32*, i32** %316, align 8
  %318 = getelementptr inbounds i32, i32* %317, i64 1
  %319 = load i32, i32* %318, align 4
  %320 = load i64, i64* %7, align 8
  %321 = load i64, i64* @SSB_SROM8_2G_PA_1, align 8
  %322 = add nsw i64 %320, %321
  %323 = call i32 @SPEX(i32 %319, i64 %322, i32 -1, i32 0)
  %324 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %325 = load i32, i32* %5, align 4
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %324, i64 %326
  %328 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %327, i32 0, i32 7
  %329 = load i32*, i32** %328, align 8
  %330 = getelementptr inbounds i32, i32* %329, i64 2
  %331 = load i32, i32* %330, align 4
  %332 = load i64, i64* %7, align 8
  %333 = load i64, i64* @SSB_SROM8_2G_PA_2, align 8
  %334 = add nsw i64 %332, %333
  %335 = call i32 @SPEX(i32 %331, i64 %334, i32 -1, i32 0)
  %336 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %337 = load i32, i32* %5, align 4
  %338 = sext i32 %337 to i64
  %339 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %336, i64 %338
  %340 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %339, i32 0, i32 6
  %341 = load i32, i32* %340, align 4
  %342 = load i64, i64* %7, align 8
  %343 = load i64, i64* @SSB_SROM8_5G_MAXP_ITSSI, align 8
  %344 = add nsw i64 %342, %343
  %345 = load i32, i32* @SSB_SPROM8_5G_ITSSI, align 4
  %346 = load i32, i32* @SSB_SPROM8_5G_ITSSI_SHIFT, align 4
  %347 = call i32 @SPEX(i32 %341, i64 %344, i32 %345, i32 %346)
  %348 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %349 = load i32, i32* %5, align 4
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %348, i64 %350
  %352 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %351, i32 0, i32 5
  %353 = load i32, i32* %352, align 8
  %354 = load i64, i64* %7, align 8
  %355 = load i64, i64* @SSB_SROM8_5G_MAXP_ITSSI, align 8
  %356 = add nsw i64 %354, %355
  %357 = load i32, i32* @SSB_SPROM8_5G_MAXP, align 4
  %358 = call i32 @SPEX(i32 %353, i64 %356, i32 %357, i32 0)
  %359 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %360 = load i32, i32* %5, align 4
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %359, i64 %361
  %363 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %362, i32 0, i32 4
  %364 = load i32, i32* %363, align 4
  %365 = load i64, i64* %7, align 8
  %366 = load i64, i64* @SSB_SPROM8_5GHL_MAXP, align 8
  %367 = add nsw i64 %365, %366
  %368 = load i32, i32* @SSB_SPROM8_5GH_MAXP, align 4
  %369 = call i32 @SPEX(i32 %364, i64 %367, i32 %368, i32 0)
  %370 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %371 = load i32, i32* %5, align 4
  %372 = sext i32 %371 to i64
  %373 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %370, i64 %372
  %374 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %373, i32 0, i32 3
  %375 = load i32, i32* %374, align 8
  %376 = load i64, i64* %7, align 8
  %377 = load i64, i64* @SSB_SPROM8_5GHL_MAXP, align 8
  %378 = add nsw i64 %376, %377
  %379 = load i32, i32* @SSB_SPROM8_5GL_MAXP, align 4
  %380 = load i32, i32* @SSB_SPROM8_5GL_MAXP_SHIFT, align 4
  %381 = call i32 @SPEX(i32 %375, i64 %378, i32 %379, i32 %380)
  %382 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %383 = load i32, i32* %5, align 4
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %382, i64 %384
  %386 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %385, i32 0, i32 2
  %387 = load i32*, i32** %386, align 8
  %388 = getelementptr inbounds i32, i32* %387, i64 0
  %389 = load i32, i32* %388, align 4
  %390 = load i64, i64* %7, align 8
  %391 = load i64, i64* @SSB_SROM8_5GL_PA_0, align 8
  %392 = add nsw i64 %390, %391
  %393 = call i32 @SPEX(i32 %389, i64 %392, i32 -1, i32 0)
  %394 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %395 = load i32, i32* %5, align 4
  %396 = sext i32 %395 to i64
  %397 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %394, i64 %396
  %398 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %397, i32 0, i32 2
  %399 = load i32*, i32** %398, align 8
  %400 = getelementptr inbounds i32, i32* %399, i64 1
  %401 = load i32, i32* %400, align 4
  %402 = load i64, i64* %7, align 8
  %403 = load i64, i64* @SSB_SROM8_5GL_PA_1, align 8
  %404 = add nsw i64 %402, %403
  %405 = call i32 @SPEX(i32 %401, i64 %404, i32 -1, i32 0)
  %406 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %407 = load i32, i32* %5, align 4
  %408 = sext i32 %407 to i64
  %409 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %406, i64 %408
  %410 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %409, i32 0, i32 2
  %411 = load i32*, i32** %410, align 8
  %412 = getelementptr inbounds i32, i32* %411, i64 2
  %413 = load i32, i32* %412, align 4
  %414 = load i64, i64* %7, align 8
  %415 = load i64, i64* @SSB_SROM8_5GL_PA_2, align 8
  %416 = add nsw i64 %414, %415
  %417 = call i32 @SPEX(i32 %413, i64 %416, i32 -1, i32 0)
  %418 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %419 = load i32, i32* %5, align 4
  %420 = sext i32 %419 to i64
  %421 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %418, i64 %420
  %422 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %421, i32 0, i32 1
  %423 = load i32*, i32** %422, align 8
  %424 = getelementptr inbounds i32, i32* %423, i64 0
  %425 = load i32, i32* %424, align 4
  %426 = load i64, i64* %7, align 8
  %427 = load i64, i64* @SSB_SROM8_5G_PA_0, align 8
  %428 = add nsw i64 %426, %427
  %429 = call i32 @SPEX(i32 %425, i64 %428, i32 -1, i32 0)
  %430 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %431 = load i32, i32* %5, align 4
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %430, i64 %432
  %434 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %433, i32 0, i32 1
  %435 = load i32*, i32** %434, align 8
  %436 = getelementptr inbounds i32, i32* %435, i64 1
  %437 = load i32, i32* %436, align 4
  %438 = load i64, i64* %7, align 8
  %439 = load i64, i64* @SSB_SROM8_5G_PA_1, align 8
  %440 = add nsw i64 %438, %439
  %441 = call i32 @SPEX(i32 %437, i64 %440, i32 -1, i32 0)
  %442 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %443 = load i32, i32* %5, align 4
  %444 = sext i32 %443 to i64
  %445 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %442, i64 %444
  %446 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %445, i32 0, i32 1
  %447 = load i32*, i32** %446, align 8
  %448 = getelementptr inbounds i32, i32* %447, i64 2
  %449 = load i32, i32* %448, align 4
  %450 = load i64, i64* %7, align 8
  %451 = load i64, i64* @SSB_SROM8_5G_PA_2, align 8
  %452 = add nsw i64 %450, %451
  %453 = call i32 @SPEX(i32 %449, i64 %452, i32 -1, i32 0)
  %454 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %455 = load i32, i32* %5, align 4
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %454, i64 %456
  %458 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %457, i32 0, i32 0
  %459 = load i32*, i32** %458, align 8
  %460 = getelementptr inbounds i32, i32* %459, i64 0
  %461 = load i32, i32* %460, align 4
  %462 = load i64, i64* %7, align 8
  %463 = load i64, i64* @SSB_SROM8_5GH_PA_0, align 8
  %464 = add nsw i64 %462, %463
  %465 = call i32 @SPEX(i32 %461, i64 %464, i32 -1, i32 0)
  %466 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %467 = load i32, i32* %5, align 4
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %466, i64 %468
  %470 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %469, i32 0, i32 0
  %471 = load i32*, i32** %470, align 8
  %472 = getelementptr inbounds i32, i32* %471, i64 1
  %473 = load i32, i32* %472, align 4
  %474 = load i64, i64* %7, align 8
  %475 = load i64, i64* @SSB_SROM8_5GH_PA_1, align 8
  %476 = add nsw i64 %474, %475
  %477 = call i32 @SPEX(i32 %473, i64 %476, i32 -1, i32 0)
  %478 = load %struct.TYPE_9__*, %struct.TYPE_9__** @core_pwr_info, align 8
  %479 = load i32, i32* %5, align 4
  %480 = sext i32 %479 to i64
  %481 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %478, i64 %480
  %482 = getelementptr inbounds %struct.TYPE_9__, %struct.TYPE_9__* %481, i32 0, i32 0
  %483 = load i32*, i32** %482, align 8
  %484 = getelementptr inbounds i32, i32* %483, i64 2
  %485 = load i32, i32* %484, align 4
  %486 = load i64, i64* %7, align 8
  %487 = load i64, i64* @SSB_SROM8_5GH_PA_2, align 8
  %488 = add nsw i64 %486, %487
  %489 = call i32 @SPEX(i32 %485, i64 %488, i32 -1, i32 0)
  br label %490

490:                                              ; preds = %272
  %491 = load i32, i32* %5, align 4
  %492 = add nsw i32 %491, 1
  store i32 %492, i32* %5, align 4
  br label %267

493:                                              ; preds = %267
  %494 = load i32, i32* getelementptr inbounds (%struct.TYPE_8__, %struct.TYPE_8__* @fem, i32 0, i32 1, i32 4), align 4
  %495 = load i64, i64* @SSB_SPROM8_FEM2G, align 8
  %496 = load i32, i32* @SSB_SROM8_FEM_TSSIPOS, align 4
  %497 = load i32, i32* @SSB_SROM8_FEM_TSSIPOS_SHIFT, align 4
  %498 = call i32 @SPEX(i32 %494, i64 %495, i32 %496, i32 %497)
  %499 = load i32, i32* getelementptr inbounds (%struct.TYPE_8__, %struct.TYPE_8__* @fem, i32 0, i32 1, i32 3), align 4
  %500 = load i64, i64* @SSB_SPROM8_FEM2G, align 8
  %501 = load i32, i32* @SSB_SROM8_FEM_EXTPA_GAIN, align 4
  %502 = load i32, i32* @SSB_SROM8_FEM_EXTPA_GAIN_SHIFT, align 4
  %503 = call i32 @SPEX(i32 %499, i64 %500, i32 %501, i32 %502)
  %504 = load i32, i32* getelementptr inbounds (%struct.TYPE_8__, %struct.TYPE_8__* @fem, i32 0, i32 1, i32 2), align 4
  %505 = load i64, i64* @SSB_SPROM8_FEM2G, align 8
  %506 = load i32, i32* @SSB_SROM8_FEM_PDET_RANGE, align 4
  %507 = load i32, i32* @SSB_SROM8_FEM_PDET_RANGE_SHIFT, align 4
  %508 = call i32 @SPEX(i32 %504, i64 %505, i32 %506, i32 %507)
  %509 = load i32, i32* getelementptr inbounds (%struct.TYPE_8__, %struct.TYPE_8__* @fem, i32 0, i32 1, i32 1), align 4
  %510 = load i64, i64* @SSB_SPROM8_FEM2G, align 8
  %511 = load i32, i32* @SSB_SROM8_FEM_TR_ISO, align 4
  %512 = load i32, i32* @SSB_SROM8_FEM_TR_ISO_SHIFT, align 4
  %513 = call i32 @SPEX(i32 %509, i64 %510, i32 %511, i32 %512)
  %514 = load i32, i32* getelementptr inbounds (%struct.TYPE_8__, %struct.TYPE_8__* @fem, i32 0, i32 1, i32 0), align 4
  %515 = load i64, i64* @SSB_SPROM8_FEM2G, align 8
  %516 = load i32, i32* @SSB_SROM8_FEM_ANTSWLUT, align 4
  %517 = load i32, i32* @SSB_SROM8_FEM_ANTSWLUT_SHIFT, align 4
  %518 = call i32 @SPEX(i32 %514, i64 %515, i32 %516, i32 %517)
  %519 = load i32, i32* getelementptr inbounds (%struct.TYPE_8__, %struct.TYPE_8__* @fem, i32 0, i32 0, i32 4), align 4
  %520 = load i64, i64* @SSB_SPROM8_FEM5G, align 8
  %521 = load i32, i32* @SSB_SROM8_FEM_TSSIPOS, align 4
  %522 = load i32, i32* @SSB_SROM8_FEM_TSSIPOS_SHIFT, align 4
  %523 = call i32 @SPEX(i32 %519, i64 %520, i32 %521, i32 %522)
  %524 = load i32, i32* getelementptr inbounds (%struct.TYPE_8__, %struct.TYPE_8__* @fem, i32 0, i32 0, i32 3), align 4
  %525 = load i64, i64* @SSB_SPROM8_FEM5G, align 8
  %526 = load i32, i32* @SSB_SROM8_FEM_EXTPA_GAIN, align 4
  %527 = load i32, i32* @SSB_SROM8_FEM_EXTPA_GAIN_SHIFT, align 4
  %528 = call i32 @SPEX(i32 %524, i64 %525, i32 %526, i32 %527)
  %529 = load i32, i32* getelementptr inbounds (%struct.TYPE_8__, %struct.TYPE_8__* @fem, i32 0, i32 0, i32 2), align 4
  %530 = load i64, i64* @SSB_SPROM8_FEM5G, align 8
  %531 = load i32, i32* @SSB_SROM8_FEM_PDET_RANGE, align 4
  %532 = load i32, i32* @SSB_SROM8_FEM_PDET_RANGE_SHIFT, align 4
  %533 = call i32 @SPEX(i32 %529, i64 %530, i32 %531, i32 %532)
  %534 = load i32, i32* getelementptr inbounds (%struct.TYPE_8__, %struct.TYPE_8__* @fem, i32 0, i32 0, i32 1), align 4
  %535 = load i64, i64* @SSB_SPROM8_FEM5G, align 8
  %536 = load i32, i32* @SSB_SROM8_FEM_TR_ISO, align 4
  %537 = load i32, i32* @SSB_SROM8_FEM_TR_ISO_SHIFT, align 4
  %538 = call i32 @SPEX(i32 %534, i64 %535, i32 %536, i32 %537)
  %539 = load i32, i32* getelementptr inbounds (%struct.TYPE_8__, %struct.TYPE_8__* @fem, i32 0, i32 0, i32 0), align 4
  %540 = load i64, i64* @SSB_SPROM8_FEM5G, align 8
  %541 = load i32, i32* @SSB_SROM8_FEM_ANTSWLUT, align 4
  %542 = load i32, i32* @SSB_SROM8_FEM_ANTSWLUT_SHIFT, align 4
  %543 = call i32 @SPEX(i32 %539, i64 %540, i32 %541, i32 %542)
  %544 = load i32, i32* @leddc_on_time, align 4
  %545 = load i64, i64* @SSB_SPROM8_LEDDC, align 8
  %546 = load i32, i32* @SSB_SPROM8_LEDDC_ON, align 4
  %547 = load i32, i32* @SSB_SPROM8_LEDDC_ON_SHIFT, align 4
  %548 = call i32 @SPEX(i32 %544, i64 %545, i32 %546, i32 %547)
  %549 = load i32, i32* @leddc_off_time, align 4
  %550 = load i64, i64* @SSB_SPROM8_LEDDC, align 8
  %551 = load i32, i32* @SSB_SPROM8_LEDDC_OFF, align 4
  %552 = load i32, i32* @SSB_SPROM8_LEDDC_OFF_SHIFT, align 4
  %553 = call i32 @SPEX(i32 %549, i64 %550, i32 %551, i32 %552)
  %554 = load i32, i32* @txchain, align 4
  %555 = load i64, i64* @SSB_SPROM8_TXRXC, align 8
  %556 = load i32, i32* @SSB_SPROM8_TXRXC_TXCHAIN, align 4
  %557 = load i32, i32* @SSB_SPROM8_TXRXC_TXCHAIN_SHIFT, align 4
  %558 = call i32 @SPEX(i32 %554, i64 %555, i32 %556, i32 %557)
  %559 = load i32, i32* @rxchain, align 4
  %560 = load i64, i64* @SSB_SPROM8_TXRXC, align 8
  %561 = load i32, i32* @SSB_SPROM8_TXRXC_RXCHAIN, align 4
  %562 = load i32, i32* @SSB_SPROM8_TXRXC_RXCHAIN_SHIFT, align 4
  %563 = call i32 @SPEX(i32 %559, i64 %560, i32 %561, i32 %562)
  %564 = load i32, i32* @antswitch, align 4
  %565 = load i64, i64* @SSB_SPROM8_TXRXC, align 8
  %566 = load i32, i32* @SSB_SPROM8_TXRXC_SWITCH, align 4
  %567 = load i32, i32* @SSB_SPROM8_TXRXC_SWITCH_SHIFT, align 4
  %568 = call i32 @SPEX(i32 %564, i64 %565, i32 %566, i32 %567)
  %569 = load i32, i32* @opo, align 4
  %570 = load i64, i64* @SSB_SPROM8_OFDM2GPO, align 8
  %571 = call i32 @SPEX(i32 %569, i64 %570, i32 255, i32 0)
  %572 = load i32, i32* @mcs2gpo, align 4
  %573 = load i32, i32* @SSB_SPROM8_2G_MCSPO, align 4
  %574 = call i32 @SPEX_ARRAY8(i32 %572, i32 %573, i32 -1, i32 0)
  %575 = load i32, i32* @mcs5gpo, align 4
  %576 = load i32, i32* @SSB_SPROM8_5G_MCSPO, align 4
  %577 = call i32 @SPEX_ARRAY8(i32 %575, i32 %576, i32 -1, i32 0)
  %578 = load i32, i32* @mcs5glpo, align 4
  %579 = load i32, i32* @SSB_SPROM8_5GL_MCSPO, align 4
  %580 = call i32 @SPEX_ARRAY8(i32 %578, i32 %579, i32 -1, i32 0)
  %581 = load i32, i32* @mcs5ghpo, align 4
  %582 = load i32, i32* @SSB_SPROM8_5GH_MCSPO, align 4
  %583 = call i32 @SPEX_ARRAY8(i32 %581, i32 %582, i32 -1, i32 0)
  %584 = load i32, i32* @rawtempsense, align 4
  %585 = load i64, i64* @SSB_SPROM8_RAWTS, align 8
  %586 = load i32, i32* @SSB_SPROM8_RAWTS_RAWTEMP, align 4
  %587 = load i32, i32* @SSB_SPROM8_RAWTS_RAWTEMP_SHIFT, align 4
  %588 = call i32 @SPEX(i32 %584, i64 %585, i32 %586, i32 %587)
  %589 = load i32, i32* @measpower, align 4
  %590 = load i64, i64* @SSB_SPROM8_RAWTS, align 8
  %591 = load i32, i32* @SSB_SPROM8_RAWTS_MEASPOWER, align 4
  %592 = load i32, i32* @SSB_SPROM8_RAWTS_MEASPOWER_SHIFT, align 4
  %593 = call i32 @SPEX(i32 %589, i64 %590, i32 %591, i32 %592)
  %594 = load i32, i32* @tempsense_slope, align 4
  %595 = load i64, i64* @SSB_SPROM8_OPT_CORRX, align 8
  %596 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMP_SLOPE, align 4
  %597 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMP_SLOPE_SHIFT, align 4
  %598 = call i32 @SPEX(i32 %594, i64 %595, i32 %596, i32 %597)
  %599 = load i32, i32* @tempcorrx, align 4
  %600 = load i64, i64* @SSB_SPROM8_OPT_CORRX, align 8
  %601 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMPCORRX, align 4
  %602 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMPCORRX_SHIFT, align 4
  %603 = call i32 @SPEX(i32 %599, i64 %600, i32 %601, i32 %602)
  %604 = load i32, i32* @tempsense_option, align 4
  %605 = load i64, i64* @SSB_SPROM8_OPT_CORRX, align 8
  %606 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMP_OPTION, align 4
  %607 = load i32, i32* @SSB_SPROM8_OPT_CORRX_TEMP_OPTION_SHIFT, align 4
  %608 = call i32 @SPEX(i32 %604, i64 %605, i32 %606, i32 %607)
  %609 = load i32, i32* @freqoffset_corr, align 4
  %610 = load i64, i64* @SSB_SPROM8_HWIQ_IQSWP, align 8
  %611 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_FREQ_CORR, align 4
  %612 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_FREQ_CORR_SHIFT, align 4
  %613 = call i32 @SPEX(i32 %609, i64 %610, i32 %611, i32 %612)
  %614 = load i32, i32* @iqcal_swp_dis, align 4
  %615 = load i64, i64* @SSB_SPROM8_HWIQ_IQSWP, align 8
  %616 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_IQCAL_SWP, align 4
  %617 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_IQCAL_SWP_SHIFT, align 4
  %618 = call i32 @SPEX(i32 %614, i64 %615, i32 %616, i32 %617)
  %619 = load i32, i32* @hw_iqcal_en, align 4
  %620 = load i64, i64* @SSB_SPROM8_HWIQ_IQSWP, align 8
  %621 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_HW_IQCAL, align 4
  %622 = load i32, i32* @SSB_SPROM8_HWIQ_IQSWP_HW_IQCAL_SHIFT, align 4
  %623 = call i32 @SPEX(i32 %619, i64 %620, i32 %621, i32 %622)
  %624 = load i32, i32* @bw40po, align 4
  %625 = load i64, i64* @SSB_SPROM8_BW40PO, align 8
  %626 = call i32 @SPEX(i32 %624, i64 %625, i32 -1, i32 0)
  %627 = load i32, i32* @cddpo, align 4
  %628 = load i64, i64* @SSB_SPROM8_CDDPO, align 8
  %629 = call i32 @SPEX(i32 %627, i64 %628, i32 -1, i32 0)
  %630 = load i32, i32* @stbcpo, align 4
  %631 = load i64, i64* @SSB_SPROM8_STBCPO, align 8
  %632 = call i32 @SPEX(i32 %630, i64 %631, i32 -1, i32 0)
  %633 = load i32, i32* @bwduppo, align 4
  %634 = load i64, i64* @SSB_SPROM8_BWDUPPO, align 8
  %635 = call i32 @SPEX(i32 %633, i64 %634, i32 -1, i32 0)
  %636 = load i32, i32* @tempthresh, align 4
  %637 = load i64, i64* @SSB_SPROM8_THERMAL, align 8
  %638 = load i32, i32* @SSB_SPROM8_THERMAL_TRESH, align 4
  %639 = load i32, i32* @SSB_SPROM8_THERMAL_TRESH_SHIFT, align 4
  %640 = call i32 @SPEX(i32 %636, i64 %637, i32 %638, i32 %639)
  %641 = load i32, i32* @tempoffset, align 4
  %642 = load i64, i64* @SSB_SPROM8_THERMAL, align 8
  %643 = load i32, i32* @SSB_SPROM8_THERMAL_OFFSET, align 4
  %644 = load i32, i32* @SSB_SPROM8_THERMAL_OFFSET_SHIFT, align 4
  %645 = call i32 @SPEX(i32 %641, i64 %642, i32 %643, i32 %644)
  %646 = load i32, i32* @phycal_tempdelta, align 4
  %647 = load i64, i64* @SSB_SPROM8_TEMPDELTA, align 8
  %648 = load i32, i32* @SSB_SPROM8_TEMPDELTA_PHYCAL, align 4
  %649 = load i32, i32* @SSB_SPROM8_TEMPDELTA_PHYCAL_SHIFT, align 4
  %650 = call i32 @SPEX(i32 %646, i64 %647, i32 %648, i32 %649)
  %651 = load i32, i32* @temps_period, align 4
  %652 = load i64, i64* @SSB_SPROM8_TEMPDELTA, align 8
  %653 = load i32, i32* @SSB_SPROM8_TEMPDELTA_PERIOD, align 4
  %654 = load i32, i32* @SSB_SPROM8_TEMPDELTA_PERIOD_SHIFT, align 4
  %655 = call i32 @SPEX(i32 %651, i64 %652, i32 %653, i32 %654)
  %656 = load i32, i32* @temps_hysteresis, align 4
  %657 = load i64, i64* @SSB_SPROM8_TEMPDELTA, align 8
  %658 = load i32, i32* @SSB_SPROM8_TEMPDELTA_HYSTERESIS, align 4
  %659 = load i32, i32* @SSB_SPROM8_TEMPDELTA_HYSTERESIS_SHIFT, align 4
  %660 = call i32 @SPEX(i32 %656, i64 %657, i32 %658, i32 %659)
  %661 = load %struct.ssb_sprom*, %struct.ssb_sprom** %3, align 8
  %662 = load i64*, i64** %4, align 8
  %663 = call i32 @sprom_extract_r458(%struct.ssb_sprom* %661, i64* %662)
  ret void
}

declare dso_local i32 @BUILD_BUG_ON(i32) #1

declare dso_local i32 @ARRAY_SIZE(i64*) #1

declare dso_local i32 @SPOFF(i32) #1

declare dso_local i32 @cpu_to_be16(i64) #1

declare dso_local i32 @SPEX(i32, i64, i32, i32) #1

declare dso_local i32 @SPEX32(i32, i64, i32, i32) #1

declare dso_local i32 @SPEX_ARRAY8(i32, i32, i32, i32) #1

declare dso_local i32 @sprom_extract_r458(%struct.ssb_sprom*, i64*) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
