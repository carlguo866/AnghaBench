; ModuleID = '/home/carl/AnghaBench/fastsocket/kernel/drivers/block/rsxx/extr_core.c_rsxx_attr_pci_regs_show.c'
source_filename = "/home/carl/AnghaBench/fastsocket/kernel/drivers/block/rsxx/extr_core.c_rsxx_attr_pci_regs_show.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.seq_file = type { %struct.rsxx_cardinfo* }
%struct.rsxx_cardinfo = type { i64 }

@.str = private unnamed_addr constant [14 x i8] c"HWID\09\090x%08x\0A\00", align 1
@HWID = common dso_local global i64 0, align 8
@.str.1 = private unnamed_addr constant [17 x i8] c"SCRATCH\09\090x%08x\0A\00", align 1
@SCRATCH = common dso_local global i64 0, align 8
@.str.2 = private unnamed_addr constant [13 x i8] c"IER\09\090x%08x\0A\00", align 1
@IER = common dso_local global i64 0, align 8
@.str.3 = private unnamed_addr constant [13 x i8] c"IPR\09\090x%08x\0A\00", align 1
@IPR = common dso_local global i64 0, align 8
@.str.4 = private unnamed_addr constant [18 x i8] c"CREG_CMD\09\090x%08x\0A\00", align 1
@CREG_CMD = common dso_local global i64 0, align 8
@.str.5 = private unnamed_addr constant [18 x i8] c"CREG_ADD\09\090x%08x\0A\00", align 1
@CREG_ADD = common dso_local global i64 0, align 8
@.str.6 = private unnamed_addr constant [18 x i8] c"CREG_CNT\09\090x%08x\0A\00", align 1
@CREG_CNT = common dso_local global i64 0, align 8
@.str.7 = private unnamed_addr constant [18 x i8] c"CREG_STAT\090x%08x\0A\00", align 1
@CREG_STAT = common dso_local global i64 0, align 8
@.str.8 = private unnamed_addr constant [19 x i8] c"CREG_DATA0\090x%08x\0A\00", align 1
@CREG_DATA0 = common dso_local global i64 0, align 8
@.str.9 = private unnamed_addr constant [19 x i8] c"CREG_DATA1\090x%08x\0A\00", align 1
@CREG_DATA1 = common dso_local global i64 0, align 8
@.str.10 = private unnamed_addr constant [19 x i8] c"CREG_DATA2\090x%08x\0A\00", align 1
@CREG_DATA2 = common dso_local global i64 0, align 8
@.str.11 = private unnamed_addr constant [19 x i8] c"CREG_DATA3\090x%08x\0A\00", align 1
@CREG_DATA3 = common dso_local global i64 0, align 8
@.str.12 = private unnamed_addr constant [19 x i8] c"CREG_DATA4\090x%08x\0A\00", align 1
@CREG_DATA4 = common dso_local global i64 0, align 8
@.str.13 = private unnamed_addr constant [19 x i8] c"CREG_DATA5\090x%08x\0A\00", align 1
@CREG_DATA5 = common dso_local global i64 0, align 8
@.str.14 = private unnamed_addr constant [19 x i8] c"CREG_DATA6\090x%08x\0A\00", align 1
@CREG_DATA6 = common dso_local global i64 0, align 8
@.str.15 = private unnamed_addr constant [19 x i8] c"CREG_DATA7\090x%08x\0A\00", align 1
@CREG_DATA7 = common dso_local global i64 0, align 8
@.str.16 = private unnamed_addr constant [18 x i8] c"INTR_COAL\090x%08x\0A\00", align 1
@INTR_COAL = common dso_local global i64 0, align 8
@.str.17 = private unnamed_addr constant [18 x i8] c"HW_ERROR\09\090x%08x\0A\00", align 1
@HW_ERROR = common dso_local global i64 0, align 8
@.str.18 = private unnamed_addr constant [16 x i8] c"DEBUG0\09\090x%08x\0A\00", align 1
@PCI_DEBUG0 = common dso_local global i64 0, align 8
@.str.19 = private unnamed_addr constant [16 x i8] c"DEBUG1\09\090x%08x\0A\00", align 1
@PCI_DEBUG1 = common dso_local global i64 0, align 8
@.str.20 = private unnamed_addr constant [16 x i8] c"DEBUG2\09\090x%08x\0A\00", align 1
@PCI_DEBUG2 = common dso_local global i64 0, align 8
@.str.21 = private unnamed_addr constant [16 x i8] c"DEBUG3\09\090x%08x\0A\00", align 1
@PCI_DEBUG3 = common dso_local global i64 0, align 8
@.str.22 = private unnamed_addr constant [16 x i8] c"DEBUG4\09\090x%08x\0A\00", align 1
@PCI_DEBUG4 = common dso_local global i64 0, align 8
@.str.23 = private unnamed_addr constant [16 x i8] c"DEBUG5\09\090x%08x\0A\00", align 1
@PCI_DEBUG5 = common dso_local global i64 0, align 8
@.str.24 = private unnamed_addr constant [16 x i8] c"DEBUG6\09\090x%08x\0A\00", align 1
@PCI_DEBUG6 = common dso_local global i64 0, align 8
@.str.25 = private unnamed_addr constant [16 x i8] c"DEBUG7\09\090x%08x\0A\00", align 1
@PCI_DEBUG7 = common dso_local global i64 0, align 8
@.str.26 = private unnamed_addr constant [18 x i8] c"RECONFIG\09\090x%08x\0A\00", align 1
@PCI_RECONFIG = common dso_local global i64 0, align 8
@llvm.used = appending global [1 x i8*] [i8* bitcast (i32 (%struct.seq_file*, i8*)* @rsxx_attr_pci_regs_show to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal i32 @rsxx_attr_pci_regs_show(%struct.seq_file* %0, i8* %1) #0 {
  %3 = alloca %struct.seq_file*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %struct.rsxx_cardinfo*, align 8
  store %struct.seq_file* %0, %struct.seq_file** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %7 = getelementptr inbounds %struct.seq_file, %struct.seq_file* %6, i32 0, i32 0
  %8 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %7, align 8
  store %struct.rsxx_cardinfo* %8, %struct.rsxx_cardinfo** %5, align 8
  %9 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %10 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %11 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %10, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = load i64, i64* @HWID, align 8
  %14 = add nsw i64 %12, %13
  %15 = call i32 @ioread32(i64 %14)
  %16 = call i32 @seq_printf(%struct.seq_file* %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 %15)
  %17 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %18 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %19 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %18, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = load i64, i64* @SCRATCH, align 8
  %22 = add nsw i64 %20, %21
  %23 = call i32 @ioread32(i64 %22)
  %24 = call i32 @seq_printf(%struct.seq_file* %17, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i32 %23)
  %25 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %26 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %27 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %26, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = load i64, i64* @IER, align 8
  %30 = add nsw i64 %28, %29
  %31 = call i32 @ioread32(i64 %30)
  %32 = call i32 @seq_printf(%struct.seq_file* %25, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i32 %31)
  %33 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %34 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %35 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %34, i32 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = load i64, i64* @IPR, align 8
  %38 = add nsw i64 %36, %37
  %39 = call i32 @ioread32(i64 %38)
  %40 = call i32 @seq_printf(%struct.seq_file* %33, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i32 %39)
  %41 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %42 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %43 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %42, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = load i64, i64* @CREG_CMD, align 8
  %46 = add nsw i64 %44, %45
  %47 = call i32 @ioread32(i64 %46)
  %48 = call i32 @seq_printf(%struct.seq_file* %41, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i32 %47)
  %49 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %50 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %51 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %50, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = load i64, i64* @CREG_ADD, align 8
  %54 = add nsw i64 %52, %53
  %55 = call i32 @ioread32(i64 %54)
  %56 = call i32 @seq_printf(%struct.seq_file* %49, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i32 %55)
  %57 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %58 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %59 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %58, i32 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = load i64, i64* @CREG_CNT, align 8
  %62 = add nsw i64 %60, %61
  %63 = call i32 @ioread32(i64 %62)
  %64 = call i32 @seq_printf(%struct.seq_file* %57, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i32 %63)
  %65 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %66 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %67 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %66, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = load i64, i64* @CREG_STAT, align 8
  %70 = add nsw i64 %68, %69
  %71 = call i32 @ioread32(i64 %70)
  %72 = call i32 @seq_printf(%struct.seq_file* %65, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.7, i64 0, i64 0), i32 %71)
  %73 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %74 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %75 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %74, i32 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* @CREG_DATA0, align 8
  %78 = add nsw i64 %76, %77
  %79 = call i32 @ioread32(i64 %78)
  %80 = call i32 @seq_printf(%struct.seq_file* %73, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i64 0, i64 0), i32 %79)
  %81 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %82 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %83 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %82, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = load i64, i64* @CREG_DATA1, align 8
  %86 = add nsw i64 %84, %85
  %87 = call i32 @ioread32(i64 %86)
  %88 = call i32 @seq_printf(%struct.seq_file* %81, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i32 %87)
  %89 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %90 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %91 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %90, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = load i64, i64* @CREG_DATA2, align 8
  %94 = add nsw i64 %92, %93
  %95 = call i32 @ioread32(i64 %94)
  %96 = call i32 @seq_printf(%struct.seq_file* %89, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0), i32 %95)
  %97 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %98 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %99 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %98, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = load i64, i64* @CREG_DATA3, align 8
  %102 = add nsw i64 %100, %101
  %103 = call i32 @ioread32(i64 %102)
  %104 = call i32 @seq_printf(%struct.seq_file* %97, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.11, i64 0, i64 0), i32 %103)
  %105 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %106 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %107 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %106, i32 0, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = load i64, i64* @CREG_DATA4, align 8
  %110 = add nsw i64 %108, %109
  %111 = call i32 @ioread32(i64 %110)
  %112 = call i32 @seq_printf(%struct.seq_file* %105, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0), i32 %111)
  %113 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %114 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %115 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %114, i32 0, i32 0
  %116 = load i64, i64* %115, align 8
  %117 = load i64, i64* @CREG_DATA5, align 8
  %118 = add nsw i64 %116, %117
  %119 = call i32 @ioread32(i64 %118)
  %120 = call i32 @seq_printf(%struct.seq_file* %113, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), i32 %119)
  %121 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %122 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %123 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %122, i32 0, i32 0
  %124 = load i64, i64* %123, align 8
  %125 = load i64, i64* @CREG_DATA6, align 8
  %126 = add nsw i64 %124, %125
  %127 = call i32 @ioread32(i64 %126)
  %128 = call i32 @seq_printf(%struct.seq_file* %121, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0), i32 %127)
  %129 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %130 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %131 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %130, i32 0, i32 0
  %132 = load i64, i64* %131, align 8
  %133 = load i64, i64* @CREG_DATA7, align 8
  %134 = add nsw i64 %132, %133
  %135 = call i32 @ioread32(i64 %134)
  %136 = call i32 @seq_printf(%struct.seq_file* %129, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i64 0, i64 0), i32 %135)
  %137 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %138 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %139 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %138, i32 0, i32 0
  %140 = load i64, i64* %139, align 8
  %141 = load i64, i64* @INTR_COAL, align 8
  %142 = add nsw i64 %140, %141
  %143 = call i32 @ioread32(i64 %142)
  %144 = call i32 @seq_printf(%struct.seq_file* %137, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i32 %143)
  %145 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %146 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %147 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %146, i32 0, i32 0
  %148 = load i64, i64* %147, align 8
  %149 = load i64, i64* @HW_ERROR, align 8
  %150 = add nsw i64 %148, %149
  %151 = call i32 @ioread32(i64 %150)
  %152 = call i32 @seq_printf(%struct.seq_file* %145, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i32 %151)
  %153 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %154 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %155 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %154, i32 0, i32 0
  %156 = load i64, i64* %155, align 8
  %157 = load i64, i64* @PCI_DEBUG0, align 8
  %158 = add nsw i64 %156, %157
  %159 = call i32 @ioread32(i64 %158)
  %160 = call i32 @seq_printf(%struct.seq_file* %153, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0), i32 %159)
  %161 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %162 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %163 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %162, i32 0, i32 0
  %164 = load i64, i64* %163, align 8
  %165 = load i64, i64* @PCI_DEBUG1, align 8
  %166 = add nsw i64 %164, %165
  %167 = call i32 @ioread32(i64 %166)
  %168 = call i32 @seq_printf(%struct.seq_file* %161, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i64 0, i64 0), i32 %167)
  %169 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %170 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %171 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %170, i32 0, i32 0
  %172 = load i64, i64* %171, align 8
  %173 = load i64, i64* @PCI_DEBUG2, align 8
  %174 = add nsw i64 %172, %173
  %175 = call i32 @ioread32(i64 %174)
  %176 = call i32 @seq_printf(%struct.seq_file* %169, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0), i32 %175)
  %177 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %178 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %179 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %178, i32 0, i32 0
  %180 = load i64, i64* %179, align 8
  %181 = load i64, i64* @PCI_DEBUG3, align 8
  %182 = add nsw i64 %180, %181
  %183 = call i32 @ioread32(i64 %182)
  %184 = call i32 @seq_printf(%struct.seq_file* %177, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.21, i64 0, i64 0), i32 %183)
  %185 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %186 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %187 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %186, i32 0, i32 0
  %188 = load i64, i64* %187, align 8
  %189 = load i64, i64* @PCI_DEBUG4, align 8
  %190 = add nsw i64 %188, %189
  %191 = call i32 @ioread32(i64 %190)
  %192 = call i32 @seq_printf(%struct.seq_file* %185, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i64 0, i64 0), i32 %191)
  %193 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %194 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %195 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %194, i32 0, i32 0
  %196 = load i64, i64* %195, align 8
  %197 = load i64, i64* @PCI_DEBUG5, align 8
  %198 = add nsw i64 %196, %197
  %199 = call i32 @ioread32(i64 %198)
  %200 = call i32 @seq_printf(%struct.seq_file* %193, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i64 0, i64 0), i32 %199)
  %201 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %202 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %203 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %202, i32 0, i32 0
  %204 = load i64, i64* %203, align 8
  %205 = load i64, i64* @PCI_DEBUG6, align 8
  %206 = add nsw i64 %204, %205
  %207 = call i32 @ioread32(i64 %206)
  %208 = call i32 @seq_printf(%struct.seq_file* %201, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.24, i64 0, i64 0), i32 %207)
  %209 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %210 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %211 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %210, i32 0, i32 0
  %212 = load i64, i64* %211, align 8
  %213 = load i64, i64* @PCI_DEBUG7, align 8
  %214 = add nsw i64 %212, %213
  %215 = call i32 @ioread32(i64 %214)
  %216 = call i32 @seq_printf(%struct.seq_file* %209, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i64 0, i64 0), i32 %215)
  %217 = load %struct.seq_file*, %struct.seq_file** %3, align 8
  %218 = load %struct.rsxx_cardinfo*, %struct.rsxx_cardinfo** %5, align 8
  %219 = getelementptr inbounds %struct.rsxx_cardinfo, %struct.rsxx_cardinfo* %218, i32 0, i32 0
  %220 = load i64, i64* %219, align 8
  %221 = load i64, i64* @PCI_RECONFIG, align 8
  %222 = add nsw i64 %220, %221
  %223 = call i32 @ioread32(i64 %222)
  %224 = call i32 @seq_printf(%struct.seq_file* %217, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26, i64 0, i64 0), i32 %223)
  ret i32 0
}

declare dso_local i32 @seq_printf(%struct.seq_file*, i8*, i32) #1

declare dso_local i32 @ioread32(i64) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
