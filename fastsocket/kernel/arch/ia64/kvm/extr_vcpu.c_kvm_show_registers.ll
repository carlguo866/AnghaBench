; ModuleID = '/home/carl/AnghaBench/fastsocket/kernel/arch/ia64/kvm/extr_vcpu.c_kvm_show_registers.c'
source_filename = "/home/carl/AnghaBench/fastsocket/kernel/arch/ia64/kvm/extr_vcpu.c_kvm_show_registers.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.kvm_vcpu = type { i32 }
%struct.kvm_pt_regs = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.TYPE_16__, %struct.TYPE_14__, %struct.TYPE_25__, %struct.TYPE_23__, %struct.TYPE_21__, %struct.TYPE_19__, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.TYPE_16__ = type { %struct.TYPE_15__ }
%struct.TYPE_15__ = type { i32* }
%struct.TYPE_14__ = type { %struct.TYPE_26__ }
%struct.TYPE_26__ = type { i32* }
%struct.TYPE_25__ = type { %struct.TYPE_24__ }
%struct.TYPE_24__ = type { i32* }
%struct.TYPE_23__ = type { %struct.TYPE_22__ }
%struct.TYPE_22__ = type { i32* }
%struct.TYPE_21__ = type { %struct.TYPE_20__ }
%struct.TYPE_20__ = type { i32* }
%struct.TYPE_19__ = type { %struct.TYPE_18__ }
%struct.TYPE_18__ = type { i32* }
%struct.TYPE_17__ = type { i64 }

@current_vcpu = common dso_local global %struct.kvm_vcpu* null, align 8
@.str = private unnamed_addr constant [19 x i8] c"vcpu 0x%p vcpu %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [44 x i8] c"psr : %016lx ifs : %016lx ip  : [<%016lx>]\0A\00", align 1
@.str.2 = private unnamed_addr constant [40 x i8] c"unat: %016lx pfs : %016lx rsc : %016lx\0A\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"rnat: %016lx bspstore: %016lx pr  : %016lx\0A\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"ldrs: %016lx ccv : %016lx fpsr: %016lx\0A\00", align 1
@.str.5 = private unnamed_addr constant [27 x i8] c"csd : %016lx ssd : %016lx\0A\00", align 1
@.str.6 = private unnamed_addr constant [40 x i8] c"b0  : %016lx b6  : %016lx b7  : %016lx\0A\00", align 1
@.str.7 = private unnamed_addr constant [37 x i8] c"f6  : %05lx%016lx f7  : %05lx%016lx\0A\00", align 1
@.str.8 = private unnamed_addr constant [37 x i8] c"f8  : %05lx%016lx f9  : %05lx%016lx\0A\00", align 1
@.str.9 = private unnamed_addr constant [37 x i8] c"f10 : %05lx%016lx f11 : %05lx%016lx\0A\00", align 1
@.str.10 = private unnamed_addr constant [40 x i8] c"r1  : %016lx r2  : %016lx r3  : %016lx\0A\00", align 1
@.str.11 = private unnamed_addr constant [40 x i8] c"r8  : %016lx r9  : %016lx r10 : %016lx\0A\00", align 1
@.str.12 = private unnamed_addr constant [40 x i8] c"r11 : %016lx r12 : %016lx r13 : %016lx\0A\00", align 1
@.str.13 = private unnamed_addr constant [40 x i8] c"r14 : %016lx r15 : %016lx r16 : %016lx\0A\00", align 1
@.str.14 = private unnamed_addr constant [40 x i8] c"r17 : %016lx r18 : %016lx r19 : %016lx\0A\00", align 1
@.str.15 = private unnamed_addr constant [40 x i8] c"r20 : %016lx r21 : %016lx r22 : %016lx\0A\00", align 1
@.str.16 = private unnamed_addr constant [40 x i8] c"r23 : %016lx r24 : %016lx r25 : %016lx\0A\00", align 1
@.str.17 = private unnamed_addr constant [40 x i8] c"r26 : %016lx r27 : %016lx r28 : %016lx\0A\00", align 1
@.str.18 = private unnamed_addr constant [40 x i8] c"r29 : %016lx r30 : %016lx r31 : %016lx\0A\00", align 1
@llvm.used = appending global [1 x i8*] [i8* bitcast (void (%struct.kvm_pt_regs*)* @kvm_show_registers to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind optnone uwtable
define internal void @kvm_show_registers(%struct.kvm_pt_regs* %0) #0 {
  %2 = alloca %struct.kvm_pt_regs*, align 8
  %3 = alloca i64, align 8
  %4 = alloca %struct.kvm_vcpu*, align 8
  store %struct.kvm_pt_regs* %0, %struct.kvm_pt_regs** %2, align 8
  %5 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %6 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %5, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %9 = call %struct.TYPE_17__* @ia64_psr(%struct.kvm_pt_regs* %8)
  %10 = getelementptr inbounds %struct.TYPE_17__, %struct.TYPE_17__* %9, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = add i64 %7, %11
  store i64 %12, i64* %3, align 8
  %13 = load %struct.kvm_vcpu*, %struct.kvm_vcpu** @current_vcpu, align 8
  store %struct.kvm_vcpu* %13, %struct.kvm_vcpu** %4, align 8
  %14 = load %struct.kvm_vcpu*, %struct.kvm_vcpu** %4, align 8
  %15 = icmp ne %struct.kvm_vcpu* %14, null
  br i1 %15, label %16, label %22

16:                                               ; preds = %1
  %17 = load %struct.kvm_vcpu*, %struct.kvm_vcpu** %4, align 8
  %18 = load %struct.kvm_vcpu*, %struct.kvm_vcpu** %4, align 8
  %19 = getelementptr inbounds %struct.kvm_vcpu, %struct.kvm_vcpu* %18, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), %struct.kvm_vcpu* %17, i32 %20)
  br label %22

22:                                               ; preds = %16, %1
  %23 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %24 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %23, i32 0, i32 49
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = inttoptr i64 %26 to %struct.kvm_vcpu*
  %28 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %29 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %28, i32 0, i32 48
  %30 = load i32, i32* %29, align 8
  %31 = load i64, i64* %3, align 8
  %32 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.1, i64 0, i64 0), %struct.kvm_vcpu* %27, i32 %30, i64 %31)
  %33 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %34 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %33, i32 0, i32 47
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = inttoptr i64 %36 to %struct.kvm_vcpu*
  %38 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %39 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %38, i32 0, i32 46
  %40 = load i32, i32* %39, align 8
  %41 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %42 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %41, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.2, i64 0, i64 0), %struct.kvm_vcpu* %37, i32 %40, i64 %43)
  %45 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %46 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %45, i32 0, i32 45
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  %49 = inttoptr i64 %48 to %struct.kvm_vcpu*
  %50 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %51 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %50, i32 0, i32 44
  %52 = load i32, i32* %51, align 8
  %53 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %54 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %53, i32 0, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), %struct.kvm_vcpu* %49, i32 %52, i64 %55)
  %57 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %58 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %57, i32 0, i32 43
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = inttoptr i64 %60 to %struct.kvm_vcpu*
  %62 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %63 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %62, i32 0, i32 42
  %64 = load i32, i32* %63, align 8
  %65 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %66 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %65, i32 0, i32 3
  %67 = load i64, i64* %66, align 8
  %68 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0), %struct.kvm_vcpu* %61, i32 %64, i64 %67)
  %69 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %70 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %69, i32 0, i32 41
  %71 = load i32, i32* %70, align 4
  %72 = sext i32 %71 to i64
  %73 = inttoptr i64 %72 to %struct.kvm_vcpu*
  %74 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %75 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %74, i32 0, i32 40
  %76 = load i32, i32* %75, align 8
  %77 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), %struct.kvm_vcpu* %73, i32 %76)
  %78 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %79 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %78, i32 0, i32 39
  %80 = load i32, i32* %79, align 4
  %81 = sext i32 %80 to i64
  %82 = inttoptr i64 %81 to %struct.kvm_vcpu*
  %83 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %84 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %83, i32 0, i32 38
  %85 = load i32, i32* %84, align 8
  %86 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %87 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %86, i32 0, i32 4
  %88 = load i64, i64* %87, align 8
  %89 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6, i64 0, i64 0), %struct.kvm_vcpu* %82, i32 %85, i64 %88)
  %90 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %91 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %90, i32 0, i32 37
  %92 = getelementptr inbounds %struct.TYPE_19__, %struct.TYPE_19__* %91, i32 0, i32 0
  %93 = getelementptr inbounds %struct.TYPE_18__, %struct.TYPE_18__* %92, i32 0, i32 0
  %94 = load i32*, i32** %93, align 8
  %95 = getelementptr inbounds i32, i32* %94, i64 1
  %96 = load i32, i32* %95, align 4
  %97 = sext i32 %96 to i64
  %98 = inttoptr i64 %97 to %struct.kvm_vcpu*
  %99 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %100 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %99, i32 0, i32 37
  %101 = getelementptr inbounds %struct.TYPE_19__, %struct.TYPE_19__* %100, i32 0, i32 0
  %102 = getelementptr inbounds %struct.TYPE_18__, %struct.TYPE_18__* %101, i32 0, i32 0
  %103 = load i32*, i32** %102, align 8
  %104 = getelementptr inbounds i32, i32* %103, i64 0
  %105 = load i32, i32* %104, align 4
  %106 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %107 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %106, i32 0, i32 36
  %108 = getelementptr inbounds %struct.TYPE_21__, %struct.TYPE_21__* %107, i32 0, i32 0
  %109 = getelementptr inbounds %struct.TYPE_20__, %struct.TYPE_20__* %108, i32 0, i32 0
  %110 = load i32*, i32** %109, align 8
  %111 = getelementptr inbounds i32, i32* %110, i64 1
  %112 = load i32, i32* %111, align 4
  %113 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %114 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %113, i32 0, i32 36
  %115 = getelementptr inbounds %struct.TYPE_21__, %struct.TYPE_21__* %114, i32 0, i32 0
  %116 = getelementptr inbounds %struct.TYPE_20__, %struct.TYPE_20__* %115, i32 0, i32 0
  %117 = load i32*, i32** %116, align 8
  %118 = getelementptr inbounds i32, i32* %117, i64 0
  %119 = load i32, i32* %118, align 4
  %120 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0), %struct.kvm_vcpu* %98, i32 %105, i32 %112, i32 %119)
  %121 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %122 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %121, i32 0, i32 35
  %123 = getelementptr inbounds %struct.TYPE_23__, %struct.TYPE_23__* %122, i32 0, i32 0
  %124 = getelementptr inbounds %struct.TYPE_22__, %struct.TYPE_22__* %123, i32 0, i32 0
  %125 = load i32*, i32** %124, align 8
  %126 = getelementptr inbounds i32, i32* %125, i64 1
  %127 = load i32, i32* %126, align 4
  %128 = sext i32 %127 to i64
  %129 = inttoptr i64 %128 to %struct.kvm_vcpu*
  %130 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %131 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %130, i32 0, i32 35
  %132 = getelementptr inbounds %struct.TYPE_23__, %struct.TYPE_23__* %131, i32 0, i32 0
  %133 = getelementptr inbounds %struct.TYPE_22__, %struct.TYPE_22__* %132, i32 0, i32 0
  %134 = load i32*, i32** %133, align 8
  %135 = getelementptr inbounds i32, i32* %134, i64 0
  %136 = load i32, i32* %135, align 4
  %137 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %138 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %137, i32 0, i32 34
  %139 = getelementptr inbounds %struct.TYPE_25__, %struct.TYPE_25__* %138, i32 0, i32 0
  %140 = getelementptr inbounds %struct.TYPE_24__, %struct.TYPE_24__* %139, i32 0, i32 0
  %141 = load i32*, i32** %140, align 8
  %142 = getelementptr inbounds i32, i32* %141, i64 1
  %143 = load i32, i32* %142, align 4
  %144 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %145 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %144, i32 0, i32 34
  %146 = getelementptr inbounds %struct.TYPE_25__, %struct.TYPE_25__* %145, i32 0, i32 0
  %147 = getelementptr inbounds %struct.TYPE_24__, %struct.TYPE_24__* %146, i32 0, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = getelementptr inbounds i32, i32* %148, i64 0
  %150 = load i32, i32* %149, align 4
  %151 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.8, i64 0, i64 0), %struct.kvm_vcpu* %129, i32 %136, i32 %143, i32 %150)
  %152 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %153 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %152, i32 0, i32 33
  %154 = getelementptr inbounds %struct.TYPE_14__, %struct.TYPE_14__* %153, i32 0, i32 0
  %155 = getelementptr inbounds %struct.TYPE_26__, %struct.TYPE_26__* %154, i32 0, i32 0
  %156 = load i32*, i32** %155, align 8
  %157 = getelementptr inbounds i32, i32* %156, i64 1
  %158 = load i32, i32* %157, align 4
  %159 = sext i32 %158 to i64
  %160 = inttoptr i64 %159 to %struct.kvm_vcpu*
  %161 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %162 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %161, i32 0, i32 33
  %163 = getelementptr inbounds %struct.TYPE_14__, %struct.TYPE_14__* %162, i32 0, i32 0
  %164 = getelementptr inbounds %struct.TYPE_26__, %struct.TYPE_26__* %163, i32 0, i32 0
  %165 = load i32*, i32** %164, align 8
  %166 = getelementptr inbounds i32, i32* %165, i64 0
  %167 = load i32, i32* %166, align 4
  %168 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %169 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %168, i32 0, i32 32
  %170 = getelementptr inbounds %struct.TYPE_16__, %struct.TYPE_16__* %169, i32 0, i32 0
  %171 = getelementptr inbounds %struct.TYPE_15__, %struct.TYPE_15__* %170, i32 0, i32 0
  %172 = load i32*, i32** %171, align 8
  %173 = getelementptr inbounds i32, i32* %172, i64 1
  %174 = load i32, i32* %173, align 4
  %175 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %176 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %175, i32 0, i32 32
  %177 = getelementptr inbounds %struct.TYPE_16__, %struct.TYPE_16__* %176, i32 0, i32 0
  %178 = getelementptr inbounds %struct.TYPE_15__, %struct.TYPE_15__* %177, i32 0, i32 0
  %179 = load i32*, i32** %178, align 8
  %180 = getelementptr inbounds i32, i32* %179, i64 0
  %181 = load i32, i32* %180, align 4
  %182 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9, i64 0, i64 0), %struct.kvm_vcpu* %160, i32 %167, i32 %174, i32 %181)
  %183 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %184 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %183, i32 0, i32 31
  %185 = load i32, i32* %184, align 4
  %186 = sext i32 %185 to i64
  %187 = inttoptr i64 %186 to %struct.kvm_vcpu*
  %188 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %189 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %188, i32 0, i32 30
  %190 = load i32, i32* %189, align 8
  %191 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %192 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %191, i32 0, i32 5
  %193 = load i64, i64* %192, align 8
  %194 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0), %struct.kvm_vcpu* %187, i32 %190, i64 %193)
  %195 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %196 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %195, i32 0, i32 29
  %197 = load i32, i32* %196, align 4
  %198 = sext i32 %197 to i64
  %199 = inttoptr i64 %198 to %struct.kvm_vcpu*
  %200 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %201 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %200, i32 0, i32 28
  %202 = load i32, i32* %201, align 8
  %203 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %204 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %203, i32 0, i32 6
  %205 = load i64, i64* %204, align 8
  %206 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11, i64 0, i64 0), %struct.kvm_vcpu* %199, i32 %202, i64 %205)
  %207 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %208 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %207, i32 0, i32 27
  %209 = load i32, i32* %208, align 4
  %210 = sext i32 %209 to i64
  %211 = inttoptr i64 %210 to %struct.kvm_vcpu*
  %212 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %213 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %212, i32 0, i32 26
  %214 = load i32, i32* %213, align 8
  %215 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %216 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %215, i32 0, i32 7
  %217 = load i64, i64* %216, align 8
  %218 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.12, i64 0, i64 0), %struct.kvm_vcpu* %211, i32 %214, i64 %217)
  %219 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %220 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %219, i32 0, i32 25
  %221 = load i32, i32* %220, align 4
  %222 = sext i32 %221 to i64
  %223 = inttoptr i64 %222 to %struct.kvm_vcpu*
  %224 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %225 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %224, i32 0, i32 24
  %226 = load i32, i32* %225, align 8
  %227 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %228 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %227, i32 0, i32 8
  %229 = load i64, i64* %228, align 8
  %230 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13, i64 0, i64 0), %struct.kvm_vcpu* %223, i32 %226, i64 %229)
  %231 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %232 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %231, i32 0, i32 23
  %233 = load i32, i32* %232, align 4
  %234 = sext i32 %233 to i64
  %235 = inttoptr i64 %234 to %struct.kvm_vcpu*
  %236 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %237 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %236, i32 0, i32 22
  %238 = load i32, i32* %237, align 8
  %239 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %240 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %239, i32 0, i32 9
  %241 = load i64, i64* %240, align 8
  %242 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0), %struct.kvm_vcpu* %235, i32 %238, i64 %241)
  %243 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %244 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %243, i32 0, i32 21
  %245 = load i32, i32* %244, align 4
  %246 = sext i32 %245 to i64
  %247 = inttoptr i64 %246 to %struct.kvm_vcpu*
  %248 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %249 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %248, i32 0, i32 20
  %250 = load i32, i32* %249, align 8
  %251 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %252 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %251, i32 0, i32 10
  %253 = load i64, i64* %252, align 8
  %254 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.15, i64 0, i64 0), %struct.kvm_vcpu* %247, i32 %250, i64 %253)
  %255 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %256 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %255, i32 0, i32 19
  %257 = load i32, i32* %256, align 4
  %258 = sext i32 %257 to i64
  %259 = inttoptr i64 %258 to %struct.kvm_vcpu*
  %260 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %261 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %260, i32 0, i32 18
  %262 = load i32, i32* %261, align 8
  %263 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %264 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %263, i32 0, i32 11
  %265 = load i64, i64* %264, align 8
  %266 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.16, i64 0, i64 0), %struct.kvm_vcpu* %259, i32 %262, i64 %265)
  %267 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %268 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %267, i32 0, i32 17
  %269 = load i32, i32* %268, align 4
  %270 = sext i32 %269 to i64
  %271 = inttoptr i64 %270 to %struct.kvm_vcpu*
  %272 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %273 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %272, i32 0, i32 16
  %274 = load i32, i32* %273, align 8
  %275 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %276 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %275, i32 0, i32 12
  %277 = load i64, i64* %276, align 8
  %278 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.17, i64 0, i64 0), %struct.kvm_vcpu* %271, i32 %274, i64 %277)
  %279 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %280 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %279, i32 0, i32 15
  %281 = load i32, i32* %280, align 4
  %282 = sext i32 %281 to i64
  %283 = inttoptr i64 %282 to %struct.kvm_vcpu*
  %284 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %285 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %284, i32 0, i32 14
  %286 = load i32, i32* %285, align 8
  %287 = load %struct.kvm_pt_regs*, %struct.kvm_pt_regs** %2, align 8
  %288 = getelementptr inbounds %struct.kvm_pt_regs, %struct.kvm_pt_regs* %287, i32 0, i32 13
  %289 = load i64, i64* %288, align 8
  %290 = call i32 (i8*, %struct.kvm_vcpu*, i32, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18, i64 0, i64 0), %struct.kvm_vcpu* %283, i32 %286, i64 %289)
  ret void
}

declare dso_local %struct.TYPE_17__* @ia64_psr(%struct.kvm_pt_regs*) #1

declare dso_local i32 @printk(i8*, %struct.kvm_vcpu*, i32, ...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
