; ModuleID = '/home/carl/AnghaBench/fastsocket/kernel/arch/mips/kernel/extr_asm-offsets.c_output_thread_fpu_defines.c'
source_filename = "/home/carl/AnghaBench/fastsocket/kernel/arch/mips/kernel/extr_asm-offsets.c_output_thread_fpu_defines.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_4__ = type { %struct.TYPE_3__ }
%struct.TYPE_3__ = type { i32, i32* }

@THREAD_FPR0 = common dso_local global i32 0, align 4
@task_struct = common dso_local global i32 0, align 4
@thread = common dso_local global %struct.TYPE_4__ zeroinitializer, align 8
@THREAD_FPR1 = common dso_local global i32 0, align 4
@THREAD_FPR2 = common dso_local global i32 0, align 4
@THREAD_FPR3 = common dso_local global i32 0, align 4
@THREAD_FPR4 = common dso_local global i32 0, align 4
@THREAD_FPR5 = common dso_local global i32 0, align 4
@THREAD_FPR6 = common dso_local global i32 0, align 4
@THREAD_FPR7 = common dso_local global i32 0, align 4
@THREAD_FPR8 = common dso_local global i32 0, align 4
@THREAD_FPR9 = common dso_local global i32 0, align 4
@THREAD_FPR10 = common dso_local global i32 0, align 4
@THREAD_FPR11 = common dso_local global i32 0, align 4
@THREAD_FPR12 = common dso_local global i32 0, align 4
@THREAD_FPR13 = common dso_local global i32 0, align 4
@THREAD_FPR14 = common dso_local global i32 0, align 4
@THREAD_FPR15 = common dso_local global i32 0, align 4
@THREAD_FPR16 = common dso_local global i32 0, align 4
@THREAD_FPR17 = common dso_local global i32 0, align 4
@THREAD_FPR18 = common dso_local global i32 0, align 4
@THREAD_FPR19 = common dso_local global i32 0, align 4
@THREAD_FPR20 = common dso_local global i32 0, align 4
@THREAD_FPR21 = common dso_local global i32 0, align 4
@THREAD_FPR22 = common dso_local global i32 0, align 4
@THREAD_FPR23 = common dso_local global i32 0, align 4
@THREAD_FPR24 = common dso_local global i32 0, align 4
@THREAD_FPR25 = common dso_local global i32 0, align 4
@THREAD_FPR26 = common dso_local global i32 0, align 4
@THREAD_FPR27 = common dso_local global i32 0, align 4
@THREAD_FPR28 = common dso_local global i32 0, align 4
@THREAD_FPR29 = common dso_local global i32 0, align 4
@THREAD_FPR30 = common dso_local global i32 0, align 4
@THREAD_FPR31 = common dso_local global i32 0, align 4
@THREAD_FCR31 = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @output_thread_fpu_defines() #0 {
  %1 = load i32, i32* @THREAD_FPR0, align 4
  %2 = load i32, i32* @task_struct, align 4
  %3 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %4 = getelementptr inbounds i32, i32* %3, i64 0
  %5 = load i32, i32* %4, align 4
  %6 = call i32 @OFFSET(i32 %1, i32 %2, i32 %5)
  %7 = load i32, i32* @THREAD_FPR1, align 4
  %8 = load i32, i32* @task_struct, align 4
  %9 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %10 = getelementptr inbounds i32, i32* %9, i64 1
  %11 = load i32, i32* %10, align 4
  %12 = call i32 @OFFSET(i32 %7, i32 %8, i32 %11)
  %13 = load i32, i32* @THREAD_FPR2, align 4
  %14 = load i32, i32* @task_struct, align 4
  %15 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %16 = getelementptr inbounds i32, i32* %15, i64 2
  %17 = load i32, i32* %16, align 4
  %18 = call i32 @OFFSET(i32 %13, i32 %14, i32 %17)
  %19 = load i32, i32* @THREAD_FPR3, align 4
  %20 = load i32, i32* @task_struct, align 4
  %21 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 3
  %23 = load i32, i32* %22, align 4
  %24 = call i32 @OFFSET(i32 %19, i32 %20, i32 %23)
  %25 = load i32, i32* @THREAD_FPR4, align 4
  %26 = load i32, i32* @task_struct, align 4
  %27 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %28 = getelementptr inbounds i32, i32* %27, i64 4
  %29 = load i32, i32* %28, align 4
  %30 = call i32 @OFFSET(i32 %25, i32 %26, i32 %29)
  %31 = load i32, i32* @THREAD_FPR5, align 4
  %32 = load i32, i32* @task_struct, align 4
  %33 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 5
  %35 = load i32, i32* %34, align 4
  %36 = call i32 @OFFSET(i32 %31, i32 %32, i32 %35)
  %37 = load i32, i32* @THREAD_FPR6, align 4
  %38 = load i32, i32* @task_struct, align 4
  %39 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %40 = getelementptr inbounds i32, i32* %39, i64 6
  %41 = load i32, i32* %40, align 4
  %42 = call i32 @OFFSET(i32 %37, i32 %38, i32 %41)
  %43 = load i32, i32* @THREAD_FPR7, align 4
  %44 = load i32, i32* @task_struct, align 4
  %45 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %46 = getelementptr inbounds i32, i32* %45, i64 7
  %47 = load i32, i32* %46, align 4
  %48 = call i32 @OFFSET(i32 %43, i32 %44, i32 %47)
  %49 = load i32, i32* @THREAD_FPR8, align 4
  %50 = load i32, i32* @task_struct, align 4
  %51 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %52 = getelementptr inbounds i32, i32* %51, i64 8
  %53 = load i32, i32* %52, align 4
  %54 = call i32 @OFFSET(i32 %49, i32 %50, i32 %53)
  %55 = load i32, i32* @THREAD_FPR9, align 4
  %56 = load i32, i32* @task_struct, align 4
  %57 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 9
  %59 = load i32, i32* %58, align 4
  %60 = call i32 @OFFSET(i32 %55, i32 %56, i32 %59)
  %61 = load i32, i32* @THREAD_FPR10, align 4
  %62 = load i32, i32* @task_struct, align 4
  %63 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %64 = getelementptr inbounds i32, i32* %63, i64 10
  %65 = load i32, i32* %64, align 4
  %66 = call i32 @OFFSET(i32 %61, i32 %62, i32 %65)
  %67 = load i32, i32* @THREAD_FPR11, align 4
  %68 = load i32, i32* @task_struct, align 4
  %69 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 11
  %71 = load i32, i32* %70, align 4
  %72 = call i32 @OFFSET(i32 %67, i32 %68, i32 %71)
  %73 = load i32, i32* @THREAD_FPR12, align 4
  %74 = load i32, i32* @task_struct, align 4
  %75 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %76 = getelementptr inbounds i32, i32* %75, i64 12
  %77 = load i32, i32* %76, align 4
  %78 = call i32 @OFFSET(i32 %73, i32 %74, i32 %77)
  %79 = load i32, i32* @THREAD_FPR13, align 4
  %80 = load i32, i32* @task_struct, align 4
  %81 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 13
  %83 = load i32, i32* %82, align 4
  %84 = call i32 @OFFSET(i32 %79, i32 %80, i32 %83)
  %85 = load i32, i32* @THREAD_FPR14, align 4
  %86 = load i32, i32* @task_struct, align 4
  %87 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %88 = getelementptr inbounds i32, i32* %87, i64 14
  %89 = load i32, i32* %88, align 4
  %90 = call i32 @OFFSET(i32 %85, i32 %86, i32 %89)
  %91 = load i32, i32* @THREAD_FPR15, align 4
  %92 = load i32, i32* @task_struct, align 4
  %93 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 15
  %95 = load i32, i32* %94, align 4
  %96 = call i32 @OFFSET(i32 %91, i32 %92, i32 %95)
  %97 = load i32, i32* @THREAD_FPR16, align 4
  %98 = load i32, i32* @task_struct, align 4
  %99 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 16
  %101 = load i32, i32* %100, align 4
  %102 = call i32 @OFFSET(i32 %97, i32 %98, i32 %101)
  %103 = load i32, i32* @THREAD_FPR17, align 4
  %104 = load i32, i32* @task_struct, align 4
  %105 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %106 = getelementptr inbounds i32, i32* %105, i64 17
  %107 = load i32, i32* %106, align 4
  %108 = call i32 @OFFSET(i32 %103, i32 %104, i32 %107)
  %109 = load i32, i32* @THREAD_FPR18, align 4
  %110 = load i32, i32* @task_struct, align 4
  %111 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %112 = getelementptr inbounds i32, i32* %111, i64 18
  %113 = load i32, i32* %112, align 4
  %114 = call i32 @OFFSET(i32 %109, i32 %110, i32 %113)
  %115 = load i32, i32* @THREAD_FPR19, align 4
  %116 = load i32, i32* @task_struct, align 4
  %117 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %118 = getelementptr inbounds i32, i32* %117, i64 19
  %119 = load i32, i32* %118, align 4
  %120 = call i32 @OFFSET(i32 %115, i32 %116, i32 %119)
  %121 = load i32, i32* @THREAD_FPR20, align 4
  %122 = load i32, i32* @task_struct, align 4
  %123 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %124 = getelementptr inbounds i32, i32* %123, i64 20
  %125 = load i32, i32* %124, align 4
  %126 = call i32 @OFFSET(i32 %121, i32 %122, i32 %125)
  %127 = load i32, i32* @THREAD_FPR21, align 4
  %128 = load i32, i32* @task_struct, align 4
  %129 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %130 = getelementptr inbounds i32, i32* %129, i64 21
  %131 = load i32, i32* %130, align 4
  %132 = call i32 @OFFSET(i32 %127, i32 %128, i32 %131)
  %133 = load i32, i32* @THREAD_FPR22, align 4
  %134 = load i32, i32* @task_struct, align 4
  %135 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %136 = getelementptr inbounds i32, i32* %135, i64 22
  %137 = load i32, i32* %136, align 4
  %138 = call i32 @OFFSET(i32 %133, i32 %134, i32 %137)
  %139 = load i32, i32* @THREAD_FPR23, align 4
  %140 = load i32, i32* @task_struct, align 4
  %141 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %142 = getelementptr inbounds i32, i32* %141, i64 23
  %143 = load i32, i32* %142, align 4
  %144 = call i32 @OFFSET(i32 %139, i32 %140, i32 %143)
  %145 = load i32, i32* @THREAD_FPR24, align 4
  %146 = load i32, i32* @task_struct, align 4
  %147 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %148 = getelementptr inbounds i32, i32* %147, i64 24
  %149 = load i32, i32* %148, align 4
  %150 = call i32 @OFFSET(i32 %145, i32 %146, i32 %149)
  %151 = load i32, i32* @THREAD_FPR25, align 4
  %152 = load i32, i32* @task_struct, align 4
  %153 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %154 = getelementptr inbounds i32, i32* %153, i64 25
  %155 = load i32, i32* %154, align 4
  %156 = call i32 @OFFSET(i32 %151, i32 %152, i32 %155)
  %157 = load i32, i32* @THREAD_FPR26, align 4
  %158 = load i32, i32* @task_struct, align 4
  %159 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %160 = getelementptr inbounds i32, i32* %159, i64 26
  %161 = load i32, i32* %160, align 4
  %162 = call i32 @OFFSET(i32 %157, i32 %158, i32 %161)
  %163 = load i32, i32* @THREAD_FPR27, align 4
  %164 = load i32, i32* @task_struct, align 4
  %165 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %166 = getelementptr inbounds i32, i32* %165, i64 27
  %167 = load i32, i32* %166, align 4
  %168 = call i32 @OFFSET(i32 %163, i32 %164, i32 %167)
  %169 = load i32, i32* @THREAD_FPR28, align 4
  %170 = load i32, i32* @task_struct, align 4
  %171 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %172 = getelementptr inbounds i32, i32* %171, i64 28
  %173 = load i32, i32* %172, align 4
  %174 = call i32 @OFFSET(i32 %169, i32 %170, i32 %173)
  %175 = load i32, i32* @THREAD_FPR29, align 4
  %176 = load i32, i32* @task_struct, align 4
  %177 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %178 = getelementptr inbounds i32, i32* %177, i64 29
  %179 = load i32, i32* %178, align 4
  %180 = call i32 @OFFSET(i32 %175, i32 %176, i32 %179)
  %181 = load i32, i32* @THREAD_FPR30, align 4
  %182 = load i32, i32* @task_struct, align 4
  %183 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %184 = getelementptr inbounds i32, i32* %183, i64 30
  %185 = load i32, i32* %184, align 4
  %186 = call i32 @OFFSET(i32 %181, i32 %182, i32 %185)
  %187 = load i32, i32* @THREAD_FPR31, align 4
  %188 = load i32, i32* @task_struct, align 4
  %189 = load i32*, i32** getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 1), align 8
  %190 = getelementptr inbounds i32, i32* %189, i64 31
  %191 = load i32, i32* %190, align 4
  %192 = call i32 @OFFSET(i32 %187, i32 %188, i32 %191)
  %193 = load i32, i32* @THREAD_FCR31, align 4
  %194 = load i32, i32* @task_struct, align 4
  %195 = load i32, i32* getelementptr inbounds (%struct.TYPE_4__, %struct.TYPE_4__* @thread, i32 0, i32 0, i32 0), align 8
  %196 = call i32 @OFFSET(i32 %193, i32 %194, i32 %195)
  %197 = call i32 (...) @BLANK()
  ret void
}

declare dso_local i32 @OFFSET(i32, i32, i32) #1

declare dso_local i32 @BLANK(...) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
