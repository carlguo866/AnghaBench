; ModuleID = '/home/carl/AnghaBench/fastsocket/kernel/arch/frv/kernel/extr_asm-offsets.c_foo.c'
source_filename = "/home/carl/AnghaBench/fastsocket/kernel/arch/frv/kernel/extr_asm-offsets.c_foo.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.TYPE_7__ = type { i32**, i32**, i32*, i32*, i32 }
%struct.TYPE_5__ = type { i32* }
%struct.TYPE_6__ = type { %struct.TYPE_6__*, %struct.TYPE_6__*, %struct.TYPE_6__*, %struct.TYPE_6__*, %struct.TYPE_6__*, %struct.TYPE_6__* }

@TI_TASK = common dso_local global i32 0, align 4
@thread_info = common dso_local global i32 0, align 4
@task = common dso_local global i32 0, align 4
@TI_EXEC_DOMAIN = common dso_local global i32 0, align 4
@exec_domain = common dso_local global i32 0, align 4
@TI_FLAGS = common dso_local global i32 0, align 4
@flags = common dso_local global i32 0, align 4
@TI_STATUS = common dso_local global i32 0, align 4
@status = common dso_local global i32 0, align 4
@TI_CPU = common dso_local global i32 0, align 4
@cpu = common dso_local global i32 0, align 4
@TI_PREEMPT_COUNT = common dso_local global i32 0, align 4
@preempt_count = common dso_local global i32 0, align 4
@TI_ADDR_LIMIT = common dso_local global i32 0, align 4
@addr_limit = common dso_local global i32 0, align 4
@TI_RESTART_BLOCK = common dso_local global i32 0, align 4
@restart_block = common dso_local global i32 0, align 4
@REG_PSR = common dso_local global i32 0, align 4
@psr = common dso_local global i32 0, align 4
@REG_ISR = common dso_local global i32 0, align 4
@isr = common dso_local global i32 0, align 4
@REG_CCR = common dso_local global i32 0, align 4
@ccr = common dso_local global i32 0, align 4
@REG_CCCR = common dso_local global i32 0, align 4
@cccr = common dso_local global i32 0, align 4
@REG_LR = common dso_local global i32 0, align 4
@lr = common dso_local global i32 0, align 4
@REG_LCR = common dso_local global i32 0, align 4
@lcr = common dso_local global i32 0, align 4
@REG_PC = common dso_local global i32 0, align 4
@pc = common dso_local global i32 0, align 4
@REG__STATUS = common dso_local global i32 0, align 4
@__status = common dso_local global i32 0, align 4
@REG_SYSCALLNO = common dso_local global i32 0, align 4
@syscallno = common dso_local global i32 0, align 4
@REG_ORIG_GR8 = common dso_local global i32 0, align 4
@orig_gr8 = common dso_local global i32 0, align 4
@REG_GNER0 = common dso_local global i32 0, align 4
@gner0 = common dso_local global i32 0, align 4
@REG_GNER1 = common dso_local global i32 0, align 4
@gner1 = common dso_local global i32 0, align 4
@REG_IACC0 = common dso_local global i32 0, align 4
@iacc0 = common dso_local global i32 0, align 4
@REG_TBR = common dso_local global i32 0, align 4
@tbr = common dso_local global i32 0, align 4
@REG_GR0 = common dso_local global i32 0, align 4
@REG__END = common dso_local global i32 0, align 4
@REG_DCR = common dso_local global i32 0, align 4
@debug = common dso_local global %struct.TYPE_7__ zeroinitializer, align 8
@REG_IBAR0 = common dso_local global i32 0, align 4
@REG_DBAR0 = common dso_local global i32 0, align 4
@REG_DBDR00 = common dso_local global i32 0, align 4
@REG_DBMR00 = common dso_local global i32 0, align 4
@__INT_GR0 = common dso_local global i32 0, align 4
@i = common dso_local global %struct.TYPE_5__ zeroinitializer, align 8
@__USER_FPMEDIA = common dso_local global i32 0, align 4
@f = common dso_local global %struct.TYPE_6__ zeroinitializer, align 8
@__FPMEDIA_FR0 = common dso_local global i32 0, align 4
@__FPMEDIA_FNER0 = common dso_local global i32 0, align 4
@__FPMEDIA_MSR0 = common dso_local global i32 0, align 4
@__FPMEDIA_ACC0 = common dso_local global i32 0, align 4
@__FPMEDIA_ACCG0 = common dso_local global i32 0, align 4
@__FPMEDIA_FSR0 = common dso_local global i32 0, align 4
@NR_PT_REGS = common dso_local global i32 0, align 4
@NR_USER_INT_REGS = common dso_local global i32 0, align 4
@NR_USER_FPMEDIA_REGS = common dso_local global i32 0, align 4
@NR_USER_CONTEXT = common dso_local global i32 0, align 4
@FRV_FRAME0_SIZE = common dso_local global i32 0, align 4
@__THREAD_FRAME = common dso_local global i32 0, align 4
@thread_struct = common dso_local global i32 0, align 4
@frame = common dso_local global i32 0, align 4
@__THREAD_CURR = common dso_local global i32 0, align 4
@curr = common dso_local global i32 0, align 4
@__THREAD_SP = common dso_local global i32 0, align 4
@sp = common dso_local global i32 0, align 4
@__THREAD_FP = common dso_local global i32 0, align 4
@fp = common dso_local global i32 0, align 4
@__THREAD_LR = common dso_local global i32 0, align 4
@__THREAD_PC = common dso_local global i32 0, align 4
@__THREAD_GR16 = common dso_local global i32 0, align 4
@gr = common dso_local global i32* null, align 8
@__THREAD_SCHED_LR = common dso_local global i32 0, align 4
@sched_lr = common dso_local global i32 0, align 4
@__THREAD_FRAME0 = common dso_local global i32 0, align 4
@frame0 = common dso_local global i32 0, align 4
@__THREAD_USER = common dso_local global i32 0, align 4
@user = common dso_local global i32 0, align 4
@DEBUG_BPSR = common dso_local global i32 0, align 4
@frv_debug_status = common dso_local global i32 0, align 4
@bpsr = common dso_local global i32 0, align 4
@DEBUG_DCR = common dso_local global i32 0, align 4
@dcr = common dso_local global i32 0, align 4
@DEBUG_BRR = common dso_local global i32 0, align 4
@brr = common dso_local global i32 0, align 4
@DEBUG_NMAR = common dso_local global i32 0, align 4
@nmar = common dso_local global i32 0, align 4

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @foo() #0 {
  %1 = load i32, i32* @TI_TASK, align 4
  %2 = load i32, i32* @thread_info, align 4
  %3 = load i32, i32* @task, align 4
  %4 = call i32 @OFFSET(i32 %1, i32 %2, i32 %3)
  %5 = load i32, i32* @TI_EXEC_DOMAIN, align 4
  %6 = load i32, i32* @thread_info, align 4
  %7 = load i32, i32* @exec_domain, align 4
  %8 = call i32 @OFFSET(i32 %5, i32 %6, i32 %7)
  %9 = load i32, i32* @TI_FLAGS, align 4
  %10 = load i32, i32* @thread_info, align 4
  %11 = load i32, i32* @flags, align 4
  %12 = call i32 @OFFSET(i32 %9, i32 %10, i32 %11)
  %13 = load i32, i32* @TI_STATUS, align 4
  %14 = load i32, i32* @thread_info, align 4
  %15 = load i32, i32* @status, align 4
  %16 = call i32 @OFFSET(i32 %13, i32 %14, i32 %15)
  %17 = load i32, i32* @TI_CPU, align 4
  %18 = load i32, i32* @thread_info, align 4
  %19 = load i32, i32* @cpu, align 4
  %20 = call i32 @OFFSET(i32 %17, i32 %18, i32 %19)
  %21 = load i32, i32* @TI_PREEMPT_COUNT, align 4
  %22 = load i32, i32* @thread_info, align 4
  %23 = load i32, i32* @preempt_count, align 4
  %24 = call i32 @OFFSET(i32 %21, i32 %22, i32 %23)
  %25 = load i32, i32* @TI_ADDR_LIMIT, align 4
  %26 = load i32, i32* @thread_info, align 4
  %27 = load i32, i32* @addr_limit, align 4
  %28 = call i32 @OFFSET(i32 %25, i32 %26, i32 %27)
  %29 = load i32, i32* @TI_RESTART_BLOCK, align 4
  %30 = load i32, i32* @thread_info, align 4
  %31 = load i32, i32* @restart_block, align 4
  %32 = call i32 @OFFSET(i32 %29, i32 %30, i32 %31)
  %33 = call i32 (...) @BLANK()
  %34 = load i32, i32* @REG_PSR, align 4
  %35 = load i32, i32* @psr, align 4
  %36 = call i32 @DEF_PTREG(i32 %34, i32 %35)
  %37 = load i32, i32* @REG_ISR, align 4
  %38 = load i32, i32* @isr, align 4
  %39 = call i32 @DEF_PTREG(i32 %37, i32 %38)
  %40 = load i32, i32* @REG_CCR, align 4
  %41 = load i32, i32* @ccr, align 4
  %42 = call i32 @DEF_PTREG(i32 %40, i32 %41)
  %43 = load i32, i32* @REG_CCCR, align 4
  %44 = load i32, i32* @cccr, align 4
  %45 = call i32 @DEF_PTREG(i32 %43, i32 %44)
  %46 = load i32, i32* @REG_LR, align 4
  %47 = load i32, i32* @lr, align 4
  %48 = call i32 @DEF_PTREG(i32 %46, i32 %47)
  %49 = load i32, i32* @REG_LCR, align 4
  %50 = load i32, i32* @lcr, align 4
  %51 = call i32 @DEF_PTREG(i32 %49, i32 %50)
  %52 = load i32, i32* @REG_PC, align 4
  %53 = load i32, i32* @pc, align 4
  %54 = call i32 @DEF_PTREG(i32 %52, i32 %53)
  %55 = load i32, i32* @REG__STATUS, align 4
  %56 = load i32, i32* @__status, align 4
  %57 = call i32 @DEF_PTREG(i32 %55, i32 %56)
  %58 = load i32, i32* @REG_SYSCALLNO, align 4
  %59 = load i32, i32* @syscallno, align 4
  %60 = call i32 @DEF_PTREG(i32 %58, i32 %59)
  %61 = load i32, i32* @REG_ORIG_GR8, align 4
  %62 = load i32, i32* @orig_gr8, align 4
  %63 = call i32 @DEF_PTREG(i32 %61, i32 %62)
  %64 = load i32, i32* @REG_GNER0, align 4
  %65 = load i32, i32* @gner0, align 4
  %66 = call i32 @DEF_PTREG(i32 %64, i32 %65)
  %67 = load i32, i32* @REG_GNER1, align 4
  %68 = load i32, i32* @gner1, align 4
  %69 = call i32 @DEF_PTREG(i32 %67, i32 %68)
  %70 = load i32, i32* @REG_IACC0, align 4
  %71 = load i32, i32* @iacc0, align 4
  %72 = call i32 @DEF_PTREG(i32 %70, i32 %71)
  %73 = load i32, i32* @REG_TBR, align 4
  %74 = load i32, i32* @tbr, align 4
  %75 = call i32 @DEF_PTREG(i32 %73, i32 %74)
  %76 = load i32, i32* @REG_GR0, align 4
  %77 = load i32, i32* @tbr, align 4
  %78 = call i32 @DEF_PTREG(i32 %76, i32 %77)
  %79 = load i32, i32* @REG__END, align 4
  %80 = call i32 @DEFINE(i32 %79, i32 4)
  %81 = call i32 (...) @BLANK()
  %82 = load i32, i32* @REG_DCR, align 4
  %83 = load i32, i32* getelementptr inbounds (%struct.TYPE_7__, %struct.TYPE_7__* @debug, i32 0, i32 4), align 8
  %84 = call i32 @DEF_0REG(i32 %82, i32 %83)
  %85 = load i32, i32* @REG_IBAR0, align 4
  %86 = load i32*, i32** getelementptr inbounds (%struct.TYPE_7__, %struct.TYPE_7__* @debug, i32 0, i32 3), align 8
  %87 = getelementptr inbounds i32, i32* %86, i64 0
  %88 = load i32, i32* %87, align 4
  %89 = call i32 @DEF_0REG(i32 %85, i32 %88)
  %90 = load i32, i32* @REG_DBAR0, align 4
  %91 = load i32*, i32** getelementptr inbounds (%struct.TYPE_7__, %struct.TYPE_7__* @debug, i32 0, i32 2), align 8
  %92 = getelementptr inbounds i32, i32* %91, i64 0
  %93 = load i32, i32* %92, align 4
  %94 = call i32 @DEF_0REG(i32 %90, i32 %93)
  %95 = load i32, i32* @REG_DBDR00, align 4
  %96 = load i32**, i32*** getelementptr inbounds (%struct.TYPE_7__, %struct.TYPE_7__* @debug, i32 0, i32 1), align 8
  %97 = getelementptr inbounds i32*, i32** %96, i64 0
  %98 = load i32*, i32** %97, align 8
  %99 = getelementptr inbounds i32, i32* %98, i64 0
  %100 = load i32, i32* %99, align 4
  %101 = call i32 @DEF_0REG(i32 %95, i32 %100)
  %102 = load i32, i32* @REG_DBMR00, align 4
  %103 = load i32**, i32*** getelementptr inbounds (%struct.TYPE_7__, %struct.TYPE_7__* @debug, i32 0, i32 0), align 8
  %104 = getelementptr inbounds i32*, i32** %103, i64 0
  %105 = load i32*, i32** %104, align 8
  %106 = getelementptr inbounds i32, i32* %105, i64 0
  %107 = load i32, i32* %106, align 4
  %108 = call i32 @DEF_0REG(i32 %102, i32 %107)
  %109 = call i32 (...) @BLANK()
  %110 = load i32, i32* @__INT_GR0, align 4
  %111 = load i32*, i32** getelementptr inbounds (%struct.TYPE_5__, %struct.TYPE_5__* @i, i32 0, i32 0), align 8
  %112 = getelementptr inbounds i32, i32* %111, i64 0
  %113 = load i32, i32* %112, align 4
  %114 = call i32 @DEF_IREG(i32 %110, i32 %113)
  %115 = load i32, i32* @__USER_FPMEDIA, align 4
  %116 = call i32 @DEF_FREG(i32 %115, %struct.TYPE_6__* byval(%struct.TYPE_6__) align 8 @f)
  %117 = load i32, i32* @__FPMEDIA_FR0, align 4
  %118 = load %struct.TYPE_6__*, %struct.TYPE_6__** getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @f, i32 0, i32 5), align 8
  %119 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %118, i64 0
  %120 = call i32 @DEF_FREG(i32 %117, %struct.TYPE_6__* byval(%struct.TYPE_6__) align 8 %119)
  %121 = load i32, i32* @__FPMEDIA_FNER0, align 4
  %122 = load %struct.TYPE_6__*, %struct.TYPE_6__** getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @f, i32 0, i32 4), align 8
  %123 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %122, i64 0
  %124 = call i32 @DEF_FREG(i32 %121, %struct.TYPE_6__* byval(%struct.TYPE_6__) align 8 %123)
  %125 = load i32, i32* @__FPMEDIA_MSR0, align 4
  %126 = load %struct.TYPE_6__*, %struct.TYPE_6__** getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @f, i32 0, i32 3), align 8
  %127 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %126, i64 0
  %128 = call i32 @DEF_FREG(i32 %125, %struct.TYPE_6__* byval(%struct.TYPE_6__) align 8 %127)
  %129 = load i32, i32* @__FPMEDIA_ACC0, align 4
  %130 = load %struct.TYPE_6__*, %struct.TYPE_6__** getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @f, i32 0, i32 2), align 8
  %131 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %130, i64 0
  %132 = call i32 @DEF_FREG(i32 %129, %struct.TYPE_6__* byval(%struct.TYPE_6__) align 8 %131)
  %133 = load i32, i32* @__FPMEDIA_ACCG0, align 4
  %134 = load %struct.TYPE_6__*, %struct.TYPE_6__** getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @f, i32 0, i32 1), align 8
  %135 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %134, i64 0
  %136 = call i32 @DEF_FREG(i32 %133, %struct.TYPE_6__* byval(%struct.TYPE_6__) align 8 %135)
  %137 = load i32, i32* @__FPMEDIA_FSR0, align 4
  %138 = load %struct.TYPE_6__*, %struct.TYPE_6__** getelementptr inbounds (%struct.TYPE_6__, %struct.TYPE_6__* @f, i32 0, i32 0), align 8
  %139 = getelementptr inbounds %struct.TYPE_6__, %struct.TYPE_6__* %138, i64 0
  %140 = call i32 @DEF_FREG(i32 %137, %struct.TYPE_6__* byval(%struct.TYPE_6__) align 8 %139)
  %141 = call i32 (...) @BLANK()
  %142 = load i32, i32* @NR_PT_REGS, align 4
  %143 = call i32 @DEFINE(i32 %142, i32 1)
  %144 = load i32, i32* @NR_USER_INT_REGS, align 4
  %145 = call i32 @DEFINE(i32 %144, i32 1)
  %146 = load i32, i32* @NR_USER_FPMEDIA_REGS, align 4
  %147 = call i32 @DEFINE(i32 %146, i32 1)
  %148 = load i32, i32* @NR_USER_CONTEXT, align 4
  %149 = call i32 @DEFINE(i32 %148, i32 1)
  %150 = load i32, i32* @FRV_FRAME0_SIZE, align 4
  %151 = call i32 @DEFINE(i32 %150, i32 4)
  %152 = call i32 (...) @BLANK()
  %153 = load i32, i32* @__THREAD_FRAME, align 4
  %154 = load i32, i32* @thread_struct, align 4
  %155 = load i32, i32* @frame, align 4
  %156 = call i32 @OFFSET(i32 %153, i32 %154, i32 %155)
  %157 = load i32, i32* @__THREAD_CURR, align 4
  %158 = load i32, i32* @thread_struct, align 4
  %159 = load i32, i32* @curr, align 4
  %160 = call i32 @OFFSET(i32 %157, i32 %158, i32 %159)
  %161 = load i32, i32* @__THREAD_SP, align 4
  %162 = load i32, i32* @thread_struct, align 4
  %163 = load i32, i32* @sp, align 4
  %164 = call i32 @OFFSET(i32 %161, i32 %162, i32 %163)
  %165 = load i32, i32* @__THREAD_FP, align 4
  %166 = load i32, i32* @thread_struct, align 4
  %167 = load i32, i32* @fp, align 4
  %168 = call i32 @OFFSET(i32 %165, i32 %166, i32 %167)
  %169 = load i32, i32* @__THREAD_LR, align 4
  %170 = load i32, i32* @thread_struct, align 4
  %171 = load i32, i32* @lr, align 4
  %172 = call i32 @OFFSET(i32 %169, i32 %170, i32 %171)
  %173 = load i32, i32* @__THREAD_PC, align 4
  %174 = load i32, i32* @thread_struct, align 4
  %175 = load i32, i32* @pc, align 4
  %176 = call i32 @OFFSET(i32 %173, i32 %174, i32 %175)
  %177 = load i32, i32* @__THREAD_GR16, align 4
  %178 = load i32, i32* @thread_struct, align 4
  %179 = load i32*, i32** @gr, align 8
  %180 = getelementptr inbounds i32, i32* %179, i64 0
  %181 = load i32, i32* %180, align 4
  %182 = call i32 @OFFSET(i32 %177, i32 %178, i32 %181)
  %183 = load i32, i32* @__THREAD_SCHED_LR, align 4
  %184 = load i32, i32* @thread_struct, align 4
  %185 = load i32, i32* @sched_lr, align 4
  %186 = call i32 @OFFSET(i32 %183, i32 %184, i32 %185)
  %187 = load i32, i32* @__THREAD_FRAME0, align 4
  %188 = load i32, i32* @thread_struct, align 4
  %189 = load i32, i32* @frame0, align 4
  %190 = call i32 @OFFSET(i32 %187, i32 %188, i32 %189)
  %191 = load i32, i32* @__THREAD_USER, align 4
  %192 = load i32, i32* @thread_struct, align 4
  %193 = load i32, i32* @user, align 4
  %194 = call i32 @OFFSET(i32 %191, i32 %192, i32 %193)
  %195 = call i32 (...) @BLANK()
  %196 = load i32, i32* @DEBUG_BPSR, align 4
  %197 = load i32, i32* @frv_debug_status, align 4
  %198 = load i32, i32* @bpsr, align 4
  %199 = call i32 @OFFSET(i32 %196, i32 %197, i32 %198)
  %200 = load i32, i32* @DEBUG_DCR, align 4
  %201 = load i32, i32* @frv_debug_status, align 4
  %202 = load i32, i32* @dcr, align 4
  %203 = call i32 @OFFSET(i32 %200, i32 %201, i32 %202)
  %204 = load i32, i32* @DEBUG_BRR, align 4
  %205 = load i32, i32* @frv_debug_status, align 4
  %206 = load i32, i32* @brr, align 4
  %207 = call i32 @OFFSET(i32 %204, i32 %205, i32 %206)
  %208 = load i32, i32* @DEBUG_NMAR, align 4
  %209 = load i32, i32* @frv_debug_status, align 4
  %210 = load i32, i32* @nmar, align 4
  %211 = call i32 @OFFSET(i32 %208, i32 %209, i32 %210)
  %212 = call i32 (...) @BLANK()
  ret void
}

declare dso_local i32 @OFFSET(i32, i32, i32) #1

declare dso_local i32 @BLANK(...) #1

declare dso_local i32 @DEF_PTREG(i32, i32) #1

declare dso_local i32 @DEFINE(i32, i32) #1

declare dso_local i32 @DEF_0REG(i32, i32) #1

declare dso_local i32 @DEF_IREG(i32, i32) #1

declare dso_local i32 @DEF_FREG(i32, %struct.TYPE_6__* byval(%struct.TYPE_6__) align 8) #1

attributes #0 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0}
!llvm.ident = !{!1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{!"clang version 10.0.1 (https://github.com/wsmoses/llvm-project-tok c8e5003577614e72d6d18a216e6a09771e1fcce4)"}
